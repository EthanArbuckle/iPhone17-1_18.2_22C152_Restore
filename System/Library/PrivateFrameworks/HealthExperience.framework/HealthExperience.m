uint64_t dispatch thunk of SectionedDataSourceItem.uniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t static AnalyticsTransforming.valueOrNilString(for:)(uint64_t a1)
{
  sub_1C27B9E94(a1, (uint64_t)&v3);
  if (v4)
  {
    sub_1C2807E74(&v3, v5);
    sub_1C27D3780((uint64_t)v5, (uint64_t)&v3);
    uint64_t v1 = sub_1C28CD750();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v5);
  }
  else
  {
    sub_1C27B9E38((uint64_t)&v3);
    return 7104878;
  }
  return v1;
}

uint64_t sub_1C27B9E38(uint64_t a1)
{
  sub_1C27B9F20();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C27B9E94(uint64_t a1, uint64_t a2)
{
  sub_1C27D6CB8(0, (unint64_t *)&qword_1EBB77160, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C27B9F20()
{
  if (!qword_1EBB77160)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB77160);
    }
  }
}

uint64_t HKKeyValueDomainObject.init(keyValueDomain:key:fallbackValue:isAppleInternalOnly:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char *a7@<X8>)
{
  *(void *)a7 = a1;
  *((void *)a7 + 1) = a2;
  *((void *)a7 + 2) = a3;
  uint64_t v11 = type metadata accessor for HKKeyValueDomainObject();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(&a7[*(int *)(v11 + 32)], a4, a6);
  a7[*(int *)(v11 + 36)] = a5;
  return result;
}

uint64_t type metadata accessor for HKKeyValueDomainObject()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C27BA028()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 88) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 112));
  swift_bridgeObjectRelease();

  swift_release();
  sub_1C27CEA68(v0 + *(void *)(*(void *)v0 + 144));
  return v0;
}

uint64_t type metadata accessor for HKKeyValueDomainDateValue()
{
  return self;
}

uint64_t destroy for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t *a1)
{
  type metadata accessor for ImageRepresentation();
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      return sub_1C27E2870(v3, v4);
    case 1:
      swift_bridgeObjectRelease();
      sub_1C27CC3FC();
      v6 = (char *)a1 + *(int *)(v5 + 48);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v8 = v7;
      uint64_t v10 = *(void *)(v7 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
      if (!result)
      {
        v9 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
        return v9(v6, v8);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C27BA294()
{
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

void sub_1C27BA344()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B0B8]), sel_init);
  unint64_t v1 = _s16HealthExperience14MedicalIDCacheC11globalCache3forACSo13HKHealthStoreC_tFZ_0(v0);

  qword_1EBB75868 = (uint64_t)v1;
}

void sub_1C27BA390(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C28CC4B0();
    a3(255);
    sub_1C27C7638(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    unint64_t v5 = sub_1C28CE400();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t (*static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.getter())()
{
  swift_beginAccess();
  id v0 = off_1EBB76980;
  swift_retain();
  return v0;
}

void DisplayCategoryColorProvider.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = objc_msgSend(a1, sel_categoryID);

  *a2 = v4;
}

void *sub_1C27BA4D4(void *a1, void *a2)
{
  *a1 = *a2;
  unint64_t v5 = a2 + 1;
  uint64_t v4 = a2[1];
  swift_retain();
  if (v4)
  {
    uint64_t v6 = a2[2];
    a1[1] = v4;
    a1[2] = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 1) = *v5;
  }
  return a1;
}

uint64_t sub_1C27BA540(void *a1)
{
  return sub_1C28CD0B0();
}

uint64_t NotificationSettingsSupport.Features.sortHintValue.getter()
{
  char v1 = *v0;
  NotificationSettingsSupport.Features.orderedElements.getter();
  char v9 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C27D9214(v2);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74B8((uint64_t (*)(char *))sub_1C27D757C, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t static HKCloudSyncObserver.statusPublisher(for:)()
{
  return sub_1C28CDC70();
}

void sub_1C27BA640(uint64_t a1, void *a2, void *a3)
{
  char v5 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData);
  *(void *)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData) = a2;
  id v6 = a2;

  uint64_t v7 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError);
  *(void *)(a1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError) = a3;
  id v8 = a3;
}

uint64_t destroy for PromotionalTileConfiguration.Hero(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2)
  {
LABEL_5:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  if (result == 1)
  {
    type metadata accessor for ImageRepresentation();
    uint64_t result = swift_getEnumCaseMultiPayload();
    if (result == 2)
    {
      uint64_t v4 = *(void *)a1;
      unint64_t v5 = *(void *)(a1 + 8);
      return sub_1C27E2870(v4, v5);
    }
    if (result != 1)
    {
      if (result) {
        return result;
      }
      goto LABEL_5;
    }
    swift_bridgeObjectRelease();
    sub_1C27CC3FC();
    uint64_t v7 = a1 + *(int *)(v6 + 48);
    sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
    uint64_t v9 = v8;
    uint64_t v22 = *(void *)(v8 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 48))(v7, 1, v8);
    if (result) {
      return result;
    }
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8);
    uint64_t v11 = v7;
    uint64_t v12 = v9;
LABEL_27:
    return v10(v11, v12);
  }
  if (result) {
    return result;
  }
  type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_5;
  }
  type metadata accessor for ImageRepresentation();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 2:
      sub_1C27E2870(*(void *)a1, *(void *)(a1 + 8));
      break;
    case 1:
      swift_bridgeObjectRelease();
      sub_1C27CC3FC();
      uint64_t v14 = a1 + *(int *)(v13 + 48);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v16 = v15;
      uint64_t v17 = *(void *)(v15 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v14, 1, v15)) {
        (*(void (**)(uint64_t, uint64_t))(v17 + 8))(v14, v16);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  sub_1C28C4FAC();
  uint64_t v19 = v18;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v20 = a1 + *(int *)(v19 + 80);
  type metadata accessor for ColorRepresentation(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8);
    uint64_t v12 = v21;
    uint64_t v11 = v20;
    goto LABEL_27;
  }
  return result;
}

uint64_t Publisher<>.mapToSourceProfiles(includeAgnostic:)(char a1)
{
  *(unsigned char *)(swift_allocObject() + 16) = a1;
  sub_1C27D91BC();
  sub_1C28CD330();

  return swift_release();
}

HealthExperience::CloudSyncRestoreState_optional __swiftcall CloudSyncRestoreState.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_1C28CE460();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_1C27BAAE8(unint64_t a1, uint64_t (*a2)(id), uint64_t a3)
{
  unint64_t v6 = a1;
  uint64_t v18 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v6 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v6 & 0xC000000000000001;
      unint64_t v15 = v6;
      while (v17)
      {
        id v9 = (id)MEMORY[0x1C875F6E0](v8, v6);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        uint64_t v12 = a3;
        char v13 = a2(v9);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_1C28CE1C0();
          sub_1C28CE200();
          unint64_t v6 = v15;
          sub_1C28CE210();
          sub_1C28CE1D0();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v18;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_1C28CE3B0();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v6 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x1E4FBC860];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_1C27BAC90()
{
  sub_1C28CD030();
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t NotificationSettingsSupport.Defaults.sortHintValue.getter()
{
  char v1 = *v0;
  NotificationSettingsSupport.Defaults.orderedElements.getter();
  char v9 = v1;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C27D922C(v2);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74B8((uint64_t (*)(char *))sub_1C27D7560, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6)
  {
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

uint64_t sub_1C27BADF4(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000011;
  unint64_t v4 = 0x80000001C28DACE0;
  switch(a1)
  {
    case 1:
      unint64_t v4 = 0xE600000000000000;
      unint64_t v3 = 0x64656C696166;
      break;
    case 2:
      unint64_t v4 = 0x80000001C28DAD00;
      unint64_t v3 = 0xD000000000000010;
      break;
    case 3:
      unint64_t v3 = 0x6574656C706D6F63;
      unint64_t v4 = 0xE900000000000064;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD000000000000011;
  unint64_t v6 = 0x80000001C28DACE0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v3 == 0x64656C696166) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0x80000001C28DAD00;
      unint64_t v5 = 0xD000000000000010;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE900000000000064;
      if (v3 == 0x6574656C706D6F63) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v3 != v5) {
        goto LABEL_14;
      }
LABEL_12:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t type metadata accessor for MedicalIDFetchOperation()
{
  return self;
}

uint64_t sub_1C27BAF90()
{
  uint64_t result = sub_1C28CCE80();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for CloudSyncEventPublisherObserver()
{
  return self;
}

uint64_t sub_1C27BB054(void *a1)
{
  sub_1C27D5A44(0, &qword_1EBB75798, (uint64_t (*)(void))sub_1C27DA6F8, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA6F8();
  sub_1C28CE800();
  sub_1C28CE5D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_1C27BB1B8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1C28CC4B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C27BA390(0, &qword_1EBB77138, (void (*)(uint64_t))type metadata accessor for MedicalIDCache);
  int v46 = a2;
  uint64_t v10 = sub_1C28CE3D0();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v9 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v9 + 32);
  uint64_t v14 = *(void *)(v9 + 64);
  v42 = (void *)(v9 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  unint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      id v30 = *(id *)(*(void *)(v11 + 56) + 8 * v23);
    }
    sub_1C27C7638(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    uint64_t result = sub_1C28CD670();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_1C27BB5F4()
{
  return sub_1C28CDC70();
}

void sub_1C27BB618(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (*a1)
  {
    uint64_t v2 = *(void **)(v1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError);
    id v5 = *(id *)(v1 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData);
    id v3 = v5;
    id v4 = v2;
  }
  else
  {
    uint64_t v2 = 0;
    id v5 = 0;
  }
  sub_1C27C5DA4(v5, v2);
}

id sub_1C27BB6AC()
{
  id result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
  qword_1EBB75D90 = (uint64_t)result;
  return result;
}

uint64_t type metadata accessor for ManagedProfileConnection()
{
  return self;
}

uint64_t sub_1C27BB704()
{
  sub_1C28CC650();
  swift_allocObject();
  uint64_t result = sub_1C28CC640();
  qword_1EBB770A8 = result;
  return result;
}

uint64_t sub_1C27BB744(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C27D47D8(&qword_1EBB76510, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
  uint64_t result = sub_1C27D47D8(&qword_1EBB76508, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C27BB7C8()
{
  return sub_1C27CE964();
}

uint64_t sub_1C27BB7EC(void *a1)
{
  return sub_1C27CE538(a1);
}

uint64_t sub_1C27BB810(void *a1)
{
  return ImageRepresentation.encode(to:)(a1);
}

uint64_t sub_1C27BB828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27BB850(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C27BB850(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x79547463656A626FLL && a2 == 0xEA00000000006570;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4379616C70736964 && a2 == 0xEF79726F67657461 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6369746E616D6573 && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 6449010 && a2 == 0xE300000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t Publisher.buffer<A>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](a1);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v13, v15, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, a1, a3);
  return Publishers.BufferUpstreamPublisher.init(upstream:gatePublisher:)((uint64_t)v13, (uint64_t)v11, a2, a3, a4);
}

uint64_t Publishers.BufferUpstreamPublisher.init(upstream:gatePublisher:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for Publishers.BufferUpstreamPublisher();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for Publishers.BufferUpstreamPublisher()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C27BBC98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v4);
  sub_1C27BBDA4(a1, (uint64_t)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  int v7 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a2, v7 ^ 1u, 1, AssociatedTypeWitness);
}

uint64_t sub_1C27BBDA4(uint64_t a1, uint64_t a2)
{
  sub_1C27BBE08();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C27BBE08()
{
  if (!qword_1EBB771E0)
  {
    sub_1C28CC450();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB771E0);
    }
  }
}

void sub_1C27BBE60(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x1C8760AB0](v1);
  if (v2)
  {
    id v3 = (void *)v2;
    MEMORY[0x1F4188790](v2);
    sub_1C28CCB20();
  }
}

CNContact __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> CNContactStore.meContact(keysToFetch:)(Swift::OpaquePointer keysToFetch)
{
  v5[1] = *(id *)MEMORY[0x1E4F143B8];
  if (objc_msgSend(self, sel_authorizationStatusForEntityType_, 0) != (id)3)
  {
    sub_1C289FE10();
    swift_allocError();
LABEL_6:
    swift_willThrow();
    return (CNContact)v1;
  }
  sub_1C27D8FA4();
  uint64_t v2 = (void *)sub_1C28CD910();
  v5[0] = 0;
  id v1 = objc_msgSend(v1, sel__ios_meContactWithKeysToFetch_error_, v2, v5);

  if (!v1)
  {
    id v1 = v5[0];
    sub_1C28CC290();

    goto LABEL_6;
  }
  id v3 = v5[0];
  return (CNContact)v1;
}

uint64_t sub_1C27BC030()
{
  return sub_1C28CCCA0();
}

id DefaultMedicalIDAvailabilityProvider.isSupported.getter()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_isMedicalIDAvailable);

  return v1;
}

uint64_t PromotionalTileConfiguration.Hero.ImageConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C27BE3E8(0, &qword_1EBB74CB0, (uint64_t (*)(void))sub_1C27DA474, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v16 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA474();
  sub_1C28CE800();
  LOBYTE(v16) = 0;
  type metadata accessor for ImageRepresentation();
  sub_1C27DB0D4(&qword_1EBB74FA0, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
  sub_1C28CE5E0();
  if (!v2)
  {
    uint64_t v10 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    uint64_t v11 = (uint64_t *)(v3 + *(int *)(v10 + 20));
    uint64_t v12 = *v11;
    LOBYTE(v11) = *((unsigned char *)v11 + 8);
    uint64_t v16 = v12;
    char v17 = (char)v11;
    char v18 = 1;
    sub_1C27DBAA4();
    sub_1C28CE590();
    uint64_t v13 = (uint64_t *)(v3 + *(int *)(v10 + 24));
    uint64_t v14 = *v13;
    LOBYTE(v13) = *((unsigned char *)v13 + 8);
    uint64_t v16 = v14;
    char v17 = (char)v13;
    char v18 = 2;
    sub_1C28CE590();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1C27BC344@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C28CCB10();
  *a1 = v3;
  return result;
}

uint64_t sub_1C27BC388(uint64_t a1)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReplaySubject();
  uint64_t v2 = swift_allocObject();
  ReplaySubject.init(bufferSize:)(a1);
  return v2;
}

id static FeatureStatusSupport.isHealthChecklistAvailable()()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_isHealthChecklistAvailable);

  return v1;
}

uint64_t initializeBufferWithCopyOfBuffer for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C27BC4F4(*(id *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

id sub_1C27BC4F4(id result, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return result;
  }
  return result;
}

uint64_t static FeatureStatusSupport.isHealthChecklistAvailablePublisher()()
{
  sub_1C27D9890();
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  unsigned __int8 v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D9B34();
  sub_1C27BC680(&qword_1EBB749B0, (void (*)(uint64_t))sub_1C27D9B34);
  sub_1C28CD260();
  sub_1C27BC680(&qword_1EBB749D0, (void (*)(uint64_t))sub_1C27D9890);
  uint64_t v5 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v5;
}

uint64_t sub_1C27BC680(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27BC6C8()
{
  return swift_release();
}

id sub_1C27BC750()
{
  id v0 = objc_msgSend(self, sel_shared);
  id v1 = objc_msgSend(v0, sel_isMedicalIDAvailable);

  return v1;
}

uint64_t sub_1C27BC7A8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C27C2E0C(0, &qword_1EBB77148, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C27BC934(uint64_t a1)
{
  id v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1C27BC978()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 24))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_1C27BC9DC()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t sub_1C27BCA04()
{
  return (*(uint64_t (**)(void))(v0 + 24))();
}

uint64_t Publisher.bindDaemonTransaction(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  int64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v11, v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a3);
  uint64_t v12 = (void *)(a4 + *(int *)(type metadata accessor for Publishers.BindDaemonTransaction() + 36));
  *uint64_t v12 = a1;
  v12[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for Publishers.BindDaemonTransaction()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for LockedCancellables()
{
  return self;
}

void sub_1C27BCB7C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

void *initializeBufferWithCopyOfBuffer for MedicalIDDataResult(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  if ((unint64_t)*a2 >= 0xFFFFFFFF) {
    id v4 = v3;
  }
  *a1 = v3;
  return a1;
}

uint64_t static CNContactStore.thumbnailImageAndImageDataAvailableKeys.getter()
{
  sub_1C27D87FC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C28D88D0;
  id v1 = (void *)*MEMORY[0x1E4F1AF98];
  uint64_t v2 = (void *)*MEMORY[0x1E4F1AE20];
  *(void *)(v0 + 32) = *MEMORY[0x1E4F1AF98];
  *(void *)(v0 + 40) = v2;
  uint64_t v6 = v0;
  sub_1C28CD940();
  id v3 = v1;
  id v4 = v2;
  return v6;
}

uint64_t sub_1C27BCCC8(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 16);
  if (v3 < 2) {
    return v2;
  }
  unint64_t v5 = 0;
  unint64_t v6 = v3 >> 1;
  for (unint64_t i = v3 + 31; ; --i)
  {
    if (v5 == i - 32) {
      goto LABEL_5;
    }
    unint64_t v8 = *(void *)(v2 + 16);
    if (v5 >= v8) {
      break;
    }
    if (i - 32 >= v8) {
      goto LABEL_12;
    }
    char v9 = *(unsigned char *)(v2 + v5 + 32);
    char v10 = *(unsigned char *)(v2 + i);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = a2(v2);
      uint64_t v2 = result;
    }
    *(unsigned char *)(v2 + v5 + 32) = v10;
    *(unsigned char *)(v2 + i) = v9;
LABEL_5:
    if (v6 == ++v5) {
      return v2;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C27BCD94@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ColorRepresentation.init(from:)(a1, a2);
}

uint64_t sub_1C27BCDAC()
{
  id v1 = v0;
  uint64_t v2 = *v0;
  sub_1C27CFC7C();
  uint64_t v3 = sub_1C28CE0E0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v27 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v26 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v12 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        int64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v14 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = v27[v14];
        ++v10;
        if (!v15)
        {
          int64_t v10 = v14 + 1;
          if (v14 + 1 >= v26) {
            goto LABEL_33;
          }
          unint64_t v15 = v27[v10];
          if (!v15)
          {
            int64_t v10 = v14 + 2;
            if (v14 + 2 >= v26) {
              goto LABEL_33;
            }
            unint64_t v15 = v27[v10];
            if (!v15)
            {
              int64_t v16 = v14 + 3;
              if (v16 >= v26)
              {
LABEL_33:
                swift_release();
                id v1 = v0;
                uint64_t v25 = 1 << *(unsigned char *)(v2 + 32);
                if (v25 > 63) {
                  bzero(v27, ((unint64_t)(v25 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v27 = -1 << v25;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v27[v16];
              if (!v15)
              {
                while (1)
                {
                  int64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_39;
                  }
                  if (v10 >= v26) {
                    goto LABEL_33;
                  }
                  unint64_t v15 = v27[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v10 = v16;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
      sub_1C28CD0F0();
      sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
      uint64_t result = sub_1C28CD670();
      uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v19 = result & ~v18;
      unint64_t v20 = v19 >> 6;
      if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v21 = 0;
        unint64_t v22 = (unint64_t)(63 - v18) >> 6;
        do
        {
          if (++v20 == v22 && (v21 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v23 = v20 == v22;
          if (v20 == v22) {
            unint64_t v20 = 0;
          }
          v21 |= v23;
          uint64_t v24 = *(void *)(v8 + 8 * v20);
        }
        while (v24 == -1);
        unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *id v1 = v4;
  return result;
}

void sub_1C27BD0D0(void *a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  id v8 = a1;
  sub_1C28CD160();
}

uint64_t sub_1C27BD144@<X0>(uint64_t *a1@<X8>)
{
  sub_1C27D9924(0, &qword_1EBB749C8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC08]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = &v11[-v5];
  id v7 = objc_msgSend(self, sel_shared);
  unsigned __int8 v8 = objc_msgSend(v7, sel_isHealthChecklistAvailable);

  v11[15] = v8;
  sub_1C28CD210();
  sub_1C27D9970();
  uint64_t v9 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
  *a1 = v9;
  return result;
}

uint64_t PluginFeedItem.init<A>(uniqueIdentifier:viewControllerClass:userData:contentKind:sourceProfile:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v13[1] = a7;
  v13[2] = a4;
  v13[3] = a5;
  uint64_t v8 = sub_1C28CC660();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC6D0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a6, v8);
  sub_1C28CC6E0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a6, v8);
}

uint64_t Publishers.IgnoreFailureResult.receive<A>(subscriber:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v22 = a4;
  uint64_t v24 = a1;
  uint64_t v8 = a2[2];
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 24);
  uint64_t v14 = *(void *)(v12 + 40);
  uint64_t v15 = sub_1C28CCEA0();
  uint64_t v23 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v21 - v16;
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, v8);
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v8;
  v18[3] = v13;
  v18[4] = a2[4];
  v18[5] = a3;
  uint64_t v19 = a2[6];
  v18[6] = v14;
  v18[7] = v19;
  v18[8] = v22;
  sub_1C28CD310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_getWitnessTable();
  sub_1C28CD410();
  return (*(uint64_t (**)(char *, uint64_t))(v23 + 8))(v17, v15);
}

uint64_t sub_1C27BD638()
{
  uint64_t v0 = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_1C28CD030();
    uint64_t v0 = sub_1C28CDF70();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return v0;
}

void sub_1C27BD7A8(char *a1)
{
  uint64_t v3 = v1[2];
  uint64_t v6 = *(void *)(*v1 + 88);
  uint64_t v7 = *(void *)(*v1 + 96);
  uint64_t v8 = *(void *)(*v1 + 104);
  v9[0] = *(void *)(*v1 + 80);
  v9[1] = v6;
  v9[2] = v7;
  v9[3] = v8;
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
  type metadata accessor for DemandBuffer();
  sub_1C28CDF70();
  uint64_t v4 = (void *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1C27DB9CC(v4, v9);
  os_unfair_lock_unlock(v5);
  if (v9[0])
  {
    swift_retain();
    sub_1C27C5510(a1, 0);
    swift_release_n();
  }
}

uint64_t Publishers.BufferWithAggregator.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 24);
  v19[0] = *(void *)(v11 + 16);
  v19[1] = v13;
  v19[2] = v12;
  v19[3] = v14;
  _s20BufferWithAggregatorV5InnerCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  uint64_t v15 = (uint64_t *)(v4 + *(int *)(a2 + 36));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_allocObject();
  swift_retain();
  v19[0] = sub_1C27BE6A4((uint64_t)v10, v16, v17);
  swift_getWitnessTable();
  sub_1C28CD410();
  return swift_release();
}

id sub_1C27BDA84()
{
  uint64_t v0 = sub_1C28CCE10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_sharedConnection);
  if (v4)
  {
    uint64_t v5 = v4;
    id v6 = objc_msgSend(v4, sel_isOnDeviceAppInstallationAllowed);
  }
  else
  {
    sub_1C28CCDC0();
    uint64_t v7 = sub_1C28CCE00();
    os_log_type_t v8 = sub_1C28CDCB0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_1C27B7000, v7, v8, "Shared instance of MCProfileConnection does not exist", v9, 2u);
      MEMORY[0x1C87609B0](v9, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v6;
}

uint64_t sub_1C27BDC00()
{
  return swift_endAccess();
}

void sub_1C27BDC7C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for MedicalIDDataResult);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t PromotionalTileConfiguration.Hero.encode(to:)(void *a1)
{
  uint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C27BE3E8(0, &qword_1EBB74CC0, (uint64_t (*)(void))sub_1C28C53B4, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ViewCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v48 = v3;
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v47 = (char *)&v36 - v4;
  sub_1C27BE3E8(0, &qword_1EBB74CC8, (uint64_t (*)(void))sub_1C27DA1FC, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.ImageCodingKeys, v2);
  uint64_t v45 = *(void *)(v5 - 8);
  uint64_t v46 = v5;
  MEMORY[0x1F4188790](v5);
  v44 = (char *)&v36 - v6;
  uint64_t v42 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  MEMORY[0x1F4188790](v42);
  uint64_t v43 = (uint64_t)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BE3E8(0, &qword_1EBB74CD0, (uint64_t (*)(void))sub_1C28C5408, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.EmbeddedWatchCodingKeys, v2);
  uint64_t v41 = v8;
  uint64_t v38 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  v40 = (char *)&v36 - v9;
  uint64_t v39 = type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  MEMORY[0x1F4188790](v39);
  uint64_t v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BE3E8(0, &qword_1EBB74CB8, (uint64_t (*)(void))sub_1C27DA37C, (uint64_t)&type metadata for PromotionalTileConfiguration.Hero.CodingKeys, v2);
  uint64_t v16 = v15;
  uint64_t v49 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  uint64_t v18 = (char *)&v36 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA37C();
  sub_1C28CE800();
  sub_1C27CC160(v56, (uint64_t)v14, type metadata accessor for PromotionalTileConfiguration.Hero);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    unint64_t v20 = v18;
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v21 = (uint64_t)v14;
      uint64_t v22 = v43;
      sub_1C27DB06C(v21, v43, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      LOBYTE(v50) = 1;
      sub_1C27DA1FC();
      uint64_t v23 = v44;
      sub_1C28CE550();
      sub_1C27DB0D4(&qword_1EBB74B60, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      uint64_t v24 = v46;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v23, v24);
      sub_1C27CC1E8(v22, type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v20, v16);
    }
    else
    {
      uint64_t v29 = *((void *)v14 + 1);
      uint64_t v56 = *(void *)v14;
      uint64_t v30 = *((void *)v14 + 2);
      char v31 = v14[24];
      uint64_t v33 = *((void *)v14 + 4);
      uint64_t v32 = *((void *)v14 + 5);
      LOBYTE(v50) = 2;
      sub_1C28C53B4();
      char v34 = v47;
      sub_1C28CE550();
      uint64_t v50 = v56;
      uint64_t v51 = v29;
      uint64_t v56 = v29;
      uint64_t v52 = v30;
      char v53 = v31;
      uint64_t v54 = v33;
      uint64_t v55 = v32;
      sub_1C28C51C0();
      uint64_t v35 = v48;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v49 + 8))(v20, v16);
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v26 = v38;
    sub_1C27DB06C((uint64_t)v14, (uint64_t)v11, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    LOBYTE(v50) = 0;
    sub_1C28C5408();
    int64_t v27 = v40;
    sub_1C28CE550();
    sub_1C27DB0D4(&qword_1EA311688, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    uint64_t v28 = v41;
    sub_1C28CE5E0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v28);
    sub_1C27CC1E8((uint64_t)v11, type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration);
    return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v18, v16);
  }
}

void sub_1C27BE3E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C27BE450(void *a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 88);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = &v10[-v6];
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC((uint64_t)(v1 + 2), (uint64_t)&v11);
  if (v14 == 2
    && (int8x16_t v8 = vorrq_s8(v12, v13),
        !(*(void *)&vorr_s8(*(int8x8_t *)v8.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v8, v8, 8uLL)) | (unint64_t)v11)))
  {
    sub_1C27CEA68((uint64_t)&v11);
    sub_1C27CE8A4((uint64_t)a1, (uint64_t)&v11);
    char v14 = 0;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)&v11, (uint64_t)(v1 + 2));
    swift_endAccess();
    sub_1C28CC630();
    (*(void (**)(unsigned char *, char *, uint64_t))(v5 + 16))(v7, (char *)v1 + *(void *)(*v1 + 144), v4);
    v13.i64[0] = v3;
    v13.i64[1] = swift_getWitnessTable();
    uint64_t v11 = v1;
    swift_retain();
    sub_1C28CD000();
    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v11);
  }
  else
  {
    sub_1C27CEA68((uint64_t)&v11);
    sub_1C28CC630();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1C28CD020();
  }
}

uint64_t *sub_1C27BE6A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  *((_OWORD *)v3 + 1) = 0u;
  *((_OWORD *)v3 + 2) = 0u;
  v3[6] = 0;
  *((unsigned char *)v3 + 56) = 2;
  sub_1C28CC650();
  swift_allocObject();
  v3[8] = sub_1C28CC640();
  uint64_t v9 = (uint64_t)v4 + *(void *)(*v4 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v10 = sub_1C28CD030();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  uint64_t v11 = *(void *)(*v3 + 152);
  *(uint64_t *)((char *)v3 + v11) = sub_1C28CD080();
  uint64_t v12 = (uint64_t)v4 + *(void *)(*v4 + 160);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v12, 1, 1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v8 + 88) - 8) + 32))((uint64_t)v4 + *(void *)(*v4 + 144), a1);
  v3[9] = a2;
  v3[10] = a3;
  return v3;
}

uint64_t sub_1C27BE8DC(uint64_t a1, uint64_t a2)
{
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_1C28CD030();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v14 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)v14 - v11;
  v14[1] = a1;
  sub_1C28CDA30();
  swift_retain();
  swift_getWitnessTable();
  sub_1C28CD890();
  swift_release();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v9, a2, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v9, 1, v4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v9, v5);
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v9, v4);
  sub_1C28497E8((uint64_t)v12);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v4);
}

void *ReplaySubject.init(bufferSize:)(uint64_t a1)
{
  v1[3] = sub_1C28CD5D0();
  sub_1C28CD0C0();
  swift_getWitnessTable();
  type metadata accessor for ReplaySubject.Subscription();
  v1[4] = sub_1C28CD5D0();
  uint64_t v3 = (char *)v1 + *(void *)(*v1 + 128);
  uint64_t v4 = sub_1C28CD030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v3, 1, 1, v4);
  uint64_t v5 = *(void *)(*v1 + 136);
  sub_1C28CC9F0();
  swift_allocObject();
  *(void *)((char *)v1 + v5) = sub_1C28CC9E0();
  v1[2] = a1;
  return v1;
}

uint64_t sub_1C27BED10@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CCCD0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t HKSummarySharingEntryStore.fetchEntries(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v18 = a1;
  uint64_t v19 = a2;
  sub_1C27D9B9C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D9C68();
  uint64_t v20 = v7;
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C28CDF00();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C27D9A54(0, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, MEMORY[0x1E4FBB320], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
  sub_1C27D9AD0(&qword_1EBB75578, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, (uint64_t)v11);
  sub_1C28CD360();
  swift_release();
  uint64_t v12 = swift_allocObject();
  uint64_t v13 = v18;
  uint64_t v14 = v19;
  *(void *)(v12 + 16) = v18;
  *(void *)(v12 + 24) = v14;
  sub_1C27C4380(v13);
  sub_1C27D8E3C(0, &qword_1EBB75690, v11);
  sub_1C27BF0D0(&qword_1EBB748E0, (void (*)(uint64_t))sub_1C27D9B9C);
  sub_1C28CD330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C27BF0D0(&qword_1EBB75480, (void (*)(uint64_t))sub_1C27D9C68);
  uint64_t v15 = v20;
  uint64_t v16 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v15);
  return v16;
}

uint64_t sub_1C27BF0D0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *NSFileManager.getAllFiles(at:)()
{
  v7[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v1 = (void *)sub_1C28CC2B0();
  v7[0] = 0;
  id v2 = objc_msgSend(v0, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v1, 0, 4, v7);

  id v3 = v7[0];
  if (v2)
  {
    sub_1C28CC330();
    uint64_t v1 = (void *)sub_1C28CD920();
    id v4 = v3;
  }
  else
  {
    id v5 = v7[0];
    sub_1C28CC290();

    swift_willThrow();
  }
  return v1;
}

void sub_1C27BF20C()
{
  sub_1C28CC610();
  sub_1C28CCB10();
  if (v2 == 1 && (v3 & 1) == 0)
  {
    uint64_t v1 = sub_1C28CCB20();
    (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))(v1);
  }
  sub_1C27D5F78();
}

uint64_t PromotionalTileConfiguration.encode(to:)(void *a1)
{
  sub_1C27BE3E8(0, &qword_1EBB757A0, (uint64_t (*)(void))sub_1C27DA624, (uint64_t)&type metadata for PromotionalTileConfiguration.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA624();
  sub_1C28CE800();
  char v16 = 0;
  sub_1C28CE5A0();
  if (!v1)
  {
    char v15 = 1;
    sub_1C28CE5A0();
    type metadata accessor for PromotionalTileConfiguration(0);
    char v14 = 2;
    type metadata accessor for PromotionalTileConfiguration.Hero(0);
    sub_1C27DB0D4(&qword_1EBB74B68, (void (*)(uint64_t))type metadata accessor for PromotionalTileConfiguration.Hero);
    sub_1C28CE5E0();
    char v13 = 3;
    sub_1C28CE5A0();
    char v12 = 4;
    sub_1C28CE5A0();
    char v11 = 5;
    sub_1C28CE560();
    char v10 = 6;
    sub_1C28CE5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t ColorRepresentation.encode(to:)(void *a1)
{
  char v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C27D5A44(0, &qword_1EBB74CA8, (uint64_t (*)(void))sub_1C27DB580, (uint64_t)&type metadata for ColorRepresentation.RgbCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v44 = *(void *)(v3 - 8);
  uint64_t v45 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v43 = (char *)&v34 - v4;
  sub_1C27D5A44(0, &qword_1EBB75760, (uint64_t (*)(void))sub_1C27DB47C, (uint64_t)&type metadata for ColorRepresentation.SemanticCodingKeys, v2);
  uint64_t v41 = *(void *)(v5 - 8);
  uint64_t v42 = v5;
  MEMORY[0x1F4188790](v5);
  v40 = (char *)&v34 - v6;
  sub_1C27D5A44(0, &qword_1EBB75770, (uint64_t (*)(void))sub_1C27DB2C8, (uint64_t)&type metadata for ColorRepresentation.DisplayCategoryCodingKeys, v2);
  uint64_t v38 = *(void *)(v7 - 8);
  uint64_t v39 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v37 = (char *)&v34 - v8;
  sub_1C27D5A44(0, &qword_1EBB75768, (uint64_t (*)(void))sub_1C27D5B8C, (uint64_t)&type metadata for ColorRepresentation.ObjectTypeCodingKeys, v2);
  uint64_t v36 = v9;
  uint64_t v35 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  char v11 = (char *)&v34 - v10;
  uint64_t v34 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v34);
  char v13 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v14);
  char v16 = (uint64_t *)((char *)&v34 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27D5A44(0, &qword_1EBB75758, (uint64_t (*)(void))sub_1C27D5BE0, (uint64_t)&type metadata for ColorRepresentation.CodingKeys, v2);
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v46 = v17;
  uint64_t v47 = v18;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v34 - v19;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27D5BE0();
  sub_1C28CE800();
  sub_1C27D4D68(v48, (uint64_t)v16, type metadata accessor for ColorRepresentation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v33 = *v16;
      LOBYTE(v49) = 1;
      sub_1C27DB2C8();
      uint64_t v24 = v37;
      uint64_t v25 = v46;
      sub_1C28CE550();
      *(void *)&long long v49 = v33;
      sub_1C27DA688();
      uint64_t v26 = v39;
      sub_1C28CE5E0();
      uint64_t v27 = v38;
      goto LABEL_7;
    case 2u:
      char v23 = *(unsigned char *)v16;
      LOBYTE(v49) = 2;
      sub_1C27DB47C();
      uint64_t v24 = v40;
      uint64_t v25 = v46;
      sub_1C28CE550();
      LOBYTE(v49) = v23;
      sub_1C282F29C();
      uint64_t v26 = v42;
      sub_1C28CE5E0();
      uint64_t v27 = v41;
LABEL_7:
      (*(void (**)(char *, uint64_t))(v27 + 8))(v24, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v25);
    case 3u:
      long long v48 = *(_OWORD *)v16;
      uint64_t v28 = v16[2];
      uint64_t v29 = v16[3];
      LOBYTE(v49) = 3;
      sub_1C27DB580();
      uint64_t v30 = v43;
      uint64_t v21 = v46;
      sub_1C28CE550();
      long long v49 = v48;
      uint64_t v50 = v28;
      uint64_t v51 = v29;
      sub_1C282F248();
      uint64_t v31 = v45;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v30, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v21);
    default:
      sub_1C27D5AAC((uint64_t)v16, (uint64_t)v13, type metadata accessor for HKObjectTypeColorProvider);
      LOBYTE(v49) = 0;
      sub_1C27D5B8C();
      uint64_t v21 = v46;
      sub_1C28CE550();
      sub_1C27D47D8(&qword_1EBB76508, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
      uint64_t v22 = v36;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v35 + 8))(v11, v22);
      sub_1C282FA3C((uint64_t)v13, type metadata accessor for HKObjectTypeColorProvider);
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v20, v21);
  }
}

uint64_t destroy for ImageRepresentation(uint64_t *a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch(result)
  {
    case 2:
      uint64_t v3 = *a1;
      unint64_t v4 = a1[1];
      return sub_1C27E2870(v3, v4);
    case 1:
      swift_bridgeObjectRelease();
      sub_1C27CC3FC();
      uint64_t v6 = (char *)a1 + *(int *)(v5 + 48);
      sub_1C27CCDC8(0);
      uint64_t v8 = v7;
      uint64_t v10 = *(void *)(v7 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v7);
      if (!result)
      {
        uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
        return v9(v6, v8);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
  return result;
}

char *sub_1C27BFE38(uint64_t a1)
{
  char v2 = v1;
  uint64_t v4 = *(void *)v1;
  sub_1C28CC9F0();
  swift_allocObject();
  *((void *)v1 + 2) = sub_1C28CC9E0();
  uint64_t v5 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  *((void *)v2 + 3) = sub_1C28CD5D0();
  uint64_t v6 = &v2[*(void *)(*(void *)v2 + 120)];
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1C28CD030();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  uint64_t v8 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 128)];
  uint64_t v9 = sub_1C28CD080();
  uint64_t v10 = sub_1C28CD080();
  uint64_t v11 = sub_1C28CD080();
  *uint64_t v8 = v9;
  v8[1] = v10;
  v8[2] = v11;
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(&v2[*(void *)(*(void *)v2 + 112)], a1, v5);
  return v2;
}

void *sub_1C27C0008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  *(void *)&long long v20 = v8;
  uint64_t v9 = sub_1C28CCE80();
  uint64_t v21 = *(void *)(v9 - 8);
  uint64_t v22 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v8 + 96);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v10);
  char v16 = (char *)&v20 - v15;
  uint64_t v17 = *(void *)(v8 + 104);
  type metadata accessor for DemandBuffer();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a1, v13);
  uint64_t v18 = swift_allocObject();
  sub_1C27BFE38((uint64_t)v16);
  uint64_t v26 = v18;
  uint64_t v27 = a2;
  uint64_t v28 = a3;
  swift_retain();
  long long v20 = *(_OWORD *)(v20 + 80);
  sub_1C27C4380(a2);
  long long v23 = v20;
  uint64_t v24 = v13;
  uint64_t v25 = v17;
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
  v4[2] = sub_1C27CDDC8();
  sub_1C28CCE50();
  sub_1C27C0290(a2);
  swift_release();
  sub_1C27C0290(a2);
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 32))((uint64_t)v4 + qword_1EBB76048, v12, v22);
  return v4;
}

uint64_t sub_1C27C0290(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t HKSample.dateInterval.getter()
{
  uint64_t v1 = sub_1C28CC450();
  uint64_t v2 = MEMORY[0x1F4188790](v1 - 8);
  MEMORY[0x1F4188790](v2);
  id v3 = objc_msgSend(v0, sel_startDate);
  sub_1C28CC430();

  id v4 = objc_msgSend(v0, sel_endDate);
  sub_1C28CC430();

  return sub_1C28CBF90();
}

uint64_t sub_1C27C039C(uint64_t a1, uint64_t a2)
{
  id v3 = v2;
  uint64_t v6 = type metadata accessor for TransactionRecord();
  uint64_t v26 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v27 = (uint64_t)&v23 - v10;
  uint64_t v11 = *v2;
  sub_1C28CE700();
  sub_1C28CC4B0();
  sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  sub_1C28CD680();
  uint64_t v12 = (void *)(a2 + *(int *)(v6 + 20));
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C28CE740();
  uint64_t v14 = -1 << *(unsigned char *)(v11 + 32);
  unint64_t v15 = v13 & ~v14;
  if ((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
  {
    uint64_t v24 = v2;
    uint64_t v25 = a1;
    uint64_t v16 = ~v14;
    uint64_t v17 = *(void *)(v26 + 72);
    do
    {
      sub_1C27C8D1C(*(void *)(v11 + 48) + v17 * v15, (uint64_t)v9);
      if (sub_1C28CC480())
      {
        uint64_t v18 = &v9[*(int *)(v6 + 20)];
        BOOL v19 = *(void *)v18 == *v12 && *((void *)v18 + 1) == v12[1];
        if (v19 || (sub_1C28CE640() & 1) != 0)
        {
          sub_1C27C8C44((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
          swift_bridgeObjectRelease();
          sub_1C27C8C44(a2, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
          sub_1C27C8D1C(*(void *)(*v24 + 48) + v17 * v15, v25);
          return 0;
        }
      }
      sub_1C27C8C44((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      unint64_t v15 = (v15 + 1) & v16;
    }
    while (((*(void *)(v11 + 56 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) != 0);
    swift_bridgeObjectRelease();
    id v3 = v24;
    a1 = v25;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = v27;
  sub_1C27C8D1C(a2, v27);
  uint64_t v28 = *v3;
  *id v3 = 0x8000000000000000;
  sub_1C27D8A20(v22, v15, isUniquelyReferenced_nonNull_native);
  *id v3 = v28;
  swift_bridgeObjectRelease();
  sub_1C27C7978(a2, a1);
  return 1;
}

uint64_t sub_1C27C06B4()
{
  uint64_t v1 = v0;
  v100 = *(char **)v0;
  uint64_t v2 = v100;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v80 = AssociatedTypeWitness;
  uint64_t v4 = sub_1C28CD030();
  uint64_t v85 = sub_1C28CDF70();
  uint64_t v84 = *(void *)(v85 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v85);
  v83 = (char *)&v78 - v6;
  uint64_t v87 = v4;
  uint64_t v86 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v5);
  v88 = (char *)&v78 - v7;
  uint64_t v92 = sub_1C28CCE10();
  uint64_t v91 = *(void *)(v92 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v92);
  v94 = (char *)&v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v103 = *((void *)v2 + 11);
  Class isa = v103[-1].isa;
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  v82 = (char *)&v78 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v10);
  v99 = (char *)&v78 - v12;
  uint64_t v13 = swift_getAssociatedTypeWitness();
  uint64_t v14 = sub_1C28CDF70();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  v97 = (char *)&v78 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v90 = (char *)&v78 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v78 - v21;
  uint64_t v23 = *(void *)(v13 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v20);
  v81 = (char *)&v78 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v78 - v27;
  MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v78 - v29;
  uint64_t v98 = *((void *)v0 + 8);
  sub_1C28CC610();
  uint64_t v31 = (uint64_t)&v1[*(void *)(*(void *)v1 + 160)];
  swift_beginAccess();
  uint64_t v32 = *(void (**)(char *, uint64_t, uint64_t))(v15 + 16);
  uint64_t v101 = v31;
  v96 = v32;
  v32(v22, v31, v14);
  v95 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
  if (v95(v22, 1, v13) != 1)
  {
    uint64_t v79 = v15;
    uint64_t v89 = v23;
    uint64_t v34 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v93 = v30;
    v34(v30, v22, v13);
    uint64_t v35 = (uint64_t *)&v0[*(void *)(*(void *)v0 + 152)];
    swift_beginAccess();
    uint64_t v36 = *v35;
    sub_1C28CD090();
    uint64_t result = sub_1C28CD070();
    uint64_t v33 = (char *)v13;
    if ((result & 1) == 0)
    {
      if (v36 < 0)
      {
        __break(1u);
        goto LABEL_38;
      }
      if (!v36)
      {
        (*(void (**)(char *, uint64_t))(v89 + 8))(v93, v13);
LABEL_29:
        uint64_t v15 = v79;
        goto LABEL_30;
      }
    }
    swift_beginAccess();
    sub_1C27CEABC((uint64_t)(v1 + 16), (uint64_t)&v104);
    char v38 = sub_1C28CD040();
    sub_1C27CEA68((uint64_t)&v104);
    if ((v38 & 1) == 0)
    {
      uint64_t v41 = v94;
      sub_1C28CCDC0();
      uint64_t v42 = v89;
      uint64_t v43 = *(void (**)(char *, char *, uint64_t))(v89 + 16);
      uint64_t v44 = v93;
      v43(v28, v93, v13);
      swift_retain_n();
      uint64_t v45 = sub_1C28CCE00();
      os_log_type_t v46 = sub_1C28CDCB0();
      v103 = v45;
      LODWORD(isa) = v46;
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v101 = swift_slowAlloc();
        uint64_t v104 = v101;
        *(_DWORD *)uint64_t v47 = 136315650;
        uint64_t v48 = sub_1C28CE830();
        uint64_t v108 = sub_1C27D36AC(v48, v49, &v104);
        v100 = v28;
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        uint64_t v50 = sub_1C28CD060();
        uint64_t v108 = sub_1C27D36AC(v50, v51, &v104);
        sub_1C28CDF90();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 22) = 2080;
        uint64_t v52 = v100;
        v43(v81, v100, v13);
        uint64_t v53 = sub_1C28CD750();
        uint64_t v108 = sub_1C27D36AC(v53, v54, &v104);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        uint64_t v55 = *(void (**)(char *, uint64_t))(v42 + 8);
        v55(v52, v13);
        uint64_t v56 = v103;
        _os_log_impl(&dword_1C27B7000, v103, (os_log_type_t)isa, "[%s]: Unexpected value remains for nonactive stream: demand=%s, pendingOutput=%s", (uint8_t *)v47, 0x20u);
        uint64_t v57 = v101;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v57, -1, -1);
        MEMORY[0x1C87609B0](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(v91 + 8))(v94, v92);
        v58 = v93;
      }
      else
      {

        uint64_t v55 = *(void (**)(char *, uint64_t))(v42 + 8);
        v55(v28, v13);
        swift_release_n();
        (*(void (**)(char *, uint64_t))(v91 + 8))(v41, v92);
        v58 = v44;
      }
      return ((uint64_t (*)(char *, uint64_t))v55)(v58, v13);
    }
    swift_beginAccess();
    uint64_t v39 = *v35;
    sub_1C28CD090();
    if (sub_1C28CD070()) {
      goto LABEL_19;
    }
    sub_1C28CD090();
    uint64_t result = sub_1C28CD070();
    if (result)
    {
      uint64_t v40 = sub_1C28CD090();
LABEL_18:
      *uint64_t v35 = v40;
LABEL_19:
      swift_endAccess();
      v59 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v89 + 56);
      v60 = v90;
      v94 = (char *)v13;
      v59(v90, 1, 1, v13);
      uint64_t v61 = v101;
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v79 + 40))(v61, v60, v14);
      swift_endAccess();
      (*((void (**)(char *, char *, NSObject *))isa + 2))(v99, &v1[*(void *)(*(void *)v1 + 144)], v103);
      sub_1C28CC630();
      uint64_t v62 = sub_1C28CD010();
      sub_1C28CC620();
      swift_beginAccess();
      uint64_t v63 = *v35;
      sub_1C28CD090();
      if (sub_1C28CD070())
      {
LABEL_28:
        swift_endAccess();
        (*((void (**)(char *, NSObject *))isa + 1))(v99, v103);
        uint64_t v33 = v94;
        (*(void (**)(char *, char *))(v89 + 8))(v93, v94);
        goto LABEL_29;
      }
      sub_1C28CD090();
      char v64 = sub_1C28CD070();
      uint64_t v65 = sub_1C28CD090();
      if (v64)
      {
LABEL_27:
        *uint64_t v35 = v65;
        goto LABEL_28;
      }
      uint64_t result = sub_1C28CD070();
      if (result)
      {
LABEL_25:
        uint64_t v65 = sub_1C28CD090();
        goto LABEL_27;
      }
      if (((v63 | v62) & 0x8000000000000000) == 0)
      {
        uint64_t v65 = v63 + v62;
        if (!__OFADD__(v63, v62))
        {
          if ((v65 & 0x8000000000000000) == 0) {
            goto LABEL_27;
          }
LABEL_41:
          __break(1u);
          return result;
        }
        goto LABEL_25;
      }
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if ((v39 & 0x8000000000000000) == 0)
    {
      if (v39)
      {
        uint64_t v40 = v39 - 1;
        goto LABEL_18;
      }
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  (*(void (**)(char *, uint64_t))(v15 + 8))(v22, v14);
  uint64_t v33 = (char *)v13;
LABEL_30:
  swift_beginAccess();
  sub_1C27CEABC((uint64_t)(v1 + 16), (uint64_t)&v104);
  int v66 = v107;
  uint64_t result = sub_1C27CEA68((uint64_t)&v104);
  if (v66 == 1)
  {
    v67 = v97;
    v96(v97, v101, v14);
    unsigned int v68 = v95(v67, 1, (uint64_t)v33);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v67, v14);
    if (v68 == 1)
    {
      v69 = v82;
      (*((void (**)(char *, char *, NSObject *))isa + 2))(v82, &v1[*(void *)(*(void *)v1 + 144)], v103);
      uint64_t v104 = 1;
      long long v105 = 0u;
      long long v106 = 0u;
      unsigned __int8 v107 = 2;
      swift_beginAccess();
      sub_1C27CE908((uint64_t)&v104, (uint64_t)(v1 + 16));
      swift_endAccess();
      v70 = &v1[*(void *)(*(void *)v1 + 136)];
      swift_beginAccess();
      uint64_t v71 = v84;
      v72 = v83;
      uint64_t v73 = v85;
      (*(void (**)(char *, char *, uint64_t))(v84 + 16))(v83, v70, v85);
      uint64_t v74 = v86;
      uint64_t v75 = v87;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v86 + 48))(v72, 1, v87) == 1)
      {
        v76 = v88;
        (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v88, 1, 1);
        (*(void (**)(char *, uint64_t))(v71 + 8))(v72, v73);
      }
      else
      {
        v76 = v88;
        (*(void (**)(char *, char *, uint64_t))(v74 + 32))(v88, v72, v75);
      }
      sub_1C28CC630();
      v77 = v103;
      sub_1C28CCFF0();
      sub_1C28CC620();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v76, v75);
      return (*((uint64_t (**)(char *, NSObject *))isa + 1))(v69, v77);
    }
  }
  return result;
}

uint64_t CurrentOSUpdateDateProvider.init()()
{
  uint64_t v0 = sub_1C28CC450();
  uint64_t v9 = *(void *)(v0 - 8);
  uint64_t v1 = v9;
  MEMORY[0x1F4188790](v0);
  uint64_t v10 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D8FFC();
  sub_1C28CDD00();
  sub_1C27D962C();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_1C28CC6A0();
  type metadata accessor for CurrentOSUpdateDateProvider();
  sub_1C28CDD00();
  uint64_t v11 = 0;
  uint64_t v12 = 0;
  sub_1C28CC6A0();
  sub_1C28CDD00();
  uint64_t v6 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v1 + 56);
  v6(v5, 1, 1, v0);
  sub_1C28CC6A0();
  sub_1C28CDD00();
  v6(v5, 1, 1, v0);
  sub_1C28CC6A0();
  sub_1C28CDD00();
  v6(v5, 1, 1, v0);
  sub_1C28CC6A0();
  uint64_t v7 = (uint64_t)v10;
  sub_1C28CC440();
  sub_1C27C329C(v7);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v7, v0);
}

uint64_t LockedCancellables.init()()
{
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC870];
  sub_1C28CC650();
  swift_allocObject();
  *(void *)(v0 + 24) = sub_1C28CC640();
  return v0;
}

uint64_t sub_1C27C189C(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v34 - v11;
  if (!a2)
  {
    sub_1C28CCDD0();
    uint64_t v26 = sub_1C28CCE00();
    os_log_type_t v27 = sub_1C28CDCD0();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v28 = 0;
      _os_log_impl(&dword_1C27B7000, v26, v27, "MedicalID data was successfully fetched", v28, 2u);
      MEMORY[0x1C87609B0](v28, -1, -1);
    }

    uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v30 = v10;
    goto LABEL_8;
  }
  id v13 = a2;
  sub_1C28CCDD0();
  id v14 = a2;
  id v15 = a2;
  uint64_t v16 = sub_1C28CCE00();
  os_log_type_t v17 = sub_1C28CDCB0();
  if (!os_log_type_enabled(v16, v17))
  {

    uint64_t v29 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v30 = v12;
LABEL_8:
    uint64_t v25 = v29(v30, v6);
    goto LABEL_9;
  }
  uint64_t v18 = (uint8_t *)swift_slowAlloc();
  uint64_t v19 = swift_slowAlloc();
  uint64_t v37 = v3;
  uint64_t v38 = (uint64_t)a2;
  uint64_t v20 = v19;
  uint64_t v39 = v19;
  uint64_t v36 = a1;
  *(_DWORD *)uint64_t v18 = 136446210;
  id v21 = a2;
  sub_1C27C7060();
  uint64_t v22 = sub_1C28CD750();
  uint64_t v35 = v6;
  uint64_t v38 = sub_1C27D36AC(v22, v23, &v39);
  a1 = v36;
  sub_1C28CDF90();
  swift_bridgeObjectRelease();

  _os_log_impl(&dword_1C27B7000, v16, v17, "Medical ID Fetch failed with error %{public}s", v18, 0xCu);
  swift_arrayDestroy();
  uint64_t v24 = v20;
  uint64_t v3 = v37;
  MEMORY[0x1C87609B0](v24, -1, -1);
  MEMORY[0x1C87609B0](v18, -1, -1);

  uint64_t v25 = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v35);
LABEL_9:
  uint64_t v31 = MEMORY[0x1F4188790](v25);
  *(&v34 - 4) = v3;
  *(&v34 - 3) = a1;
  *(&v34 - 2) = (uint64_t)a2;
  uint64_t v39 = *(void *)(v3 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock);
  MEMORY[0x1F4188790](v31);
  *((unsigned char *)&v34 - 48) = 1;
  *(&v34 - 5) = v3;
  *(&v34 - 4) = (uint64_t)sub_1C27DAE2C;
  *(&v34 - 3) = v32;
  *((unsigned char *)&v34 - 16) = 1;
  sub_1C28CC650();
  sub_1C27D25DC();
  swift_retain();
  sub_1C28CCBF0();
  return swift_release();
}

uint64_t sub_1C27C1C7C(uint64_t a1)
{
  uint64_t v3 = (char *)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x78);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CCCD0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t sub_1C27C1D58(uint64_t a1)
{
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC(v1 + 16, (uint64_t)v26);
  sub_1C28CD050();
  sub_1C27CEA68((uint64_t)v26);
  if (v25)
  {
    sub_1C27CAE60(&v24, (uint64_t)v27);
    uint64_t v7 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 152));
    swift_beginAccess();
    uint64_t v8 = *v7;
    sub_1C28CD090();
    if (sub_1C28CD070())
    {
LABEL_14:
      swift_endAccess();
      sub_1C27C06B4();
      sub_1C28CC630();
      __swift_project_boxed_opaque_existential_1(v27, v27[3]);
      sub_1C28CD090();
      sub_1C28CD0B0();
      return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v27);
    }
    sub_1C28CD090();
    char v9 = sub_1C28CD070();
    uint64_t v10 = sub_1C28CD090();
    if ((v9 & 1) == 0)
    {
      uint64_t result = sub_1C28CD070();
      if ((result & 1) == 0)
      {
        if ((v8 | a1) < 0)
        {
          __break(1u);
          goto LABEL_17;
        }
        uint64_t v10 = v8 + a1;
        if (!__OFADD__(v8, a1))
        {
          if ((v10 & 0x8000000000000000) == 0) {
            goto LABEL_13;
          }
LABEL_17:
          __break(1u);
          return result;
        }
      }
      uint64_t v10 = sub_1C28CD090();
    }
LABEL_13:
    *uint64_t v7 = v10;
    goto LABEL_14;
  }
  sub_1C27CEB18((uint64_t)&v24);
  sub_1C28CCDC0();
  uint64_t v12 = sub_1C28CCE00();
  os_log_type_t v13 = sub_1C28CDCB0();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    HIDWORD(v22) = v14;
    uint64_t v16 = v15;
    uint64_t v23 = swift_slowAlloc();
    v26[0] = v23;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v17 = sub_1C28CE830();
    v27[0] = sub_1C27D36AC(v17, v18, v26);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v19 = sub_1C28CD060();
    v27[0] = sub_1C27D36AC(v19, v20, v26);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v12, BYTE4(v22), "[%s]: Unexpected demand for nonactive stream: %s", (uint8_t *)v16, 0x16u);
    uint64_t v21 = v23;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v21, -1, -1);
    MEMORY[0x1C87609B0](v16, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1C28CC630();
}

void sub_1C27C20F0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCDD0();
  uint64_t v6 = sub_1C28CCE00();
  os_log_type_t v7 = sub_1C28CDCD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_1C27B7000, v6, v7, "MedicalID Data fetch has begun", v8, 2u);
    MEMORY[0x1C87609B0](v8, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  char v9 = *(void **)&v1[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDStore];
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = v1;
  aBlock[4] = sub_1C27DADC0;
  aBlock[5] = v10;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1C27BCB7C;
  aBlock[3] = &block_descriptor_0;
  uint64_t v11 = _Block_copy(aBlock);
  uint64_t v12 = v1;
  swift_release();
  objc_msgSend(v9, sel_fetchMedicalIDDataWithCompletion_, v11);
  _Block_release(v11);
}

uint64_t sub_1C27C22E8()
{
  sub_1C28CC620();
  swift_beginAccess();
  uint64_t v1 = swift_bridgeObjectRetain();
  uint64_t v2 = sub_1C27C2474(v1);
  swift_bridgeObjectRelease();
  *(void *)(v0 + 16) = MEMORY[0x1E4FBC870];
  swift_bridgeObjectRelease();
  sub_1C28CC630();
  return v2;
}

uint64_t sub_1C27C236C(uint64_t a1, uint64_t (*a2)(uint64_t *, void *, uint64_t, uint64_t))
{
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = sub_1C28CE060();
    if (v4) {
      goto LABEL_3;
    }
    return MEMORY[0x1E4FBC860];
  }
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return MEMORY[0x1E4FBC860];
  }
LABEL_3:
  if (v4 <= 0)
  {
    uint64_t v5 = (void *)MEMORY[0x1E4FBC860];
  }
  else
  {
    sub_1C27D87FC();
    uint64_t v5 = (void *)swift_allocObject();
    int64_t v6 = _swift_stdlib_malloc_size(v5);
    uint64_t v7 = v6 - 32;
    if (v6 < 32) {
      uint64_t v7 = v6 - 25;
    }
    id v5[2] = v4;
    v5[3] = (2 * (v7 >> 3)) | 1;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = a2(&v10, v5 + 4, v4, a1);
  uint64_t result = sub_1C27D9684();
  if (v8 == v4) {
    return (uint64_t)v5;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C27C2474(uint64_t a1)
{
  return sub_1C27C236C(a1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C27D9310);
}

uint64_t sub_1C27C248C()
{
  return swift_retain();
}

char *CloudSyncEventPublisherObserver.init(healthStore:makeCloudSyncObserver:)(void *a1, uint64_t (*a2)(id, char *), uint64_t a3)
{
  uint64_t v23 = a3;
  long long v24 = a2;
  sub_1C27D9F4C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v3[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer] = 0;
  uint64_t v10 = OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_subject;
  uint64_t v26 = 0;
  char v27 = -1;
  sub_1C27D99EC();
  swift_allocObject();
  uint64_t v11 = v3;
  uint64_t v12 = sub_1C28CD180();
  *(void *)&v3[v10] = v12;
  *(void *)&v11[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_healthStore] = a1;
  uint64_t v26 = v12;
  sub_1C27C27C4((unint64_t *)&unk_1EBB769C8, (void (*)(uint64_t))sub_1C27D99EC);
  id v13 = a1;
  swift_retain();
  sub_1C28CD310();
  swift_release();
  sub_1C27C27C4((unint64_t *)&unk_1EBB769B0, (void (*)(uint64_t))sub_1C27D9F4C);
  uint64_t v14 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  *(void *)&v11[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_publisher] = v14;

  uint64_t v15 = (objc_class *)type metadata accessor for CloudSyncEventPublisherObserver();
  v25.receiver = v11;
  v25.super_class = v15;
  uint64_t v16 = (char *)objc_msgSendSuper2(&v25, sel_init, v23);
  uint64_t v17 = v24(v13, v16);
  uint64_t v18 = OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer;
  uint64_t v19 = *(void **)&v16[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer];
  *(void *)&v16[OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_observer] = v17;

  uint64_t result = *(char **)&v16[v18];
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  objc_msgSend(result, sel_startObservingSyncStatus);
  uint64_t result = *(char **)&v16[v18];
  if (!result)
  {
LABEL_8:
    __break(1u);
    return result;
  }
  id v21 = objc_msgSend(result, sel_status);
  if (v21)
  {
    uint64_t v26 = (uint64_t)v21;
    char v27 = 2;
    id v22 = v21;
    sub_1C28CD160();
  }
  else
  {
  }
  return v16;
}

uint64_t sub_1C27C27C4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id static FeatureStatusSupport.hasPairedWatch()()
{
  return objc_msgSend(self, sel_hasPairedWatch);
}

char *sub_1C27C2838(char *result, int64_t a2, char a3, char *a4, unint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = *((void *)a4 + 3);
  int64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v8 = a2;
    }
LABEL_8:
    int64_t v9 = *((void *)a4 + 2);
    if (v8 <= v9) {
      int64_t v10 = *((void *)a4 + 2);
    }
    else {
      int64_t v10 = v8;
    }
    if (v10)
    {
      sub_1C27C2938(0, a5);
      uint64_t v11 = (char *)swift_allocObject();
      size_t v12 = _swift_stdlib_malloc_size(v11);
      *((void *)v11 + 2) = v9;
      *((void *)v11 + 3) = 2 * v12 - 64;
      id v13 = v11 + 32;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[v9 + 32]) {
          memmove(v13, a4 + 32, v9);
        }
        *((void *)a4 + 2) = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v11 = (char *)MEMORY[0x1E4FBC860];
      id v13 = (char *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C27C2980(0, v9, v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void sub_1C27C2938(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C28CE620();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

char *sub_1C27C2980(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + a1 + 32);
    char v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C27C2A68@<X0>(uint64_t result@<X0>, char a2@<W1>, void *a3@<X8>)
{
  uint64_t v5 = *(void *)result;
  if (*(void *)result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C28CE3B0();
    uint64_t result = swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v6 = *(void *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v7 = (void *)MEMORY[0x1E4FBC860];
  if (v6)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    unint64_t v7 = &v19;
    sub_1C27C2C60(0, v6 & ~(v6 >> 63), 0);
    if (v6 < 0)
    {
      __break(1u);
LABEL_23:
      uint64_t result = (uint64_t)sub_1C2802398(0, v7[2] + 1, 1, v7);
      unint64_t v7 = (void *)result;
      goto LABEL_17;
    }
    unint64_t v7 = v19;
    if ((v5 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v6; ++i)
      {
        uint64_t result = MEMORY[0x1C875F6E0](i, v5);
        uint64_t v9 = result;
        uint64_t v19 = v7;
        unint64_t v11 = v7[2];
        unint64_t v10 = v7[3];
        if (v11 >= v10 >> 1)
        {
          uint64_t result = sub_1C27C2C60(v10 > 1, v11 + 1, 1);
          unint64_t v7 = v19;
        }
        id v7[2] = v11 + 1;
        v7[v11 + 4] = v9;
      }
    }
    else
    {
      size_t v12 = (void **)(v5 + 32);
      do
      {
        id v13 = *v12;
        uint64_t v19 = v7;
        unint64_t v14 = v7[2];
        unint64_t v15 = v7[3];
        uint64_t result = v13;
        uint64_t v16 = result;
        if (v14 >= v15 >> 1)
        {
          uint64_t result = sub_1C27C2C60(v15 > 1, v14 + 1, 1);
          unint64_t v7 = v19;
        }
        id v7[2] = v14 + 1;
        v7[v14 + 4] = v16;
        ++v12;
        --v6;
      }
      while (v6);
    }
  }
  if ((a2 & 1) == 0) {
    goto LABEL_20;
  }
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0) {
    goto LABEL_23;
  }
LABEL_17:
  unint64_t v18 = v7[2];
  unint64_t v17 = v7[3];
  if (v18 >= v17 >> 1)
  {
    uint64_t result = (uint64_t)sub_1C2802398((void *)(v17 > 1), v18 + 1, 1, v7);
    unint64_t v7 = (void *)result;
  }
  id v7[2] = v18 + 1;
  v7[v18 + 4] = 0;
LABEL_20:
  *a3 = v7;
  return result;
}

uint64_t sub_1C27C2C60(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C27C2C80(a1, a2, a3, *v3);
  *unint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C27C2C80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C27C2E0C(0, &qword_1EBB76A28, MEMORY[0x1E4F670C0], MEMORY[0x1E4FBBE00]);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  id v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

void sub_1C27C2E0C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t static StorageLocations.notificationProfileImageDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C27C3244();
  MEMORY[0x1F4188790](v2 - 8);
  size_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  static StorageLocations.notificationAssetsDirectory.getter((uint64_t)v4);
  uint64_t v5 = sub_1C28CC330();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_1C27F1154((uint64_t)v4);
    uint64_t v7 = 1;
  }
  else
  {
    sub_1C28CC2D0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    uint64_t v7 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a1, v7, 1, v5);
}

uint64_t static StorageLocations.notificationAssetsDirectory.getter@<X0>(uint64_t a1@<X8>)
{
  sub_1C27C3244();
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v14 - v6;
  uint64_t v8 = (void *)sub_1C28CC770();
  id v9 = objc_msgSend(v8, sel_containerURLForSecurityApplicationGroupIdentifier_, *MEMORY[0x1E4F2BD60]);

  if (v9)
  {
    sub_1C28CC310();

    uint64_t v10 = sub_1C28CC330();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  else
  {
    uint64_t v10 = sub_1C28CC330();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 1, 1, v10);
  }
  sub_1C27C31E0((uint64_t)v5, (uint64_t)v7);
  sub_1C28CC330();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v7, 1, v10) == 1)
  {
    sub_1C27F1154((uint64_t)v7);
    uint64_t v12 = 1;
  }
  else
  {
    sub_1C28CC2D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v10);
    uint64_t v12 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a1, v12, 1, v10);
}

uint64_t sub_1C27C31E0(uint64_t a1, uint64_t a2)
{
  sub_1C27C3244();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C27C3244()
{
  if (!qword_1EBB768B0)
  {
    sub_1C28CC330();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB768B0);
    }
  }
}

uint64_t sub_1C27C329C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v56 = a1;
  sub_1C27BBE08();
  uint64_t v4 = MEMORY[0x1F4188790](v3 - 8);
  uint64_t v55 = (uint64_t)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v50 - v6;
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v53 = *(void *)(v8 - 8);
  uint64_t v54 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v52 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v11 = v10;
  sub_1C28CC680();
  uint64_t v13 = v60;
  uint64_t v12 = v61;
  uint64_t v14 = self;
  uint64_t result = (uint64_t)objc_msgSend(v14, sel_currentOSBuild);
  if (!result)
  {
    __break(1u);
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v16 = (void *)result;
  uint64_t v17 = sub_1C28CD730();
  uint64_t v19 = v18;

  if (!v12)
  {
    swift_bridgeObjectRelease();
LABEL_8:
    uint64_t v21 = sub_1C28CC450();
    uint64_t v22 = *(void *)(v21 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v7, v56, v21);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v22 + 56))(v7, 0, 1, v21);
    sub_1C27BBDA4((uint64_t)v7, v55);
    type metadata accessor for CurrentOSUpdateDateProvider();
    sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
    sub_1C28CC690();
    sub_1C281B8AC((uint64_t)v7);
    uint64_t result = (uint64_t)objc_msgSend(v14, sel_currentOSBuild);
    if (!result)
    {
LABEL_29:
      __break(1u);
      return result;
    }
    uint64_t v23 = (void *)result;
    uint64_t v24 = sub_1C28CD730();
    uint64_t v26 = v25;

    uint64_t v60 = v24;
    uint64_t v61 = v26;
    sub_1C28CC690();
    goto LABEL_10;
  }
  if (v13 == v17 && v12 == v19)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_10;
  }
  char v20 = sub_1C28CE640();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0) {
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v51 = type metadata accessor for CurrentOSUpdateDateProvider();
  v50[2] = v2 + *(int *)(v51 + 20);
  sub_1C28CC680();
  v50[3] = v11;
  v50[1] = v2;
  if (v61)
  {
    char v27 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v27 = 0;
  }
  HKNSOperatingSystemVersionFromString();
  uint64_t v29 = v60;
  uint64_t v28 = v61;
  uint64_t v30 = v62;

  uint64_t result = (uint64_t)objc_msgSend(v14, sel_currentOSVersion);
  if (!result) {
    goto LABEL_28;
  }
  uint64_t v31 = (void *)result;
  sub_1C28CD730();

  uint64_t v32 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  HKNSOperatingSystemVersionFromString();
  uint64_t v34 = v60;
  uint64_t v33 = v61;
  uint64_t v35 = v62;

  uint64_t v60 = v34;
  uint64_t v61 = v33;
  uint64_t v62 = v35;
  if (!HKNSOperatingSystemVersionIsUnknown())
  {
    uint64_t v60 = v29;
    uint64_t v61 = v28;
    uint64_t v62 = v30;
    if ((HKNSOperatingSystemVersionIsUnknown() & 1) == 0)
    {
      uint64_t v60 = v29;
      uint64_t v61 = v28;
      uint64_t v62 = v30;
      uint64_t v57 = v34;
      uint64_t v58 = v33;
      uint64_t v59 = v35;
      uint64_t result = HKNSOperatingSystemVersionsEqual();
      if (result) {
        return result;
      }
    }
    if (v29 == v34)
    {
      if (v28 == v33)
      {
LABEL_25:
        uint64_t v60 = v34;
        uint64_t v61 = v33;
        uint64_t v62 = v35;
        id v46 = (id)HKNSOperatingSystemVersionString();
        uint64_t v47 = sub_1C28CD730();
        uint64_t v49 = v48;

        uint64_t v60 = v47;
        uint64_t v61 = v49;
        return sub_1C28CC690();
      }
      uint64_t v40 = sub_1C28CC450();
      uint64_t v41 = *(void *)(v40 - 8);
      (*(void (**)(char *, uint64_t, uint64_t))(v41 + 16))(v7, v56, v40);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v41 + 56))(v7, 0, 1, v40);
      sub_1C27BBDA4((uint64_t)v7, v55);
      sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
      sub_1C28CC690();
    }
    else
    {
      uint64_t v42 = sub_1C28CC450();
      uint64_t v43 = *(void *)(v42 - 8);
      uint64_t v44 = v43;
      uint64_t v53 = *(void *)(v43 + 16);
      uint64_t v54 = v43 + 16;
      ((void (*)(char *, uint64_t, uint64_t))v53)(v7, v56, v42);
      uint64_t v52 = *(char **)(v44 + 56);
      ((void (*)(char *, void, uint64_t, uint64_t))v52)(v7, 0, 1, v42);
      uint64_t v45 = v55;
      sub_1C27BBDA4((uint64_t)v7, v55);
      sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, MEMORY[0x1E4F67098]);
      sub_1C28CC690();
      sub_1C281B8AC((uint64_t)v7);
      ((void (*)(char *, uint64_t, uint64_t))v53)(v7, v56, v42);
      ((void (*)(char *, void, uint64_t, uint64_t))v52)(v7, 0, 1, v42);
      sub_1C27BBDA4((uint64_t)v7, v45);
      sub_1C28CC690();
    }
    sub_1C281B8AC((uint64_t)v7);
    goto LABEL_25;
  }
  uint64_t v36 = v52;
  sub_1C28CCDC0();
  uint64_t v37 = sub_1C28CCE00();
  os_log_type_t v38 = sub_1C28CDCB0();
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v39 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v39 = 0;
    _os_log_impl(&dword_1C27B7000, v37, v38, "Current OS Version is unknown; cannot evaluate version update dates",
      v39,
      2u);
    MEMORY[0x1C87609B0](v39, -1, -1);
  }

  return (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v36, v54);
}

uint64_t sub_1C27C3A54(uint64_t a1, void (*a2)(char *), uint64_t a3, void *a4)
{
  uint64_t v8 = *(void *)(*(void *)a1 + 80);
  uint64_t v9 = sub_1C28CDF70();
  uint64_t v25 = *(void *)(v9 - 8);
  uint64_t v26 = v9;
  uint64_t v10 = MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v23 - v11;
  uint64_t v13 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v10);
  unint64_t v15 = (char *)&v23 - v14;
  uint64_t v16 = (void *)swift_allocObject();
  v16[2] = v8;
  v16[3] = a2;
  uint64_t v24 = a2;
  v16[4] = a3;
  char v27 = sub_1C27BCA04;
  uint64_t v28 = v16;
  uint64_t v29 = a4;
  swift_beginAccess();
  swift_getFunctionTypeMetadata1();
  sub_1C27C4F84();
  id v17 = a4;
  uint64_t v23 = a3;
  swift_retain();
  uint64_t v18 = v25;
  swift_getTupleTypeMetadata2();
  sub_1C28CDA30();
  sub_1C28CD9F0();
  swift_endAccess();
  uint64_t v19 = a1 + *(void *)(*(void *)a1 + 96);
  swift_beginAccess();
  uint64_t v20 = v19;
  uint64_t v21 = v26;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v12, v20, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, v8) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v12, v21);
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v15, v12, v8);
  v24(v15);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v8);
}

uint64_t _s6SafetyOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1C27C3DD4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC620();
  uint64_t v21 = 1;
  long long v22 = 0u;
  long long v23 = 0u;
  char v24 = 2;
  uint64_t v6 = v1 + *(void *)(*(void *)v1 + 144);
  swift_beginAccess();
  sub_1C27CE908((uint64_t)&v21, v6);
  swift_endAccess();
  id v7 = *(id *)(v1 + *(void *)(*(void *)v1 + 128));
  sub_1C28CC630();
  sub_1C28CCFF0();
  sub_1C28CC620();
  objc_msgSend(v7, sel_invalidate);
  sub_1C28CC630();
  sub_1C28CCDC0();
  swift_retain();
  int v8 = sub_1C28CCE00();
  os_log_type_t v9 = sub_1C28CDCD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v19 = v2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v21 = v11;
    id v17 = v7;
    *(_DWORD *)uint64_t v10 = 136315138;
    uint64_t v12 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 120));
    uint64_t v18 = v5;
    uint64_t v13 = v3;
    uint64_t v14 = *v12;
    unint64_t v15 = v12[1];
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1C27D36AC(v14, v15, &v21);
    sub_1C28CDF90();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v8, v9, "[BindDaemonTransaction] Stream completed, invalidated daemon transaction with name: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v11, -1, -1);
    MEMORY[0x1C87609B0](v10, -1, -1);

    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v19);
  }
  else
  {

    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
}

uint64_t sub_1C27C412C()
{
  uint64_t v1 = *MEMORY[0x1E4FBC8C8] & *v0;
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v3 = (void *)swift_allocObject();
  v3[2] = *(void *)(v1 + 80);
  v3[3] = *(void *)(v1 + 88);
  v3[4] = v2;
  swift_retain();
  sub_1C27C4210((uint64_t)sub_1C27D1E3C, (uint64_t)v3);
  swift_release();

  return swift_release();
}

void sub_1C27C4210(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = (void *)(*MEMORY[0x1E4FBC8C8] & *v3);
  id v7 = *(void **)((char *)v3 + v6[14]);
  uint64_t v8 = swift_allocObject();
  swift_unknownObjectWeakInit();
  os_log_type_t v9 = (void *)swift_allocObject();
  v9[2] = v6[10];
  v9[3] = v6[11];
  v9[4] = v8;
  void v9[5] = a1;
  v9[6] = a2;
  v11[4] = sub_1C27D13E4;
  v11[5] = v9;
  v11[0] = MEMORY[0x1E4F143A8];
  v11[1] = 1107296256;
  v11[2] = sub_1C27D1340;
  v11[3] = &block_descriptor;
  uint64_t v10 = _Block_copy(v11);
  sub_1C27C4380(a1);
  swift_release();
  objc_msgSend(v7, sel_fetchAllProfilesWithCompletion_, v10);
  _Block_release(v10);
}

uint64_t sub_1C27C4380(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

id sub_1C27C4390(void *a1, uint64_t a2, unsigned char *a3, uint64_t a4)
{
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&aBlock[-1] - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*a1)
  {
    sub_1C28CCD70();
    uint64_t v12 = sub_1C28CCE00();
    os_log_type_t v13 = sub_1C28CDCD0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = (uint8_t *)swift_slowAlloc();
      uint64_t v15 = swift_slowAlloc();
      uint64_t v31 = v15;
      *(_DWORD *)uint64_t v14 = 136315138;
      aBlock[0] = a4;
      swift_getMetatypeMetadata();
      uint64_t v16 = sub_1C28CD750();
      aBlock[0] = sub_1C27D36AC(v16, v17, &v31);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v12, v13, "[%s] fetch operation already enqueued. Not enqueuing another.", v14, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v15, -1, -1);
      MEMORY[0x1C87609B0](v14, -1, -1);
    }

    return (id)(*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  else
  {
    uint64_t v19 = *(void **)(a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore);
    uint64_t v20 = (objc_class *)type metadata accessor for MedicalIDFetchOperation();
    uint64_t v21 = (char *)objc_allocWithZone(v20);
    *(void *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDData] = 0;
    *(void *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_fetchError] = 0;
    *(void *)&v21[OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDStore] = v19;
    v30.receiver = v21;
    v30.super_class = v20;
    id v22 = v19;
    id v23 = objc_msgSendSuper2(&v30, sel_init);
    uint64_t v24 = swift_allocObject();
    swift_unknownObjectWeakInit();
    aBlock[4] = sub_1C27DB8B4;
    aBlock[5] = v24;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1C27BC934;
    aBlock[3] = &block_descriptor_1;
    uint64_t v25 = _Block_copy(aBlock);
    id v26 = v23;
    swift_retain();
    sub_1C27C4380((uint64_t)sub_1C27DB8B4);
    swift_release();
    objc_msgSend(v26, sel_setCompletionBlock_, v25);
    _Block_release(v25);
    swift_release_n();

    char v27 = (id *)(a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
    swift_beginAccess();
    id result = objc_msgSend(*v27, sel_addOperation_, v26);
    *a1 = v26;
    *a3 = 1;
  }
  return result;
}

char *MedicalIDCache.init(medicalIDStore:)(void *a1)
{
  id ObjectType = (id)swift_getObjectType();
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v32 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BDC7C(0, &qword_1EBB770E0, MEMORY[0x1E4F1AC70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v29 - v9;
  uint64_t v11 = &v1[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache__medicalIDDataResult];
  uint64_t v35 = 0;
  uint64_t v12 = v1;
  sub_1C28CD280();
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v10, v7);
  uint64_t v13 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchOperation;
  uint64_t v35 = 0;
  sub_1C27DBA40(0, &qword_1EBB77088, (uint64_t (*)(uint64_t))sub_1C27DAD8C, MEMORY[0x1E4F674D8]);
  swift_allocObject();
  *(void *)&v12[v13] = sub_1C28CCB40();
  uint64_t v14 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver;
  *(void *)&v12[v14] = objc_msgSend(objc_allocWithZone((Class)MedicalIDChangeObserver), sel_init);
  uint64_t v15 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB770F0);
  *(void *)&v12[v15] = sub_1C28CDE20();
  *(void *)&v12[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore] = a1;
  id v16 = a1;

  unint64_t v17 = (objc_class *)type metadata accessor for MedicalIDCache();
  v34.receiver = v12;
  v34.super_class = v17;
  uint64_t v18 = (char *)objc_msgSendSuper2(&v34, sel_init);
  uint64_t v19 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver;
  uint64_t v20 = *(void **)&v18[OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDChangeObserver];
  uint64_t v21 = v18;
  objc_msgSend(v20, sel_setDelegate_, v21);
  objc_msgSend(*(id *)&v18[v19], sel_startObservingChanges);
  sub_1C28CCD70();
  id v22 = sub_1C28CCE00();
  os_log_type_t v23 = sub_1C28CDCD0();
  if (os_log_type_enabled(v22, v23))
  {
    uint64_t v24 = (uint8_t *)swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    uint64_t v33 = v25;
    uint64_t v30 = v3;
    *(_DWORD *)uint64_t v24 = 136315138;
    uint64_t v35 = (uint64_t)ObjectType;
    swift_getMetatypeMetadata();
    id ObjectType = v16;
    uint64_t v26 = sub_1C28CD750();
    uint64_t v35 = sub_1C27D36AC(v26, v27, &v33);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v22, v23, "[%s] init()", v24, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v25, -1, -1);
    MEMORY[0x1C87609B0](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v30);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v32 + 8))(v5, v3);
  }
  return v21;
}

uint64_t sub_1C27C4B38@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v6 = *(void *)(*a1 + 80);
  uint64_t v7 = sub_1C28CDF70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v14 - v9;
  uint64_t v11 = *(void *)(v6 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v14 - v9, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, v6);
  uint64_t v12 = (char *)a1 + *(void *)(*a1 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v12, v10, v7);
  swift_endAccess();
  swift_beginAccess();
  *a3 = a1[2];
  return swift_bridgeObjectRetain();
}

id (*static LegacyObservable.create()(void *a1))(uint64_t)
{
  sub_1C27C4D48(&v3);
  *a1 = v3;
  swift_retain();
  return sub_1C27D8298;
}

char *sub_1C27C4D48@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ObservableBody();
  uint64_t v2 = swift_allocObject();
  id result = sub_1C27C4DA4();
  *a1 = v2;
  return result;
}

uint64_t type metadata accessor for ObservableBody()
{
  return __swift_instantiateGenericMetadata();
}

char *sub_1C27C4DA4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void *)(*(void *)v0 + 80);
  swift_getFunctionTypeMetadata1();
  sub_1C27C4F84();
  swift_getTupleTypeMetadata2();
  *((void *)v1 + 2) = sub_1C28CD9A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(&v1[*(void *)(*(void *)v1 + 96)], 1, 1, v2);
  uint64_t v3 = *(void *)(*(void *)v1 + 104);
  sub_1C28CC650();
  swift_allocObject();
  *(void *)&v1[v3] = sub_1C28CC640();
  return v1;
}

unsigned char *storeEnumTagSinglePayload for CloudSyncRestoreState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *id result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *id result = a2 + 3;
        break;
    }
  }
  return result;
}

void sub_1C27C4F84()
{
  if (!qword_1EBB75978)
  {
    sub_1C27D8F64();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75978);
    }
  }
}

uint64_t Publishers.BufferUpstreamPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v20[0] = a1;
  uint64_t v5 = *(uint64_t **)(a2 + 16);
  uint64_t v6 = *(v5 - 1);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = v3 + *(int *)(v14 + 52);
  uint64_t v21 = v5;
  uint64_t v15 = *(void *)(v14 + 32);
  uint64_t v16 = *(void *)(v14 + 40);
  uint64_t v22 = *(void *)(v14 + 24);
  uint64_t v23 = v17;
  uint64_t v24 = v15;
  uint64_t v25 = v16;
  uint64_t v26 = v18;
  _s23BufferUpstreamPublisherV5InnerCMa();
  (*(void (**)(char *, void, uint64_t))(v11 + 16))(v13, v20[0], a3);
  (*(void (**)(char *, uint64_t, uint64_t *))(v6 + 16))(v9, v3, v5);
  swift_allocObject();
  uint64_t v21 = sub_1C27C51D4((uint64_t)v13, (uint64_t)v9);
  swift_getWitnessTable();
  sub_1C28CD410();
  return swift_release();
}

uint64_t *sub_1C27C51D4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v18 = a2;
  uint64_t v16 = a1;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 96);
  uint64_t v17 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v8 = (char *)&v16 - v7;
  sub_1C28CC650();
  swift_allocObject();
  v2[2] = sub_1C28CC640();
  sub_1C28CC9F0();
  swift_allocObject();
  v2[3] = sub_1C28CC9E0();
  *((_OWORD *)v2 + 2) = 0u;
  *((_OWORD *)v2 + 3) = 0u;
  v2[8] = 0;
  *((unsigned char *)v2 + 72) = 2;
  uint64_t v9 = (uint64_t)v3 + *(void *)(*v3 + 152);
  uint64_t v10 = *(void *)(v5 - 8);
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v11(v9, 1, 1, v5);
  uint64_t v12 = *(void *)(*v3 + 160);
  *(uint64_t *)((char *)v3 + v12) = sub_1C28CD080();
  *((unsigned char *)v3 + *(void *)(*v3 + 168)) = 0;
  *((unsigned char *)v3 + *(void *)(*v3 + 176)) = 0;
  uint64_t v13 = *(void *)(*v3 + 184);
  uint64_t v14 = *(void *)(v4 + 80);
  swift_getAssociatedTypeWitness();
  *(uint64_t *)((char *)v3 + v13) = sub_1C28CD9A0();
  *(uint64_t *)((char *)v3 + *(void *)(*v3 + 200)) = 0;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v8, v16, v5);
  v11((uint64_t)v8, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v9, v8, v17);
  swift_endAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 32))((uint64_t)v3 + *(void *)(*v3 + 192), v18, v14);
  return v3;
}

uint64_t _s23BufferUpstreamPublisherV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C27C5510(char *a1, char a2)
{
  uint64_t v3 = v2;
  unint64_t v72 = (unint64_t)a1;
  uint64_t v5 = *(void *)(*v2 + 88);
  uint64_t v6 = *(void *)(*v2 + 80);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v7 = sub_1C28CD030();
  uint64_t v8 = sub_1C28CDF70();
  uint64_t v69 = *(void *)(v8 - 8);
  uint64_t v70 = v8;
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v62 = (char *)&v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v61 - v12;
  uint64_t v14 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v11);
  unsigned int v68 = (char *)&v61 - v15;
  uint64_t v73 = v6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v63 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v17 = (char *)&v61 - v16;
  sub_1C28CC9C0();
  if ((a2 & 1) == 0)
  {
    uint64_t v18 = v14;
    uint64_t v19 = (char *)v2 + *(void *)(*v2 + 128);
    swift_beginAccess();
    uint64_t v20 = *((void *)v19 + 1);
    sub_1C28CD090();
    if ((sub_1C28CD070() & 1) == 0)
    {
      sub_1C28CD090();
      char v21 = sub_1C28CD070();
      uint64_t v22 = sub_1C28CD090();
      if ((v21 & 1) == 0)
      {
        uint64_t result = sub_1C28CD070();
        if (result) {
          goto LABEL_8;
        }
        if (((v20 | v72) & 0x8000000000000000) != 0)
        {
LABEL_65:
          __break(1u);
LABEL_66:
          __break(1u);
          goto LABEL_67;
        }
        uint64_t v22 = v20 + v72;
        if (__OFADD__(v20, v72))
        {
LABEL_8:
          uint64_t v22 = sub_1C28CD090();
        }
        else if (v22 < 0)
        {
LABEL_67:
          __break(1u);
          goto LABEL_68;
        }
      }
      *((void *)v19 + 1) = v22;
    }
    swift_endAccess();
    uint64_t v14 = v18;
  }
  v67 = v13;
  uint64_t v24 = (uint64_t *)((char *)v3 + *(void *)(*v3 + 128));
  swift_beginAccess();
  uint64_t v25 = v24[1];
  sub_1C28CD090();
  uint64_t result = sub_1C28CD070();
  if ((result & 1) == 0)
  {
    if (v25 < 0)
    {
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      __break(1u);
      goto LABEL_63;
    }
    if (!v25)
    {
      sub_1C28CD080();
      if ((a2 & 1) != 0 || (sub_1C28CD070() & 1) == 0)
      {
        uint64_t v41 = sub_1C28CD080();
        goto LABEL_58;
      }
    }
  }
  uint64_t v64 = v14;
  uint64_t v65 = v7;
  uint64_t v26 = v3 + 3;
  unint64_t v27 = (char *)v3 + *(void *)(*v3 + 112);
  swift_beginAccess();
  uint64_t v28 = AssociatedTypeWitness;
  sub_1C28CDA30();
  int v66 = v3;
  uint64_t v29 = v3[3];
  uint64_t v30 = v28;
  uint64_t v74 = v29;
  swift_getWitnessTable();
  char v31 = sub_1C28CDBB0();
  unint64_t v72 = (unint64_t)v27;
  if ((v31 & 1) == 0)
  {
    uint64_t v42 = (void (**)(char *, uint64_t))(v63 + 8);
    do
    {
      unint64_t v44 = *v24;
      unint64_t v45 = v24[1];
      sub_1C28CD090();
      if (sub_1C28CD070())
      {
        sub_1C28CD090();
        if (sub_1C28CD070()) {
          break;
        }
      }
      sub_1C28CD090();
      if (sub_1C28CD070()) {
        break;
      }
      sub_1C28CD090();
      if ((sub_1C28CD070() & 1) == 0 && v44 >= v45) {
        break;
      }
      swift_beginAccess();
      sub_1C28CDA00();
      swift_endAccess();
      uint64_t v46 = sub_1C28CD010();
      (*v42)(v17, v30);
      swift_beginAccess();
      uint64_t v47 = v24[1];
      sub_1C28CD090();
      if ((sub_1C28CD070() & 1) == 0)
      {
        uint64_t v48 = v5;
        sub_1C28CD090();
        char v49 = sub_1C28CD070();
        uint64_t v50 = sub_1C28CD090();
        if (v49)
        {
          uint64_t v5 = v48;
        }
        else
        {
          uint64_t result = sub_1C28CD070();
          uint64_t v5 = v48;
          if (result) {
            goto LABEL_35;
          }
          if ((v47 | v46) < 0) {
            goto LABEL_61;
          }
          uint64_t v50 = v47 + v46;
          if (__OFADD__(v47, v46))
          {
LABEL_35:
            uint64_t v50 = sub_1C28CD090();
          }
          else if (v50 < 0)
          {
            goto LABEL_62;
          }
        }
        v24[1] = v50;
      }
      uint64_t v51 = *v24;
      sub_1C28CD090();
      uint64_t result = sub_1C28CD070();
      if (result) {
        goto LABEL_21;
      }
      if (v51 < 0)
      {
        __break(1u);
        goto LABEL_60;
      }
      uint64_t v43 = v51 + 1;
      if (__OFADD__(v51, 1)) {
LABEL_21:
      }
        uint64_t v43 = sub_1C28CD090();
      *uint64_t v24 = v43;
      swift_endAccess();
      uint64_t v74 = *v26;
      swift_getWitnessTable();
    }
    while ((sub_1C28CDBB0() & 1) == 0);
  }
  uint64_t v32 = (char *)v66 + *(void *)(*v66 + 120);
  swift_beginAccess();
  uint64_t v34 = v69;
  uint64_t v33 = v70;
  uint64_t v35 = v67;
  (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v67, v32, v70);
  uint64_t v36 = v64;
  uint64_t v37 = v65;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v35, 1, v65) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v36 + 32))(v68, v35, v37);
    *uint64_t v26 = sub_1C28CD9A0();
    swift_bridgeObjectRelease();
    uint64_t v52 = v36;
    uint64_t v53 = sub_1C28CD080();
    uint64_t v54 = sub_1C28CD080();
    uint64_t v55 = sub_1C28CD080();
    *uint64_t v24 = v53;
    v24[1] = v54;
    v24[2] = v55;
    uint64_t v56 = v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v62, 1, 1, v37);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v34 + 40))(v32, v56, v33);
    swift_endAccess();
    uint64_t v57 = v68;
    sub_1C28CCFF0();
    uint64_t v41 = sub_1C28CD080();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v57, v37);
LABEL_58:
    sub_1C28CC9D0();
    return v41;
  }
  (*(void (**)(char *, uint64_t))(v34 + 8))(v35, v33);
  uint64_t v38 = v24[1];
  uint64_t v39 = v24[2];
  sub_1C28CD090();
  char v40 = sub_1C28CD070();
  uint64_t v41 = sub_1C28CD090();
  if ((v40 & 1) == 0)
  {
    uint64_t result = sub_1C28CD070();
    if (result)
    {
      uint64_t v41 = sub_1C28CD080();
      goto LABEL_48;
    }
    if (((v39 | v38) & 0x8000000000000000) == 0)
    {
      uint64_t v41 = v38 - v39;
      if (v38 - v39 >= 0) {
        goto LABEL_48;
      }
      goto LABEL_64;
    }
LABEL_63:
    __break(1u);
LABEL_64:
    __break(1u);
    goto LABEL_65;
  }
LABEL_48:
  swift_beginAccess();
  uint64_t v58 = v24[2];
  sub_1C28CD090();
  if (sub_1C28CD070())
  {
LABEL_57:
    swift_endAccess();
    goto LABEL_58;
  }
  sub_1C28CD090();
  char v59 = sub_1C28CD070();
  uint64_t v60 = sub_1C28CD090();
  if (v59)
  {
LABEL_56:
    v24[2] = v60;
    goto LABEL_57;
  }
  uint64_t result = sub_1C28CD070();
  if (result)
  {
LABEL_54:
    uint64_t v60 = sub_1C28CD090();
    goto LABEL_56;
  }
  if ((v58 | v41) < 0) {
    goto LABEL_66;
  }
  uint64_t v60 = v58 + v41;
  if (__OFADD__(v58, v41)) {
    goto LABEL_54;
  }
  if ((v60 & 0x8000000000000000) == 0) {
    goto LABEL_56;
  }
LABEL_68:
  __break(1u);
  return result;
}

void sub_1C27C5DA4(void *a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v45 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v45 - 8);
  MEMORY[0x1F4188790](v45);
  uint64_t v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD70();
  id v10 = a1;
  id v11 = a2;
  id v12 = v10;
  id v13 = a2;
  uint64_t v14 = sub_1C28CCE00();
  os_log_type_t v15 = sub_1C28CDCD0();
  int v16 = v15;
  BOOL v17 = os_log_type_enabled(v14, v15);
  id v46 = v12;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    unint64_t v44 = v3;
    uint64_t v19 = v18;
    uint64_t v43 = swift_slowAlloc();
    v47[0] = v43;
    *(_DWORD *)uint64_t v19 = 136315650;
    HIDWORD(v42) = v16;
    uint64_t v49 = ObjectType;
    swift_getMetatypeMetadata();
    uint64_t v20 = sub_1C28CD750();
    uint64_t v49 = sub_1C27D36AC(v20, v21, v47);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v19 + 12) = 2080;
    uint64_t v49 = (uint64_t)a1;
    sub_1C27D9154(0, &qword_1EBB77108, &qword_1EBB77100, 0x1E4F2B920, MEMORY[0x1E4FBB718]);
    id v22 = v12;
    uint64_t v23 = sub_1C28CD750();
    uint64_t v49 = sub_1C27D36AC(v23, v24, v47);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    *(_WORD *)(v19 + 22) = 2082;
    uint64_t v49 = (uint64_t)a2;
    id v25 = a2;
    sub_1C27DBA40(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
    uint64_t v26 = sub_1C28CD750();
    uint64_t v49 = sub_1C27D36AC(v26, v27, v47);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v14, BYTE4(v42), "[%s] medicalIDHasUpdated(): fetchedData: %s, fetchError: %{public}s", (uint8_t *)v19, 0x20u);
    uint64_t v28 = v43;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v28, -1, -1);
    uint64_t v29 = v19;
    uint64_t v3 = v44;
    MEMORY[0x1C87609B0](v29, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v45);
  if (a2)
  {
    sub_1C280742C();
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1C28D23F0;
    uint64_t v49 = 0x726F727265;
    unint64_t v50 = 0xE500000000000000;
    id v31 = a2;
    sub_1C28CE0C0();
    swift_getErrorValue();
    uint64_t v32 = v47[1];
    uint64_t v33 = v48;
    *(void *)(inited + 96) = v48;
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(inited + 72));
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(boxed_opaque_existential_0, v32, v33);
    unint64_t v35 = sub_1C2806454(inited);

    uint64_t v36 = v46;
    if (!a1) {
      goto LABEL_6;
    }
  }
  else
  {
    unint64_t v35 = 0;
    uint64_t v36 = v46;
    if (!a1)
    {
LABEL_6:
      if (a2) {
        goto LABEL_14;
      }
      goto LABEL_11;
    }
  }
  id v37 = v36;
  if ((objc_msgSend(v37, sel_isEmpty) & 1) == 0)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    uint64_t v49 = (uint64_t)a1;
    goto LABEL_13;
  }

  if (a2) {
    goto LABEL_14;
  }
LABEL_11:
  swift_getKeyPath();
  swift_getKeyPath();
  uint64_t v49 = 2;
LABEL_13:
  id v38 = v3;
  sub_1C28CD2D0();
LABEL_14:
  id v39 = objc_msgSend(self, sel_defaultCenter);
  if (qword_1EBB77280 != -1) {
    swift_once();
  }
  uint64_t v40 = qword_1EBB77110;
  if (v35)
  {
    uint64_t v41 = (void *)sub_1C28CD5F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v41 = 0;
  }
  objc_msgSend(v39, sel_postNotificationName_object_userInfo_, v40, v3, v41);
}

uint64_t sub_1C27C6360@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  unsigned int v68 = a4;
  uint64_t v69 = a1;
  uint64_t v70 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1C28CDF70();
  unint64_t v61 = sub_1C27C7060();
  uint64_t v6 = sub_1C28CD1C0();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v60 = (char *)v50 - v7;
  sub_1C27C6D74();
  uint64_t v9 = v8;
  uint64_t v10 = sub_1C27C6D2C(&qword_1EBB75600, (void (*)(uint64_t))sub_1C27C6D74);
  uint64_t v52 = v9;
  v50[1] = v10;
  uint64_t v11 = sub_1C28CCF10();
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v51 = (char *)v50 - v12;
  sub_1C27C6C64(255, &qword_1EBB75628, (unint64_t *)&qword_1EBB75698);
  uint64_t v14 = v13;
  uint64_t v15 = sub_1C27C6CDC(&qword_1EBB75620, &qword_1EBB75628, (unint64_t *)&qword_1EBB75698);
  uint64_t v57 = v14;
  uint64_t v55 = v15;
  uint64_t v16 = sub_1C28CCF10();
  uint64_t v58 = *(void *)(v16 - 8);
  uint64_t v59 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v56 = (char *)v50 - v17;
  uint64_t v18 = MEMORY[0x1E4FBB550];
  sub_1C27C6C64(255, &qword_1EBB75638, (unint64_t *)&qword_1EBB76D80);
  uint64_t v20 = v19;
  uint64_t v64 = sub_1C27C6CDC(&qword_1EBB75630, &qword_1EBB75638, (unint64_t *)&qword_1EBB76D80);
  uint64_t v65 = v20;
  uint64_t v21 = sub_1C28CCF10();
  uint64_t v66 = *(void *)(v21 - 8);
  uint64_t v67 = v21;
  MEMORY[0x1F4188790](v21);
  uint64_t v23 = (char *)v50 - v22;
  uint64_t v24 = MEMORY[0x1E4FBB1A0];
  sub_1C27C6C64(255, &qword_1EBB75618, (unint64_t *)&qword_1EBB769F0);
  sub_1C27C6CDC(&qword_1EBB75610, &qword_1EBB75618, (unint64_t *)&qword_1EBB769F0);
  uint64_t v25 = sub_1C28CCF10();
  MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)v50 - v27;
  if (AssociatedTypeWitness == v24)
  {
    uint64_t v34 = v70;
    unint64_t v35 = *(uint64_t (**)(uint64_t, uint64_t))(v70 + 16);
    uint64_t v67 = v26;
    uint64_t v36 = (void *)v35(a2, v70);
    (*(void (**)(uint64_t, uint64_t))(v34 + 24))(a2, v34);
    uint64_t v37 = sub_1C28CDD50();

    swift_bridgeObjectRelease();
    uint64_t v71 = v37;
    uint64_t v38 = swift_allocObject();
    *(void *)(v38 + 16) = a2;
    *(void *)(v38 + 24) = v34;
    sub_1C28CD330();
    swift_release();
    swift_release();
    swift_getWitnessTable();
    uint64_t v32 = sub_1C28CD300();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v28, v25);
  }
  else
  {
    uint64_t v29 = v70;
    if (AssociatedTypeWitness == v18)
    {
      uint64_t v40 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 16))(a2, v70);
      (*(void (**)(uint64_t, uint64_t))(v29 + 24))(a2, v29);
      uint64_t v41 = sub_1C28CDD20();

      swift_bridgeObjectRelease();
      uint64_t v71 = v41;
      uint64_t v42 = swift_allocObject();
      *(void *)(v42 + 16) = a2;
      *(void *)(v42 + 24) = v29;
      sub_1C28CD330();
      swift_release();
      swift_release();
      uint64_t v43 = v67;
      swift_getWitnessTable();
      uint64_t v32 = sub_1C28CD300();
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v66 + 8))(v23, v43);
    }
    else
    {
      if (AssociatedTypeWitness == MEMORY[0x1E4FBB390])
      {
        unint64_t v44 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v70 + 16))(a2, v70);
        (*(void (**)(uint64_t, uint64_t))(v29 + 24))(a2, v29);
        uint64_t v45 = sub_1C28CDD30();

        swift_bridgeObjectRelease();
        uint64_t v71 = v45;
        uint64_t v46 = swift_allocObject();
        *(void *)(v46 + 16) = a2;
        *(void *)(v46 + 24) = v29;
        uint64_t v30 = v56;
        sub_1C28CD330();
        swift_release();
        swift_release();
        uint64_t v31 = v59;
        swift_getWitnessTable();
        uint64_t v32 = sub_1C28CD300();
        uint64_t v33 = v58;
      }
      else if (AssociatedTypeWitness == sub_1C28CC450())
      {
        uint64_t v47 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v29 + 16))(a2, v29);
        (*(void (**)(uint64_t, uint64_t))(v29 + 24))(a2, v29);
        uint64_t v48 = sub_1C28CDD40();

        swift_bridgeObjectRelease();
        uint64_t v71 = v48;
        uint64_t v49 = swift_allocObject();
        *(void *)(v49 + 16) = a2;
        *(void *)(v49 + 24) = v29;
        uint64_t v30 = v51;
        sub_1C28CD330();
        swift_release();
        swift_release();
        uint64_t v31 = v54;
        swift_getWitnessTable();
        uint64_t v32 = sub_1C28CD300();
        uint64_t v33 = v53;
      }
      else
      {
        sub_1C2881B74();
        uint64_t v71 = swift_allocError();
        uint64_t v30 = v60;
        sub_1C28CD1A0();
        uint64_t v31 = v63;
        swift_getWitnessTable();
        uint64_t v32 = sub_1C28CD300();
        uint64_t v33 = v62;
      }
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v30, v31);
    }
  }
  *unsigned int v68 = v32;
  return result;
}

void sub_1C27C6C64(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27EDD7C(255, a3);
    sub_1C27C7060();
    unint64_t v4 = sub_1C28CD240();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C27C6CDC(unint64_t *a1, unint64_t *a2, unint64_t *a3)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27C6C64(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27C6D2C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C27C6D74()
{
  if (!qword_1EBB75608)
  {
    sub_1C27BBE08();
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75608);
    }
  }
}

uint64_t HKKeyValueDomainAccessor.publisher.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v16 = a2;
  uint64_t v4 = *(void *)(a1 - 8);
  uint64_t v5 = *(void *)(v4 + 64);
  MEMORY[0x1F4188790](a1);
  swift_getAssociatedTypeWitness();
  sub_1C28CDF70();
  sub_1C27C7060();
  sub_1C28CD0A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v6 = sub_1C28CD270();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&WitnessTable - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&WitnessTable - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), v2, a1);
  unint64_t v10 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v11 = swift_allocObject();
  uint64_t v12 = v16;
  *(void *)(v11 + 16) = a1;
  *(void *)(v11 + 24) = v12;
  (*(void (**)(unint64_t, char *, uint64_t))(v4 + 32))(v11 + v10, (char *)&WitnessTable - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  sub_1C28CD260();
  swift_getWitnessTable();
  uint64_t v13 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v13;
}

unint64_t sub_1C27C7060()
{
  unint64_t result = qword_1EBB77150;
  if (!qword_1EBB77150)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB77150);
  }
  return result;
}

uint64_t sub_1C27C70C0()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

id sub_1C27C70F4()
{
  return *(id *)(*(void *)v0 + 16);
}

void sub_1C27C7100(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v4 = (void **)v3;
  uint64_t v8 = sub_1C28CC4B0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v24 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_1C27C75A0(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a3 & 1) != 0)
  {
LABEL_7:
    uint64_t v20 = *v4;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7];

      *(void *)(v21 + 8 * v14) = a1;
      return;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a3 & 1) == 0)
  {
    sub_1C2875AB0();
    goto LABEL_7;
  }
  sub_1C27BB1B8(v17, a3 & 1);
  unint64_t v22 = sub_1C27C75A0(a2);
  if ((v18 & 1) != (v23 & 1))
  {
LABEL_14:
    sub_1C28CE680();
    __break(1u);
    return;
  }
  unint64_t v14 = v22;
  uint64_t v20 = *v4;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  sub_1C27D88B0(v14, (uint64_t)v11, a1, v20);
}

char *_s16HealthExperience14MedicalIDCacheC11globalCache3forACSo13HKHealthStoreC_tFZ_0(void *a1)
{
  uint64_t v2 = sub_1C28CC4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v23 - v7;
  id v9 = objc_msgSend(a1, sel_profileIdentifier);
  id v10 = objc_msgSend(v9, sel_identifier);

  sub_1C28CC490();
  if (qword_1EBB77258 != -1) {
    swift_once();
  }
  sub_1C28CC620();
  if (qword_1EBB77270 != -1) {
    swift_once();
  }
  swift_beginAccess();
  uint64_t v11 = off_1EBB77090;
  if (*((void *)off_1EBB77090 + 2) && (unint64_t v12 = sub_1C27C75A0((uint64_t)v8), (v13 & 1) != 0))
  {
    unint64_t v14 = *(void **)(v11[7] + 8 * v12);
    swift_endAccess();
    uint64_t v15 = v14;
  }
  else
  {
    swift_endAccess();
    id v16 = objc_allocWithZone(MEMORY[0x1E4F2B190]);
    id v17 = a1;
    id v18 = objc_msgSend(v16, sel_initWithHealthStore_, v17);
    id v19 = objc_allocWithZone((Class)type metadata accessor for MedicalIDCache());
    uint64_t v20 = MedicalIDCache.init(medicalIDStore:)(v18);

    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    swift_beginAccess();
    uint64_t v15 = v20;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v23 = off_1EBB77090;
    off_1EBB77090 = (_UNKNOWN *)0x8000000000000000;
    sub_1C27C7100((uint64_t)v15, (uint64_t)v6, isUniquelyReferenced_nonNull_native);
    off_1EBB77090 = v23;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v6, v2);
    swift_endAccess();
  }
  sub_1C28CC630();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
  return v15;
}

unint64_t sub_1C27C75A0(uint64_t a1)
{
  sub_1C28CC4B0();
  sub_1C27C7638(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  uint64_t v2 = sub_1C28CD670();

  return sub_1C27C7680(a1, v2);
}

uint64_t sub_1C27C7638(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C27C7680(uint64_t a1, uint64_t a2)
{
  uint64_t v19 = a1;
  uint64_t v4 = sub_1C28CC4B0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = v2;
  uint64_t v8 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v9 = a2 & ~v8;
  uint64_t v18 = v2 + 64;
  if ((*(void *)(v2 + 64 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    char v13 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    uint64_t v12 = v5 + 16;
    uint64_t v11 = v13;
    uint64_t v14 = *(void *)(v12 + 56);
    do
    {
      v11(v7, *(void *)(v20 + 48) + v14 * v9, v4);
      sub_1C27C7638(&qword_1EBB76930, MEMORY[0x1E4F27990]);
      char v15 = sub_1C28CD6E0();
      (*(void (**)(char *, uint64_t))(v12 - 8))(v7, v4);
      if (v15) {
        break;
      }
      unint64_t v9 = (v9 + 1) & v10;
    }
    while (((*(void *)(v18 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) != 0);
  }
  return v9;
}

uint64_t type metadata accessor for AsynchronousOperation()
{
  return self;
}

void sub_1C27C7920()
{
  if (!qword_1EBB77078)
  {
    unint64_t v0 = sub_1C28CCB30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB77078);
    }
  }
}

uint64_t sub_1C27C7978(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransactionRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t TransactionManagedCache.fetchCachedOrCreate(for:using:)@<X0>(uint64_t a1@<X0>, NSObject *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v155 = a3;
  v156 = (void (*)(uint64_t))a2;
  uint64_t v169 = a1;
  uint64_t v160 = a4;
  uint64_t v6 = *v4;
  uint64_t v162 = v6;
  uint64_t v7 = type metadata accessor for TransactionRecord();
  uint64_t v170 = *(void *)(v7 - 8);
  uint64_t v171 = v7;
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  v154 = (char *)&v147 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v8);
  uint64_t v173 = (uint64_t)&v147 - v11;
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  v172 = (char *)&v147 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v168 = (uint64_t)&v147 - v14;
  uint64_t v15 = sub_1C28CCE10();
  uint64_t v165 = *(void *)(v15 - 8);
  uint64_t v166 = v15;
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  v153 = (char *)&v147 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v158 = (char *)&v147 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  v163 = (void (*)(char *, uint64_t))((char *)&v147 - v21);
  MEMORY[0x1F4188790](v20);
  os_log_t v157 = (os_log_t)((char *)&v147 - v22);
  uint64_t v23 = *(void *)(v6 + 80);
  uint64_t v24 = sub_1C28CDF70();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v26 = MEMORY[0x1F4188790](v24);
  v152 = (char *)&v147 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x1F4188790](v26);
  uint64_t v30 = (char *)&v147 - v29;
  uint64_t v31 = *(void *)(v23 - 8);
  uint64_t v32 = MEMORY[0x1F4188790](v28);
  uint64_t v34 = (char *)&v147 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v32);
  uint64_t v36 = (char *)&v147 - v35;
  sub_1C28CC620();
  uint64_t v37 = v31;
  uint64_t v38 = (char *)v24;
  uint64_t v39 = *(void *)(*v5 + 96);
  v164 = v5;
  uint64_t v40 = (char *)v5 + v39;
  uint64_t v41 = v25;
  swift_beginAccess();
  (*(void (**)(char *, char *, char *))(v25 + 16))(v30, v40, v38);
  int v42 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v37 + 48))(v30, 1, v23);
  uint64_t v161 = v23;
  if (v42 == 1)
  {
    uint64_t v43 = (uint64_t)v154;
    unint64_t v44 = v158;
    uint64_t v159 = v37;
    uint64_t v45 = (*(uint64_t (**)(char *, char *))(v41 + 8))(v30, v38);
    uint64_t v46 = v167;
    v156(v45);
    if (v46) {
      return sub_1C28CC630();
    }
    v88 = v44;
    sub_1C28CCDC0();
    sub_1C27C8D1C(v169, v43);
    uint64_t v89 = sub_1C28CCE00();
    os_log_type_t v90 = sub_1C28CDCD0();
    int v91 = v90;
    BOOL v92 = os_log_type_enabled(v89, v90);
    uint64_t v148 = v41;
    v150 = v34;
    v149 = v40;
    if (v92)
    {
      uint64_t v93 = swift_slowAlloc();
      LODWORD(v167) = v91;
      uint64_t v94 = v93;
      uint64_t v168 = swift_slowAlloc();
      v174[0] = v168;
      *(_DWORD *)uint64_t v94 = 136446466;
      uint64_t v95 = sub_1C28CE830();
      uint64_t v175 = sub_1C27D36AC(v95, v96, v174);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v94 + 12) = 2082;
      v97 = (uint64_t *)(v43 + *(int *)(v171 + 20));
      uint64_t v98 = *v97;
      unint64_t v99 = v97[1];
      swift_bridgeObjectRetain();
      uint64_t v175 = sub_1C27D36AC(v98, v99, v174);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27C8C44(v43, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1C27B7000, v89, (os_log_type_t)v167, "[%{public}s]: Created new item for %{public}s", (uint8_t *)v94, 0x16u);
      uint64_t v100 = v168;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v100, -1, -1);
      MEMORY[0x1C87609B0](v94, -1, -1);

      uint64_t v101 = *(void (**)(char *, uint64_t))(v165 + 8);
      v102 = v158;
    }
    else
    {
      sub_1C27C8C44(v43, (uint64_t (*)(void))type metadata accessor for TransactionRecord);

      uint64_t v101 = *(void (**)(char *, uint64_t))(v165 + 8);
      v102 = v88;
    }
    v163 = v101;
    v101(v102, v166);
    v109 = v164;
    uint64_t v110 = (uint64_t)v172;
    uint64_t v111 = v173;
    v112 = v153;
    sub_1C27C8D1C(v169, v173);
    v113 = (void *)((char *)v109 + *(void *)(*v109 + 104));
    swift_beginAccess();
    sub_1C27C039C(v110, v111);
    swift_endAccess();
    sub_1C27C8C44(v110, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    sub_1C28CCDC0();
    swift_retain_n();
    v114 = sub_1C28CCE00();
    int v115 = sub_1C28CDCD0();
    if (os_log_type_enabled(v114, (os_log_type_t)v115))
    {
      LODWORD(v156) = v115;
      os_log_t v157 = v114;
      v158 = v38;
      uint64_t v167 = 0;
      uint64_t v116 = swift_slowAlloc();
      uint64_t v117 = swift_slowAlloc();
      v174[0] = v117;
      *(_DWORD *)uint64_t v116 = 136446466;
      uint64_t v118 = sub_1C28CE830();
      uint64_t v175 = sub_1C27D36AC(v118, v119, v174);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v116 + 12) = 2082;
      uint64_t v120 = *v113;
      int64_t v121 = *(void *)(v120 + 16);
      if (v121)
      {
        uint64_t v155 = v117;
        uint64_t v162 = v116;
        uint64_t v175 = MEMORY[0x1E4FBC860];
        swift_bridgeObjectRetain();
        sub_1C27D8968(0, v121, 0);
        uint64_t result = sub_1C27D90B4(v120);
        int64_t v122 = result;
        int v124 = v123;
        char v126 = v125 & 1;
        uint64_t v168 = v120;
        uint64_t v169 = v120 + 56;
        while ((v122 & 0x8000000000000000) == 0 && v122 < 1 << *(unsigned char *)(v120 + 32))
        {
          if (((*(void *)(v169 + (((unint64_t)v122 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v122) & 1) == 0) {
            goto LABEL_48;
          }
          if (*(_DWORD *)(v120 + 36) != v124) {
            goto LABEL_49;
          }
          sub_1C27C8D1C(*(void *)(v120 + 48) + *(void *)(v170 + 72) * v122, v110);
          sub_1C27C7978(v110, v111);
          v127 = (uint64_t *)(v111 + *(int *)(v171 + 20));
          uint64_t v129 = *v127;
          uint64_t v128 = v127[1];
          swift_bridgeObjectRetain();
          sub_1C27C8C44(v111, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
          uint64_t v130 = v175;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_1C27D8968(0, *(void *)(v130 + 16) + 1, 1);
            uint64_t v130 = v175;
          }
          unint64_t v132 = *(void *)(v130 + 16);
          unint64_t v131 = *(void *)(v130 + 24);
          if (v132 >= v131 >> 1)
          {
            sub_1C27D8968(v131 > 1, v132 + 1, 1);
            uint64_t v130 = v175;
          }
          *(void *)(v130 + 16) = v132 + 1;
          unint64_t v133 = v130 + 16 * v132;
          *(void *)(v133 + 32) = v129;
          *(void *)(v133 + 40) = v128;
          uint64_t v120 = v168;
          uint64_t result = sub_1C27D8CF0(v122, v124, v126 & 1, v168);
          int64_t v122 = result;
          int v124 = v134;
          char v126 = v135 & 1;
          --v121;
          uint64_t v110 = (uint64_t)v172;
          uint64_t v111 = v173;
          if (!v121)
          {
            sub_1C27D968C(result, v134, v135 & 1);
            swift_release();
            swift_bridgeObjectRelease();
            v137 = v153;
            uint64_t v116 = v162;
            uint64_t v117 = v155;
            goto LABEL_41;
          }
        }
        goto LABEL_47;
      }
      swift_release();
      uint64_t v130 = MEMORY[0x1E4FBC860];
      v137 = v153;
LABEL_41:
      uint64_t v138 = MEMORY[0x1C875EEC0](v130, MEMORY[0x1E4FBB1A0]);
      unint64_t v140 = v139;
      swift_bridgeObjectRelease();
      uint64_t v175 = sub_1C27D36AC(v138, v140, v174);
      sub_1C28CDF90();
      swift_release();
      swift_bridgeObjectRelease();
      os_log_t v141 = v157;
      _os_log_impl(&dword_1C27B7000, v157, (os_log_type_t)v156, "[%{public}s]: Updated transactions %{public}s", (uint8_t *)v116, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v117, -1, -1);
      MEMORY[0x1C87609B0](v116, -1, -1);

      v163(v137, v166);
      uint64_t v136 = v159;
      uint64_t v38 = v158;
    }
    else
    {

      swift_release_n();
      v163(v112, v166);
      uint64_t v136 = v159;
    }
    uint64_t v142 = v148;
    v143 = v152;
    v144 = v150;
    uint64_t v145 = v161;
    (*(void (**)(char *, char *, uint64_t))(v136 + 16))(v152, v150, v161);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v136 + 56))(v143, 0, 1, v145);
    v146 = v149;
    swift_beginAccess();
    (*(void (**)(char *, char *, char *))(v142 + 40))(v146, v143, v38);
    swift_endAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v136 + 32))(v160, v144, v145);
    return sub_1C28CC630();
  }
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v37 + 32);
  uint64_t v159 = v37 + 32;
  v47(v36, v30, v23);
  os_log_t v48 = v157;
  sub_1C28CCDC0();
  sub_1C27C8D1C(v169, v168);
  uint64_t v49 = sub_1C28CCE00();
  os_log_type_t v50 = sub_1C28CDCD0();
  BOOL v51 = os_log_type_enabled(v49, v50);
  v151 = v36;
  v158 = (char *)v47;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    v156 = (void (*)(uint64_t))swift_slowAlloc();
    v174[0] = (uint64_t)v156;
    *(_DWORD *)uint64_t v52 = 136446466;
    uint64_t v53 = sub_1C28CE830();
    uint64_t v175 = sub_1C27D36AC(v53, v54, v174);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v52 + 12) = 2082;
    uint64_t v55 = v168;
    uint64_t v56 = (uint64_t *)(v168 + *(int *)(v171 + 20));
    uint64_t v57 = *v56;
    unint64_t v58 = v56[1];
    swift_bridgeObjectRetain();
    uint64_t v175 = sub_1C27D36AC(v57, v58, v174);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C27C8C44(v55, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    _os_log_impl(&dword_1C27B7000, v49, v50, "[%{public}s]: Using cached item for %{public}s", (uint8_t *)v52, 0x16u);
    uint64_t v59 = v156;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v59, -1, -1);
    MEMORY[0x1C87609B0](v52, -1, -1);
  }
  else
  {
    sub_1C27C8C44(v168, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
  }

  uint64_t v60 = *(NSObject **)(v165 + 8);
  ((void (*)(os_log_t, uint64_t))v60)(v48, v166);
  unint64_t v61 = v164;
  uint64_t v62 = (uint64_t)v172;
  uint64_t v63 = v173;
  uint64_t v64 = v163;
  sub_1C27C8D1C(v169, v173);
  uint64_t v65 = (void *)((char *)v61 + *(void *)(*v61 + 104));
  swift_beginAccess();
  sub_1C27C039C(v62, v63);
  swift_endAccess();
  sub_1C27C8C44(v62, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
  sub_1C28CCDC0();
  swift_retain_n();
  uint64_t v66 = sub_1C28CCE00();
  int v67 = sub_1C28CDCD0();
  if (!os_log_type_enabled(v66, (os_log_type_t)v67))
  {

    swift_release_n();
    ((void (*)(void, uint64_t))v60)(v64, v166);
    ((void (*)(uint64_t, char *, uint64_t))v158)(v160, v151, v161);
    return sub_1C28CC630();
  }
  LODWORD(v155) = v67;
  v156 = (void (*)(uint64_t))v66;
  os_log_t v157 = v60;
  uint64_t v68 = swift_slowAlloc();
  v154 = (char *)swift_slowAlloc();
  v174[0] = (uint64_t)v154;
  *(_DWORD *)uint64_t v68 = 136446466;
  uint64_t v69 = sub_1C28CE830();
  uint64_t v175 = sub_1C27D36AC(v69, v70, v174);
  sub_1C28CDF90();
  swift_bridgeObjectRelease();
  *(_WORD *)(v68 + 12) = 2082;
  uint64_t v71 = *v65;
  int64_t v72 = *(void *)(*v65 + 16);
  if (!v72)
  {
    swift_release();
    uint64_t v82 = MEMORY[0x1E4FBC860];
    uint64_t v103 = v161;
LABEL_24:
    uint64_t v104 = MEMORY[0x1C875EEC0](v82, MEMORY[0x1E4FBB1A0]);
    unint64_t v106 = v105;
    swift_bridgeObjectRelease();
    uint64_t v175 = sub_1C27D36AC(v104, v106, v174);
    sub_1C28CDF90();
    swift_release();
    swift_bridgeObjectRelease();
    os_log_t v107 = (os_log_t)v156;
    _os_log_impl(&dword_1C27B7000, (os_log_t)v156, (os_log_type_t)v155, "[%{public}s]: Updated transactions %{public}s", (uint8_t *)v68, 0x16u);
    uint64_t v108 = v154;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v108, -1, -1);
    MEMORY[0x1C87609B0](v68, -1, -1);

    ((void (*)(void, uint64_t))v157)(v163, v166);
    ((void (*)(uint64_t, char *, uint64_t))v158)(v160, v151, v103);
    return sub_1C28CC630();
  }
  uint64_t v162 = v68;
  uint64_t v175 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C27D8968(0, v72, 0);
  uint64_t result = sub_1C27D90B4(v71);
  int64_t v74 = result;
  int v76 = v75;
  char v78 = v77 & 1;
  uint64_t v168 = v71;
  uint64_t v169 = v71 + 56;
  while ((v74 & 0x8000000000000000) == 0 && v74 < 1 << *(unsigned char *)(v71 + 32))
  {
    if (((*(void *)(v169 + (((unint64_t)v74 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v74) & 1) == 0) {
      goto LABEL_45;
    }
    if (*(_DWORD *)(v71 + 36) != v76) {
      goto LABEL_46;
    }
    sub_1C27C8D1C(*(void *)(v71 + 48) + *(void *)(v170 + 72) * v74, v62);
    sub_1C27C7978(v62, v63);
    uint64_t v79 = (uint64_t *)(v63 + *(int *)(v171 + 20));
    uint64_t v81 = *v79;
    uint64_t v80 = v79[1];
    swift_bridgeObjectRetain();
    sub_1C27C8C44(v63, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    uint64_t v82 = v175;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C27D8968(0, *(void *)(v82 + 16) + 1, 1);
      uint64_t v82 = v175;
    }
    unint64_t v84 = *(void *)(v82 + 16);
    unint64_t v83 = *(void *)(v82 + 24);
    if (v84 >= v83 >> 1)
    {
      sub_1C27D8968(v83 > 1, v84 + 1, 1);
      uint64_t v82 = v175;
    }
    *(void *)(v82 + 16) = v84 + 1;
    unint64_t v85 = v82 + 16 * v84;
    *(void *)(v85 + 32) = v81;
    *(void *)(v85 + 40) = v80;
    uint64_t v71 = v168;
    uint64_t result = sub_1C27D8CF0(v74, v76, v78 & 1, v168);
    int64_t v74 = result;
    int v76 = v86;
    char v78 = v87 & 1;
    --v72;
    uint64_t v62 = (uint64_t)v172;
    uint64_t v63 = v173;
    if (!v72)
    {
      sub_1C27D968C(result, v86, v87 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v103 = v161;
      uint64_t v68 = v162;
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
  return result;
}

uint64_t sub_1C27C8C44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t destroy for TransactionRecord(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C27C8D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TransactionRecord();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TransactionRecord()
{
  uint64_t result = qword_1EBB743C0;
  if (!qword_1EBB743C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t initializeWithCopy for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C27C8E54()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD70();
  uint64_t v7 = sub_1C28CCE00();
  os_log_type_t v8 = sub_1C28CDCD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    v15[1] = v1;
    uint64_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v16 = v11;
    uint64_t v17 = ObjectType;
    *(_DWORD *)uint64_t v10 = 136315138;
    swift_getMetatypeMetadata();
    uint64_t v12 = sub_1C28CD750();
    uint64_t v17 = sub_1C27D36AC(v12, v13, &v16);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v7, v8, "[%s] enqueueMedicalIDFetch()", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v11, -1, -1);
    MEMORY[0x1C87609B0](v10, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return sub_1C27C9054() & 1;
}

uint64_t sub_1C27C9054()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned __int8 v22 = 0;
  sub_1C28CCD70();
  uint64_t v7 = sub_1C28CCE00();
  os_log_type_t v8 = sub_1C28CDCD0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v19 = v3;
    uint64_t v9 = swift_slowAlloc();
    uint64_t v20 = v1;
    uint64_t v10 = ObjectType;
    uint64_t v11 = (uint8_t *)v9;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v21 = v12;
    *(_DWORD *)uint64_t v11 = 136315138;
    uint64_t v23 = v10;
    swift_getMetatypeMetadata();
    uint64_t v13 = sub_1C28CD750();
    uint64_t v23 = sub_1C27D36AC(v13, v14, &v21);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v7, v8, "[%s] startNewFetch()", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v12, -1, -1);
    uint64_t v15 = v11;
    uint64_t ObjectType = v10;
    uint64_t v1 = v20;
    MEMORY[0x1C87609B0](v15, -1, -1);

    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v19);
  }
  else
  {

    uint64_t v16 = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  MEMORY[0x1F4188790](v16);
  *(&v18 - 4) = v1;
  *(&v18 - 3) = (uint64_t)&v22;
  *(&v18 - 2) = ObjectType;
  sub_1C28CCB20();
  return v22;
}

Swift::Void __swiftcall AnalyticsSubmitting.submit()()
{
  uint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(void *)((*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 8))(v3) + 16))
  {
    (*(void (**)(uint64_t))(*(void *)(v2 + 16) + 8))(v3);
    os_log_type_t v8 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    sub_1C27D3998();
    uint64_t v17 = sub_1C28CD5F0();
    swift_bridgeObjectRelease();
    AnalyticsSendEvent();

    uint64_t v9 = (void *)v17;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_1C28CCDE0();
    uint64_t v10 = sub_1C28CCE00();
    os_log_type_t v11 = sub_1C28CDCD0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = (uint8_t *)swift_slowAlloc();
      uint64_t v13 = swift_slowAlloc();
      uint64_t v19 = v13;
      *(_DWORD *)uint64_t v12 = 136315138;
      uint64_t v14 = sub_1C28CE830();
      uint64_t v18 = sub_1C27D36AC(v14, v15, &v19);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v10, v11, "[%s] Analytics dictionary is empty. Not sending an analytics event.", v12, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v13, -1, -1);
      MEMORY[0x1C87609B0](v12, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

uint64_t AnalyticsDictionaryProviding.keyValuePairs.getter(void (*a1)(uint64_t *a1@<X0>, uint64_t *a2@<X8>))
{
  uint64_t v2 = v1;
  uint64_t v4 = *((void *)a1 - 1);
  MEMORY[0x1F4188790](a1);
  unint64_t v96 = (char *)&v92 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D34FC(0, &qword_1EBB757B8, MEMORY[0x1E4FBC438]);
  MEMORY[0x1F4188790](v6 - 8);
  os_log_type_t v8 = (char *)&v92 - v7;
  uint64_t v9 = sub_1C28CE7A0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  os_log_t v107 = (char *)&v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v92 - v13;
  uint64_t v128 = a1;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v127);
  uint64_t v16 = *(void (**)(char *, uint64_t, void (*)(uint64_t *@<X0>, uint64_t *@<X8>)))(v4 + 16);
  uint64_t v94 = v4 + 16;
  uint64_t v95 = v2;
  v97 = a1;
  uint64_t v93 = v16;
  v16((char *)boxed_opaque_existential_0, v2, a1);
  sub_1C28CE760();
  v127[0] = sub_1C28CE790();
  v127[1] = (uint64_t)sub_1C27D3604;
  v127[2] = 0;
  uint64_t v128 = sub_1C27D3D18;
  uint64_t v129 = 0;
  uint64_t v130 = sub_1C27D35B0;
  uint64_t v131 = 0;
  unint64_t v132 = sub_1C27D3D30;
  uint64_t v133 = 0;
  uint64_t v115 = MEMORY[0x1E4FBC868];
  swift_retain();
  sub_1C27D2E10(v127, 1, &v115);
  uint64_t v92 = 0;
  swift_release();
  char v126 = (void *)v115;
  sub_1C28CE750();
  uint64_t v98 = v10;
  unint64_t v105 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  uint64_t v106 = v10 + 48;
  if (v105(v8, 1, v9) != 1)
  {
    uint64_t v24 = *(void (**)(char *, char *, uint64_t))(v98 + 32);
    uint64_t v110 = v114;
    unint64_t v99 = (void (**)(char *, uint64_t))(v98 + 8);
    uint64_t v103 = v14;
    uint64_t v104 = v9;
    uint64_t v101 = v98 + 32;
    v102 = v8;
    uint64_t v100 = v24;
    v24(v107, v8, v9);
    while (1)
    {
      sub_1C28CE790();
      uint64_t v27 = MEMORY[0x1E4FBC868];
      char v125 = (void *)MEMORY[0x1E4FBC868];
      swift_retain_n();
      sub_1C28CE250();
      swift_release();
      sub_1C28CE420();
      sub_1C27D347C((uint64_t)&v115, (uint64_t)&v122);
      if (*((void *)&v124 + 1)) {
        break;
      }
LABEL_23:
      swift_release();
      swift_release_n();
      uint64_t v43 = v126;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&long long v122 = v43;
      char v126 = (void *)0x8000000000000000;
      uint64_t v45 = -1 << *(unsigned char *)(v27 + 32);
      uint64_t v46 = ~v45;
      uint64_t v47 = -v45;
      if (v47 < 64) {
        uint64_t v48 = ~(-1 << v47);
      }
      else {
        uint64_t v48 = -1;
      }
      uint64_t v49 = v48 & *(void *)(v27 + 64);
      uint64_t v115 = v27;
      uint64_t v116 = v27 + 64;
      uint64_t v117 = v46;
      uint64_t v118 = 0;
      uint64_t v119 = v49;
      uint64_t v120 = sub_1C285D180;
      uint64_t v121 = 0;
      uint64_t v109 = v27;
      swift_retain();
      sub_1C285CFEC();
      if (!v51) {
        goto LABEL_7;
      }
      uint64_t v53 = v50;
      uint64_t v30 = (void *)v51;
      id v108 = v52;
      unint64_t v55 = sub_1C27D3320(v50, v51);
      uint64_t v56 = v43[2];
      BOOL v57 = (v54 & 1) == 0;
      uint64_t v58 = v56 + v57;
      if (__OFADD__(v56, v57)) {
        goto LABEL_50;
      }
      char v59 = v54;
      if (v43[3] >= v58)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          uint64_t v43 = (void *)v122;
          if (v54) {
            goto LABEL_34;
          }
        }
        else
        {
          sub_1C28763F0();
          uint64_t v43 = (void *)v122;
          if (v59) {
            goto LABEL_34;
          }
        }
      }
      else
      {
        sub_1C27D4108(v58, isUniquelyReferenced_nonNull_native);
        unint64_t v60 = sub_1C27D3320(v53, (uint64_t)v30);
        if ((v59 & 1) != (v61 & 1)) {
          goto LABEL_54;
        }
        unint64_t v55 = v60;
        uint64_t v43 = (void *)v122;
        if (v59)
        {
LABEL_34:
          uint64_t v62 = 8 * v55;
          id v63 = *(id *)(v43[7] + v62);
          swift_bridgeObjectRelease();

          uint64_t v64 = v43[7];
          *(void *)(v64 + v62) = v63;
          goto LABEL_38;
        }
      }
      v43[(v55 >> 6) + 8] |= 1 << v55;
      uint64_t v65 = (uint64_t *)(v43[6] + 16 * v55);
      *uint64_t v65 = v53;
      v65[1] = (uint64_t)v30;
      *(void *)(v43[7] + 8 * v55) = v108;
      uint64_t v66 = v43[2];
      BOOL v36 = __OFADD__(v66, 1);
      uint64_t v67 = v66 + 1;
      if (v36) {
        goto LABEL_51;
      }
      v43[2] = v67;
LABEL_38:
      sub_1C285CFEC();
      if (v69)
      {
        uint64_t v30 = v68;
        uint64_t v71 = v69;
        int64_t v72 = v70;
        while (1)
        {
          unint64_t v79 = sub_1C27D3320((uint64_t)v30, v71);
          uint64_t v81 = v43[2];
          BOOL v82 = (v80 & 1) == 0;
          BOOL v36 = __OFADD__(v81, v82);
          uint64_t v83 = v81 + v82;
          if (v36) {
            break;
          }
          char v84 = v80;
          if (v43[3] < v83)
          {
            sub_1C27D4108(v83, 1);
            unint64_t v79 = sub_1C27D3320((uint64_t)v30, v71);
            if ((v84 & 1) != (v85 & 1)) {
              goto LABEL_54;
            }
          }
          uint64_t v43 = (void *)v122;
          if (v84)
          {
            uint64_t v73 = 8 * v79;
            id v74 = *(id *)(*(void *)(v122 + 56) + 8 * v79);
            swift_bridgeObjectRelease();

            uint64_t v75 = v43[7];
            *(void *)(v75 + v73) = v74;
          }
          else
          {
            *(void *)(v122 + 8 * (v79 >> 6) + 64) |= 1 << v79;
            uint64_t v86 = (void *)(v43[6] + 16 * v79);
            *uint64_t v86 = v30;
            v86[1] = v71;
            *(void *)(v43[7] + 8 * v79) = v72;
            uint64_t v87 = v43[2];
            BOOL v36 = __OFADD__(v87, 1);
            uint64_t v88 = v87 + 1;
            if (v36) {
              goto LABEL_51;
            }
            v43[2] = v88;
          }
          sub_1C285CFEC();
          uint64_t v30 = v76;
          uint64_t v71 = v77;
          int64_t v72 = v78;
          if (!v77) {
            goto LABEL_7;
          }
        }
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
LABEL_54:
        sub_1C28CE680();
        __break(1u);
LABEL_55:
        os_log_type_t v90 = (void *)swift_allocError();
        swift_willThrow();
        *(void *)&long long v113 = v90;
        id v91 = v90;
        sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
        if (swift_dynamicCast())
        {
          *(void *)&long long v122 = 0;
          *((void *)&v122 + 1) = 0xE000000000000000;
          sub_1C28CE120();
          sub_1C28CD7C0();
          sub_1C28CE270();
          sub_1C28CD7C0();
          sub_1C28CE360();
          __break(1u);
        }

        swift_release();
        swift_release();
        swift_bridgeObjectRelease();

        while (1)
        {
          swift_unexpectedError();
          __break(1u);
        }
      }
LABEL_7:
      swift_release();
      sub_1C27D9684();
      char v126 = v43;
      swift_bridgeObjectRelease();
      uint64_t v14 = v103;
      uint64_t v9 = v104;
      (*v99)(v103, v104);
      uint64_t v25 = v107;
      uint64_t v26 = v100;
      v100(v14, v107, v9);
      os_log_type_t v8 = v102;
      sub_1C28CE750();
      if (v105(v8, 1, v9) == 1) {
        goto LABEL_2;
      }
      v26(v25, v8, v9);
    }
    while (1)
    {
      long long v113 = v122;
      v114[0] = v123;
      v114[1] = v124;
      uint64_t v28 = *((void *)&v122 + 1);
      if (*((void *)&v122 + 1))
      {
        uint64_t v29 = v113;
        sub_1C27D3780((uint64_t)v110, (uint64_t)&v112);
        sub_1C27D3998();
        swift_bridgeObjectRetain();
        if (swift_dynamicCast())
        {
          uint64_t v30 = v111;
          sub_1C27D3550((uint64_t)&v113, (uint64_t (*)(void))sub_1C27D3CA8);
          uint64_t v115 = v29;
          uint64_t v116 = v28;
          uint64_t v31 = v125;
          unint64_t v32 = sub_1C27D3320(v29, v28);
          uint64_t v34 = v31[2];
          BOOL v35 = (v33 & 1) == 0;
          BOOL v36 = __OFADD__(v34, v35);
          uint64_t v37 = v34 + v35;
          if (v36) {
            goto LABEL_52;
          }
          char v38 = v33;
          if (v31[3] < v37)
          {
            sub_1C27D4108(v37, 1);
            uint64_t v31 = v125;
            unint64_t v32 = sub_1C27D3320(v29, v28);
            if ((v38 & 1) != (v39 & 1)) {
              goto LABEL_54;
            }
          }
          if (v38) {
            goto LABEL_55;
          }
          v31[(v32 >> 6) + 8] |= 1 << v32;
          uint64_t v40 = (uint64_t *)(v31[6] + 16 * v32);
          uint64_t *v40 = v29;
          v40[1] = v28;
          *(void *)(v31[7] + 8 * v32) = v30;
          uint64_t v41 = v31[2];
          BOOL v36 = __OFADD__(v41, 1);
          uint64_t v42 = v41 + 1;
          if (v36) {
            goto LABEL_53;
          }
          v31[2] = v42;
          goto LABEL_13;
        }
        swift_bridgeObjectRelease();
      }
      sub_1C27D3550((uint64_t)&v113, (uint64_t (*)(void))sub_1C27D3CA8);
LABEL_13:
      sub_1C28CE420();
      sub_1C27D347C((uint64_t)&v115, (uint64_t)&v122);
      if (!*((void *)&v124 + 1))
      {
        uint64_t v27 = (uint64_t)v125;
        goto LABEL_23;
      }
    }
  }
LABEL_2:
  sub_1C27CA0A0((uint64_t)v8);
  v93(v96, v95, v97);
  sub_1C27CAE78(0, &qword_1EBB75338);
  if (swift_dynamicCast())
  {
    sub_1C27CAE60(&v122, (uint64_t)&v115);
    uint64_t v17 = v118;
    uint64_t v18 = v119;
    __swift_project_boxed_opaque_existential_1(&v115, v118);
    char v19 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v17, v18);
    uint64_t v20 = v98;
    if ((v19 & 1) == 0)
    {
      uint64_t v21 = v118;
      uint64_t v22 = v119;
      __swift_project_boxed_opaque_existential_1(&v115, v118);
      uint64_t v23 = (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 16))(v21, v22);
      sub_1C285CBF8(v23, (uint64_t *)&v126);
      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v9);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v115);
  }
  else
  {
    *(void *)&long long v124 = 0;
    long long v122 = 0u;
    long long v123 = 0u;
    (*(void (**)(char *, uint64_t))(v98 + 8))(v14, v9);
    sub_1C27D3550((uint64_t)&v122, (uint64_t (*)(void))sub_1C27D417C);
  }
  return (uint64_t)v126;
}

uint64_t sub_1C27CA0A0(uint64_t a1)
{
  sub_1C27D34FC(0, &qword_1EBB757B8, MEMORY[0x1E4FBC438]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ReplaySubject.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v116 = a1;
  uint64_t v6 = *v3;
  uint64_t v7 = *(void *)(*v3 + 88);
  sub_1C28CD030();
  uint64_t v108 = sub_1C28CDF70();
  uint64_t v107 = *(void *)(v108 - 8);
  MEMORY[0x1F4188790](v108);
  uint64_t v106 = (char *)&v93 - v8;
  unint64_t v105 = v3;
  uint64_t v110 = *(void *)(v6 + 80);
  uint64_t v113 = v7;
  uint64_t v9 = sub_1C28CD0C0();
  uint64_t v96 = sub_1C28CDF70();
  uint64_t v95 = *(void *)(v96 - 8);
  uint64_t v10 = MEMORY[0x1F4188790](v96);
  unint64_t v99 = (char *)&v93 - v11;
  uint64_t v12 = *(void *)(a2 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v93 = (char *)&v93 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v98 = (char *)&v93 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  v97 = (char *)&v93 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v100 = (char *)&v93 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v23 = (char *)&v93 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v93 - v25;
  uint64_t v109 = *(void *)(v9 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v94 = (char *)&v93 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v31 = (uint64_t *)((char *)&v93 - v30);
  MEMORY[0x1F4188790](v29);
  uint64_t v111 = (uint64_t)&v93 - v32;
  uint64_t v33 = sub_1C28CCE80();
  uint64_t v114 = *(void *)(v33 - 8);
  uint64_t v115 = v33;
  uint64_t v34 = MEMORY[0x1F4188790](v33);
  v102 = (char *)&v93 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = v35;
  MEMORY[0x1F4188790](v34);
  uint64_t v118 = a3;
  uint64_t v112 = (char *)&v93 - v36;
  uint64_t v37 = v116;
  sub_1C28CCE50();
  uint64_t v104 = v12;
  char v38 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v39 = v37;
  uint64_t v40 = a2;
  uint64_t v41 = v99;
  v38(v26, v39, v40);
  v38(v23, (uint64_t)v26, v40);
  uint64_t v42 = v109;
  uint64_t v117 = v40;
  uint64_t v119 = v9;
  int v43 = swift_dynamicCast();
  unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  uint64_t v103 = v26;
  if (!v43)
  {
    v44(v41, 1, 1, v119);
    (*(void (**)(char *, uint64_t))(v95 + 8))(v41, v96);
    uint64_t v51 = v117;
    sub_1C28CCE50();
    sub_1C28CD110();
    v38(v100, (uint64_t)v26, v51);
    *uint64_t v31 = sub_1C28CD120();
    unint64_t v99 = (char *)v38;
    v38(v97, (uint64_t)v26, v51);
    v97 = (char *)sub_1C27CAE78(0, &qword_1EBB76858);
    uint64_t v52 = v26;
    if (swift_dynamicCast())
    {
      sub_1C27CAE60(&v120, (uint64_t)&v123);
      sub_1C27CAE60(&v123, (uint64_t)&v120);
      uint64_t v53 = swift_allocObject();
      sub_1C27CAE60(&v120, v53 + 16);
      char v54 = sub_1C284A670;
    }
    else
    {
      uint64_t v122 = 0;
      long long v120 = 0u;
      long long v121 = 0u;
      sub_1C284AADC((uint64_t)&v120, &qword_1EA310B58, &qword_1EBB76858);
      swift_getDynamicType();
      uint64_t v55 = sub_1C28CE830();
      uint64_t v57 = v56;
      uint64_t v53 = swift_allocObject();
      *(void *)(v53 + 16) = v55;
      *(void *)(v53 + 24) = v57;
      char v54 = sub_1C284A290;
    }
    uint64_t v58 = v113;
    uint64_t v50 = v104;
    v31[1] = (uint64_t)v54;
    v31[2] = v53;
    char v59 = v100;
    uint64_t v60 = v117;
    char v61 = (void (*)(char *, char *, uint64_t))v99;
    ((void (*)(char *, char *, uint64_t))v99)(v100, v52, v117);
    unint64_t v62 = (*(unsigned __int8 *)(v50 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    id v63 = v61;
    uint64_t v64 = (char *)swift_allocObject();
    *((void *)v64 + 2) = v110;
    *((void *)v64 + 3) = v58;
    uint64_t v65 = v118;
    *((void *)v64 + 4) = v60;
    *((void *)v64 + 5) = v65;
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(&v64[v62], v59, v60);
    v31[3] = (uint64_t)sub_1C284A348;
    v31[4] = (uint64_t)v64;
    v63(v98, v52, v60);
    sub_1C27CAE78(0, &qword_1EBB76868);
    uint64_t v48 = v58;
    if (swift_dynamicCast())
    {
      sub_1C27CAE60(&v120, (uint64_t)&v123);
      sub_1C27CAE60(&v123, (uint64_t)&v120);
      uint64_t v66 = swift_allocObject();
      sub_1C27CAE60(&v120, v66 + 16);
      uint64_t v67 = sub_1C284A624;
    }
    else
    {
      uint64_t v122 = 0;
      long long v120 = 0u;
      long long v121 = 0u;
      sub_1C284AADC((uint64_t)&v120, qword_1EA310B60, &qword_1EBB76868);
      v63(v93, v52, v117);
      if (!swift_dynamicCast())
      {
        uint64_t v122 = 0;
        long long v120 = 0u;
        long long v121 = 0u;
        sub_1C284AADC((uint64_t)&v120, &qword_1EA310B58, &qword_1EBB76858);
        swift_getDynamicType();
        uint64_t v68 = sub_1C28CE830();
        uint64_t v70 = v69;
        uint64_t v71 = swift_allocObject();
        *(void *)(v71 + 16) = v68;
        *(void *)(v71 + 24) = v70;
        v31[5] = (uint64_t)sub_1C284A3E4;
        v31[6] = v71;
        goto LABEL_12;
      }
      sub_1C27CAE60(&v120, (uint64_t)&v123);
      sub_1C27CAE60(&v123, (uint64_t)&v120);
      uint64_t v66 = swift_allocObject();
      sub_1C27CAE60(&v120, v66 + 16);
      uint64_t v67 = sub_1C284A5CC;
    }
    v31[5] = (uint64_t)v67;
    v31[6] = v66;
LABEL_12:
    uint64_t v42 = v109;
    uint64_t v49 = v110;
    goto LABEL_13;
  }
  uint64_t v45 = v119;
  v44(v41, 0, 1, v119);
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v42 + 32);
  uint64_t v47 = v94;
  v46(v94, v41, v45);
  v46((char *)v31, v47, v45);
  uint64_t v48 = v113;
  uint64_t v49 = v110;
  uint64_t v50 = v104;
LABEL_13:
  uint64_t v72 = v119;
  uint64_t WitnessTable = swift_getWitnessTable();
  *(void *)&long long v123 = v49;
  *((void *)&v123 + 1) = v48;
  uint64_t v124 = v72;
  uint64_t v125 = WitnessTable;
  uint64_t v110 = type metadata accessor for ReplaySubject.Subscription();
  (*(void (**)(uint64_t, uint64_t *, uint64_t))(v42 + 32))(v111, v31, v72);
  uint64_t v74 = v117;
  (*(void (**)(char *, uint64_t))(v50 + 8))(v103, v117);
  uint64_t v75 = swift_allocObject();
  int v76 = v105;
  swift_weakInit();
  uint64_t v78 = v114;
  uint64_t v77 = v115;
  unint64_t v79 = v102;
  (*(void (**)(char *, char *, uint64_t))(v114 + 16))(v102, v112, v115);
  unint64_t v80 = (*(unsigned __int8 *)(v78 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v78 + 80);
  uint64_t v81 = (char *)swift_allocObject();
  uint64_t v82 = v113;
  *((void *)v81 + 2) = v49;
  *((void *)v81 + 3) = v82;
  uint64_t v83 = v118;
  *((void *)v81 + 4) = v74;
  *((void *)v81 + 5) = v83;
  *((void *)v81 + 6) = v75;
  (*(void (**)(char *, char *, uint64_t))(v78 + 32))(&v81[v80], v79, v77);
  uint64_t v84 = v110;
  swift_allocObject();
  uint64_t v85 = v111;
  uint64_t v86 = sub_1C27C0008(v111, (uint64_t)sub_1C284A500, (uint64_t)v81);
  (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v85, v119);
  sub_1C28CC9C0();
  *(void *)&long long v120 = v86;
  swift_beginAccess();
  sub_1C28CDA30();
  swift_retain();
  sub_1C28CD9F0();
  swift_endAccess();
  swift_beginAccess();
  uint64_t v87 = v76[3];
  uint64_t v88 = (char *)v76 + *(void *)(*v76 + 128);
  swift_beginAccess();
  uint64_t v89 = v107;
  uint64_t v90 = (uint64_t)v106;
  uint64_t v91 = v108;
  (*(void (**)(char *, char *, uint64_t))(v107 + 16))(v106, v88, v108);
  swift_bridgeObjectRetain();
  sub_1C28CC9D0();
  uint64_t v125 = v84;
  uint64_t v126 = swift_getWitnessTable();
  *(void *)&long long v123 = v86;
  swift_retain();
  sub_1C28CD000();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v123);
  sub_1C27BE8DC(v87, v90);
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v89 + 8))(v90, v91);
  return (*(uint64_t (**)(char *, uint64_t))(v114 + 8))(v112, v115);
}

uint64_t sub_1C27CAE60(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_1C27CAE78(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t destroy for PromotionalTileConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 24);
  type metadata accessor for PromotionalTileConfiguration.Hero(0);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2) {
    goto LABEL_5;
  }
  if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ImageRepresentation();
    int v7 = swift_getEnumCaseMultiPayload();
    if (v7 == 2)
    {
      sub_1C27E2870(*(void *)v4, *(void *)(v4 + 8));
      goto LABEL_6;
    }
    if (v7 == 1)
    {
      swift_bridgeObjectRelease();
      sub_1C27CC3FC();
      uint64_t v10 = v4 + *(int *)(v9 + 48);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v12 = v11;
      uint64_t v13 = *(void *)(v11 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v10, 1, v11)) {
        (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v12);
      }
      goto LABEL_6;
    }
    if (v7) {
      goto LABEL_6;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  if (EnumCaseMultiPayload) {
    goto LABEL_6;
  }
  type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
  if (swift_getEnumCaseMultiPayload() == 1) {
    goto LABEL_5;
  }
  type metadata accessor for ImageRepresentation();
  int v8 = swift_getEnumCaseMultiPayload();
  switch(v8)
  {
    case 2:
      sub_1C27E2870(*(void *)v4, *(void *)(v4 + 8));
      break;
    case 1:
      swift_bridgeObjectRelease();
      sub_1C27CC3FC();
      uint64_t v15 = v4 + *(int *)(v14 + 48);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v17 = v16;
      uint64_t v18 = *(void *)(v16 - 8);
      if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v15, 1, v16)) {
        (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v15, v17);
      }
      break;
    case 0:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  sub_1C28C4FAC();
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v21 = v4 + *(int *)(v20 + 80);
  type metadata accessor for ColorRepresentation(0);
  if (!swift_getEnumCaseMultiPayload())
  {
    sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
  }
LABEL_6:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for PromotionalTileConfiguration(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a2[3];
  a1[2] = a2[2];
  a1[3] = v7;
  uint64_t v8 = a3[6];
  uint64_t v9 = (char *)a1 + v8;
  uint64_t v10 = (char *)a2 + v8;
  type metadata accessor for PromotionalTileConfiguration.Hero(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v20 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v20;
    *((void *)v9 + 2) = *((void *)v10 + 2);
    v9[24] = v10[24];
    uint64_t v21 = *((void *)v10 + 5);
    *((void *)v9 + 4) = *((void *)v10 + 4);
    *((void *)v9 + 5) = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ImageRepresentation();
    int v12 = swift_getEnumCaseMultiPayload();
    if (v12 == 2)
    {
      uint64_t v33 = *(void *)v10;
      unint64_t v34 = *((void *)v10 + 1);
      sub_1C27E2B38(*(void *)v10, v34);
      *(void *)uint64_t v9 = v33;
      *((void *)v9 + 1) = v34;
      *((void *)v9 + 2) = *((void *)v10 + 2);
    }
    else if (v12 == 1)
    {
      uint64_t v13 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v13;
      sub_1C27CC3FC();
      uint64_t v15 = *(int *)(v14 + 48);
      uint64_t v83 = &v9[v15];
      uint64_t v16 = &v10[v15];
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v18 = v17;
      uint64_t v79 = *(void *)(v17 - 8);
      uint64_t v81 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v79 + 48);
      swift_bridgeObjectRetain();
      if (v81(v16, 1, v18))
      {
        sub_1C27CC580(0);
        memcpy(v83, v16, *(void *)(*(void *)(v19 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v79 + 16))(v83, v16, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v79 + 56))(v83, 0, 1, v18);
      }
    }
    else
    {
      uint64_t v35 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v35;
      uint64_t v36 = *((void *)v10 + 3);
      *((void *)v9 + 2) = *((void *)v10 + 2);
      *((void *)v9 + 3) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v41 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    uint64_t v42 = *(int *)(v41 + 20);
    int v43 = &v9[v42];
    unint64_t v44 = &v10[v42];
    *(void *)int v43 = *(void *)v44;
    v43[8] = v44[8];
    uint64_t v45 = *(int *)(v41 + 24);
    uint64_t v46 = &v9[v45];
    uint64_t v47 = &v10[v45];
    v46[8] = v47[8];
    *(void *)uint64_t v46 = *(void *)v47;
  }
  else
  {
    type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v22 = *((void *)v10 + 1);
      *(void *)uint64_t v9 = *(void *)v10;
      *((void *)v9 + 1) = v22;
      *((void *)v9 + 2) = *((void *)v10 + 2);
      v9[24] = v10[24];
      uint64_t v23 = *((void *)v10 + 4);
      uint64_t v24 = *((void *)v10 + 5);
      *((void *)v9 + 4) = v23;
      *((void *)v9 + 5) = v24;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      int v25 = swift_getEnumCaseMultiPayload();
      if (v25 == 2)
      {
        uint64_t v38 = *(void *)v10;
        unint64_t v37 = *((void *)v10 + 1);
        sub_1C27E2B38(*(void *)v10, v37);
        *(void *)uint64_t v9 = v38;
        *((void *)v9 + 1) = v37;
        *((void *)v9 + 2) = *((void *)v10 + 2);
      }
      else if (v25 == 1)
      {
        uint64_t v26 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v26;
        sub_1C27CC3FC();
        uint64_t v28 = *(int *)(v27 + 48);
        uint64_t v82 = &v9[v28];
        uint64_t v29 = &v10[v28];
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v31 = v30;
        uint64_t v78 = *(void *)(v30 - 8);
        unint64_t v80 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48);
        swift_bridgeObjectRetain();
        if (v80(v29, 1, v31))
        {
          sub_1C27CC580(0);
          memcpy(v82, v29, *(void *)(*(void *)(v32 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v78 + 16))(v82, v29, v31);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v78 + 56))(v82, 0, 1, v31);
        }
      }
      else
      {
        uint64_t v39 = *((void *)v10 + 1);
        *(void *)uint64_t v9 = *(void *)v10;
        *((void *)v9 + 1) = v39;
        uint64_t v40 = *((void *)v10 + 3);
        *((void *)v9 + 2) = *((void *)v10 + 2);
        *((void *)v9 + 3) = v40;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C28C4FAC();
      uint64_t v49 = v48[12];
      uint64_t v50 = &v9[v49];
      uint64_t v51 = &v10[v49];
      uint64_t v52 = *((void *)v51 + 1);
      *(void *)uint64_t v50 = *(void *)v51;
      *((void *)v50 + 1) = v52;
      uint64_t v53 = v48[16];
      char v54 = &v9[v53];
      uint64_t v55 = &v10[v53];
      uint64_t v56 = *((void *)v55 + 1);
      *(void *)char v54 = *(void *)v55;
      *((void *)v54 + 1) = v56;
      uint64_t v57 = v48[20];
      __dst = &v9[v57];
      uint64_t v58 = &v10[v57];
      uint64_t v59 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(__dst, v58, *(void *)(*(void *)(v59 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v60 - 8) + 16))(__dst, v58, v60);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  uint64_t v61 = a3[7];
  uint64_t v62 = a3[8];
  id v63 = (void *)((char *)a1 + v61);
  uint64_t v64 = (void *)((char *)a2 + v61);
  uint64_t v65 = v64[1];
  *id v63 = *v64;
  v63[1] = v65;
  uint64_t v66 = (void *)((char *)a1 + v62);
  uint64_t v67 = (void *)((char *)a2 + v62);
  uint64_t v68 = v67[1];
  *uint64_t v66 = *v67;
  v66[1] = v68;
  uint64_t v69 = a3[9];
  uint64_t v70 = a3[10];
  uint64_t v71 = (void *)((char *)a1 + v69);
  uint64_t v72 = (void *)((char *)a2 + v69);
  uint64_t v73 = v72[1];
  *uint64_t v71 = *v72;
  v71[1] = v73;
  uint64_t v74 = (void *)((char *)a1 + v70);
  uint64_t v75 = (void *)((char *)a2 + v70);
  uint64_t v76 = v75[1];
  *uint64_t v74 = *v75;
  v74[1] = v76;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t initializeWithCopy for PromotionalTileConfiguration.Hero(uint64_t a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v14 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v14;
    *(void *)(a1 + 16) = a2[2];
    *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
    uint64_t v15 = a2[4];
    uint64_t v16 = a2[5];
    *(void *)(a1 + 32) = v15;
    *(void *)(a1 + 40) = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else if (EnumCaseMultiPayload == 1)
  {
    type metadata accessor for ImageRepresentation();
    int v5 = swift_getEnumCaseMultiPayload();
    if (v5 == 2)
    {
      uint64_t v29 = *a2;
      unint64_t v30 = a2[1];
      sub_1C27E2B38(*a2, v30);
      *(void *)a1 = v29;
      *(void *)(a1 + 8) = v30;
      *(void *)(a1 + 16) = a2[2];
    }
    else if (v5 == 1)
    {
      uint64_t v6 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v6;
      sub_1C27CC3FC();
      uint64_t v8 = *(int *)(v7 + 48);
      uint64_t v60 = (char *)a2 + v8;
      __dst = (void *)(a1 + v8);
      sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)(v9 - 8);
      int v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v60, 1, v10))
      {
        sub_1C27CC580(0);
        memcpy(__dst, v60, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, char *, uint64_t))(v11 + 16))(__dst, v60, v10);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
      }
    }
    else
    {
      uint64_t v31 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v31;
      uint64_t v32 = a2[3];
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
    uint64_t v37 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
    uint64_t v38 = *(int *)(v37 + 20);
    uint64_t v39 = a1 + v38;
    uint64_t v40 = (uint64_t)a2 + v38;
    *(void *)uint64_t v39 = *(void *)v40;
    *(unsigned char *)(v39 + 8) = *(unsigned char *)(v40 + 8);
    uint64_t v41 = *(int *)(v37 + 24);
    uint64_t v42 = a1 + v41;
    uint64_t v43 = (uint64_t)a2 + v41;
    *(unsigned char *)(v42 + 8) = *(unsigned char *)(v43 + 8);
    *(void *)uint64_t v42 = *(void *)v43;
  }
  else
  {
    type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v17 = a2[1];
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = v17;
      *(void *)(a1 + 16) = a2[2];
      *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
      uint64_t v18 = a2[4];
      uint64_t v19 = a2[5];
      *(void *)(a1 + 32) = v18;
      *(void *)(a1 + 40) = v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    else
    {
      type metadata accessor for ImageRepresentation();
      int v20 = swift_getEnumCaseMultiPayload();
      if (v20 == 2)
      {
        uint64_t v33 = *a2;
        unint64_t v34 = a2[1];
        sub_1C27E2B38(*a2, v34);
        *(void *)a1 = v33;
        *(void *)(a1 + 8) = v34;
        *(void *)(a1 + 16) = a2[2];
      }
      else if (v20 == 1)
      {
        uint64_t v21 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v21;
        sub_1C27CC3FC();
        uint64_t v23 = *(int *)(v22 + 48);
        __dsta = (void *)(a1 + v23);
        uint64_t v24 = (char *)a2 + v23;
        sub_1C27CBEB0(0, &qword_1EBB75D88, qword_1EBB75DA8);
        uint64_t v26 = v25;
        uint64_t v59 = *(void *)(v25 - 8);
        uint64_t v27 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v59 + 48);
        swift_bridgeObjectRetain();
        if (v27(v24, 1, v26))
        {
          sub_1C27CC580(0);
          memcpy(__dsta, v24, *(void *)(*(void *)(v28 - 8) + 64));
        }
        else
        {
          (*(void (**)(void *, char *, uint64_t))(v59 + 16))(__dsta, v24, v26);
          (*(void (**)(void *, void, uint64_t, uint64_t))(v59 + 56))(__dsta, 0, 1, v26);
        }
      }
      else
      {
        uint64_t v35 = a2[1];
        *(void *)a1 = *a2;
        *(void *)(a1 + 8) = v35;
        uint64_t v36 = a2[3];
        *(void *)(a1 + 16) = a2[2];
        *(void *)(a1 + 24) = v36;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      sub_1C28C4FAC();
      uint64_t v45 = v44[12];
      uint64_t v46 = (void *)(a1 + v45);
      uint64_t v47 = (uint64_t *)((char *)a2 + v45);
      uint64_t v48 = v47[1];
      *uint64_t v46 = *v47;
      v46[1] = v48;
      uint64_t v49 = v44[16];
      uint64_t v50 = (void *)(a1 + v49);
      uint64_t v51 = (uint64_t *)((char *)a2 + v49);
      uint64_t v52 = v51[1];
      *uint64_t v50 = *v51;
      v50[1] = v52;
      uint64_t v53 = v44[20];
      char v54 = (void *)(a1 + v53);
      uint64_t v55 = (char *)a2 + v53;
      uint64_t v56 = type metadata accessor for ColorRepresentation(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (swift_getEnumCaseMultiPayload())
      {
        memcpy(v54, v55, *(void *)(*(void *)(v56 - 8) + 64));
      }
      else
      {
        sub_1C27CBEB0(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998);
        (*(void (**)(void *, char *, uint64_t))(*(void *)(v57 - 8) + 16))(v54, v55, v57);
        swift_storeEnumTagMultiPayload();
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_1C27CBEB0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27D1C9C(255, a3);
    unint64_t v4 = sub_1C28CD5A0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(uint64_t a1)
{
  return sub_1C27D5B14(a1, qword_1EBB765B0);
}

uint64_t PromotionalTileConfiguration.init(reuseIdentifier:imageData:imageHeight:imageInset:title:body:linkTitle:actionTitle:)@<X0>(unint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, unint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v49 = a16;
  uint64_t v50 = a3;
  uint64_t v47 = a8;
  uint64_t v48 = a15;
  uint64_t v45 = a13;
  uint64_t v46 = a14;
  uint64_t v44 = a12;
  unint64_t v42 = a2;
  uint64_t v43 = a11;
  uint64_t v23 = type metadata accessor for PromotionalTileConfiguration.Hero(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC160(a3, (uint64_t)v25, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  uint64_t v26 = type metadata accessor for PromotionalTileConfiguration.Hero.ImageConfiguration(0);
  uint64_t v27 = &v25[*(int *)(v26 + 20)];
  *(void *)uint64_t v27 = a4;
  v27[8] = a5 & 1;
  uint64_t v28 = &v25[*(int *)(v26 + 24)];
  *(void *)uint64_t v28 = a6;
  v28[8] = a7 & 1;
  swift_storeEnumTagMultiPayload();
  unint64_t v29 = v42;
  a9[2] = a1;
  a9[3] = v29;
  unint64_t v30 = (int *)type metadata accessor for PromotionalTileConfiguration(0);
  sub_1C27CC160((uint64_t)v25, (uint64_t)a9 + v30[6], type metadata accessor for PromotionalTileConfiguration.Hero);
  uint64_t v31 = (unint64_t *)((char *)a9 + v30[7]);
  *uint64_t v31 = v47;
  v31[1] = a10;
  uint64_t v32 = (unint64_t *)((char *)a9 + v30[8]);
  uint64_t v33 = v44;
  *uint64_t v32 = v43;
  v32[1] = v33;
  unint64_t v34 = (unint64_t *)((char *)a9 + v30[9]);
  uint64_t v35 = v46;
  *unint64_t v34 = v45;
  v34[1] = v35;
  uint64_t v36 = (unint64_t *)((char *)a9 + v30[10]);
  uint64_t v37 = v49;
  *uint64_t v36 = v48;
  v36[1] = v37;
  unint64_t v51 = 0xD00000000000001DLL;
  unint64_t v52 = 0x80000001C28DE110;
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  unint64_t v38 = v51;
  unint64_t v39 = v52;
  sub_1C27CC1E8((uint64_t)v25, type metadata accessor for PromotionalTileConfiguration.Hero);
  *a9 = v38;
  a9[1] = v39;
  return sub_1C27CC1E8(v50, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
}

uint64_t sub_1C27CC160(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero(uint64_t a1)
{
  return sub_1C27D5B14(a1, qword_1EBB76690);
}

uint64_t sub_1C27CC1E8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t ImageRepresentation.init(symbolName:imageConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  sub_1C27CC580(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v11 = (char *)&v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v20 - v12;
  sub_1C27CCDC8(0);
  uint64_t v15 = v14;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  v16(v13, 1, 1, v14);
  if (a3)
  {
    sub_1C27CC5B4();
    sub_1C28CD5B0();
    sub_1C27CCDFC((uint64_t)v13, (uint64_t (*)(void))sub_1C27CC580);
    v16(v11, 0, 1, v15);
    sub_1C27CC4B4((uint64_t)v11, (uint64_t)v13, (uint64_t (*)(void))sub_1C27CC580);
  }
  sub_1C27CC3FC();
  uint64_t v18 = (uint64_t)a4 + *(int *)(v17 + 48);
  *a4 = a1;
  a4[1] = a2;
  sub_1C27CC4B4((uint64_t)v13, v18, (uint64_t (*)(void))sub_1C27CC580);
  type metadata accessor for ImageRepresentation();
  return swift_storeEnumTagMultiPayload();
}

void sub_1C27CC3FC()
{
  if (!qword_1EBB76888)
  {
    sub_1C27CC580(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB76888);
    }
  }
}

uint64_t type metadata accessor for ImageRepresentation()
{
  uint64_t result = qword_1EBB75D78;
  if (!qword_1EBB75D78) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C27CC4B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_1C27CC51C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C27CC580(uint64_t a1)
{
}

unint64_t sub_1C27CC5B4()
{
  unint64_t result = qword_1EBB75DA8[0];
  if (!qword_1EBB75DA8[0])
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, qword_1EBB75DA8);
  }
  return result;
}

uint64_t ImageRepresentation.encode(to:)(void *a1)
{
  long long v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C27CCD60(0, &qword_1EBB748F8, (uint64_t (*)(void))sub_1C27E28FC, (uint64_t)&type metadata for ImageRepresentation.PngDataCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v46 = *(void *)(v3 - 8);
  uint64_t v47 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v43 = (char *)&v39 - v4;
  sub_1C27CCD60(0, &qword_1EBB75788, (uint64_t (*)(void))sub_1C27CD0B4, (uint64_t)&type metadata for ImageRepresentation.SymbolCodingKeys, v2);
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v41 = (char *)&v39 - v6;
  sub_1C27CC580(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v42 = (uint64_t)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CCD60(0, &qword_1EBB75780, (uint64_t (*)(void))sub_1C27E2950, (uint64_t)&type metadata for ImageRepresentation.BundleCodingKeys, v2);
  uint64_t v10 = v9;
  uint64_t v40 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v39 - v11;
  uint64_t v13 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (uint64_t *)((char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27CCD60(0, &qword_1EBB75778, (uint64_t (*)(void))sub_1C27CD108, (uint64_t)&type metadata for ImageRepresentation.CodingKeys, v2);
  uint64_t v52 = v16;
  uint64_t v49 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v39 - v17;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27CD108();
  unint64_t v51 = v18;
  sub_1C28CE800();
  sub_1C27CCEA4(v50, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27CC3FC();
      uint64_t v21 = v42;
      sub_1C27CC4B4((uint64_t)v15 + *(int *)(v20 + 48), v42, (uint64_t (*)(void))sub_1C27CC580);
      LOBYTE(v53) = 1;
      sub_1C27CD0B4();
      uint64_t v22 = v41;
      uint64_t v24 = v51;
      uint64_t v23 = v52;
      sub_1C28CE550();
      LOBYTE(v53) = 0;
      uint64_t v25 = v45;
      uint64_t v26 = v48;
      sub_1C28CE5A0();
      swift_bridgeObjectRelease();
      if (!v26)
      {
        LOBYTE(v53) = 1;
        sub_1C27CCDC8(0);
        sub_1C27CCE5C(&qword_1EBB74C70, sub_1C27CCDC8);
        sub_1C28CE590();
      }
      (*(void (**)(char *, uint64_t))(v44 + 8))(v22, v25);
      sub_1C27CCDFC(v21, (uint64_t (*)(void))sub_1C27CC580);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v24, v23);
    }
    else
    {
      uint64_t v32 = *v15;
      unint64_t v31 = v15[1];
      LOBYTE(v53) = 2;
      sub_1C27E28FC();
      uint64_t v33 = v43;
      uint64_t v35 = v51;
      uint64_t v34 = v52;
      sub_1C28CE550();
      uint64_t v53 = v32;
      unint64_t v54 = v31;
      char v55 = 0;
      sub_1C27E29A4();
      uint64_t v37 = v47;
      uint64_t v36 = v48;
      sub_1C28CE5E0();
      if (v36)
      {
        (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v37);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v35, v34);
        return sub_1C27E2870(v32, v31);
      }
      else
      {
        LOBYTE(v53) = 1;
        sub_1C28CE5D0();
        sub_1C27E2870(v32, v31);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v37);
        return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v35, v34);
      }
    }
  }
  else
  {
    uint64_t v50 = v15[2];
    LOBYTE(v53) = 0;
    sub_1C27E2950();
    uint64_t v27 = v51;
    uint64_t v28 = v52;
    sub_1C28CE550();
    LOBYTE(v53) = 0;
    uint64_t v29 = v48;
    sub_1C28CE5A0();
    swift_bridgeObjectRelease();
    if (v29)
    {
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v27, v28);
    }
    else
    {
      LOBYTE(v53) = 1;
      sub_1C28CE5A0();
      uint64_t v38 = v40;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v38 + 8))(v12, v10);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v51, v52);
    }
  }
}

void sub_1C27CCD60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

void sub_1C27CCDC8(uint64_t a1)
{
}

uint64_t sub_1C27CCDFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C27CCE5C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27CCEA4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t *initializeWithCopy for ImageRepresentation(uint64_t *a1, uint64_t *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2)
  {
    uint64_t v15 = *a2;
    unint64_t v16 = a2[1];
    sub_1C27E2B38(*a2, v16);
    *a1 = v15;
    a1[1] = v16;
    a1[2] = a2[2];
  }
  else if (EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    sub_1C27CC3FC();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C27CCDC8(0);
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    uint64_t v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    swift_bridgeObjectRetain();
    if (v13(v9, 1, v11))
    {
      sub_1C27CC580(0);
      memcpy(v8, v9, *(void *)(*(void *)(v14 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v8, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
  }
  else
  {
    uint64_t v17 = a2[1];
    *a1 = *a2;
    a1[1] = v17;
    uint64_t v18 = a2[3];
    a1[2] = a2[2];
    a1[3] = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

unint64_t sub_1C27CD0B4()
{
  unint64_t result = qword_1EBB76320;
  if (!qword_1EBB76320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76320);
  }
  return result;
}

unint64_t sub_1C27CD108()
{
  unint64_t result = qword_1EBB762F0;
  if (!qword_1EBB762F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB762F0);
  }
  return result;
}

uint64_t static DeviceDidPairUnpairListener.createDeviceDidPairUnpairPublisher()()
{
  sub_1C27CD5CC();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v18 = v0;
  uint64_t v19 = v1;
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v17 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(self, sel_defaultCenter);
  id v5 = objc_msgSend(self, sel_sharedInstance);
  sub_1C27CD468(0, (unint64_t *)&unk_1EBB76DC8, MEMORY[0x1E4FBBE00]);
  sub_1C28CDED0();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C28D5110;
  id v7 = (id)*MEMORY[0x1E4F79EA0];
  id v8 = v4;
  id v9 = v5;
  sub_1C28CDEC0();
  uint64_t v10 = (void *)*MEMORY[0x1E4F79EB8];
  id v11 = v8;
  id v12 = v9;
  id v13 = v10;
  sub_1C28CDEC0();
  uint64_t v20 = v6;
  sub_1C27CD468(0, &qword_1EBB76D68, MEMORY[0x1E4FBB320]);
  sub_1C27CD4C8(&qword_1EBB76DC0, MEMORY[0x1E4F27FC8]);
  sub_1C27CD558();
  sub_1C28CCFC0();
  sub_1C27CD4C8(&qword_1EBB76D18, (void (*)(uint64_t))sub_1C27CD5CC);
  uint64_t v14 = v18;
  uint64_t v15 = sub_1C28CD300();

  (*(void (**)(char *, uint64_t))(v19 + 8))(v3, v14);
  return v15;
}

void sub_1C27CD468(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C28CDED0();
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C27CD4C8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27CD510(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C27CD558()
{
  unint64_t result = qword_1EBB76D70;
  if (!qword_1EBB76D70)
  {
    sub_1C27CD468(255, &qword_1EBB76D68, MEMORY[0x1E4FBB320]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76D70);
  }
  return result;
}

void sub_1C27CD5CC()
{
  if (!qword_1EBB76D20)
  {
    sub_1C28CDED0();
    sub_1C27CD4C8(&qword_1EBB76DC0, MEMORY[0x1E4F27FC8]);
    unint64_t v0 = sub_1C28CCFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76D20);
    }
  }
}

uint64_t sub_1C27CD660@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = *a1;
  *(_DWORD *)((char *)a1 + ((*(unsigned int *)(v4 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v4 + *MEMORY[0x1E4FBBAB0]) - 8) + 16))(a2, v3);
}

uint64_t AtomicLazy.init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = type metadata accessor for AtomicLazy.State();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (uint64_t *)((char *)&v11 - v7);
  *uint64_t v8 = a1;
  v8[1] = a2;
  swift_storeEnumTagMultiPayload();
  uint64_t v9 = sub_1C27CDDC8();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)(v2 + 16) = v9;
  return v2;
}

uint64_t static AtomicLazy.subscript.getter(uint64_t a1)
{
  return swift_release();
}

void sub_1C27CD870(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  v4[2] = *(void *)(*v1 + 80);
  v4[3] = *(void *)(v2 + 88);
  v4[4] = a1;
  type metadata accessor for AtomicLazy.State();
  sub_1C27CD92C((void (*)(uint64_t))sub_1C27CD9E0, (uint64_t)v4, v3);
}

uint64_t type metadata accessor for AtomicLazy.State()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C27CD92C(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)a3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(a3 + ((*(unsigned int *)(*(void *)a3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  a1(v4);
  os_unfair_lock_unlock(v5);
}

uint64_t sub_1C27CD9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27CDA00(a1, *(void *)(v2 + 32), *(void *)(v2 + 24), a2);
}

uint64_t sub_1C27CDA00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v8 = type metadata accessor for AtomicLazy.State();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (void (**)(uint64_t))((char *)&v13 - v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v13 - v10, a1, v8);
  if (swift_getEnumCaseMultiPayload() == 1) {
    return (*(uint64_t (**)(uint64_t, void (**)(uint64_t), uint64_t))(*(void *)(a3 - 8) + 32))(a4, v11, a3);
  }
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  (*v11)(a2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 16))(a1, a4, a3);
  return swift_storeEnumTagMultiPayload();
}

void *sub_1C27CDBB4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    uint64_t v11 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v11;
    swift_retain();
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

uint64_t sub_1C27CDCDC(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= 0x10) {
    unint64_t v2 = 16;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 24) - 8) + 8))();
  }
  else {
    return swift_release();
  }
}

uint64_t sub_1C27CDDC8()
{
  return sub_1C28CE190();
}

void sub_1C27CDE44(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

id UserDefaultsObserver.init(userDefaults:key:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_currentValue;
  sub_1C27CDFB4();
  swift_allocObject();
  int v8 = v3;
  *(void *)&v3[v7] = sub_1C28CD140();
  *(void *)&v8[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_userDefaults] = a1;
  int v9 = &v8[OBJC_IVAR____TtC16HealthExperience20UserDefaultsObserver_key];
  *(void *)int v9 = a2;
  *((void *)v9 + 1) = a3;
  id v10 = a1;
  swift_bridgeObjectRetain();

  v14.receiver = v8;
  v14.super_class = (Class)type metadata accessor for UserDefaultsObserver();
  id v11 = objc_msgSendSuper2(&v14, sel_init);
  id v12 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v10, sel_addObserver_forKeyPath_options_context_, v11, v12, 3, 0);

  return v11;
}

void sub_1C27CDFB4()
{
  if (!qword_1EBB76FB0)
  {
    sub_1C27B9F20();
    unint64_t v0 = sub_1C28CD150();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76FB0);
    }
  }
}

uint64_t type metadata accessor for UserDefaultsObserver()
{
  return self;
}

uint64_t sub_1C27CE040(void *a1)
{
  return sub_1C27CE064(a1);
}

uint64_t sub_1C27CE064(void *a1)
{
  uint64_t v2 = (uint64_t)v1;
  uint64_t v4 = *v1;
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  int v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC620();
  uint64_t v9 = v2 + *(void *)(*(void *)v2 + 144);
  swift_beginAccess();
  sub_1C27CEABC(v9, (uint64_t)&v30);
  if (v33 == 2
    && (int8x16_t v10 = vorrq_s8(v31, v32),
        !(*(void *)&vorr_s8(*(int8x8_t *)v10.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v10, v10, 8uLL)) | v30)))
  {
    sub_1C27CEA68((uint64_t)&v30);
    sub_1C27CE8A4((uint64_t)a1, (uint64_t)&v30);
    char v33 = 0;
    sub_1C27CE4DC((uint64_t)&v30, (uint64_t)v29);
    swift_beginAccess();
    sub_1C27CE908((uint64_t)v29, v9);
    swift_endAccess();
    id v12 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 120));
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    swift_bridgeObjectRetain();
    uint64_t v15 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v16 = objc_msgSend(self, sel_transactionWithName_, v15);

    uint64_t v17 = *(void *)(*(void *)v2 + 128);
    uint64_t v18 = *(void **)(v2 + v17);
    *(void *)(v2 + v17) = v16;

    sub_1C28CCDC0();
    swift_retain();
    uint64_t v19 = sub_1C28CCE00();
    os_log_type_t v20 = sub_1C28CDCD0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v26 = v13;
      uint64_t v22 = (uint8_t *)v21;
      uint64_t v27 = swift_slowAlloc();
      uint64_t v30 = v27;
      v28.i64[0] = v4;
      *(_DWORD *)uint64_t v22 = 136315138;
      v25[1] = v22 + 4;
      swift_bridgeObjectRetain();
      v29[0] = sub_1C27D36AC(v26, v14, &v30);
      uint64_t v4 = v28.i64[0];
      sub_1C28CDF90();
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v19, v20, "[BindDaemonTransaction] Received subscription, created daemon transaction with name: %s", v22, 0xCu);
      uint64_t v23 = v27;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v23, -1, -1);
      MEMORY[0x1C87609B0](v22, -1, -1);
    }
    else
    {

      swift_release();
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    sub_1C28CC630();
    uint64_t v24 = *(void *)(v4 + 104);
    uint64_t v30 = *(void *)(v4 + 80);
    int8x16_t v28 = *(int8x16_t *)(v4 + 88);
    int8x16_t v31 = v28;
    v32.i64[0] = v24;
    v32.i64[0] = _s21BindDaemonTransactionV5InnerCMa();
    v32.i64[1] = swift_getWitnessTable();
    uint64_t v30 = v2;
    swift_retain();
    sub_1C28CD000();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v30);
  }
  else
  {
    sub_1C27CEA68((uint64_t)&v30);
    sub_1C28CC630();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1C28CD020();
  }
}

uint64_t sub_1C27CE4DC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C27CE538(void *a1)
{
  uint64_t v16 = *v1;
  uint64_t v3 = *(void *)(v16 + 96);
  uint64_t v4 = sub_1C28CDF70();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = ((uint64_t (*)(void))MEMORY[0x1F4188790])();
  int v8 = (char *)&v15 - v7;
  uint64_t v9 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v6);
  id v11 = (char *)&v15 - v10;
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC((uint64_t)(v1 + 4), (uint64_t)&v17);
  if (v20 == 2
    && (int8x16_t v12 = vorrq_s8(v18, v19),
        !(*(void *)&vorr_s8(*(int8x8_t *)v12.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v12, v12, 8uLL)) | (unint64_t)v17)))
  {
    sub_1C27CEA68((uint64_t)&v17);
    sub_1C27CE8A4((uint64_t)a1, (uint64_t)&v17);
    char v20 = 0;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)&v17, (uint64_t)(v1 + 4));
    swift_endAccess();
    unint64_t v14 = (char *)v1 + *(void *)(*v1 + 152);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v14, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v8, 1, v3) == 1)
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
      return sub_1C28CC630();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v8, v3);
      sub_1C28CC630();
      sub_1C28CC9C0();
      v19.i64[0] = v16;
      v19.i64[1] = swift_getWitnessTable();
      uint64_t v17 = v1;
      swift_retain();
      sub_1C28CD000();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v17);
      sub_1C28CC9D0();
      return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v3);
    }
  }
  else
  {
    sub_1C27CEA68((uint64_t)&v17);
    sub_1C28CC630();
    __swift_project_boxed_opaque_existential_1(a1, a1[3]);
    return sub_1C28CD020();
  }
}

uint64_t sub_1C27CE8A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C27CE908(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C27CE964()
{
  sub_1C28CC620();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 144);
  swift_beginAccess();
  sub_1C27CEABC(v1, (uint64_t)v3);
  sub_1C28CD050();
  sub_1C27CEA68((uint64_t)v3);
  sub_1C28CC630();
  sub_1C27CEBA4((uint64_t)v5, (uint64_t)v3);
  if (v4)
  {
    __swift_project_boxed_opaque_existential_1(v3, v4);
    sub_1C28CD0B0();
    sub_1C27CEB18((uint64_t)v5);
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v3);
  }
  else
  {
    sub_1C27CEB18((uint64_t)v5);
    return sub_1C27CEB18((uint64_t)v3);
  }
}

uint64_t sub_1C27CEA68(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C27CEABC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C27CEB18(uint64_t a1)
{
  sub_1C27CEC08(0, (unint64_t *)&qword_1EBB747D8, (uint64_t (*)(uint64_t))sub_1C27E6A4C, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C27CEBA4(uint64_t a1, uint64_t a2)
{
  sub_1C27CEC6C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C27CEC08(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C27CEC6C()
{
  if (!qword_1EBB747D8)
  {
    sub_1C27E6A4C();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB747D8);
    }
  }
}

uint64_t Publishers.BindDaemonTransaction.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(v11 + 24);
  v19[0] = *(void *)(v11 + 16);
  v19[1] = v13;
  v19[2] = v12;
  v19[3] = v14;
  _s21BindDaemonTransactionV5InnerCMa();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, a3);
  uint64_t v15 = (uint64_t *)(v4 + *(int *)(a2 + 36));
  uint64_t v16 = *v15;
  uint64_t v17 = v15[1];
  swift_allocObject();
  swift_bridgeObjectRetain();
  v19[0] = sub_1C27CEE58((uint64_t)v10, v16, v17);
  swift_getWitnessTable();
  sub_1C28CD410();
  return swift_release();
}

uint64_t _s21BindDaemonTransactionV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t *sub_1C27CEE58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *v3;
  *(uint64_t *)((char *)v3 + *(void *)(*v3 + 128)) = 0;
  uint64_t v9 = *(void *)(*v3 + 136);
  sub_1C28CC650();
  swift_allocObject();
  *(uint64_t *)((char *)v3 + v9) = sub_1C28CC640();
  uint64_t v10 = (uint64_t)v4 + *(void *)(*v4 + 144);
  *(void *)(v10 + 32) = 0;
  *(_OWORD *)uint64_t v10 = 0u;
  *(_OWORD *)(v10 + 16) = 0u;
  *(unsigned char *)(v10 + 40) = 2;
  (*(void (**)(uint64_t, uint64_t))(*(void *)(*(void *)(v8 + 88) - 8) + 32))((uint64_t)v4 + *(void *)(*v4 + 112), a1);
  uint64_t v11 = (uint64_t *)((char *)v4 + *(void *)(*v4 + 120));
  *uint64_t v11 = a2;
  v11[1] = a3;
  return v3;
}

uint64_t Cancellable.store(in:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v6 = &v9[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C28CD0F0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v4 + 16))(v6, v2, a2);
  uint64_t v7 = sub_1C28CD100();
  swift_retain();
  sub_1C28CC620();
  swift_beginAccess();
  swift_retain();
  sub_1C27CF444(&v10, v7);
  swift_endAccess();
  swift_release();
  sub_1C28CC630();
  return swift_release_n();
}

uint64_t sub_1C27CF0E8(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    swift_retain();
    sub_1C28CC620();
    swift_beginAccess();
    swift_retain();
    sub_1C27CF444(&v2, v1);
    swift_endAccess();
    swift_release();
    sub_1C28CC630();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C27CF180(uint64_t a1)
{
  if (!a1) {
    return 0;
  }
  swift_retain();
  sub_1C28CC620();
  swift_beginAccess();
  uint64_t v1 = sub_1C27CF210();
  swift_endAccess();
  sub_1C28CC630();
  swift_release();
  return v1;
}

uint64_t sub_1C27CF210()
{
  uint64_t v1 = *v0;
  if ((*v0 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    char v2 = sub_1C28CE090();
    swift_release();
    if (v2)
    {
      uint64_t v3 = sub_1C2829758();
      swift_bridgeObjectRelease();
      return v3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    return 0;
  }
  sub_1C28CD0F0();
  sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C28CD670();
  uint64_t v5 = -1 << *(unsigned char *)(v1 + 32);
  unint64_t v6 = v4 & ~v5;
  if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v7 = ~v5;
  sub_1C27CF740(&qword_1EBB755C0, MEMORY[0x1E4F1AB18]);
  while ((sub_1C28CD6E0() & 1) == 0)
  {
    unint64_t v6 = (v6 + 1) & v7;
    if (((*(void *)(v1 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v10 = *v0;
  uint64_t v11 = *v0;
  *unint64_t v0 = 0x8000000000000000;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    sub_1C28289D8((void (*)(void))sub_1C27CFC7C);
    uint64_t v10 = v11;
  }
  uint64_t v3 = *(void *)(*(void *)(v10 + 48) + 8 * v6);
  sub_1C27CFD10(v6);
  *unint64_t v0 = v11;
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C27CF444(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1C28CE070();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_1C28CD0F0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v18;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C28CE060();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v16 = sub_1C28270D0(v7, result + 1);
    uint64_t v20 = v16;
    if (*(void *)(v16 + 24) <= *(void *)(v16 + 16))
    {
      swift_retain();
      sub_1C27BCDAC();
      uint64_t v17 = v20;
    }
    else
    {
      uint64_t v17 = v16;
      swift_retain();
    }
    sub_1C2827E0C(a2, v17);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  sub_1C28CD0F0();
  sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
  swift_bridgeObjectRetain();
  uint64_t v10 = sub_1C28CD670();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v2;
    *char v2 = 0x8000000000000000;
    uint64_t v15 = swift_retain();
    sub_1C27CF788(v15, v12, isUniquelyReferenced_nonNull_native);
    *char v2 = v19;
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  uint64_t v13 = ~v11;
  sub_1C27CF740(&qword_1EBB755C0, MEMORY[0x1E4F1AB18]);
  while ((sub_1C28CD6E0() & 1) == 0)
  {
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_11;
    }
  }
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v2 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1C27CF740(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27CF788(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_1C27BCDAC();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_1C28289D8((void (*)(void))sub_1C27CFC7C);
      goto LABEL_12;
    }
    sub_1C27CF980();
  }
  uint64_t v8 = *v3;
  sub_1C28CD0F0();
  sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
  uint64_t result = sub_1C28CD670();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = ~v9;
    sub_1C27CF740(&qword_1EBB755C0, MEMORY[0x1E4F1AB18]);
    do
    {
      uint64_t result = sub_1C28CD6E0();
      if (result) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v10;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v11 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v11 + 48) + 8 * a2) = v5;
  uint64_t v12 = *(void *)(v11 + 16);
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t v14 = v12 + 1;
  if (!v13)
  {
    *(void *)(v11 + 16) = v14;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1C28CE670();
  __break(1u);
  return result;
}

uint64_t sub_1C27CF980()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C27CFC7C();
  uint64_t v3 = sub_1C28CE0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v25 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v26 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v14 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v26) {
        goto LABEL_33;
      }
      unint64_t v15 = *(void *)(v25 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v26) {
          goto LABEL_33;
        }
        unint64_t v15 = *(void *)(v25 + 8 * v10);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v13);
    sub_1C28CD0F0();
    sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
    swift_retain();
    uint64_t result = sub_1C28CD670();
    uint64_t v18 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v19) & ~*(void *)(v8 + 8 * (v19 >> 6)))) | v19 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v21 = 0;
      unint64_t v22 = (unint64_t)(63 - v18) >> 6;
      do
      {
        if (++v20 == v22 && (v21 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v23 = v20 == v22;
        if (v20 == v22) {
          unint64_t v20 = 0;
        }
        v21 |= v23;
        uint64_t v24 = *(void *)(v8 + 8 * v20);
      }
      while (v24 == -1);
      unint64_t v11 = __clz(__rbit64(~v24)) + (v20 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    *(void *)(*(void *)(v4 + 48) + 8 * v11) = v17;
    ++*(void *)(v4 + 16);
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v26)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v25 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v26) {
      goto LABEL_33;
    }
    unint64_t v15 = *(void *)(v25 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1C27CFC7C()
{
  if (!qword_1EBB75708)
  {
    sub_1C28CD0F0();
    sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75708);
    }
  }
}

unint64_t sub_1C27CFD10(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1C28CE030();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      sub_1C28CD0F0();
      sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
      do
      {
        uint64_t v10 = sub_1C28CD670() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v10 >= v9 && v2 >= v10)
          {
LABEL_16:
            uint64_t v13 = *(void *)(v3 + 48);
            int64_t v14 = (void *)(v13 + 8 * v2);
            unint64_t v15 = (void *)(v13 + 8 * v6);
            if (v2 != v6 || (int64_t v2 = v6, v14 >= v15 + 1))
            {
              *int64_t v14 = *v15;
              int64_t v2 = v6;
            }
          }
        }
        else if (v10 >= v9 || v2 >= v10)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t static DateInterval.allTimeInterval.getter()
{
  uint64_t v0 = sub_1C28CC450();
  uint64_t v1 = MEMORY[0x1F4188790](v0 - 8);
  MEMORY[0x1F4188790](v1);
  sub_1C28CC3C0();
  sub_1C28CC3D0();
  return sub_1C28CBF90();
}

uint64_t static FeedItemContext.makeProfileDisplayNamePublisher(healthStore:summarySharingEntryStore:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id v7 = objc_msgSend(a1, sel_profileIdentifier);
  id v8 = objc_msgSend(v7, sel_type);

  if (v8 == (id)2)
  {
    return sub_1C27F43CC(a1);
  }
  else if (v8 == (id)1)
  {
    return sub_1C27D649C((uint64_t)a1, a3, a4);
  }
  else
  {
    id v10 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B360]), sel_initWithHealthStore_, a1);
    uint64_t v11 = sub_1C27F459C(v10);

    return v11;
  }
}

uint64_t initializeWithCopy for CurrentOSUpdateDateProvider(uint64_t a1, uint64_t a2, int *a3)
{
  unint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v8 = v7;
  unint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  v9(a1, a2, v7);
  v9(a1 + a3[5], a2 + a3[5], v8);
  uint64_t v10 = a3[6];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v6);
  uint64_t v14 = v13;
  unint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16);
  v15(v11, v12, v13);
  v15(a1 + a3[7], a2 + a3[7], v14);
  v15(a1 + a3[8], a2 + a3[8], v14);
  return a1;
}

uint64_t destroy for CurrentOSUpdateDateProvider(uint64_t a1, int *a2)
{
  uint64_t v4 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
  sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
  v7(a1, v5);
  v7(a1 + a2[5], v6);
  uint64_t v8 = a1 + a2[6];
  sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v4);
  uint64_t v10 = v9;
  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v13)((void *)(v9 - 8), v8, v9);
  v13(a1 + a2[7], v10);
  uint64_t v11 = a1 + a2[8];

  return ((uint64_t (*)(uint64_t, uint64_t))v13)(v11, v10);
}

uint64_t Date.adjustedBy(years:months:days:hours:minutes:seconds:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v53 = a2;
  uint64_t v49 = a6;
  uint64_t v50 = a5;
  uint64_t v51 = a4;
  uint64_t v52 = a3;
  uint64_t v55 = a1;
  uint64_t v48 = a7;
  sub_1C27D0A20(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v47 = (char *)&v43 - v8;
  uint64_t v56 = sub_1C28CC580();
  uint64_t v9 = *(void *)(v56 - 8);
  MEMORY[0x1F4188790](v56);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC190();
  uint64_t v45 = *(void *)(v12 - 8);
  uint64_t v46 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC550();
  sub_1C27D0A20(0, qword_1EBB771F8, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v15 = sub_1C28CC570();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1C28D2EC0;
  unint64_t v20 = *(void (**)(unint64_t, void, uint64_t))(v16 + 104);
  v20(v19 + v18, *MEMORY[0x1E4F27C00], v15);
  v20(v19 + v18 + v17, *MEMORY[0x1E4F27C20], v15);
  v20(v19 + v18 + 2 * v17, *MEMORY[0x1E4F27C30], v15);
  v20(v19 + v18 + 3 * v17, *MEMORY[0x1E4F27BF0], v15);
  v20(v19 + v18 + 4 * v17, *MEMORY[0x1E4F27C10], v15);
  v20(v19 + v18 + 5 * v17, *MEMORY[0x1E4F27C48], v15);
  v20(v19 + v18 + 6 * v17, *MEMORY[0x1E4F27C50], v15);
  sub_1C27D0BA0(v19);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C28CC4E0();
  swift_bridgeObjectRelease();
  char v21 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v54 = v9 + 8;
  uint64_t v44 = v21;
  v21(v11, v56);
  uint64_t v22 = sub_1C28CC110();
  if (v23) {
    uint64_t v24 = 0;
  }
  else {
    uint64_t v24 = v22;
  }
  uint64_t v25 = sub_1C28CC130();
  char v27 = v26;
  uint64_t v28 = sub_1C28CC0C0();
  if (v29) {
    uint64_t v30 = 0;
  }
  else {
    uint64_t v30 = v28;
  }
  uint64_t v31 = sub_1C28CC0F0();
  if (v32) {
    uint64_t v33 = 0;
  }
  else {
    uint64_t v33 = v31;
  }
  uint64_t v34 = sub_1C28CC150();
  if (v35) {
    uint64_t v36 = 0;
  }
  else {
    uint64_t v36 = v34;
  }
  uint64_t v37 = sub_1C28CC170();
  if (v38) {
    uint64_t v39 = 0;
  }
  else {
    uint64_t v39 = v37;
  }
  if (__OFADD__(v24, v55))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  if (v27) {
    uint64_t v25 = 0;
  }
  sub_1C28CC120();
  if (__OFADD__(v25, v53)) {
    goto LABEL_27;
  }
  sub_1C28CC140();
  if (__OFADD__(v30, v52))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  sub_1C28CC0D0();
  if (__OFADD__(v33, v51))
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  sub_1C28CC100();
  if (__OFADD__(v36, v50))
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  sub_1C28CC160();
  if (__OFADD__(v39, v49))
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  sub_1C28CC180();
  sub_1C28CC550();
  uint64_t v33 = (uint64_t)v47;
  sub_1C28CC510();
  v44(v11, v56);
  uint64_t v40 = sub_1C28CC450();
  uint64_t v41 = *(void *)(v40 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v33, 1, v40) != 1)
  {
    (*(void (**)(char *, uint64_t))(v45 + 8))(v14, v46);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 32))(v48, v33, v40);
  }
LABEL_32:
  sub_1C281B8AC(v33);
  uint64_t result = sub_1C28CE360();
  __break(1u);
  return result;
}

void sub_1C27D09CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C27D0A20(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C27D0A84(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C27D0AD8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C27D0B3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C27D0BA0(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC570();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_1C27D0F90();
    uint64_t v9 = sub_1C28CE100();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_1C27D0F04((unint64_t *)&unk_1EBB77260, MEMORY[0x1E4F27C88]);
      uint64_t v16 = sub_1C28CD670();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_1C27D0F04((unint64_t *)&unk_1EBB77248, MEMORY[0x1E4F27C88]);
          char v23 = sub_1C28CD6E0();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        uint64_t result = (*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return v9;
      }
    }
  }
  return MEMORY[0x1E4FBC870];
}

uint64_t sub_1C27D0EB4(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D1C9C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27D0F04(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27D0F4C(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D1C9C(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C27D0F90()
{
  if (!qword_1EBB77290)
  {
    sub_1C28CC570();
    sub_1C27D0F04((unint64_t *)&unk_1EBB77260, MEMORY[0x1E4F27C88]);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB77290);
    }
  }
}

uint64_t HKProfileStore.ProfileIdentifiersPublisher.receive<A>(subscriber:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = _s27ProfileIdentifiersPublisherV5InnerCMa();
  id v5 = v3;
  id v6 = sub_1C27D10D4(a1, v5);

  v8[3] = v4;
  v8[4] = swift_getWitnessTable();
  v8[0] = v6;
  sub_1C28CD000();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v8);
}

id sub_1C27D10D4(uint64_t a1, void *a2)
{
  id v4 = objc_allocWithZone((Class)_s27ProfileIdentifiersPublisherV5InnerCMa());
  return sub_1C27D1120(a1, a2);
}

id sub_1C27D1120(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  v18[1] = a1;
  uint64_t v5 = *MEMORY[0x1E4FBC8C8] & *(void *)v2;
  v18[0] = sub_1C28CCCD0();
  uint64_t v6 = *(void *)(v18[0] - 8);
  MEMORY[0x1F4188790](v18[0]);
  uint64_t v8 = (char *)v18 - v7;
  uint64_t v9 = (uint64_t *)&v3[*(void *)(v5 + 96)];
  uint64_t v10 = sub_1C28CC650();
  swift_allocObject();
  uint64_t v11 = v3;
  uint64_t v12 = sub_1C28CC640();
  v9[3] = v10;
  v9[4] = sub_1C27D25DC();
  *uint64_t v9 = v12;
  uint64_t v13 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v14 = *(void *)((*MEMORY[0x1E4FBC8C8] & *(void *)v11) + 0x68);
  *(void *)&v11[v14] = sub_1C28CD080();
  *(void *)&v11[*(void *)((*v13 & *(void *)v11) + 0x70)] = a2;
  id v15 = a2;
  sub_1C28CCCC0();
  (*(void (**)(char *, char *, void))(v6 + 32))(&v11[*(void *)((*v13 & *(void *)v11) + 0x78)], v8, v18[0]);

  uint64_t v16 = (objc_class *)_s27ProfileIdentifiersPublisherV5InnerCMa();
  v19.receiver = v11;
  v19.super_class = v16;
  return objc_msgSendSuper2(&v19, sel_init);
}

uint64_t sub_1C27D1340(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = a2;
  uint64_t v5 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
  {
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
    uint64_t v4 = sub_1C28CD920();
  }
  swift_retain();
  id v6 = a3;
  v5(v4, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

void sub_1C27D13E4(uint64_t a1, void *a2)
{
  sub_1C27D13F4(a1, a2, *(void *)(v2 + 32), *(void (**)(void))(v2 + 40));
}

void sub_1C27D13F4(uint64_t a1, void *a2, uint64_t a3, void (*a4)(void))
{
  uint64_t v7 = a3 + 16;
  swift_beginAccess();
  uint64_t v8 = MEMORY[0x1C8760AB0](v7);
  if (v8)
  {
    uint64_t v9 = (void *)v8;
    sub_1C27D1484(a1, a2);
  }
  if (a4) {
    a4();
  }
}

uint64_t sub_1C27D1484(uint64_t a1, void *a2)
{
  uint64_t v71 = a1;
  sub_1C28CCCB0();
  swift_getWitnessTable();
  uint64_t v4 = sub_1C28CE7E0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v66 - v6;
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v66 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  uint64_t v14 = (char *)&v66 - v13;
  uint64_t v15 = MEMORY[0x1F4188790](v12);
  uint64_t v17 = (char *)&v66 - v16;
  uint64_t v72 = v15;
  uint64_t v73 = v18;
  if (a2)
  {
    id v19 = a2;
    sub_1C28CCDC0();
    id v20 = a2;
    id v21 = v2;
    id v22 = a2;
    id v23 = v21;
    uint64_t v24 = sub_1C28CCE00();
    os_log_type_t v25 = sub_1C28CDCB0();
    if (os_log_type_enabled(v24, v25))
    {
      uint64_t v26 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v75 = v71;
      *(_DWORD *)uint64_t v26 = 136446466;
      id v27 = objc_msgSend(v23, sel_description);
      uint64_t v28 = sub_1C28CD730();
      unint64_t v30 = v29;

      uint64_t v74 = sub_1C27D36AC(v28, v30, &v75);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      *(_WORD *)(v26 + 12) = 2082;
      uint64_t v74 = (uint64_t)a2;
      id v31 = a2;
      sub_1C27C7060();
      uint64_t v32 = sub_1C28CD750();
      uint64_t v74 = sub_1C27D36AC(v32, v33, &v75);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v24, v25, "[%{public}s]: Failed to fetch profiles: %{public}s", (uint8_t *)v26, 0x16u);
      uint64_t v34 = v71;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v34, -1, -1);
      MEMORY[0x1C87609B0](v26, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v17, v72);
  }
  else
  {
    uint64_t v69 = v4;
    uint64_t v70 = v5;
    uint64_t v35 = v71;
    if (v71)
    {
      sub_1C28CCDC0();
      id v36 = v2;
      swift_bridgeObjectRetain_n();
      id v37 = v36;
      char v38 = sub_1C28CCE00();
      os_log_type_t v39 = sub_1C28CDCD0();
      int v40 = v39;
      if (os_log_type_enabled(v38, v39))
      {
        uint64_t v41 = swift_slowAlloc();
        uint64_t v68 = swift_slowAlloc();
        uint64_t v75 = v68;
        *(_DWORD *)uint64_t v41 = 136446466;
        id v42 = objc_msgSend(v37, sel_description, v41 + 4);
        int v67 = v40;
        id v43 = v42;
        uint64_t v44 = v37;
        uint64_t v45 = sub_1C28CD730();
        unint64_t v47 = v46;

        uint64_t v74 = sub_1C27D36AC(v45, v47, &v75);
        sub_1C28CDF90();

        swift_bridgeObjectRelease();
        *(_WORD *)(v41 + 12) = 2082;
        uint64_t v66 = v41 + 14;
        uint64_t v48 = sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
        swift_bridgeObjectRetain();
        uint64_t v49 = MEMORY[0x1C875EEC0](v71, v48);
        unint64_t v51 = v50;
        swift_bridgeObjectRelease();
        uint64_t v52 = v49;
        uint64_t v35 = v71;
        uint64_t v74 = sub_1C27D36AC(v52, v51, &v75);
        sub_1C28CDF90();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v38, (os_log_type_t)v67, "[%{public}s]: Received new profiles: %{public}s", (uint8_t *)v41, 0x16u);
        uint64_t v53 = v68;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v53, -1, -1);
        MEMORY[0x1C87609B0](v41, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(char *, uint64_t))(v73 + 8))(v14, v72);
      uint64_t v64 = v69;
      uint64_t v65 = v70;
      uint64_t v75 = v35;
      _s27ProfileIdentifiersPublisherV5InnerCMa();
      swift_getWitnessTable();
      sub_1C28CCC70();
      return (*(uint64_t (**)(char *, uint64_t))(v65 + 8))(v7, v64);
    }
    else
    {
      sub_1C28CCDC0();
      id v55 = v2;
      uint64_t v56 = sub_1C28CCE00();
      os_log_type_t v57 = sub_1C28CDCC0();
      if (os_log_type_enabled(v56, v57))
      {
        uint64_t v58 = (uint8_t *)swift_slowAlloc();
        uint64_t v59 = swift_slowAlloc();
        uint64_t v75 = v59;
        *(_DWORD *)uint64_t v58 = 136446210;
        uint64_t v71 = (uint64_t)(v58 + 4);
        id v60 = objc_msgSend(v55, sel_description);
        uint64_t v61 = sub_1C28CD730();
        unint64_t v63 = v62;

        uint64_t v74 = sub_1C27D36AC(v61, v63, &v75);
        sub_1C28CDF90();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v56, v57, "[%{public}s]: No error and nil profileIdentifiers received", v58, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v59, -1, -1);
        MEMORY[0x1C87609B0](v58, -1, -1);
      }
      else
      {
      }
      return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v11, v72);
    }
  }
}

uint64_t _s27ProfileIdentifiersPublisherV5InnerCMa()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C27D1C9C(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

id sub_1C27D1CD8(void *a1)
{
  id v1 = a1;
  sub_1C27D1D40();

  uint64_t v2 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();

  return v2;
}

uint64_t sub_1C27D1D40()
{
  return 0;
}

void sub_1C27D1E3C()
{
  sub_1C27D1E48(*(void *)(v0 + 32));
}

void sub_1C27D1E48(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = (void *)MEMORY[0x1C8760AB0](v1);
  if (v2)
  {
    uint64_t v3 = v2;
    objc_msgSend(*(id *)((char *)v2 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v2) + 0x70)), sel_addObserver_completion_, v2, 0);
  }
}

uint64_t ObservableConvertible.afterChange(on:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  void (*v8)(uint64_t *__return_ptr, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t vars8;

  uint64_t v8 = *(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(a5 + 16);
  v8(&v9, a4, a5);
  sub_1C27D1FA8();
  swift_release();

  return ((uint64_t (*)(uint64_t, uint64_t))v8)(a4, a5);
}

uint64_t LegacyObservable.asObservable()@<X0>(void *a1@<X8>)
{
  *a1 = *v1;
  return swift_retain();
}

uint64_t sub_1C27D1FA8()
{
  return swift_release();
}

id sub_1C27D2044(uint64_t a1)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 80);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v36 = *(void *)(v3 + 64);
  uint64_t v4 = MEMORY[0x1F4188790](a1);
  uint64_t v35 = (char *)v33 - v5;
  v45[4] = *(void *)(v1 + *(void *)(v6 + 104));
  uint64_t v42 = v1;
  uint64_t v43 = v4;
  uint64_t v40 = v4;
  sub_1C28CC650();
  uint64_t v38 = v2;
  swift_getFunctionTypeMetadata1();
  sub_1C27C4F84();
  swift_retain();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  sub_1C28CDA30();
  sub_1C27D25DC();
  sub_1C28CCBE0();
  swift_release();
  uint64_t v8 = v46;
  if (!MEMORY[0x1C875EFA0](v46, TupleTypeMetadata2)) {
    return (id)swift_bridgeObjectRelease();
  }
  uint64_t v9 = 0;
  v33[3] = v3 + 16;
  uint64_t v34 = v3;
  v33[2] = v3 + 32;
  v33[1] = v45;
  uint64_t v10 = (void **)(v8 + 48);
  uint64_t v11 = v38;
  uint64_t v39 = TupleTypeMetadata2;
  while (1)
  {
    char v19 = sub_1C28CD9C0();
    sub_1C28CD960();
    if ((v19 & 1) == 0) {
      break;
    }
    id v21 = (void (*)(uint64_t))*(v10 - 2);
    uint64_t v20 = (uint64_t)*(v10 - 1);
    id v22 = *v10;
    BOOL v23 = __OFADD__(v9, 1);
    swift_retain();
    id result = v22;
    if (v23) {
      goto LABEL_20;
    }
    os_log_type_t v25 = result;
    uint64_t v41 = v9 + 1;
    uint64_t v26 = (void *)swift_allocObject();
    v26[2] = v11;
    v26[3] = v21;
    v26[4] = v20;
    if (!v22)
    {
      swift_retain();
      goto LABEL_16;
    }
    id v27 = self;
    id v28 = v25;
    swift_retain();
    id v29 = objc_msgSend(v27, sel_currentQueue);
    if (v29)
    {
      unint64_t v30 = v29;
      sub_1C27D8F64();
      id v37 = v28;
      id v31 = v28;
      char v32 = sub_1C28CDF30();

      if (v32)
      {

        uint64_t v11 = v38;
LABEL_16:
        v21(v40);
        swift_release();

        swift_release();
        goto LABEL_5;
      }
      swift_release();
      uint64_t v12 = v37;
      uint64_t v11 = v38;
    }
    else
    {
      swift_release();

      uint64_t v11 = v38;
      uint64_t v12 = v28;
    }
    uint64_t v13 = v34;
    uint64_t v14 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v34 + 16))(v35, v40, v11);
    unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v16 = (char *)swift_allocObject();
    *((void *)v16 + 2) = v11;
    *((void *)v16 + 3) = sub_1C27BC9DC;
    *((void *)v16 + 4) = v26;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(&v16[v15], v14, v11);
    v45[2] = sub_1C27BC978;
    v45[3] = v16;
    aBlock[0] = MEMORY[0x1E4F143A8];
    aBlock[1] = 1107296256;
    v45[0] = sub_1C27BC934;
    v45[1] = &block_descriptor_7;
    uint64_t v17 = _Block_copy(aBlock);
    swift_retain();
    swift_release();
    objc_msgSend(v12, sel_addOperationWithBlock_, v17);

    swift_release();
    _Block_release(v17);

LABEL_5:
    uint64_t v18 = MEMORY[0x1C875EFA0](v8, v39);
    ++v9;
    v10 += 3;
    if (v41 == v18) {
      return (id)swift_bridgeObjectRelease();
    }
  }
  id result = (id)sub_1C28CE140();
  __break(1u);
LABEL_20:
  __break(1u);
  return result;
}

unint64_t sub_1C27D25DC()
{
  unint64_t result = qword_1EBB75F38[0];
  if (!qword_1EBB75F38[0])
  {
    sub_1C28CC650();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB75F38);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1Tm(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

void sub_1C27D2818(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

unint64_t static AnalyticsTransforming.deviceContextPayload(from:)(uint64_t a1)
{
  if (a1)
  {
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F60);
    uint64_t v3 = (void *)sub_1C28CDF10();
    uint64_t v4 = sub_1C28CD730();
    uint64_t v6 = v5;
    id v7 = sub_1C27D2D00(v3, a1);
    if (!v7) {
      id v7 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, -1);
    }
    uint64_t v8 = (uint64_t)v7;
    uint64_t v9 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    sub_1C27D2B60(v8, v4, v6, isUniquelyReferenced_nonNull_native);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v11 = (void *)sub_1C28CDF10();
    uint64_t v12 = sub_1C28CD730();
    uint64_t v14 = v13;
    id v15 = sub_1C27D2D00(v11, a1);
    if (!v15) {
      id v15 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, -1);
    }
    uint64_t v16 = (uint64_t)v15;
    char v17 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C27D2B60(v16, v12, v14, v17);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v18 = (void *)sub_1C28CDF10();
    uint64_t v19 = sub_1C28CD730();
    uint64_t v21 = v20;
    id v22 = sub_1C27D2D00(v18, a1);
    if (!v22) {
      id v22 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, -1);
    }
    uint64_t v23 = (uint64_t)v22;
    char v24 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C27D2B60(v23, v19, v21, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_log_type_t v25 = (void *)sub_1C28CDF10();
    uint64_t v26 = sub_1C28CD730();
    uint64_t v28 = v27;
    id v29 = sub_1C27D2D00(v25, a1);
    if (!v29) {
      id v29 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, -1);
    }
    uint64_t v30 = (uint64_t)v29;
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1C27D2B60(v30, v26, v28, v31);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  else
  {
    uint64_t v33 = MEMORY[0x1E4FBC860];
    return sub_1C2806B24(v33);
  }
}

void sub_1C27D2B60(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = *v4;
  unint64_t v12 = sub_1C27D3320(a2, a3);
  uint64_t v13 = *(void *)(v10 + 16);
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_16;
  }
  char v16 = v11;
  uint64_t v17 = *(void *)(v10 + 24);
  if (v17 >= v15 && (a4 & 1) != 0) {
    goto LABEL_7;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_1C2876734((unint64_t *)&qword_1EBB749E8, (unint64_t *)&qword_1EBB76F60);
LABEL_7:
    uint64_t v18 = (void *)*v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];

      *(void *)(v19 + 8 * v12) = a1;
      return;
    }
    goto LABEL_11;
  }
  sub_1C27D3D88(v15, a4 & 1, (unint64_t *)&qword_1EBB749E8, (unint64_t *)&qword_1EBB76F60);
  unint64_t v20 = sub_1C27D3320(a2, a3);
  if ((v16 & 1) != (v21 & 1))
  {
LABEL_17:
    sub_1C28CE680();
    __break(1u);
    return;
  }
  unint64_t v12 = v20;
  uint64_t v18 = (void *)*v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  v18[(v12 >> 6) + 8] |= 1 << v12;
  id v22 = (uint64_t *)(v18[6] + 16 * v12);
  *id v22 = a2;
  v22[1] = a3;
  *(void *)(v18[7] + 8 * v12) = a1;
  uint64_t v23 = v18[2];
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  void v18[2] = v25;

  swift_bridgeObjectRetain();
}

void *sub_1C27D2D00(void *a1, uint64_t a2)
{
  return sub_1C27D2D28(a1, a2, (uint64_t (*)(void))sub_1C2872654, (unint64_t *)&qword_1EBB76F60);
}

void *sub_1C27D2D28(void *a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4)
{
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v9 = a3();
      if (v10)
      {
        uint64_t v8 = *(void **)(*(void *)(a2 + 56) + 8 * v9);
        id v11 = v8;
        return v8;
      }
    }
    return 0;
  }
  id v6 = a1;
  uint64_t v7 = sub_1C28CE320();

  if (!v7) {
    return 0;
  }
  sub_1C27D1C9C(0, a4);
  swift_unknownObjectRetain();
  swift_dynamicCast();
  uint64_t v8 = v13;
  swift_unknownObjectRelease();
  return v8;
}

void sub_1C27D2E10(uint64_t *a1, char a2, void *a3)
{
  void (*v3)(void *__return_ptr, id *);
  void (*v4)(long long *__return_ptr, long long *);
  uint64_t (*v5)(long long *);
  uint64_t v6;
  uint64_t v7;
  void *v8;
  long long v9;
  void *v10;
  uint64_t v11;
  void *v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;
  char v18;
  unint64_t v19;
  char v20;
  void *v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  void *v26;
  id v27;
  void *v28;
  uint64_t v29;
  void (*v30)(long long *__return_ptr, long long *);
  void v33[3];
  id v34[2];
  long long v35;
  long long v36;
  long long v37;
  long long v38;
  long long v39;
  long long v40;
  void *v41;
  long long v42;
  uint64_t v43;
  uint64_t v44;

  uint64_t v3 = (void (*)(void *__return_ptr, id *))a1[1];
  uint64_t v4 = (void (*)(long long *__return_ptr, long long *))a1[3];
  uint64_t v5 = (uint64_t (*)(long long *))a1[5];
  uint64_t v44 = *a1;
  uint64_t v30 = (void (*)(long long *__return_ptr, long long *))a1[7];
  sub_1C27D4150((uint64_t)&v44);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1C28CE250();
  sub_1C27D4124((uint64_t)&v44);
LABEL_3:
  sub_1C28CE420();
  sub_1C27D347C((uint64_t)&v40, (uint64_t)&v37);
  if (!*((void *)&v39 + 1))
  {
LABEL_18:
    sub_1C27D4124((uint64_t)&v44);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  while (1)
  {
    *(_OWORD *)uint64_t v34 = v37;
    uint64_t v35 = v38;
    uint64_t v36 = v39;
    v3(v33, v34);
    id v6 = v33[0];
    uint64_t v7 = v33[1];
    uint64_t v8 = (void *)v33[2];
    sub_1C27D3550((uint64_t)v34, (uint64_t (*)(void))sub_1C27D3CA8);
    *(void *)&uint64_t v40 = v6;
    *((void *)&v40 + 1) = v7;
    uint64_t v41 = v8;
    v4(&v37, &v40);
    sub_1C27D32DC(v6, v7, v8);
    uint64_t v9 = v37;
    char v10 = (void *)v38;
    uint64_t v42 = v37;
    uint64_t v43 = v38;
    if ((v5(&v42) & 1) == 0)
    {
      sub_1C27D32DC(v9, *((uint64_t *)&v9 + 1), v10);
      goto LABEL_3;
    }
    uint64_t v40 = v9;
    uint64_t v41 = v10;
    v30(&v37, &v40);
    sub_1C27D32DC(v9, *((uint64_t *)&v9 + 1), v10);
    id v11 = *((void *)&v37 + 1);
    uint64_t v28 = (void *)v38;
    id v29 = v37;
    uint64_t v40 = v37;
    unint64_t v12 = (void *)*a3;
    BOOL v14 = sub_1C27D3320(v37, *((uint64_t *)&v37 + 1));
    uint64_t v15 = v12[2];
    char v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16))
    {
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      sub_1C28CE680();
      __break(1u);
      goto LABEL_22;
    }
    uint64_t v18 = v13;
    if (v12[3] < v17) {
      break;
    }
    if (a2)
    {
      if (v13) {
        goto LABEL_16;
      }
    }
    else
    {
      sub_1C28763F0();
      if (v18) {
        goto LABEL_16;
      }
    }
LABEL_12:
    char v21 = (void *)*a3;
    *(void *)(*a3 + 8 * (v14 >> 6) + 64) |= 1 << v14;
    id v22 = (uint64_t *)(v21[6] + 16 * v14);
    *id v22 = v29;
    v22[1] = v11;
    *(void *)(v21[7] + 8 * v14) = v28;
    uint64_t v23 = v21[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24) {
      goto LABEL_20;
    }
    v21[2] = v25;
    sub_1C28CE420();
    sub_1C27D347C((uint64_t)&v40, (uint64_t)&v37);
    a2 = 1;
    if (!*((void *)&v39 + 1)) {
      goto LABEL_18;
    }
  }
  sub_1C27D4108(v17, a2 & 1);
  uint64_t v19 = sub_1C27D3320(v29, v11);
  if ((v18 & 1) != (v20 & 1)) {
    goto LABEL_21;
  }
  BOOL v14 = v19;
  if ((v18 & 1) == 0) {
    goto LABEL_12;
  }
LABEL_16:
  uint64_t v26 = (void *)swift_allocError();
  swift_willThrow();
  v34[0] = v26;
  uint64_t v27 = v26;
  sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1C27D4124((uint64_t)&v44);

    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    return;
  }
LABEL_22:
  *(void *)&id v37 = 0;
  *((void *)&v37 + 1) = 0xE000000000000000;
  sub_1C28CE120();
  sub_1C28CD7C0();
  sub_1C28CE270();
  sub_1C28CD7C0();
  sub_1C28CE360();
  __break(1u);
}

void sub_1C27D32DC(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
  }
}

unint64_t sub_1C27D3320(uint64_t a1, uint64_t a2)
{
  sub_1C28CE700();
  sub_1C28CD790();
  uint64_t v4 = sub_1C28CE740();

  return sub_1C27D3398(a1, a2, v4);
}

unint64_t sub_1C27D3398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1C28CE640() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1C28CE640() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_1C27D347C(uint64_t a1, uint64_t a2)
{
  sub_1C27D34FC(0, &qword_1EBB769E8, (void (*)(uint64_t))sub_1C27D3CA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C27D34FC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C27D3550(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

BOOL sub_1C27D35B0(uint64_t a1)
{
  return *(void *)(a1 + 8) != 0;
}

void sub_1C27D35C0(uint64_t a1, uint64_t a2, void *a3)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    id v3 = a3;
  }
}

uint64_t *sub_1C27D3604@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = result[1];
  if (!v3)
  {
    uint64_t v4 = 0;
LABEL_6:
    uint64_t v5 = 0;
    goto LABEL_7;
  }
  uint64_t v4 = *result;
  sub_1C27D3780((uint64_t)(result + 2), (uint64_t)v7);
  sub_1C27D3998();
  swift_bridgeObjectRetain();
  unint64_t result = (uint64_t *)swift_dynamicCast();
  if (!result)
  {
    unint64_t result = (uint64_t *)swift_bridgeObjectRelease();
    uint64_t v4 = 0;
    uint64_t v3 = 0;
    goto LABEL_6;
  }
  uint64_t v5 = v6;
LABEL_7:
  *a2 = v4;
  a2[1] = v3;
  a2[2] = v5;
  return result;
}

uint64_t sub_1C27D36AC(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1C27D37DC(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_1C27D3780((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x1E4FBB9B0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_1C27D3780((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  return v7;
}

uint64_t sub_1C27D3780(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_1C27D37DC(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1C28CDFA0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_1C27D39D8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1C28CE1B0();
  if (!v8)
  {
    sub_1C28CE350();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1C28CE410();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

unint64_t sub_1C27D3998()
{
  unint64_t result = qword_1EBB77130;
  if (!qword_1EBB77130)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB77130);
  }
  return result;
}

uint64_t sub_1C27D39D8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_1C27D3A70(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C27E181C(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_1C27E181C(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_1C27D3A70(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_1C27D3BE8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1C28CE130();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_1C28CE350();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1C28CD7D0();
      if (!v2) {
        return MEMORY[0x1E4FBC860];
      }
    }
    sub_1C28CE410();
    __break(1u);
LABEL_14:
    uint64_t result = sub_1C28CE350();
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E4FBC860];
  }
  return result;
}

void *sub_1C27D3BE8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C27D3C50();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_1C27D3C50()
{
  if (!qword_1EBB77298)
  {
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB77298);
    }
  }
}

void sub_1C27D3CA8()
{
  if (!qword_1EBB769E0)
  {
    sub_1C27D962C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB769E0);
    }
  }
}

void sub_1C27D3D18(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  unint64_t v4 = (void *)a1[2];
  *a2 = *a1;
  a2[1] = v2;
  a2[2] = (uint64_t)v4;
  sub_1C27D35C0(v3, v2, v4);
}

id sub_1C27D3D30@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id result = (id)a1[1];
  if (result)
  {
    id v4 = (id)a1[2];
    *a2 = *a1;
    a2[1] = result;
    a2[2] = v4;
    swift_bridgeObjectRetain();
    return v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C27D3D88(uint64_t a1, char a2, unint64_t *a3, unint64_t *a4)
{
  size_t v5 = v4;
  uint64_t v7 = *v4;
  sub_1C27D40A0(0, a3, a4);
  char v40 = a2;
  uint64_t v8 = sub_1C28CE3D0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v39 = v7 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v7 + 64);
  id v37 = v4;
  int64_t v38 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v21 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v38) {
      break;
    }
    BOOL v24 = (void *)(v7 + 64);
    unint64_t v25 = *(void *)(v39 + 8 * v23);
    ++v15;
    if (!v25)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v38) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v39 + 8 * v15);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v38)
        {
LABEL_33:
          swift_release();
          size_t v5 = v37;
          if ((v40 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v39 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v15 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v38) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v39 + 8 * v15);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v26;
      }
    }
LABEL_30:
    unint64_t v12 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v15 << 6);
LABEL_31:
    char v31 = (uint64_t *)(*(void *)(v7 + 48) + 16 * v22);
    uint64_t v33 = *v31;
    uint64_t v32 = v31[1];
    uint64_t v34 = *(void **)(*(void *)(v7 + 56) + 8 * v22);
    if ((v40 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v35 = v34;
    }
    sub_1C28CE700();
    sub_1C28CD790();
    uint64_t result = sub_1C28CE740();
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v18 == v28;
        if (v18 == v28) {
          unint64_t v18 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v13 + 8 * v18);
      }
      while (v30 == -1);
      unint64_t v19 = __clz(__rbit64(~v30)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    unint64_t v20 = (void *)(*(void *)(v9 + 48) + 16 * v19);
    *unint64_t v20 = v33;
    v20[1] = v32;
    *(void *)(*(void *)(v9 + 56) + 8 * v19) = v34;
    ++*(void *)(v9 + 16);
  }
  swift_release();
  size_t v5 = v37;
  BOOL v24 = (void *)(v7 + 64);
  if ((v40 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v36 = 1 << *(unsigned char *)(v7 + 32);
  if (v36 >= 64) {
    bzero(v24, ((unint64_t)(v36 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *BOOL v24 = -1 << v36;
  }
  *(void *)(v7 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *size_t v5 = v9;
  return result;
}

void sub_1C27D40A0(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27D1C9C(255, a3);
    unint64_t v4 = sub_1C28CE400();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C27D4108(uint64_t a1, char a2)
{
  return sub_1C27D3D88(a1, a2, &qword_1EBB77140, (unint64_t *)&qword_1EBB77130);
}

uint64_t sub_1C27D4124(uint64_t a1)
{
  return a1;
}

uint64_t sub_1C27D4150(uint64_t a1)
{
  return a1;
}

void sub_1C27D417C()
{
  if (!qword_1EBB75340)
  {
    sub_1C27CAE78(255, &qword_1EBB75338);
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75340);
    }
  }
}

uint64_t sub_1C27D41E4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return HKObjectTypeColorProvider.init(from:)(a1, a2);
}

uint64_t HKObjectTypeColorProvider.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v17 = a2;
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  uint64_t v4 = v3;
  uint64_t v19 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  unint64_t v20 = (char *)&v17 - v5;
  sub_1C27D5A44(0, &qword_1EBB76848, (uint64_t (*)(void))sub_1C27D455C, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v7 = v6;
  uint64_t v18 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v17 - v8;
  uint64_t v10 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v10 - 8);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27D455C();
  uint64_t v13 = v21;
  sub_1C28CE7F0();
  if (!v13)
  {
    uint64_t v14 = v18;
    uint64_t v15 = v19;
    sub_1C27D44EC(&qword_1EBB75EC8);
    sub_1C28CE520();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v20, v4);
    sub_1C27D5AAC((uint64_t)v12, v17, type metadata accessor for HKObjectTypeColorProvider);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C27D44EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D4F54(255, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C27D455C()
{
  unint64_t result = qword_1EBB764F0;
  if (!qword_1EBB764F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB764F0);
  }
  return result;
}

uint64_t ColorRepresentation.color(for:)(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *a1;
  sub_1C27D4D68(v1, (uint64_t)v5, type metadata accessor for ColorRepresentation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *v5;
      uint64_t v8 = &type metadata for DisplayCategoryColorProvider;
      unint64_t v20 = &type metadata for DisplayCategoryColorProvider;
      unint64_t v9 = sub_1C282C0E4();
      uint64_t v21 = v9;
      v19[0] = v14;
      break;
    case 2u:
      char v10 = *(unsigned char *)v5;
      uint64_t v8 = &type metadata for SemanticColorProvider;
      unint64_t v20 = &type metadata for SemanticColorProvider;
      unint64_t v9 = sub_1C282C090();
      uint64_t v21 = v9;
      LOBYTE(v19[0]) = v10;
      break;
    case 3u:
      long long v17 = *(_OWORD *)v5;
      uint64_t v11 = v5[2];
      uint64_t v12 = v5[3];
      uint64_t v8 = &type metadata for RGBColorProvider;
      unint64_t v20 = &type metadata for RGBColorProvider;
      unint64_t v9 = sub_1C282C02C();
      uint64_t v21 = v9;
      uint64_t v13 = swift_allocObject();
      v19[0] = v13;
      *(_OWORD *)(v13 + 16) = v17;
      *(void *)(v13 + 32) = v11;
      *(void *)(v13 + 40) = v12;
      break;
    default:
      unint64_t v20 = (ValueMetadata *)type metadata accessor for HKObjectTypeColorProvider(0);
      uint64_t v21 = sub_1C27D47D8(&qword_1EBB749A0, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v19);
      sub_1C27D5AAC((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, type metadata accessor for HKObjectTypeColorProvider);
      uint64_t v8 = v20;
      unint64_t v9 = v21;
      break;
  }
  __swift_project_boxed_opaque_existential_1(v19, (uint64_t)v8);
  uint64_t v18 = v6;
  uint64_t v15 = (*(uint64_t (**)(uint64_t *, ValueMetadata *, unint64_t))(v9 + 24))(&v18, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  return v15;
}

uint64_t sub_1C27D47D8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t destroy for HKObjectTypeColorProvider(uint64_t a1)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

void sub_1C27D48B0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  HKObjectTypeColorProvider.uiColor(for:)((HealthExperience::ColorProviderContext)&v1);

  JUMPOUT(0x1C875E9F0);
}

UIColor __swiftcall HKObjectTypeColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t v3 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  unint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result.super.Class isa = (Class)objc_msgSend(self, sel_sharedInstanceForHealthStore_, *(void *)a1.healthStore.super.isa);
  if (!result.super.isa)
  {
    __break(1u);
    goto LABEL_12;
  }
  Class isa = result.super.isa;
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  uint64_t v12 = (void *)sub_1C28CD570();
  id v13 = [(objc_class *)isa displayTypeForObjectType:v12];

  if (!v13)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  id v14 = objc_msgSend(v13, sel_displayCategory);

  id v15 = objc_msgSend(v14, sel_color);
  if (v15) {
    return (UIColor)v15;
  }
  sub_1C28CCDA0();
  sub_1C27D4D68(v1, (uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);
  uint64_t v16 = sub_1C28CCE00();
  os_log_type_t v17 = sub_1C28CDCB0();
  if (os_log_type_enabled(v16, v17))
  {
    uint64_t v18 = swift_slowAlloc();
    BOOL v24 = (void *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    uint64_t v28 = v26;
    *(_DWORD *)uint64_t v18 = 136315394;
    uint64_t v27 = sub_1C27D36AC(0xD000000000000019, 0x80000001C28D3B60, &v28);
    sub_1C28CDF90();
    *(_WORD *)(v18 + 12) = 2112;
    uint64_t v25 = v7;
    uint64_t v19 = sub_1C28CD570();
    uint64_t v27 = v19;
    sub_1C28CDF90();
    unint64_t v20 = v24;
    *BOOL v24 = v19;
    sub_1C282FA3C((uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);
    _os_log_impl(&dword_1C27B7000, v16, v17, "[%s]: Unable to resolve color for %@", (uint8_t *)v18, 0x16u);
    sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75EF0, (unint64_t *)&qword_1EBB77130, 0x1E4FBA8A8, MEMORY[0x1E4FBB718]);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v20, -1, -1);
    uint64_t v21 = v26;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v21, -1, -1);
    MEMORY[0x1C87609B0](v18, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v6);
  }
  else
  {
    sub_1C282FA3C((uint64_t)v5, type metadata accessor for HKObjectTypeColorProvider);

    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  id v22 = objc_msgSend(self, sel_blackColor);

  return (UIColor)v22;
}

uint64_t sub_1C27D4D68(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t destroy for ColorRepresentation(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (!result)
  {
    sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_1C27D4F54(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C27D1C9C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t ColorRepresentation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C27D5A44(0, &qword_1EBB75EF8, (uint64_t (*)(void))sub_1C27DB580, (uint64_t)&type metadata for ColorRepresentation.RgbCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v63 = v4;
  uint64_t v68 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v76 = (char *)&v56 - v5;
  sub_1C27D5A44(0, &qword_1EBB76810, (uint64_t (*)(void))sub_1C27DB47C, (uint64_t)&type metadata for ColorRepresentation.SemanticCodingKeys, v3);
  uint64_t v64 = v6;
  uint64_t v67 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v75 = (char *)&v56 - v7;
  sub_1C27D5A44(0, &qword_1EBB76820, (uint64_t (*)(void))sub_1C27DB2C8, (uint64_t)&type metadata for ColorRepresentation.DisplayCategoryCodingKeys, v3);
  uint64_t v62 = v8;
  uint64_t v66 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v74 = (char *)&v56 - v9;
  sub_1C27D5A44(0, &qword_1EBB76818, (uint64_t (*)(void))sub_1C27D5B8C, (uint64_t)&type metadata for ColorRepresentation.ObjectTypeCodingKeys, v3);
  uint64_t v61 = v10;
  uint64_t v65 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v70 = (char *)&v56 - v11;
  sub_1C27D5A44(0, &qword_1EBB76808, (uint64_t (*)(void))sub_1C27D5BE0, (uint64_t)&type metadata for ColorRepresentation.CodingKeys, v3);
  uint64_t v72 = *(void *)(v12 - 8);
  uint64_t v73 = v12;
  MEMORY[0x1F4188790](v12);
  id v14 = (char *)&v56 - v13;
  uint64_t v71 = type metadata accessor for ColorRepresentation(0);
  uint64_t v15 = MEMORY[0x1F4188790](v71);
  os_log_type_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v15);
  unint64_t v20 = (char *)&v56 - v19;
  uint64_t v21 = MEMORY[0x1F4188790](v18);
  uint64_t v23 = (char *)&v56 - v22;
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v56 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v56 - v27;
  BOOL v29 = a1;
  uint64_t v30 = a1[3];
  uint64_t v77 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  sub_1C27D5BE0();
  uint64_t v31 = (uint64_t)v80;
  sub_1C28CE7F0();
  if (!v31)
  {
    os_log_type_t v57 = v23;
    id v60 = v26;
    uint64_t v58 = v20;
    uint64_t v59 = v17;
    uint64_t v32 = v74;
    uint64_t v33 = v75;
    uint64_t v34 = v76;
    unint64_t v80 = v28;
    uint64_t v35 = v73;
    uint64_t v36 = sub_1C28CE530();
    if (*(void *)(v36 + 16) == 1)
    {
      switch(*(unsigned char *)(v36 + 32))
      {
        case 1:
          LOBYTE(v78) = 1;
          sub_1C27DB2C8();
          sub_1C28CE480();
          sub_1C282F398();
          uint64_t v44 = v62;
          sub_1C28CE520();
          (*(void (**)(char *, uint64_t))(v66 + 8))(v32, v44);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v72 + 8))(v14, v35);
          uint64_t v52 = v57;
          *os_log_type_t v57 = v78;
          goto LABEL_10;
        case 2:
          LOBYTE(v78) = 2;
          sub_1C27DB47C();
          uint64_t v45 = v33;
          sub_1C28CE480();
          sub_1C282F344();
          uint64_t v46 = v64;
          sub_1C28CE520();
          uint64_t v47 = v72;
          (*(void (**)(char *, uint64_t))(v67 + 8))(v45, v46);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v47 + 8))(v14, v35);
          uint64_t v52 = v58;
          unsigned char *v58 = v78;
LABEL_10:
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = (uint64_t)v52;
          break;
        case 3:
          LOBYTE(v78) = 3;
          sub_1C27DB580();
          sub_1C28CE480();
          sub_1C282F2F0();
          uint64_t v49 = v63;
          sub_1C28CE520();
          uint64_t v50 = v72;
          (*(void (**)(char *, uint64_t))(v68 + 8))(v34, v49);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v35);
          long long v53 = v79;
          uint64_t v54 = v59;
          *uint64_t v59 = v78;
          v54[1] = v53;
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = (uint64_t)v54;
          break;
        default:
          LOBYTE(v78) = 0;
          sub_1C27D5B8C();
          sub_1C28CE480();
          type metadata accessor for HKObjectTypeColorProvider(0);
          sub_1C27D47D8(&qword_1EBB76510, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
          uint64_t v37 = (uint64_t)v60;
          uint64_t v38 = v61;
          uint64_t v39 = v70;
          sub_1C28CE520();
          uint64_t v40 = v72;
          (*(void (**)(char *, uint64_t))(v65 + 8))(v39, v38);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v40 + 8))(v14, v35);
          swift_storeEnumTagMultiPayload();
          uint64_t v51 = v37;
          break;
      }
      uint64_t v55 = (uint64_t)v80;
      sub_1C27D5AAC(v51, (uint64_t)v80, type metadata accessor for ColorRepresentation);
      sub_1C27D5AAC(v55, v69, type metadata accessor for ColorRepresentation);
    }
    else
    {
      uint64_t v41 = sub_1C28CE180();
      swift_allocError();
      uint64_t v43 = v42;
      sub_1C27E29F8();
      *uint64_t v43 = v71;
      sub_1C28CE490();
      sub_1C28CE160();
      (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v43, *MEMORY[0x1E4FBBA70], v41);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v72 + 8))(v14, v35);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v77);
}

void sub_1C27D5A44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C27D5AAC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C27D5B14(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for ColorRepresentation(uint64_t a1)
{
  return sub_1C27D5B14(a1, qword_1EBB76248);
}

uint64_t type metadata accessor for HKObjectTypeColorProvider(uint64_t a1)
{
  return sub_1C27D5B14(a1, (uint64_t *)&unk_1EBB76518);
}

unint64_t sub_1C27D5B8C()
{
  unint64_t result = qword_1EBB76218;
  if (!qword_1EBB76218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76218);
  }
  return result;
}

unint64_t sub_1C27D5BE0()
{
  unint64_t result = qword_1EBB761E8;
  if (!qword_1EBB761E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761E8);
  }
  return result;
}

void sub_1C27D5C34(char a1, void *a2, void (*a3)(void), uint64_t a4, char a5)
{
  if ((a1 & 1) == 0
    || (sub_1C28CCB10(), v8 == 1)
    && (objc_msgSend(a2, sel_isFinished) & 1) == 0
    && (objc_msgSend(a2, sel_isCancelled) & 1) == 0)
  {
    a3();
    if (a5) {
      sub_1C27BF20C();
    }
  }
}

id sub_1C27D5CE0()
{
  return sub_1C27D5CE8(*(void **)(v0 + 16));
}

id sub_1C27D5CE8(void *a1)
{
  id result = objc_msgSend(a1, sel_isFinished);
  if ((result & 1) == 0)
  {
    id result = objc_msgSend(a1, sel_isCancelled);
    if ((result & 1) == 0)
    {
      sub_1C28CCB20();
      sub_1C27D5F78();
      return objc_msgSend(a1, sel_main);
    }
  }
  return result;
}

uint64_t sub_1C27D5DD0()
{
  if (!objc_msgSend(v0, sel_isCancelled)) {
    goto LABEL_5;
  }
  sub_1C28CCB10();
  if (!v4)
  {
    char v2 = 1;
LABEL_10:
    swift_bridgeObjectRelease();
    return v2 & 1;
  }
  char v1 = sub_1C28CE640();
  swift_bridgeObjectRelease();
  if ((v1 & 1) == 0)
  {
LABEL_5:
    sub_1C28CCB10();
    if (v5 && v5 != 1) {
      char v2 = 1;
    }
    else {
      char v2 = sub_1C28CE640();
    }
    goto LABEL_10;
  }
  char v2 = 1;
  return v2 & 1;
}

void sub_1C27D5F78()
{
  sub_1C28CCB10();
  sub_1C27D633C();
  sub_1C28CDFC0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  char v1 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_willChangeValueForKey_, v1);

  sub_1C28CDFC0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  char v2 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_willChangeValueForKey_, v2);

  MEMORY[0x1F4188790](v3);
  sub_1C28CCB20();
  sub_1C28CDFC0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  char v4 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_didChangeValueForKey_, v4);

  sub_1C28CDFC0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  char v5 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v0, sel_didChangeValueForKey_, v5);
}

unint64_t sub_1C27D633C()
{
  unint64_t result = qword_1EBB770E8;
  if (!qword_1EBB770E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB770E8);
  }
  return result;
}

uint64_t Date.twentySixWeeksAgo(for:)()
{
  uint64_t v0 = sub_1C28CC570();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27BC0], v0);
  sub_1C28CC520();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_1C27D649C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a2;
  uint64_t v40 = a3;
  sub_1C27D6DA8();
  uint64_t v31 = v4;
  uint64_t v33 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1C27D6DA8;
  uint64_t v35 = sub_1C27D6E3C;
  sub_1C27D6BE0(0, (unint64_t *)&unk_1EBB75458, (void (*)(uint64_t))sub_1C27D6DA8, (void (*)(uint64_t))sub_1C27D6D50, (void (*)(void))sub_1C27D6E3C);
  uint64_t v30 = v7;
  uint64_t v32 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v29 - v8;
  sub_1C27D6F18();
  uint64_t v11 = v10;
  uint64_t v34 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  id v14 = (char *)&v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v29 - v15;
  sub_1C27D6BE0(0, (unint64_t *)&unk_1EBB75448, (void (*)(uint64_t))sub_1C27D6DA8, MEMORY[0x1E4F67270], (void (*)(void))sub_1C27D6E3C);
  uint64_t v36 = v17;
  uint64_t v38 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v19 = (char *)&v29 - v18;
  id v20 = objc_msgSend(self, sel_healthAppDefaultsDomainWithHealthStore_, a1);
  *(void *)(swift_allocObject() + 16) = v20;
  sub_1C27D6E70();
  sub_1C27D6C70(&qword_1EBB75640, (void (*)(uint64_t))sub_1C27D6E70);
  id v29 = v20;
  sub_1C28CD260();
  sub_1C27D6D50();
  sub_1C27D6E3C();
  uint64_t v21 = v31;
  sub_1C28CD330();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v6, v21);
  sub_1C27D6CB8(0, (unint64_t *)&qword_1EBB769F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
  uint64_t v22 = v30;
  sub_1C28CCF00();
  (*(void (**)(char *, uint64_t))(v32 + 8))(v9, v22);
  uint64_t v23 = swift_allocObject();
  uint64_t v24 = v40;
  *(void *)(v23 + 16) = v39;
  *(void *)(v23 + 24) = v24;
  sub_1C28CCF00();
  swift_release();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v34 + 8);
  v25(v14, v11);
  sub_1C28CC920();
  sub_1C28CCF00();
  v25(v16, v11);
  sub_1C27D6FB8(&qword_1EBB75440, (unint64_t *)&unk_1EBB75448, (void (*)(uint64_t))v37, (void (*)(void))v35);
  uint64_t v26 = v36;
  uint64_t v27 = sub_1C28CD300();

  (*(void (**)(char *, uint64_t))(v38 + 8))(v19, v26);
  return v27;
}

uint64_t Publisher.share(replay:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)swift_allocObject();
  v6[2] = a2;
  v6[3] = a3;
  v6[4] = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  type metadata accessor for ReplaySubject();
  swift_getWitnessTable();
  sub_1C28CD3F0();
  swift_release();
  sub_1C28CCFD0();
  swift_getWitnessTable();
  uint64_t v7 = sub_1C28CD190();
  swift_release();
  return v7;
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for ReplaySubject()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C27D6BE0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    a3(255);
    a4(255);
    a5();
    unint64_t v8 = sub_1C28CCF10();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C27D6C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C27D6CB8(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C27D6D04(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_1C27D6D50()
{
  if (!qword_1EBB75670)
  {
    sub_1C27F4844();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75670);
    }
  }
}

void sub_1C27D6DA8()
{
  if (!qword_1EBB75660)
  {
    sub_1C27D6E70();
    sub_1C27D6C70(&qword_1EBB75640, (void (*)(uint64_t))sub_1C27D6E70);
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75660);
    }
  }
}

uint64_t sub_1C27D6E3C()
{
  return sub_1C27D6C70((unint64_t *)&unk_1EBB75650, (void (*)(uint64_t))sub_1C27D6DA8);
}

void sub_1C27D6E70()
{
  if (!qword_1EBB75648)
  {
    sub_1C27D6CB8(255, (unint64_t *)&qword_1EBB77160, MEMORY[0x1E4FBC840] + 8, MEMORY[0x1E4FBB718]);
    sub_1C27CAE78(255, (unint64_t *)&qword_1EBB77150);
    unint64_t v0 = sub_1C28CD240();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75648);
    }
  }
}

void sub_1C27D6F18()
{
  if (!qword_1EBB75468)
  {
    sub_1C27D6DA8();
    sub_1C27D6CB8(255, (unint64_t *)&qword_1EBB769F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    sub_1C27D6E3C();
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75468);
    }
  }
}

uint64_t sub_1C27D6FB8(unint64_t *a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D6BE0(255, a2, a3, MEMORY[0x1E4F67270], a4);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of SectionedDataSourceItem.reuseIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

_DWORD *__swift_memcpy4_1(_DWORD *result, _DWORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t sub_1C27D7048@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27CE8A4((uint64_t)v1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v1) + 0x60), a1);
}

ValueMetadata *type metadata accessor for CloudSyncRestoreState()
{
  return &type metadata for CloudSyncRestoreState;
}

unsigned char *_s16HealthExperience17FeatureStatusKindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

unsigned char *sub_1C27D7158(unsigned char *result)
{
  char v2 = *(unsigned char *)(v1 + 16);
  char v3 = result[1];
  char v4 = result[2];
  *uint64_t result = *result;
  result[1] = v3;
  result[2] = v4;
  result[3] = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for CodableImage.CodingKeys(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

uint64_t _s30ColorRepresentationCodingErrorOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1C27D7264(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  unsigned int v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);

  return v6(v7);
}

uint64_t sub_1C27D7308(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t getEnumTagSinglePayload for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

unsigned char *_s16HealthExperience28DisplayCategoryColorProviderV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

void sub_1C27D749C()
{
  sub_1C27D5C34(*(unsigned char *)(v0 + 16), *(void **)(v0 + 24), *(void (**)(void))(v0 + 32), *(void *)(v0 + 40), *(unsigned char *)(v0 + 48));
}

uint64_t sub_1C27D74B0(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t sub_1C27D74B8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  return sub_1C27D74D0(a1, a2, a3);
}

uint64_t sub_1C27D74D0(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v6 = 0;
  uint64_t v7 = a3 + 32;
  while (1)
  {
    char v10 = *(unsigned char *)(v7 + v6);
    char v8 = a1(&v10);
    if (v3 || (v8 & 1) != 0) {
      break;
    }
    if (v4 == ++v6) {
      return 0;
    }
  }
  return v6;
}

BOOL sub_1C27D7560(unsigned __int8 *a1)
{
  return ((*a1 ^ **(unsigned __int8 **)(v1 + 16)) & 1) == 0;
}

BOOL sub_1C27D757C(unsigned __int8 *a1)
{
  return *a1 == **(unsigned __int8 **)(v1 + 16);
}

uint64_t type metadata accessor for SharingEntryProfileInformation()
{
  uint64_t result = qword_1EBB744F0;
  if (!qword_1EBB744F0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C27D75E0()
{
  return sub_1C27D75E8(*v0);
}

unint64_t sub_1C27D75E8(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6564496573756572;
      break;
    case 2:
      unint64_t result = 1869768040;
      break;
    case 3:
      unint64_t result = 0x656C746974;
      break;
    case 4:
      unint64_t result = 2036625250;
      break;
    case 5:
      unint64_t result = 0x6C7469546B6E696CLL;
      break;
    case 6:
      unint64_t result = 0x69546E6F69746361;
      break;
    default:
      return result;
  }
  return result;
}

unsigned char *sub_1C27D76BC(unsigned char *result)
{
  char v1 = result[2];
  *unint64_t result = *result;
  result[1] = 1;
  result[2] = v1;
  return result;
}

uint64_t dispatch thunk of UserDefaultsObserver.currentValue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t getEnumTagSinglePayload for MedicalIDDataResult(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

ValueMetadata *type metadata accessor for FeatureStatusKind()
{
  return &type metadata for FeatureStatusKind;
}

uint64_t sub_1C27D7780()
{
  return 12383;
}

uint64_t sub_1C27D7798()
{
  return 0x79547463656A626FLL;
}

uint64_t sub_1C27D77B4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

unsigned char *_s16HealthExperience21SemanticColorProviderOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t dispatch thunk of AsynchronousOperation.state.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

ValueMetadata *type metadata accessor for AsynchronousOperation.ExecutionState()
{
  return &type metadata for AsynchronousOperation.ExecutionState;
}

ValueMetadata *type metadata accessor for ColorProviderContext()
{
  return &type metadata for ColorProviderContext;
}

HealthExperience::ColorProviderContext __swiftcall ColorProviderContext.init(healthStore:)(HealthExperience::ColorProviderContext healthStore)
{
  v1->healthStore.super.Class isa = healthStore.healthStore.super.isa;
  return healthStore;
}

void destroy for MedicalIDDataResult(void **a1)
{
  char v1 = *a1;
  if ((unint64_t)v1 >= 0xFFFFFFFF) {
}
  }

uint64_t storeEnumTagSinglePayload for MedicalIDDataResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 2;
    }
  }
  return result;
}

uint64_t sub_1C27D7974()
{
  if (*v0) {
    return 0x72756769666E6F63;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C27D79B4()
{
  uint64_t result = 0x79547463656A626FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4379616C70736964;
      break;
    case 2:
      uint64_t result = 0x6369746E616D6573;
      break;
    case 3:
      uint64_t result = 6449010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t (*static HKCloudSyncObserver.defaultFactoryBlock.getter())()
{
  return sub_1C27BB5F4;
}

id static NSNotificationName.sharedProfileNotificationSettingUpdated.getter()
{
  return sub_1C27D7A7C(&qword_1EBB742A0, (void **)&qword_1EBB74290);
}

id sub_1C27D7A7C(void *a1, void **a2)
{
  if (*a1 != -1) {
    swift_once();
  }
  int v3 = *a2;

  return v3;
}

uint64_t sub_1C27D7AD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C27C2A68(a1, *(unsigned char *)(v2 + 16), a2);
}

uint64_t sub_1C27D7ADC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.BufferUpstreamPublisher.receive<A>(subscriber:)(a1, a4, a2);
}

uint64_t sub_1C27D7AF0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_bridgeObjectRelease();
}

void destroy for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1)
{
}

uint64_t storeEnumTagSinglePayload for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

void sub_1C27D7BB8(id a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
}
  }

uint64_t storeEnumTagSinglePayload for SharingEntryProfileInformation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C280036C);
}

uint64_t getEnumTagSinglePayload for SharingEntryProfileInformation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28001BC);
}

uint64_t sub_1C27D7C04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C27C6360(v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)), *(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C27D7C44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27BBC98(a1, a2);
}

ValueMetadata *type metadata accessor for FamilyCirclePhotoFetcher()
{
  return &type metadata for FamilyCirclePhotoFetcher;
}

uint64_t sub_1C27D7C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

void sub_1C27D7CAC(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001C28DACE0;
  switch(*v1)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v2 = 0x64656C696166;
      goto LABEL_3;
    case 2:
      *a1 = 0xD000000000000010;
      a1[1] = 0x80000001C28DAD00;
      break;
    case 3:
      *a1 = 0x6574656C706D6F63;
      a1[1] = 0xE900000000000064;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = v3;
      break;
  }
}

unsigned char *sub_1C27D7D44(unsigned char *result)
{
  char v1 = result[1];
  *uint64_t result = *result;
  result[1] = v1;
  result[2] = 1;
  return result;
}

uint64_t static AnalyticsTransforming.closestNumber(to:in:)(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    goto LABEL_29;
  }
  uint64_t v3 = a2 + 32;
  uint64_t v4 = *(void *)(a2 + 32);
  if (v4 <= a1)
  {
    if (v2 == 1)
    {
LABEL_19:
      uint64_t v11 = v3 + 8 * v2 - 8;
      return *(void *)v11;
    }
    uint64_t v12 = 5;
    while (1)
    {
      uint64_t v6 = v12 - 4;
      uint64_t v4 = *(void *)(a2 + 8 * v12);
      if (v4 > a1) {
        break;
      }
      BOOL v7 = __OFADD__(v6, 1);
      uint64_t v13 = v12 - 3;
      if (v7) {
        goto LABEL_23;
      }
      ++v12;
      if (v13 == v2) {
        goto LABEL_19;
      }
    }
    unint64_t v5 = v6 - (v6 > 0);
    if (v6 < v2) {
      goto LABEL_4;
    }
    __break(1u);
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  unint64_t v5 = 0;
  uint64_t v6 = 0;
LABEL_4:
  BOOL v7 = __OFSUB__(a1, v4);
  uint64_t v8 = a1 - v4;
  if (v7)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  if (v8 < 0)
  {
    BOOL v7 = __OFSUB__(0, v8);
    uint64_t v8 = -v8;
    if (v7) {
      goto LABEL_27;
    }
  }
  if (v5 < v2)
  {
    uint64_t v9 = (void *)(v3 + 8 * v5);
    uint64_t v10 = a1 - *v9;
    if (!__OFSUB__(a1, *v9))
    {
      if ((v10 & 0x8000000000000000) == 0 || (BOOL v7 = __OFSUB__(0, v10), v10 = *v9 - a1, !v7))
      {
        uint64_t v11 = v3 + 8 * v6;
        if (v8 >= v10) {
          uint64_t v11 = (uint64_t)v9;
        }
        return *(void *)v11;
      }
      goto LABEL_28;
    }
    goto LABEL_26;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  uint64_t result = sub_1C28CE360();
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for MedicalIDDataResult()
{
  return &type metadata for MedicalIDDataResult;
}

BOOL static MedicalIDDataResult.== infix(_:_:)(void *a1, void *a2)
{
  if (!a1) {
    return !a2;
  }
  if (a1 == (void *)1) {
    return a2 == (void *)1;
  }
  if (a1 == (void *)2) {
    return a2 == (void *)2;
  }
  if ((unint64_t)a2 < 3) {
    return 0;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77130);
  sub_1C28056BC(a1);
  sub_1C28056BC(a2);
  char v5 = sub_1C28CDF30();
  sub_1C28056CC(a2);
  sub_1C28056CC(a1);
  return v5 & 1;
}

unsigned char *_s16HealthExperience19ImageRepresentationO16BundleCodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NotificationContactPhoto.ContactPhotoError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_1C27D80E0(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

unsigned char *storeEnumTagSinglePayload for ImageRepresentation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ImageRepresentation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t sub_1C27D8244()
{
  uint64_t v1 = 0x6C6F626D7973;
  if (*v0 != 1) {
    uint64_t v1 = 0x61746144676E70;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C646E7562;
  }
}

uint64_t sub_1C27D829C@<X0>(void *a1@<X8>)
{
  return sub_1C27C4B38(*(void **)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C27D82A4()
{
  return sub_1C27C3A54(*(void *)(v0 + 16), *(void (**)(char *))(v0 + 24), *(void *)(v0 + 32), *(void **)(v0 + 40));
}

uint64_t type metadata accessor for MedicalIDCache()
{
  uint64_t result = qword_1EBB770B0;
  if (!qword_1EBB770B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

id sub_1C27D82FC(void *a1)
{
  return sub_1C27C4390(a1, *(void *)(v1 + 16), *(unsigned char **)(v1 + 24), *(void *)(v1 + 32));
}

void *HKKeyValueDomainBoolValue.init(keyValueDomain:key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[2] = a1;
  void v3[3] = a2;
  v3[4] = a3;
  return v3;
}

uint64_t Date.oneMonthAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, -1, 0, 0, 0, 0, a1);
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

uint64_t block_destroy_helper_12()
{
  return swift_release();
}

uint64_t block_destroy_helper_13()
{
  return swift_release();
}

uint64_t block_destroy_helper_14()
{
  return swift_release();
}

uint64_t block_destroy_helper_15()
{
  return swift_release();
}

uint64_t block_destroy_helper_16()
{
  return swift_release();
}

uint64_t block_destroy_helper_17()
{
  return swift_release();
}

uint64_t block_destroy_helper_18()
{
  return swift_release();
}

uint64_t block_destroy_helper_19()
{
  return swift_release();
}

uint64_t block_destroy_helper_20()
{
  return swift_release();
}

uint64_t block_destroy_helper_21()
{
  return swift_release();
}

uint64_t block_destroy_helper_22()
{
  return swift_release();
}

uint64_t HAFeatureFlagPreloadSummaryCells()
{
  return MEMORY[0x1F40C9FB0]("HealthApp", "preload_summary_cells");
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_12(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_13(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_14(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_16(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_17(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_18(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_19(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_20(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_21(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_22(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t HAFeatureFlagViewLoggingEnabled()
{
  return MEMORY[0x1F40C9FB0]("HealthApp", "view_logging");
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t HAFeatureFlagShowTrendsInSummary()
{
  return MEMORY[0x1F40C9FB0]("HealthApp", "show_trends_in_summary");
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t objectdestroy_5Tm()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_0()
{
  sub_1C27BBE08();
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80);
  swift_release();
  uint64_t v3 = sub_1C28CC450();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_1()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t objectdestroy_5Tm_2()
{
  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t health_dispatch_get_current_workloop()
{
  return MEMORY[0x1F40CBD48]();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)__n128 result = v2;
  return result;
}

uint64_t HAFeatureFlagStewieEnabled()
{
  return MEMORY[0x1F40C9FB0]("CoreTelephony", "Bifrost");
}

void sub_1C27D87FC()
{
  if (!qword_1EBB76860)
  {
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76860);
    }
  }
}

void sub_1C27D8858()
{
  if (!qword_1EBB74840)
  {
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74840);
    }
  }
}

uint64_t sub_1C27D88B0(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1C28CC4B0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v11 = a4[2];
  BOOL v12 = __OFADD__(v11, 1);
  uint64_t v13 = v11 + 1;
  if (v12) {
    __break(1u);
  }
  else {
    a4[2] = v13;
  }
  return result;
}

uint64_t sub_1C27D8968(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C27BC7A8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

char *sub_1C27D8988(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, (unint64_t *)&qword_1EBB74840);
}

char *sub_1C27D89C0(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, (unint64_t *)&unk_1EBB742D0);
}

char *sub_1C27D89F8(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C27C2838(a1, a2, a3, a4, (unint64_t *)&qword_1EBB74840);
}

char *sub_1C27D8A0C(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C27C2838(a1, a2, a3, a4, (unint64_t *)&unk_1EBB742D0);
}

uint64_t sub_1C27D8A20(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v7 = type metadata accessor for TransactionRecord();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v11 = *(void *)(*v3 + 16);
  unint64_t v12 = *(void *)(*v3 + 24);
  uint64_t v26 = v3;
  if (v12 <= v11 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C2827750();
    }
    else
    {
      if (v12 > v11)
      {
        uint64_t v13 = v8;
        sub_1C28287A4();
        goto LABEL_19;
      }
      sub_1C2828E00();
    }
    uint64_t v14 = *v3;
    sub_1C28CE700();
    sub_1C28CC4B0();
    sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    sub_1C28CD680();
    uint64_t v15 = (void *)(a1 + *(int *)(v7 + 20));
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_1C28CE740();
    uint64_t v17 = -1 << *(unsigned char *)(v14 + 32);
    a2 = v16 & ~v17;
    if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v18 = ~v17;
      uint64_t v13 = v8;
      uint64_t v8 = *(void *)(v8 + 72);
      while (1)
      {
        sub_1C27C8D1C(*(void *)(v14 + 48) + v8 * a2, (uint64_t)v10);
        if (sub_1C28CC480())
        {
          uint64_t v19 = &v10[*(int *)(v7 + 20)];
          BOOL v20 = *(void *)v19 == *v15 && *((void *)v19 + 1) == v15[1];
          if (v20 || (sub_1C28CE640() & 1) != 0) {
            break;
          }
        }
        sub_1C27C8C44((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
        a2 = (a2 + 1) & v18;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          goto LABEL_19;
        }
      }
      sub_1C27C8C44((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      sub_1C28CE670();
      __break(1u);
    }
  }
  uint64_t v13 = v8;
LABEL_19:
  uint64_t v21 = *v26;
  *(void *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1C27C7978(a1, *(void *)(v21 + 48) + *(void *)(v13 + 72) * a2);
  uint64_t v23 = *(void *)(v21 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v21 + 16) = v25;
  }
  return result;
}

int64_t sub_1C27D8CF0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (uint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

uint64_t sub_1C27D8DD4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C27D8DDC(*(uint64_t (**)(id))(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C27D8DDC@<X0>(uint64_t (*a1)(id)@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  if (a1)
  {
    unint64_t v6 = swift_bridgeObjectRetain();
    uint64_t result = sub_1C27BAAE8(v6, a1, a2);
  }
  else
  {
    uint64_t result = swift_bridgeObjectRetain();
  }
  *a3 = result;
  return result;
}

void sub_1C27D8E3C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C27D1C9C(255, &qword_1EBB756D0);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

id static NSNotificationName.healthAppNotificationSettingsDidChange.getter()
{
  return sub_1C27D7A7C(&qword_1EBB756C8, (void **)&qword_1EBB756C0);
}

uint64_t sub_1C27D8ED0()
{
  uint64_t result = sub_1C28CD6F0();
  qword_1EBB77110 = result;
  return result;
}

id static NSNotificationName.HAMedicalIDCacheHasUpdate.getter()
{
  if (qword_1EBB77280 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB77110;

  return v0;
}

unint64_t sub_1C27D8F64()
{
  unint64_t result = qword_1EBB770F0;
  if (!qword_1EBB770F0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB770F0);
  }
  return result;
}

unint64_t sub_1C27D8FA4()
{
  unint64_t result = qword_1EBB748F0;
  if (!qword_1EBB748F0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB748F0);
  }
  return result;
}

unint64_t sub_1C27D8FFC()
{
  unint64_t result = qword_1EBB74C90;
  if (!qword_1EBB74C90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB74C90);
  }
  return result;
}

id HKProfileStore.profileIdentifiersPublisher.getter@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return v1;
}

ValueMetadata *type metadata accessor for HKProfileStore.ProfileIdentifiersPublisher()
{
  return &type metadata for HKProfileStore.ProfileIdentifiersPublisher;
}

id static CNContactStore.shared.getter()
{
  if (qword_1EBB75DA0 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB75D90;

  return v0;
}

uint64_t sub_1C27D90B4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1C27D9154(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v8 = sub_1C27D1C9C(255, a3);
    unint64_t v9 = a5(a1, v8);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C27D91BC()
{
  if (!qword_1EBB769F8)
  {
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB769F8);
    }
  }
}

uint64_t sub_1C27D9214(uint64_t a1)
{
  return sub_1C27BCCC8(a1, (uint64_t (*)(uint64_t))sub_1C27D8988);
}

uint64_t sub_1C27D922C(uint64_t a1)
{
  return sub_1C27D9244(a1, (uint64_t (*)(uint64_t))sub_1C27D89C0);
}

uint64_t sub_1C27D9244(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 16);
  if (v3 < 2) {
    return v2;
  }
  unint64_t v5 = 0;
  unint64_t v6 = v3 >> 1;
  for (unint64_t i = v3 + 31; ; --i)
  {
    if (v5 == i - 32) {
      goto LABEL_5;
    }
    unint64_t v8 = *(void *)(v2 + 16);
    if (v5 >= v8) {
      break;
    }
    if (i - 32 >= v8) {
      goto LABEL_12;
    }
    char v9 = *(unsigned char *)(v2 + v5 + 32);
    char v10 = *(unsigned char *)(v2 + i);
    unint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      unint64_t result = a2(v2);
      uint64_t v2 = result;
    }
    *(unsigned char *)(v2 + v5 + 32) = v10;
    *(unsigned char *)(v2 + i) = v9;
LABEL_5:
    if (v6 == ++v5) {
      return v2;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

uint64_t sub_1C27D9310(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = a2;
  unint64_t v7 = (void *)result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C28CE050();
    sub_1C28CD0F0();
    sub_1C27E4FD8((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
    unint64_t result = sub_1C28CDB30();
    uint64_t v4 = v27;
    uint64_t v8 = v28;
    uint64_t v9 = v29;
    int64_t v10 = v30;
    unint64_t v11 = v31;
    BOOL v24 = v7;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v12 = 0;
LABEL_46:
    *BOOL v24 = v4;
    v24[1] = v8;
    v24[2] = v9;
    v24[3] = v10;
    v24[4] = v11;
    return v12;
  }
  int64_t v10 = 0;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v8 = a4 + 56;
  uint64_t v9 = ~v20;
  uint64_t v21 = -v20;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  else {
    uint64_t v22 = -1;
  }
  unint64_t v11 = v22 & *(void *)(a4 + 56);
  BOOL v24 = (void *)result;
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v12 = 0;
    goto LABEL_46;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v12 = 0;
  int64_t v25 = (unint64_t)(v9 + 64) >> 6;
  uint64_t v23 = v9;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1C28CE080()) {
        goto LABEL_45;
      }
      sub_1C28CD0F0();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      uint64_t v15 = v26;
      unint64_t result = swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_45;
      }
      goto LABEL_8;
    }
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v10 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      break;
    }
    if (v16 >= v25)
    {
      unint64_t v11 = 0;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v16);
    if (v17) {
      goto LABEL_23;
    }
    int64_t v18 = v10 + 2;
    if (v10 + 2 >= v25)
    {
      unint64_t v11 = 0;
      ++v10;
      goto LABEL_45;
    }
    unint64_t v17 = *(void *)(v8 + 8 * v18);
    if (!v17)
    {
      if (v10 + 3 >= v25) {
        goto LABEL_42;
      }
      unint64_t v17 = *(void *)(v8 + 8 * (v10 + 3));
      if (v17)
      {
        int64_t v16 = v10 + 3;
        goto LABEL_23;
      }
      int64_t v18 = v10 + 4;
      if (v10 + 4 >= v25)
      {
        unint64_t v11 = 0;
        v10 += 3;
        goto LABEL_45;
      }
      unint64_t v17 = *(void *)(v8 + 8 * v18);
      if (!v17)
      {
        int64_t v16 = v10 + 5;
        if (v10 + 5 >= v25)
        {
LABEL_42:
          unint64_t v11 = 0;
          int64_t v10 = v18;
          goto LABEL_45;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        if (!v17)
        {
          int64_t v19 = v10 + 6;
          while (v25 != v19)
          {
            unint64_t v17 = *(void *)(v8 + 8 * v19++);
            if (v17)
            {
              int64_t v16 = v19 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v11 = 0;
          int64_t v10 = v25 - 1;
          goto LABEL_45;
        }
        goto LABEL_23;
      }
    }
    int64_t v16 = v18;
LABEL_23:
    unint64_t v11 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v10 = v16;
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    unint64_t result = swift_retain();
    if (!v15) {
      goto LABEL_45;
    }
LABEL_8:
    ++v12;
    *v6++ = v15;
    if (v12 == a3)
    {
      uint64_t v12 = a3;
LABEL_45:
      uint64_t v9 = v23;
      goto LABEL_46;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void sub_1C27D962C()
{
  if (!qword_1EBB769F0)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB769F0);
    }
  }
}

uint64_t sub_1C27D9684()
{
  return swift_release();
}

uint64_t sub_1C27D968C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t Publisher.aggregate(aggregationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  unint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v9 + 16))(v11, v4);
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(a4, v11, a3);
  uint64_t v12 = (void *)(a4 + *(int *)(type metadata accessor for Publishers.BufferWithAggregator() + 36));
  *uint64_t v12 = a1;
  v12[1] = a2;
  return swift_retain();
}

uint64_t sub_1C27D97AC()
{
  return sub_1C27BC388(*(void *)(v0 + 32));
}

uint64_t Publisher.ignoreFailureResult<A, B>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790]();
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

void sub_1C27D9890()
{
  if (!qword_1EBB749D8)
  {
    sub_1C27D9B34();
    sub_1C27BC680(&qword_1EBB749B0, (void (*)(uint64_t))sub_1C27D9B34);
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB749D8);
    }
  }
}

void sub_1C27D9924(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C27D9970()
{
  unint64_t result = qword_1EBB749C0;
  if (!qword_1EBB749C0)
  {
    sub_1C27D9924(255, &qword_1EBB749C8, MEMORY[0x1E4FBB390], MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB749C0);
  }
  return result;
}

void sub_1C27D99EC()
{
  if (!qword_1EBB769D8)
  {
    sub_1C28220EC();
    unint64_t v0 = sub_1C28CD170();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB769D8);
    }
  }
}

void sub_1C27D9A54(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    a5(255, a3, a4);
    sub_1C27C7060();
    unint64_t v6 = sub_1C28CD0A0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C27D9AD0(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D9A54(255, a2, a3, a4, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C27D9B34()
{
  if (!qword_1EBB749B8)
  {
    unint64_t v0 = sub_1C28CD0A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB749B8);
    }
  }
}

void sub_1C27D9B9C()
{
  if (!qword_1EBB754C0)
  {
    uint64_t v0 = MEMORY[0x1E4FBB320];
    sub_1C27D9A54(255, &qword_1EBB75580, (uint64_t)&unk_1EBB75690, MEMORY[0x1E4FBB320], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
    sub_1C27D9AD0(&qword_1EBB75578, &qword_1EBB75580, (uint64_t)&unk_1EBB75690, v0);
    unint64_t v1 = sub_1C28CCF30();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB754C0);
    }
  }
}

void sub_1C27D9C68()
{
  if (!qword_1EBB75488)
  {
    sub_1C27D9B9C();
    sub_1C27D8E3C(255, &qword_1EBB75690, MEMORY[0x1E4FBB320]);
    sub_1C27BF0D0(&qword_1EBB748E0, (void (*)(uint64_t))sub_1C27D9B9C);
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75488);
    }
  }
}

uint64_t sub_1C27D9D30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.BindDaemonTransaction.receive<A>(subscriber:)(a1, a4, a2);
}

uint64_t sub_1C27D9D44()
{
  return sub_1C27C3DD4();
}

uint64_t sub_1C27D9D68()
{
  sub_1C27BA028();

  return swift_deallocClassInstance();
}

uint64_t sub_1C27D9DBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return Publishers.BufferWithAggregator.receive<A>(subscriber:)(a1, a4, a2);
}

uint64_t sub_1C27D9DD0(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();

  return swift_release();
}

uint64_t sub_1C27D9E40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *uint64_t v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t type metadata accessor for Publishers.BufferWithAggregator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C27D9ED8(uint64_t a1)
{
  return sub_1C27C1D58(a1);
}

uint64_t sub_1C27D9EFC(void *a1)
{
  return sub_1C27BE450(a1);
}

uint64_t _s20BufferWithAggregatorV5InnerCMa()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C27D9F38(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return Publishers.IgnoreFailureResult.receive<A>(subscriber:)(a1, a4, a2, a3);
}

void sub_1C27D9F4C()
{
  if (!qword_1EBB769C0)
  {
    sub_1C27D99EC();
    sub_1C27C27C4((unint64_t *)&unk_1EBB769C8, (void (*)(uint64_t))sub_1C27D99EC);
    unint64_t v0 = sub_1C28CCEA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB769C0);
    }
  }
}

ValueMetadata *type metadata accessor for DefaultMedicalIDAvailabilityProvider()
{
  return &type metadata for DefaultMedicalIDAvailabilityProvider;
}

uint64_t CloudSyncEventPublisherObserver.publisher.getter()
{
  return swift_retain();
}

id sub_1C27DA00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void **)a1;
  *(void *)a2 = *(void *)a1;
  unsigned __int8 v3 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a2 + 8) = v3;
  return sub_1C27DA024(v2, v3);
}

id sub_1C27DA024(id result, unsigned __int8 a2)
{
  if (a2 != 0xFF) {
    return sub_1C27BC4F4(result, a2);
  }
  return result;
}

id sub_1C27DA038(uint64_t a1, uint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x1E4F2AD38]);

  return objc_msgSend(v4, sel_initWithHealthStore_delegate_, a1, a2);
}

uint64_t dispatch thunk of MedicalIDAvailabilityProvider.isSupported.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t storeEnumTagSinglePayload for PromotionalTileConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C28C6EB8);
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28C6E08);
}

uint64_t sub_1C27DA0CC(void *a1)
{
  return PromotionalTileConfiguration.encode(to:)(a1);
}

uint64_t type metadata accessor for PromotionalTileConfiguration(uint64_t a1)
{
  return sub_1C27D5B14(a1, qword_1EBB76738);
}

uint64_t PromotionalTileConfiguration.title.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for PromotionalTileConfiguration(0) + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C27DA144(void *a1)
{
  return PromotionalTileConfiguration.Hero.encode(to:)(a1);
}

unsigned char *_s16HealthExperience28PromotionalTileConfigurationV4HeroO23EmbeddedWatchCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        break;
      case 2:
        *(_WORD *)uint64_t result = a2;
        break;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = 0;
        break;
      case 2:
        *(_WORD *)uint64_t result = 0;
        break;
      case 3:
LABEL_19:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)uint64_t result = 0;
        break;
      default:
        return result;
    }
  }
  return result;
}

unint64_t sub_1C27DA1FC()
{
  unint64_t result = qword_1EBB76660;
  if (!qword_1EBB76660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76660);
  }
  return result;
}

unsigned char *_s16HealthExperience28PromotionalTileConfigurationV4HeroO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_1C27DA320()
{
  uint64_t v1 = 0x6567616D69;
  if (*v0 != 1) {
    uint64_t v1 = 2003134838;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6465646465626D65;
  }
}

unint64_t sub_1C27DA37C()
{
  unint64_t result = qword_1EBB76648;
  if (!qword_1EBB76648)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76648);
  }
  return result;
}

uint64_t type metadata accessor for PromotionalTileConfiguration.Hero.WatchConfiguration(uint64_t a1)
{
  return sub_1C27D5B14(a1, (uint64_t *)&unk_1EBB75E98);
}

uint64_t sub_1C27DA3F0(void *a1)
{
  return PromotionalTileConfiguration.Hero.ImageConfiguration.encode(to:)(a1);
}

uint64_t sub_1C27DA408()
{
  uint64_t v1 = 0x6965486567616D69;
  if (*v0 != 1) {
    uint64_t v1 = 0x736E496567616D69;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7461446567616D69;
  }
}

unint64_t sub_1C27DA474()
{
  unint64_t result = qword_1EBB76598;
  if (!qword_1EBB76598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76598);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for PromotionalTileConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        break;
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for PromotionalTileConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unint64_t sub_1C27DA624()
{
  unint64_t result = qword_1EBB76580;
  if (!qword_1EBB76580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76580);
  }
  return result;
}

ValueMetadata *type metadata accessor for DisplayCategoryColorProvider()
{
  return &type metadata for DisplayCategoryColorProvider;
}

unint64_t sub_1C27DA688()
{
  unint64_t result = qword_1EBB751F8;
  if (!qword_1EBB751F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB751F8);
  }
  return result;
}

unint64_t sub_1C27DA6DC()
{
  return 0xD00000000000001ALL;
}

unint64_t sub_1C27DA6F8()
{
  unint64_t result = qword_1EBB751E0;
  if (!qword_1EBB751E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB751E0);
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport.Features()
{
  return &type metadata for NotificationSettingsSupport.Features;
}

char *NotificationSettingsSupport.Features.orderedElements.getter()
{
  sub_1C27D8858();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1C28D0DA0;
  *(_DWORD *)(inited + 32) = 67239942;
  uint64_t v1 = sub_1C27D89F8((char *)1, 5, 1, (char *)inited);
  *((void *)v1 + 2) = 5;
  v1[36] = 1;
  unint64_t v2 = *((void *)v1 + 3);
  if (v2 <= 0xB)
  {
    uint64_t v1 = sub_1C27D89F8((char *)(v2 > 1), 6, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
  }
  *((void *)v1 + 2) = 6;
  v1[37] = 7;
  if (v2 <= 0xD)
  {
    uint64_t v1 = sub_1C27D89F8((char *)(v2 > 1), 7, 1, v1);
    unint64_t v2 = *((void *)v1 + 3);
  }
  *((void *)v1 + 2) = 7;
  v1[38] = 5;
  if (v2 <= 0xF) {
    uint64_t v1 = sub_1C27D89F8((char *)(v2 > 1), 8, 1, v1);
  }
  *((void *)v1 + 2) = 8;
  v1[39] = 3;
  return v1;
}

ValueMetadata *type metadata accessor for NotificationSettingsSupport.Defaults()
{
  return &type metadata for NotificationSettingsSupport.Defaults;
}

char *NotificationSettingsSupport.Defaults.orderedElements.getter()
{
  uint64_t v0 = sub_1C27D8A0C(0, 1, 1, MEMORY[0x1E4FBC860]);
  unint64_t v2 = *((void *)v0 + 2);
  unint64_t v1 = *((void *)v0 + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_1C27D8A0C((char *)(v1 > 1), v2 + 1, 1, v0);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v4;
  v0[v2 + 32] = 0;
  int64_t v5 = v2 + 2;
  if (v3 < v5) {
    uint64_t v0 = sub_1C27D8A0C((char *)(v1 > 1), v5, 1, v0);
  }
  *((void *)v0 + 2) = v5;
  v0[v4 + 32] = 1;
  return v0;
}

char *initializeBufferWithCopyOfBuffer for CurrentOSUpdateDateProvider(char *a1, char *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    BOOL v7 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4F67098];
    sub_1C27D0AD8(0, qword_1EBB74850, (uint64_t (*)(uint64_t))sub_1C27D962C, MEMORY[0x1E4F67098]);
    uint64_t v9 = v8;
    uint64_t v10 = *(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16);
    v10(a1, a2, v8);
    v10(&a1[a3[5]], &a2[a3[5]], v9);
    uint64_t v11 = a3[6];
    uint64_t v12 = &a1[v11];
    unint64_t v13 = &a2[v11];
    sub_1C27D0AD8(0, &qword_1EBB74AA8, (uint64_t (*)(uint64_t))sub_1C27BBE08, v7);
    uint64_t v15 = v14;
    int64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v16(v12, v13, v14);
    v16(&a1[a3[7]], &a2[a3[7]], v15);
    v16(&a1[a3[8]], &a2[a3[8]], v15);
  }
  return a1;
}

uint64_t type metadata accessor for CurrentOSUpdateDateProvider()
{
  uint64_t result = qword_1EBB75140;
  if (!qword_1EBB75140) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t type metadata accessor for FeatureStatusConfiguration()
{
  uint64_t result = qword_1EBB75080;
  if (!qword_1EBB75080) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_1C27DABD0()
{
  sub_1C27D4F54(319, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

unint64_t sub_1C27DAC90()
{
  unint64_t result = qword_1EBB76500;
  if (!qword_1EBB76500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76500);
  }
  return result;
}

unint64_t sub_1C27DACE4()
{
  unint64_t result = qword_1EBB764F8;
  if (!qword_1EBB764F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB764F8);
  }
  return result;
}

uint64_t static ManagedProfileConnection.shared.getter()
{
  uint64_t v0 = type metadata accessor for ManagedProfileConnection();

  return MEMORY[0x1F41866B0](v0, &unk_1EBB75CE0);
}

uint64_t dispatch thunk of ManagedProfileConnection.isAppInstallationAllowed()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

void sub_1C27DAD8C(uint64_t a1)
{
}

uint64_t sub_1C27DADC0(uint64_t a1, void *a2)
{
  return sub_1C27C189C(a1, a2);
}

void sub_1C27DAE2C()
{
  sub_1C27BA640(*(void *)(v0 + 16), *(void **)(v0 + 24), *(void **)(v0 + 32));
}

uint64_t sub_1C27DAE38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 16);
}

uint64_t sub_1C27DAE40(char *a1, char *a2)
{
  return sub_1C27BADF4(*a1, *a2);
}

BOOL CloudSyncRestoreState.isOngoing.getter()
{
  return (*v0 & 0xFD) == 0;
}

unint64_t CloudSyncRestoreState.rawValue.getter()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64656C696166;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x6574656C706D6F63;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t dispatch thunk of AsynchronousOperation.finish()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

void sub_1C27DAF6C()
{
}

void sub_1C27DAF90()
{
}

uint64_t dispatch thunk of AsynchronousOperation.finishWithExclusiveAccess()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t static AnalyticsTransforming.nilStringValue.getter()
{
  return 7104878;
}

NSString __swiftcall AnalyticsTransforming.nsStringValue(for:)(Swift::Bool a1)
{
  return (NSString)sub_1C28CDF60();
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Safety()
{
  return &type metadata for FeatureStatusSupport.Safety;
}

uint64_t sub_1C27DB05C()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C27DB06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_1C27DB0D4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *sub_1C27DB120(unsigned char *result, char a2)
{
  *uint64_t result = a2 & 1;
  return result;
}

uint64_t sub_1C27DB12C(void *a1)
{
  return ColorRepresentation.encode(to:)(a1);
}

void sub_1C27DB144()
{
  sub_1C27D4F54(319, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

unint64_t sub_1C27DB220()
{
  unint64_t result = qword_1EBB76240;
  if (!qword_1EBB76240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76240);
  }
  return result;
}

unint64_t sub_1C27DB274()
{
  unint64_t result = qword_1EBB76238;
  if (!qword_1EBB76238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76238);
  }
  return result;
}

unint64_t sub_1C27DB2C8()
{
  unint64_t result = qword_1EBB76230;
  if (!qword_1EBB76230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76230);
  }
  return result;
}

unint64_t sub_1C27DB324()
{
  unint64_t result = qword_1EBB76228;
  if (!qword_1EBB76228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76228);
  }
  return result;
}

unint64_t sub_1C27DB378()
{
  unint64_t result = qword_1EBB76220;
  if (!qword_1EBB76220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76220);
  }
  return result;
}

unint64_t sub_1C27DB3D4()
{
  unint64_t result = qword_1EBB76210;
  if (!qword_1EBB76210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76210);
  }
  return result;
}

unint64_t sub_1C27DB428()
{
  unint64_t result = qword_1EBB76208;
  if (!qword_1EBB76208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76208);
  }
  return result;
}

unint64_t sub_1C27DB47C()
{
  unint64_t result = qword_1EBB76200;
  if (!qword_1EBB76200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76200);
  }
  return result;
}

unint64_t sub_1C27DB4D8()
{
  unint64_t result = qword_1EBB75E88;
  if (!qword_1EBB75E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E88);
  }
  return result;
}

unint64_t sub_1C27DB52C()
{
  unint64_t result = qword_1EBB75E80;
  if (!qword_1EBB75E80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E80);
  }
  return result;
}

unint64_t sub_1C27DB580()
{
  unint64_t result = qword_1EBB75E78;
  if (!qword_1EBB75E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E78);
  }
  return result;
}

unint64_t sub_1C27DB5DC()
{
  unint64_t result = qword_1EBB761F8;
  if (!qword_1EBB761F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761F8);
  }
  return result;
}

unint64_t sub_1C27DB630()
{
  unint64_t result = qword_1EBB761F0;
  if (!qword_1EBB761F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761F0);
  }
  return result;
}

uint64_t dispatch thunk of LockedCancellables.removeAll()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of LockedCancellables.remove(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of LockedCancellables.insert(_:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t TransactionRecord.init(name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C28CC4A0();
  uint64_t result = type metadata accessor for TransactionRecord();
  BOOL v7 = (void *)(a3 + *(int *)(result + 20));
  *BOOL v7 = a1;
  v7[1] = a2;
  return result;
}

uint64_t type metadata accessor for LegacyObservable()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C27DB750()
{
  sub_1C27BDC7C(319, &qword_1EBB770E0, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

id static MedicalIDCache.primary.getter()
{
  if (qword_1EBB759A8 != -1) {
    swift_once();
  }
  unint64_t v0 = (void *)qword_1EBB75868;

  return v0;
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

void sub_1C27DB8AC(uint64_t *a1)
{
}

void sub_1C27DB8B4()
{
  sub_1C27BBE60(v0);
}

void sub_1C27DB8BC()
{
  off_1EBB77090 = (_UNKNOWN *)MEMORY[0x1E4FBC868];
}

uint64_t dispatch thunk of MedicalIDCache.enqueueMedicalIDFetch()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xF0))();
}

uint64_t sub_1C27DB908(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ReplaySubject.receive<A>(subscriber:)(a1, a2, a3);
}

uint64_t sub_1C27DB92C(void *a1)
{
  return sub_1C27BA540(a1);
}

uint64_t sub_1C27DB93C()
{
  return swift_getWitnessTable();
}

void sub_1C27DB958(char *a1)
{
}

uint64_t sub_1C27DB97C()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27DB998()
{
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for ReplaySubject.Subscription()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C27DB9CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_1C27DB9E4(a1, a2);
}

uint64_t sub_1C27DB9E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  *a2 = *a1;
  return swift_retain();
}

uint64_t sub_1C27DBA08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 40);
}

uint64_t type metadata accessor for ReplaySubject.Subscription.SubscriptionState()
{
  return swift_getGenericMetadata();
}

uint64_t type metadata accessor for DemandBuffer()
{
  return __swift_instantiateGenericMetadata();
}

void sub_1C27DBA40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C27DBAA4()
{
  unint64_t result = qword_1EBB74CF0;
  if (!qword_1EBB74CF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74CF0);
  }
  return result;
}

uint64_t Date.fiveYearsAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(-5, 0, 0, 0, 0, 0, a1);
}

uint64_t HAFeatureFlagAlwaysRunGenerationOnSharingSetUp()
{
  return MEMORY[0x1F40C9FB0]("HealthApp", "always_run_generation_on_sharing_set_up");
}

uint64_t HAFeatureFlagVO2MaxRetrocomputeEnabled()
{
  return MEMORY[0x1F40C9FB0]("CoreLocation", "VO2MaxRetrocompute");
}

uint64_t HAFeatureFlagBridgeHealthFeaturesOnboardingEnabled()
{
  return MEMORY[0x1F40C9FB0]("Bridge", "HealthChecklistOnboarding");
}

void sub_1C27DBEA4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t Publisher<>.withDateRanges(from:healthStore:debugIdentifier:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v32 = a4;
  uint64_t v33 = a5;
  uint64_t v30 = a2;
  unint64_t v31 = a3;
  uint64_t v29 = a1;
  uint64_t v9 = type metadata accessor for Publishers.BufferWithAggregator();
  uint64_t v34 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v11 = (char *)&v25 - v10;
  uint64_t v28 = sub_1C28CCA60();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1C28CD0A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v27 = WitnessTable;
  uint64_t v26 = swift_getWitnessTable();
  uint64_t v35 = v12;
  uint64_t v36 = v9;
  uint64_t v37 = WitnessTable;
  uint64_t v38 = v26;
  uint64_t v14 = sub_1C28CCF60();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v25 - v16;
  Publisher.aggregate(aggregationHandler:)((uint64_t)sub_1C27DC2D4, 0, a6, (uint64_t)v11);
  int64_t v18 = (void *)swift_allocObject();
  void v18[2] = a6;
  v18[3] = a7;
  uint64_t v19 = v30;
  v18[4] = v29;
  v18[5] = v19;
  uint64_t v21 = v31;
  uint64_t v20 = v32;
  v18[6] = v31;
  v18[7] = v20;
  v18[8] = v33;
  swift_bridgeObjectRetain();
  swift_retain();
  id v22 = v21;
  sub_1C28CD3B0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v34 + 8))(v11, v9);
  swift_getWitnessTable();
  uint64_t v23 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  return v23;
}

uint64_t sub_1C27DC2D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_1C27DEB78(0, &qword_1EBB74310, MEMORY[0x1E4F671C0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v8 = (char *)&v14 - v7;
  uint64_t v9 = sub_1C28CC7D0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27DEBDC(a1, (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1C27DEC70((uint64_t)v8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 16))(a3, a2, v9);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v8, v9);
    AnchoredChangeSet.aggregated(with:)(a3);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_1C27DC4A4@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v55 = a5;
  uint64_t v56 = a3;
  os_log_type_t v57 = a2;
  uint64_t v72 = a1;
  uint64_t v73 = a9;
  uint64_t v71 = sub_1C28CC7D0();
  uint64_t v69 = *(void *)(v71 - 8);
  uint64_t v70 = *(void *)(v69 + 64);
  MEMORY[0x1F4188790](v71);
  uint64_t v68 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27DE740();
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v59 = AssociatedTypeWitness;
  uint64_t v17 = sub_1C27DDE08((unint64_t *)&unk_1EBB754A8, (void (*)(uint64_t))sub_1C27DE740);
  uint64_t v61 = v17;
  uint64_t v18 = a8;
  uint64_t v52 = a8;
  uint64_t v19 = a7;
  uint64_t v51 = a7;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v74 = v15;
  uint64_t v75 = AssociatedTypeWitness;
  uint64_t v53 = v15;
  uint64_t v76 = v17;
  uint64_t v77 = AssociatedConformanceWitness;
  uint64_t v20 = sub_1C28CCEE0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v21 = sub_1C28CCF30();
  uint64_t v65 = sub_1C28CCA60();
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v54 = v21;
  uint64_t v22 = sub_1C28CCEA0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v66 = v22;
  uint64_t v67 = v23;
  uint64_t v24 = MEMORY[0x1F4188790](v22);
  uint64_t v63 = (char *)&v49 - v25;
  uint64_t v26 = *(void *)(v15 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (char *)&v49 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(v20 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v27);
  uint64_t v33 = (char *)&v49 - v32;
  uint64_t v62 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v31);
  uint64_t v50 = (char *)&v49 - v34;
  uint64_t v74 = v57(a4, v55, a6);
  uint64_t v35 = swift_allocObject();
  *(void *)(v35 + 16) = v19;
  *(void *)(v35 + 24) = v18;
  sub_1C27DE82C(0);
  sub_1C27DE9FC(0);
  sub_1C27DDE08((unint64_t *)&qword_1EBB75588, sub_1C27DE82C);
  sub_1C27DDE08((unint64_t *)&unk_1EBB755D0, sub_1C27DE9FC);
  sub_1C28CD350();
  swift_release();
  swift_release();
  uint64_t v36 = v53;
  sub_1C28CD430();
  (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v36);
  uint64_t v37 = v50;
  sub_1C28CD360();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v33, v20);
  uint64_t v39 = v68;
  uint64_t v38 = v69;
  uint64_t v40 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v69 + 16))(v68, v72, v71);
  unint64_t v41 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
  uint64_t v42 = swift_allocObject();
  uint64_t v43 = v52;
  *(void *)(v42 + 16) = v51;
  *(void *)(v42 + 24) = v43;
  (*(void (**)(unint64_t, char *, uint64_t))(v38 + 32))(v42 + v41, v39, v40);
  uint64_t v44 = v63;
  uint64_t v45 = v54;
  sub_1C28CD310();
  swift_release();
  uint64_t v46 = v66;
  swift_getWitnessTable();
  uint64_t v47 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v44, v46);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v37, v45);
  *uint64_t v73 = v47;
  return result;
}

uint64_t sub_1C27DCB38()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C27DCB80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C27DC4A4(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

void type metadata accessor for HKElectrocardiogramAlgorithmVersion(uint64_t a1)
{
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t sub_1C27DCBB4(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C27DCBD4(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for HKActivityMoveMode(uint64_t a1)
{
}

void type metadata accessor for HKProfileType(uint64_t a1)
{
}

void type metadata accessor for CFData(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for AVMediaType(uint64_t a1)
{
}

void type metadata accessor for AVAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for HKError(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for NumericValidationParseResult(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for RGBColorProvider(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for RGBColorProvider(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

void type metadata accessor for HKWheelchairUse(uint64_t a1)
{
}

void type metadata accessor for HKSharingNotificationStatus(uint64_t a1)
{
}

void type metadata accessor for HKSharingMessageDirection(uint64_t a1)
{
}

void type metadata accessor for HKSharingStatus(uint64_t a1)
{
}

void type metadata accessor for HKSharingType(uint64_t a1)
{
}

uint64_t sub_1C27DCDA0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  sub_1C28CCDC0();
  id v11 = v10;
  id v12 = v10;
  uint64_t v13 = sub_1C28CCE00();
  os_log_type_t v14 = sub_1C28CDCB0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v26 = a2;
    uint64_t v27 = v17;
    *(_DWORD *)uint64_t v16 = 136315394;
    swift_getMetatypeMetadata();
    uint64_t v18 = sub_1C28CD750();
    uint64_t v26 = sub_1C27D36AC(v18, v19, &v27);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    uint64_t v26 = (uint64_t)v10;
    id v20 = v10;
    sub_1C27C7060();
    uint64_t v21 = sub_1C28CD750();
    uint64_t v26 = sub_1C27D36AC(v21, v22, &v27);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v13, v14, "[%s]: Received error from date range query that should return a Result: %s", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v17, -1, -1);
    MEMORY[0x1C87609B0](v16, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  uint64_t v27 = (uint64_t)v10;
  char v28 = 1;
  id v23 = v10;
  sub_1C27DE860(0);
  return sub_1C28CD210();
}

uint64_t sub_1C27DD048@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  id v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC7D0();
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    id v16 = v15;
    sub_1C28CCDC0();
    id v17 = v15;
    id v18 = v15;
    unint64_t v19 = sub_1C28CCE00();
    os_log_type_t v20 = sub_1C28CDCB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v34 = a4;
      uint64_t v35 = a3;
      uint64_t v23 = v22;
      uint64_t v36 = v22;
      *(_DWORD *)uint64_t v21 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v24 = sub_1C28CD750();
      uint64_t v35 = sub_1C27D36AC(v24, v25, &v36);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2080;
      uint64_t v35 = (uint64_t)v15;
      id v26 = v15;
      sub_1C27C7060();
      uint64_t v27 = sub_1C28CD750();
      uint64_t v35 = sub_1C27D36AC(v27, v28, &v36);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27DEB6C(v15, 1);
      sub_1C27DEB6C(v15, 1);
      _os_log_impl(&dword_1C27B7000, v19, v20, "[%s]: Error when query for date ranges for database changes: %s", (uint8_t *)v21, 0x16u);
      swift_arrayDestroy();
      uint64_t v29 = v23;
      a4 = v34;
      MEMORY[0x1C87609B0](v29, -1, -1);
      MEMORY[0x1C87609B0](v21, -1, -1);

      sub_1C27DEB6C(v15, 1);
    }
    else
    {
      sub_1C27DEB6C(v15, 1);
      sub_1C27DEB6C(v15, 1);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v32 = sub_1C28CCA60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(a4, 1, 1, v32);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
    swift_bridgeObjectRetain();
    sub_1C28CCA40();
    uint64_t v30 = sub_1C28CCA60();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 0, 1, v30);
  }
}

id sub_1C27DD41C()
{
  return *v0;
}

uint64_t sub_1C27DD424@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C27DD42C(uint64_t a1, uint64_t a2)
{
  return sub_1C27DE07C(a1, a2, MEMORY[0x1E4F27EB8]);
}

uint64_t sub_1C27DD458()
{
  return sub_1C28CC600();
}

uint64_t sub_1C27DD4A4()
{
  return sub_1C28CC5F0();
}

uint64_t sub_1C27DD4FC()
{
  return sub_1C27DD5D0();
}

uint64_t sub_1C27DD514()
{
  return sub_1C28CC600();
}

uint64_t sub_1C27DD560()
{
  return sub_1C28CC5F0();
}

uint64_t sub_1C27DD5B8()
{
  return sub_1C27DD5D0();
}

uint64_t sub_1C27DD5D0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27DD634()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27DD67C()
{
  return sub_1C28CE710();
}

uint64_t sub_1C27DD6A8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27DD6EC(uint64_t a1, id *a2)
{
  uint64_t result = sub_1C28CD710();
  *a2 = 0;
  return result;
}

uint64_t sub_1C27DD764(uint64_t a1, id *a2)
{
  char v3 = sub_1C28CD720();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_1C27DD7E4@<X0>(uint64_t *a1@<X8>)
{
  sub_1C28CD730();
  uint64_t v2 = sub_1C28CD6F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C27DD828()
{
  return sub_1C28CD730();
}

uint64_t sub_1C27DD838()
{
  sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);

  return sub_1C28CC260();
}

uint64_t sub_1C27DD8A4(uint64_t a1)
{
  uint64_t v2 = sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);

  return MEMORY[0x1F40E44A8](a1, v2);
}

uint64_t sub_1C27DD910(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);
  id v5 = a1;

  return MEMORY[0x1F40E4498](v5, a2, v4);
}

uint64_t sub_1C27DD9A0()
{
  id v1 = *v0;
  uint64_t v2 = sub_1C28CDF50();

  return v2;
}

uint64_t sub_1C27DD9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);

  return MEMORY[0x1F40E44D8](a1, a2, v4);
}

uint64_t sub_1C27DDA54()
{
  return sub_1C28CE740();
}

void *sub_1C27DDAB4@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_1C27DDAC4(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_1C27DDAD4()
{
  swift_getWitnessTable();

  return sub_1C28CC5E0();
}

uint64_t sub_1C27DDB40()
{
  swift_getWitnessTable();

  return sub_1C28CC5E0();
}

uint64_t sub_1C27DDBAC(uint64_t a1)
{
  uint64_t v2 = sub_1C27DDE08(&qword_1EA30FED8, type metadata accessor for HKError);

  return MEMORY[0x1F40E6E20](a1, v2);
}

uint64_t sub_1C27DDC18(uint64_t a1)
{
  uint64_t v2 = sub_1C27DDE08(&qword_1EA30FED8, type metadata accessor for HKError);

  return MEMORY[0x1F40E6E10](a1, v2);
}

uint64_t sub_1C27DDC88(uint64_t a1)
{
  uint64_t v2 = sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);

  return MEMORY[0x1F40E4480](a1, v2);
}

uint64_t sub_1C27DDCF4()
{
  sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);

  return sub_1C28CC240();
}

uint64_t sub_1C27DDD78()
{
  return sub_1C27DDE08(&qword_1EA30FE80, type metadata accessor for HKError);
}

uint64_t sub_1C27DDDC0()
{
  return sub_1C27DDE08(&qword_1EA30FE88, type metadata accessor for HKError);
}

uint64_t sub_1C27DDE08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

BOOL sub_1C27DDE50(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C27DDE68@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C28CD730();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C27DDE94(uint64_t a1, uint64_t a2)
{
  return sub_1C27DDF7C(a1, a2, sub_1C27DE6D8, sub_1C27DE70C);
}

uint64_t sub_1C27DDEC0()
{
  return sub_1C27DDE08(&qword_1EA30FE90, type metadata accessor for AVMediaType);
}

uint64_t sub_1C27DDF08()
{
  return sub_1C27DDE08(&qword_1EA30FE98, type metadata accessor for AVMediaType);
}

uint64_t sub_1C27DDF50(uint64_t a1, uint64_t a2)
{
  return sub_1C27DDF7C(a1, a2, sub_1C27DE670, sub_1C27DE6A4);
}

uint64_t sub_1C27DDF7C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  uint64_t v6 = a3();
  uint64_t v7 = a4();
  uint64_t v8 = MEMORY[0x1E4FBB1B0];

  return MEMORY[0x1F4185450](a1, v6, v7, v8);
}

uint64_t sub_1C27DDFF0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_1C28CD6F0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C27DE038(uint64_t a1, uint64_t a2)
{
  return sub_1C27DDF7C(a1, a2, sub_1C27DEEB4, sub_1C27DEEE8);
}

uint64_t sub_1C27DE064(uint64_t a1, uint64_t a2)
{
  return sub_1C27DE07C(a1, a2, MEMORY[0x1E4FBB198]);
}

uint64_t sub_1C27DE07C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1C28CD730();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_1C27DE0C0()
{
  sub_1C28CD730();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C27DE114()
{
  sub_1C28CD730();
  sub_1C28CE700();
  sub_1C28CD790();
  uint64_t v0 = sub_1C28CE740();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1C27DE188()
{
  uint64_t v0 = sub_1C28CD730();
  uint64_t v2 = v1;
  if (v0 == sub_1C28CD730() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1C27DE214()
{
  return sub_1C27DDE08(&qword_1EA30FEA0, type metadata accessor for AVMediaType);
}

uint64_t sub_1C27DE25C()
{
  return sub_1C27DDE08(&qword_1EA30FEA8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C27DE2A4()
{
  return sub_1C27DDE08(&qword_1EA30FEB0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C27DE2EC()
{
  return sub_1C27DDE08(&qword_1EA30FEB8, type metadata accessor for CFData);
}

uint64_t sub_1C27DE334()
{
  return sub_1C27DDE08(&qword_1EA30FEC0, type metadata accessor for HKActivityMoveMode);
}

uint64_t sub_1C27DE37C()
{
  return sub_1C27DDE08(&qword_1EA30FEC8, type metadata accessor for CFData);
}

uint64_t sub_1C27DE3C4()
{
  return sub_1C27DDE08(&qword_1EA30FED0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C27DE40C()
{
  return sub_1C27DDE08(&qword_1EA30FED8, type metadata accessor for HKError);
}

uint64_t sub_1C27DE454()
{
  return sub_1C27DDE08(&qword_1EA30FEE0, type metadata accessor for HKError);
}

uint64_t sub_1C27DE49C()
{
  return sub_1C27DDE08(&qword_1EA30FEE8, type metadata accessor for HKError);
}

uint64_t sub_1C27DE4E4()
{
  return sub_1C27DDE08(&qword_1EA30FEF0, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_1C27DE540()
{
  return sub_1C27DDE08(&qword_1EA30FEF8, type metadata accessor for Code);
}

unint64_t sub_1C27DE58C()
{
  unint64_t result = qword_1EA30FF00;
  if (!qword_1EA30FF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA30FF00);
  }
  return result;
}

uint64_t sub_1C27DE5E0()
{
  return sub_1C27DDE08(&qword_1EA30FF08, type metadata accessor for Code);
}

uint64_t sub_1C27DE628()
{
  return sub_1C27DDE08((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);
}

uint64_t sub_1C27DE670()
{
  return sub_1C27DDE08(&qword_1EA30FF18, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C27DE6A4()
{
  return sub_1C27DDE08(&qword_1EA30FF20, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_1C27DE6D8()
{
  return sub_1C27DDE08(&qword_1EA30FF28, type metadata accessor for AVMediaType);
}

uint64_t sub_1C27DE70C()
{
  return sub_1C27DDE08(&qword_1EA30FF30, type metadata accessor for AVMediaType);
}

void sub_1C27DE740()
{
  if (!qword_1EBB754B8)
  {
    sub_1C27DE82C(255);
    sub_1C27DE9FC(255);
    sub_1C27DDE08((unint64_t *)&qword_1EBB75588, sub_1C27DE82C);
    sub_1C27DDE08((unint64_t *)&unk_1EBB755D0, sub_1C27DE9FC);
    unint64_t v0 = sub_1C28CCF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB754B8);
    }
  }
}

void sub_1C27DE82C(uint64_t a1)
{
}

void sub_1C27DE860(uint64_t a1)
{
}

void sub_1C27DE894(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_1C27C7060();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

void sub_1C27DE910()
{
  if (!qword_1EBB76D50)
  {
    sub_1C27DE9BC();
    sub_1C28CBFB0();
    sub_1C27DDE08((unint64_t *)&qword_1EBB76B00, (void (*)(uint64_t))sub_1C27DE9BC);
    unint64_t v0 = sub_1C28CD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76D50);
    }
  }
}

unint64_t sub_1C27DE9BC()
{
  unint64_t result = qword_1EBB76D90;
  if (!qword_1EBB76D90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB76D90);
  }
  return result;
}

void sub_1C27DE9FC(uint64_t a1)
{
}

uint64_t sub_1C27DEA30()
{
  return swift_deallocObject();
}

uint64_t sub_1C27DEA40@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27DCDA0(a1, *(void *)(v2 + 16), a2);
}

uint64_t sub_1C27DEA48()
{
  uint64_t v1 = sub_1C28CC7D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1C27DEAD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_1C28CC7D0() - 8);
  uint64_t v7 = v2 + ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  return sub_1C27DD048(a1, v7, v5, a2);
}

void sub_1C27DEB6C(id a1, char a2)
{
  if (a2) {

  }
  else {
    swift_bridgeObjectRelease();
  }
}

void sub_1C27DEB78(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C27DEBDC(uint64_t a1, uint64_t a2)
{
  sub_1C27DEB78(0, &qword_1EBB74310, MEMORY[0x1E4F671C0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C27DEC70(uint64_t a1)
{
  sub_1C27DEB78(0, &qword_1EBB74310, MEMORY[0x1E4F671C0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for CFNumber(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for HKCharacteristicTypeIdentifier(uint64_t a1)
{
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

uint64_t sub_1C27DED4C()
{
  return sub_1C27DDE08(&qword_1EA30FF60, type metadata accessor for HKCharacteristicTypeIdentifier);
}

uint64_t sub_1C27DED94()
{
  return sub_1C27DDE08(&qword_1EA30FF68, type metadata accessor for HKCharacteristicTypeIdentifier);
}

uint64_t sub_1C27DEDDC()
{
  return sub_1C27DDE08(&qword_1EA30FF70, type metadata accessor for CFString);
}

uint64_t sub_1C27DEE24()
{
  return sub_1C27DDE08(&qword_1EA30FF78, type metadata accessor for CFString);
}

uint64_t sub_1C27DEE6C()
{
  return sub_1C27DDE08(&qword_1EBB756E0, type metadata accessor for HKCharacteristicTypeIdentifier);
}

uint64_t sub_1C27DEEB4()
{
  return sub_1C27DDE08(&qword_1EBB756D8, type metadata accessor for HKCharacteristicTypeIdentifier);
}

uint64_t sub_1C27DEEE8()
{
  return sub_1C27DDE08((unint64_t *)&unk_1EA30FF80, type metadata accessor for HKCharacteristicTypeIdentifier);
}

Swift::String __swiftcall SharingEntryProfileInformation.localizedFullNameOrAccountIdentifier(shouldDisplaySuggestedName:newlineBetweenNames:)(Swift::Bool shouldDisplaySuggestedName, Swift::Bool newlineBetweenNames)
{
  uint64_t v2 = sub_1C27DEFBC(shouldDisplaySuggestedName, newlineBetweenNames, MEMORY[0x1E4F657A0]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

Swift::Bool __swiftcall SharingEntryProfileInformation.isContact()()
{
  uint64_t v1 = (void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  unint64_t v2 = v1[1];
  Swift::Bool result = 0;
  if (v2)
  {
    uint64_t v3 = *v1 & 0xFFFFFFFFFFFFLL;
    if ((v2 & 0x2000000000000000) != 0 ? HIBYTE(v2) & 0xF : v3) {
      return 1;
    }
  }
  return result;
}

Swift::String __swiftcall SharingEntryProfileInformation.localizedShortNameOrAccountIdentifier(shouldDisplaySuggestedName:newlineBetweenNames:)(Swift::Bool shouldDisplaySuggestedName, Swift::Bool newlineBetweenNames)
{
  uint64_t v2 = sub_1C27DEFBC(shouldDisplaySuggestedName, newlineBetweenNames, MEMORY[0x1E4F657A8]);
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t sub_1C27DEFBC(char a1, char a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, BOOL, void, void, void, _BYTE))
{
  uint64_t v7 = (int *)type metadata accessor for SharingEntryProfileInformation();
  unint64_t v8 = (uint64_t *)(v3 + v7[8]);
  uint64_t v10 = *v8;
  uint64_t v9 = v8[1];
  id v11 = (uint64_t *)(v3 + v7[9]);
  uint64_t v13 = *v11;
  uint64_t v12 = v11[1];
  uint64_t v14 = (void *)(v3 + v7[7]);
  unint64_t v15 = v14[1];
  BOOL v18 = 0;
  if (v15)
  {
    uint64_t v16 = *v14 & 0xFFFFFFFFFFFFLL;
    if ((v15 & 0x2000000000000000) != 0 ? HIBYTE(v15) & 0xF : v16) {
      BOOL v18 = 1;
    }
  }
  sub_1C28CCBA0();
  return a3(v10, v9, v13, v12, v18, *(void *)(v3 + v7[6]), *(void *)(v3 + v7[6] + 8), a1 & 1, a2 & 1);
}

BOOL SharingEntryProfileInformation.isIncomingAccepted.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(v3 + 80);
  if (*(unsigned char *)(v6 + 8))
  {
    sub_1C27DF188(v1, (uint64_t)v5);
LABEL_6:
    sub_1C27DF1EC((uint64_t)v5);
    return 0;
  }
  uint64_t v7 = *(void *)v6;
  sub_1C27DF188(v1, (uint64_t)v5);
  if (v7 != 1) {
    goto LABEL_6;
  }
  unint64_t v8 = &v5[*(int *)(v2 + 76)];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_1C27DF1EC((uint64_t)v5);
  if ((v10 & 1) == 0) {
    return v9 == 1;
  }
  return 0;
}

uint64_t sub_1C27DF188(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SharingEntryProfileInformation();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C27DF1EC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharingEntryProfileInformation();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL SharingEntryProfileInformation.isIncomingDeclined.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(v3 + 80);
  if (*(unsigned char *)(v6 + 8))
  {
    sub_1C27DF188(v1, (uint64_t)v5);
LABEL_6:
    sub_1C27DF1EC((uint64_t)v5);
    return 0;
  }
  uint64_t v7 = *(void *)v6;
  sub_1C27DF188(v1, (uint64_t)v5);
  if (v7 != 1) {
    goto LABEL_6;
  }
  unint64_t v8 = &v5[*(int *)(v2 + 76)];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_1C27DF1EC((uint64_t)v5);
  if ((v10 & 1) == 0) {
    return v9 == 2;
  }
  return 0;
}

BOOL SharingEntryProfileInformation.isIncomingInvite.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v3 = MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = v1 + *(int *)(v3 + 80);
  if (*(unsigned char *)(v6 + 8))
  {
    sub_1C27DF188(v1, (uint64_t)v5);
LABEL_6:
    sub_1C27DF1EC((uint64_t)v5);
    return 0;
  }
  uint64_t v7 = *(void *)v6;
  sub_1C27DF188(v1, (uint64_t)v5);
  if (v7 != 1) {
    goto LABEL_6;
  }
  unint64_t v8 = &v5[*(int *)(v2 + 76)];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_1C27DF1EC((uint64_t)v5);
  if ((v10 & 1) == 0) {
    return v9 == 0;
  }
  return 0;
}

BOOL SharingEntryProfileInformation.isOutgoingAccepted.getter()
{
  uint64_t v1 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + *(int *)(v2 + 80);
  if (*(unsigned char *)(v5 + 8))
  {
    sub_1C27DF188(v0, (uint64_t)v4);
LABEL_4:
    sub_1C27DF1EC((uint64_t)v4);
    return 0;
  }
  uint64_t v6 = *(void *)v5;
  sub_1C27DF188(v0, (uint64_t)v4);
  if (v6) {
    goto LABEL_4;
  }
  unint64_t v8 = &v4[*(int *)(v1 + 76)];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_1C27DF1EC((uint64_t)v4);
  if ((v10 & 1) == 0) {
    return v9 == 1;
  }
  return 0;
}

BOOL SharingEntryProfileInformation.isOutgoingPending.getter()
{
  uint64_t v1 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = v0 + *(int *)(v2 + 80);
  if (*(unsigned char *)(v5 + 8))
  {
    sub_1C27DF188(v0, (uint64_t)v4);
LABEL_4:
    sub_1C27DF1EC((uint64_t)v4);
    return 0;
  }
  uint64_t v6 = *(void *)v5;
  sub_1C27DF188(v0, (uint64_t)v4);
  if (v6) {
    goto LABEL_4;
  }
  unint64_t v8 = &v4[*(int *)(v1 + 76)];
  uint64_t v9 = *(void *)v8;
  char v10 = v8[8];
  sub_1C27DF1EC((uint64_t)v4);
  if ((v10 & 1) == 0) {
    return v9 == 0;
  }
  return 0;
}

unint64_t static SharingEntryProfileInformation.createNotificationIdentifier(uuid:direction:)(uint64_t a1, uint64_t a2, char a3)
{
  return sub_1C27DF618(a1, a2, a3 & 1);
}

unint64_t SharingEntryProfileInformation.notificationIdentifier.getter()
{
  uint64_t v1 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v2 = v0 + *(int *)(v1 + 80);
  uint64_t v3 = *(void *)v2;
  char v4 = *(unsigned char *)(v2 + 8);
  uint64_t v5 = v0 + *(int *)(v1 + 20);

  return sub_1C27DF618(v5, v3, v4);
}

unint64_t sub_1C27DF618(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0)
  {
    id v3 = (id)HKStringForMessageDirection();
    sub_1C28CD730();
  }
  sub_1C28CE120();
  swift_bridgeObjectRelease();
  sub_1C28CC460();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return 0xD000000000000019;
}

uint64_t ImageRepresentation.hash(into:)()
{
  sub_1C27CCDC8(0);
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC580(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v20 - v10;
  uint64_t v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)((char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27CCEA4(v0, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27CC3FC();
      sub_1C27CC4B4((uint64_t)v14 + *(int *)(v16 + 48), (uint64_t)v11, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C28CE710();
      sub_1C28CD790();
      swift_bridgeObjectRelease();
      sub_1C27CCEA4((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))sub_1C27CC580);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v9, 1, v2) == 1)
      {
        sub_1C28CE720();
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v9, v2);
        sub_1C28CE720();
        sub_1C27E3D1C(&qword_1EA310110, (void (*)(void))sub_1C27E28C8);
        sub_1C28CD680();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      }
      return sub_1C27CCDFC((uint64_t)v11, (uint64_t (*)(void))sub_1C27CC580);
    }
    else
    {
      uint64_t v18 = *v14;
      unint64_t v19 = v14[1];
      sub_1C28CE710();
      sub_1C28CC3A0();
      sub_1C28CE710();
      return sub_1C27E2870(v18, v19);
    }
  }
  else
  {
    sub_1C28CE710();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    sub_1C28CD790();
    return swift_bridgeObjectRelease();
  }
}

BOOL sub_1C27DFA78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_1C27DFA94()
{
  return sub_1C28CE710();
}

uint64_t sub_1C27DFAC4()
{
  if (*v0) {
    return 0xD000000000000010;
  }
  else {
    return 1701667182;
  }
}

uint64_t sub_1C27DFAFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27E3870(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C27DFB24()
{
  return 0;
}

void sub_1C27DFB30(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_1C27DFB3C(uint64_t a1)
{
  unint64_t v2 = sub_1C27E2950();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27DFB78(uint64_t a1)
{
  unint64_t v2 = sub_1C27E2950();

  return MEMORY[0x1F41862B0](a1, v2);
}

BOOL sub_1C27DFBB4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1C27DFBC8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27DFC10()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27DFC54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27E3950(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C27DFC7C(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

uint64_t sub_1C27DFC88(uint64_t a1)
{
  unint64_t v2 = sub_1C27CD108();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27DFCC4(uint64_t a1)
{
  unint64_t v2 = sub_1C27CD108();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C27DFD00()
{
  if (*v0) {
    return 0x656C616373;
  }
  else {
    return 1635017060;
  }
}

uint64_t sub_1C27DFD30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27E3A98(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C27DFD58(uint64_t a1)
{
  unint64_t v2 = sub_1C27E28FC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27DFD94(uint64_t a1)
{
  unint64_t v2 = sub_1C27E28FC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C27DFDD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C27E3B74(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C27DFDF8(uint64_t a1)
{
  unint64_t v2 = sub_1C27CD0B4();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27DFE34(uint64_t a1)
{
  unint64_t v2 = sub_1C27CD0B4();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ImageRepresentation.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t ImageRepresentation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C27CCD60(0, &qword_1EBB76840, (uint64_t (*)(void))sub_1C27E28FC, (uint64_t)&type metadata for ImageRepresentation.PngDataCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v72 = v4;
  uint64_t v74 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  long long v79 = (char *)&v65 - v5;
  sub_1C27CCD60(0, &qword_1EBB76838, (uint64_t (*)(void))sub_1C27CD0B4, (uint64_t)&type metadata for ImageRepresentation.SymbolCodingKeys, v3);
  uint64_t v75 = v6;
  uint64_t v73 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  long long v78 = (char *)&v65 - v7;
  sub_1C27CCD60(0, &qword_1EBB76830, (uint64_t (*)(void))sub_1C27E2950, (uint64_t)&type metadata for ImageRepresentation.BundleCodingKeys, v3);
  uint64_t v70 = *(void *)(v8 - 8);
  uint64_t v71 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v77 = (char *)&v65 - v9;
  sub_1C27CCD60(0, &qword_1EBB76828, (uint64_t (*)(void))sub_1C27CD108, (uint64_t)&type metadata for ImageRepresentation.CodingKeys, v3);
  uint64_t v80 = v10;
  uint64_t v76 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = type metadata accessor for ImageRepresentation();
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v65 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  unint64_t v19 = (uint64_t *)((char *)&v65 - v18);
  uint64_t v20 = MEMORY[0x1F4188790](v17);
  uint64_t v22 = (char *)&v65 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v65 - v23;
  uint64_t v25 = a1[3];
  uint64_t v81 = a1;
  __swift_project_boxed_opaque_existential_1(a1, v25);
  sub_1C27CD108();
  uint64_t v26 = v82;
  sub_1C28CE7F0();
  if (!v26)
  {
    uint64_t v66 = v22;
    uint64_t v67 = v16;
    uint64_t v68 = v19;
    uint64_t v27 = v77;
    unint64_t v28 = v78;
    uint64_t v30 = v79;
    uint64_t v29 = v80;
    uint64_t v82 = v13;
    uint64_t v31 = sub_1C28CE530();
    uint64_t v32 = (char *)v31;
    if (*(void *)(v31 + 16) == 1)
    {
      if (*(unsigned char *)(v31 + 32))
      {
        if (*(unsigned char *)(v31 + 32) == 1)
        {
          LOBYTE(v83) = 1;
          sub_1C27CD0B4();
          sub_1C28CE480();
          LOBYTE(v83) = 0;
          uint64_t v51 = sub_1C28CE4E0();
          uint64_t v53 = v52;
          sub_1C27CC3FC();
          uint64_t v55 = v68;
          long long v79 = (char *)v68 + *(int *)(v54 + 48);
          *uint64_t v68 = v51;
          v55[1] = v53;
          sub_1C27CCDC8(0);
          LOBYTE(v83) = 1;
          sub_1C27CCE5C(&qword_1EBB768A8, sub_1C27CCDC8);
          uint64_t v56 = v75;
          sub_1C28CE4D0();
          uint64_t v57 = v76;
          (*(void (**)(char *, uint64_t))(v73 + 8))(v28, v56);
          swift_bridgeObjectRelease();
          (*(void (**)(char *, uint64_t))(v57 + 8))(v12, v80);
          swift_storeEnumTagMultiPayload();
          uint64_t v64 = (uint64_t)v55;
LABEL_11:
          sub_1C27CC4B4(v64, (uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
          sub_1C27CC4B4((uint64_t)v24, v69, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
          return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
        }
        LOBYTE(v83) = 2;
        sub_1C27E28FC();
        uint64_t v39 = v29;
        sub_1C28CE480();
        char v85 = 0;
        sub_1C27E2AA8();
        uint64_t v40 = v72;
        sub_1C28CE520();
        long long v78 = v32;
        uint64_t v46 = v83;
        uint64_t v47 = v30;
        uint64_t v77 = v84;
        char v85 = 1;
        uint64_t v48 = sub_1C28CE510();
        uint64_t v49 = v40;
        uint64_t v50 = v76;
        uint64_t v62 = *(void (**)(char *, uint64_t))(v74 + 8);
        uint64_t v75 = v48;
        v62(v47, v49);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v50 + 8))(v12, v39);
        uint64_t v61 = v67;
        uint64_t v63 = v77;
        void *v67 = v46;
        v61[1] = v63;
        v61[2] = v75;
      }
      else
      {
        LOBYTE(v83) = 0;
        sub_1C27E2950();
        sub_1C28CE480();
        LOBYTE(v83) = 0;
        uint64_t v36 = v71;
        uint64_t v37 = v27;
        uint64_t v38 = sub_1C28CE4E0();
        uint64_t v43 = v42;
        long long v78 = (char *)v38;
        long long v79 = v12;
        LOBYTE(v83) = 1;
        uint64_t v44 = sub_1C28CE4E0();
        uint64_t v45 = (void (**)(char *, uint64_t))(v76 + 8);
        uint64_t v59 = v58;
        id v60 = *(void (**)(char *, uint64_t))(v70 + 8);
        uint64_t v76 = v44;
        v60(v37, v36);
        swift_bridgeObjectRelease();
        (*v45)(v79, v80);
        uint64_t v61 = v66;
        *uint64_t v66 = v78;
        v61[1] = v43;
        v61[2] = v76;
        v61[3] = v59;
      }
      swift_storeEnumTagMultiPayload();
      uint64_t v64 = (uint64_t)v61;
      goto LABEL_11;
    }
    uint64_t v33 = sub_1C28CE180();
    swift_allocError();
    uint64_t v35 = v34;
    sub_1C27E29F8();
    *uint64_t v35 = v82;
    sub_1C28CE490();
    sub_1C28CE160();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, *MEMORY[0x1E4FBBA70], v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v76 + 8))(v12, v29);
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v81);
}

uint64_t sub_1C27E0900@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ImageRepresentation.init(from:)(a1, a2);
}

uint64_t sub_1C27E091C()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27E0960()
{
  return sub_1C28CE740();
}

uint64_t ImageRepresentation.init(assetName:bundleIdentifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  type metadata accessor for ImageRepresentation();

  return swift_storeEnumTagMultiPayload();
}

uint64_t ImageRepresentation.init(assetName:bundle:)@<X0>(id a1@<X2>, uint64_t a2@<X0>, uint64_t a3@<X1>, void *a4@<X8>)
{
  id v8 = objc_msgSend(a1, sel_bundleIdentifier);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C28CD730();
    uint64_t v12 = v11;

    *a4 = a2;
    a4[1] = a3;
    a4[2] = v10;
    a4[3] = v12;
    type metadata accessor for ImageRepresentation();
    return swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    id v14 = objc_msgSend(a1, sel_description);
    sub_1C28CD730();

    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C28CE360();
    __break(1u);
  }
  return result;
}

void ImageRepresentation.init(image:)(UIImage *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4 = UIImagePNGRepresentation(a1);
  if (!v4)
  {

    uint64_t v16 = type metadata accessor for ImageRepresentation();
    uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v15 = v16;
    uint64_t v13 = a2;
    uint64_t v14 = 1;
    goto LABEL_7;
  }
  uint64_t v5 = v4;
  uint64_t v6 = sub_1C28CC390();
  uint64_t v8 = v7;

  [(UIImage *)a1 scale];
  double v10 = v9;

  if ((~*(void *)&v10 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_11;
  }
  if (v10 <= -9.22337204e18)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v10 >= 9.22337204e18)
  {
LABEL_12:
    __break(1u);
    return;
  }
  *a2 = v6;
  a2[1] = v8;
  a2[2] = (uint64_t)v10;
  uint64_t v11 = type metadata accessor for ImageRepresentation();
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = *(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
  uint64_t v13 = a2;
  uint64_t v14 = 0;
  uint64_t v15 = v11;
LABEL_7:

  v12(v13, v14, 1, v15);
}

UIImage_optional __swiftcall ImageRepresentation.makeImage()()
{
  uint64_t v1 = v0;
  sub_1C27CC580(0);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = &v44[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = &v44[-v6];
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = &v44[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (uint64_t *)&v44[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C27CCEA4(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27CC3FC();
      sub_1C27CC4B4((uint64_t)v14 + *(int *)(v16 + 48), (uint64_t)v7, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C27CCEA4((uint64_t)v7, (uint64_t)v5, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C27CCDC8(0);
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v19 + 48))(v5, 1, v17) == 1)
      {
        sub_1C27CCDFC((uint64_t)v5, (uint64_t (*)(void))sub_1C27CC580);
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v20 = (void *)sub_1C28CD570();
        (*(void (**)(unsigned char *, uint64_t))(v19 + 8))(v5, v18);
      }
      uint64_t v34 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      uint64_t v27 = (objc_class *)objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v34, v20);

      sub_1C27CCDFC((uint64_t)v7, (uint64_t (*)(void))sub_1C27CC580);
    }
    else
    {
      uint64_t v29 = *v14;
      unint64_t v30 = v14[1];
      double v31 = (double)v14[2];
      id v32 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      uint64_t v33 = (void *)sub_1C28CC380();
      uint64_t v27 = (objc_class *)objc_msgSend(v32, sel_initWithData_scale_, v33, v31);
      sub_1C27E2870(v29, v30);
    }
  }
  else
  {
    uint64_t v22 = v14[2];
    unint64_t v21 = v14[3];
    swift_bridgeObjectRetain();
    uint64_t v23 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v24 = objc_msgSend(self, sel_bundleWithIdentifier_, v23);

    if (v24)
    {
      swift_bridgeObjectRelease();
      id v25 = v24;
      uint64_t v26 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      uint64_t v27 = (objc_class *)objc_msgSend(self, sel_imageNamed_inBundle_withConfiguration_, v26, v25, 0);
    }
    else
    {
      swift_bridgeObjectRelease();
      sub_1C28CCDC0();
      swift_bridgeObjectRetain();
      uint64_t v35 = sub_1C28CCE00();
      os_log_type_t v36 = sub_1C28CDCB0();
      int v37 = v36;
      if (os_log_type_enabled(v35, v36))
      {
        uint64_t v38 = swift_slowAlloc();
        int v45 = v37;
        uint64_t v39 = v38;
        uint64_t v46 = swift_slowAlloc();
        uint64_t v47 = v12;
        uint64_t v48 = v46;
        *(_DWORD *)uint64_t v39 = 136315394;
        sub_1C27E2AFC();
        uint64_t v40 = sub_1C28CD750();
        uint64_t v47 = sub_1C27D36AC(v40, v41, &v48);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        swift_bridgeObjectRetain();
        uint64_t v47 = sub_1C27D36AC(v22, v21, &v48);
        sub_1C28CDF90();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1C27B7000, v35, (os_log_type_t)v45, "[%s: Unable to get bundle with identifier %s]", (uint8_t *)v39, 0x16u);
        uint64_t v42 = v46;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v42, -1, -1);
        MEMORY[0x1C87609B0](v39, -1, -1);
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v11, v8);
      uint64_t v27 = 0;
    }
  }
  uint64_t v43 = v27;
  result.value.super.Class isa = v43;
  result.is_nil = v28;
  return result;
}

void ImageRepresentation.image.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC580(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v37 - v10;
  uint64_t v12 = type metadata accessor for ImageRepresentation();
  MEMORY[0x1F4188790](v12);
  uint64_t v14 = (void *)((char *)v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27CCEA4(v1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_1C27CC3FC();
      sub_1C27CC4B4((uint64_t)v14 + *(int *)(v16 + 48), (uint64_t)v11, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C27CCEA4((uint64_t)v11, (uint64_t)v9, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C27CCDC8(0);
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v9, 1, v17) == 1)
      {
        sub_1C27CCDFC((uint64_t)v9, (uint64_t (*)(void))sub_1C27CC580);
        uint64_t v20 = 0;
      }
      else
      {
        uint64_t v20 = (void *)sub_1C28CD570();
        (*(void (**)(char *, uint64_t))(v19 + 8))(v9, v18);
      }
      uint64_t v34 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      id v35 = objc_msgSend(self, sel__systemImageNamed_withConfiguration_, v34, v20);

      if (v35)
      {
        id v36 = objc_msgSend(v35, sel_imageWithRenderingMode_, 2);

        sub_1C28CD4C0();
        sub_1C27CCDFC((uint64_t)v11, (uint64_t (*)(void))sub_1C27CC580);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      uint64_t v23 = *v14;
      unint64_t v24 = v14[1];
      double v25 = (double)v14[2];
      id v26 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      sub_1C27E2B38(v23, v24);
      uint64_t v27 = (void *)sub_1C28CC380();
      id v28 = objc_msgSend(v26, sel_initWithData_scale_, v27, v25);
      sub_1C27E2870(v23, v24);

      if (v28
        && (id v29 = objc_msgSend(v28, sel_imageWithRenderingMode_, 2),
            v28,
            v29))
      {
        sub_1C28CD4C0();
      }
      else
      {
        sub_1C28CCDA0();
        unint64_t v30 = sub_1C28CCE00();
        os_log_type_t v31 = sub_1C28CDCB0();
        if (os_log_type_enabled(v30, v31))
        {
          id v32 = (uint8_t *)swift_slowAlloc();
          uint64_t v33 = swift_slowAlloc();
          uint64_t v38 = v33;
          *(_DWORD *)id v32 = 136315138;
          v37[1] = v32 + 4;
          v37[2] = sub_1C27D36AC(0xD000000000000013, 0x80000001C28D0700, &v38);
          sub_1C28CDF90();
          _os_log_impl(&dword_1C27B7000, v30, v31, "[%s]: Unable to resolve image from data", v32, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v33, -1, -1);
          MEMORY[0x1C87609B0](v32, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
        sub_1C28CD4D0();
      }
      sub_1C27E2870(v23, v24);
    }
  }
  else
  {
    unint64_t v21 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v22 = objc_msgSend(self, sel_bundleWithIdentifier_, v21);

    sub_1C28CD4E0();
  }
}

uint64_t sub_1C27E181C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C27D3C50();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C27E1968@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v31 = *MEMORY[0x1E4F143B8];
  int64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_1C27E2B38(a2, a3);
      uint64_t v10 = (char *)sub_1C28CC070();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1C28CC0A0();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1C28CC090();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1C27E1BCCLL);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_1C27E2870(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1C28CC070();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1C28CC0A0();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1C28CC090();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1C27E1BDC(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  __s1[2] = *MEMORY[0x1E4F143B8];
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_1C27E2B38(a1, a2);
      char v5 = sub_1C27E1E0C((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
      sub_1C27E2870(a1, a2);
      goto LABEL_6;
    case 2uLL:
      uint64_t v10 = a2 & 0x3FFFFFFFFFFFFFFFLL;
      uint64_t v11 = *(void *)(a1 + 16);
      uint64_t v12 = *(void *)(a1 + 24);
      swift_retain();
      swift_retain();
      char v5 = sub_1C27E1E0C(v11, v12, v10, a3, a4);
      swift_release();
      swift_release();
LABEL_6:
      sub_1C27E2870(a3, a4);
      return v5 & 1;
    case 3uLL:
      memset(__s1, 0, 14);
      goto LABEL_8;
    default:
      __s1[0] = a1;
      LOWORD(__s1[1]) = a2;
      BYTE2(__s1[1]) = BYTE2(a2);
      BYTE3(__s1[1]) = BYTE3(a2);
      BYTE4(__s1[1]) = BYTE4(a2);
      BYTE5(__s1[1]) = BYTE5(a2);
LABEL_8:
      sub_1C27E1968((uint64_t)__s1, a3, a4, &v14);
      sub_1C27E2870(a3, a4);
      if (!v4) {
        char v5 = v14;
      }
      return v5 & 1;
  }
}

uint64_t sub_1C27E1E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1C28CC070();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1C28CC0A0();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1C28CC090();
  sub_1C27E1968(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1C27E1EC4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_19:
        __break(1u);
LABEL_20:
        __break(1u);
LABEL_21:
        __break(1u);
        JUMPOUT(0x1C27E2000);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_20;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v15 = 1;
            }
            else
            {
              sub_1C27E2B38(a3, a4);
              char v15 = sub_1C27E1BDC(a1, a2, a3, a4);
            }
          }
          else
          {
            char v15 = 0;
          }
          return v15 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_21;
        case 3uLL:
          char v15 = v8 == 0;
          return v15 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_19;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t _s16HealthExperience19ImageRepresentationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  sub_1C27CCDC8(0);
  uint64_t v75 = v4;
  uint64_t v73 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v71 = (char *)&v70 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27E3C7C(0);
  uint64_t v7 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v74 = (uint64_t)&v70 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CC580(0);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v72 = (uint64_t)&v70 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x1F4188790](v10);
  uint64_t v77 = (uint64_t)&v70 - v13;
  MEMORY[0x1F4188790](v12);
  uint64_t v76 = (uint64_t)&v70 - v14;
  uint64_t v15 = type metadata accessor for ImageRepresentation();
  uint64_t v16 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = (uint64_t *)((char *)&v70 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v19 = MEMORY[0x1F4188790](v16);
  uint64_t v21 = (uint64_t *)((char *)&v70 - v20);
  MEMORY[0x1F4188790](v19);
  int v23 = (uint64_t *)((char *)&v70 - v22);
  sub_1C27E3C9C(0);
  uint64_t v25 = MEMORY[0x1F4188790](v24 - 8);
  char v27 = (char *)&v70 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v28 = (uint64_t *)&v27[*(int *)(v25 + 56)];
  sub_1C27CCEA4(a1, (uint64_t)v27, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  sub_1C27CCEA4(a2, (uint64_t)v28, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1C27CCEA4((uint64_t)v27, (uint64_t)v23, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    uint64_t v40 = *v23;
    uint64_t v39 = v23[1];
    uint64_t v42 = v23[2];
    uint64_t v41 = v23[3];
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v53 = v28[2];
      uint64_t v52 = v28[3];
      if (v40 == *v28 && v39 == v28[1])
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v55 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v55 & 1) == 0)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_38:
          LOBYTE(v51) = 0;
          goto LABEL_39;
        }
      }
      if (v42 != v53 || v41 != v52)
      {
        int v65 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        int v51 = v65 << 31 >> 31;
        goto LABEL_39;
      }
      swift_bridgeObjectRelease_n();
      goto LABEL_31;
    }
    swift_bridgeObjectRelease();
LABEL_13:
    swift_bridgeObjectRelease();
LABEL_15:
    LOBYTE(v51) = 0;
    uint64_t v50 = (uint64_t (*)(void))sub_1C27E3C9C;
    goto LABEL_40;
  }
  if (EnumCaseMultiPayload == 1)
  {
    sub_1C27CCEA4((uint64_t)v27, (uint64_t)v21, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    uint64_t v31 = *v21;
    uint64_t v30 = v21[1];
    sub_1C27CC3FC();
    uint64_t v33 = *(int *)(v32 + 48);
    uint64_t v34 = (uint64_t)v21 + v33;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v36 = *v28;
      uint64_t v35 = v28[1];
      uint64_t v37 = v76;
      sub_1C27CC4B4(v34, v76, (uint64_t (*)(void))sub_1C27CC580);
      uint64_t v38 = v77;
      sub_1C27CC4B4((uint64_t)v28 + v33, v77, (uint64_t (*)(void))sub_1C27CC580);
      if (v31 == v36 && v30 == v35)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v56 = sub_1C28CE640();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v56 & 1) == 0)
        {
          sub_1C27CCDFC(v38, (uint64_t (*)(void))sub_1C27CC580);
          uint64_t v64 = v37;
          uint64_t v63 = sub_1C27CC580;
LABEL_37:
          sub_1C27CCDFC(v64, (uint64_t (*)(void))v63);
          goto LABEL_38;
        }
      }
      uint64_t v57 = v74;
      uint64_t v58 = v74 + *(int *)(v7 + 48);
      sub_1C27CCEA4(v37, v74, (uint64_t (*)(void))sub_1C27CC580);
      sub_1C27CCEA4(v38, v58, (uint64_t (*)(void))sub_1C27CC580);
      uint64_t v59 = v73;
      id v60 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v73 + 48);
      uint64_t v61 = v75;
      if (v60(v57, 1, v75) == 1)
      {
        sub_1C27CCDFC(v38, (uint64_t (*)(void))sub_1C27CC580);
        sub_1C27CCDFC(v37, (uint64_t (*)(void))sub_1C27CC580);
        if (v60(v58, 1, v61) == 1)
        {
          sub_1C27CCDFC(v57, (uint64_t (*)(void))sub_1C27CC580);
LABEL_31:
          LOBYTE(v51) = 1;
          goto LABEL_39;
        }
      }
      else
      {
        uint64_t v62 = v72;
        sub_1C27CCEA4(v57, v72, (uint64_t (*)(void))sub_1C27CC580);
        if (v60(v58, 1, v61) != 1)
        {
          uint64_t v67 = v71;
          (*(void (**)(char *, uint64_t, uint64_t))(v59 + 32))(v71, v58, v61);
          sub_1C27E3D1C(&qword_1EBB75840, (void (*)(void))sub_1C27E3D88);
          char v68 = sub_1C28CD6E0();
          uint64_t v69 = *(void (**)(char *, uint64_t))(v59 + 8);
          v69(v67, v61);
          sub_1C27CCDFC(v77, (uint64_t (*)(void))sub_1C27CC580);
          sub_1C27CCDFC(v37, (uint64_t (*)(void))sub_1C27CC580);
          v69((char *)v62, v61);
          sub_1C27CCDFC(v57, (uint64_t (*)(void))sub_1C27CC580);
          uint64_t v50 = (uint64_t (*)(void))type metadata accessor for ImageRepresentation;
          if (v68)
          {
            LOBYTE(v51) = 1;
            goto LABEL_40;
          }
          goto LABEL_38;
        }
        sub_1C27CCDFC(v77, (uint64_t (*)(void))sub_1C27CC580);
        sub_1C27CCDFC(v37, (uint64_t (*)(void))sub_1C27CC580);
        (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v62, v61);
      }
      uint64_t v63 = sub_1C27E3C7C;
      uint64_t v64 = v57;
      goto LABEL_37;
    }
    sub_1C27CCDFC((uint64_t)v21 + v33, (uint64_t (*)(void))sub_1C27CC580);
    goto LABEL_13;
  }
  sub_1C27CCEA4((uint64_t)v27, (uint64_t)v18, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  uint64_t v43 = *v18;
  unint64_t v44 = v18[1];
  uint64_t v45 = v18[2];
  if (swift_getEnumCaseMultiPayload() != 2)
  {
    sub_1C27E2870(v43, v44);
    goto LABEL_15;
  }
  uint64_t v46 = *v28;
  unint64_t v47 = v28[1];
  uint64_t v48 = v28[2];
  char v49 = sub_1C27E1EC4(v43, v44, *v28, v47);
  sub_1C27E2870(v46, v47);
  sub_1C27E2870(v43, v44);
  uint64_t v50 = (uint64_t (*)(void))type metadata accessor for ImageRepresentation;
  if (v49)
  {
    LOBYTE(v51) = v45 == v48;
LABEL_39:
    uint64_t v50 = (uint64_t (*)(void))type metadata accessor for ImageRepresentation;
    goto LABEL_40;
  }
  LOBYTE(v51) = 0;
LABEL_40:
  sub_1C27CCDFC((uint64_t)v27, v50);
  return v51 & 1;
}

uint64_t sub_1C27E2870(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_1C27E28C8()
{
  return sub_1C27CCE5C(&qword_1EA310118, (void (*)(uint64_t))sub_1C27CC5B4);
}

unint64_t sub_1C27E28FC()
{
  unint64_t result = qword_1EBB76338;
  if (!qword_1EBB76338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76338);
  }
  return result;
}

unint64_t sub_1C27E2950()
{
  unint64_t result = qword_1EBB76308;
  if (!qword_1EBB76308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76308);
  }
  return result;
}

unint64_t sub_1C27E29A4()
{
  unint64_t result = qword_1EBB76928;
  if (!qword_1EBB76928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76928);
  }
  return result;
}

void sub_1C27E29F8()
{
  if (!qword_1EA310120)
  {
    sub_1C27E2A68();
    sub_1C28CE170();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310120);
    }
  }
}

unint64_t sub_1C27E2A68()
{
  unint64_t result = qword_1EA310128;
  if (!qword_1EA310128)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310128);
  }
  return result;
}

unint64_t sub_1C27E2AA8()
{
  unint64_t result = qword_1EBB77060;
  if (!qword_1EBB77060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77060);
  }
  return result;
}

unint64_t sub_1C27E2AFC()
{
  unint64_t result = qword_1EA310130;
  if (!qword_1EA310130)
  {
    type metadata accessor for ImageRepresentation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310130);
  }
  return result;
}

uint64_t sub_1C27E2B38(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_1C27E2B90()
{
  return sub_1C27CCE5C(&qword_1EA310138, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
}

uint64_t *initializeBufferWithCopyOfBuffer for ImageRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v18 = *a2;
      unint64_t v19 = a2[1];
      sub_1C27E2B38(*a2, v19);
      *a1 = v18;
      a1[1] = v19;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      sub_1C27CC3FC();
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      sub_1C27CCDC8(0);
      uint64_t v13 = v12;
      uint64_t v14 = *(void *)(v12 - 8);
      uint64_t v15 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48);
      swift_bridgeObjectRetain();
      if (v15(v11, 1, v13))
      {
        sub_1C27CC580(0);
        memcpy(v10, v11, *(void *)(*(void *)(v16 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v10, v11, v13);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v13);
      }
    }
    else
    {
      uint64_t v20 = a2[1];
      *a1 = *a2;
      a1[1] = v20;
      uint64_t v21 = a2[2];
      uint64_t v22 = a2[3];
      a1[2] = v21;
      a1[3] = v22;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t *assignWithCopy for ImageRepresentation(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_1C27CCDFC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v14 = *a2;
      unint64_t v15 = a2[1];
      sub_1C27E2B38(*a2, v15);
      *a1 = v14;
      a1[1] = v15;
      a1[2] = a2[2];
    }
    else if (EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      sub_1C27CC3FC();
      uint64_t v6 = *(int *)(v5 + 48);
      uint64_t v7 = (char *)a1 + v6;
      uint64_t v8 = (char *)a2 + v6;
      sub_1C27CCDC8(0);
      uint64_t v10 = v9;
      uint64_t v11 = *(void *)(v9 - 8);
      uint64_t v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
      swift_bridgeObjectRetain();
      if (v12(v8, 1, v10))
      {
        sub_1C27CC580(0);
        memcpy(v7, v8, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
      }
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for ImageRepresentation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    sub_1C27CC3FC();
    uint64_t v7 = *(int *)(v6 + 48);
    uint64_t v8 = (char *)a1 + v7;
    uint64_t v9 = (char *)a2 + v7;
    sub_1C27CCDC8(0);
    uint64_t v11 = v10;
    uint64_t v12 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
    {
      sub_1C27CC580(0);
      memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *assignWithTake for ImageRepresentation(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C27CCDFC((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      sub_1C27CC3FC();
      uint64_t v7 = *(int *)(v6 + 48);
      uint64_t v8 = (char *)a1 + v7;
      uint64_t v9 = (char *)a2 + v7;
      sub_1C27CCDC8(0);
      uint64_t v11 = v10;
      uint64_t v12 = *(void *)(v10 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v9, 1, v10))
      {
        sub_1C27CC580(0);
        memcpy(v8, v9, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v8, v9, v11);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v8, 0, 1, v11);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ImageRepresentation(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ImageRepresentation(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

void sub_1C27E3310()
{
  uint64_t v2 = " ";
  sub_1C27CC580(319);
  if (v0 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    uint64_t v3 = &v1;
    uint64_t v4 = &unk_1C28D0838;
    swift_initEnumMetadataMultiPayload();
  }
}

ValueMetadata *type metadata accessor for ImageRepresentation.CodingKeys()
{
  return &type metadata for ImageRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for ImageRepresentation.BundleCodingKeys()
{
  return &type metadata for ImageRepresentation.BundleCodingKeys;
}

ValueMetadata *type metadata accessor for ImageRepresentation.SymbolCodingKeys()
{
  return &type metadata for ImageRepresentation.SymbolCodingKeys;
}

ValueMetadata *type metadata accessor for ImageRepresentation.PngDataCodingKeys()
{
  return &type metadata for ImageRepresentation.PngDataCodingKeys;
}

unint64_t sub_1C27E3454()
{
  unint64_t result = qword_1EA310140;
  if (!qword_1EA310140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310140);
  }
  return result;
}

unint64_t sub_1C27E34AC()
{
  unint64_t result = qword_1EA310148;
  if (!qword_1EA310148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310148);
  }
  return result;
}

unint64_t sub_1C27E3504()
{
  unint64_t result = qword_1EA310150;
  if (!qword_1EA310150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310150);
  }
  return result;
}

unint64_t sub_1C27E355C()
{
  unint64_t result = qword_1EA310158;
  if (!qword_1EA310158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310158);
  }
  return result;
}

unint64_t sub_1C27E35B4()
{
  unint64_t result = qword_1EBB76300;
  if (!qword_1EBB76300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76300);
  }
  return result;
}

unint64_t sub_1C27E360C()
{
  unint64_t result = qword_1EBB762F8;
  if (!qword_1EBB762F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB762F8);
  }
  return result;
}

unint64_t sub_1C27E3664()
{
  unint64_t result = qword_1EBB76318;
  if (!qword_1EBB76318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76318);
  }
  return result;
}

unint64_t sub_1C27E36BC()
{
  unint64_t result = qword_1EBB76310;
  if (!qword_1EBB76310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76310);
  }
  return result;
}

unint64_t sub_1C27E3714()
{
  unint64_t result = qword_1EBB76330;
  if (!qword_1EBB76330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76330);
  }
  return result;
}

unint64_t sub_1C27E376C()
{
  unint64_t result = qword_1EBB76328;
  if (!qword_1EBB76328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76328);
  }
  return result;
}

unint64_t sub_1C27E37C4()
{
  unint64_t result = qword_1EBB76348;
  if (!qword_1EBB76348)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76348);
  }
  return result;
}

unint64_t sub_1C27E381C()
{
  unint64_t result = qword_1EBB76340;
  if (!qword_1EBB76340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76340);
  }
  return result;
}

uint64_t sub_1C27E3870(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DB0B0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C27E3950(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C646E7562 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C6F626D7973 && a2 == 0xE600000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x61746144676E70 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_1C27E3A98(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1635017060 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656C616373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1C27E3B74(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1701667182 && a2 == 0xE400000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void sub_1C27E3C7C(uint64_t a1)
{
}

void sub_1C27E3C9C(uint64_t a1)
{
}

void sub_1C27E3CBC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C27E3D1C(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27CCDC8(255);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27E3D88()
{
  return sub_1C27CCE5C(&qword_1EBB75848, (void (*)(uint64_t))sub_1C27CC5B4);
}

uint64_t sub_1C27E3DC8()
{
  return 0;
}

uint64_t DataTypeContentConfiguration.validAfterFirstRestoreOnly.getter()
{
  return 0;
}

uint64_t DataTypeContentConfiguration.hkType.getter(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (*(uint64_t (**)(void))(a2 + 16))();
  unint64_t v3 = v2;
  if (!(v2 >> 62))
  {
    uint64_t result = *(void *)((v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (result) {
      goto LABEL_3;
    }
LABEL_8:
    swift_bridgeObjectRelease();
    sub_1C28CE120();
    swift_bridgeObjectRelease();
    v7[0] = 0xD000000000000022;
    v7[1] = 0x80000001C28DB350;
    sub_1C28CE830();
    unint64_t v3 = (unint64_t)v7;
    sub_1C28CD7C0();
    swift_bridgeObjectRelease();
    sub_1C28CE360();
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1C28CE3B0();
  if (!result) {
    goto LABEL_8;
  }
LABEL_3:
  if ((v3 & 0xC000000000000001) != 0)
  {
LABEL_9:
    id v5 = (id)MEMORY[0x1C875F6E0](0, v3);
    goto LABEL_6;
  }
  if (*(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    id v5 = *(id *)(v3 + 32);
LABEL_6:
    id v6 = v5;
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  __break(1u);
  return result;
}

uint64_t Collection<>.hkTypes.getter()
{
  sub_1C27E40BC();
  sub_1C27E4FD8(&qword_1EBB76D60, (void (*)(uint64_t))sub_1C27E40BC);
  unint64_t v0 = sub_1C28CD880();
  uint64_t v1 = sub_1C27E4CE0(v0, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, (unint64_t *)&qword_1EBB76B00, (void (*)(id *, uint64_t))sub_1C28265A8);
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_1C27C236C(v1, (uint64_t (*)(uint64_t *, void *, uint64_t, uint64_t))sub_1C27E42E0);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_1C27E4034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 32);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = v4(AssociatedTypeWitness, v3);
  *a1 = result;
  return result;
}

void sub_1C27E40BC()
{
  if (!qword_1EBB76D58)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76D58);
    }
  }
}

uint64_t DataTypeContentConfigurationContext.anchoredTypeState.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CC810();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DataTypeContentConfigurationContext.init(anchoredTypeState:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CC810();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

void *sub_1C27E41F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  sub_1C27D87FC();
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = _swift_stdlib_malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  void v3[3] = (2 * (v5 >> 3)) | 1;
  uint64_t v6 = sub_1C27E45EC((uint64_t)&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1C27D9684();
  if (v6 != v1)
  {
    __break(1u);
    return (void *)MEMORY[0x1E4FBC860];
  }
  return v3;
}

void *sub_1C27E42E0(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = a2;
  uint64_t v24 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1C28CE050();
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    sub_1C27D0EB4((unint64_t *)&qword_1EBB76B00, (unint64_t *)&qword_1EBB76D90);
    uint64_t result = (void *)sub_1C28CDB30();
    uint64_t v4 = v27;
    uint64_t v7 = v28;
    uint64_t v8 = v29;
    int64_t v9 = v30;
    unint64_t v10 = v31;
    if (v6) {
      goto LABEL_3;
    }
LABEL_36:
    uint64_t v11 = 0;
    goto LABEL_38;
  }
  int64_t v9 = 0;
  uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v7 = a4 + 56;
  uint64_t v8 = ~v19;
  uint64_t v20 = -v19;
  if (v20 < 64) {
    uint64_t v21 = ~(-1 << v20);
  }
  else {
    uint64_t v21 = -1;
  }
  unint64_t v10 = v21 & *(void *)(a4 + 56);
  if (!a2) {
    goto LABEL_36;
  }
LABEL_3:
  if (!a3)
  {
    uint64_t v11 = 0;
LABEL_38:
    uint64_t v22 = v24;
LABEL_41:
    *uint64_t v22 = v4;
    v22[1] = v7;
    v22[2] = v8;
    v22[3] = v9;
    v22[4] = v10;
    return (void *)v11;
  }
  if (a3 < 0) {
    goto LABEL_48;
  }
  uint64_t v11 = 0;
  int64_t v25 = (unint64_t)(v8 + 64) >> 6;
  uint64_t v23 = v8;
  while (1)
  {
    if (v4 < 0)
    {
      if (!sub_1C28CE080()) {
        goto LABEL_40;
      }
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      id v14 = v26;
      uint64_t result = (void *)swift_unknownObjectRelease();
      if (!v26) {
        goto LABEL_40;
      }
      goto LABEL_8;
    }
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_7;
    }
    int64_t v15 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      break;
    }
    if (v15 >= v25)
    {
      unint64_t v10 = 0;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v15);
    if (v16) {
      goto LABEL_23;
    }
    int64_t v17 = v9 + 2;
    if (v9 + 2 >= v25)
    {
      unint64_t v10 = 0;
      ++v9;
      goto LABEL_40;
    }
    unint64_t v16 = *(void *)(v7 + 8 * v17);
    if (!v16)
    {
      if (v9 + 3 >= v25) {
        goto LABEL_44;
      }
      unint64_t v16 = *(void *)(v7 + 8 * (v9 + 3));
      if (v16)
      {
        int64_t v15 = v9 + 3;
        goto LABEL_23;
      }
      int64_t v17 = v9 + 4;
      if (v9 + 4 >= v25)
      {
        unint64_t v10 = 0;
        v9 += 3;
        goto LABEL_40;
      }
      unint64_t v16 = *(void *)(v7 + 8 * v17);
      if (!v16)
      {
        int64_t v15 = v9 + 5;
        if (v9 + 5 >= v25)
        {
LABEL_44:
          unint64_t v10 = 0;
          int64_t v9 = v17;
          goto LABEL_40;
        }
        unint64_t v16 = *(void *)(v7 + 8 * v15);
        if (!v16)
        {
          int64_t v18 = v9 + 6;
          while (v25 != v18)
          {
            unint64_t v16 = *(void *)(v7 + 8 * v18++);
            if (v16)
            {
              int64_t v15 = v18 - 1;
              goto LABEL_23;
            }
          }
          unint64_t v10 = 0;
          int64_t v9 = v25 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    int64_t v15 = v17;
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v9 = v15;
LABEL_7:
    uint64_t result = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    id v14 = result;
    if (!result) {
      goto LABEL_40;
    }
LABEL_8:
    ++v11;
    *v6++ = v14;
    if (v11 == a3)
    {
      uint64_t v11 = a3;
LABEL_40:
      uint64_t v8 = v23;
      uint64_t v22 = v24;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

uint64_t sub_1C27E45EC(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    id v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    *uint64_t v11 = *(void *)(*(void *)(a4 + 56) + 8 * v16);
    if (v13 == v10)
    {
      swift_retain();
      goto LABEL_38;
    }
    ++v11;
    uint64_t result = swift_retain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of DataTypeContentConfiguration.hkTypes.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.modelUniqueIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.validAfterFirstRestoreOnly.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeRequest(generatorContext:configurationContext:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeRequestPublisher(generatorContext:upstreamContextPublisher:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of DataTypeContentConfiguration.makeUnanchoredChangePublishers(generatorContext:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t initializeBufferWithCopyOfBuffer for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for DataTypeContentConfigurationContext(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC810();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C27E4AD4);
}

uint64_t sub_1C27E4AD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DataTypeContentConfigurationContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C27E4B54);
}

uint64_t sub_1C27E4B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC810();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for DataTypeContentConfigurationContext()
{
  uint64_t result = qword_1EBB76C30;
  if (!qword_1EBB76C30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C27E4C10()
{
  uint64_t result = sub_1C28CC810();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of DataTypeContentConfigurationProviding.configurations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t sub_1C27E4CB0(unint64_t a1)
{
  return sub_1C27E4CE0(a1, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, &qword_1EBB73CC8, (void (*)(id *, uint64_t))sub_1C28265CC);
}

uint64_t sub_1C27E4CE0(unint64_t a1, unint64_t *a2, uint64_t a3, unint64_t *a4, void (*a5)(id *, uint64_t))
{
  unint64_t v9 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C28CE3B0();
    swift_bridgeObjectRelease();
  }
  sub_1C27D1C9C(0, a2);
  sub_1C27D0EB4(a4, a2);
  uint64_t result = sub_1C28CDB10();
  uint64_t v17 = result;
  if (v9)
  {
    swift_bridgeObjectRetain();
    uint64_t v11 = sub_1C28CE3B0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v11) {
      return v17;
    }
  }
  else
  {
    uint64_t v11 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v11) {
      return v17;
    }
  }
  if (v11 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v11; ++i)
      {
        uint64_t v13 = MEMORY[0x1C875F6E0](i, a1);
        a5(&v16, v13);
      }
    }
    else
    {
      int64_t v14 = (void **)(a1 + 32);
      do
      {
        unint64_t v15 = *v14++;
        a5(&v16, (uint64_t)v15);

        --v11;
      }
      while (v11);
    }
    return v17;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C27E4E60(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1C28CE3B0();
    swift_bridgeObjectRelease();
  }
  type metadata accessor for AdvertisableFeatureModel();
  sub_1C27E4FD8(&qword_1EA310160, (void (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel);
  uint64_t result = sub_1C28CDB10();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1C28CE3B0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = MEMORY[0x1C875F6E0](i, a1);
        sub_1C28268DC(&v9, v6);
        swift_release();
      }
    }
    else
    {
      uint64_t v7 = (uint64_t *)(a1 + 32);
      do
      {
        uint64_t v8 = *v7++;
        swift_retain();
        sub_1C28268DC(&v9, v8);
        swift_release();
        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C27E4FD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t Publishers.BufferWithAggregator.init(upstream:aggregationHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for Publishers.BufferWithAggregator();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t Publishers.BufferWithAggregator.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t *sub_1C27E50E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C27BE6A4(a1, a2, a3);
}

uint64_t sub_1C27E5138()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C27E5154()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1C28CDF70();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v8 - v4;
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC(v0 + 16, (uint64_t)&v11);
  sub_1C28CD050();
  sub_1C27CEA68((uint64_t)&v11);
  if (v10)
  {
    sub_1C27CAE60(&v9, (uint64_t)v15);
    uint64_t v11 = 1;
    long long v12 = 0u;
    long long v13 = 0u;
    char v14 = 2;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)&v11, v0 + 16);
    swift_endAccess();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v5, 1, 1, AssociatedTypeWitness);
    uint64_t v6 = v0 + *(void *)(*(void *)v0 + 160);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v6, v5, v2);
    swift_endAccess();
    sub_1C28CC630();
    __swift_project_boxed_opaque_existential_1(v15, v15[3]);
    sub_1C28CD020();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    sub_1C27CEB18((uint64_t)&v9);
    return sub_1C28CC630();
  }
}

uint64_t sub_1C27E53BC(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  long long v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v15 - v10;
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC((uint64_t)(v1 + 2), (uint64_t)v17);
  int v12 = v17[40];
  sub_1C27CEA68((uint64_t)v17);
  if (v12)
  {
    sub_1C28CC630();
    return sub_1C28CD080();
  }
  else
  {
    id v16 = (void (*)(char *, uint64_t))v2[9];
    char v14 = (char *)v2 + *(void *)(*v2 + 160);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v14, v5);
    v16(v9, a1);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(v11, 0, 1, AssociatedTypeWitness);
    swift_beginAccess();
    (*(void (**)(char *, char *, uint64_t))(v6 + 40))(v14, v11, v5);
    swift_endAccess();
    sub_1C27C06B4();
    sub_1C28CC630();
    return sub_1C28CD090();
  }
}

uint64_t sub_1C27E5648(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v4 = sub_1C28CD030();
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v13 - v7 + 16;
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC(v1 + 16, (uint64_t)v13);
  if (v14)
  {
    sub_1C27CEA68((uint64_t)v13);
    return sub_1C28CC630();
  }
  else
  {
    sub_1C27CAE60(v13, (uint64_t)v15);
    sub_1C27CE8A4((uint64_t)v15, (uint64_t)v13);
    char v14 = 1;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)v13, v1 + 16);
    swift_endAccess();
    uint64_t v10 = *(void *)(v4 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v8, a1, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v8, 0, 1, v4);
    uint64_t v11 = v2 + *(void *)(*(void *)v2 + 136);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v6 + 40))(v11, v8, v5);
    swift_endAccess();
    sub_1C27C06B4();
    sub_1C28CC630();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
}

uint64_t *sub_1C27E58F0()
{
  uint64_t v1 = *v0;
  sub_1C27CEA68((uint64_t)(v0 + 2));
  swift_release();
  swift_release();
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 136);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C28CD030();
  uint64_t v3 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 88) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 144));
  uint64_t v4 = (uint64_t)v0 + *(void *)(*v0 + 160);
  swift_getAssociatedTypeWitness();
  uint64_t v5 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  return v0;
}

uint64_t sub_1C27E5AD8()
{
  sub_1C27E58F0();

  return swift_deallocClassInstance();
}

uint64_t sub_1C27E5B2C(uint64_t a1)
{
  return sub_1C27E53BC(a1);
}

uint64_t sub_1C27E5B50(uint64_t a1)
{
  return sub_1C27E5648(a1);
}

uint64_t sub_1C27E5B74()
{
  return sub_1C28CCE60();
}

uint64_t sub_1C27E5B98()
{
  return sub_1C27E5154();
}

uint64_t sub_1C27E5BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 24);
}

uint64_t sub_1C27E5BC4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C27E5C60(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    int v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *int v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_1C27E5D58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_1C27E5DE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C27E5E60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_1C27E5EE4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C27E6030);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C27E6044(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C27E6224);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *unint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1C27E624C()
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C28CD030();
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_getAssociatedTypeWitness();
      uint64_t result = sub_1C28CDF70();
      if (v3 <= 0x3F) {
        return swift_initClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_1C27E641C@<X0>(uint64_t a1@<X8>)
{
  unint64_t v2 = v1;
  uint64_t v24 = *v1;
  uint64_t v25 = a1;
  uint64_t v3 = sub_1C28CE780();
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  MEMORY[0x1F4188790](v3);
  unsigned int v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27CEC08(0, &qword_1EA310168, MEMORY[0x1E4FBC420], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unsigned int v8 = (char *)&v21 - v7;
  sub_1C28CC620();
  uint64_t v26 = v1;
  sub_1C27CEC08(0, &qword_1EA310170, (uint64_t (*)(uint64_t))sub_1C27E6AA4, MEMORY[0x1E4FBBE00]);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_1C28D0DA0;
  *(void *)(v9 + 32) = 0xD000000000000017;
  *(void *)(v9 + 40) = 0x80000001C28DB3E0;
  unint64_t v10 = (char *)v2 + *(void *)(*v2 + 160);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_1C28CDF70();
  *(void *)(v9 + 72) = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 48));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(boxed_opaque_existential_0, v10, v11);
  *(void *)(v9 + 80) = 0x6574617473;
  *(void *)(v9 + 88) = 0xE500000000000000;
  swift_beginAccess();
  *(void *)(v9 + 120) = MEMORY[0x1E4F67530];
  uint64_t v13 = swift_allocObject();
  *(void *)(v9 + 96) = v13;
  sub_1C27CEABC((uint64_t)(v2 + 2), v13 + 16);
  strcpy((char *)(v9 + 128), "pendingDemand");
  *(_WORD *)(v9 + 142) = -4864;
  uint64_t v14 = (void *)((char *)v2 + *(void *)(*v2 + 152));
  swift_beginAccess();
  uint64_t v15 = MEMORY[0x1E4F1AAD8];
  *(void *)(v9 + 144) = *v14;
  *(void *)(v9 + 168) = v15;
  *(void *)(v9 + 176) = 0xD000000000000012;
  *(void *)(v9 + 184) = 0x80000001C28DB3B0;
  int v16 = (char *)v2 + *(void *)(*v2 + 136);
  swift_beginAccess();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C28CD030();
  uint64_t v17 = sub_1C28CDF70();
  *(void *)(v9 + 216) = v17;
  unint64_t v18 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 192));
  (*(void (**)(uint64_t *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v18, v16, v17);
  uint64_t v19 = sub_1C28CE770();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v8, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v22 + 104))(v5, *MEMORY[0x1E4FBC430], v23);
  swift_retain();
  sub_1C28CE7B0();
  return sub_1C28CC630();
}

uint64_t sub_1C27E68F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *MEMORY[0x1E4FBC430];
  uint64_t v3 = sub_1C28CE780();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

void sub_1C27E6964(void *a1@<X8>)
{
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = 0xD000000000000022;
  a1[1] = 0x80000001C28DB400;
}

unint64_t sub_1C27E6990()
{
  return 0xD000000000000022;
}

uint64_t sub_1C27E69AC@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27E641C(a1);
}

void sub_1C27E69D0(void *a1@<X8>)
{
}

uint64_t sub_1C27E69F4()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27E6A10()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27E6A2C()
{
  return swift_getAssociatedConformanceWitness();
}

unint64_t sub_1C27E6A4C()
{
  unint64_t result = qword_1EBB76D38;
  if (!qword_1EBB76D38)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB76D38);
  }
  return result;
}

void sub_1C27E6AA4()
{
  if (!qword_1EBB74070)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB74070);
    }
  }
}

uint64_t sub_1C27E6B10()
{
  if (*(unsigned __int8 *)(v0 + 56) <= 1u) {
    __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);
  }

  return swift_deallocObject();
}

uint64_t Publishers.BindDaemonTransaction.init(_:name:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for Publishers.BindDaemonTransaction();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t *sub_1C27E6BE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C27CEE58(a1, a2, a3);
}

uint64_t sub_1C27E6C38()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C27E6CD0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_1C27E6DD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C27E6E5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C27E6EF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1C27E6F7C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C27E70C8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C27E70DC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x1C27E72BCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *unint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1C27E72E4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C27E73A4()
{
  return sub_1C28CD010();
}

uint64_t sub_1C27E740C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC620();
  uint64_t v6 = v1 + *(void *)(*(void *)v1 + 144);
  swift_beginAccess();
  sub_1C27CEABC(v6, (uint64_t)&v22);
  sub_1C28CD050();
  sub_1C27CEA68((uint64_t)&v22);
  uint64_t v22 = 1;
  long long v23 = 0u;
  long long v24 = 0u;
  char v25 = 2;
  swift_beginAccess();
  sub_1C27CE908((uint64_t)&v22, v6);
  swift_endAccess();
  id v7 = *(id *)(v1 + *(void *)(*(void *)v1 + 128));
  sub_1C28CC630();
  sub_1C27CEBA4((uint64_t)v26, (uint64_t)&v22);
  if ((void)v24)
  {
    __swift_project_boxed_opaque_existential_1(&v22, v24);
    sub_1C28CD020();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v22);
  }
  else
  {
    sub_1C27CEB18((uint64_t)&v22);
  }
  sub_1C28CC620();
  objc_msgSend(v7, sel_invalidate);
  sub_1C28CC630();
  sub_1C28CCDC0();
  swift_retain_n();
  unsigned int v8 = sub_1C28CCE00();
  os_log_type_t v9 = sub_1C28CDCD0();
  if (os_log_type_enabled(v8, v9))
  {
    unint64_t v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = swift_slowAlloc();
    uint64_t v20 = v2;
    uint64_t v12 = v11;
    uint64_t v22 = v11;
    uint64_t v19 = v5;
    *(_DWORD *)unint64_t v10 = 136315138;
    unsigned int v13 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 120));
    id v18 = v7;
    uint64_t v14 = *v13;
    unint64_t v15 = v13[1];
    swift_bridgeObjectRetain();
    uint64_t v21 = sub_1C27D36AC(v14, v15, &v22);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v8, v9, "[BindDaemonTransaction] Stream cancelled, invalidated daemon transaction with name: %s", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v12, -1, -1);
    MEMORY[0x1C87609B0](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v19, v20);
  }
  else
  {

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1C27CEB18((uint64_t)v26);
}

uint64_t sub_1C27E77A4()
{
  return sub_1C27E73A4();
}

uint64_t sub_1C27E77C8()
{
  return sub_1C27E740C();
}

uint64_t sub_1C27E77EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27E7808()
{
  return swift_getWitnessTable();
}

id NotificationContactPhoto.sourceProfile.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

uint64_t NotificationContactPhoto.fileName.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t NotificationContactPhoto.expectedAttachmentURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NotificationContactPhoto();
  return sub_1C27EAE74(v1 + *(int *)(v3 + 24), a1, (uint64_t (*)(void))sub_1C27C3244);
}

uint64_t type metadata accessor for NotificationContactPhoto()
{
  uint64_t result = qword_1EA310180;
  if (!qword_1EA310180) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t NotificationContactPhoto.directory.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for NotificationContactPhoto();
  return sub_1C27EAE74(v1 + *(int *)(v3 + 28), a1, (uint64_t (*)(void))sub_1C27C3244);
}

id NotificationContactPhoto.fileManager.getter()
{
  uint64_t v1 = *(void **)(v0 + *(int *)(type metadata accessor for NotificationContactPhoto() + 32));

  return v1;
}

uint64_t NotificationContactPhoto.extensionType.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for NotificationContactPhoto() + 36);
  uint64_t v4 = sub_1C28CCD00();
  unsigned int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t NotificationContactPhoto.init(sourceProfile:)@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v46 = a1;
  uint64_t v3 = sub_1C28CC330();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v43 = (char *)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  unint64_t v44 = (char *)&v43 - v7;
  unint64_t v47 = (void *)sub_1C28CBF50();
  uint64_t v51 = *(v47 - 1);
  uint64_t v8 = MEMORY[0x1F4188790](v47);
  unint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v43 - v11;
  uint64_t v13 = sub_1C28CCE10();
  MEMORY[0x1F4188790](v13 - 8);
  sub_1C27C3244();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v52 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v43 - v17;
  uint64_t v19 = (int *)type metadata accessor for NotificationContactPhoto();
  uint64_t v54 = (char *)a2 + v19[7];
  sub_1C28CC790();
  static StorageLocations.notificationAssetsDirectory.getter((uint64_t)v18);
  uint64_t v20 = v3;
  char v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48);
  int v21 = v49(v18, 1, v3);
  uint64_t v53 = v4;
  uint64_t v50 = v4 + 48;
  uint64_t v48 = v3;
  if (v21 == 1)
  {
    sub_1C27EAFBC((uint64_t)v18, (uint64_t (*)(void))sub_1C27C3244);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    long long v23 = v54;
    uint64_t v24 = 1;
  }
  else
  {
    char v25 = v54;
    sub_1C28CC2D0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v18, v20);
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 56);
    long long v23 = v25;
    uint64_t v24 = 0;
  }
  uint64_t v45 = v22;
  v22((uint64_t)v23, v24, 1, v20);
  uint64_t v27 = v46;
  uint64_t v26 = v47;
  uint64_t v28 = v19[8];
  *(void *)((char *)a2 + v28) = objc_msgSend(self, sel_defaultManager);
  uint64_t v46 = (char *)a2 + v19[9];
  sub_1C28CCCF0();
  *(void *)((char *)a2 + v19[10]) = 0x4062C00000000000;
  sub_1C28CCD80();
  sub_1C28CCD40();
  *a2 = v27;
  unint64_t v47 = v27;
  uint64_t v55 = sub_1C28CC6C0();
  uint64_t v56 = v29;
  sub_1C28CBF10();
  sub_1C28CBF40();
  int64_t v30 = *(void (**)(char *, void *))(v51 + 8);
  v30(v12, v26);
  sub_1C27D633C();
  uint64_t v31 = sub_1C28CDFB0();
  v30(v10, v26);
  uint64_t v55 = v31;
  sub_1C27E963C();
  sub_1C27EAF74((unint64_t *)&qword_1EBB76A08, (void (*)(uint64_t))sub_1C27E963C);
  uint64_t v32 = sub_1C28CD690();
  uint64_t v34 = v33;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a2[1] = v32;
  a2[2] = v34;
  uint64_t v35 = v48;
  if (v49(v54, 1, v48))
  {

    uint64_t v36 = 1;
    uint64_t v37 = (uint64_t)v52;
  }
  else
  {
    uint64_t v38 = v53;
    uint64_t v39 = v43;
    (*(void (**)(char *, char *, uint64_t))(v53 + 16))(v43, v54, v35);
    swift_bridgeObjectRetain();
    uint64_t v40 = v44;
    sub_1C28CC2E0();
    swift_bridgeObjectRelease();
    uint64_t v41 = *(void (**)(char *, uint64_t))(v38 + 8);
    v41(v39, v35);
    uint64_t v37 = (uint64_t)v52;
    sub_1C28CC2C0();

    v41(v40, v35);
    uint64_t v36 = 0;
  }
  v45(v37, v36, 1, v35);
  return sub_1C27C31E0(v37, (uint64_t)a2 + v19[6]);
}

void *sub_1C27E7FA8(void *a1, double a2, double a3)
{
  uint64_t v6 = v4;
  uint64_t v7 = v3;
  uint64_t v11 = type metadata accessor for NotificationContactPhoto();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  uint64_t v14 = (char *)&v46 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v46 - v15;
  uint64_t v17 = sub_1C28CCE10();
  uint64_t v50 = *(void *)(v17 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v46 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v46 - v21;
  id v23 = objc_msgSend(a1, sel_thumbnailImageData);
  if (!v23)
  {
    sub_1C28CCDC0();
    sub_1C27EAE74(v7, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
    uint64_t v34 = sub_1C28CCE00();
    os_log_type_t v35 = sub_1C28CDCD0();
    BOOL v36 = os_log_type_enabled(v34, v35);
    uint64_t v48 = v4;
    if (v36)
    {
      uint64_t v49 = v17;
      uint64_t v37 = (uint8_t *)swift_slowAlloc();
      uint64_t v5 = (void *)swift_slowAlloc();
      uint64_t v52 = v5;
      *(_DWORD *)uint64_t v37 = 136315138;
      unint64_t v47 = v37 + 4;
      uint64_t v38 = sub_1C28CC6C0();
      uint64_t v51 = sub_1C27D36AC(v38, v39, (uint64_t *)&v52);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27EAFBC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
      _os_log_impl(&dword_1C27B7000, v34, v35, "[Contact Photo] Using photoOrMonogram method for %s", v37, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v5, -1, -1);
      MEMORY[0x1C87609B0](v37, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v49);
    }
    else
    {
      sub_1C27EAFBC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v20, v17);
    }
    Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(*(unint64_t *)&a3, *(unint64_t *)&a2)).super.isa;
    id v42 = [(objc_class *)isa CGImage];

    if (!v42)
    {
      sub_1C27EAE20();
      swift_allocError();
      unsigned char *v44 = 0;
      swift_willThrow();
      return v5;
    }
    goto LABEL_14;
  }
  uint64_t v5 = v23;
  uint64_t v49 = v17;
  uint64_t v24 = sub_1C28CC390();
  unint64_t v26 = v25;

  sub_1C28CCDC0();
  sub_1C27EAE74(v7, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
  uint64_t v27 = sub_1C28CCE00();
  os_log_type_t v28 = sub_1C28CDCD0();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v48 = v4;
    uint64_t v29 = swift_slowAlloc();
    unint64_t v47 = (uint8_t *)v24;
    int64_t v30 = (uint8_t *)v29;
    uint64_t v5 = (void *)swift_slowAlloc();
    uint64_t v52 = v5;
    *(_DWORD *)int64_t v30 = 136315138;
    unint64_t v46 = v26;
    uint64_t v31 = sub_1C28CC6C0();
    uint64_t v51 = sub_1C27D36AC(v31, v32, (uint64_t *)&v52);
    unint64_t v26 = v46;
    sub_1C28CDF90();
    uint64_t v6 = v48;
    swift_bridgeObjectRelease();
    sub_1C27EAFBC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
    _os_log_impl(&dword_1C27B7000, v27, v28, "[Contact Photo] Using thumbnailImageData method for %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v5, -1, -1);
    uint64_t v33 = v30;
    uint64_t v24 = (uint64_t)v47;
    MEMORY[0x1C87609B0](v33, -1, -1);
  }
  else
  {
    sub_1C27EAFBC((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
  }

  (*(void (**)(char *, uint64_t))(v50 + 8))(v22, v49);
  if (a2 > a3) {
    double v40 = a2;
  }
  else {
    double v40 = a3;
  }
  sub_1C28911A0(v40, v40);
  id v42 = v41;
  sub_1C27E2870(v24, v26);
  if (!v6)
  {
LABEL_14:
    uint64_t v5 = CGImageRef.circularCrop()();
  }
  return v5;
}

uint64_t NotificationContactPhoto.generateAndSaveImage(for:size:)@<X0>(uint8_t *a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v34 = a1;
  double v33 = a3;
  double v31 = a2;
  uint64_t v29 = a5;
  int v30 = a4 & 1;
  sub_1C27C3244();
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v28 = (uint64_t)&v27 - v10;
  uint64_t v37 = sub_1C28CCD30();
  uint64_t v36 = *(void *)(v37 - 8);
  MEMORY[0x1F4188790](v37);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C28CCD60();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v5 + *(int *)(type metadata accessor for NotificationContactPhoto() + 44);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v32 = v13;
  v18(v16, v17, v13);
  sub_1C28CCD20();
  uint64_t v19 = (uint8_t *)swift_slowAlloc();
  *(_WORD *)uint64_t v19 = 0;
  uint64_t v20 = sub_1C28CCD50();
  LOBYTE(v13) = sub_1C28CDEB0();
  os_signpost_id_t v21 = sub_1C28CCD10();
  _os_signpost_emit_with_name_impl(&dword_1C27B7000, v20, (os_signpost_type_t)v13, v21, "NotificationContactPhotoSaveImage", "", v19, 2u);
  uint64_t v27 = v9;
  uint64_t v22 = v35;
  sub_1C27E8838(v5, v31, v33, v30, v34, v9);
  if (v22)
  {
  }
  else
  {
    os_signpost_type_t v23 = sub_1C28CDEA0();
    os_signpost_id_t v24 = sub_1C28CCD10();
    _os_signpost_emit_with_name_impl(&dword_1C27B7000, v20, v23, v24, "NotificationContactPhotoSaveImage", "", v19, 2u);

    uint64_t v25 = v28;
    sub_1C27C31E0((uint64_t)v27, v28);
    MEMORY[0x1C87609B0](v19, -1, -1);
    sub_1C27C31E0(v25, v29);
  }
  (*(void (**)(char *, uint64_t))(v36 + 8))(v12, v37);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v32);
}

void sub_1C27E8838(uint64_t a1@<X0>, double a2@<X1>, double a3@<X2>, char a4@<W3>, uint8_t *a5@<X4>, char *a6@<X8>)
{
  uint64_t v57 = a5;
  double v55 = a2;
  double v56 = a3;
  uint64_t v52 = a6;
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v50 = *(void *)(v8 - 8);
  uint64_t v51 = v8;
  MEMORY[0x1F4188790](v8);
  uint64_t v54 = (char *)&v48 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = type metadata accessor for NotificationContactPhoto();
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  uint64_t v53 = (uint64_t)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - v13;
  sub_1C27C3244();
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1C28CC330();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  os_signpost_id_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27EAE74(a1 + *(int *)(v10 + 24), (uint64_t)v17, (uint64_t (*)(void))sub_1C27C3244);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1C27EAFBC((uint64_t)v17, (uint64_t (*)(void))sub_1C27C3244);
    sub_1C27EAE20();
    swift_allocError();
    *uint64_t v22 = 1;
    swift_willThrow();
    return;
  }
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v19 + 32);
  uint64_t v49 = v21;
  v48(v21, v17, v18);
  sub_1C27EAE74(a1, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
  if (a4)
  {
    double v23 = *(double *)&v14[*(int *)(v10 + 40)];
    double v24 = v23;
  }
  else
  {
    double v24 = v55;
    double v23 = v56;
  }
  uint64_t v25 = v57;
  id v26 = v58;
  sub_1C27EAFBC((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
  uint64_t v27 = sub_1C27E7FA8(v25, v24, v23);
  if (v26)
  {
    (*(void (**)(char *, uint64_t))(v19 + 8))(v49, v18);
    return;
  }
  uint64_t v28 = v27;
  uint64_t v29 = sub_1C27E8EFC();
  if (v30)
  {
    uint64_t v31 = v29;
    uint64_t v32 = v28;
    CGImageRef v33 = CGImageRef.circularCrop()();
    if (v34)
    {
      (*(void (**)(char *, uint64_t))(v19 + 8))(v49, v18);

      return;
    }
    CGImageRef v45 = v33;
    id v58 = v32;
    uint64_t v46 = (uint64_t)v49;
    CGImageRef.write(to:imageType:)((uint64_t)v49);
    uint64_t v60 = v31;
    MEMORY[0x1F4188790](v47);
    *(&v48 - 4) = (void (*)(char *, char *, uint64_t))&v60;
    *(&v48 - 3) = (void (*)(char *, char *, uint64_t))0xD000000000000011;
    *(&v48 - 2) = (void (*)(char *, char *, uint64_t))0x80000001C28DB4B0;
    sub_1C28CC300();

    unint64_t v44 = v52;
    v48(v52, (char *)v46, v18);
    uint64_t v43 = 0;
  }
  else
  {
    uint64_t v35 = v54;
    sub_1C28CCDC0();
    uint64_t v36 = v53;
    sub_1C27EAE74(a1, v53, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
    uint64_t v37 = sub_1C28CCE00();
    os_log_type_t v38 = sub_1C28CDCD0();
    if (os_log_type_enabled(v37, v38))
    {
      unint64_t v39 = (uint8_t *)swift_slowAlloc();
      uint64_t v40 = swift_slowAlloc();
      uint64_t v60 = v40;
      id v58 = v28;
      *(_DWORD *)unint64_t v39 = 136315138;
      uint64_t v57 = v39 + 4;
      uint64_t v41 = sub_1C28CC6C0();
      uint64_t v59 = sub_1C27D36AC(v41, v42, &v60);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27EAFBC(v53, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
      _os_log_impl(&dword_1C27B7000, v37, v38, "[Contact Photo] Omitting image processing and file write: fetched contact image is identical to existing image for %s", v39, 0xCu);
      uint64_t v43 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v40, -1, -1);
      MEMORY[0x1C87609B0](v39, -1, -1);

      (*(void (**)(char *, uint64_t))(v50 + 8))(v54, v51);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v49, v18);
    }
    else
    {

      sub_1C27EAFBC(v36, (uint64_t (*)(void))type metadata accessor for NotificationContactPhoto);
      (*(void (**)(char *, uint64_t))(v50 + 8))(v35, v51);
      (*(void (**)(char *, uint64_t))(v19 + 8))(v49, v18);
      uint64_t v43 = 1;
    }
    unint64_t v44 = v52;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56))(v44, v43, 1, v18);
}

uint64_t sub_1C27E8EFC()
{
  uint64_t v1 = sub_1C28CCE10();
  uint64_t v38 = *(void *)(v1 - 8);
  uint64_t v39 = v1;
  uint64_t v2 = MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v2);
  uint64_t v37 = (char *)&v37 - v5;
  uint64_t v6 = type metadata accessor for NSFileManager.ExtendedAttributeError();
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char **)((char *)&v37 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C27C3244();
  MEMORY[0x1F4188790](v9 - 8);
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC330();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Hash = CGImageGetHash();
  uint64_t v16 = type metadata accessor for NotificationContactPhoto();
  sub_1C27EAE74(v0 + *(int *)(v16 + 24), (uint64_t)v11, (uint64_t (*)(void))sub_1C27C3244);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v19 = (*(uint64_t (**)(char *, char *, uint64_t))(v13 + 32))(v15, v11, v12);
    MEMORY[0x1F4188790](v19);
    *(&v37 - 2) = (char *)0xD000000000000011;
    *(&v37 - 1) = (char *)0x80000001C28DB4B0;
    sub_1C28CC300();
    sub_1C27E2870((uint64_t)v41[0], (unint64_t)v41[1]);
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    return Hash;
  }
  sub_1C27EAFBC((uint64_t)v11, (uint64_t (*)(void))sub_1C27C3244);
  sub_1C27EAE20();
  uint64_t v17 = (void *)swift_allocError();
  *uint64_t v18 = 1;
  swift_willThrow();
  v41[0] = v17;
  id v20 = v17;
  sub_1C27C7060();
  if (!swift_dynamicCast()) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    if (*v8 == 0xD000000000000011 && v8[1] == 0x80000001C28DB4B0)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      char v32 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      if ((v32 & 1) == 0) {
        goto LABEL_7;
      }
    }
    CGImageRef v33 = v37;
    sub_1C28CCDC0();
    uint64_t v34 = sub_1C28CCE00();
    os_log_type_t v35 = sub_1C28CDCD0();
    if (os_log_type_enabled(v34, v35))
    {
      uint64_t v36 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v36 = 0;
      _os_log_impl(&dword_1C27B7000, v34, v35, "[Contact Photo] Unable to find existing image hash attribute", v36, 2u);
      MEMORY[0x1C87609B0](v36, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v33, v39);

    return Hash;
  }
  sub_1C27EAFBC((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for NSFileManager.ExtendedAttributeError);
LABEL_7:

  sub_1C28CCDC0();
  id v22 = v17;
  id v23 = v17;
  double v24 = sub_1C28CCE00();
  os_log_type_t v25 = sub_1C28CDCB0();
  if (os_log_type_enabled(v24, v25))
  {
    id v26 = (uint8_t *)swift_slowAlloc();
    uint64_t v27 = (void *)swift_slowAlloc();
    v41[0] = v27;
    *(_DWORD *)id v26 = 136315138;
    uint64_t v42 = (uint64_t)v17;
    id v28 = v17;
    uint64_t v29 = sub_1C28CD760();
    uint64_t v42 = sub_1C27D36AC(v29, v30, (uint64_t *)v41);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v24, v25, "[Contact Photo] Unexpected error accessing image hash attribute: %s", v26, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v27, -1, -1);
    MEMORY[0x1C87609B0](v26, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v38 + 8))(v4, v39);
  return Hash;
}

BOOL static NotificationContactPhoto.ContactPhotoError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t NotificationContactPhoto.ContactPhotoError.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t NotificationContactPhoto.ContactPhotoError.hashValue.getter()
{
  return sub_1C28CE740();
}

void sub_1C27E963C()
{
  if (!qword_1EBB76F58)
  {
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76F58);
    }
  }
}

void sub_1C27E9694(const char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v14[1] = *MEMORY[0x1E4F143B8];
  v14[0] = a2;
  uint64_t v7 = sub_1C28CD770();
  int v8 = setxattr(a1, (const char *)(v7 + 32), v14, 8uLL, 0, 0);
  swift_release();
  if (v8 < 0)
  {
    type metadata accessor for NSFileManager.ExtendedAttributeError();
    sub_1C27EAF74(&qword_1EA310198, (void (*)(uint64_t))type metadata accessor for NSFileManager.ExtendedAttributeError);
    uint64_t v9 = (void *)swift_allocError();
    *uint64_t v10 = a3;
    v10[1] = a4;
    v10[2] = v8;
    uint64_t v11 = swift_bridgeObjectRetain();
    MEMORY[0x1C875E3D0](v11);
    uint64_t v12 = sub_1C28CCE20();
    if ((v12 & 0x100000000) != 0)
    {

      __break(1u);
    }
    else
    {
      int v13 = v12;
      sub_1C27EAF00();
      sub_1C28CBE50();
      LODWORD(v14[0]) = v13;
      sub_1C287918C(MEMORY[0x1E4FBC860]);
      sub_1C27EAF74(&qword_1EA3101A8, MEMORY[0x1E4F26C30]);
      sub_1C28CC270();
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
    }
  }
}

unint64_t sub_1C27E9870()
{
  unint64_t result = qword_1EA310178;
  if (!qword_1EA310178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310178);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for NotificationContactPhoto(char *a1, char **a2, int *a3)
{
  int v3 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  uint64_t v4 = *a2;
  *(void *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    uint64_t v7 = &v4[(v3 + 16) & ~(unint64_t)v3];
    swift_retain();
  }
  else
  {
    uint64_t v7 = a1;
    int v8 = a2[2];
    *((void *)a1 + 1) = a2[1];
    *((void *)a1 + 2) = v8;
    uint64_t v9 = a3[6];
    __dst = &a1[v9];
    uint64_t v10 = (char *)a2 + v9;
    uint64_t v11 = sub_1C28CC330();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
    uint64_t v14 = v4;
    uint64_t v15 = v13;
    swift_bridgeObjectRetain();
    if (v13(v10, 1, v11))
    {
      sub_1C27C3244();
      memcpy(__dst, v10, *(void *)(*(void *)(v16 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(__dst, v10, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(__dst, 0, 1, v11);
    }
    uint64_t v17 = a3[7];
    uint64_t v18 = &v7[v17];
    uint64_t v19 = (char *)a2 + v17;
    if (v15((char *)a2 + v17, 1, v11))
    {
      sub_1C27C3244();
      memcpy(v18, v19, *(void *)(*(void *)(v20 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v18, v19, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
    }
    uint64_t v21 = a3[8];
    uint64_t v22 = a3[9];
    id v23 = *(char **)((char *)a2 + v21);
    *(void *)&v7[v21] = v23;
    double v24 = &v7[v22];
    uint64_t v25 = (uint64_t)a2 + v22;
    uint64_t v26 = sub_1C28CCD00();
    uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v26 - 8) + 16);
    id v28 = v23;
    v27(v24, v25, v26);
    uint64_t v29 = a3[11];
    *(void *)&v7[a3[10]] = *(char **)((char *)a2 + a3[10]);
    unint64_t v30 = &v7[v29];
    uint64_t v31 = (uint64_t)a2 + v29;
    uint64_t v32 = sub_1C28CCD60();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v7;
}

uint64_t destroy for NotificationContactPhoto(id *a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = (char *)a1 + a2[6];
  uint64_t v5 = sub_1C28CC330();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48);
  if (!v7(v4, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  }
  int v8 = (char *)a1 + a2[7];
  if (!v7(v8, 1, v5)) {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }

  uint64_t v9 = (char *)a1 + a2[9];
  uint64_t v10 = sub_1C28CCD00();
  (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
  uint64_t v11 = (char *)a1 + a2[11];
  uint64_t v12 = sub_1C28CCD60();
  int v13 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8);

  return v13(v11, v12);
}

void *initializeWithCopy for NotificationContactPhoto(void *a1, uint64_t a2, int *a3)
{
  uint64_t v7 = *(void **)a2;
  uint64_t v6 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v6;
  a1[2] = *(void *)(a2 + 16);
  uint64_t v8 = a3[6];
  __dst = (char *)a1 + v8;
  uint64_t v9 = (const void *)(a2 + v8);
  uint64_t v10 = sub_1C28CC330();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v11 + 48);
  id v13 = v7;
  swift_bridgeObjectRetain();
  if (v12(v9, 1, v10))
  {
    sub_1C27C3244();
    memcpy(__dst, v9, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(__dst, v9, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(__dst, 0, 1, v10);
  }
  uint64_t v15 = a3[7];
  uint64_t v16 = (char *)a1 + v15;
  uint64_t v17 = (const void *)(a2 + v15);
  if (v12((const void *)(a2 + v15), 1, v10))
  {
    sub_1C27C3244();
    memcpy(v16, v17, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, const void *, uint64_t))(v11 + 16))(v16, v17, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v16, 0, 1, v10);
  }
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = *(void **)(a2 + v19);
  *(void *)((char *)a1 + v19) = v21;
  uint64_t v22 = (char *)a1 + v20;
  uint64_t v23 = a2 + v20;
  uint64_t v24 = sub_1C28CCD00();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 16);
  id v26 = v21;
  v25(v22, v23, v24);
  uint64_t v27 = a3[11];
  *(void *)((char *)a1 + a3[10]) = *(void *)(a2 + a3[10]);
  id v28 = (char *)a1 + v27;
  uint64_t v29 = a2 + v27;
  uint64_t v30 = sub_1C28CCD60();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

uint64_t assignWithCopy for NotificationContactPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  uint64_t v7 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v8 = v7;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = a3[6];
  uint64_t v10 = (void *)(a1 + v9);
  uint64_t v11 = (void *)(a2 + v9);
  uint64_t v12 = sub_1C28CC330();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v10, v11, v12);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    (*(void (**)(void *, uint64_t))(v13 + 8))(v10, v12);
LABEL_6:
    sub_1C27C3244();
    memcpy(v10, v11, *(void *)(*(void *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v10, v11, v12);
LABEL_7:
  uint64_t v18 = a3[7];
  uint64_t v19 = (void *)(a1 + v18);
  uint64_t v20 = (void *)(a2 + v18);
  int v21 = v14((void *)(a1 + v18), 1, v12);
  int v22 = v14(v20, 1, v12);
  if (!v21)
  {
    if (!v22)
    {
      (*(void (**)(void *, void *, uint64_t))(v13 + 24))(v19, v20, v12);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v13 + 8))(v19, v12);
    goto LABEL_12;
  }
  if (v22)
  {
LABEL_12:
    sub_1C27C3244();
    memcpy(v19, v20, *(void *)(*(void *)(v23 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, void *, uint64_t))(v13 + 16))(v19, v20, v12);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v13 + 56))(v19, 0, 1, v12);
LABEL_13:
  uint64_t v24 = a3[8];
  uint64_t v25 = *(void **)(a2 + v24);
  id v26 = *(void **)(a1 + v24);
  *(void *)(a1 + v24) = v25;
  id v27 = v25;

  uint64_t v28 = a3[9];
  uint64_t v29 = a1 + v28;
  uint64_t v30 = a2 + v28;
  uint64_t v31 = sub_1C28CCD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v31 - 8) + 24))(v29, v30, v31);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v32 = a3[11];
  uint64_t v33 = a1 + v32;
  uint64_t v34 = a2 + v32;
  uint64_t v35 = sub_1C28CCD60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

uint64_t initializeWithTake for NotificationContactPhoto(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v6 = a3[6];
  uint64_t v7 = (void *)(a1 + v6);
  id v8 = (const void *)(a2 + v6);
  uint64_t v9 = sub_1C28CC330();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v10 + 48);
  if (v11(v8, 1, v9))
  {
    sub_1C27C3244();
    memcpy(v7, v8, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v7, v8, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
  }
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)(a1 + v13);
  int v15 = (const void *)(a2 + v13);
  if (v11((const void *)(a2 + v13), 1, v9))
  {
    sub_1C27C3244();
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v10 + 32))(v14, v15, v9);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v14, 0, 1, v9);
  }
  uint64_t v17 = a3[9];
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  uint64_t v18 = a1 + v17;
  uint64_t v19 = a2 + v17;
  uint64_t v20 = sub_1C28CCD00();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 32))(v18, v19, v20);
  uint64_t v21 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  uint64_t v22 = a1 + v21;
  uint64_t v23 = a2 + v21;
  uint64_t v24 = sub_1C28CCD60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
  return a1;
}

uint64_t assignWithTake for NotificationContactPhoto(uint64_t a1, void *a2, int *a3)
{
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = *a2;

  uint64_t v7 = a2[2];
  *(void *)(a1 + 8) = a2[1];
  *(void *)(a1 + 16) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v8);
  uint64_t v10 = (char *)a2 + v8;
  uint64_t v11 = sub_1C28CC330();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v12 + 48);
  int v14 = v13(v9, 1, v11);
  int v15 = v13(v10, 1, v11);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v9, v10, v11);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v9, 0, 1, v11);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v15)
  {
    (*(void (**)(void *, uint64_t))(v12 + 8))(v9, v11);
LABEL_6:
    sub_1C27C3244();
    memcpy(v9, v10, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v9, v10, v11);
LABEL_7:
  uint64_t v17 = a3[7];
  uint64_t v18 = (void *)(a1 + v17);
  uint64_t v19 = (char *)a2 + v17;
  int v20 = v13((void *)(a1 + v17), 1, v11);
  int v21 = v13(v19, 1, v11);
  if (!v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, char *, uint64_t))(v12 + 40))(v18, v19, v11);
      goto LABEL_13;
    }
    (*(void (**)(void *, uint64_t))(v12 + 8))(v18, v11);
    goto LABEL_12;
  }
  if (v21)
  {
LABEL_12:
    sub_1C27C3244();
    memcpy(v18, v19, *(void *)(*(void *)(v22 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(void *, char *, uint64_t))(v12 + 32))(v18, v19, v11);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v12 + 56))(v18, 0, 1, v11);
LABEL_13:
  uint64_t v23 = a3[8];
  uint64_t v24 = *(void **)(a1 + v23);
  *(void *)(a1 + v23) = *(void *)((char *)a2 + v23);

  uint64_t v25 = a3[9];
  uint64_t v26 = a1 + v25;
  id v27 = (char *)a2 + v25;
  uint64_t v28 = sub_1C28CCD00();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v28 - 8) + 40))(v26, v27, v28);
  uint64_t v29 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)((char *)a2 + a3[10]);
  uint64_t v30 = a1 + v29;
  uint64_t v31 = (char *)a2 + v29;
  uint64_t v32 = sub_1C28CCD60();
  (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t getEnumTagSinglePayload for NotificationContactPhoto(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C27EA8E4);
}

uint64_t sub_1C27EA8E4(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  sub_1C27C3244();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[6];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  uint64_t v12 = sub_1C28CCD00();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[9];
    goto LABEL_9;
  }
  uint64_t v14 = sub_1C28CCD60();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[11];

  return v15(v17, a2, v16);
}

uint64_t storeEnumTagSinglePayload for NotificationContactPhoto(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C27EAA70);
}

uint64_t sub_1C27EAA70(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 16) = (a2 - 1);
    return result;
  }
  sub_1C27C3244();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[6];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  uint64_t v12 = sub_1C28CCD00();
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[9];
    goto LABEL_7;
  }
  uint64_t v14 = sub_1C28CCD60();
  int v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[11];

  return v15(v17, a2, a2, v16);
}

void sub_1C27EABE8()
{
  sub_1C27C3244();
  if (v0 <= 0x3F)
  {
    sub_1C28CCD00();
    if (v1 <= 0x3F)
    {
      sub_1C28CCD60();
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

unsigned char *storeEnumTagSinglePayload for NotificationContactPhoto.ContactPhotoError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C27EADE8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NotificationContactPhoto.ContactPhotoError()
{
  return &type metadata for NotificationContactPhoto.ContactPhotoError;
}

unint64_t sub_1C27EAE20()
{
  unint64_t result = qword_1EA310190;
  if (!qword_1EA310190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310190);
  }
  return result;
}

uint64_t sub_1C27EAE74(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C27EAEDC(const char *a1)
{
  sub_1C27E9694(a1, **(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

void sub_1C27EAF00()
{
  if (!qword_1EA3101A0)
  {
    sub_1C28CBE50();
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_1EA3101A0);
    }
  }
}

uint64_t sub_1C27EAF74(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C27EAFBC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C27EB01C@<X0>(const char *a1@<X0>, void *a2@<X8>)
{
  return sub_1C28788C8(a1, *(void *)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t PluginSharableModel.createSourceCalendar(with:)(void *a1)
{
  sub_1C27EB318(0, (unint64_t *)&unk_1EBB74300, MEMORY[0x1E4F27A78]);
  MEMORY[0x1F4188790](v2 - 8);
  sub_1C27EB318(0, &qword_1EBB75A70, MEMORY[0x1E4F27D68]);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v18 - v4;
  uint64_t v6 = sub_1C28CC5C0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v18 - v11;
  sub_1C28CC970();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v12, v5, v6);
    if (a1) {
      goto LABEL_3;
    }
LABEL_5:
    id v16 = objc_msgSend(self, sel_hk_gregorianCalendarWithLocalTimeZone);
    sub_1C28CC500();

    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
    sub_1C28CC560();
    goto LABEL_6;
  }
  sub_1C28CC5B0();
  sub_1C27EB36C((uint64_t)v5);
  if (!a1) {
    goto LABEL_5;
  }
LABEL_3:
  id v13 = a1;
  uint64_t v14 = (void *)sub_1C28CC590();
  id v15 = objc_msgSend(v13, sel_calendarForTimeZone_, v14);

  sub_1C28CC500();
LABEL_6:
  sub_1C28CC950();
  sub_1C28CC540();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v12, v6);
}

void sub_1C27EB318(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C27EB36C(uint64_t a1)
{
  sub_1C27EB318(0, &qword_1EBB75A70, MEMORY[0x1E4F27D68]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id HKKeyValueDomainObject.keyValueDomain.getter()
{
  return *v0;
}

uint64_t HKKeyValueDomainObject.key.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C27EB41C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v2 = a1 - 8;
  v23[7] = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  v23[8] = (char *)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v6);
  uint64_t v7 = *(void *)(v2 + 24);
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698), swift_dynamicCastMetatype()))
  {
    LOBYTE(v25) = sub_1C28CDD90();
    uint64_t v8 = &qword_1EBB75698;
LABEL_4:
    sub_1C27EDD7C(0, (unint64_t *)v8);
LABEL_5:
    uint64_t v9 = v24;
    int v10 = swift_dynamicCast();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v12 = v10 ^ 1u;
    uint64_t v13 = v9;
    return v11(v13, v12, 1, v7);
  }
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB768E0), swift_dynamicCastMetatype()))
  {
    uint64_t v25 = sub_1C28CDDA0();
    uint64_t v26 = v15;
    uint64_t v8 = &qword_1EBB768E0;
    goto LABEL_4;
  }
  sub_1C28CC450();
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    sub_1C28CDDB0();
    uint64_t v16 = v24;
    int v17 = swift_dynamicCast();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    if (v17)
    {
      uint64_t v13 = v16;
      uint64_t v12 = 0;
    }
    else
    {
      uint64_t v13 = v16;
      uint64_t v12 = 1;
    }
    return v11(v13, v12, 1, v7);
  }
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB76D80), swift_dynamicCastMetatype()))
  {
    uint64_t v25 = sub_1C28CDDE0();
    LOBYTE(v26) = v18 & 1;
    uint64_t v8 = &qword_1EBB76D80;
    goto LABEL_4;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F60);
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD24(0, &qword_1EA3101B0, (unint64_t *)&qword_1EBB76F60), swift_dynamicCastMetatype()))
  {
    uint64_t v25 = sub_1C28CDDC0();
    sub_1C27EDD24(0, &qword_1EA3101B0, (unint64_t *)&qword_1EBB76F60);
    goto LABEL_5;
  }
  v23[6] = v4;
  uint64_t v19 = v24;
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB769F0), swift_dynamicCastMetatype()))
  {
    uint64_t v25 = sub_1C28CDDD0();
    uint64_t v26 = v20;
    int v21 = &qword_1EBB769F0;
  }
  else
  {
    sub_1C28CDD60();
    int v21 = &qword_1EBB77160;
  }
  sub_1C27EDD7C(0, (unint64_t *)v21);
  int v22 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v19, v22 ^ 1u, 1, v7);
}

uint64_t sub_1C27EBCB0(char *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  v117[2] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v111 = *(void *)(v6 - 8);
  uint64_t v112 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v113 = (char *)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27BBE08();
  MEMORY[0x1F4188790](v8);
  uint64_t v107 = (char *)&v103 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = a2;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v11 = sub_1C28CDF70();
  uint64_t v12 = *(char **)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v109 = (char *)&v103 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v114 = (char *)&v103 - v16;
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v104 = (char *)&v103 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  unint64_t v105 = (char *)&v103 - v20;
  uint64_t v21 = MEMORY[0x1F4188790](v19);
  uint64_t v106 = (uint64_t *)((char *)&v103 - v22);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v25 = (char *)&v103 - v24;
  uint64_t v26 = MEMORY[0x1F4188790](v23);
  uint64_t v28 = (char *)&v103 - v27;
  uint64_t v29 = MEMORY[0x1F4188790](v26);
  uint64_t v31 = (char *)&v103 - v30;
  MEMORY[0x1F4188790](v29);
  uint64_t v33 = (char *)&v103 - v32;
  uint64_t v115 = v10;
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB75698), swift_dynamicCastMetatype()))
  {
    (*((void (**)(char *, char *, uint64_t))v12 + 2))(v33, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v33, 1) == 1) {
      (*((void (**)(char *, uint64_t))v12 + 1))(v33, v11);
    }
    else {
      swift_dynamicCast();
    }
    uint64_t v115 = *(void *)(v3 + 8);
    sub_1C28CDE00();
    return (*((uint64_t (**)(char *, uint64_t))v12 + 1))(a1, v11);
  }
  uint64_t v103 = v11;
  uint64_t v53 = v12;
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB768E0), swift_dynamicCastMetatype()))
  {
    uint64_t v54 = v3;
    double v55 = *(void **)v3;
    double v56 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
    uint64_t v11 = v103;
    uint64_t v106 = v12 + 16;
    v56(v31, a1, v103);
    int v57 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v31, 1);
    uint64_t v108 = v56;
    if (v57 == 1)
    {
      (*((void (**)(char *, uint64_t))v12 + 1))(v31, v11);
      id v58 = 0;
    }
    else
    {
      if (swift_dynamicCast())
      {
        id v59 = v117[0];
        id v60 = v117[1];
        id v58 = (void *)sub_1C28CC380();
        sub_1C27E2870((uint64_t)v59, (unint64_t)v60);
      }
      else
      {
        id v58 = 0;
      }
      uint64_t v11 = v103;
    }
    uint64_t v61 = v114;
    uint64_t v62 = *(void *)(v54 + 8);
    unint64_t v63 = *(void *)(v54 + 16);
    uint64_t v64 = (void *)sub_1C28CD6F0();
    v117[0] = 0;
    unsigned int v65 = objc_msgSend(v55, sel_setData_forKey_error_, v58, v64, v117);

    id v66 = v117[0];
    if (v65) {
      return (*((uint64_t (**)(char *, uint64_t))v12 + 1))(a1, v11);
    }
    uint64_t v67 = v66;
    uint64_t v115 = v62;
    goto LABEL_21;
  }
  uint64_t v70 = sub_1C28CC450();
  if (swift_dynamicCastMetatype() || swift_dynamicCastMetatype())
  {
    uint64_t v71 = *(void **)v3;
    uint64_t v72 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
    uint64_t v11 = v103;
    uint64_t v106 = v12 + 16;
    v72(v28, a1, v103);
    int v73 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v28, 1);
    uint64_t v108 = v72;
    if (v73 == 1)
    {
      (*((void (**)(char *, uint64_t))v12 + 1))(v28, v11);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v107, 1, 1, v70);
      uint64_t v74 = 0;
    }
    else
    {
      uint64_t v75 = v107;
      int v76 = swift_dynamicCast();
      uint64_t v77 = *(void *)(v70 - 8);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v77 + 56))(v75, v76 ^ 1u, 1, v70);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v77 + 48))(v75, 1, v70) == 1)
      {
        uint64_t v74 = 0;
      }
      else
      {
        uint64_t v74 = (void *)sub_1C28CC3F0();
        (*(void (**)(char *, uint64_t))(v77 + 8))(v75, v70);
      }
      uint64_t v12 = v53;
    }
    unint64_t v63 = *(void *)(v3 + 16);
    uint64_t v115 = *(void *)(v3 + 8);
    long long v78 = (void *)sub_1C28CD6F0();
    v117[0] = 0;
    unsigned int v79 = objc_msgSend(v71, sel_setDate_forKey_error_, v74, v78, v117);

    id v80 = v117[0];
    uint64_t v61 = v114;
    if (v79) {
      return (*((uint64_t (**)(char *, uint64_t))v12 + 1))(a1, v11);
    }
    uint64_t v67 = v80;
LABEL_21:
    char v68 = (void *)sub_1C28CC290();

    swift_willThrow();
    uint64_t v69 = v108;
    goto LABEL_7;
  }
  uint64_t v81 = swift_dynamicCastMetatype();
  uint64_t v11 = v103;
  if (v81 || (sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB76D80), swift_dynamicCastMetatype()))
  {
    uint64_t v108 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
    v108(v25, a1, v11);
    if ((*(unsigned int (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v25, 1) == 1) {
      (*((void (**)(char *, uint64_t))v12 + 1))(v25, v11);
    }
    else {
      swift_dynamicCast();
    }
    uint64_t v115 = *(void *)(v3 + 8);
    sub_1C28CDD80();
    return (*((uint64_t (**)(char *, uint64_t))v12 + 1))(a1, v11);
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F60);
  if (swift_dynamicCastMetatype()
    || (sub_1C27EDD24(0, &qword_1EA3101B0, (unint64_t *)&qword_1EBB76F60), swift_dynamicCastMetatype()))
  {
    uint64_t v82 = *(void **)v3;
    uint64_t v83 = v106;
    uint64_t v108 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
    v108((char *)v106, a1, v11);
    if ((*(unsigned int (**)(void *, uint64_t))(*(void *)(v115 - 8) + 48))(v83, 1) == 1)
    {
      (*((void (**)(void *, uint64_t))v12 + 1))(v83, v11);
      id v84 = 0;
    }
    else if (swift_dynamicCast())
    {
      id v84 = v117[0];
    }
    else
    {
      id v84 = 0;
    }
    uint64_t v61 = v114;
    unint64_t v63 = *(void *)(v3 + 16);
    uint64_t v115 = *(void *)(v3 + 8);
    char v85 = (void *)sub_1C28CD6F0();
    v117[0] = 0;
    unsigned int v86 = objc_msgSend(v82, sel_setNumber_forKey_error_, v84, v85, v117);

    id v87 = v117[0];
    if (v86) {
      return (*((uint64_t (**)(char *, uint64_t))v12 + 1))(a1, v11);
    }
    uint64_t v67 = v87;
    goto LABEL_21;
  }
  if (!swift_dynamicCastMetatype())
  {
    sub_1C27EDD7C(0, (unint64_t *)&qword_1EBB769F0);
    if (!swift_dynamicCastMetatype())
    {
      uint64_t v95 = *(void **)v3;
      uint64_t v96 = v104;
      uint64_t v108 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
      v108(v104, a1, v103);
      uint64_t v97 = *(void *)(v115 - 8);
      uint64_t v98 = v96;
      uint64_t v99 = v115;
      if ((*(unsigned int (**)(char *, uint64_t))(v97 + 48))(v98, 1) == 1)
      {
        uint64_t v100 = 0;
      }
      else
      {
        uint64_t v101 = v104;
        uint64_t v100 = sub_1C28CE630();
        (*(void (**)(char *, uint64_t))(v97 + 8))(v101, v99);
      }
      unint64_t v63 = *(void *)(v3 + 16);
      uint64_t v115 = *(void *)(v3 + 8);
      v102 = (void *)sub_1C28CD6F0();
      v117[0] = 0;
      unsigned int v92 = objc_msgSend(v95, sel_setPropertyListValue_forKey_error_, v100, v102, v117);
      swift_unknownObjectRelease();

      goto LABEL_55;
    }
  }
  uint64_t v88 = *(void **)v3;
  uint64_t v89 = v105;
  uint64_t v108 = (void (*)(char *, char *, uint64_t))*((void *)v12 + 2);
  v108(v105, a1, v103);
  if ((*(unsigned int (**)(char *, uint64_t))(*(void *)(v115 - 8) + 48))(v89, 1) == 1)
  {
    (*((void (**)(char *, uint64_t))v12 + 1))(v105, v103);
LABEL_53:
    uint64_t v90 = 0;
    goto LABEL_54;
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_53;
  }
  uint64_t v90 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
LABEL_54:
  unint64_t v63 = *(void *)(v3 + 16);
  uint64_t v115 = *(void *)(v3 + 8);
  uint64_t v91 = (void *)sub_1C28CD6F0();
  v117[0] = 0;
  unsigned int v92 = objc_msgSend(v88, sel_setString_forKey_error_, v90, v91, v117);

LABEL_55:
  id v93 = v117[0];
  if (v92) {
    return (*((uint64_t (**)(char *, uint64_t))v53 + 1))(a1, v103);
  }
  uint64_t v94 = v93;
  char v68 = (void *)sub_1C28CC290();

  swift_willThrow();
  uint64_t v12 = v53;
  uint64_t v11 = v103;
  uint64_t v61 = v114;
  uint64_t v69 = v108;
LABEL_7:
  uint64_t v108 = v69;
  swift_bridgeObjectRetain();
  uint64_t v34 = v113;
  sub_1C28CCDC0();
  v69(v61, a1, v11);
  id v35 = v68;
  swift_bridgeObjectRetain();
  id v36 = v68;
  uint64_t v37 = sub_1C28CCE00();
  os_log_type_t v38 = sub_1C28CDCB0();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    uint64_t v106 = (void *)swift_slowAlloc();
    uint64_t v41 = (char *)swift_slowAlloc();
    uint64_t v114 = a1;
    uint64_t v107 = v41;
    v117[0] = v41;
    *(_DWORD *)uint64_t v40 = 136315906;
    unint64_t v105 = v12;
    uint64_t v42 = sub_1C28CE830();
    uint64_t v116 = sub_1C27D36AC(v42, v43, (uint64_t *)v117);
    LODWORD(v110) = v39;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v116 = sub_1C27D36AC(v115, v63, (uint64_t *)v117);
    sub_1C28CDF90();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v40 + 22) = 2080;
    v108(v109, v61, v11);
    uint64_t v44 = sub_1C28CD750();
    uint64_t v116 = sub_1C27D36AC(v44, v45, (uint64_t *)v117);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    uint64_t v46 = (void (*)(char *, uint64_t))*((void *)v105 + 1);
    v46(v61, v11);
    *(_WORD *)(v40 + 32) = 2112;
    id v47 = v68;
    uint64_t v48 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v116 = v48;
    sub_1C28CDF90();
    uint64_t v49 = v106;
    *uint64_t v106 = v48;

    _os_log_impl(&dword_1C27B7000, v37, (os_log_type_t)v110, "%s Failed to set value for key=%s, value=%s, error: %@", (uint8_t *)v40, 0x2Au);
    sub_1C27EDD24(0, (unint64_t *)&qword_1EBB75EF0, (unint64_t *)&qword_1EBB77130);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v49, -1, -1);
    uint64_t v50 = v107;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v50, -1, -1);
    MEMORY[0x1C87609B0](v40, -1, -1);

    v46(v114, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v113, v112);
  }
  else
  {

    uint64_t v52 = (void (*)(char *, uint64_t))*((void *)v12 + 1);
    v52(v61, v11);
    swift_bridgeObjectRelease_n();

    v52(a1, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v111 + 8))(v34, v112);
  }
}

uint64_t HKKeyValueDomainObject.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = a1 - 8;
  uint64_t v6 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v5 + 24);
  uint64_t v10 = sub_1C28CDF70();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v13 = (char *)&v18 - v12;
  if (*(unsigned char *)(v2 + *(int *)(v5 + 44)) == 1
    && (objc_msgSend(self, sel_isAppleInternalInstall) & 1) == 0)
  {
    uint64_t v16 = v2 + *(int *)(a1 + 32);
    uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
    return v17(a2, v16, v9);
  }
  else
  {
    sub_1C27EB41C(a1, (uint64_t)v13);
    (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v2, a1);
    uint64_t v14 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v13, 1, v9) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v14 + 16))(a2, &v8[*(int *)(a1 + 32)], v9);
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, a1);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a2, v13, v9);
    }
  }
}

uint64_t HKKeyValueDomainObject.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  sub_1C27ED1E8(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8);

  return v4(a1);
}

void (*HKKeyValueDomainObject.wrappedValue.modify(void *a1, uint64_t a2))(uint64_t **a1, char a2)
{
  uint64_t v5 = malloc(0x30uLL);
  *a1 = v5;
  *uint64_t v5 = a2;
  v5[1] = v2;
  uint64_t v6 = *(void *)(a2 + 16);
  id v5[2] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v5[3] = v7;
  size_t v8 = *(void *)(v7 + 64);
  v5[4] = malloc(v8);
  uint64_t v9 = malloc(v8);
  v5[5] = v9;
  HKKeyValueDomainObject.wrappedValue.getter(a2, (uint64_t)v9);
  return sub_1C27ED0FC;
}

void sub_1C27ED0FC(uint64_t **a1, char a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void *)(*a1)[4];
  uint64_t v4 = (void *)(*a1)[5];
  uint64_t v5 = (*a1)[2];
  uint64_t v6 = (*a1)[3];
  uint64_t v7 = **a1;
  if (a2)
  {
    (*(void (**)(uint64_t, void *, uint64_t))(v6 + 16))((*a1)[4], v4, v5);
    sub_1C27ED1E8((uint64_t)v3, v7);
    size_t v8 = *(void (**)(void *, uint64_t))(v6 + 8);
    v8(v3, v5);
    v8(v4, v5);
  }
  else
  {
    sub_1C27ED1E8((*a1)[5], v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  free(v4);
  free(v3);

  free(v2);
}

uint64_t sub_1C27ED1E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 16);
  uint64_t v5 = sub_1C28CDF70();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v7 = (char *)&v10 - v6;
  uint64_t v8 = *(void *)(v4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v10 - v6, a1, v4);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v7, 0, 1, v4);
  return sub_1C27EBCB0(v7, a2);
}

uint64_t sub_1C27ED2E0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = type metadata accessor for HKKeyValueDomainObject();
  return HKKeyValueDomainObject.wrappedValue.getter(v2, a1);
}

uint64_t sub_1C27ED31C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HKKeyValueDomainObject();
  return sub_1C27ED1E8(a1, v2);
}

uint64_t sub_1C27ED35C()
{
  return 8;
}

void *sub_1C27ED368(void *result, void *a2)
{
  *a2 = *result;
  return result;
}

uint64_t sub_1C27ED374()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void **sub_1C27ED424(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = (char *)*a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 + ((v6 + 24) & (unint64_t)~v6) + 1 > 0x18)
  {
    a1 = (void **)&v9[(v6 & 0xF8 ^ 0x1F8) & (v6 + 16)];
    swift_retain();
  }
  else
  {
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    v12[1] = v13[1];
    uint64_t v14 = ((unint64_t)v12 + v6 + 16) & ~v6;
    uint64_t v15 = ((unint64_t)v13 + v6 + 16) & ~v6;
    uint64_t v16 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    uint64_t v17 = v9;
    swift_bridgeObjectRetain();
    v16(v14, v15, v4);
    *(unsigned char *)(v14 + v7) = *(unsigned char *)(v15 + v7);
  }
  return a1;
}

uint64_t sub_1C27ED564(id *a1, uint64_t a2)
{
  unint64_t v3 = (unint64_t)a1 + 15;

  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((v3 & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void **sub_1C27ED5E4(void **a1, void **a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *a1 = *a2;
  uint64_t v5 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v6 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v5 = *v6;
  v5[1] = v6[1];
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16);
  uint64_t v10 = v8 + 16;
  uint64_t v11 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v12 = ((unint64_t)v5 + v11 + 16) & ~v11;
  uint64_t v13 = ((unint64_t)v6 + v11 + 16) & ~v11;
  id v14 = v4;
  swift_bridgeObjectRetain();
  v9(v12, v13, v7);
  *(unsigned char *)(*(void *)(v10 + 48) + v12) = *(unsigned char *)(*(void *)(v10 + 48) + v13);
  return a1;
}

void **sub_1C27ED6AC(void **a1, void **a2, uint64_t a3)
{
  unint64_t v6 = (unint64_t)a2 + 15;
  uint64_t v5 = *a2;
  uint64_t v7 = *a1;
  *a1 = *a2;
  unint64_t v8 = (unint64_t)a1 + 15;
  id v9 = v5;

  uint64_t v10 = (void *)(v8 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v11 = v6 & 0xFFFFFFFFFFFFFFF8;
  *uint64_t v10 = *(void *)(v6 & 0xFFFFFFFFFFFFFFF8);
  v10[1] = *(void *)((v6 & 0xFFFFFFFFFFFFFFF8) + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v13 = v12 + 24;
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = ((unint64_t)v10 + v14 + 16) & ~v14;
  unint64_t v16 = (v14 + 16 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~v14;
  (*(void (**)(uint64_t, unint64_t))(v12 + 24))(v15, (v14 + 16 + v11) & ~v14);
  *(unsigned char *)(*(void *)(v13 + 40) + v15) = *(unsigned char *)(*(void *)(v13 + 40) + v16);
  return a1;
}

void *sub_1C27ED780(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = (_OWORD *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v5 = (_OWORD *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v4 = *v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v7 = v6 + 32;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)v4 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)v5 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 32))(v9, v10);
  *(unsigned char *)(*(void *)(v7 + 32) + v9) = *(unsigned char *)(*(void *)(v7 + 32) + v10);
  return a1;
}

void **sub_1C27ED820(void **a1, void **a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  uint64_t v6 = *a1;
  *a1 = *a2;
  unint64_t v7 = (unint64_t)a1 + 15;

  v7 &= 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v7 = *(void *)v5;
  *(void *)(v7 + 8) = *(void *)(v5 + 8);
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v10 + 16 + v7) & ~v10;
  uint64_t v12 = (v10 + 16 + v5) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v11, v12);
  *(unsigned char *)(*(void *)(v9 + 24) + v11) = *(unsigned char *)(*(void *)(v9 + 24) + v12);
  return a1;
}

uint64_t sub_1C27ED8E8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + ((v6 + 24) & ~v6) + 1;
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                      + v6
                                                                      + 16) & ~v6);
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1C27EDA94(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 24) & ~v9) + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (*(_DWORD *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + ((v9 + 24) & ~v9) != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x1C27EDCFCLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 16) & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

void sub_1C27EDD24(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27D1C9C(255, a3);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C27EDD7C(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C28CDF70();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t AggregatedDataTypeChangesPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

id AggregatedDataTypeChangesPublisher.hkType.getter(uint64_t a1)
{
  return *(id *)(v1 + *(int *)(a1 + 36));
}

uint64_t AggregatedDataTypeChangesPublisher.init(upstream:hkType:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4, a1);
  uint64_t result = type metadata accessor for AggregatedDataTypeChangesPublisher();
  *(void *)(a4 + *(int *)(result + 36)) = a2;
  return result;
}

uint64_t type metadata accessor for AggregatedDataTypeChangesPublisher()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t AggregatedDataTypeChangesPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  uint64_t v36 = a1;
  uint64_t v5 = *(void *)(a2 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = *(void *)(v8 + 16);
  uint64_t v28 = *(void *)(v9 - 8);
  uint64_t v10 = v28;
  MEMORY[0x1F4188790](v7);
  unsigned int v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = v12;
  uint64_t v32 = sub_1C28CC810();
  uint64_t v29 = *(void *)(a2 + 24);
  uint64_t v13 = sub_1C28CCEA0();
  uint64_t v35 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  int v15 = (char *)&v27 - v14;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v31 = type metadata accessor for Publishers.BufferWithAggregator();
  uint64_t v34 = *(void *)(v31 - 8);
  MEMORY[0x1F4188790](v31);
  int v17 = (char *)&v27 - v16;
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v19 = v33;
  v18(v12, v33, v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v19, a2);
  unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v37;
  *((void *)v21 + 2) = v9;
  *((void *)v21 + 3) = v22;
  uint64_t v23 = v38;
  *((void *)v21 + 4) = v29;
  *((void *)v21 + 5) = v23;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v21[v20], (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  uint64_t v24 = v27;
  sub_1C28CD310();
  swift_release();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v24, v9);
  Publisher.aggregate(aggregationHandler:)((uint64_t)sub_1C27EEB2C, 0, v13, (uint64_t)v17);
  (*(void (**)(char *, uint64_t))(v35 + 8))(v15, v13);
  uint64_t v25 = v31;
  swift_getWitnessTable();
  sub_1C28CD410();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v17, v25);
}

uint64_t sub_1C27EE28C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  uint64_t v37 = a4;
  uint64_t v38 = a1;
  sub_1C27EF778(0, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v35 = (uint64_t)v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v33 = (uint64_t)v32 - v9;
  uint64_t v36 = sub_1C28CC7D0();
  uint64_t v10 = *(void *)(v36 - 8);
  MEMORY[0x1F4188790](v36);
  unsigned int v12 = (char *)v32 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27EF778(0, &qword_1EBB76B18, MEMORY[0x1E4F67320]);
  MEMORY[0x1F4188790](v13 - 8);
  int v15 = (char *)v32 - v14;
  uint64_t v16 = sub_1C28CCAB0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  v32[0] = (char *)v32 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)v32 - v20;
  sub_1C28CCA50();
  uint64_t v22 = *(int *)(type metadata accessor for AggregatedDataTypeChangesPublisher() + 36);
  uint64_t v23 = *(void **)(v38 + v22);
  v32[1] = a2;
  uint64_t v34 = a3;
  sub_1C27EE870(v23, (uint64_t)v15);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v36);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    sub_1C27EF7CC((uint64_t)v15, &qword_1EBB76B18, MEMORY[0x1E4F67320]);
    uint64_t v24 = sub_1C28CC810();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v37, 1, 1, v24);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v21, v15, v16);
    uint64_t v26 = sub_1C28CCA30();
    uint64_t v27 = *(void **)(v38 + v22);
    uint64_t v28 = v33;
    sub_1C27EE974(v26, v27, v33);
    swift_bridgeObjectRelease();
    (*(void (**)(void, char *, uint64_t))(v17 + 16))(v32[0], v21, v16);
    uint64_t v29 = (void (*)(uint64_t))MEMORY[0x1E4F26E60];
    sub_1C27EF828(v28, v35, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60]);
    uint64_t v30 = v37;
    sub_1C28CC7E0();
    sub_1C27EF7CC(v28, (unint64_t *)&qword_1EBB76B08, v29);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v21, v16);
    uint64_t v31 = sub_1C28CC810();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v31 - 8) + 56))(v30, 0, 1, v31);
  }
}

uint64_t sub_1C27EE6CC()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = (int *)(type metadata accessor for AggregatedDataTypeChangesPublisher() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1C27EE7C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = *(void *)(type metadata accessor for AggregatedDataTypeChangesPublisher() - 8);
  uint64_t v6 = v1 + ((*(unsigned __int8 *)(v5 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1C27EE28C(v6, v3, v4, a1);
}

uint64_t sub_1C27EE870@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CC7B0();
  id v5 = a1;
  unint64_t v6 = (unint64_t)sub_1C28717D4(v5, v4);

  swift_bridgeObjectRelease();
  if (v6 | sub_1C28CC7C0())
  {
    id v12 = v5;
    sub_1C28CCA70();
    uint64_t v13 = sub_1C28CCAB0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v9 = v13;
    uint64_t v10 = a2;
    uint64_t v11 = 0;
  }
  else
  {
    uint64_t v7 = sub_1C28CCAB0();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = a2;
    uint64_t v11 = 1;
  }

  return v8(v10, v11, 1, v9);
}

void sub_1C27EE974(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    id v14 = a2;
    unint64_t v5 = sub_1C2872308((uint64_t)v14);
    if (v6)
    {
      unint64_t v7 = v5;
      uint64_t v8 = *(void *)(a1 + 56);
      uint64_t v9 = sub_1C28CBFB0();
      uint64_t v10 = *(void *)(v9 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v10 + 16))(a3, v8 + *(void *)(v10 + 72) * v7, v9);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(a3, 0, 1, v9);
    }
    else
    {
      uint64_t v13 = sub_1C28CBFB0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a3, 1, 1, v13);
    }
  }
  else
  {
    uint64_t v11 = sub_1C28CBFB0();
    id v12 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    v12(a3, 1, 1, v11);
  }
}

uint64_t sub_1C27EEB2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v30 = a3;
  uint64_t v31 = a2;
  uint64_t v29 = (char *)a1;
  sub_1C27EF778(0, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60]);
  MEMORY[0x1F4188790](v3 - 8);
  unint64_t v5 = (char *)&v26 - v4;
  uint64_t v6 = sub_1C28CCAB0();
  uint64_t v28 = *(void *)(v6 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  id v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v27 = (char *)&v26 - v13;
  id v14 = (void (*)(uint64_t))MEMORY[0x1E4F671C8];
  sub_1C27EF778(0, &qword_1EBB76B10, MEMORY[0x1E4F671C8]);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1C28CC810();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v26 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27EF828((uint64_t)v29, (uint64_t)v17, &qword_1EBB76B10, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v17, 1, v18) == 1)
  {
    sub_1C27EF7CC((uint64_t)v17, &qword_1EBB76B10, MEMORY[0x1E4F671C8]);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v30, v31, v18);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v21, v17, v18);
    sub_1C28CC7F0();
    uint64_t v29 = v5;
    sub_1C28CC7F0();
    uint64_t v23 = v27;
    AnchoredTypeChangeSet.aggregated(with:)();
    uint64_t v24 = v28;
    uint64_t v25 = *(void (**)(char *, uint64_t))(v28 + 8);
    v25(v9, v6);
    v25(v12, v6);
    (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v12, v23, v6);
    sub_1C28CC800();
    sub_1C28CC7E0();
    v25(v23, v6);
    return (*(uint64_t (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
}

uint64_t sub_1C27EEED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return AggregatedDataTypeChangesPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

id Publisher<>.aggregatedChangesPublisher(for:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v13 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, v3, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v6 + 32))(a3, v8, a2);
  uint64_t v9 = *(int *)(type metadata accessor for AggregatedDataTypeChangesPublisher() + 36);
  uint64_t v10 = v13;
  *(void *)(a3 + v9) = v13;

  return v10;
}

uint64_t sub_1C27EF004()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C27EF0A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = *(void **)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *(void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) = v10;
    id v11 = v10;
  }
  return v4;
}

void sub_1C27EF19C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void **)((a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8);
}

uint64_t sub_1C27EF20C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = v8;
  id v9 = v8;
  return a1;
}

uint64_t sub_1C27EF28C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  id v9 = *v7;
  *int v7 = v8;
  id v10 = v8;

  return a1;
}

uint64_t sub_1C27EF314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(void *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1C27EF390(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void **)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *v7;
  *int v7 = *(void **)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1C27EF414(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x1C27EF560);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_1C27EF574(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x1C27EF750);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0) {
            uint64_t v19 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

void sub_1C27EF778(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C27EF7CC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C27EF778(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C27EF828(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C27EF778(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

BOOL NumericValidationParseResult.isAtLeastPartiallyValid.getter()
{
  uint64_t v1 = *(void *)v0;
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  if (v2)
  {
    sub_1C27EF920(*(void *)v0, *(void *)(v0 + 8), *(void *)(v0 + 16), *(void **)(v0 + 24));
    unint64_t v5 = v2;
  }
  else
  {
    unint64_t v5 = 0;
  }
  sub_1C27EF968(v1, v5, v4, v3);
  sub_1C27EF968(0, 0, 0, 0);
  return v2 != 0;
}

void sub_1C27EF920(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRetain();
    id v5 = a4;
  }
}

void sub_1C27EF968(uint64_t a1, unint64_t a2, uint64_t a3, void *a4)
{
  if (a2 >= 2)
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t NumericValidationOptions.rawValue.getter()
{
  return *(void *)v0;
}

HealthExperience::NumericValidationOptions __swiftcall NumericValidationOptions.init(rawValue:)(HealthExperience::NumericValidationOptions rawValue)
{
  v1->rawValue = rawValue.rawValue;
  return rawValue;
}

void static NumericValidationOptions.forcePrefix.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void *sub_1C27EF9D0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

void sub_1C27EF9DC(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_1C27EF9E4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_1C27EF9F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1C27EFA0C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_1C27EFA20(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_1C27EFA50@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_1C27EFA7C@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1C27EFAA0(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1C27EFAB4(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1C27EFAC8(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1C27EFADC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1C27EFAF0(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_1C27EFB04(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1C27EFB18(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_1C27EFB2C()
{
  return *v0 == 0;
}

uint64_t sub_1C27EFB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x1F4184B08](a1, a4, a2, a5, a3);
}

void *sub_1C27EFB54(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_1C27EFB6C@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

id NumericValidationProvider.disallowedCharacterSet.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CBF50();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  unint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  unsigned int v13 = (char *)&v20 - v12;
  MEMORY[0x1F4188790](v11);
  int v15 = (char *)&v20 - v14;
  int v16 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2);
  id result = objc_msgSend(v16, sel_decimalSeparator);
  if (result)
  {
    uint64_t v18 = result;
    sub_1C28CD730();

    sub_1C28CBEF0();
    swift_bridgeObjectRelease();
    sub_1C28CBF00();
    sub_1C28CBF30();
    uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
    v19(v10, v6);
    v19(v13, v6);
    sub_1C28CBF40();

    v19(v15, v6);
    return (id)(*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a3, 0, 1, v6);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void NumericValidationProvider.localizedFormattedResult(from:options:)(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v95 = a4;
  uint64_t v82 = a3;
  sub_1C27F077C();
  MEMORY[0x1F4188790](v12 - 8);
  uint64_t v88 = (char *)&v82 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1C28CBF50();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v83 = (char *)&v82 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v91 = (char *)&v82 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  unsigned int v92 = (char *)&v82 - v21;
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v82 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  id v93 = (char *)&v82 - v26;
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  uint64_t v97 = (char *)&v82 - v28;
  MEMORY[0x1F4188790](v27);
  uint64_t v30 = (char *)&v82 - v29;
  uint64_t v101 = a1;
  unint64_t v102 = a2;
  sub_1C28CBF20();
  unint64_t v98 = sub_1C27D633C();
  uint64_t v31 = sub_1C28CDFD0();
  unint64_t v33 = v32;
  uint64_t v87 = v15;
  uint64_t v34 = *(void (**)(char *, uint64_t))(v15 + 8);
  v34(v30, v14);
  uint64_t v35 = HIBYTE(v33) & 0xF;
  if ((v33 & 0x2000000000000000) == 0) {
    uint64_t v35 = v31 & 0xFFFFFFFFFFFFLL;
  }
  if (!v35)
  {
    swift_bridgeObjectRelease();
    *(_OWORD *)a6 = xmmword_1C28D13F0;
    *(void *)(a6 + 16) = 0;
    *(void *)(a6 + 24) = 0;
    return;
  }
  uint64_t v85 = a5;
  uint64_t v86 = v14;
  uint64_t v94 = v34;
  uint64_t v89 = a6;
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t))(a5 + 16);
  uint64_t v84 = v7;
  uint64_t v37 = (void *)v36(v95, a5);
  uint64_t v90 = v31;
  uint64_t v101 = v31;
  unint64_t v102 = v33;
  id v96 = v37;
  id v38 = objc_msgSend(v37, sel_plusSign);
  if (!v38)
  {
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  int v39 = v38;
  uint64_t v40 = sub_1C28CD730();
  uint64_t v42 = v41;

  uint64_t v99 = v40;
  uint64_t v100 = v42;
  LOBYTE(v39) = sub_1C28CDFE0();
  swift_bridgeObjectRelease();
  if (v39)
  {
    id v43 = v96;
    id v44 = objc_msgSend(v96, sel_plusSign);
    objc_msgSend(v43, sel_setPositivePrefix_, v44);
  }
  id v45 = v96;
  id v46 = objc_msgSend(v96, sel_decimalSeparator, v82);
  if (!v46) {
    goto LABEL_32;
  }
  id v47 = v46;
  sub_1C28CD730();

  sub_1C28CBEF0();
  swift_bridgeObjectRelease();
  id v48 = objc_msgSend(v45, sel_plusSign);
  if (!v48)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  uint64_t v49 = v48;
  sub_1C28CD730();

  uint64_t v50 = v92;
  sub_1C28CBEF0();
  swift_bridgeObjectRelease();
  uint64_t v51 = v93;
  sub_1C28CBF30();
  uint64_t v52 = v50;
  uint64_t v53 = v86;
  uint64_t v54 = v94;
  v94(v52, v86);
  v54(v24, v53);
  id v55 = objc_msgSend(v45, sel_minusSign);
  if (v55)
  {
    double v56 = v55;
    sub_1C28CD730();

    int v57 = v91;
    sub_1C28CBEF0();
    swift_bridgeObjectRelease();
    sub_1C28CBF30();
    v54(v57, v53);
    v54(v51, v53);
    uint64_t v101 = v90;
    unint64_t v102 = v33;
    sub_1C28CBF40();
    sub_1C28CDFD0();
    v54(v30, v53);
    uint64_t v58 = sub_1C28CD7A0();
    swift_bridgeObjectRelease();
    uint64_t v59 = sub_1C28CD7A0();
    uint64_t v60 = v89;
    if (v58 == v59)
    {
      v54(v97, v53);
      swift_bridgeObjectRelease();

      *(_OWORD *)uint64_t v60 = xmmword_1C28D13F0;
      *(void *)(v60 + 16) = 0;
      *(void *)(v60 + 24) = 0;
      return;
    }
    uint64_t v61 = (uint64_t)v88;
    (*(void (**)(uint64_t))(v85 + 8))(v95);
    uint64_t v62 = v87;
    int v63 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v87 + 48))(v61, 1, v53);
    id v64 = v96;
    if (v63 == 1)
    {
      sub_1C27F07D4(v61);
    }
    else
    {
      unsigned int v65 = v83;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 32))(v83, v61, v53);
      uint64_t v101 = v90;
      unint64_t v102 = v33;
      sub_1C28CBF40();
      sub_1C28CDFD0();
      id v66 = v94;
      v94(v30, v53);
      uint64_t v67 = sub_1C28CD7A0();
      swift_bridgeObjectRelease();
      char v68 = v65;
      uint64_t v60 = v89;
      v66(v68, v53);
      if (v67 >= 1)
      {
        v94(v97, v53);
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    uint64_t v69 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v70 = objc_msgSend(v64, sel_numberFromString_, v69);

    if (v70)
    {
      uint64_t v71 = *(void *)(v82 + 16);
      if (v71)
      {
        uint64_t v72 = (uint64_t *)(v82 + 32);
        while (1)
        {
          uint64_t v73 = *v72++;
          if (v73 == 1) {
            break;
          }
          if (!--v71) {
            goto LABEL_27;
          }
        }
        id v74 = objc_msgSend(v64, sel_plusSign);
        objc_msgSend(v64, sel_setPositivePrefix_, v74);
      }
LABEL_27:
      id v75 = objc_msgSend(v64, sel_stringFromNumber_, v70);
      if (v75)
      {
        int v76 = v75;
        uint64_t v77 = sub_1C28CD730();
        uint64_t v79 = v78;

        objc_msgSend(v70, sel_doubleValue);
        uint64_t v81 = v80;

        v94(v97, v53);
        *(void *)uint64_t v60 = v77;
        *(void *)(v60 + 8) = v79;
        *(void *)(v60 + 16) = v81;
        *(void *)(v60 + 24) = v64;
        return;
      }

      v94(v97, v53);
      goto LABEL_30;
    }
    v94(v97, v53);
LABEL_25:

LABEL_30:
    *(_OWORD *)uint64_t v60 = 0u;
    *(_OWORD *)(v60 + 16) = 0u;
    return;
  }
LABEL_34:
  __break(1u);
}

uint64_t NumericValidationProvider.localizedFormattedResult(from:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t))(a4 + 24))(a1, a2, MEMORY[0x1E4FBC860], a3, a4);
}

uint64_t _s16HealthExperience28NumericValidationParseResultO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v5 = (void *)a1[3];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = (void *)a2[3];
  if (!v3)
  {
    if (!v7)
    {
      unint64_t v3 = 0;
      char v10 = 1;
      goto LABEL_16;
    }
LABEL_15:
    sub_1C27EF920(v6, v7, v8, v9);
    sub_1C27EF920(v2, v3, v4, v5);
    char v10 = 0;
    goto LABEL_16;
  }
  if (v3 != 1)
  {
    if (v7 >= 2)
    {
      BOOL v11 = v2 == v6 && v3 == v7;
      if (v11 || (sub_1C28CE640()) && *(double *)&v4 == *(double *)&v8)
      {
        sub_1C27D3998();
        sub_1C27EF920(v6, v7, v8, v9);
        sub_1C27EF920(v2, v3, v4, v5);
        id v14 = v5;
        id v12 = v9;
        char v10 = sub_1C28CDF30();

        goto LABEL_16;
      }
    }
    goto LABEL_15;
  }
  if (v7 != 1) {
    goto LABEL_15;
  }
  unint64_t v3 = 1;
  char v10 = 1;
LABEL_16:
  sub_1C27EF968(v2, v3, v4, v5);
  sub_1C27EF968(v6, v7, v8, v9);
  return v10 & 1;
}

void sub_1C27F077C()
{
  if (!qword_1EA3101B8)
  {
    sub_1C28CBF50();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3101B8);
    }
  }
}

uint64_t sub_1C27F07D4(uint64_t a1)
{
  sub_1C27F077C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1C27F0834()
{
  unint64_t result = qword_1EA3101C0;
  if (!qword_1EA3101C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3101C0);
  }
  return result;
}

unint64_t sub_1C27F088C()
{
  unint64_t result = qword_1EA3101C8;
  if (!qword_1EA3101C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3101C8);
  }
  return result;
}

unint64_t sub_1C27F08E4()
{
  unint64_t result = qword_1EA3101D0;
  if (!qword_1EA3101D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3101D0);
  }
  return result;
}

unint64_t sub_1C27F093C()
{
  unint64_t result = qword_1EA3101D8;
  if (!qword_1EA3101D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3101D8);
  }
  return result;
}

void destroy for NumericValidationParseResult(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(a1 + 24);
  }
}

uint64_t initializeWithCopy for NumericValidationParseResult(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    uint64_t v4 = *(void **)(a2 + 24);
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(void *)(a1 + 24) = v4;
    swift_bridgeObjectRetain();
    id v5 = v4;
  }
  return a1;
}

uint64_t assignWithCopy for NumericValidationParseResult(uint64_t a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *(void *)a1 = *a2;
      *(void *)(a1 + 8) = a2[1];
      *(void *)(a1 + 16) = a2[2];
      uint64_t v8 = (void *)a2[3];
      *(void *)(a1 + 24) = v8;
      swift_bridgeObjectRetain();
      id v9 = v8;
      return a1;
    }
LABEL_7:
    long long v10 = *((_OWORD *)a2 + 1);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v10;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

    goto LABEL_7;
  }
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = a2[2];
  id v5 = (void *)a2[3];
  long long v6 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = v5;
  id v7 = v5;

  return a1;
}

uint64_t assignWithTake for NumericValidationParseResult(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();

LABEL_5:
    long long v6 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  id v5 = *(void **)(a1 + 24);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for NumericValidationParseResult(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for NumericValidationParseResult(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(_OWORD *)unint64_t result = 0u;
    *(_OWORD *)(result + 16) = 0u;
    *(_DWORD *)unint64_t result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t sub_1C27F0C50(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C27F0C68(void *result, int a2)
{
  if (a2 < 0)
  {
    result[2] = 0;
    result[3] = 0;
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for NumericValidationParseResult()
{
  return &type metadata for NumericValidationParseResult;
}

ValueMetadata *type metadata accessor for NumericValidationOptions()
{
  return &type metadata for NumericValidationOptions;
}

uint64_t dispatch thunk of NumericValidationProvider.disallowedCharacterSet.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of NumericValidationProvider.makeFormatter()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of NumericValidationProvider.localizedFormattedResult(from:options:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 24))();
}

Swift::Void __swiftcall URL.openSensitiveURL()()
{
  id v0 = objc_msgSend(self, sel_defaultWorkspace);
  if (v0)
  {
    unint64_t v1 = v0;
    id v2 = (id)sub_1C28CC2B0();
    objc_msgSend(v1, sel_openSensitiveURL_withOptions_, v2, 0);
  }
}

Swift::Void __swiftcall String.openSensitiveURL()()
{
  unint64_t v2 = v1;
  uint64_t v3 = v0;
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  id v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27C3244();
  MEMORY[0x1F4188790](v8 - 8);
  long long v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1C28CC330();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC320();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C27F1154((uint64_t)v10);
    sub_1C28CCDC0();
    swift_bridgeObjectRetain_n();
    uint64_t v15 = sub_1C28CCE00();
    os_log_type_t v16 = sub_1C28CDCB0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = swift_slowAlloc();
      uint64_t v18 = swift_slowAlloc();
      uint64_t v25 = v18;
      *(_DWORD *)uint64_t v17 = 136315394;
      uint64_t v23 = v4;
      uint64_t v24 = sub_1C27D36AC(0x676E69727453, 0xE600000000000000, &v25);
      sub_1C28CDF90();
      *(_WORD *)(v17 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v24 = sub_1C27D36AC(v3, v2, &v25);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C27B7000, v15, v16, "%s Invalid URL: %s", (uint8_t *)v17, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v18, -1, -1);
      MEMORY[0x1C87609B0](v17, -1, -1);

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v23);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
    id v19 = objc_msgSend(self, sel_defaultWorkspace);
    if (v19)
    {
      uint64_t v20 = v19;
      uint64_t v21 = (void *)sub_1C28CC2B0();
      objc_msgSend(v20, sel_openSensitiveURL_withOptions_, v21, 0);
    }
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1C27F1154(uint64_t a1)
{
  sub_1C27C3244();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t HKProfileStore.ProfileIdentifiersPublisher.init(profileStore:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

id HKProfileStore.ProfileIdentifiersPublisher.profileStore.getter()
{
  return *v0;
}

uint64_t (*sub_1C27F11C0())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C27F123C()
{
  uint64_t v1 = sub_1C28CCE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
  uint64_t v6 = (void *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x60));
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  sub_1C28CCBC0();
  sub_1C28CCDC0();
  id v7 = v0;
  uint64_t v8 = sub_1C28CCE00();
  os_log_type_t v9 = sub_1C28CDCD0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v23 = v1;
    long long v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    uint64_t v25 = v22;
    *(_DWORD *)long long v10 = 136446210;
    v19[1] = v10 + 4;
    uint64_t v20 = v10;
    id v11 = objc_msgSend(v7, sel_description);
    uint64_t v12 = sub_1C28CD730();
    uint64_t v21 = v2;
    uint64_t v13 = v12;
    unint64_t v15 = v14;

    uint64_t v24 = sub_1C27D36AC(v13, v15, &v25);
    uint64_t v5 = (void *)MEMORY[0x1E4FBC8C8];
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    os_log_type_t v16 = v20;
    _os_log_impl(&dword_1C27B7000, v8, v9, "[%{public}s]: Received cancellation, stopping observing for profile list updates", v20, 0xCu);
    uint64_t v17 = v22;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v17, -1, -1);
    MEMORY[0x1C87609B0](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v21 + 8))(v4, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  objc_msgSend(*(id *)((char *)v7 + *(void *)((*v5 & *v7) + 0x70)), sel_removeObserver_, v7);
  __swift_project_boxed_opaque_existential_1(v6, v6[3]);
  return sub_1C28CCBD0();
}

id sub_1C27F1530()
{
  return objc_msgSend(*(id *)((char *)v0 + *(void *)((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70)), sel_addObserver_completion_, v0, 0);
}

void sub_1C27F156C(void *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = a1;
  sub_1C27F1B18();
}

void sub_1C27F15CC()
{
}

id sub_1C27F1610()
{
  v2.receiver = v0;
  v2.super_class = (Class)_s27ProfileIdentifiersPublisherV5InnerCMa();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C27F1684(void *a1)
{
  objc_super v2 = (void *)MEMORY[0x1E4FBC8C8];
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1 + *(void *)((*MEMORY[0x1E4FBC8C8] & *a1) + 0x60));

  uint64_t v3 = (char *)a1 + *(void *)((*v2 & *a1) + 0x78);
  uint64_t v4 = sub_1C28CCCD0();
  id v5 = *(uint64_t (**)(char *, uint64_t))(*(void *)(v4 - 8) + 8);

  return v5(v3, v4);
}

void (*sub_1C27F178C(void *a1))(void *a1)
{
  objc_super v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1C27F11C0();
  return sub_1C27F17E4;
}

void sub_1C27F17E4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);

  free(v1);
}

uint64_t sub_1C27F182C()
{
  _s27ProfileIdentifiersPublisherV5InnerCMa();

  return sub_1C28CCC70();
}

uint64_t sub_1C27F188C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = _s27ProfileIdentifiersPublisherV5InnerCMa();

  return MEMORY[0x1F411F0C0](a1, v5, a3);
}

uint64_t sub_1C27F18F0()
{
  return sub_1C28CCC90();
}

uint64_t sub_1C27F193C()
{
  return MEMORY[0x1E4FBC278];
}

uint64_t sub_1C27F1948()
{
  uint64_t result = sub_1C28CCCD0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C27F1A04()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27F1A20(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 88);
}

uint64_t sub_1C27F1A28()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27F1A44()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C27F1A60()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C27F1A98()
{
  swift_release();
  if (*(void *)(v0 + 40)) {
    swift_release();
  }

  return swift_deallocObject();
}

uint64_t sub_1C27F1AE0()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C27F1B18()
{
  uint64_t v1 = sub_1C28CCE10();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCDC0();
  id v5 = v0;
  uint64_t v6 = sub_1C28CCE00();
  os_log_type_t v7 = sub_1C28CDCD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v16 = v1;
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v15 = swift_slowAlloc();
    uint64_t v18 = v15;
    *(_DWORD *)uint64_t v8 = 136446210;
    v14[1] = v8 + 4;
    id v9 = objc_msgSend(v5, sel_description);
    uint64_t v10 = sub_1C28CD730();
    unint64_t v12 = v11;

    uint64_t v17 = sub_1C27D36AC(v10, v12, &v18);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v6, v7, "[%{public}s]: Received profile list did update, fetching profiles", v8, 0xCu);
    uint64_t v13 = v15;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v13, -1, -1);
    MEMORY[0x1C87609B0](v8, -1, -1);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1C27C4210(0, 0);
}

void sub_1C27F1D60()
{
}

uint64_t UnsafeSendableTransfer.wrappedValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UnsafeSendableTransfer.wrappedValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UnsafeSendableTransfer.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t UnsafeSendableTransfer.init(wrappedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t sub_1C27F1E54()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1C27F1EE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1C27F1F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C27F1FEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C27F203C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_1C27F208C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C27F21E8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C27F2400);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for UnsafeSendableTransfer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C27F2440(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v4 = 0x80000001C28DAC20;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000019;
      unsigned int v5 = "highHeartRateNotification";
      goto LABEL_7;
    case 2:
      unint64_t v3 = 0xD000000000000018;
      unsigned int v5 = "lowHeartRateNotification";
      goto LABEL_7;
    case 3:
      unint64_t v4 = 0x80000001C28DAC80;
      unint64_t v3 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v3 = 0xD00000000000001DLL;
      unsigned int v5 = "walkingSteadinessNotification";
      goto LABEL_7;
    case 5:
      unint64_t v3 = 0xD00000000000001ELL;
      unsigned int v5 = "hearingEnvironmentNotification";
LABEL_7:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000001CLL;
  unint64_t v7 = 0x80000001C28DAC20;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xD000000000000019;
      size_t v8 = "highHeartRateNotification";
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xD000000000000018;
      size_t v8 = "lowHeartRateNotification";
      goto LABEL_14;
    case 3:
      unint64_t v7 = 0x80000001C28DAC80;
      unint64_t v6 = 0xD000000000000011;
      break;
    case 4:
      unint64_t v6 = 0xD00000000000001DLL;
      size_t v8 = "walkingSteadinessNotification";
      goto LABEL_14;
    case 5:
      unint64_t v6 = 0xD00000000000001ELL;
      size_t v8 = "hearingEnvironmentNotification";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v3 == v6 && v4 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C27F2608(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x6D614E7473726966;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6D614E7473726966;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t v5 = 0x616D496F746F6870;
      unint64_t v6 = 0xEA00000000006567;
      break;
    case 3:
      unint64_t v5 = 0x6564496573756572;
      unint64_t v6 = 0xEF7265696669746ELL;
      break;
    case 4:
      unint64_t v7 = "uniqueIdentifier";
      goto LABEL_7;
    case 5:
      unint64_t v7 = "isPrimaryProfile";
LABEL_7:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      unint64_t v3 = 0x656D614E7473616CLL;
      break;
    case 2:
      unint64_t v3 = 0x616D496F746F6870;
      unint64_t v2 = 0xEA00000000006567;
      break;
    case 3:
      unint64_t v3 = 0x6564496573756572;
      unint64_t v2 = 0xEF7265696669746ELL;
      break;
    case 4:
      size_t v8 = "uniqueIdentifier";
      goto LABEL_14;
    case 5:
      size_t v8 = "isPrimaryProfile";
LABEL_14:
      unint64_t v2 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000010;
      break;
    default:
      break;
  }
  if (v5 == v3 && v6 == v2) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1C27F2810(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x7972616D697270;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7972616D697270;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x7261646E6F636573;
      unint64_t v3 = 0xE900000000000079;
      break;
    case 2:
      unint64_t v3 = 0xE800000000000000;
      uint64_t v5 = 0x7972616974726574;
      break;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746E65636361;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE900000000000079;
      if (v5 == 0x7261646E6F636573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v2 = 0x7972616974726574;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746E65636361) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C27F29C0(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6E69747563657865;
    }
    else {
      uint64_t v3 = 0x64656873696E6966;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE900000000000067;
    }
    else {
      unint64_t v4 = 0xE800000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6E69747563657865;
      }
      else {
        uint64_t v6 = 0x64656873696E6966;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE900000000000067;
      }
      else {
        unint64_t v7 = 0xE800000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x7964616572;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x7964616572)
  {
LABEL_21:
    char v8 = sub_1C28CE640();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C27F2ADC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x7475626972747461;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007365;
  }
  if (a2) {
    uint64_t v5 = 0x7475626972747461;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007365;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C27F2B7C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6874646977;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6874646977;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      uint64_t v5 = 0x746867696568;
      break;
    case 2:
      unint64_t v3 = 0xE300000000000000;
      uint64_t v5 = 7107189;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x726F6C6F436762;
      break;
    case 4:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003172;
      break;
    case 5:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003272;
      break;
    case 6:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003372;
      break;
    case 7:
      uint64_t v5 = 0x6F6C6F4374786574;
      unint64_t v3 = 0xEA00000000003472;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x746867696568) {
        goto LABEL_22;
      }
      goto LABEL_25;
    case 2:
      unint64_t v6 = 0xE300000000000000;
      if (v5 != 7107189) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x726F6C6F436762) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v6 = 0xEA00000000003172;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v6 = 0xEA00000000003272;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      uint64_t v2 = 0x6F6C6F4374786574;
      unint64_t v6 = 0xEA00000000003372;
      goto LABEL_21;
    case 7:
      unint64_t v6 = 0xEA00000000003472;
      if (v5 != 0x6F6C6F4374786574) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v5 != v2) {
        goto LABEL_25;
      }
LABEL_22:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_25:
      }
        char v7 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1C27F2E20(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E6F6974616C6572;
  }
  else {
    uint64_t v3 = 25705;
  }
  if (v2) {
    unint64_t v4 = 0xE200000000000000;
  }
  else {
    unint64_t v4 = 0xED00007370696873;
  }
  if (a2) {
    uint64_t v5 = 0x6E6F6974616C6572;
  }
  else {
    uint64_t v5 = 25705;
  }
  if (a2) {
    unint64_t v6 = 0xED00007370696873;
  }
  else {
    unint64_t v6 = 0xE200000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1C27F2EC8(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEA0000000000656DLL;
  unint64_t v3 = 0x614E747369747261;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000012;
    }
    else {
      unint64_t v5 = 1701667182;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x80000001C28DAE00;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x614E747369747261;
  unint64_t v6 = 0xEA0000000000656DLL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000012;
    }
    else {
      unint64_t v3 = 1701667182;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x80000001C28DAE00;
    }
    else {
      unint64_t v2 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C27F2FD4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000011;
  unint64_t v3 = 0x80000001C28DAD20;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000011;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x464364756F6C4369;
      unint64_t v3 = 0xE900000000000055;
      break;
    case 2:
      unint64_t v5 = 0xD00000000000001BLL;
      unint64_t v6 = "iCloudFutureProtocolVersion";
      goto LABEL_6;
    case 3:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "iCloudAccountProhibited";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD000000000000012;
      unint64_t v6 = "networkUnavailable";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000001C28DAD20;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE900000000000055;
      if (v5 == 0x464364756F6C4369) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v2 = 0xD00000000000001BLL;
      char v8 = "iCloudFutureProtocolVersion";
      goto LABEL_14;
    case 3:
      unint64_t v2 = 0xD000000000000017;
      char v8 = "iCloudAccountProhibited";
      goto LABEL_14;
    case 4:
      unint64_t v2 = 0xD000000000000012;
      char v8 = "networkUnavailable";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_15;
    case 5:
      unint64_t v7 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v5 != v2) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_19:
      }
        char v9 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1C27F31B4(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x6C62697369567369;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6C62697369567369;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v7 = "isShareableFeedItemEnabled";
      goto LABEL_11;
    case 2:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v7 = "isDragAndDropSupported";
      goto LABEL_11;
    case 3:
      char v8 = "dataTypeDetailShareAction";
      goto LABEL_7;
    case 4:
      unint64_t v5 = 0xD00000000000001CLL;
      unint64_t v7 = "dataTypeDetailCompactAddData";
      goto LABEL_11;
    case 5:
      char v8 = "dataTypeDetailContextMenu";
LABEL_7:
      unint64_t v6 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000019;
      break;
    case 6:
      unint64_t v5 = 0xD000000000000020;
      unint64_t v7 = "defaultDataTypeDetailDebugAction";
      goto LABEL_11;
    case 7:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v7 = "healthSharingShareSheet";
      goto LABEL_11;
    case 8:
      unint64_t v5 = 0xD00000000000001ALL;
      unint64_t v7 = "healthSharingHealthAppLink";
LABEL_11:
      unint64_t v6 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v9 = 0xD00000000000001ALL;
      unsigned int v10 = "isShareableFeedItemEnabled";
      goto LABEL_24;
    case 2:
      unint64_t v9 = 0xD000000000000016;
      unsigned int v10 = "isDragAndDropSupported";
      goto LABEL_24;
    case 3:
      int v11 = "dataTypeDetailShareAction";
      goto LABEL_18;
    case 4:
      unint64_t v9 = 0xD00000000000001CLL;
      unsigned int v10 = "dataTypeDetailCompactAddData";
      goto LABEL_24;
    case 5:
      int v11 = "dataTypeDetailContextMenu";
LABEL_18:
      unint64_t v2 = (unint64_t)(v11 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000019;
      goto LABEL_19;
    case 6:
      unint64_t v9 = 0xD000000000000020;
      unsigned int v10 = "defaultDataTypeDetailDebugAction";
      goto LABEL_24;
    case 7:
      unint64_t v9 = 0xD000000000000017;
      unsigned int v10 = "healthSharingShareSheet";
      goto LABEL_24;
    case 8:
      unint64_t v9 = 0xD00000000000001ALL;
      unsigned int v10 = "healthSharingHealthAppLink";
LABEL_24:
      unint64_t v2 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 == v9) {
        goto LABEL_25;
      }
      goto LABEL_27;
    default:
LABEL_19:
      if (v5 != v3) {
        goto LABEL_27;
      }
LABEL_25:
      if (v6 == v2) {
        char v12 = 1;
      }
      else {
LABEL_27:
      }
        char v12 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1C27F3404()
{
  unint64_t v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C27F344C(char a1)
{
  unint64_t v3 = (unsigned char *)(v1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  uint64_t result = swift_beginAccess();
  *unint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C27F3498())()
{
  return j__swift_endAccess;
}

uint64_t AsynchronousOperation.ExecutionState.rawValue.getter()
{
  uint64_t v1 = 0x6E69747563657865;
  if (*v0 != 1) {
    uint64_t v1 = 0x64656873696E6966;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x7964616572;
  }
}

HealthExperience::AsynchronousOperation::ExecutionState_optional __swiftcall AsynchronousOperation.ExecutionState.init(rawValue:)(Swift::String rawValue)
{
  unint64_t v2 = v1;
  unint64_t v3 = sub_1C28CE460();
  result.value = swift_bridgeObjectRelease();
  char v5 = 3;
  if (v3 < 3) {
    char v5 = v3;
  }
  *unint64_t v2 = v5;
  return result;
}

uint64_t sub_1C27F35AC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1C27F29C0(*a1, *a2);
}

uint64_t sub_1C27F35B8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27F365C()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C27F36EC()
{
  return sub_1C28CE740();
}

HealthExperience::AsynchronousOperation::ExecutionState_optional sub_1C27F378C(Swift::String *a1)
{
  return AsynchronousOperation.ExecutionState.init(rawValue:)(*a1);
}

void sub_1C27F3798(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE900000000000067;
  uint64_t v5 = 0x6E69747563657865;
  if (v2 != 1)
  {
    uint64_t v5 = 0x64656873696E6966;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x7964616572;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

void (*sub_1C27F37F8(uint64_t a1))()
{
  *(void *)a1 = v1;
  sub_1C28CCB10();
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a1 + 11);
  return sub_1C27F3854;
}

void sub_1C27F3854()
{
}

void sub_1C27F38A4()
{
}

uint64_t sub_1C27F38C8()
{
  return swift_release();
}

void sub_1C27F3960(void *a1)
{
  if ((objc_msgSend(a1, sel_isFinished) & 1) != 0
    || (objc_msgSend(a1, sel_isCancelled) & 1) != 0)
  {
    v4.receiver = a1;
    v4.super_class = (Class)type metadata accessor for AsynchronousOperation();
    objc_msgSendSuper2(&v4, sel_cancel);
  }
  else
  {
    sub_1C28CCB20();
    sub_1C28CCB10();
    if (v5 == 1 && (v6 & 1) == 0)
    {
      uint64_t v2 = sub_1C28CCB20();
      (*(void (**)(uint64_t))((*MEMORY[0x1E4FBC8C8] & *a1) + 0xB8))(v2);
    }
    v7.receiver = a1;
    v7.super_class = (Class)type metadata accessor for AsynchronousOperation();
    objc_msgSendSuper2(&v7, sel_cancel);
    if (objc_msgSend(a1, sel_isExecuting))
    {
      unint64_t v3 = (char *)a1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel;
      swift_beginAccess();
      if (*v3 == 1) {
        sub_1C27BF20C();
      }
    }
  }
}

unsigned char *sub_1C27F3AC0(unsigned char *result)
{
  char v1 = result[1];
  char v2 = result[2];
  *HealthExperience::AsynchronousOperation::ExecutionState_optional result = 1;
  result[1] = v1;
  result[2] = v2;
  return result;
}

void sub_1C27F3BA0()
{
  sub_1C27F3960(*(void **)(v0 + 16));
}

void sub_1C27F3C28()
{
}

uint64_t sub_1C27F3D0C()
{
  return 0;
}

unint64_t sub_1C27F3DD4()
{
  unint64_t result = qword_1EBB770C0;
  if (!qword_1EBB770C0)
  {
    type metadata accessor for AsynchronousOperation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB770C0);
  }
  return result;
}

id AsynchronousOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

id AsynchronousOperation.init()()
{
  v0[OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel] = 1;
  uint64_t v1 = OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_operationState;
  sub_1C27C7920();
  int v6 = 0;
  swift_allocObject();
  char v2 = v0;
  *(void *)&v0[v1] = sub_1C28CCB40();
  uint64_t v3 = OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock;
  sub_1C28CC650();
  swift_allocObject();
  *(void *)&v2[v3] = sub_1C28CC640();

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for AsynchronousOperation();
  return objc_msgSendSuper2(&v5, sel_init);
}

id AsynchronousOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsynchronousOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

unint64_t sub_1C27F3F34()
{
  unint64_t result = qword_1EA3102D8;
  if (!qword_1EA3102D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3102D8);
  }
  return result;
}

uint64_t sub_1C27F3F88@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v3 = (unsigned char *)(*a1 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  uint64_t result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1C27F3FDC(char *a1, void *a2)
{
  char v2 = *a1;
  uint64_t v3 = (unsigned char *)(*a2 + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation__autoFinishesOnCancel);
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = v2;
  return result;
}

uint64_t sub_1C27F402C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1C28CCB10();
  *a1 = v3;
  return result;
}

void sub_1C27F4074()
{
}

uint64_t method lookup function for AsynchronousOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsynchronousOperation);
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x68))();
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x70))();
}

uint64_t dispatch thunk of AsynchronousOperation._autoFinishesOnCancel.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of AsynchronousOperation.state.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of AsynchronousOperation.state.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of AsynchronousOperation.performWithExclusiveAccess(onlyIfEligibleToRun:thenFinish:_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of AsynchronousOperation.cleanUp()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xB8))();
}

unsigned char *storeEnumTagSinglePayload for AsynchronousOperation.ExecutionState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C27F42FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AsynchronousOperation.OperationState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[4]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for AsynchronousOperation.OperationState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_DWORD *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 4) = 0;
    }
    if (a2) {
      *(unsigned char *)uint64_t result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AsynchronousOperation.OperationState()
{
  return &type metadata for AsynchronousOperation.OperationState;
}

uint64_t sub_1C27F43CC(void *a1)
{
  sub_1C27F51C8();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v7 = objc_msgSend(a1, sel_profileIdentifier);
  uint64_t v8 = HKSummarySharingEntryStore.fetchIncomingAcceptedEntryProfileInformation(for:)(v7);

  v11[1] = v8;
  sub_1C27F5274(0, &qword_1EA3102E8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, MEMORY[0x1E4F1AAE0]);
  sub_1C28CC920();
  sub_1C27F5300();
  sub_1C28CD330();
  swift_release();
  sub_1C27D6C70(&qword_1EA3102F8, (void (*)(uint64_t))sub_1C27F51C8);
  uint64_t v9 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v9;
}

uint64_t sub_1C27F459C(void *a1)
{
  sub_1C27F57B4();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unsigned int v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1C27F57B4;
  int v15 = sub_1C27F595C;
  sub_1C27D6BE0(0, &qword_1EA310328, (void (*)(uint64_t))sub_1C27F57B4, MEMORY[0x1E4F67270], (void (*)(void))sub_1C27F595C);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  int v11 = (char *)&v15 - v10;
  *(void *)(swift_allocObject() + 16) = a1;
  sub_1C27F5274(0, &qword_1EA310310, (uint64_t (*)(uint64_t))sub_1C27F5848, MEMORY[0x1E4F1AC28]);
  sub_1C27F58D4();
  id v12 = a1;
  sub_1C28CD260();
  sub_1C28CC920();
  sub_1C27F595C();
  sub_1C28CD330();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C27D6FB8(&qword_1EA310338, &qword_1EA310328, (void (*)(uint64_t))v16, (void (*)(void))v15);
  uint64_t v13 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v13;
}

void sub_1C27F4844()
{
  if (!qword_1EBB75668)
  {
    unint64_t v0 = sub_1C28CD640();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75668);
    }
  }
}

uint64_t sub_1C27F48AC@<X0>(uint64_t *a1@<X8>)
{
  sub_1C28CD730();
  uint64_t v2 = sub_1C28CDD10();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_1C27F4900()
{
  return swift_deallocObject();
}

uint64_t sub_1C27F4938@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C27F48AC(a1);
}

uint64_t sub_1C27F4940@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  sub_1C27B9E94(a1, (uint64_t)v4);
  if (!v4[3])
  {
    uint64_t result = sub_1C27F5158((uint64_t)v4, (unint64_t *)&qword_1EBB77160, MEMORY[0x1E4FBC840] + 8);
    goto LABEL_5;
  }
  sub_1C27F4844();
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
LABEL_5:
  }
    *a2 = 0;
  return result;
}

uint64_t sub_1C27F49C8@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *a1;
  if (!*a1)
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    goto LABEL_9;
  }
  uint64_t v4 = sub_1C28CD730();
  if (!*(void *)(v3 + 16) || (unint64_t v6 = sub_1C27D3320(v4, v5), (v7 & 1) == 0))
  {
    uint64_t v11 = 0;
    long long v9 = 0u;
    long long v10 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_9;
  }
  sub_1C27F50FC(*(void *)(v3 + 56) + 40 * v6, (uint64_t)&v9);
  swift_bridgeObjectRelease();
  if (!*((void *)&v10 + 1))
  {
LABEL_9:
    uint64_t result = sub_1C27F5158((uint64_t)&v9, &qword_1EBB757E8, MEMORY[0x1E4FBB960]);
    goto LABEL_10;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_10:
    *a2 = 0;
    a2[1] = 0;
  }
  return result;
}

uint64_t sub_1C27F4AB4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[1];
  if (v3)
  {
    uint64_t v4 = *a1;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v4 = sub_1C27F4B30();
  }
  *a2 = v4;
  a2[1] = v5;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C27F4B18()
{
  return swift_deallocObject();
}

uint64_t sub_1C27F4B28@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C27F4AB4(a1, a2);
}

uint64_t sub_1C27F4B30()
{
  v28[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v0 = sub_1C28CCE10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B980]), sel_init);
  sub_1C27D6CB8(0, (unint64_t *)&qword_1EBB76860, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1C28D19D0;
  unint64_t v6 = (void *)*MEMORY[0x1E4F1ADF0];
  *(void *)(v5 + 32) = *MEMORY[0x1E4F1ADF0];
  v28[0] = (id)v5;
  sub_1C28CD940();
  sub_1C27D8FA4();
  id v7 = v6;
  uint64_t v8 = (void *)sub_1C28CD910();
  swift_bridgeObjectRelease();
  v28[0] = 0;
  id v9 = objc_msgSend(v4, sel__ios_meContactWithKeysToFetch_error_, v8, v28);

  if (v9)
  {
    id v10 = v28[0];
    id v11 = objc_msgSend(v9, sel_givenName);
    uint64_t v12 = sub_1C28CD730();
  }
  else
  {
    id v13 = v28[0];
    unsigned int v14 = (void *)sub_1C28CC290();

    swift_willThrow();
    sub_1C28CCDC0();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_1C28CCE00();
    os_log_type_t v18 = sub_1C28CDCB0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = (void *)swift_slowAlloc();
      v28[0] = v20;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v21 = sub_1C28CE830();
      uint64_t v27 = sub_1C27D36AC(v21, v22, (uint64_t *)v28);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2082;
      uint64_t v27 = (uint64_t)v14;
      id v23 = v14;
      sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
      uint64_t v24 = sub_1C28CD750();
      uint64_t v27 = sub_1C27D36AC(v24, v25, (uint64_t *)v28);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v17, v18, "[%{public}s] Failed to get me contact: %{public}s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v20, -1, -1);
      MEMORY[0x1C87609B0](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
    return 0;
  }
  return v12;
}

uint64_t sub_1C27F4F30(uint64_t *a1)
{
  unint64_t v2 = a1[1];
  if (v2)
  {
    uint64_t v3 = *a1;
    unint64_t v4 = v2;
  }
  else
  {
    uint64_t v3 = 0;
    unint64_t v4 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = MEMORY[0x1E4FBC860];

  return MEMORY[0x1F41205F8](v3, v4, v5);
}

uint64_t sub_1C27F4FA0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SharingEntryProfileInformation();
  MEMORY[0x1F4188790](v2 - 8);
  unint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1EBB75DA0 != -1) {
    swift_once();
  }
  uint64_t v5 = (void *)qword_1EBB75D90;
  sub_1C27D6CB8(0, (unint64_t *)&qword_1EBB76860, MEMORY[0x1E4FBC838] + 8, MEMORY[0x1E4FBBE00]);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C28D19D0;
  id v7 = (void *)*MEMORY[0x1E4F1AD88];
  *(void *)(v6 + 32) = *MEMORY[0x1E4F1AD88];
  uint64_t v13 = v6;
  sub_1C28CD940();
  uint64_t v8 = v13;
  id v9 = v7;
  id v10 = sub_1C27F5388(a1, v8, v5);
  swift_bridgeObjectRelease();
  sub_1C27DF188(a1, (uint64_t)v4);
  return ProfileDisplayName.init(sharingEntry:contact:)((uint64_t)v4, v10);
}

uint64_t sub_1C27F50FC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C27F5158(uint64_t a1, unint64_t *a2, uint64_t a3)
{
  sub_1C27D6CB8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_1C27F51C8()
{
  if (!qword_1EA3102E0)
  {
    sub_1C27F5274(255, &qword_1EA3102E8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, MEMORY[0x1E4F1AAE0]);
    sub_1C28CC920();
    sub_1C27F5300();
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3102E0);
    }
  }
}

void sub_1C27F5274(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, uint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    uint64_t v8 = sub_1C27CAE78(255, (unint64_t *)&qword_1EBB77150);
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C27F5300()
{
  unint64_t result = qword_1EA3102F0;
  if (!qword_1EA3102F0)
  {
    sub_1C27F5274(255, &qword_1EA3102E8, (uint64_t (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3102F0);
  }
  return result;
}

id sub_1C27F5388(uint64_t a1, uint64_t a2, void *a3)
{
  v35[5] = *MEMORY[0x1E4F143B8];
  swift_getObjectType();
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for SharingEntryProfileInformation();
  v35[3] = v9;
  v35[4] = (uint64_t)&protocol witness table for SharingEntryProfileInformation;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v35);
  sub_1C27DF188(a1, (uint64_t)boxed_opaque_existential_0);
  if (!*(uint64_t *)((char *)boxed_opaque_existential_0 + *(int *)(v9 + 28) + 8))
  {
LABEL_7:
    id v13 = 0;
    goto LABEL_8;
  }
  swift_bridgeObjectRetain();
  id v11 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  sub_1C27D8FA4();
  uint64_t v12 = (void *)sub_1C28CD910();
  v34[0] = 0;
  id v13 = objc_msgSend(a3, sel_unifiedContactWithIdentifier_keysToFetch_error_, v11, v12, v34);

  id v14 = v34[0];
  if (!v13)
  {
    id v15 = v14;
    id v16 = (void *)sub_1C28CC290();

    swift_willThrow();
    sub_1C28CCDC0();
    sub_1C27CE8A4((uint64_t)v35, (uint64_t)v34);
    id v17 = v16;
    id v18 = v16;
    uint64_t v19 = sub_1C28CCE00();
    os_log_type_t v20 = sub_1C28CDCB0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = swift_slowAlloc();
      uint64_t v31 = swift_slowAlloc();
      uint64_t v33 = v31;
      *(_DWORD *)uint64_t v21 = 136315651;
      uint64_t v22 = sub_1C289C9D4();
      v32[0] = sub_1C27D36AC(v22, v23, &v33);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v21 + 12) = 2081;
      sub_1C27CE8A4((uint64_t)v34, (uint64_t)v32);
      sub_1C27CAE78(0, &qword_1EA310300);
      uint64_t v24 = sub_1C28CD750();
      v32[0] = sub_1C27D36AC(v24, v25, &v33);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
      *(_WORD *)(v21 + 22) = 2080;
      v32[0] = (uint64_t)v16;
      id v26 = v16;
      sub_1C27CAE78(0, (unint64_t *)&qword_1EBB77150);
      uint64_t v27 = sub_1C28CD760();
      v32[0] = sub_1C27D36AC(v27, v28, &v33);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v19, v20, "[%s] Could not fetch CNContact data for '%{private}s': %s", (uint8_t *)v21, 0x20u);
      uint64_t v29 = v31;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v29, -1, -1);
      MEMORY[0x1C87609B0](v21, -1, -1);
    }
    else
    {

      __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v34);
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    goto LABEL_7;
  }
LABEL_8:
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v35);
  return v13;
}

void sub_1C27F57B4()
{
  if (!qword_1EA310308)
  {
    sub_1C27F5274(255, &qword_1EA310310, (uint64_t (*)(uint64_t))sub_1C27F5848, MEMORY[0x1E4F1AC28]);
    sub_1C27F58D4();
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310308);
    }
  }
}

void sub_1C27F5848()
{
  if (!qword_1EA310318)
  {
    sub_1C27D6CB8(255, (unint64_t *)&qword_1EBB769F0, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB718]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310318);
    }
  }
}

unint64_t sub_1C27F58D4()
{
  unint64_t result = qword_1EA310320;
  if (!qword_1EA310320)
  {
    sub_1C27F5274(255, &qword_1EA310310, (uint64_t (*)(uint64_t))sub_1C27F5848, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310320);
  }
  return result;
}

uint64_t sub_1C27F595C()
{
  return sub_1C27D6C70(&qword_1EA310330, (void (*)(uint64_t))sub_1C27F57B4);
}

uint64_t sub_1C27F5990@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1C28CDCE0();
  *a1 = result;
  return result;
}

id static AppImageManager.defaultAppIcon()()
{
  return sub_1C27F59F8(*MEMORY[0x1E4F6F298]);
}

id static AppImageManager.defaultAppIconTableUI()()
{
  return sub_1C27F59F8(*MEMORY[0x1E4F6F2B8]);
}

uint64_t AppImageManager.deinit()
{
  return v0;
}

uint64_t AppImageManager.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

id sub_1C27F59F8(uint64_t a1)
{
  id v2 = objc_msgSend(self, sel_mainScreen);
  objc_msgSend(v2, sel_scale);
  double v4 = v3;

  id v5 = objc_msgSend(self, sel_imageDescriptorNamed_, a1);
  objc_msgSend(v5, sel_setScale_, v4);
  id v6 = objc_msgSend(self, sel_genericApplicationIcon);
  id v7 = objc_msgSend(v6, sel_imageForDescriptor_, v5);
  uint64_t v8 = v7;
  if (!v7)
  {

    id v11 = 0;
    goto LABEL_5;
  }
  id result = objc_msgSend(v7, sel_CGImage);
  if (result)
  {
    uint64_t v10 = result;
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB1818]), sel_initWithCGImage_scale_orientation_, result, 0, v4);

LABEL_5:
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for AppImageManager()
{
  return self;
}

uint64_t method lookup function for AppImageManager(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppImageManager);
}

uint64_t SharingEntryProfileInformation.sharingMessageDirection.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 80));
}

uint64_t SharingEntryProfileInformation.sharingStatus.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 76));
}

uint64_t SharingEntryProfileInformation.reuseIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *id v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.reuseIdentifier.modify())()
{
  return nullsub_1;
}

unint64_t SharingEntryProfileInformation.uniqueIdentifier.getter()
{
  return 0xD00000000000001FLL;
}

uint64_t SharingEntryProfileInformation.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 20);
  uint64_t v4 = sub_1C28CC4B0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t SharingEntryProfileInformation.uuid.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 20);
  uint64_t v4 = sub_1C28CC4B0();
  id v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40);

  return v5(v3, a1, v4);
}

uint64_t (*SharingEntryProfileInformation.uuid.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.accountIdentifier.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 24));
  uint64_t result = swift_bridgeObjectRelease();
  *id v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.accountIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.contactIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.contactIdentifier.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 28));
  uint64_t result = swift_bridgeObjectRelease();
  *id v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.contactIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.firstName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.firstName.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 32));
  uint64_t result = swift_bridgeObjectRelease();
  *id v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*SharingEntryProfileInformation.firstName.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.lastName.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.lastName.setter(uint64_t a1, unint64_t a2)
{
  id v5 = (void *)(v2 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *id v5 = a1;
  v5[1] = a2;
  if (a2)
  {
    uint64_t v7 = HIBYTE(a2) & 0xF;
    if ((a2 & 0x2000000000000000) == 0) {
      uint64_t v7 = a1 & 0xFFFFFFFFFFFFLL;
    }
    if (!v7)
    {
      uint64_t result = swift_bridgeObjectRelease();
      a1 = 0;
      a2 = 0;
    }
  }
  *id v5 = a1;
  v5[1] = a2;
  return result;
}

unint64_t (*SharingEntryProfileInformation.lastName.modify(uint64_t a1))(unint64_t result, char a2)
{
  *(void *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(type metadata accessor for SharingEntryProfileInformation() + 36);
  return sub_1C27F614C;
}

unint64_t sub_1C27F614C(unint64_t result, char a2)
{
  if ((a2 & 1) == 0)
  {
    uint64_t v2 = (uint64_t *)(*(void *)result + *(int *)(result + 8));
    uint64_t v3 = *v2;
    uint64_t result = v2[1];
    if (result)
    {
      uint64_t v4 = HIBYTE(result) & 0xF;
      if ((result & 0x2000000000000000) == 0) {
        uint64_t v4 = v3 & 0xFFFFFFFFFFFFLL;
      }
      if (!v4)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = 0;
        uint64_t result = 0;
      }
    }
    *uint64_t v2 = v3;
    v2[1] = result;
  }
  return result;
}

uint64_t _s16HealthExperience30SharingEntryProfileInformationV17accountIdentifierSSvg_0()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 24));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t SharingEntryProfileInformation.dateUpdated.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F67D0(v1 + *(int *)(v3 + 40), a1, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t SharingEntryProfileInformation.dateUpdated.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F68F8(a1, v1 + *(int *)(v3 + 40), (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t (*SharingEntryProfileInformation.dateUpdated.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.showSyncActivity.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 44));
}

uint64_t SharingEntryProfileInformation.showSyncActivity.setter(char a1)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  *(unsigned char *)(v1 + *(int *)(result + 44)) = a1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.showSyncActivity.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.isPaused.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 48));
}

uint64_t SharingEntryProfileInformation.isPaused.setter(char a1)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  *(unsigned char *)(v1 + *(int *)(result + 48)) = a1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.isPaused.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.dateInviteSent.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F67D0(v1 + *(int *)(v3 + 52), a1, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t SharingEntryProfileInformation.dateInviteSent.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F68F8(a1, v1 + *(int *)(v3 + 52), (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t (*SharingEntryProfileInformation.dateInviteSent.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.dateInviteAccepted.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F67D0(v1 + *(int *)(v3 + 56), a1, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t SharingEntryProfileInformation.dateInviteAccepted.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F68F8(a1, v1 + *(int *)(v3 + 56), (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t (*SharingEntryProfileInformation.dateInviteAccepted.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.numTopicsSharing.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 60));
}

uint64_t SharingEntryProfileInformation.numTopicsSharing.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 60);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.numTopicsSharing.modify())()
{
  return nullsub_1;
}

__n128 SharingEntryProfileInformation.endSharingRelationshipState.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 64));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

uint64_t SharingEntryProfileInformation.endSharingRelationshipState.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  char v4 = *((unsigned char *)a1 + 16);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v1 + *(int *)(result + 64);
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = v3;
  *(unsigned char *)(v6 + 16) = v4;
  return result;
}

uint64_t (*SharingEntryProfileInformation.endSharingRelationshipState.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.profileIdentifier.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F67D0(v1 + *(int *)(v3 + 68), a1, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
}

uint64_t sub_1C27F67D0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C27D09CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_1C27F683C()
{
  if (!qword_1EBB75CF0[0])
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77120);
    unint64_t v0 = sub_1C28CD5A0();
    if (!v1) {
      atomic_store(v0, qword_1EBB75CF0);
    }
  }
}

uint64_t SharingEntryProfileInformation.profileIdentifier.setter(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for SharingEntryProfileInformation();
  return sub_1C27F68F8(a1, v1 + *(int *)(v3 + 68), &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
}

uint64_t sub_1C27F68F8(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C27D09CC(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a2, a1, v6);
  return a2;
}

uint64_t (*SharingEntryProfileInformation.profileIdentifier.modify())()
{
  return nullsub_1;
}

id SharingEntryProfileInformation.profileType.getter()
{
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v11 - v2;
  uint64_t v4 = type metadata accessor for SharingEntryProfileInformation();
  sub_1C27F67D0(v0 + *(int *)(v4 + 68), (uint64_t)v3, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  sub_1C27F683C();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v3, 1, v5) == 1)
  {
    sub_1C27F80B0((uint64_t)v3, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    return 0;
  }
  else
  {
    uint64_t v9 = (void *)sub_1C28CD570();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v3, v6);
    id v8 = objc_msgSend(v9, sel_type);
  }
  return v8;
}

Class SharingEntryProfileInformation.image.getter()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
  Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  return isa;
}

uint64_t SharingEntryProfileInformation.sharingType.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 72));
}

uint64_t SharingEntryProfileInformation.sharingType.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 72);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingType.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.sharingStatus.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 76);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingStatus.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.sharingMessageDirection.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 80);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.sharingMessageDirection.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.notificationStatus.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 84));
}

uint64_t SharingEntryProfileInformation.notificationStatus.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 84);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.notificationStatus.modify())()
{
  return nullsub_1;
}

uint64_t SharingEntryProfileInformation.wheelchairUse.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 88));
}

uint64_t SharingEntryProfileInformation.wheelchairUse.setter(uint64_t a1, char a2)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = v2 + *(int *)(result + 88);
  *(void *)uint64_t v6 = a1;
  *(unsigned char *)(v6 + 8) = a2 & 1;
  return result;
}

uint64_t (*SharingEntryProfileInformation.wheelchairUse.modify())()
{
  return nullsub_1;
}

uint64_t static SharingEntryProfileInformation.pluginFeedItemUniqueIdentifierPrefix.getter()
{
  return 0x45676E6972616853;
}

uint64_t static SharingEntryProfileInformation.pluginFeedItemUniqueIdentifier(for:uuid:)()
{
  strcpy((char *)v1, "SharingEntry_");
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  sub_1C28CC460();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t static SharingEntryProfileInformation.decode(from:)()
{
  return swift_release();
}

uint64_t SharingEntryProfileInformation.encode()()
{
  sub_1C28CBEE0();
  swift_allocObject();
  sub_1C28CBED0();
  type metadata accessor for SharingEntryProfileInformation();
  sub_1C28011E0(&qword_1EA310348, (void (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation);
  uint64_t v0 = sub_1C28CBEC0();
  swift_release();
  return v0;
}

uint64_t SharingEntryProfileInformation.init(sharingEntry:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v73 = (uint64_t)&v68 - v5;
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)&v68 - v10;
  *a2 = 0x4E656C69666F7250;
  a2[1] = 0xEF6C6C6543656D61;
  uint64_t v12 = (int *)type metadata accessor for SharingEntryProfileInformation();
  id v13 = (void *)((char *)a2 + v12[9]);
  *id v13 = 0;
  v13[1] = 0;
  uint64_t v72 = v13;
  id v14 = (char *)a2 + v12[10];
  uint64_t v15 = sub_1C28CC450();
  uint64_t v16 = *(void *)(v15 - 8);
  id v17 = *(void (**)(void))(v16 + 56);
  uint64_t v18 = v16 + 56;
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v17)(v14, 1, 1, v15);
  *((unsigned char *)a2 + v12[11]) = 0;
  uint64_t v71 = v12[12];
  *((unsigned char *)a2 + v71) = 0;
  uint64_t v69 = (uint64_t)a2 + v12[13];
  v17();
  uint64_t v68 = (uint64_t)a2 + v12[14];
  uint64_t v74 = v18;
  id v75 = v17;
  v17();
  uint64_t v19 = (char *)a2 + v12[15];
  *(void *)uint64_t v19 = 0;
  v19[8] = 1;
  os_log_type_t v20 = (char *)a2 + v12[16];
  *(_OWORD *)os_log_type_t v20 = xmmword_1C28D1A20;
  v20[16] = 0;
  uint64_t v21 = (uint64_t)a2 + v12[17];
  sub_1C27F683C();
  unint64_t v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56);
  uint64_t v70 = v21;
  v23(v21, 1, 1, v22);
  id v24 = objc_msgSend(a1, sel_UUID);
  sub_1C28CC490();

  id v25 = objc_msgSend(a1, sel_primaryContactIdentifier);
  uint64_t v26 = sub_1C28CD730();
  uint64_t v28 = v27;

  uint64_t v29 = (void *)((char *)a2 + v12[6]);
  *uint64_t v29 = v26;
  v29[1] = v28;
  id v30 = objc_msgSend(a1, sel_CNContactIdentifier);
  if (v30)
  {
    uint64_t v31 = v30;
    uint64_t v32 = (uint64_t)v11;
    uint64_t v33 = sub_1C28CD730();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v32 = (uint64_t)v11;
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  uint64_t v36 = (void *)((char *)a2 + v12[7]);
  *uint64_t v36 = v33;
  v36[1] = v35;
  id v37 = objc_msgSend(a1, sel_type);
  id v38 = (char *)a2 + v12[18];
  *(void *)id v38 = v37;
  v38[8] = 0;
  id v39 = objc_msgSend(a1, sel_status);
  uint64_t v40 = (char *)a2 + v12[19];
  *(void *)uint64_t v40 = v39;
  v40[8] = 0;
  id v41 = objc_msgSend(a1, sel_direction);
  uint64_t v42 = (char *)a2 + v12[20];
  *(void *)uint64_t v42 = v41;
  v42[8] = 0;
  id v43 = objc_msgSend(a1, sel_notificationStatus);
  id v44 = (char *)a2 + v12[21];
  *(void *)id v44 = v43;
  v44[8] = 0;
  id v45 = objc_msgSend(a1, sel_userWheelchairMode);
  id v46 = (char *)a2 + v12[22];
  *(void *)id v46 = v45;
  v46[8] = 0;
  id v47 = objc_msgSend(a1, sel_dateAccepted);
  if (v47)
  {
    id v48 = v47;
    sub_1C28CC430();

    uint64_t v49 = 0;
  }
  else
  {
    uint64_t v49 = 1;
  }
  uint64_t v50 = 1;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v75)(v32, v49, 1, v15);
  sub_1C27F68F8(v32, v68, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  id v51 = objc_msgSend(a1, sel_dateInvited);
  if (v51)
  {
    uint64_t v52 = v51;
    sub_1C28CC430();

    uint64_t v50 = 0;
  }
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v75)(v9, v50, 1, v15);
  sub_1C27F68F8((uint64_t)v9, v69, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  id v53 = objc_msgSend(a1, sel_firstName);
  if (v53)
  {
    uint64_t v54 = v53;
    uint64_t v55 = sub_1C28CD730();
    unint64_t v57 = v56;
  }
  else
  {
    uint64_t v55 = 0;
    unint64_t v57 = 0xE000000000000000;
  }
  uint64_t v58 = (void *)((char *)a2 + v12[8]);
  uint64_t *v58 = v55;
  v58[1] = v57;
  id v59 = objc_msgSend(a1, sel_lastName);
  if (v59)
  {
    uint64_t v60 = v59;
    uint64_t v61 = sub_1C28CD730();
    uint64_t v63 = v62;
  }
  else
  {
    uint64_t v61 = 0;
    uint64_t v63 = 0;
  }
  id v64 = v72;
  swift_bridgeObjectRelease();
  *id v64 = v61;
  v64[1] = v63;
  unsigned __int8 v65 = objc_msgSend(a1, sel_isPaused);
  *((unsigned char *)a2 + v71) = v65;
  uint64_t v66 = v73;
  sub_1C27F76F0(*(void *)v42, v42[8], *(void *)v40, v40[8], a1, v73);

  return sub_1C27F68F8(v66, v70, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
}

uint64_t sub_1C27F76F0@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1C28CCE10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0 || a1 != 1 || (a4 & 1) != 0 || a3 != 1)
  {
    sub_1C27F683C();
    id v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
    uint64_t v18 = v21;
    uint64_t v19 = a6;
    uint64_t v20 = 1;
    goto LABEL_8;
  }
  if (objc_msgSend(a5, sel_profileIdentifier))
  {
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
    sub_1C28CD5B0();
    sub_1C27F683C();
    id v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);
    uint64_t v18 = v16;
    uint64_t v19 = a6;
    uint64_t v20 = 0;
LABEL_8:
    return v17(v19, v20, 1, v18);
  }
  sub_1C28CCD80();
  id v23 = a5;
  id v24 = sub_1C28CCE00();
  os_log_type_t v25 = sub_1C28CDCC0();
  int v26 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    uint64_t v27 = swift_slowAlloc();
    int v41 = v26;
    uint64_t v28 = v27;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v44 = v42;
    *(_DWORD *)uint64_t v28 = 136315394;
    uint64_t v43 = type metadata accessor for SharingEntryProfileInformation();
    sub_1C28012A4();
    os_log_t v40 = v24;
    uint64_t v29 = sub_1C28CD750();
    uint64_t v43 = sub_1C27D36AC(v29, v30, &v44);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v28 + 12) = 2080;
    uint64_t v39 = v28 + 14;
    id v31 = v23;
    id v32 = objc_msgSend(v31, sel_description);
    uint64_t v33 = sub_1C28CD730();
    unint64_t v35 = v34;

    uint64_t v43 = sub_1C27D36AC(v33, v35, &v44);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    os_log_t v36 = v40;
    _os_log_impl(&dword_1C27B7000, v40, (os_log_type_t)v41, "[%s]: Received accepted sharing entry without associated profile identifier: %s", (uint8_t *)v28, 0x16u);
    uint64_t v37 = v42;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v37, -1, -1);
    MEMORY[0x1C87609B0](v28, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  sub_1C27F683C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(a6, 1, 1, v38);
}

uint64_t SharingEntryProfileInformation.init(uuid:accountIdentifier:firstName:lastName:sharingType:sharingStatus:sharingMessageDirection:dateInviteAccepted:dateInviteSent:wheelchairUse:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10, uint64_t a11, char a12, uint64_t a13, unsigned __int8 a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v65 = a8;
  uint64_t v79 = a6;
  uint64_t v80 = a7;
  uint64_t v77 = a4;
  uint64_t v78 = a5;
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  uint64_t v81 = a16;
  uint64_t v82 = a15;
  uint64_t v69 = a13;
  uint64_t v70 = a17;
  uint64_t v62 = a1;
  uint64_t v63 = a11;
  int v64 = a10;
  int v71 = a14;
  int v66 = a14 & 1;
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v61 = (char *)&v60 - v19;
  *a9 = 0x4E656C69666F7250;
  a9[1] = 0xEF6C6C6543656D61;
  uint64_t v20 = (int *)type metadata accessor for SharingEntryProfileInformation();
  uint64_t v21 = (void *)((char *)a9 + v20[7]);
  *uint64_t v21 = 0;
  v21[1] = 0;
  uint64_t v22 = (void *)((char *)a9 + v20[9]);
  *uint64_t v22 = 0;
  v22[1] = 0;
  uint64_t v72 = v22;
  id v23 = (char *)a9 + v20[10];
  uint64_t v24 = sub_1C28CC450();
  os_log_type_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  v25(v23, 1, 1, v24);
  *((unsigned char *)a9 + v20[11]) = 0;
  *((unsigned char *)a9 + v20[12]) = 0;
  uint64_t v26 = (uint64_t)a9 + v20[13];
  v25((char *)v26, 1, 1, v24);
  uint64_t v27 = (uint64_t)a9 + v20[14];
  v25((char *)v27, 1, 1, v24);
  uint64_t v28 = (char *)a9 + v20[15];
  *(void *)uint64_t v28 = 0;
  v28[8] = 1;
  uint64_t v29 = v62;
  unint64_t v30 = (char *)a9 + v20[16];
  *(_OWORD *)unint64_t v30 = xmmword_1C28D1A20;
  v30[16] = 0;
  uint64_t v31 = (uint64_t)a9 + v20[17];
  sub_1C27F683C();
  uint64_t v33 = *(void *)(v32 - 8);
  unint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 56);
  uint64_t v75 = v32;
  uint64_t v76 = v31;
  uint64_t v73 = v33 + 56;
  uint64_t v74 = v34;
  ((void (*)(uint64_t, uint64_t, uint64_t))v34)(v31, 1, 1);
  unint64_t v35 = (char *)a9 + v20[5];
  uint64_t v36 = sub_1C28CC4B0();
  uint64_t v37 = *(void *)(v36 - 8);
  uint64_t v38 = v35;
  uint64_t v39 = v63;
  (*(void (**)(char *, uint64_t, uint64_t))(v37 + 16))(v38, v29, v36);
  os_log_t v40 = (void *)((char *)a9 + v20[6]);
  uint64_t v41 = v68;
  void *v40 = v67;
  v40[1] = v41;
  uint64_t v42 = (char *)a9 + v20[18];
  *(void *)uint64_t v42 = v65;
  v42[8] = v64 & 1;
  uint64_t v43 = (char *)a9 + v20[19];
  *(void *)uint64_t v43 = v39;
  v43[8] = a12 & 1;
  uint64_t v44 = (char *)a9 + v20[20];
  uint64_t v45 = v69;
  *(void *)uint64_t v44 = v69;
  v44[8] = v66;
  id v46 = (char *)a9 + v20[21];
  *(void *)id v46 = 0;
  v46[8] = 0;
  id v47 = (char *)a9 + v20[22];
  *(void *)id v47 = v70;
  v47[8] = 0;
  sub_1C27F8030(v82, v27);
  sub_1C27F8030(v81, v26);
  if ((v71 & 1) != 0 || v45 != 1 || (a12 & 1) != 0 || v39 != 1)
  {
    id v53 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C27F80B0(v81, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    sub_1C27F80B0(v82, (unint64_t *)&qword_1EBB771E0, v53);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v29, v36);
    uint64_t v54 = v76;
    sub_1C27F80B0(v76, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    v74(v54, 1, 1, v75);
  }
  else
  {
    id v48 = self;
    uint64_t v49 = (void *)sub_1C28CC470();
    id v50 = objc_msgSend(v48, sel__profileWithUUID_type_, v49, 2);

    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
    uint64_t v51 = (uint64_t)v61;
    sub_1C28CD5B0();
    uint64_t v52 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C27F80B0(v81, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    sub_1C27F80B0(v82, (unint64_t *)&qword_1EBB771E0, v52);
    (*(void (**)(uint64_t, uint64_t))(v37 + 8))(v29, v36);
    v74(v51, 0, 1, v75);
    sub_1C27F68F8(v51, v76, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  }
  uint64_t v55 = (void *)((char *)a9 + v20[8]);
  uint64_t v56 = v78;
  *uint64_t v55 = v77;
  v55[1] = v56;
  unint64_t v57 = v72;
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v59 = v80;
  *unint64_t v57 = v79;
  v57[1] = v59;
  return result;
}

uint64_t sub_1C27F8030(uint64_t a1, uint64_t a2)
{
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C27F80B0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_1C27D09CC(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C27F810C(char a1)
{
  unint64_t result = 0x6564496573756572;
  switch(a1)
  {
    case 1:
      unint64_t result = 1684632949;
      break;
    case 2:
    case 3:
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6D614E7473726966;
      break;
    case 5:
      unint64_t result = 0x656D614E7473616CLL;
      break;
    case 6:
      unint64_t result = 0x6164705565746164;
      break;
    case 7:
      unint64_t result = 0xD000000000000010;
      break;
    case 8:
      unint64_t result = 0x6465737561507369;
      break;
    case 9:
      unint64_t result = 0x69766E4965746164;
      break;
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 14:
      unint64_t result = 0x54676E6972616873;
      break;
    case 15:
      unint64_t result = 0x53676E6972616873;
      break;
    case 16:
      unint64_t result = 0xD000000000000017;
      break;
    case 17:
      unint64_t result = 0xD000000000000012;
      break;
    case 18:
      unint64_t result = 0x6168636C65656877;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C27F8378()
{
  return sub_1C27F810C(*v0);
}

uint64_t sub_1C27F8380@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C280093C(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C27F83A8(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_1C27F83B4(uint64_t a1)
{
  unint64_t v2 = sub_1C27FB84C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C27F83F0(uint64_t a1)
{
  unint64_t v2 = sub_1C27FB84C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t SharingEntryProfileInformation.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C27FBC64(0, &qword_1EA310350, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v24 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27FB84C();
  sub_1C28CE800();
  LOBYTE(v24) = 0;
  sub_1C28CE5A0();
  if (!v2)
  {
    uint64_t v10 = (int *)type metadata accessor for SharingEntryProfileInformation();
    LOBYTE(v24) = 1;
    sub_1C28CC4B0();
    sub_1C28011E0(&qword_1EA310360, MEMORY[0x1E4F27990]);
    sub_1C28CE5E0();
    LOBYTE(v24) = 2;
    sub_1C28CE5A0();
    LOBYTE(v24) = 3;
    sub_1C28CE560();
    LOBYTE(v24) = 4;
    sub_1C28CE5A0();
    LOBYTE(v24) = 5;
    sub_1C28CE560();
    LOBYTE(v24) = 6;
    sub_1C28CC450();
    sub_1C28011E0(&qword_1EA310368, MEMORY[0x1E4F27928]);
    sub_1C28CE590();
    LOBYTE(v24) = 7;
    sub_1C28CE5B0();
    LOBYTE(v24) = 8;
    sub_1C28CE5B0();
    LOBYTE(v24) = 9;
    sub_1C28CE590();
    LOBYTE(v24) = 10;
    sub_1C28CE590();
    LOBYTE(v24) = 11;
    sub_1C28CE580();
    uint64_t v11 = (long long *)(v3 + v10[16]);
    char v12 = *((unsigned char *)v11 + 16);
    long long v24 = *v11;
    char v25 = v12;
    char v26 = 12;
    sub_1C27FB8A0();
    sub_1C28CE590();
    LOBYTE(v24) = 13;
    sub_1C27F683C();
    sub_1C28011E0(&qword_1EBB74C60, (void (*)(uint64_t))sub_1C27F683C);
    sub_1C28CE590();
    uint64_t v13 = (uint64_t *)(v3 + v10[18]);
    uint64_t v14 = *v13;
    LOBYTE(v13) = *((unsigned char *)v13 + 8);
    *(void *)&long long v24 = v14;
    BYTE8(v24) = (_BYTE)v13;
    char v26 = 14;
    sub_1C27FB8F4();
    sub_1C28011E0(&qword_1EA310380, (void (*)(uint64_t))sub_1C27FB8F4);
    sub_1C28CE5E0();
    uint64_t v15 = (uint64_t *)(v3 + v10[19]);
    uint64_t v16 = *v15;
    LOBYTE(v15) = *((unsigned char *)v15 + 8);
    *(void *)&long long v24 = v16;
    BYTE8(v24) = (_BYTE)v15;
    char v26 = 15;
    sub_1C27FB9A4();
    sub_1C28011E0(&qword_1EA310398, (void (*)(uint64_t))sub_1C27FB9A4);
    sub_1C28CE5E0();
    id v17 = (uint64_t *)(v3 + v10[20]);
    uint64_t v18 = *v17;
    LOBYTE(v17) = *((unsigned char *)v17 + 8);
    *(void *)&long long v24 = v18;
    BYTE8(v24) = (_BYTE)v17;
    char v26 = 16;
    sub_1C27FBA54();
    sub_1C28011E0(&qword_1EA3103B0, (void (*)(uint64_t))sub_1C27FBA54);
    sub_1C28CE5E0();
    uint64_t v19 = (uint64_t *)(v3 + v10[21]);
    uint64_t v20 = *v19;
    LOBYTE(v19) = *((unsigned char *)v19 + 8);
    *(void *)&long long v24 = v20;
    BYTE8(v24) = (_BYTE)v19;
    char v26 = 17;
    sub_1C27FBB04();
    sub_1C28011E0(&qword_1EA3103C8, (void (*)(uint64_t))sub_1C27FBB04);
    sub_1C28CE5E0();
    uint64_t v21 = (uint64_t *)(v3 + v10[22]);
    uint64_t v22 = *v21;
    LOBYTE(v21) = *((unsigned char *)v21 + 8);
    *(void *)&long long v24 = v22;
    BYTE8(v24) = (_BYTE)v21;
    char v26 = 18;
    sub_1C27FBBB4();
    sub_1C28011E0(&qword_1EA3103E0, (void (*)(uint64_t))sub_1C27FBBB4);
    sub_1C28CE5E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t SharingEntryProfileInformation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v93 = a1;
  uint64_t v71 = a2;
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v72 = (uint64_t)&v68 - v3;
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v5 = MEMORY[0x1F4188790](v4 - 8);
  uint64_t v73 = (uint64_t)&v68 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v78 = (char *)&v68 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v77 = (char *)&v68 - v9;
  uint64_t v88 = sub_1C28CC4B0();
  uint64_t v80 = *(void *)(v88 - 8);
  MEMORY[0x1F4188790](v88);
  uint64_t v76 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27FBC64(0, &qword_1EA3103E8, MEMORY[0x1E4FBBDC0]);
  uint64_t v82 = v11;
  uint64_t v79 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = (char *)&v68 - v12;
  uint64_t v14 = (int *)type metadata accessor for SharingEntryProfileInformation();
  uint64_t v15 = (int *)MEMORY[0x1F4188790](v14);
  id v17 = (uint64_t *)((char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v17 = 0x4E656C69666F7250;
  v17[1] = 0xEF6C6C6543656D61;
  uint64_t v18 = (void *)((char *)v17 + v15[7]);
  *uint64_t v18 = 0;
  v18[1] = 0;
  uint64_t v87 = v18;
  uint64_t v19 = (void *)((char *)v17 + v15[9]);
  *uint64_t v19 = 0;
  v19[1] = 0;
  unsigned int v92 = v19;
  uint64_t v20 = (uint64_t)v17 + v15[10];
  uint64_t v21 = sub_1C28CC450();
  uint64_t v22 = *(void (**)(void))(*(void *)(v21 - 8) + 56);
  uint64_t v91 = v20;
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v20, 1, 1, v21);
  uint64_t v75 = v14[11];
  *((unsigned char *)v17 + v75) = 0;
  uint64_t v74 = v14[12];
  *((unsigned char *)v17 + v74) = 0;
  uint64_t v86 = (uint64_t)v17 + v14[13];
  v22();
  uint64_t v85 = (uint64_t)v17 + v14[14];
  v22();
  id v23 = (void *)((char *)v17 + v14[15]);
  *id v23 = 0;
  *((unsigned char *)v23 + 8) = 1;
  long long v24 = (char *)v17 + v14[16];
  *(_OWORD *)long long v24 = xmmword_1C28D1A20;
  v24[16] = 0;
  uint64_t v89 = v17;
  uint64_t v90 = v14;
  uint64_t v25 = (uint64_t)v17 + v14[17];
  sub_1C27F683C();
  uint64_t v27 = v26;
  uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56);
  uint64_t v84 = v25;
  v28(v25, 1, 1, v26);
  __swift_project_boxed_opaque_existential_1(v93, v93[3]);
  sub_1C27FB84C();
  uint64_t v81 = v13;
  uint64_t v29 = v83;
  sub_1C28CE7F0();
  if (v29)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v35 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
    sub_1C27F80B0(v91, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    sub_1C27F80B0(v86, (unint64_t *)&qword_1EBB771E0, v35);
    sub_1C27F80B0(v85, (unint64_t *)&qword_1EBB771E0, v35);
    return sub_1C27F80B0(v84, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  }
  else
  {
    unint64_t v30 = v76;
    uint64_t v83 = v21;
    uint64_t v70 = v23;
    uint64_t v31 = (uint64_t)v77;
    uint64_t v69 = v24;
    uint64_t v68 = v27;
    uint64_t v32 = (uint64_t)v78;
    LOBYTE(v94) = 0;
    uint64_t v33 = sub_1C28CE4E0();
    unint64_t v34 = v87;
    uint64_t v37 = v89;
    *uint64_t v89 = v33;
    v37[1] = v38;
    LOBYTE(v94) = 1;
    sub_1C28011E0(&qword_1EA3103F0, MEMORY[0x1E4F27990]);
    uint64_t v39 = v30;
    uint64_t v40 = v88;
    sub_1C28CE520();
    uint64_t v41 = v90;
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))((char *)v37 + v90[5], v39, v40);
    LOBYTE(v94) = 2;
    uint64_t v42 = sub_1C28CE4E0();
    uint64_t v43 = (uint64_t *)((char *)v37 + v41[6]);
    *uint64_t v43 = v42;
    v43[1] = v44;
    LOBYTE(v94) = 3;
    *unint64_t v34 = sub_1C28CE4A0();
    v34[1] = v45;
    LOBYTE(v94) = 4;
    uint64_t v46 = sub_1C28CE4E0();
    id v47 = (uint64_t *)((char *)v37 + v41[8]);
    uint64_t *v47 = v46;
    v47[1] = v48;
    LOBYTE(v94) = 5;
    uint64_t v49 = sub_1C28CE4A0();
    id v50 = v92;
    *unsigned int v92 = v49;
    v50[1] = v51;
    LOBYTE(v94) = 6;
    sub_1C28011E0(&qword_1EA3103F8, MEMORY[0x1E4F27928]);
    sub_1C28CE4D0();
    sub_1C27F68F8(v31, v91, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    LOBYTE(v94) = 7;
    *((unsigned char *)v37 + v75) = sub_1C28CE4F0() & 1;
    LOBYTE(v94) = 8;
    *((unsigned char *)v37 + v74) = sub_1C28CE4F0() & 1;
    LOBYTE(v94) = 9;
    sub_1C28CE4D0();
    sub_1C27F68F8(v32, v86, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    LOBYTE(v94) = 10;
    sub_1C28CE4D0();
    sub_1C27F68F8(v73, v85, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    LOBYTE(v94) = 11;
    uint64_t v52 = sub_1C28CE4C0();
    id v53 = v70;
    uint64_t *v70 = v52;
    *((unsigned char *)v53 + 8) = v54 & 1;
    char v96 = 12;
    sub_1C27FBCC8();
    sub_1C28CE4D0();
    char v55 = v95;
    uint64_t v56 = v69;
    _OWORD *v69 = v94;
    *((unsigned char *)v56 + 16) = v55;
    LOBYTE(v94) = 13;
    sub_1C28011E0(&qword_1EBB75ED8, (void (*)(uint64_t))sub_1C27F683C);
    sub_1C28CE4D0();
    sub_1C27F68F8(v72, v84, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    sub_1C27FB8F4();
    char v96 = 14;
    sub_1C28011E0(&qword_1EA310400, (void (*)(uint64_t))sub_1C27FB8F4);
    sub_1C28CE520();
    char v57 = BYTE8(v94);
    uint64_t v58 = (char *)v89 + v90[18];
    *(void *)uint64_t v58 = v94;
    v58[8] = v57;
    sub_1C27FB9A4();
    char v96 = 15;
    sub_1C28011E0(&qword_1EA310408, (void (*)(uint64_t))sub_1C27FB9A4);
    sub_1C28CE520();
    char v59 = BYTE8(v94);
    uint64_t v60 = (char *)v89 + v90[19];
    *(void *)uint64_t v60 = v94;
    v60[8] = v59;
    sub_1C27FBA54();
    char v96 = 16;
    sub_1C28011E0(&qword_1EA310410, (void (*)(uint64_t))sub_1C27FBA54);
    sub_1C28CE520();
    char v61 = BYTE8(v94);
    uint64_t v62 = (char *)v89 + v90[20];
    *(void *)uint64_t v62 = v94;
    v62[8] = v61;
    sub_1C27FBB04();
    char v96 = 17;
    sub_1C28011E0(&qword_1EA310418, (void (*)(uint64_t))sub_1C27FBB04);
    sub_1C28CE520();
    char v63 = BYTE8(v94);
    int v64 = (char *)v89 + v90[21];
    *(void *)int v64 = v94;
    v64[8] = v63;
    sub_1C27FBBB4();
    char v96 = 18;
    sub_1C28011E0(&qword_1EA310420, (void (*)(uint64_t))sub_1C27FBBB4);
    sub_1C28CE520();
    (*(void (**)(char *, uint64_t))(v79 + 8))(v81, v82);
    char v65 = BYTE8(v94);
    uint64_t v66 = (uint64_t)v89;
    uint64_t v67 = (char *)v89 + v90[22];
    *(void *)uint64_t v67 = v94;
    v67[8] = v65;
    sub_1C27DF188(v66, v71);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v93);
    return sub_1C27DF1EC(v66);
  }
}

uint64_t sub_1C27F9970(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 32));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C27F99A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

Class sub_1C27F99E0()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
  Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  return isa;
}

uint64_t sub_1C27F9A38()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

unint64_t sub_1C27F9A68()
{
  return 0xD00000000000001FLL;
}

uint64_t sub_1C27F9ACC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return SharingEntryProfileInformation.init(from:)(a1, a2);
}

uint64_t sub_1C27F9AE4(void *a1)
{
  return SharingEntryProfileInformation.encode(to:)(a1);
}

uint64_t sub_1C27F9AFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 28));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C27F9B34(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 24));
  swift_bridgeObjectRetain();
  return v2;
}

__n128 sub_1C27F9B6C@<Q0>(uint64_t a1@<X0>, __n128 *a2@<X8>)
{
  uint64_t v3 = (__n128 *)(v2 + *(int *)(a1 + 64));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a2 = *v3;
  a2[1].n128_u8[0] = v4;
  return result;
}

uint64_t sub_1C27F9B88(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 60));
}

uint64_t sub_1C27F9B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C27F67D0(v2 + *(int *)(a1 + 40), a2, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
}

uint64_t sub_1C27F9BDC(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 44));
}

id sub_1C27F9BE8(uint64_t a1)
{
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v12 - v4;
  sub_1C27F67D0(v1 + *(int *)(a1 + 68), (uint64_t)&v12 - v4, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  sub_1C27F683C();
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v5, 1, v6) == 1)
  {
    sub_1C27F80B0((uint64_t)v5, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    return 0;
  }
  else
  {
    uint64_t v10 = (void *)sub_1C28CD570();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    id v9 = objc_msgSend(v10, sel_type);
  }
  return v9;
}

uint64_t SharingEntryProfileInformation.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CC450();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v41 = (uint64_t)v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v40 = (uint64_t)v35 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v39 = (uint64_t)v35 - v11;
  sub_1C27F683C();
  uint64_t v13 = v12;
  uint64_t v38 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v36 = (char *)v35 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v15 - 8);
  uint64_t v37 = (uint64_t)v35 - v16;
  id v17 = (int *)type metadata accessor for SharingEntryProfileInformation();
  sub_1C28CC4B0();
  sub_1C28011E0(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  sub_1C28CD680();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v17[7] + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v17[9] + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
  Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  sub_1C28CE720();
  uint64_t v20 = isa;
  sub_1C28CDF40();

  if (*(unsigned char *)(v1 + v17[18] + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  if (*(unsigned char *)(v1 + v17[19] + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  uint64_t v21 = v1 + v17[16];
  if (*(unsigned char *)v21 == 2)
  {
    sub_1C28CE720();
  }
  else
  {
    uint64_t v22 = v2;
    uint64_t v23 = v13;
    long long v24 = v5;
    uint64_t v25 = v3;
    v35[1] = *(void *)(v21 + 8);
    char v26 = *(unsigned char *)(v21 + 16);
    sub_1C28CE720();
    sub_1C28CE710();
    sub_1C28CE720();
    if ((v26 & 1) == 0) {
      sub_1C28CE710();
    }
    uint64_t v3 = v25;
    uint64_t v5 = v24;
    uint64_t v13 = v23;
    uint64_t v2 = v22;
  }
  if (*(unsigned char *)(v1 + v17[20] + 8))
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  if (*(unsigned char *)(v1 + v17[21] + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  uint64_t v27 = v37;
  uint64_t v28 = v38;
  sub_1C27F67D0(v1 + v17[17], v37, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v27, 1, v13) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    uint64_t v29 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v28 + 32))(v36, v27, v13);
    sub_1C28CE720();
    sub_1C2801228(&qword_1EA310428, &qword_1EA310430);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v29, v13);
  }
  uint64_t v30 = v39;
  sub_1C27F67D0(v1 + v17[10], v39, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v31 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48);
  if (v31(v30, 1, v2) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v30, v2);
    sub_1C28CE720();
    sub_1C28011E0(&qword_1EA310438, MEMORY[0x1E4F27928]);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  sub_1C28CE720();
  uint64_t v32 = v40;
  sub_1C27F67D0(v1 + v17[14], v40, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v31(v32, 1, v2) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v32, v2);
    sub_1C28CE720();
    sub_1C28011E0(&qword_1EA310438, MEMORY[0x1E4F27928]);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v33 = v41;
  sub_1C27F67D0(v1 + v17[13], v41, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v31(v33, 1, v2) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 32))(v5, v33, v2);
    sub_1C28CE720();
    sub_1C28011E0(&qword_1EA310438, MEMORY[0x1E4F27928]);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  if (*(unsigned char *)(v1 + v17[15] + 8) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C28CE720();
    sub_1C28CE710();
  }
  sub_1C28CE720();
  if (*(unsigned char *)(v1 + v17[22] + 8) == 1) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  return sub_1C28CE710();
}

uint64_t SharingEntryProfileInformation.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27FA7A4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C27FA7E8()
{
  return sub_1C28CE740();
}

uint64_t SharingEntryProfileInformation.description.getter()
{
  unint64_t v1 = v0;
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  uint64_t v96 = (uint64_t)&v78 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v95 = (uint64_t)&v78 - v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v94 = (uint64_t)&v78 - v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v93 = (uint64_t)&v78 - v9;
  uint64_t v92 = sub_1C28CC450();
  uint64_t v10 = *(void *)(v92 - 8);
  uint64_t v11 = MEMORY[0x1F4188790](v92);
  uint64_t v13 = (char *)&v78 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v81 = (char *)&v78 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v80 = (char *)&v78 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  uint64_t v97 = (char *)&v78 - v19;
  MEMORY[0x1F4188790](v18);
  uint64_t v79 = (char *)&v78 - v20;
  uint64_t v21 = sub_1C28CC4B0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v21);
  long long v24 = (char *)&v78 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v25 - 8);
  uint64_t v27 = (char *)&v78 - v26;
  uint64_t v28 = (int *)type metadata accessor for SharingEntryProfileInformation();
  uint64_t v29 = 0;
  unint64_t v99 = 0;
  if ((*(unsigned char *)(v1 + v28[18] + 8) & 1) == 0)
  {
    id v30 = (id)HKStringForSharingType();
    uint64_t v29 = sub_1C28CD730();
    unint64_t v99 = v31;
  }
  if (*(unsigned char *)(v1 + v28[19] + 8))
  {
    uint64_t v84 = 0;
    unint64_t v90 = 0;
  }
  else
  {
    id v32 = (id)HKStringForSharingStatus();
    uint64_t v84 = sub_1C28CD730();
    unint64_t v90 = v33;
  }
  char v34 = *(unsigned char *)(v1 + v28[20] + 8);
  uint64_t v88 = v29;
  if (v34)
  {
    uint64_t v85 = 0;
    unint64_t v35 = 0;
  }
  else
  {
    id v36 = (id)HKStringForMessageDirection();
    uint64_t v85 = sub_1C28CD730();
    unint64_t v35 = v37;
  }
  char v38 = *(unsigned char *)(v1 + v28[21] + 8);
  uint64_t v98 = v10;
  uint64_t v82 = v13;
  if (v38)
  {
    uint64_t v86 = 0;
    unint64_t v91 = 0;
  }
  else
  {
    id v39 = (id)HKStringForNotificationStatus();
    uint64_t v86 = sub_1C28CD730();
    unint64_t v91 = v40;
  }
  sub_1C27F67D0(v1 + v28[17], (uint64_t)v27, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  sub_1C27F683C();
  uint64_t v42 = v41;
  uint64_t v43 = *(void *)(v41 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v43 + 48))(v27, 1, v41) == 1)
  {
    sub_1C27F80B0((uint64_t)v27, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    uint64_t v83 = 0;
    unint64_t v44 = 0;
  }
  else
  {
    uint64_t v45 = (void *)sub_1C28CD570();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v27, v42);
    id v46 = objc_msgSend(v45, sel_identifier);

    sub_1C28CC490();
    uint64_t v83 = sub_1C28CC460();
    unint64_t v44 = v47;
    (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  }
  uint64_t v48 = (unsigned __int8 *)(v1 + v28[16]);
  uint64_t v49 = *v48;
  if (v49 == 2)
  {
    unint64_t v87 = 0;
    unint64_t v89 = 0;
  }
  else
  {
    unsigned __int8 v50 = v48[16];
    unint64_t v51 = *((void *)v48 + 1);
    LOBYTE(v100) = v49 & 1;
    unint64_t v101 = v51;
    char v102 = v50 & 1;
    unint64_t v87 = EndSharingRelationshipState.description.getter();
    unint64_t v89 = v52;
  }
  uint64_t v100 = 0;
  unint64_t v101 = 0xE000000000000000;
  sub_1C28CE120();
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  sub_1C28CC460();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  id v53 = (unint64_t *)(v1 + v28[7]);
  unint64_t v54 = v53[1];
  if (v54)
  {
    unint64_t v103 = *v53;
    unint64_t v104 = v54;
    swift_bridgeObjectRetain();
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  char v55 = (unint64_t *)(v1 + v28[9]);
  unint64_t v56 = v55[1];
  if (v56)
  {
    unint64_t v103 = *v55;
    unint64_t v104 = v56;
    swift_bridgeObjectRetain();
    sub_1C28CD750();
  }
  uint64_t v57 = v98;
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v99)
  {
    unint64_t v103 = v88;
    unint64_t v104 = v99;
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v90)
  {
    unint64_t v103 = v84;
    unint64_t v104 = v90;
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v35)
  {
    unint64_t v103 = v85;
    unint64_t v104 = v35;
    sub_1C28CD750();
  }
  uint64_t v58 = v92;
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v91)
  {
    unint64_t v103 = v86;
    unint64_t v104 = v91;
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v44)
  {
    unint64_t v103 = v83;
    unint64_t v104 = v44;
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  uint64_t v59 = v28[13];
  unint64_t v99 = v1;
  uint64_t v60 = v93;
  sub_1C27F67D0(v1 + v59, v93, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  char v61 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48);
  if (v61(v60, 1, v58) == 1)
  {
    sub_1C27F80B0(v60, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  }
  else
  {
    uint64_t v62 = v79;
    (*(void (**)(char *, uint64_t, uint64_t))(v57 + 32))(v79, v60, v58);
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))(v97, v62, v58);
    sub_1C28CD750();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v62, v58);
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  uint64_t v63 = v94;
  sub_1C27F67D0(v99 + v28[14], v94, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v61(v63, 1, v58) == 1)
  {
    sub_1C27F80B0(v63, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  }
  else
  {
    uint64_t v64 = v98;
    char v65 = v80;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v80, v63, v58);
    (*(void (**)(char *, char *, uint64_t))(v64 + 16))(v97, v65, v58);
    sub_1C28CD750();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v65, v58);
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  uint64_t v66 = v99 + v28[10];
  uint64_t v67 = v95;
  sub_1C27F67D0(v66, v95, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v61(v67, 1, v58) == 1)
  {
    sub_1C27F80B0(v67, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    uint64_t v68 = v58;
  }
  else
  {
    uint64_t v69 = v98;
    uint64_t v70 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v81, v67, v58);
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v97, v70, v58);
    sub_1C28CD750();
    uint64_t v68 = v58;
    (*(void (**)(char *, uint64_t))(v69 + 8))(v70, v58);
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  uint64_t v71 = v96;
  sub_1C27F67D0(v66, v96, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v61(v71, 1, v68) == 1)
  {
    sub_1C27F80B0(v71, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  }
  else
  {
    uint64_t v72 = v98;
    uint64_t v73 = v82;
    (*(void (**)(char *, uint64_t, uint64_t))(v98 + 32))(v82, v71, v68);
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v97, v73, v68);
    sub_1C28CD750();
    (*(void (**)(char *, uint64_t))(v72 + 8))(v73, v68);
  }
  unint64_t v74 = v89;
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  if (v74)
  {
    unint64_t v103 = v87;
    unint64_t v104 = v74;
    sub_1C28CD750();
  }
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  id v75 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1B8F8]), sel_init);
  Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;

  unint64_t v103 = (unint64_t)isa;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75CA0);
  sub_1C28CD750();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v100;
}

unint64_t sub_1C27FB84C()
{
  unint64_t result = qword_1EA310358;
  if (!qword_1EA310358)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310358);
  }
  return result;
}

unint64_t sub_1C27FB8A0()
{
  unint64_t result = qword_1EBB744E8;
  if (!qword_1EBB744E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB744E8);
  }
  return result;
}

void sub_1C27FB8F4()
{
  if (!qword_1EA310370)
  {
    type metadata accessor for HKSharingType(255);
    sub_1C28011E0(&qword_1EA310378, type metadata accessor for HKSharingType);
    unint64_t v0 = type metadata accessor for CodableRawRepresentable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310370);
    }
  }
}

void sub_1C27FB9A4()
{
  if (!qword_1EA310388)
  {
    type metadata accessor for HKSharingStatus(255);
    sub_1C28011E0(&qword_1EA310390, type metadata accessor for HKSharingStatus);
    unint64_t v0 = type metadata accessor for CodableRawRepresentable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310388);
    }
  }
}

void sub_1C27FBA54()
{
  if (!qword_1EA3103A0)
  {
    type metadata accessor for HKSharingMessageDirection(255);
    sub_1C28011E0(&qword_1EA3103A8, type metadata accessor for HKSharingMessageDirection);
    unint64_t v0 = type metadata accessor for CodableRawRepresentable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3103A0);
    }
  }
}

void sub_1C27FBB04()
{
  if (!qword_1EA3103B8)
  {
    type metadata accessor for HKSharingNotificationStatus(255);
    sub_1C28011E0(&qword_1EA3103C0, type metadata accessor for HKSharingNotificationStatus);
    unint64_t v0 = type metadata accessor for CodableRawRepresentable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3103B8);
    }
  }
}

void sub_1C27FBBB4()
{
  if (!qword_1EA3103D0)
  {
    type metadata accessor for HKWheelchairUse(255);
    sub_1C28011E0(&qword_1EA3103D8, type metadata accessor for HKWheelchairUse);
    unint64_t v0 = type metadata accessor for CodableRawRepresentable();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3103D0);
    }
  }
}

void sub_1C27FBC64(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C27FB84C();
    unint64_t v7 = a3(a1, &type metadata for SharingEntryProfileInformation.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C27FBCC8()
{
  unint64_t result = qword_1EBB75C98;
  if (!qword_1EBB75C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75C98);
  }
  return result;
}

uint64_t sub_1C27FBD1C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB77120);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t _s16HealthExperience30SharingEntryProfileInformationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v274 = sub_1C28CC450();
  uint64_t v275 = *(void *)(v274 - 8);
  MEMORY[0x1F4188790](v274);
  v268 = (char *)&v265 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v7 = MEMORY[0x1F4188790](v6 - 8);
  uint64_t v265 = (uint64_t)&v265 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v267 = (uint64_t)&v265 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v270 = (uint64_t)&v265 - v11;
  sub_1C2801120(0, &qword_1EA310460, (unint64_t *)&qword_1EBB771E0, v5);
  uint64_t v273 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v266 = (uint64_t)&v265 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v269 = (uint64_t)&v265 - v16;
  MEMORY[0x1F4188790](v15);
  uint64_t v272 = (uint64_t)&v265 - v17;
  sub_1C27F683C();
  uint64_t v278 = v18;
  uint64_t v279 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  v271 = (char *)&v265 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  MEMORY[0x1F4188790](v20 - 8);
  v276 = (char *)&v265 - v21;
  sub_1C2801120(0, &qword_1EA310468, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  uint64_t v277 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v280 = (uint64_t)&v265 - v23;
  uint64_t v24 = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v289 = (uint64_t)&v265 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x1F4188790](v25);
  v288 = (char *)&v265 - v28;
  uint64_t v29 = MEMORY[0x1F4188790](v27);
  uint64_t v299 = (uint64_t)&v265 - v30;
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v287 = (uint64_t)&v265 - v32;
  uint64_t v33 = MEMORY[0x1F4188790](v31);
  uint64_t v300 = (uint64_t)&v265 - v34;
  uint64_t v35 = MEMORY[0x1F4188790](v33);
  uint64_t v301 = (uint64_t)&v265 - v36;
  uint64_t v37 = MEMORY[0x1F4188790](v35);
  uint64_t v303 = (uint64_t)&v265 - v38;
  uint64_t v39 = MEMORY[0x1F4188790](v37);
  uint64_t v302 = (uint64_t)&v265 - v40;
  uint64_t v41 = MEMORY[0x1F4188790](v39);
  uint64_t v306 = (uint64_t)&v265 - v42;
  uint64_t v43 = MEMORY[0x1F4188790](v41);
  uint64_t v304 = (uint64_t)&v265 - v44;
  uint64_t v45 = MEMORY[0x1F4188790](v43);
  uint64_t v305 = (uint64_t)&v265 - v46;
  uint64_t v47 = MEMORY[0x1F4188790](v45);
  uint64_t v308 = (uint64_t)&v265 - v48;
  uint64_t v49 = MEMORY[0x1F4188790](v47);
  uint64_t v307 = (uint64_t)&v265 - v50;
  uint64_t v51 = MEMORY[0x1F4188790](v49);
  uint64_t v309 = (uint64_t)&v265 - v52;
  uint64_t v53 = MEMORY[0x1F4188790](v51);
  v310 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&v265 - v54);
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  v298 = (char *)&v265 - v56;
  uint64_t v57 = MEMORY[0x1F4188790](v55);
  uint64_t v297 = (uint64_t)&v265 - v58;
  uint64_t v59 = MEMORY[0x1F4188790](v57);
  uint64_t v296 = (uint64_t)&v265 - v60;
  uint64_t v61 = MEMORY[0x1F4188790](v59);
  uint64_t v286 = (uint64_t)&v265 - v62;
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  uint64_t v285 = (uint64_t)&v265 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  uint64_t v294 = (uint64_t)&v265 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  uint64_t v295 = (uint64_t)&v265 - v68;
  uint64_t v69 = MEMORY[0x1F4188790](v67);
  uint64_t v284 = (uint64_t)&v265 - v70;
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  uint64_t v283 = (uint64_t)&v265 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  v292 = (char *)&v265 - v74;
  uint64_t v75 = MEMORY[0x1F4188790](v73);
  uint64_t v293 = (uint64_t)&v265 - v76;
  uint64_t v77 = MEMORY[0x1F4188790](v75);
  v290 = (char *)&v265 - v78;
  uint64_t v79 = MEMORY[0x1F4188790](v77);
  v291 = (char *)&v265 - v80;
  uint64_t v81 = MEMORY[0x1F4188790](v79);
  uint64_t v83 = (char *)&v265 - v82;
  uint64_t v84 = MEMORY[0x1F4188790](v81);
  uint64_t v86 = (char *)&v265 - v85;
  uint64_t v87 = MEMORY[0x1F4188790](v84);
  unint64_t v89 = (char *)&v265 - v88;
  uint64_t v90 = MEMORY[0x1F4188790](v87);
  uint64_t v92 = (char *)&v265 - v91;
  uint64_t v93 = MEMORY[0x1F4188790](v90);
  uint64_t v95 = (char *)&v265 - v94;
  MEMORY[0x1F4188790](v93);
  uint64_t v97 = (char *)&v265 - v96;
  char v98 = sub_1C28CC480();
  sub_1C27DF188(a1, (uint64_t)v97);
  sub_1C27DF188(a2, (uint64_t)v95);
  uint64_t v311 = a1;
  if ((v98 & 1) == 0)
  {
    sub_1C27DF1EC((uint64_t)v97);
    sub_1C27DF1EC((uint64_t)v95);
    sub_1C27DF188(a1, (uint64_t)v92);
    sub_1C27DF188(a2, (uint64_t)v89);
    uint64_t v108 = a2;
    uint64_t v105 = (uint64_t)v291;
    uint64_t v106 = (uint64_t)v292;
    uint64_t v107 = (uint64_t)v290;
    goto LABEL_13;
  }
  uint64_t v282 = a2;
  uint64_t v99 = *(int *)(v24 + 24);
  uint64_t v100 = *(void *)&v97[v99];
  uint64_t v101 = *(void *)&v97[v99 + 8];
  char v102 = &v95[v99];
  uint64_t v103 = *((void *)v102 + 1);
  BOOL v104 = v100 == *(void *)v102;
  v281 = (int *)v24;
  if (v104 && v101 == v103)
  {
    sub_1C27DF1EC((uint64_t)v97);
    sub_1C27DF1EC((uint64_t)v95);
    sub_1C27DF188(v311, (uint64_t)v92);
    sub_1C27DF188(v282, (uint64_t)v89);
    uint64_t v105 = (uint64_t)v291;
    uint64_t v106 = (uint64_t)v292;
    uint64_t v107 = (uint64_t)v290;
    goto LABEL_8;
  }
  char v109 = sub_1C28CE640();
  sub_1C27DF1EC((uint64_t)v97);
  sub_1C27DF1EC((uint64_t)v95);
  sub_1C27DF188(v311, (uint64_t)v92);
  uint64_t v108 = v282;
  sub_1C27DF188(v282, (uint64_t)v89);
  uint64_t v105 = (uint64_t)v291;
  uint64_t v106 = (uint64_t)v292;
  uint64_t v107 = (uint64_t)v290;
  if ((v109 & 1) == 0)
  {
LABEL_13:
    sub_1C27DF1EC((uint64_t)v89);
    sub_1C27DF1EC((uint64_t)v92);
LABEL_18:
    uint64_t v115 = v306;
    uint64_t v116 = v311;
    sub_1C27DF188(v311, (uint64_t)v86);
    sub_1C27DF188(v108, (uint64_t)v83);
    goto LABEL_19;
  }
LABEL_8:
  uint64_t v110 = v281[7];
  uint64_t v111 = &v92[v110];
  uint64_t v112 = *(void *)&v92[v110 + 8];
  uint64_t v113 = &v89[v110];
  uint64_t v114 = *((void *)v113 + 1);
  if (!v112)
  {
    swift_bridgeObjectRetain();
    sub_1C27DF1EC((uint64_t)v89);
    sub_1C27DF1EC((uint64_t)v92);
    if (!v114) {
      goto LABEL_15;
    }
    goto LABEL_17;
  }
  if (!v114)
  {
    swift_bridgeObjectRetain();
    sub_1C27DF1EC((uint64_t)v89);
    sub_1C27DF1EC((uint64_t)v92);
LABEL_17:
    swift_bridgeObjectRelease();
    uint64_t v108 = v282;
    goto LABEL_18;
  }
  if (*(void *)v111 != *(void *)v113 || v112 != v114)
  {
    char v145 = sub_1C28CE640();
    swift_bridgeObjectRetain();
    sub_1C27DF1EC((uint64_t)v89);
    sub_1C27DF1EC((uint64_t)v92);
    swift_bridgeObjectRelease();
    uint64_t v116 = v311;
    sub_1C27DF188(v311, (uint64_t)v86);
    uint64_t v108 = v282;
    sub_1C27DF188(v282, (uint64_t)v83);
    uint64_t v115 = v306;
    if (v145) {
      goto LABEL_46;
    }
LABEL_19:
    sub_1C27DF1EC((uint64_t)v86);
    sub_1C27DF1EC((uint64_t)v83);
    sub_1C27DF188(v116, v105);
    sub_1C27DF188(v108, v107);
    uint64_t v117 = v116;
    goto LABEL_20;
  }
  swift_bridgeObjectRetain();
  sub_1C27DF1EC((uint64_t)v89);
  sub_1C27DF1EC((uint64_t)v92);
  swift_bridgeObjectRelease();
LABEL_15:
  sub_1C27DF188(v311, (uint64_t)v86);
  uint64_t v108 = v282;
  sub_1C27DF188(v282, (uint64_t)v83);
  uint64_t v115 = v306;
LABEL_46:
  uint64_t v146 = v281[8];
  uint64_t v147 = *(void *)&v86[v146];
  uint64_t v148 = *(void *)&v86[v146 + 8];
  v149 = &v83[v146];
  if (v147 == *(void *)v149 && v148 == *((void *)v149 + 1))
  {
    sub_1C27DF1EC((uint64_t)v86);
    sub_1C27DF1EC((uint64_t)v83);
    uint64_t v117 = v311;
    sub_1C27DF188(v311, v105);
    sub_1C27DF188(v108, v107);
    goto LABEL_50;
  }
  char v150 = sub_1C28CE640();
  sub_1C27DF1EC((uint64_t)v86);
  sub_1C27DF1EC((uint64_t)v83);
  uint64_t v117 = v311;
  sub_1C27DF188(v311, v105);
  sub_1C27DF188(v108, v107);
  if ((v150 & 1) == 0)
  {
LABEL_20:
    sub_1C27DF1EC(v107);
    sub_1C27DF1EC(v105);
LABEL_21:
    uint64_t v118 = v302;
    uint64_t v119 = v303;
    uint64_t v120 = v293;
    sub_1C27DF188(v117, v293);
    sub_1C27DF188(v108, v106);
    goto LABEL_22;
  }
LABEL_50:
  uint64_t v151 = v281[9];
  v152 = (void *)(v105 + v151);
  uint64_t v153 = *(void *)(v105 + v151 + 8);
  v154 = (void *)(v107 + v151);
  uint64_t v155 = v154[1];
  if (!v153)
  {
    swift_bridgeObjectRetain();
    sub_1C27DF1EC(v107);
    sub_1C27DF1EC(v105);
    if (!v155) {
      goto LABEL_56;
    }
    goto LABEL_58;
  }
  if (!v155)
  {
    swift_bridgeObjectRetain();
    sub_1C27DF1EC(v107);
    sub_1C27DF1EC(v105);
LABEL_58:
    swift_bridgeObjectRelease();
    goto LABEL_21;
  }
  if (*v152 == *v154 && v153 == v155)
  {
    swift_bridgeObjectRetain();
    sub_1C27DF1EC(v107);
    sub_1C27DF1EC(v105);
    swift_bridgeObjectRelease();
LABEL_56:
    v156 = v281;
    uint64_t v120 = v293;
    sub_1C27DF188(v117, v293);
    sub_1C27DF188(v108, v106);
    uint64_t v118 = v302;
    uint64_t v119 = v303;
    goto LABEL_60;
  }
  v156 = v281;
  char v157 = sub_1C28CE640();
  swift_bridgeObjectRetain();
  sub_1C27DF1EC(v107);
  sub_1C27DF1EC(v105);
  swift_bridgeObjectRelease();
  uint64_t v120 = v293;
  sub_1C27DF188(v117, v293);
  sub_1C27DF188(v108, v106);
  uint64_t v118 = v302;
  uint64_t v119 = v303;
  if ((v157 & 1) == 0)
  {
LABEL_22:
    sub_1C27DF1EC(v106);
    sub_1C27DF1EC(v120);
    uint64_t v121 = (uint64_t)v298;
    goto LABEL_23;
  }
LABEL_60:
  uint64_t v158 = v120 + v156[18];
  uint64_t v159 = *(void *)v158;
  char v160 = *(unsigned char *)(v158 + 8);
  sub_1C27DF1EC(v120);
  uint64_t v161 = v106 + v156[18];
  uint64_t v162 = *(void *)v161;
  char v163 = *(unsigned char *)(v161 + 8);
  sub_1C27DF1EC(v106);
  if (v160)
  {
    uint64_t v108 = v282;
    uint64_t v121 = (uint64_t)v298;
    if (v163)
    {
      uint64_t v122 = v283;
      sub_1C27DF188(v117, v283);
      uint64_t v123 = v284;
      sub_1C27DF188(v108, v284);
      goto LABEL_66;
    }
    goto LABEL_23;
  }
  uint64_t v108 = v282;
  uint64_t v121 = (uint64_t)v298;
  if (v163)
  {
LABEL_23:
    uint64_t v122 = v283;
    sub_1C27DF188(v117, v283);
    uint64_t v123 = v284;
    sub_1C27DF188(v108, v284);
LABEL_24:
    sub_1C27DF1EC(v123);
    sub_1C27DF1EC(v122);
    goto LABEL_25;
  }
  uint64_t v164 = v283;
  sub_1C27DF188(v117, v283);
  uint64_t v123 = v284;
  sub_1C27DF188(v108, v284);
  BOOL v104 = v159 == v162;
  uint64_t v122 = v164;
  if (!v104) {
    goto LABEL_24;
  }
LABEL_66:
  uint64_t v165 = v281;
  uint64_t v166 = v122 + v281[19];
  uint64_t v167 = *(void *)v166;
  char v168 = *(unsigned char *)(v166 + 8);
  sub_1C27DF1EC(v122);
  uint64_t v169 = v123 + v165[19];
  uint64_t v170 = *(void *)v169;
  uint64_t v171 = v123;
  char v172 = *(unsigned char *)(v169 + 8);
  sub_1C27DF1EC(v171);
  if (v168)
  {
    uint64_t v108 = v282;
    if (v172)
    {
      uint64_t v124 = v295;
      sub_1C27DF188(v117, v295);
      uint64_t v125 = v294;
      sub_1C27DF188(v108, v294);
      goto LABEL_72;
    }
LABEL_25:
    uint64_t v124 = v295;
    sub_1C27DF188(v117, v295);
    uint64_t v125 = v294;
    sub_1C27DF188(v108, v294);
    goto LABEL_26;
  }
  uint64_t v108 = v282;
  if (v172) {
    goto LABEL_25;
  }
  uint64_t v124 = v295;
  sub_1C27DF188(v117, v295);
  uint64_t v173 = v294;
  sub_1C27DF188(v108, v294);
  BOOL v104 = v167 == v170;
  uint64_t v125 = v173;
  if (!v104) {
    goto LABEL_26;
  }
LABEL_72:
  uint64_t v174 = v281[16];
  uint64_t v175 = v124 + v174;
  uint64_t v176 = *(unsigned __int8 *)(v124 + v174);
  v177 = (unsigned __int8 *)(v125 + v174);
  uint64_t v178 = *v177;
  if (v176 != 2)
  {
    if (v178 == 2 || ((((v178 & 1) == 0) ^ v176) & 1) == 0) {
      goto LABEL_26;
    }
    if ((*(unsigned char *)(v175 + 16) & 1) == 0)
    {
      if ((v177[16] & 1) != 0 || *(void *)(v175 + 8) != *((void *)v177 + 1)) {
        goto LABEL_26;
      }
LABEL_82:
      sub_1C27DF1EC(v125);
      sub_1C27DF1EC(v124);
      goto LABEL_83;
    }
    if (v177[16]) {
      goto LABEL_82;
    }
LABEL_26:
    sub_1C27DF1EC(v125);
    sub_1C27DF1EC(v124);
LABEL_27:
    uint64_t v126 = v285;
    sub_1C27DF188(v117, v285);
    uint64_t v127 = v286;
    sub_1C27DF188(v108, v286);
    sub_1C27DF1EC(v127);
    sub_1C27DF1EC(v126);
    goto LABEL_28;
  }
  sub_1C27DF1EC(v125);
  sub_1C27DF1EC(v124);
  if (v178 != 2) {
    goto LABEL_27;
  }
LABEL_83:
  uint64_t v179 = v285;
  sub_1C27DF188(v117, v285);
  uint64_t v180 = v286;
  sub_1C27DF188(v108, v286);
  v181 = v281;
  uint64_t v182 = v179 + v281[20];
  uint64_t v183 = *(void *)v182;
  char v184 = *(unsigned char *)(v182 + 8);
  sub_1C27DF1EC(v179);
  uint64_t v185 = v180 + v181[20];
  uint64_t v186 = *(void *)v185;
  char v187 = *(unsigned char *)(v185 + 8);
  sub_1C27DF1EC(v180);
  if (v184)
  {
    uint64_t v108 = v282;
    if (v187)
    {
      uint64_t v128 = v296;
      sub_1C27DF188(v117, v296);
      uint64_t v129 = v297;
      sub_1C27DF188(v108, v297);
      goto LABEL_88;
    }
    goto LABEL_28;
  }
  uint64_t v108 = v282;
  if (v187)
  {
LABEL_28:
    uint64_t v128 = v296;
    sub_1C27DF188(v117, v296);
    uint64_t v129 = v297;
    sub_1C27DF188(v108, v297);
LABEL_29:
    sub_1C27DF1EC(v129);
    sub_1C27DF1EC(v128);
    goto LABEL_30;
  }
  uint64_t v128 = v296;
  sub_1C27DF188(v117, v296);
  uint64_t v129 = v297;
  sub_1C27DF188(v108, v297);
  if (v183 != v186) {
    goto LABEL_29;
  }
LABEL_88:
  v188 = v281;
  uint64_t v189 = v128 + v281[21];
  uint64_t v190 = v128;
  uint64_t v191 = *(void *)v189;
  char v192 = *(unsigned char *)(v189 + 8);
  sub_1C27DF1EC(v190);
  uint64_t v193 = v129 + v188[21];
  uint64_t v194 = *(void *)v193;
  uint64_t v195 = v129;
  char v196 = *(unsigned char *)(v193 + 8);
  sub_1C27DF1EC(v195);
  if (v192)
  {
    uint64_t v108 = v282;
    if (v196)
    {
      sub_1C27DF188(v117, v121);
      uint64_t v130 = v310;
      sub_1C27DF188(v108, (uint64_t)v310);
      goto LABEL_94;
    }
    goto LABEL_30;
  }
  uint64_t v108 = v282;
  if (v196)
  {
LABEL_30:
    sub_1C27DF188(v117, v121);
    uint64_t v130 = v310;
    sub_1C27DF188(v108, (uint64_t)v310);
    uint64_t v132 = v308;
    uint64_t v131 = v309;
LABEL_31:
    sub_1C27DF1EC((uint64_t)v130);
    sub_1C27DF1EC(v121);
    uint64_t v133 = v305;
LABEL_32:
    sub_1C27DF188(v117, v131);
    uint64_t v134 = v307;
    sub_1C27DF188(v108, v307);
LABEL_33:
    sub_1C27DF1EC(v134);
    sub_1C27DF1EC(v131);
LABEL_34:
    sub_1C27DF188(v117, v132);
    sub_1C27DF188(v108, v133);
LABEL_35:
    sub_1C27DF1EC(v133);
    sub_1C27DF1EC(v132);
    uint64_t v135 = v304;
    sub_1C27DF188(v117, v304);
    sub_1C27DF188(v108, v115);
LABEL_36:
    sub_1C27DF1EC(v115);
    sub_1C27DF1EC(v135);
LABEL_37:
    sub_1C27DF188(v117, v118);
    sub_1C27DF188(v108, v119);
LABEL_38:
    sub_1C27DF1EC(v119);
    sub_1C27DF1EC(v118);
    goto LABEL_39;
  }
  sub_1C27DF188(v117, v121);
  uint64_t v130 = v310;
  sub_1C27DF188(v108, (uint64_t)v310);
  BOOL v104 = v191 == v194;
  uint64_t v132 = v308;
  uint64_t v131 = v309;
  if (!v104) {
    goto LABEL_31;
  }
LABEL_94:
  uint64_t v197 = v281[17];
  uint64_t v198 = (uint64_t)v130 + v197;
  uint64_t v199 = v280;
  uint64_t v200 = v280 + *(int *)(v277 + 48);
  sub_1C27F67D0(v121 + v197, v280, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  sub_1C27F67D0(v198, v200, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  v201 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v279 + 48);
  uint64_t v202 = v278;
  if (v201(v199, 1, v278) == 1)
  {
    sub_1C27DF1EC((uint64_t)v310);
    sub_1C27DF1EC(v121);
    if (v201(v200, 1, v202) == 1)
    {
      sub_1C27F80B0(v280, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
      uint64_t v131 = v309;
      sub_1C27DF188(v117, v309);
      uint64_t v134 = v307;
      sub_1C27DF188(v282, v307);
      goto LABEL_101;
    }
    goto LABEL_99;
  }
  uint64_t v203 = v199;
  uint64_t v204 = (uint64_t)v276;
  sub_1C27F67D0(v203, (uint64_t)v276, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  if (v201(v200, 1, v202) == 1)
  {
    sub_1C27DF1EC((uint64_t)v310);
    sub_1C27DF1EC(v121);
    (*(void (**)(uint64_t, uint64_t))(v279 + 8))(v204, v202);
LABEL_99:
    sub_1C2801184(v280, &qword_1EA310468, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    uint64_t v108 = v282;
    uint64_t v133 = v305;
    uint64_t v132 = v308;
    uint64_t v131 = v309;
    goto LABEL_32;
  }
  uint64_t v205 = v279;
  v206 = v271;
  (*(void (**)(char *, uint64_t, uint64_t))(v279 + 32))(v271, v200, v202);
  sub_1C2801228(&qword_1EA310478, &qword_1EA310480);
  char v207 = sub_1C28CD6E0();
  v208 = *(void (**)(char *, uint64_t))(v205 + 8);
  v208(v206, v202);
  sub_1C27DF1EC((uint64_t)v310);
  sub_1C27DF1EC(v121);
  v208(v276, v202);
  sub_1C27F80B0(v280, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  uint64_t v131 = v309;
  sub_1C27DF188(v117, v309);
  uint64_t v108 = v282;
  uint64_t v134 = v307;
  sub_1C27DF188(v282, v307);
  uint64_t v133 = v305;
  uint64_t v132 = v308;
  if ((v207 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_101:
  uint64_t v209 = v281[10];
  uint64_t v210 = v131 + v209;
  uint64_t v211 = v134 + v209;
  uint64_t v212 = v272;
  uint64_t v213 = v272 + *(int *)(v273 + 48);
  v214 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C27F67D0(v210, v272, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  sub_1C27F67D0(v211, v213, (unint64_t *)&qword_1EBB771E0, v214);
  v215 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v275 + 48);
  uint64_t v216 = v274;
  unsigned int v217 = v215(v212, 1, v274);
  v310 = v215;
  if (v217 == 1)
  {
    sub_1C27DF1EC(v307);
    sub_1C27DF1EC(v309);
    if (v215(v213, 1, v216) == 1)
    {
      sub_1C27F80B0(v212, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v132 = v308;
      sub_1C27DF188(v117, v308);
      uint64_t v108 = v282;
      uint64_t v133 = v305;
      sub_1C27DF188(v282, v305);
      goto LABEL_108;
    }
    goto LABEL_106;
  }
  uint64_t v218 = v270;
  sub_1C27F67D0(v212, v270, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v215(v213, 1, v216) == 1)
  {
    sub_1C27DF1EC(v307);
    sub_1C27DF1EC(v309);
    (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v218, v216);
    uint64_t v115 = v306;
LABEL_106:
    sub_1C2801184(v212, &qword_1EA310460, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    uint64_t v108 = v282;
    uint64_t v133 = v305;
    uint64_t v132 = v308;
    goto LABEL_34;
  }
  uint64_t v219 = v275;
  v220 = v268;
  (*(void (**)(char *, uint64_t, uint64_t))(v275 + 32))(v268, v213, v216);
  sub_1C28011E0(&qword_1EA310470, MEMORY[0x1E4F27928]);
  LODWORD(v298) = sub_1C28CD6E0();
  v221 = *(void (**)(char *, uint64_t))(v219 + 8);
  v221(v220, v216);
  sub_1C27DF1EC(v307);
  sub_1C27DF1EC(v309);
  v221((char *)v218, v216);
  sub_1C27F80B0(v212, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v132 = v308;
  sub_1C27DF188(v117, v308);
  uint64_t v108 = v282;
  uint64_t v133 = v305;
  sub_1C27DF188(v282, v305);
  uint64_t v115 = v306;
  if ((v298 & 1) == 0) {
    goto LABEL_35;
  }
LABEL_108:
  uint64_t v222 = v132;
  v223 = v281;
  int v224 = *(unsigned __int8 *)(v222 + v281[11]);
  sub_1C27DF1EC(v222);
  LODWORD(v223) = *(unsigned __int8 *)(v133 + v223[11]);
  sub_1C27DF1EC(v133);
  uint64_t v135 = v304;
  sub_1C27DF188(v117, v304);
  sub_1C27DF188(v108, v115);
  if (v224 != v223) {
    goto LABEL_36;
  }
  uint64_t v225 = v281[14];
  uint64_t v226 = v115 + v225;
  uint64_t v227 = v269;
  uint64_t v228 = v269 + *(int *)(v273 + 48);
  v229 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C27F67D0(v135 + v225, v269, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  sub_1C27F67D0(v226, v228, (unint64_t *)&qword_1EBB771E0, v229);
  if (v310(v227, 1, v274) == 1)
  {
    sub_1C27DF1EC(v306);
    sub_1C27DF1EC(v304);
    if (v310(v228, 1, v274) == 1)
    {
      sub_1C27F80B0(v269, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v118 = v302;
      sub_1C27DF188(v311, v302);
      uint64_t v119 = v303;
      sub_1C27DF188(v282, v303);
      goto LABEL_116;
    }
    goto LABEL_114;
  }
  sub_1C27F67D0(v269, v267, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v310(v228, 1, v274) == 1)
  {
    sub_1C27DF1EC(v306);
    sub_1C27DF1EC(v304);
    (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v267, v274);
LABEL_114:
    sub_1C2801184(v269, &qword_1EA310460, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    uint64_t v108 = v282;
    uint64_t v117 = v311;
    uint64_t v118 = v302;
    uint64_t v119 = v303;
    goto LABEL_37;
  }
  uint64_t v230 = v275;
  v231 = v268;
  uint64_t v232 = v274;
  (*(void (**)(char *, uint64_t, uint64_t))(v275 + 32))(v268, v228, v274);
  sub_1C28011E0(&qword_1EA310470, MEMORY[0x1E4F27928]);
  uint64_t v233 = v267;
  char v234 = sub_1C28CD6E0();
  v235 = *(void (**)(char *, uint64_t))(v230 + 8);
  v235(v231, v232);
  sub_1C27DF1EC(v306);
  sub_1C27DF1EC(v304);
  v235((char *)v233, v232);
  sub_1C27F80B0(v269, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v117 = v311;
  uint64_t v118 = v302;
  sub_1C27DF188(v311, v302);
  uint64_t v108 = v282;
  uint64_t v119 = v303;
  sub_1C27DF188(v282, v303);
  if ((v234 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_116:
  v236 = v281;
  uint64_t v237 = v118 + v281[15];
  uint64_t v238 = *(void *)v237;
  char v239 = *(unsigned char *)(v237 + 8);
  sub_1C27DF1EC(v118);
  uint64_t v240 = v119 + v236[15];
  uint64_t v241 = *(void *)v240;
  char v242 = *(unsigned char *)(v240 + 8);
  sub_1C27DF1EC(v119);
  if (v239)
  {
    uint64_t v108 = v282;
    uint64_t v117 = v311;
    if (v242)
    {
      uint64_t v136 = v301;
      sub_1C27DF188(v311, v301);
      uint64_t v137 = v300;
      sub_1C27DF188(v108, v300);
      goto LABEL_122;
    }
    goto LABEL_39;
  }
  uint64_t v108 = v282;
  uint64_t v117 = v311;
  if (v242)
  {
LABEL_39:
    uint64_t v136 = v301;
    sub_1C27DF188(v117, v301);
    uint64_t v137 = v300;
    sub_1C27DF188(v108, v300);
LABEL_40:
    sub_1C27DF1EC(v137);
    sub_1C27DF1EC(v136);
LABEL_41:
    uint64_t v138 = v299;
    uint64_t v139 = v287;
    sub_1C27DF188(v117, v287);
    sub_1C27DF188(v108, v138);
    uint64_t v140 = (uint64_t)v288;
LABEL_42:
    sub_1C27DF1EC(v138);
    sub_1C27DF1EC(v139);
    sub_1C27DF188(v117, v140);
    uint64_t v141 = v108;
    uint64_t v142 = v289;
    sub_1C27DF188(v141, v289);
LABEL_43:
    sub_1C27DF1EC(v142);
    sub_1C27DF1EC(v140);
    return 0;
  }
  uint64_t v136 = v301;
  sub_1C27DF188(v311, v301);
  uint64_t v243 = v300;
  sub_1C27DF188(v108, v300);
  BOOL v104 = v238 == v241;
  uint64_t v137 = v243;
  if (!v104) {
    goto LABEL_40;
  }
LABEL_122:
  uint64_t v244 = v281[13];
  uint64_t v245 = v137 + v244;
  uint64_t v246 = v266;
  uint64_t v247 = v266 + *(int *)(v273 + 48);
  v248 = (void (*)(uint64_t))MEMORY[0x1E4F27928];
  sub_1C27F67D0(v136 + v244, v266, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  sub_1C27F67D0(v245, v247, (unint64_t *)&qword_1EBB771E0, v248);
  if (v310(v246, 1, v274) == 1)
  {
    sub_1C27DF1EC(v300);
    sub_1C27DF1EC(v301);
    if (v310(v247, 1, v274) == 1)
    {
      sub_1C27F80B0(v266, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      uint64_t v117 = v311;
      uint64_t v139 = v287;
      sub_1C27DF188(v311, v287);
      uint64_t v108 = v282;
      uint64_t v138 = v299;
      sub_1C27DF188(v282, v299);
      uint64_t v140 = (uint64_t)v288;
      goto LABEL_129;
    }
    goto LABEL_127;
  }
  sub_1C27F67D0(v266, v265, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (v310(v247, 1, v274) == 1)
  {
    sub_1C27DF1EC(v300);
    sub_1C27DF1EC(v301);
    (*(void (**)(uint64_t, uint64_t))(v275 + 8))(v265, v274);
LABEL_127:
    sub_1C2801184(v266, &qword_1EA310460, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    uint64_t v108 = v282;
    uint64_t v117 = v311;
    goto LABEL_41;
  }
  uint64_t v249 = v275;
  v250 = v268;
  uint64_t v251 = v274;
  (*(void (**)(char *, uint64_t, uint64_t))(v275 + 32))(v268, v247, v274);
  sub_1C28011E0(&qword_1EA310470, MEMORY[0x1E4F27928]);
  uint64_t v252 = v265;
  char v253 = sub_1C28CD6E0();
  v254 = *(void (**)(char *, uint64_t))(v249 + 8);
  v254(v250, v251);
  sub_1C27DF1EC(v300);
  sub_1C27DF1EC(v301);
  v254((char *)v252, v251);
  sub_1C27F80B0(v266, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  uint64_t v117 = v311;
  uint64_t v139 = v287;
  sub_1C27DF188(v311, v287);
  uint64_t v108 = v282;
  uint64_t v138 = v299;
  sub_1C27DF188(v282, v299);
  uint64_t v140 = (uint64_t)v288;
  if ((v253 & 1) == 0) {
    goto LABEL_42;
  }
LABEL_129:
  v255 = v281;
  int v256 = *(unsigned __int8 *)(v139 + v281[12]);
  sub_1C27DF1EC(v139);
  int v257 = *(unsigned __int8 *)(v138 + v255[12]);
  sub_1C27DF1EC(v138);
  sub_1C27DF188(v117, v140);
  uint64_t v258 = v108;
  uint64_t v142 = v289;
  sub_1C27DF188(v258, v289);
  if (v256 != v257) {
    goto LABEL_43;
  }
  v259 = v281;
  uint64_t v260 = v140 + v281[22];
  uint64_t v261 = *(void *)v260;
  char v262 = *(unsigned char *)(v260 + 8);
  sub_1C27DF1EC(v140);
  uint64_t v263 = v142 + v259[22];
  uint64_t v264 = *(void *)v263;
  uint64_t v143 = *(unsigned __int8 *)(v263 + 8);
  sub_1C27DF1EC(v142);
  if ((v262 & 1) == 0) {
    return (v261 == v264) & ~v143;
  }
  return v143;
}

uint64_t sub_1C27FDE50()
{
  return sub_1C28011E0(&qword_1EA310440, (void (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation);
}

uint64_t sub_1C27FDE98@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(a1 + *(int *)(type metadata accessor for SharingEntryProfileInformation() + 36));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C27FDEE4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  unint64_t v2 = a1[1];
  swift_bridgeObjectRetain();
  return SharingEntryProfileInformation.lastName.setter(v1, v2);
}

uint64_t sub_1C27FDF24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 72));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1C27FDF68(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = a2 + *(int *)(result + 72);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1C27FDFB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 76));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1C27FDFF4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = a2 + *(int *)(result + 76);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1C27FE03C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 80));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1C27FE080(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = a2 + *(int *)(result + 80);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1C27FE0C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 84));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1C27FE10C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = a2 + *(int *)(result + 84);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  return result;
}

uint64_t sub_1C27FE154@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v5 = (uint64_t *)(a1 + *(int *)(result + 88));
  uint64_t v6 = *v5;
  LOBYTE(v5) = *((unsigned char *)v5 + 8);
  *(void *)a2 = v6;
  *(unsigned char *)(a2 + 8) = (_BYTE)v5;
  return result;
}

uint64_t sub_1C27FE198(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t result = type metadata accessor for SharingEntryProfileInformation();
  uint64_t v6 = a2 + *(int *)(result + 88);
  *(void *)uint64_t v6 = v3;
  *(unsigned char *)(v6 + 8) = v4;
  return result;
}

void *initializeBufferWithCopyOfBuffer for SharingEntryProfileInformation(void *a1, void *a2, int *a3)
{
  char v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v33 = *a2;
    *char v4 = *a2;
    char v4 = (void *)(v33 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_1C28CC4B0();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    uint64_t v13 = a3[6];
    uint64_t v14 = a3[7];
    uint64_t v15 = (void *)((char *)v4 + v13);
    uint64_t v16 = (void *)((char *)a2 + v13);
    uint64_t v17 = v16[1];
    *uint64_t v15 = *v16;
    v15[1] = v17;
    uint64_t v18 = (void *)((char *)v4 + v14);
    uint64_t v19 = (void *)((char *)a2 + v14);
    uint64_t v73 = v19[1];
    *uint64_t v18 = *v19;
    v18[1] = v73;
    uint64_t v20 = a3[8];
    uint64_t v21 = a3[9];
    uint64_t v22 = (void *)((char *)v4 + v20);
    uint64_t v23 = (void *)((char *)a2 + v20);
    uint64_t v24 = v23[1];
    *uint64_t v22 = *v23;
    v22[1] = v24;
    uint64_t v25 = (void *)((char *)v4 + v21);
    uint64_t v26 = (void *)((char *)a2 + v21);
    uint64_t v27 = v26[1];
    void *v25 = *v26;
    v25[1] = v27;
    uint64_t v28 = a3[10];
    __dst = (char *)v4 + v28;
    uint64_t v29 = (char *)a2 + v28;
    uint64_t v30 = sub_1C28CC450();
    uint64_t v74 = *(void *)(v30 - 8);
    uint64_t v31 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v74 + 48);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v31(v29, 1, v30))
    {
      sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      memcpy(__dst, v29, *(void *)(*(void *)(v32 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(__dst, v29, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(__dst, 0, 1, v30);
    }
    uint64_t v34 = a3[12];
    *((unsigned char *)v4 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)v4 + v34) = *((unsigned char *)a2 + v34);
    uint64_t v35 = a3[13];
    uint64_t v36 = (char *)v4 + v35;
    uint64_t v37 = (char *)a2 + v35;
    if (v31((char *)a2 + v35, 1, v30))
    {
      sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      memcpy(v36, v37, *(void *)(*(void *)(v38 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v36, v37, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v36, 0, 1, v30);
    }
    uint64_t v39 = a3[14];
    uint64_t v40 = (char *)v4 + v39;
    uint64_t v41 = (char *)a2 + v39;
    if (v31((char *)a2 + v39, 1, v30))
    {
      sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
      memcpy(v40, v41, *(void *)(*(void *)(v42 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v40, v41, v30);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v74 + 56))(v40, 0, 1, v30);
    }
    uint64_t v43 = a3[15];
    uint64_t v44 = a3[16];
    uint64_t v45 = (char *)v4 + v43;
    uint64_t v46 = (char *)a2 + v43;
    *(void *)uint64_t v45 = *(void *)v46;
    v45[8] = v46[8];
    uint64_t v47 = (char *)v4 + v44;
    uint64_t v48 = (char *)a2 + v44;
    *(_OWORD *)uint64_t v47 = *(_OWORD *)v48;
    v47[16] = v48[16];
    uint64_t v49 = a3[17];
    uint64_t v50 = (char *)v4 + v49;
    uint64_t v51 = (char *)a2 + v49;
    sub_1C27F683C();
    uint64_t v53 = v52;
    uint64_t v54 = *(void *)(v52 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v51, 1, v52))
    {
      sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
      memcpy(v50, v51, *(void *)(*(void *)(v55 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v50, v51, v53);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v54 + 56))(v50, 0, 1, v53);
    }
    uint64_t v56 = a3[18];
    uint64_t v57 = a3[19];
    uint64_t v58 = (char *)v4 + v56;
    uint64_t v59 = (char *)a2 + v56;
    *(void *)uint64_t v58 = *(void *)v59;
    v58[8] = v59[8];
    uint64_t v60 = (char *)v4 + v57;
    uint64_t v61 = (char *)a2 + v57;
    *(void *)uint64_t v60 = *(void *)v61;
    v60[8] = v61[8];
    uint64_t v62 = a3[20];
    uint64_t v63 = a3[21];
    uint64_t v64 = (char *)v4 + v62;
    uint64_t v65 = (char *)a2 + v62;
    *(void *)uint64_t v64 = *(void *)v65;
    v64[8] = v65[8];
    uint64_t v66 = (char *)v4 + v63;
    uint64_t v67 = (char *)a2 + v63;
    *(void *)uint64_t v66 = *(void *)v67;
    v66[8] = v67[8];
    uint64_t v68 = a3[22];
    uint64_t v69 = (char *)v4 + v68;
    uint64_t v70 = (char *)a2 + v68;
    uint64_t v71 = *(void *)v70;
    v69[8] = v70[8];
    *(void *)uint64_t v69 = v71;
  }
  return v4;
}

uint64_t destroy for SharingEntryProfileInformation(uint64_t a1, int *a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + a2[5];
  uint64_t v5 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + a2[10];
  uint64_t v7 = sub_1C28CC450();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (!v9(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }
  uint64_t v10 = a1 + a2[13];
  if (!v9(v10, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v11 = a1 + a2[14];
  if (!v9(v11, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v11, v7);
  }
  uint64_t v12 = a1 + a2[17];
  sub_1C27F683C();
  uint64_t v14 = v13;
  uint64_t v17 = *(void *)(v13 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v12, 1, v13);
  if (!result)
  {
    uint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8);
    return v16(v12, v14);
  }
  return result;
}

void *initializeWithCopy for SharingEntryProfileInformation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C28CC4B0();
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  uint64_t v12 = a3[6];
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v12);
  uint64_t v15 = (void *)((char *)a2 + v12);
  uint64_t v16 = v15[1];
  *uint64_t v14 = *v15;
  v14[1] = v16;
  uint64_t v17 = (void *)((char *)a1 + v13);
  uint64_t v18 = (void *)((char *)a2 + v13);
  uint64_t v71 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v71;
  uint64_t v19 = a3[8];
  uint64_t v20 = a3[9];
  uint64_t v21 = (void *)((char *)a1 + v19);
  uint64_t v22 = (void *)((char *)a2 + v19);
  uint64_t v23 = v22[1];
  *uint64_t v21 = *v22;
  v21[1] = v23;
  uint64_t v24 = (void *)((char *)a1 + v20);
  uint64_t v25 = (void *)((char *)a2 + v20);
  uint64_t v26 = v25[1];
  *uint64_t v24 = *v25;
  v24[1] = v26;
  uint64_t v27 = a3[10];
  __dst = (char *)a1 + v27;
  uint64_t v28 = (char *)a2 + v27;
  uint64_t v29 = sub_1C28CC450();
  uint64_t v72 = *(void *)(v29 - 8);
  uint64_t v30 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v30(v28, 1, v29))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(__dst, v28, *(void *)(*(void *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(__dst, v28, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(__dst, 0, 1, v29);
  }
  uint64_t v32 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v32) = *((unsigned char *)a2 + v32);
  uint64_t v33 = a3[13];
  uint64_t v34 = (char *)a1 + v33;
  uint64_t v35 = (char *)a2 + v33;
  if (v30((char *)a2 + v33, 1, v29))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v34, v35, *(void *)(*(void *)(v36 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v34, v35, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v34, 0, 1, v29);
  }
  uint64_t v37 = a3[14];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  if (v30((char *)a2 + v37, 1, v29))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v38, v39, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v38, v39, v29);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 56))(v38, 0, 1, v29);
  }
  uint64_t v41 = a3[15];
  uint64_t v42 = a3[16];
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = (char *)a1 + v42;
  uint64_t v46 = (char *)a2 + v42;
  *(_OWORD *)uint64_t v45 = *(_OWORD *)v46;
  v45[16] = v46[16];
  uint64_t v47 = a3[17];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  sub_1C27F683C();
  uint64_t v51 = v50;
  uint64_t v52 = *(void *)(v50 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v52 + 48))(v49, 1, v50))
  {
    sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    memcpy(v48, v49, *(void *)(*(void *)(v53 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v52 + 16))(v48, v49, v51);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v52 + 56))(v48, 0, 1, v51);
  }
  uint64_t v54 = a3[18];
  uint64_t v55 = a3[19];
  uint64_t v56 = (char *)a1 + v54;
  uint64_t v57 = (char *)a2 + v54;
  *(void *)uint64_t v56 = *(void *)v57;
  v56[8] = v57[8];
  uint64_t v58 = (char *)a1 + v55;
  uint64_t v59 = (char *)a2 + v55;
  *(void *)uint64_t v58 = *(void *)v59;
  v58[8] = v59[8];
  uint64_t v60 = a3[20];
  uint64_t v61 = a3[21];
  uint64_t v62 = (char *)a1 + v60;
  uint64_t v63 = (char *)a2 + v60;
  *(void *)uint64_t v62 = *(void *)v63;
  v62[8] = v63[8];
  uint64_t v64 = (char *)a1 + v61;
  uint64_t v65 = (char *)a2 + v61;
  *(void *)uint64_t v64 = *(void *)v65;
  v64[8] = v65[8];
  uint64_t v66 = a3[22];
  uint64_t v67 = (char *)a1 + v66;
  uint64_t v68 = (char *)a2 + v66;
  uint64_t v69 = *(void *)v68;
  v67[8] = v68[8];
  *(void *)uint64_t v67 = v69;
  return a1;
}

void *assignWithCopy for SharingEntryProfileInformation(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C28CC4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 24))(v7, v8, v9);
  uint64_t v10 = a3[6];
  uint64_t v11 = (void *)((char *)a1 + v10);
  uint64_t v12 = (void *)((char *)a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v13 = a3[7];
  uint64_t v14 = (void *)((char *)a1 + v13);
  uint64_t v15 = (void *)((char *)a2 + v13);
  *uint64_t v14 = *v15;
  v14[1] = v15[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[8];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  *uint64_t v17 = *v18;
  v17[1] = v18[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[9];
  uint64_t v20 = (void *)((char *)a1 + v19);
  uint64_t v21 = (void *)((char *)a2 + v19);
  *uint64_t v20 = *v21;
  v20[1] = v21[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v22 = a3[10];
  uint64_t v23 = (char *)a1 + v22;
  uint64_t v24 = (char *)a2 + v22;
  uint64_t v25 = sub_1C28CC450();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
  int v28 = v27(v23, 1, v25);
  int v29 = v27(v24, 1, v25);
  if (v28)
  {
    if (!v29)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v23, v24, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v23, 0, 1, v25);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v29)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v23, v25);
LABEL_6:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v23, v24, *(void *)(*(void *)(v30 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v23, v24, v25);
LABEL_7:
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + a3[12]) = *((unsigned char *)a2 + a3[12]);
  uint64_t v31 = a3[13];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  int v34 = v27((char *)a1 + v31, 1, v25);
  int v35 = v27(v33, 1, v25);
  if (v34)
  {
    if (!v35)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v32, v33, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v32, 0, 1, v25);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v35)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v32, v25);
LABEL_12:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v32, v33, *(void *)(*(void *)(v36 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v32, v33, v25);
LABEL_13:
  uint64_t v37 = a3[14];
  uint64_t v38 = (char *)a1 + v37;
  uint64_t v39 = (char *)a2 + v37;
  int v40 = v27((char *)a1 + v37, 1, v25);
  int v41 = v27(v39, 1, v25);
  if (v40)
  {
    if (!v41)
    {
      (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v38, v39, v25);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v38, 0, 1, v25);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v41)
  {
    (*(void (**)(char *, uint64_t))(v26 + 8))(v38, v25);
LABEL_18:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v38, v39, *(void *)(*(void *)(v42 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 24))(v38, v39, v25);
LABEL_19:
  uint64_t v43 = a3[15];
  uint64_t v44 = (char *)a1 + v43;
  uint64_t v45 = (char *)a2 + v43;
  uint64_t v46 = *(void *)v45;
  v44[8] = v45[8];
  *(void *)uint64_t v44 = v46;
  uint64_t v47 = a3[16];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  long long v50 = *(_OWORD *)v49;
  v48[16] = v49[16];
  *(_OWORD *)uint64_t v48 = v50;
  uint64_t v51 = a3[17];
  uint64_t v52 = (char *)a1 + v51;
  uint64_t v53 = (char *)a2 + v51;
  sub_1C27F683C();
  uint64_t v55 = v54;
  uint64_t v56 = *(void *)(v54 - 8);
  uint64_t v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  int v58 = v57(v52, 1, v54);
  int v59 = v57(v53, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 24))(v52, v53, v55);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v52, v55);
    goto LABEL_24;
  }
  if (v59)
  {
LABEL_24:
    sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    memcpy(v52, v53, *(void *)(*(void *)(v60 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 16))(v52, v53, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v52, 0, 1, v55);
LABEL_25:
  uint64_t v61 = a3[18];
  uint64_t v62 = (char *)a1 + v61;
  uint64_t v63 = (char *)a2 + v61;
  uint64_t v64 = *(void *)v63;
  v62[8] = v63[8];
  *(void *)uint64_t v62 = v64;
  uint64_t v65 = a3[19];
  uint64_t v66 = (char *)a1 + v65;
  uint64_t v67 = (char *)a2 + v65;
  uint64_t v68 = *(void *)v67;
  v66[8] = v67[8];
  *(void *)uint64_t v66 = v68;
  uint64_t v69 = a3[20];
  uint64_t v70 = (char *)a1 + v69;
  uint64_t v71 = (char *)a2 + v69;
  uint64_t v72 = *(void *)v71;
  v70[8] = v71[8];
  *(void *)uint64_t v70 = v72;
  uint64_t v73 = a3[21];
  uint64_t v74 = (char *)a1 + v73;
  uint64_t v75 = (char *)a2 + v73;
  uint64_t v76 = *(void *)v75;
  v74[8] = v75[8];
  *(void *)uint64_t v74 = v76;
  uint64_t v77 = a3[22];
  uint64_t v78 = (char *)a1 + v77;
  uint64_t v79 = (char *)a2 + v77;
  uint64_t v80 = *(void *)v79;
  v78[8] = v79[8];
  *(void *)uint64_t v78 = v80;
  return a1;
}

_OWORD *initializeWithTake for SharingEntryProfileInformation(_OWORD *a1, _OWORD *a2, int *a3)
{
  *a1 = *a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_1C28CC4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(v7, v8, v9);
  uint64_t v10 = a3[7];
  *(_OWORD *)((char *)a1 + a3[6]) = *(_OWORD *)((char *)a2 + a3[6]);
  *(_OWORD *)((char *)a1 + v10) = *(_OWORD *)((char *)a2 + v10);
  uint64_t v11 = a3[9];
  *(_OWORD *)((char *)a1 + a3[8]) = *(_OWORD *)((char *)a2 + a3[8]);
  *(_OWORD *)((char *)a1 + v11) = *(_OWORD *)((char *)a2 + v11);
  uint64_t v12 = a3[10];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = (char *)a2 + v12;
  uint64_t v15 = sub_1C28CC450();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  if (v17(v14, 1, v15))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v13, v14, *(void *)(*(void *)(v18 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v13, v14, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  uint64_t v19 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  uint64_t v20 = a3[13];
  uint64_t v21 = (char *)a1 + v20;
  uint64_t v22 = (char *)a2 + v20;
  if (v17((char *)a2 + v20, 1, v15))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v21, v22, *(void *)(*(void *)(v23 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v22, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v21, 0, 1, v15);
  }
  uint64_t v24 = a3[14];
  uint64_t v25 = (char *)a1 + v24;
  uint64_t v26 = (char *)a2 + v24;
  if (v17((char *)a2 + v24, 1, v15))
  {
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v25, v26, *(void *)(*(void *)(v27 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v25, v26, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(v25, 0, 1, v15);
  }
  uint64_t v28 = a3[15];
  uint64_t v29 = a3[16];
  uint64_t v30 = (char *)a1 + v28;
  uint64_t v31 = (char *)a2 + v28;
  *(void *)uint64_t v30 = *(void *)v31;
  v30[8] = v31[8];
  uint64_t v32 = (char *)a1 + v29;
  uint64_t v33 = (char *)a2 + v29;
  *(_OWORD *)uint64_t v32 = *(_OWORD *)v33;
  v32[16] = v33[16];
  uint64_t v34 = a3[17];
  int v35 = (char *)a1 + v34;
  uint64_t v36 = (char *)a2 + v34;
  sub_1C27F683C();
  uint64_t v38 = v37;
  uint64_t v39 = *(void *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v36, 1, v37))
  {
    sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    memcpy(v35, v36, *(void *)(*(void *)(v40 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v35, v36, v38);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v39 + 56))(v35, 0, 1, v38);
  }
  uint64_t v41 = a3[18];
  uint64_t v42 = a3[19];
  uint64_t v43 = (char *)a1 + v41;
  uint64_t v44 = (char *)a2 + v41;
  *(void *)uint64_t v43 = *(void *)v44;
  v43[8] = v44[8];
  uint64_t v45 = (char *)a1 + v42;
  uint64_t v46 = (char *)a2 + v42;
  *(void *)uint64_t v45 = *(void *)v46;
  v45[8] = v46[8];
  uint64_t v47 = a3[20];
  uint64_t v48 = a3[21];
  uint64_t v49 = (char *)a1 + v47;
  long long v50 = (char *)a2 + v47;
  *(void *)uint64_t v49 = *(void *)v50;
  v49[8] = v50[8];
  uint64_t v51 = (char *)a1 + v48;
  uint64_t v52 = (char *)a2 + v48;
  *(void *)uint64_t v51 = *(void *)v52;
  v51[8] = v52[8];
  uint64_t v53 = a3[22];
  uint64_t v54 = (char *)a1 + v53;
  uint64_t v55 = (char *)a2 + v53;
  uint64_t v56 = *(void *)v55;
  v54[8] = v55[8];
  *(void *)uint64_t v54 = v56;
  return a1;
}

void *assignWithTake for SharingEntryProfileInformation(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_1C28CC4B0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  uint64_t v11 = a3[6];
  uint64_t v12 = (void *)((char *)a1 + v11);
  uint64_t v13 = (void *)((char *)a2 + v11);
  uint64_t v15 = *v13;
  uint64_t v14 = v13[1];
  *uint64_t v12 = v15;
  v12[1] = v14;
  swift_bridgeObjectRelease();
  uint64_t v16 = a3[7];
  uint64_t v17 = (void *)((char *)a1 + v16);
  uint64_t v18 = (void *)((char *)a2 + v16);
  uint64_t v20 = *v18;
  uint64_t v19 = v18[1];
  *uint64_t v17 = v20;
  v17[1] = v19;
  swift_bridgeObjectRelease();
  uint64_t v21 = a3[8];
  uint64_t v22 = (void *)((char *)a1 + v21);
  uint64_t v23 = (void *)((char *)a2 + v21);
  uint64_t v25 = *v23;
  uint64_t v24 = v23[1];
  *uint64_t v22 = v25;
  v22[1] = v24;
  swift_bridgeObjectRelease();
  uint64_t v26 = a3[9];
  uint64_t v27 = (void *)((char *)a1 + v26);
  uint64_t v28 = (void *)((char *)a2 + v26);
  uint64_t v30 = *v28;
  uint64_t v29 = v28[1];
  *uint64_t v27 = v30;
  v27[1] = v29;
  swift_bridgeObjectRelease();
  uint64_t v31 = a3[10];
  uint64_t v32 = (char *)a1 + v31;
  uint64_t v33 = (char *)a2 + v31;
  uint64_t v34 = sub_1C28CC450();
  uint64_t v35 = *(void *)(v34 - 8);
  uint64_t v36 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48);
  int v37 = v36(v32, 1, v34);
  int v38 = v36(v33, 1, v34);
  if (v37)
  {
    if (!v38)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v32, v33, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v38)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v32, v34);
LABEL_6:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v32, v33, *(void *)(*(void *)(v39 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v32, v33, v34);
LABEL_7:
  uint64_t v40 = a3[12];
  *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
  *((unsigned char *)a1 + v40) = *((unsigned char *)a2 + v40);
  uint64_t v41 = a3[13];
  uint64_t v42 = (char *)a1 + v41;
  uint64_t v43 = (char *)a2 + v41;
  int v44 = v36((char *)a1 + v41, 1, v34);
  int v45 = v36(v43, 1, v34);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v42, v43, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v42, 0, 1, v34);
      goto LABEL_13;
    }
    goto LABEL_12;
  }
  if (v45)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v42, v34);
LABEL_12:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v42, v43, *(void *)(*(void *)(v46 - 8) + 64));
    goto LABEL_13;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v42, v43, v34);
LABEL_13:
  uint64_t v47 = a3[14];
  uint64_t v48 = (char *)a1 + v47;
  uint64_t v49 = (char *)a2 + v47;
  int v50 = v36((char *)a1 + v47, 1, v34);
  int v51 = v36(v49, 1, v34);
  if (v50)
  {
    if (!v51)
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v48, v49, v34);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v35 + 56))(v48, 0, 1, v34);
      goto LABEL_19;
    }
    goto LABEL_18;
  }
  if (v51)
  {
    (*(void (**)(char *, uint64_t))(v35 + 8))(v48, v34);
LABEL_18:
    sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    memcpy(v48, v49, *(void *)(*(void *)(v52 - 8) + 64));
    goto LABEL_19;
  }
  (*(void (**)(char *, char *, uint64_t))(v35 + 40))(v48, v49, v34);
LABEL_19:
  uint64_t v53 = a3[15];
  uint64_t v54 = a3[16];
  uint64_t v55 = (char *)a1 + v53;
  uint64_t v56 = (char *)a2 + v53;
  *(void *)uint64_t v55 = *(void *)v56;
  v55[8] = v56[8];
  uint64_t v57 = (char *)a1 + v54;
  int v58 = (char *)a2 + v54;
  *(_OWORD *)uint64_t v57 = *(_OWORD *)v58;
  v57[16] = v58[16];
  uint64_t v59 = a3[17];
  uint64_t v60 = (char *)a1 + v59;
  uint64_t v61 = (char *)a2 + v59;
  sub_1C27F683C();
  uint64_t v63 = v62;
  uint64_t v64 = *(void *)(v62 - 8);
  uint64_t v65 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v64 + 48);
  int v66 = v65(v60, 1, v62);
  int v67 = v65(v61, 1, v63);
  if (!v66)
  {
    if (!v67)
    {
      (*(void (**)(char *, char *, uint64_t))(v64 + 40))(v60, v61, v63);
      goto LABEL_25;
    }
    (*(void (**)(char *, uint64_t))(v64 + 8))(v60, v63);
    goto LABEL_24;
  }
  if (v67)
  {
LABEL_24:
    sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
    memcpy(v60, v61, *(void *)(*(void *)(v68 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(char *, char *, uint64_t))(v64 + 32))(v60, v61, v63);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v60, 0, 1, v63);
LABEL_25:
  uint64_t v69 = a3[18];
  uint64_t v70 = a3[19];
  uint64_t v71 = (char *)a1 + v69;
  uint64_t v72 = (char *)a2 + v69;
  *(void *)uint64_t v71 = *(void *)v72;
  v71[8] = v72[8];
  uint64_t v73 = (char *)a1 + v70;
  uint64_t v74 = (char *)a2 + v70;
  *(void *)uint64_t v73 = *(void *)v74;
  v73[8] = v74[8];
  uint64_t v75 = a3[20];
  uint64_t v76 = a3[21];
  uint64_t v77 = (char *)a1 + v75;
  uint64_t v78 = (char *)a2 + v75;
  *(void *)uint64_t v77 = *(void *)v78;
  v77[8] = v78[8];
  uint64_t v79 = (char *)a1 + v76;
  uint64_t v80 = (char *)a2 + v76;
  *(void *)uint64_t v79 = *(void *)v80;
  v79[8] = v80[8];
  uint64_t v81 = a3[22];
  uint64_t v82 = (char *)a1 + v81;
  uint64_t v83 = (char *)a2 + v81;
  uint64_t v84 = *(void *)v83;
  v82[8] = v83[8];
  *(void *)uint64_t v82 = v84;
  return a1;
}

uint64_t sub_1C28001BC(uint64_t a1, uint64_t a2, int *a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  uint64_t v8 = sub_1C28CC4B0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a2)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a3[5];
LABEL_9:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
    return v13(a1 + v11, a2, v9);
  }
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a2)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a3[10];
    goto LABEL_9;
  }
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 48);
  uint64_t v16 = v14;
  uint64_t v17 = a1 + a3[17];

  return v15(v17, a2, v16);
}

uint64_t sub_1C280036C(uint64_t result, uint64_t a2, int a3, int *a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
    return result;
  }
  uint64_t v8 = sub_1C28CC4B0();
  if (*(_DWORD *)(*(void *)(v8 - 8) + 84) == a3)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(v8 - 8);
    uint64_t v11 = a4[5];
LABEL_7:
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 56);
    return v13(v5 + v11, a2, a2, v9);
  }
  sub_1C27D09CC(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
  if (*(_DWORD *)(*(void *)(v12 - 8) + 84) == a3)
  {
    uint64_t v9 = v12;
    uint64_t v10 = *(void *)(v12 - 8);
    uint64_t v11 = a4[10];
    goto LABEL_7;
  }
  sub_1C27D09CC(0, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
  uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
  uint64_t v16 = v14;
  uint64_t v17 = v5 + a4[17];

  return v15(v17, a2, a2, v16);
}

void sub_1C280051C()
{
  sub_1C28CC4B0();
  if (v0 <= 0x3F)
  {
    sub_1C27D09CC(319, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928]);
    if (v1 <= 0x3F)
    {
      sub_1C27D09CC(319, &qword_1EBB748E8, (void (*)(uint64_t))sub_1C27F683C);
      if (v2 <= 0x3F) {
        swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for SharingEntryProfileInformation.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SharingEntryProfileInformation.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28007FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharingEntryProfileInformation.CodingKeys()
{
  return &type metadata for SharingEntryProfileInformation.CodingKeys;
}

unint64_t sub_1C2800838()
{
  unint64_t result = qword_1EA310448;
  if (!qword_1EA310448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310448);
  }
  return result;
}

unint64_t sub_1C2800890()
{
  unint64_t result = qword_1EA310450;
  if (!qword_1EA310450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310450);
  }
  return result;
}

unint64_t sub_1C28008E8()
{
  unint64_t result = qword_1EA310458;
  if (!qword_1EA310458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310458);
  }
  return result;
}

uint64_t sub_1C280093C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1684632949 && a2 == 0xE400000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DB830 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DB850 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6D614E7473726966 && a2 == 0xE900000000000065 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x656D614E7473616CLL && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x6164705565746164 && a2 == 0xEB00000000646574 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DB870 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6465737561507369 && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x69766E4965746164 && a2 == 0xEE00746E65536574 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C28DB890 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DB8B0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000001C28DB8D0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DB8F0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x54676E6972616873 && a2 == 0xEB00000000657079 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x53676E6972616873 && a2 == 0xED00007375746174 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C28DB910 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C28DB930 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0x6168636C65656877 && a2 == 0xED00006573557269)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

void sub_1C2801120(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_1C27D09CC(255, a3, a4);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v6) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C2801184(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_1C2801120(0, a2, a3, a4);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_1C28011E0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2801228(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27F683C();
    sub_1C27FBD1C(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C28012A4()
{
  unint64_t result = qword_1EA310488;
  if (!qword_1EA310488)
  {
    type metadata accessor for SharingEntryProfileInformation();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310488);
  }
  return result;
}

uint64_t static FeatureStatusSupport.keyword(from:)(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      uint64_t result = MEMORY[0x1F41203F0]();
      break;
    case 2:
    case 3:
      uint64_t result = MEMORY[0x1F41203E0]();
      break;
    case 4:
      uint64_t result = MEMORY[0x1F41203D8]();
      break;
    default:
      uint64_t result = MEMORY[0x1F41203E8]();
      break;
  }
  return result;
}

void *FeatureStatusSupport.FeatureStatusDomain.orderedElements.getter()
{
  return &unk_1F1DD8A40;
}

uint64_t FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter()
{
  char v7 = *v0;
  uint64_t v1 = sub_1C27BCCC8((uint64_t)&unk_1F1DD8A68, (uint64_t (*)(uint64_t))sub_1C28024B4);
  v6[2] = &v7;
  uint64_t v2 = sub_1C27D74D0((uint64_t (*)(char *))sub_1C27D757C, (uint64_t)v6, v1);
  char v4 = v3;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v4 & 1) == 0)
  {
    uint64_t result = 100 * v2;
    if ((unsigned __int128)(v2 * (__int128)100) >> 64 == (100 * v2) >> 63) {
      return result;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t FeatureStatusSupport.FeatureStatusDomain.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 6;
  if (result < 6) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

uint64_t FeatureStatusSupport.FeatureStatusDomain.rawValue.getter()
{
  return *v0;
}

unint64_t sub_1C2801404@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureStatusSupport.FeatureStatusDomain.init(rawValue:)(*a1, a2);
}

void sub_1C280140C(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_1C2801418()
{
  return &unk_1F1DD8A40;
}

void *FeatureStatusSupport.Safety.orderedElements.getter()
{
  return &unk_1F1DD8A90;
}

uint64_t FeatureStatusSupport.Safety.sortHintValue.getter()
{
  char v1 = *v0;
  uint64_t v2 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  char v9 = v1;
  uint64_t v3 = sub_1C27BCCC8((uint64_t)&unk_1F1DD8AB8, (uint64_t (*)(uint64_t))sub_1C28024EC);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74D0((uint64_t (*)(char *))sub_1C28038BC, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_5;
  }
  uint64_t result = v2 + v4;
  if (__OFADD__(v2, v4))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  return result;
}

unint64_t FeatureStatusSupport.Safety.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2 = 4;
  if (result < 4) {
    char v2 = result;
  }
  *a2 = v2;
  return result;
}

unint64_t sub_1C2801508@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureStatusSupport.Safety.init(rawValue:)(*a1, a2);
}

void *sub_1C2801510()
{
  return &unk_1F1DD8AE0;
}

void *FeatureStatusSupport.Heart.orderedElements.getter()
{
  return &unk_1F1DD8B08;
}

uint64_t FeatureStatusSupport.Heart.sortHintValue.getter()
{
  char v1 = *v0;
  uint64_t v2 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  char v9 = v1;
  uint64_t v3 = sub_1C27BCCC8((uint64_t)&unk_1F1DD8B30, (uint64_t (*)(uint64_t))sub_1C2802524);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74D0((uint64_t (*)(char *))sub_1C28038BC, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_5;
  }
  uint64_t result = v2 + v4;
  if (__OFADD__(v2, v4))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  return result;
}

void *sub_1C28015F0()
{
  return &unk_1F1DD8B08;
}

void *FeatureStatusSupport.Respiratory.orderedElements.getter()
{
  return &unk_1F1DD8B58;
}

uint64_t FeatureStatusSupport.Respiratory.sortHintValue.getter()
{
  uint64_t v0 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  uint64_t v1 = *(void *)(sub_1C2801BE0((uint64_t)&unk_1F1DD8B80, (uint64_t (*)(uint64_t))sub_1C280255C) + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      char v3 = sub_1C28016F0();
      if (v3) {
        break;
      }
      if (v1 == ++v2)
      {
        uint64_t v2 = 0;
        break;
      }
    }
    char v4 = v3 ^ 1;
  }
  else
  {
    uint64_t v2 = 0;
    char v4 = 1;
  }
  char v5 = v4 & 1;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_12;
  }
  uint64_t result = v0 + v2;
  if (__OFADD__(v0, v2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t FeatureStatusSupport.Respiratory.init(rawValue:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = result != 0;
  return result;
}

uint64_t FeatureStatusSupport.Respiratory.rawValue.getter()
{
  return 0;
}

uint64_t sub_1C28016F0()
{
  return 1;
}

uint64_t sub_1C28016FC()
{
  return sub_1C28CE710();
}

void *sub_1C2801728@<X0>(void *result@<X0>, BOOL *a2@<X8>)
{
  *a2 = *result != 0;
  return result;
}

void *sub_1C280173C()
{
  return &unk_1F1DD8BA8;
}

uint64_t sub_1C2801748()
{
  return FeatureStatusSupport.Respiratory.sortHintValue.getter();
}

void *FeatureStatusSupport.Mobility.orderedElements.getter()
{
  return &unk_1F1DD8BD0;
}

uint64_t FeatureStatusSupport.Mobility.sortHintValue.getter()
{
  uint64_t v0 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  uint64_t v1 = *(void *)(sub_1C2801BE0((uint64_t)&unk_1F1DD8BF8, (uint64_t (*)(uint64_t))sub_1C2802594) + 16);
  if (v1)
  {
    uint64_t v2 = 0;
    while (1)
    {
      char v3 = sub_1C28016F0();
      if (v3) {
        break;
      }
      if (v1 == ++v2)
      {
        uint64_t v2 = 0;
        break;
      }
    }
    char v4 = v3 ^ 1;
  }
  else
  {
    uint64_t v2 = 0;
    char v4 = 1;
  }
  char v5 = v4 & 1;
  uint64_t result = swift_bridgeObjectRelease();
  if (v5) {
    goto LABEL_12;
  }
  uint64_t result = v0 + v2;
  if (__OFADD__(v0, v2))
  {
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t FeatureStatusSupport.Mobility.rawValue.getter()
{
  return 0;
}

uint64_t sub_1C2801840()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2801884()
{
  return sub_1C28CE740();
}

void *sub_1C28018C4()
{
  return &unk_1F1DD8C20;
}

uint64_t sub_1C28018D0()
{
  return FeatureStatusSupport.Mobility.sortHintValue.getter();
}

char *FeatureStatusSupport.DuringSleep.orderedElements.getter()
{
  uint64_t v0 = sub_1C27C2838(0, 1, 1, MEMORY[0x1E4FBC860], &qword_1EA310548);
  unint64_t v2 = *((void *)v0 + 2);
  unint64_t v1 = *((void *)v0 + 3);
  int64_t v3 = v1 >> 1;
  unint64_t v4 = v2 + 1;
  if (v1 >> 1 <= v2)
  {
    uint64_t v0 = sub_1C27C2838((char *)(v1 > 1), v2 + 1, 1, v0, &qword_1EA310548);
    unint64_t v1 = *((void *)v0 + 3);
    int64_t v3 = v1 >> 1;
  }
  *((void *)v0 + 2) = v4;
  v0[v2 + 32] = 0;
  int64_t v5 = v2 + 2;
  if (v3 < v5) {
    uint64_t v0 = sub_1C27C2838((char *)(v1 > 1), v5, 1, v0, &qword_1EA310548);
  }
  *((void *)v0 + 2) = v5;
  v0[v4 + 32] = 1;
  return v0;
}

uint64_t FeatureStatusSupport.DuringSleep.sortHintValue.getter()
{
  char v1 = *v0;
  uint64_t v2 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  FeatureStatusSupport.DuringSleep.orderedElements.getter();
  char v10 = v1;
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_1C27D9244(v3, (uint64_t (*)(uint64_t))sub_1C28025CC);
  v9[2] = &v10;
  uint64_t v5 = sub_1C27D74D0((uint64_t (*)(char *))sub_1C27D7560, (uint64_t)v9, v4);
  char v7 = v6;
  uint64_t result = swift_bridgeObjectRelease();
  if (v7) {
    goto LABEL_5;
  }
  swift_bridgeObjectRelease();
  uint64_t result = v2 + v5;
  if (__OFADD__(v2, v5))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  return result;
}

uint64_t FeatureStatusSupport.DuringSleep.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  if (result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!result) {
    char v2 = 0;
  }
  *a2 = v2;
  return result;
}

uint64_t FeatureStatusSupport.DuringSleep.rawValue.getter()
{
  return *v0;
}

void *sub_1C2801AC4@<X0>(void *result@<X0>, char *a2@<X8>)
{
  if (*result == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (*result) {
    char v3 = v2;
  }
  else {
    char v3 = 0;
  }
  *a2 = v3;
  return result;
}

char *sub_1C2801AE4()
{
  return FeatureStatusSupport.DuringSleep.orderedElements.getter();
}

void *FeatureStatusSupport.Hearing.orderedElements.getter()
{
  return &unk_1F1DD8C48;
}

uint64_t FeatureStatusSupport.Hearing.sortHintValue.getter()
{
  char v1 = *v0;
  uint64_t v2 = FeatureStatusSupport.FeatureStatusDomain.sortHintValue.getter();
  char v9 = v1;
  uint64_t v3 = sub_1C27D9244((uint64_t)&unk_1F1DD8C70, (uint64_t (*)(uint64_t))sub_1C2802604);
  v8[2] = &v9;
  uint64_t v4 = sub_1C27D74D0((uint64_t (*)(char *))sub_1C28038DC, (uint64_t)v8, v3);
  char v6 = v5;
  uint64_t result = swift_bridgeObjectRelease();
  if (v6) {
    goto LABEL_5;
  }
  uint64_t result = v2 + v4;
  if (__OFADD__(v2, v4))
  {
    __break(1u);
LABEL_5:
    __break(1u);
  }
  return result;
}

void *sub_1C2801BD0()
{
  return &unk_1F1DD8C98;
}

uint64_t sub_1C2801BE0(uint64_t result, uint64_t (*a2)(uint64_t))
{
  uint64_t v2 = result;
  unint64_t v3 = *(void *)(result + 16);
  if (v3 < 2) {
    return v2;
  }
  unint64_t v5 = 0;
  unint64_t v6 = v3 >> 1;
  for (unint64_t i = v3 - 1; ; --i)
  {
    if (v5 == i) {
      goto LABEL_4;
    }
    unint64_t v8 = *(void *)(v2 + 16);
    if (v5 >= v8) {
      break;
    }
    if (i >= v8) {
      goto LABEL_11;
    }
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = a2(v2);
      uint64_t v2 = result;
    }
LABEL_4:
    if (v6 == ++v5) {
      return v2;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C2801C88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2801D18(a1, a2, a3, a4, &qword_1EA310540, MEMORY[0x1E4F27928], MEMORY[0x1E4F27928], MEMORY[0x1E4F27928]);
}

uint64_t sub_1C2801CD0(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2801D18(a1, a2, a3, a4, &qword_1EBB757A8, MEMORY[0x1E4F67288], MEMORY[0x1E4F67288], MEMORY[0x1E4F67288]);
}

uint64_t sub_1C2801D18(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, void (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  sub_1C2803840(0, a5, a6);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_1C28CE350();
    __break(1u);
    return result;
  }
  void v19[2] = v14;
  uint64_t v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_1C28031F4(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

void *sub_1C2801FA0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C27C2938(0, &qword_1EBB77148);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2803100(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C28020BC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2803840(0, &qword_1EA310520, (void (*)(uint64_t))sub_1C280371C);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C280345C(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C28021E4(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C27C2838(a1, a2, a3, a4, &qword_1EA310510);
}

char *sub_1C28021FC(char *a1, int64_t a2, char a3, char *a4)
{
  return sub_1C27C2838(a1, a2, a3, a4, &qword_1EA310518);
}

uint64_t sub_1C2802210(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_1C2801D18(a1, a2, a3, a4, &qword_1EA3104F0, (void (*)(uint64_t))type metadata accessor for AdvertisableFeaturePostCommitWorkItem, (uint64_t (*)(void))type metadata accessor for AdvertisableFeaturePostCommitWorkItem, (uint64_t (*)(void))type metadata accessor for AdvertisableFeaturePostCommitWorkItem);
}

void *sub_1C2802258(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C2803840(0, &qword_1EA3104F8, (void (*)(uint64_t))sub_1C2803658);
      char v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v12 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_1C2803350(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_1C2802398(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_1C27C2938(0, &qword_1EBB76A28);
      char v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      char v10 = (void *)MEMORY[0x1E4FBC860];
      uint64_t v13 = (void *)(MEMORY[0x1E4FBC860] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_1C2803564(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

char *sub_1C28024B4(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBB76A30);
}

char *sub_1C28024EC(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBB76A38);
}

char *sub_1C2802524(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EA310558);
}

char *sub_1C280255C(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EA310550);
}

char *sub_1C2802594(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBB74838);
}

char *sub_1C28025CC(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EA310548);
}

char *sub_1C2802604(uint64_t a1)
{
  return sub_1C27C2838(0, *(void *)(a1 + 16), 0, (char *)a1, &qword_1EBB76A40);
}

unint64_t sub_1C2802640()
{
  unint64_t result = qword_1EA310490;
  if (!qword_1EA310490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310490);
  }
  return result;
}

uint64_t sub_1C2802694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C2802640, (uint64_t (*)(void))sub_1C28026C0);
}

unint64_t sub_1C28026C0()
{
  unint64_t result = qword_1EA310498;
  if (!qword_1EA310498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310498);
  }
  return result;
}

unint64_t sub_1C2802718()
{
  unint64_t result = qword_1EA3104A0;
  if (!qword_1EA3104A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104A0);
  }
  return result;
}

uint64_t sub_1C280276C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C2802718, (uint64_t (*)(void))sub_1C2802798);
}

unint64_t sub_1C2802798()
{
  unint64_t result = qword_1EA3104A8;
  if (!qword_1EA3104A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104A8);
  }
  return result;
}

unint64_t sub_1C28027F0()
{
  unint64_t result = qword_1EA3104B0;
  if (!qword_1EA3104B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104B0);
  }
  return result;
}

uint64_t sub_1C2802844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C28027F0, (uint64_t (*)(void))sub_1C2802870);
}

unint64_t sub_1C2802870()
{
  unint64_t result = qword_1EA3104B8;
  if (!qword_1EA3104B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104B8);
  }
  return result;
}

unint64_t sub_1C28028C8()
{
  unint64_t result = qword_1EA3104C0;
  if (!qword_1EA3104C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104C0);
  }
  return result;
}

uint64_t sub_1C280291C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C28028C8, (uint64_t (*)(void))sub_1C2802948);
}

unint64_t sub_1C2802948()
{
  unint64_t result = qword_1EA3104C8;
  if (!qword_1EA3104C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104C8);
  }
  return result;
}

unint64_t sub_1C28029A0()
{
  unint64_t result = qword_1EBB74450;
  if (!qword_1EBB74450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74450);
  }
  return result;
}

uint64_t sub_1C28029F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C28029A0, (uint64_t (*)(void))sub_1C2802A20);
}

unint64_t sub_1C2802A20()
{
  unint64_t result = qword_1EBB74458;
  if (!qword_1EBB74458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74458);
  }
  return result;
}

unint64_t sub_1C2802A78()
{
  unint64_t result = qword_1EA3104D0;
  if (!qword_1EA3104D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104D0);
  }
  return result;
}

uint64_t sub_1C2802ACC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C2802A78, (uint64_t (*)(void))sub_1C2802AF8);
}

unint64_t sub_1C2802AF8()
{
  unint64_t result = qword_1EA3104D8;
  if (!qword_1EA3104D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104D8);
  }
  return result;
}

unint64_t sub_1C2802B50()
{
  unint64_t result = qword_1EA3104E0;
  if (!qword_1EA3104E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104E0);
  }
  return result;
}

uint64_t sub_1C2802BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C2802BD0(a1, a2, a3, (uint64_t (*)(void))sub_1C2802B50, (uint64_t (*)(void))sub_1C2802C0C);
}

uint64_t sub_1C2802BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C2802C0C()
{
  unint64_t result = qword_1EA3104E8;
  if (!qword_1EA3104E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3104E8);
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.FeatureStatusDomain()
{
  return &type metadata for FeatureStatusSupport.FeatureStatusDomain;
}

unsigned char *_s6SafetyOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2802D44);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeature.Identifier(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s19FeatureStatusDomainOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2802EC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Heart()
{
  return &type metadata for FeatureStatusSupport.Heart;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Respiratory()
{
  return &type metadata for FeatureStatusSupport.Respiratory;
}

unsigned char *_s11RespiratoryOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2802FB0);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Mobility()
{
  return &type metadata for FeatureStatusSupport.Mobility;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.DuringSleep()
{
  return &type metadata for FeatureStatusSupport.DuringSleep;
}

unsigned char *_s11DuringSleepOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C28030C8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusSupport.Hearing()
{
  return &type metadata for FeatureStatusSupport.Hearing;
}

uint64_t sub_1C2803100(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C28031F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C2803350(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_1C2803658();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C280345C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      sub_1C280371C();
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C2803564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

void sub_1C2803658()
{
  if (!qword_1EA310500)
  {
    sub_1C28036C8();
    type metadata accessor for AdvertisableFeatureModel();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310500);
    }
  }
}

unint64_t sub_1C28036C8()
{
  unint64_t result = qword_1EA310508;
  if (!qword_1EA310508)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310508);
  }
  return result;
}

void sub_1C280371C()
{
  if (!qword_1EA310528)
  {
    sub_1C2803784();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310528);
    }
  }
}

void sub_1C2803784()
{
  if (!qword_1EA310530)
  {
    sub_1C28037EC();
    unint64_t v0 = sub_1C28CE7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310530);
    }
  }
}

unint64_t sub_1C28037EC()
{
  unint64_t result = qword_1EA310538;
  if (!qword_1EA310538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310538);
  }
  return result;
}

void sub_1C2803840(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CE620();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_1C28038BC(unsigned __int8 *a1)
{
  return sub_1C27D757C(a1);
}

BOOL sub_1C28038DC(unsigned __int8 *a1)
{
  return sub_1C27D7560(a1);
}

void sub_1C2803928()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR____TtC16HealthExperience23MedicalIDFetchOperation_medicalIDStore);
}

id sub_1C2803978()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalIDFetchOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2803A08()
{
  return swift_deallocObject();
}

uint64_t sub_1C2803A40(uint64_t a1)
{
  *(void *)(v1 + qword_1EBB76B20) = a1;
  return swift_release();
}

id PublisherOperation.__allocating_init(publisherProvider:)(uint64_t a1, uint64_t a2)
{
  id v5 = objc_allocWithZone(v2);
  return PublisherOperation.init(publisherProvider:)(a1, a2);
}

id PublisherOperation.init(publisherProvider:)(uint64_t a1, uint64_t a2)
{
  *(void *)&v2[qword_1EBB76B20] = 0;
  int v3 = &v2[qword_1EBB76B28];
  *(void *)int v3 = a1;
  *((void *)v3 + 1) = a2;
  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for PublisherOperation();
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for PublisherOperation()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2803B44()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = *MEMORY[0x1E4FBC8C8] & *v0;
  sub_1C280407C();
  MEMORY[0x1F4188790](v3 - 8);
  objc_super v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v6 = *(void **)(v2 + 192);
  unint64_t v7 = sub_1C27D8F64();
  uint64_t v43 = v1;
  uint64_t v8 = *(void *)(v2 + 200);
  uint64_t v9 = sub_1C2804BA0(&qword_1EBB76DB0, (void (*)(uint64_t))sub_1C27D8F64);
  uint64_t v44 = (uint64_t)v6;
  unint64_t v45 = v7;
  uint64_t v36 = (char *)v7;
  uint64_t v39 = v8;
  uint64_t v46 = v8;
  uint64_t v47 = v9;
  uint64_t v10 = sub_1C28CCFE0();
  uint64_t v40 = *(void *)(v10 - 8);
  uint64_t v41 = v10;
  uint64_t v11 = MEMORY[0x1F4188790](v10);
  unint64_t v13 = (char *)&v36 - v12;
  uint64_t v14 = *(v6 - 1);
  uint64_t v15 = *(void *)(v14 + 64);
  uint64_t v16 = MEMORY[0x1F4188790](v11);
  int v37 = (char *)&v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v16);
  unint64_t v18 = (char *)&v36 - v17;
  id v19 = objc_msgSend(self, sel_currentQueue);
  if (v19)
  {
    size_t v20 = v19;
    (*(void (**)(void))((char *)v43 + qword_1EBB76B28))();
    id v38 = v20;
    uint64_t v44 = (uint64_t)v20;
    uint64_t v21 = sub_1C28CDE10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v5, 1, 1, v21);
    uint64_t v22 = v39;
    sub_1C28CD3D0();
    sub_1C28040D4((uint64_t)v5);
    uint64_t v23 = swift_allocObject();
    swift_unknownObjectWeakInit();
    unint64_t v24 = v37;
    (*(void (**)(char *, char *, void *))(v14 + 16))(v37, v18, v6);
    unint64_t v25 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
    unint64_t v26 = (v15 + v25 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = v18;
    uint64_t v27 = v13;
    uint64_t v28 = swift_allocObject();
    *(void *)(v28 + 16) = v6;
    *(void *)(v28 + 24) = v22;
    (*(void (**)(unint64_t, char *, void *))(v14 + 32))(v28 + v25, v24, v6);
    *(void *)(v28 + v26) = v23;
    *(void *)(v28 + ((v26 + 15) & 0xFFFFFFFFFFFFFFF8)) = ObjectType;
    uint64_t v29 = swift_allocObject();
    *(void *)(v29 + 16) = v6;
    *(void *)(v29 + 24) = v22;
    swift_retain();
    uint64_t v30 = v41;
    swift_getWitnessTable();
    uint64_t v31 = sub_1C28CD340();
    swift_release();
    swift_release();
    (*(void (**)(char *, uint64_t))(v40 + 8))(v27, v30);
    swift_release();
    *(void *)((char *)v43 + qword_1EBB76B20) = v31;

    swift_release();
    return (*(uint64_t (**)(char *, void *))(v14 + 8))(v36, v6);
  }
  else
  {
    uint64_t v44 = 0;
    unint64_t v45 = 0xE000000000000000;
    sub_1C28CE120();
    uint64_t v33 = sub_1C28CE830();
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    uint64_t v44 = v33;
    unint64_t v45 = v35;
    sub_1C28CD7C0();
    uint64_t result = sub_1C28CE360();
    __break(1u);
  }
  return result;
}

void sub_1C280407C()
{
  if (!qword_1EBB76DA8)
  {
    sub_1C28CDE10();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76DA8);
    }
  }
}

uint64_t sub_1C28040D4(uint64_t a1)
{
  sub_1C280407C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2804130()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C2804168(uint64_t a1, char *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v45 = a4;
  uint64_t v47 = a2;
  uint64_t v51 = a1;
  uint64_t v7 = *(void *)(a5 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v46 = (char *)v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v39 - v10;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1C28CD030();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)v39 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  unint64_t v18 = (char *)v39 - v17;
  uint64_t v19 = sub_1C28CCE10();
  uint64_t v48 = *(void *)(v19 - 8);
  uint64_t v49 = v19;
  MEMORY[0x1F4188790](v19);
  uint64_t v21 = (char *)v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = a3 + 16;
  sub_1C28CCD80();
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v43(v18, v51, v12);
  int v50 = v11;
  uint64_t v51 = v7;
  uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v44(v11, v47, a5);
  uint64_t v47 = v21;
  uint64_t v23 = sub_1C28CCE00();
  os_log_type_t v24 = sub_1C28CDCD0();
  int v25 = v24;
  if (os_log_type_enabled(v23, v24))
  {
    uint64_t v26 = swift_slowAlloc();
    int v41 = v25;
    uint64_t v27 = v26;
    uint64_t v42 = swift_slowAlloc();
    uint64_t v52 = v42;
    *(_DWORD *)uint64_t v27 = 136446722;
    v39[1] = v27 + 4;
    uint64_t v53 = v45;
    swift_getMetatypeMetadata();
    os_log_t v40 = v23;
    uint64_t v28 = sub_1C28CD750();
    uint64_t v45 = v22;
    uint64_t v53 = sub_1C27D36AC(v28, v29, &v52);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v43(v16, (uint64_t)v18, v12);
    uint64_t v30 = sub_1C28CD750();
    uint64_t v53 = sub_1C27D36AC(v30, v31, &v52);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    *(_WORD *)(v27 + 22) = 2082;
    uint64_t v32 = v50;
    v44(v46, v50, a5);
    uint64_t v33 = sub_1C28CD750();
    uint64_t v53 = sub_1C27D36AC(v33, v34, &v52);
    sub_1C28CDF90();
    uint64_t v22 = v45;
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v51 + 8))(v32, a5);
    os_log_t v35 = v40;
    _os_log_impl(&dword_1C27B7000, v40, (os_log_type_t)v41, "[%{public}s]: completed %{public}s for publisher %{public}s", (uint8_t *)v27, 0x20u);
    uint64_t v36 = v42;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v36, -1, -1);
    MEMORY[0x1C87609B0](v27, -1, -1);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    (*(void (**)(char *, uint64_t))(v51 + 8))(v50, a5);
  }
  (*(void (**)(char *, uint64_t))(v48 + 8))(v47, v49);
  swift_beginAccess();
  uint64_t result = MEMORY[0x1C8760AB0](v22);
  if (result)
  {
    id v38 = (void *)result;
    uint64_t v52 = *(void *)(result + OBJC_IVAR____TtC16HealthExperience21AsynchronousOperation_workLock);
    v39[-2] = MEMORY[0x1F4188790](result);
    sub_1C28CC650();
    sub_1C2804BA0(qword_1EBB75F38, MEMORY[0x1E4F66F68]);
    swift_retain();
    sub_1C28CCBF0();

    return swift_release();
  }
  return result;
}

uint64_t sub_1C2804754()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 16) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 16) - 8) + 80)));
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C28047F8(uint64_t a1)
{
  unint64_t v2 = (*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80);
  unint64_t v3 = (*(void *)(*(void *)(*(void *)(v1 + 16) - 8) + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C2804168(a1, (char *)(v1 + v2), *(void *)(v1 + v3), *(void *)(v1 + ((v3 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v1 + 16));
}

uint64_t sub_1C280486C()
{
  return swift_deallocObject();
}

void sub_1C280487C(void *a1)
{
  id v1 = a1;
  sub_1C2803B44();
}

uint64_t sub_1C28048C4()
{
  uint64_t v1 = qword_1EBB76B20;
  if (*(void *)(v0 + qword_1EBB76B20))
  {
    swift_retain();
    sub_1C28CD0E0();
    swift_release();
    uint64_t v1 = qword_1EBB76B20;
  }
  *(void *)(v0 + v1) = 0;

  return swift_release();
}

id PublisherOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void PublisherOperation.init()()
{
}

void sub_1C28049A8()
{
}

uint64_t sub_1C28049EC()
{
  swift_release();

  return swift_release();
}

id PublisherOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for PublisherOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1C2804AA4()
{
  swift_release();

  return swift_release();
}

void sub_1C2804AF4()
{
}

uint64_t sub_1C2804B24()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PublisherOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for PublisherOperation);
}

uint64_t dispatch thunk of PublisherOperation.__allocating_init(publisherProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 248))();
}

uint64_t sub_1C2804BA0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2804BE8()
{
  uint64_t result = sub_1C28CD6F0();
  qword_1EBB76FB8 = result;
  return result;
}

id static NSNotificationName.primaryProfileNameWasUpdated.getter()
{
  return sub_1C27D7A7C(qword_1EBB76F70, (void **)&qword_1EBB76FB8);
}

uint64_t sub_1C2804C44()
{
  uint64_t result = sub_1C28CD6F0();
  qword_1EBB747E0 = result;
  return result;
}

id static NSNotificationName.summarySharingOnboardingTileWasDismissed.getter()
{
  return sub_1C27D7A7C(&qword_1EBB747E8, (void **)&qword_1EBB747E0);
}

uint64_t sub_1C2804CA0()
{
  uint64_t result = sub_1C28CD6F0();
  qword_1EBB74290 = result;
  return result;
}

uint64_t sub_1C2804CD8()
{
  uint64_t result = sub_1C28CD6F0();
  qword_1EBB756C0 = result;
  return result;
}

uint64_t static UIApplication.languageForHealthApp.getter()
{
  id v0 = objc_msgSend(self, sel_preferredLanguages);
  uint64_t v1 = sub_1C28CD920();

  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

double static UIApplication.screenScaleForHealthApp.getter()
{
  return 3.0;
}

BOOL _sSo13UIApplicationC16HealthExperienceE031userInterfaceLayoutDirectionForB3AppSo06UIUserefG0VvgZ_0()
{
  id v0 = objc_msgSend(self, sel_preferredLanguages);
  uint64_t v1 = sub_1C28CD920();

  if (*(void *)(v1 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v2 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = 0;
  }
  id v3 = objc_msgSend(self, sel_defaultWritingDirectionForLanguage_, v2);

  return v3 == (id)1;
}

id CSSearchableItemAttributeSet.objectTypeCode.getter()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_attributeForKey_, v1);

  if (v2)
  {
    sub_1C28CE000();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v6, 0, sizeof(v6));
  }
  sub_1C2804FA0((uint64_t)v6, (uint64_t)v7);
  if (!v8)
  {
    sub_1C27B9E38((uint64_t)v7);
    return 0;
  }
  sub_1C2805004();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = objc_msgSend(v5, sel_integerValue);

  return v3;
}

uint64_t sub_1C2804FA0(uint64_t a1, uint64_t a2)
{
  sub_1C27B9F20();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C2805004()
{
  unint64_t result = qword_1EBB76F60;
  if (!qword_1EBB76F60)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB76F60);
  }
  return result;
}

void CSSearchableItemAttributeSet.objectTypeCode.setter(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, a1);
    swift_beginAccess();
    id v4 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
    swift_bridgeObjectRetain();
    id v5 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_initWithKeyName_, v5);

    if (v6)
    {
      objc_msgSend(v2, sel_setValue_forCustomKey_, v3, v6);
    }
    else
    {
      sub_1C28CE360();
      __break(1u);
    }
  }
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKey.getter()
{
  swift_beginAccess();
  id v0 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_initWithKeyName_, v1);

  if (v2) {
    return (uint64_t)v2;
  }
  uint64_t result = sub_1C28CE360();
  __break(1u);
  return result;
}

void (*CSSearchableItemAttributeSet.objectTypeCode.modify(void *a1))(uint64_t *a1, char a2)
{
  id v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[8] = v1;
  v3[6] = CSSearchableItemAttributeSet.objectTypeCode.getter();
  *((unsigned char *)v3 + 56) = v4 & 1;
  return sub_1C28052D0;
}

void sub_1C28052D0(uint64_t *a1, char a2)
{
  uint64_t v2 = *a1;
  if ((a2 & 1) == 0)
  {
    if (*(unsigned char *)(*a1 + 56)) {
      goto LABEL_6;
    }
    id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v2 + 48));
    swift_beginAccess();
    id v7 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
    swift_bridgeObjectRetain();
    uint64_t v8 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v7, sel_initWithKeyName_, v8);

    if (v6) {
      goto LABEL_4;
    }
    goto LABEL_10;
  }
  if ((*(unsigned char *)(*a1 + 56) & 1) == 0)
  {
    id v3 = objc_msgSend(objc_allocWithZone(NSNumber), sel_initWithInteger_, *(void *)(v2 + 48));
    swift_beginAccess();
    id v4 = objc_allocWithZone(MEMORY[0x1E4F237C0]);
    swift_bridgeObjectRetain();
    id v5 = (void *)sub_1C28CD6F0();
    swift_bridgeObjectRelease();
    id v6 = objc_msgSend(v4, sel_initWithKeyName_, v5);

    if (v6)
    {
LABEL_4:
      objc_msgSend(*(id *)(v2 + 64), sel_setValue_forCustomKey_, v3, v6);

      goto LABEL_6;
    }
LABEL_10:
    sub_1C28CE360();
    __break(1u);
    return;
  }
LABEL_6:

  free((void *)v2);
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_1EA310578;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.setter(uint64_t a1, char *a2)
{
  qword_1EA310578 = a1;
  off_1EA310580 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static CSCustomAttributeKey.objectTypeCodeAttributeKeyName.modify())()
{
  return j__swift_endAccess;
}

id sub_1C28055D4@<X0>(uint64_t a1@<X8>)
{
  id result = CSSearchableItemAttributeSet.objectTypeCode.getter();
  *(void *)a1 = result;
  *(unsigned char *)(a1 + 8) = v3 & 1;
  return result;
}

void sub_1C2805608(uint64_t a1)
{
}

uint64_t executeIfViewLoggingEnabled(_:)(uint64_t (*a1)(void))
{
  uint64_t result = HAFeatureFlagViewLoggingEnabled();
  if (result) {
    return a1();
  }
  return result;
}

unint64_t MedicalIDDataResult.hasSimilarCase(as:)(unint64_t result, uint64_t a2)
{
  if (!a2) {
    return !result;
  }
  if (a2 != 1)
  {
    if (a2 == 2)
    {
      if (result == 2) {
        return 1;
      }
    }
    else if (result >= 3)
    {
      return 1;
    }
    return 0;
  }
  if (result != 1) {
    return 0;
  }
  return result;
}

id sub_1C28056BC(id result)
{
  if ((unint64_t)result >= 3) {
    return result;
  }
  return result;
}

void sub_1C28056CC(id a1)
{
  if ((unint64_t)a1 >= 3) {
}
  }

BOOL sub_1C28056DC(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  char v3 = *a2;
  if (!*a1) {
    return !v3;
  }
  if (v2 == (void *)1) {
    return v3 == (void *)1;
  }
  if (v2 == (void *)2) {
    return v3 == (void *)2;
  }
  if ((unint64_t)v3 < 3) {
    return 0;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77130);
  sub_1C28056BC(v2);
  sub_1C28056BC(v3);
  char v5 = sub_1C28CDF30();
  sub_1C28056CC(v3);
  sub_1C28056CC(v2);
  return v5 & 1;
}

uint64_t sub_1C28057A0@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28CD2C0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C2805820(void **a1, void **a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28056BC(v2);
  id v4 = v3;
  return sub_1C28CD2D0();
}

uint64_t sub_1C2805898()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28CD2C0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1C280590C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  id v1 = v0;
  return sub_1C28CD2D0();
}

void (*sub_1C2805978(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C28CD2B0();
  return sub_1C2805A04;
}

void sub_1C2805A04(void *a1)
{
  id v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();

  free(v1);
}

uint64_t sub_1C2805A6C()
{
  return swift_endAccess();
}

uint64_t sub_1C2805AEC(uint64_t a1)
{
  sub_1C27BDC7C(0, &qword_1EA310588, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C27BDC7C(0, &qword_1EBB770E0, MEMORY[0x1E4F1AC70]);
  sub_1C28CD2A0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1C2805C90(uint64_t a1)
{
  sub_1C27BDC7C(0, &qword_1EA310588, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, a1, v3);
  swift_beginAccess();
  sub_1C27BDC7C(0, &qword_1EBB770E0, MEMORY[0x1E4F1AC70]);
  sub_1C28CD2A0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void (*sub_1C2805DE8(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C27BDC7C(0, &qword_1EA310588, MEMORY[0x1E4F1AC60]);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16HealthExperience14MedicalIDCache__medicalIDDataResult;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1C27BDC7C(0, &qword_1EBB770E0, MEMORY[0x1E4F1AC70]);
  v3[16] = v9;
  sub_1C28CD290();
  swift_endAccess();
  return sub_1C2805F28;
}

void sub_1C2805F28(uint64_t a1, char a2)
{
  uint64_t v3 = *(void **)a1;
  uint64_t v4 = *(void (**)(void, void, void))(*(void *)(*(void *)a1 + 88) + 16);
  v4(*(void *)(*(void *)a1 + 104), v3[14], v3[10]);
  uint64_t v5 = (void *)v3[14];
  size_t v6 = (void *)v3[12];
  uint64_t v7 = (void *)v3[13];
  uint64_t v8 = v3[10];
  uint64_t v9 = v3[11];
  if (a2)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1C28CD2A0();
    swift_endAccess();
    uint64_t v10 = *(void (**)(void *, uint64_t))(v9 + 8);
    v10(v7, v8);
    v10(v5, v8);
  }
  else
  {
    swift_beginAccess();
    sub_1C28CD2A0();
    swift_endAccess();
    (*(void (**)(void *, uint64_t))(v9 + 8))(v5, v8);
  }
  free(v5);
  free(v7);
  free(v6);

  free(v3);
}

void *sub_1C2806098()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28CD2C0();
  swift_release();
  swift_release();
  uint64_t result = v1;
  if ((unint64_t)v1 <= 2)
  {
    sub_1C28056CC(v1);
    return 0;
  }
  return result;
}

id MedicalIDCache.medicalIDStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDStore);
}

void sub_1C280612C(void **a1, void *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = (void **)(*a2 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = v2;
  id v5 = v2;
}

id sub_1C2806190()
{
  uint64_t v1 = (void **)(v0 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  uint64_t v2 = *v1;

  return v2;
}

void sub_1C28061E8(void *a1)
{
  uint64_t v3 = (void **)(v1 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  uint64_t v4 = *v3;
  *uint64_t v3 = a1;
}

uint64_t (*sub_1C280623C())()
{
  return j__swift_endAccess;
}

uint64_t MedicalIDCache.__allocating_init(healthStore:)(void *a1)
{
  uint64_t v3 = (*(uint64_t (**)(id))(v1 + 224))(objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F2B190]), sel_initWithHealthStore_, a1));

  return v3;
}

char *MedicalIDCache.__allocating_init(medicalIDStore:)(void *a1)
{
  id v3 = objc_allocWithZone(v1);
  return MedicalIDCache.init(medicalIDStore:)(a1);
}

unint64_t sub_1C2806328(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C28080E8();
  uint64_t v2 = sub_1C28CE3F0();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2807FF8(v6, (uint64_t)&v13, (uint64_t (*)(void))sub_1C2808188);
    uint64_t v7 = v13;
    unint64_t result = sub_1C2872358(v13);
    if (v9) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v7;
    unint64_t result = (unint64_t)sub_1C2807E74(&v14, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v3[2] = v12;
    v6 += 40;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2806454(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2808060(0, &qword_1EBB742F0);
  uint64_t v2 = sub_1C28CE3F0();
  id v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2807DA8(v6, (uint64_t)v15, &qword_1EBB742E0);
    unint64_t result = sub_1C287240C((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_1C2807E74(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C28065C4(uint64_t a1)
{
  sub_1C2807E84();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2807F04();
  uint64_t v7 = sub_1C28CE3F0();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  long long v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2807FF8(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C2807E84);
    uint64_t v15 = *v6;
    unint64_t result = sub_1C2872308(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = sub_1C28CBFB0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v10, v20);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C28067C0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2808060(0, (unint64_t *)&qword_1EBB742E8);
  uint64_t v2 = sub_1C28CE3F0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_1C2807DA8(v6, (uint64_t)&v15, (unint64_t *)&qword_1EBB74070);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_1C27D3320(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_1C2807E74(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C280692C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2807C18();
  uint64_t v2 = (void *)sub_1C28CE3F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 33);
  while (1)
  {
    unsigned __int8 v5 = *(v4 - 1);
    char v6 = *v4;
    unint64_t result = sub_1C2872528(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(unsigned char *)(v2[7] + result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2806A24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C28078A4();
  uint64_t v2 = (void *)sub_1C28CE3F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    swift_retain();
    unint64_t result = sub_1C2872528(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v2[2] = v11;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2806B24(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2807BA0();
  uint64_t v2 = (void *)sub_1C28CE3F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v5 = (uint64_t)*(v4 - 2);
    uint64_t v6 = (uint64_t)*(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    id v8 = v7;
    unint64_t result = sub_1C27D3320(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v11 = v5;
    v11[1] = v6;
    *(void *)(v2[7] + 8 * result) = v8;
    uint64_t v12 = v2[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v2[2] = v14;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2806C3C(uint64_t a1)
{
  sub_1C2807A3C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    id v8 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2807AAC();
  uint64_t v7 = sub_1C28CE3F0();
  id v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  char v10 = &v6[*(int *)(v3 + 48)];
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v25[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_1C2807FF8(v13, (uint64_t)v6, (uint64_t (*)(void))sub_1C2807A3C);
    unint64_t result = sub_1C27C75A0((uint64_t)v6);
    if (v16) {
      break;
    }
    unint64_t v17 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v18 = v8[6];
    uint64_t v19 = sub_1C28CC4B0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v18 + *(void *)(*(void *)(v19 - 8) + 72) * v17, v6, v19);
    uint64_t v20 = v8[7];
    uint64_t v21 = sub_1C28CC450();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v17, v10, v21);
    uint64_t v22 = v8[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v8[2] = v24;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1C2806E70(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x1E4FBC868];
    goto LABEL_9;
  }
  sub_1C2807964();
  uint64_t v2 = (void *)sub_1C28CE3F0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2872494((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_1C2806F78()
{
  uint64_t v0 = sub_1C28CCE10();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD70();
  uint64_t v4 = sub_1C28CCE00();
  os_log_type_t v5 = sub_1C28CDCD0();
  if (os_log_type_enabled(v4, v5))
  {
    id v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v6 = 0;
    _os_log_impl(&dword_1C27B7000, v4, v5, "refreshMedicalID()", v6, 2u);
    MEMORY[0x1C87609B0](v6, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_1C28CCB20();
  return sub_1C27C9054();
}

void sub_1C28070E8(void **a1)
{
  uint64_t v2 = *a1;
  if (*a1)
  {
    sub_1C28CCB10();
    if (v4 && v4 != 1)
    {

      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      if ((v3 & 1) == 0) {
        objc_msgSend(v2, sel_cancel);
      }
    }
  }
  *a1 = 0;
}

id MedicalIDCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void MedicalIDCache.init()()
{
}

id MedicalIDCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for MedicalIDCache();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

Swift::Void __swiftcall MedicalIDCache.medicalIDDidChange()()
{
  (*(void (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

void sub_1C280742C()
{
  if (!qword_1EBB742F8)
  {
    sub_1C2807E14(255, &qword_1EBB742E0);
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB742F8);
    }
  }
}

id sub_1C280749C@<X0>(void *a1@<X0>, void **a2@<X8>)
{
  char v3 = (void **)(*a1 + OBJC_IVAR____TtC16HealthExperience14MedicalIDCache_medicalIDFetchQueue);
  swift_beginAccess();
  char v4 = *v3;
  *a2 = *v3;

  return v4;
}

void **assignWithCopy for MedicalIDDataResult(void **a1, void **a2)
{
  char v3 = *a1;
  char v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF)
  {
    if ((unint64_t)v4 >= 0xFFFFFFFF)
    {
      *a1 = v4;
      id v6 = v4;
      return a1;
    }
LABEL_7:
    *a1 = v4;
    return a1;
  }
  if ((unint64_t)v4 < 0xFFFFFFFF)
  {

    char v4 = *a2;
    goto LABEL_7;
  }
  *a1 = v4;
  id v5 = v4;

  return a1;
}

void **assignWithTake for MedicalIDDataResult(void **a1, unint64_t *a2)
{
  char v3 = *a1;
  unint64_t v4 = *a2;
  if ((unint64_t)*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v4 < 0xFFFFFFFF)
  {

LABEL_6:
    *a1 = (void *)v4;
    return a1;
  }
  *a1 = (void *)v4;

  return a1;
}

uint64_t sub_1C28075EC(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_1C2807604(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

uint64_t sub_1C2807624()
{
  return type metadata accessor for MedicalIDCache();
}

uint64_t method lookup function for MedicalIDCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for MedicalIDCache);
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x78))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x80))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDDataResult.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of MedicalIDCache.$medicalIDDataResult.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of MedicalIDCache.currentMedicalIDData.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDFetchQueue.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of MedicalIDCache.__allocating_init(medicalIDStore:)()
{
  return (*(uint64_t (**)(void))(v0 + 224))();
}

uint64_t dispatch thunk of MedicalIDCache.medicalIDHasUpdated(fetchedData:fetchError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of MedicalIDCache.refreshMedicalID()()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x108))();
}

void sub_1C28078A4()
{
  if (!qword_1EA3105F0)
  {
    type metadata accessor for AdvertisableFeatureModel();
    sub_1C2807910();
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3105F0);
    }
  }
}

unint64_t sub_1C2807910()
{
  unint64_t result = qword_1EA3105F8;
  if (!qword_1EA3105F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3105F8);
  }
  return result;
}

void sub_1C2807964()
{
  if (!qword_1EBB75720)
  {
    type metadata accessor for HKCharacteristicTypeIdentifier(255);
    sub_1C27D9154(255, (unint64_t *)&qword_1EBB76D58, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, MEMORY[0x1E4FBB320]);
    sub_1C2807B58(&qword_1EBB756D8, type metadata accessor for HKCharacteristicTypeIdentifier);
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75720);
    }
  }
}

void sub_1C2807A3C()
{
  if (!qword_1EA310600)
  {
    sub_1C28CC4B0();
    sub_1C28CC450();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310600);
    }
  }
}

void sub_1C2807AAC()
{
  if (!qword_1EA310608)
  {
    sub_1C28CC4B0();
    sub_1C28CC450();
    sub_1C2807B58(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310608);
    }
  }
}

uint64_t sub_1C2807B58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2807BA0()
{
  if (!qword_1EBB749E8)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76F60);
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB749E8);
    }
  }
}

void sub_1C2807C18()
{
  if (!qword_1EA310618)
  {
    sub_1C2807910();
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310618);
    }
  }
}

unint64_t sub_1C2807C7C(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return MEMORY[0x1E4FBC868];
  }
  sub_1C2808060(0, &qword_1EBB74CA0);
  char v3 = (void *)sub_1C28CE3F0();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_1C2872450(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1C2872450(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2807DA8(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_1C2807E14(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C2807E14(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

_OWORD *sub_1C2807E74(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_1C2807E84()
{
  if (!qword_1EA310628)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    sub_1C28CBFB0();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310628);
    }
  }
}

void sub_1C2807F04()
{
  if (!qword_1EA310630)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    sub_1C28CBFB0();
    sub_1C2807F90();
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310630);
    }
  }
}

unint64_t sub_1C2807F90()
{
  unint64_t result = qword_1EBB76B00;
  if (!qword_1EBB76B00)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76B00);
  }
  return result;
}

uint64_t sub_1C2807FF8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C2808060(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1C28CE400();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_1C28080B0()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_1C28080E8()
{
  if (!qword_1EA310638)
  {
    type metadata accessor for CFString(255);
    sub_1C2807B58(&qword_1EA30FF70, type metadata accessor for CFString);
    unint64_t v0 = sub_1C28CE400();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310638);
    }
  }
}

void sub_1C2808188()
{
  if (!qword_1EA310648)
  {
    type metadata accessor for CFString(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA310648);
    }
  }
}

UIImage __swiftcall UIImage.withCircularCrop(adjustedSize:)(CGSize_optional adjustedSize)
{
  if (v2)
  {
    objc_msgSend(v3, sel_size, adjustedSize.value.width, adjustedSize.value.height);
    double v4 = v6;
    double v5 = v7;
  }
  else
  {
    double v4 = *(double *)&adjustedSize.is_nil;
    double v5 = v1;
  }
  id v8 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4FB17D8]), sel_initWithSize_, v4, v5);
  v21.origin.x = 0.0;
  v21.origin.y = 0.0;
  v21.size.width = v4;
  v21.size.height = v5;
  double MidX = CGRectGetMidX(v21);
  v22.origin.x = 0.0;
  v22.origin.y = 0.0;
  v22.size.width = v4;
  v22.size.height = v5;
  double MidY = CGRectGetMidY(v22);
  v23.origin.x = 0.0;
  v23.origin.y = 0.0;
  v23.size.width = v4;
  v23.size.height = v5;
  double v11 = CGRectGetMidX(v23);
  id v12 = objc_msgSend(self, sel_bezierPathWithArcCenter_radius_startAngle_endAngle_clockwise_, 1, MidX, MidY, v11, 0.0, 6.28318531);
  uint64_t v13 = (double *)swift_allocObject();
  *((void *)v13 + 2) = v12;
  *((void *)v13 + 3) = v3;
  void v13[4] = 0.0;
  v13[5] = 0.0;
  v13[6] = v4;
  v13[7] = v5;
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_1C28084A0;
  *(void *)(v14 + 24) = v13;
  v20[4] = sub_1C2808548;
  v20[5] = v14;
  v20[0] = MEMORY[0x1E4F143A8];
  v20[1] = 1107296256;
  void v20[2] = sub_1C2808570;
  v20[3] = &block_descriptor_2;
  uint64_t v15 = _Block_copy(v20);
  id v16 = v12;
  id v17 = v3;
  swift_retain();
  swift_release();
  id v18 = objc_msgSend(v8, sel_imageWithActions_, v15);

  _Block_release(v15);
  LOBYTE(v8) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  result.super.Class isa = (Class)swift_release();
  if ((v8 & 1) == 0) {
    return (UIImage)v18;
  }
  __break(1u);
  return result;
}

uint64_t sub_1C2808460()
{
  return swift_deallocObject();
}

id sub_1C28084A0()
{
  double v1 = *(void **)(v0 + 24);
  double v2 = *(double *)(v0 + 32);
  double v3 = *(double *)(v0 + 40);
  double v4 = *(double *)(v0 + 48);
  double v5 = *(double *)(v0 + 56);
  objc_msgSend(*(id *)(v0 + 16), sel_addClip);

  return objc_msgSend(v1, sel_drawInRect_, v2, v3, v4, v5);
}

uint64_t sub_1C2808510(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t sub_1C2808538()
{
  return swift_deallocObject();
}

uint64_t sub_1C2808548()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

void sub_1C2808570(uint64_t a1, void *a2)
{
  double v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

id CodableImage.wrappedValue.getter()
{
  id v1 = *v0;
  id v2 = *v0;
  return v1;
}

void CodableImage.wrappedValue.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*CodableImage.wrappedValue.modify())()
{
  return nullsub_1;
}

uint64_t CodableImage.init(image:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t sub_1C2808638()
{
  return 0x7461446567616D69;
}

uint64_t sub_1C2808654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C28CE640();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

void sub_1C28086F8(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_1C2808704(uint64_t a1)
{
  unint64_t v2 = sub_1C2808928();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2808740(uint64_t a1)
{
  unint64_t v2 = sub_1C2808928();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CodableImage.encode(to:)(void *a1)
{
  sub_1C2808C74(0, &qword_1EBB76918, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  char v7 = (char *)v14 - v6;
  id v8 = *v1;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2808928();
  sub_1C28CE800();
  if (!v8) {
    goto LABEL_5;
  }
  uint64_t v9 = UIImagePNGRepresentation(v8);
  if (!v9)
  {
    id v8 = 0;
LABEL_5:
    unint64_t v12 = 0xF000000000000000;
    goto LABEL_6;
  }
  uint64_t v10 = v9;
  id v8 = (UIImage *)sub_1C28CC390();
  unint64_t v12 = v11;

LABEL_6:
  v14[0] = v8;
  v14[1] = v12;
  sub_1C280897C();
  sub_1C28089D4();
  sub_1C28CE5E0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return sub_1C2808A44((uint64_t)v8, v12);
}

unint64_t sub_1C2808928()
{
  unint64_t result = qword_1EBB76FE8;
  if (!qword_1EBB76FE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FE8);
  }
  return result;
}

void sub_1C280897C()
{
  if (!qword_1EBB768E0)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB768E0);
    }
  }
}

unint64_t sub_1C28089D4()
{
  unint64_t result = qword_1EBB768E8;
  if (!qword_1EBB768E8)
  {
    sub_1C280897C();
    sub_1C27E29A4();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB768E8);
  }
  return result;
}

uint64_t sub_1C2808A44(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_1C27E2870(a1, a2);
  }
  return a1;
}

uint64_t CodableImage.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_1C2808C74(0, &qword_1EBB77050, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2808928();
  sub_1C28CE7F0();
  if (!v2)
  {
    sub_1C27E2AA8();
    sub_1C28CE4D0();
    unint64_t v10 = v16;
    if (v16 >> 60 == 15)
    {
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = 0;
    }
    else
    {
      uint64_t v17 = v15;
      id v11 = objc_allocWithZone(MEMORY[0x1E4FB1818]);
      unint64_t v12 = (void *)sub_1C28CC380();
      id v13 = objc_msgSend(v11, sel_initWithData_, v12);
      sub_1C2808A44(v17, v10);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      *a2 = v13;
    }
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1C2808C74(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2808928();
    unint64_t v7 = a3(a1, &type metadata for CodableImage.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2808CD8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CodableImage.init(from:)(a1, a2);
}

uint64_t sub_1C2808CF0(void *a1)
{
  return CodableImage.encode(to:)(a1);
}

void **initializeBufferWithCopyOfBuffer for CodableImage(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for CodableImage(id *a1)
{
}

void **assignWithCopy for CodableImage(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  id v4 = *a2;
  *a1 = *a2;
  id v5 = v4;

  return a1;
}

void **assignWithTake for CodableImage(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for CodableImage(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CodableImage(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableImage()
{
  return &type metadata for CodableImage;
}

unsigned char *storeEnumTagSinglePayload for CodableImage.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2808F04);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CodableImage.CodingKeys()
{
  return &type metadata for CodableImage.CodingKeys;
}

unint64_t sub_1C2808F40()
{
  unint64_t result = qword_1EA310650;
  if (!qword_1EA310650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310650);
  }
  return result;
}

unint64_t sub_1C2808F98()
{
  unint64_t result = qword_1EBB76FF8;
  if (!qword_1EBB76FF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FF8);
  }
  return result;
}

unint64_t sub_1C2808FF0()
{
  unint64_t result = qword_1EBB76FF0;
  if (!qword_1EBB76FF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76FF0);
  }
  return result;
}

unint64_t EndSharingRelationshipState.description.getter()
{
  return 0xD000000000000024;
}

uint64_t EndSharingRelationshipStatus.description.getter()
{
  if (*v0) {
    return 0x64656C696146;
  }
  else {
    return 0x72676F7250206E49;
  }
}

void sub_1C28091A0()
{
  if (!qword_1EBB76D80)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76D80);
    }
  }
}

HealthExperience::EndSharingRelationshipStatus_optional __swiftcall EndSharingRelationshipStatus.init(rawValue:)(Swift::Int rawValue)
{
  if (rawValue == 1) {
    char v2 = 1;
  }
  else {
    char v2 = 2;
  }
  if (!rawValue) {
    char v2 = 0;
  }
  *uint64_t v1 = v2;
  return (HealthExperience::EndSharingRelationshipStatus_optional)rawValue;
}

uint64_t EndSharingRelationshipStatus.rawValue.getter()
{
  return *v0;
}

uint64_t sub_1C280921C()
{
  return sub_1C28CD8F0();
}

uint64_t sub_1C280927C()
{
  return sub_1C28CD8D0();
}

uint64_t sub_1C28092CC()
{
  if (*v0) {
    return 0x64656C696146;
  }
  else {
    return 0x72676F7250206E49;
  }
}

void EndSharingRelationshipState.status.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t EndSharingRelationshipState.errorCode.getter()
{
  return *(void *)(v0 + 8);
}

void EndSharingRelationshipState.init(status:error:)(id a1@<X1>, char *a2@<X0>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  if (!a1) {
    goto LABEL_5;
  }
  id v6 = a1;
  sub_1C27C7060();
  type metadata accessor for HKError(0);
  if ((swift_dynamicCast() & 1) == 0)
  {

LABEL_5:
    uint64_t v7 = 0;
    char v8 = 1;
    goto LABEL_6;
  }
  sub_1C28093F8();
  uint64_t v7 = sub_1C28CC260();

  char v8 = 0;
LABEL_6:
  *(unsigned char *)a3 = v4;
  *(void *)(a3 + 8) = v7;
  *(unsigned char *)(a3 + 16) = v8;
}

unint64_t sub_1C28093F8()
{
  unint64_t result = qword_1EA30FF10;
  if (!qword_1EA30FF10)
  {
    type metadata accessor for HKError(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA30FF10);
  }
  return result;
}

uint64_t sub_1C2809450()
{
  if (*v0) {
    return 0x646F43726F727265;
  }
  else {
    return 0x737574617473;
  }
}

uint64_t sub_1C280948C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C280A0A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28094B4(uint64_t a1)
{
  unint64_t v2 = sub_1C2809778();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C28094F0(uint64_t a1)
{
  unint64_t v2 = sub_1C2809778();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t static EndSharingRelationshipState.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  char v2 = a2[16];
  if (a1[16])
  {
    if ((a2[16] & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*((void *)a1 + 1) != *((void *)a2 + 1)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  return 1;
}

uint64_t EndSharingRelationshipState.hash(into:)()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C28CE710();
  if (v1 == 1) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  return sub_1C28CE710();
}

uint64_t EndSharingRelationshipState.encode(to:)(void *a1)
{
  sub_1C2809C5C(0, &qword_1EA310658, MEMORY[0x1E4FBBDE0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  char v8 = (char *)v11 - v7;
  char v9 = *v1;
  v11[1] = *((void *)v1 + 1);
  int v12 = v1[16];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2809778();
  sub_1C28CE800();
  char v15 = v9;
  char v14 = 0;
  sub_1C28097CC();
  sub_1C28CE5E0();
  if (!v2)
  {
    char v13 = 1;
    sub_1C28CE580();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_1C2809778()
{
  unint64_t result = qword_1EA310660;
  if (!qword_1EA310660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310660);
  }
  return result;
}

unint64_t sub_1C28097CC()
{
  unint64_t result = qword_1EA310668;
  if (!qword_1EA310668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310668);
  }
  return result;
}

uint64_t EndSharingRelationshipState.hashValue.getter()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C28CE700();
  sub_1C28CE710();
  sub_1C28CE720();
  if (v1 != 1) {
    sub_1C28CE710();
  }
  return sub_1C28CE740();
}

uint64_t EndSharingRelationshipState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C2809C5C(0, &qword_1EA310670, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  char v9 = (char *)&v15 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2809778();
  sub_1C28CE7F0();
  if (!v2)
  {
    char v17 = 0;
    sub_1C2809CC0();
    sub_1C28CE520();
    char v10 = v18;
    char v16 = 1;
    uint64_t v12 = sub_1C28CE4C0();
    char v14 = v13;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v14 & 1;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C2809A7C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  char v3 = a2[16];
  if (a1[16])
  {
    if (a2[16]) {
      return 1;
    }
  }
  else
  {
    if (*((void *)a1 + 1) != *((void *)a2 + 1)) {
      char v3 = 1;
    }
    if ((v3 & 1) == 0) {
      return 1;
    }
  }
  return 0;
}

uint64_t sub_1C2809AC8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return EndSharingRelationshipState.init(from:)(a1, a2);
}

uint64_t sub_1C2809AE0(void *a1)
{
  return EndSharingRelationshipState.encode(to:)(a1);
}

uint64_t sub_1C2809AF8()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C28CE700();
  sub_1C28CE710();
  sub_1C28CE720();
  if (v1 != 1) {
    sub_1C28CE710();
  }
  return sub_1C28CE740();
}

uint64_t sub_1C2809B7C()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C28CE710();
  if (v1 == 1) {
    return sub_1C28CE720();
  }
  sub_1C28CE720();
  return sub_1C28CE710();
}

uint64_t sub_1C2809BDC()
{
  int v1 = *(unsigned __int8 *)(v0 + 16);
  sub_1C28CE700();
  sub_1C28CE710();
  sub_1C28CE720();
  if (v1 != 1) {
    sub_1C28CE710();
  }
  return sub_1C28CE740();
}

void sub_1C2809C5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2809778();
    unint64_t v7 = a3(a1, &type metadata for EndSharingRelationshipState.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2809CC0()
{
  unint64_t result = qword_1EA310678;
  if (!qword_1EA310678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310678);
  }
  return result;
}

unint64_t sub_1C2809D18()
{
  unint64_t result = qword_1EA310680;
  if (!qword_1EA310680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310680);
  }
  return result;
}

unint64_t sub_1C2809D70()
{
  unint64_t result = qword_1EA310688;
  if (!qword_1EA310688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310688);
  }
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipStatus()
{
  return &type metadata for EndSharingRelationshipStatus;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for EndSharingRelationshipState(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[17]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for EndSharingRelationshipState(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipState()
{
  return &type metadata for EndSharingRelationshipState;
}

uint64_t dispatch thunk of EndSharingRelationshipStateProviding.endSharingRelationshipState.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

unsigned char *_s16HealthExperience28EndSharingRelationshipStatusOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2809F64);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EndSharingRelationshipState.CodingKeys()
{
  return &type metadata for EndSharingRelationshipState.CodingKeys;
}

unint64_t sub_1C2809FA0()
{
  unint64_t result = qword_1EA310690;
  if (!qword_1EA310690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310690);
  }
  return result;
}

unint64_t sub_1C2809FF8()
{
  unint64_t result = qword_1EA310698;
  if (!qword_1EA310698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310698);
  }
  return result;
}

unint64_t sub_1C280A050()
{
  unint64_t result = qword_1EA3106A0;
  if (!qword_1EA3106A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3106A0);
  }
  return result;
}

uint64_t sub_1C280A0A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x737574617473 && a2 == 0xE600000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x646F43726F727265 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_1C280A19C()
{
  unint64_t result = qword_1EA3106A8;
  if (!qword_1EA3106A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3106A8);
  }
  return result;
}

uint64_t static DataTypesSharableModelGeneratorPipeline.makeRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v67 = a7;
  uint64_t v71 = a8;
  uint64_t v72 = a3;
  uint64_t v65 = a5;
  uint64_t v66 = a6;
  uint64_t v63 = a2;
  uint64_t v64 = a4;
  uint64_t v61 = a1;
  uint64_t v73 = a9;
  uint64_t v70 = a10;
  uint64_t v47 = a11;
  uint64_t v57 = a13;
  uint64_t v58 = a12;
  uint64_t v48 = a14;
  unint64_t v49 = a15;
  uint64_t v62 = sub_1C28CC760();
  uint64_t v59 = *(void *)(v62 - 8);
  uint64_t v17 = *(void *)(v59 + 64);
  MEMORY[0x1F4188790](v62);
  uint64_t v52 = (char *)&v45 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getAssociatedTypeWitness();
  uint64_t v46 = a17;
  uint64_t v45 = a16;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t v69 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest();
  sub_1C27C7060();
  uint64_t v18 = sub_1C28CD0A0();
  type metadata accessor for UpdateModelsWorkRequest();
  uint64_t v19 = sub_1C28CD0A0();
  uint64_t v20 = v18;
  uint64_t v56 = v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v55 = WitnessTable;
  uint64_t v54 = v19;
  uint64_t v53 = swift_getWitnessTable();
  uint64_t v74 = v20;
  uint64_t v75 = v19;
  uint64_t v76 = WitnessTable;
  uint64_t v77 = v53;
  uint64_t v51 = sub_1C28CCF60();
  uint64_t v60 = *(void *)(v51 - 8);
  MEMORY[0x1F4188790](v51);
  int v50 = (char *)&v45 - v22;
  uint64_t v23 = v61;
  uint64_t v24 = v68;
  uint64_t v67 = static DataTypesSharableModelGeneratorPipeline.makeUpdateModelsWorkRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(v61, v63, v72, v64, v65, v66, v67, v71, v73, v70, a11, v58, v57, a14, a15, a16, a17);
  uint64_t v74 = v67;
  uint64_t v25 = v59;
  uint64_t v26 = v52;
  uint64_t v27 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v59 + 16))(v52, v23, v62);
  unint64_t v28 = (*(unsigned __int8 *)(v25 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80);
  unint64_t v29 = (v17 + v28 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v30 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = (char *)swift_allocObject();
  uint64_t v33 = v46;
  *((void *)v32 + 2) = v45;
  *((void *)v32 + 3) = v33;
  *((void *)v32 + 4) = v24;
  (*(void (**)(char *, char *, uint64_t))(v25 + 32))(&v32[v28], v26, v27);
  uint64_t v34 = v71;
  *(void *)&v32[v29] = v72;
  os_log_t v35 = (uint64_t *)&v32[v30];
  uint64_t v36 = v73;
  *os_log_t v35 = v34;
  v35[1] = v36;
  int v37 = &v32[v31];
  uint64_t v38 = v47;
  *(void *)int v37 = v70;
  *((void *)v37 + 1) = v38;
  uint64_t v39 = (uint64_t *)&v32[(v31 + 23) & 0xFFFFFFFFFFFFFFF8];
  unint64_t v40 = v49;
  *uint64_t v39 = v48;
  v39[1] = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  sub_1C28CD090();
  int v41 = v50;
  sub_1C28CD3B0();
  swift_release();
  uint64_t v42 = v51;
  swift_getWitnessTable();
  uint64_t v43 = sub_1C28CD300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v41, v42);
  return v43;
}

uint64_t type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t type metadata accessor for UpdateModelsWorkRequest()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t static DataTypesSharableModelGeneratorPipeline.makeUpdateModelsWorkRequestPublisherFromConfigurations(context:domain:configurations:sharableModelIdentifierPrefix:summaryDataVersionCompatibleBlock:databaseChangesPublisherFactory:dateRangePublisherFactory:cloudSyncStatusPublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, void (*a2)(char *, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15, uint64_t a16, uint64_t a17)
{
  uint64_t v92 = a8;
  uint64_t v112 = a7;
  uint64_t v110 = a6;
  uint64_t v94 = a4;
  uint64_t v91 = a2;
  uint64_t v119 = a14;
  uint64_t v102 = a13;
  uint64_t v101 = a12;
  uint64_t v96 = a11;
  uint64_t v95 = a10;
  uint64_t v93 = a9;
  sub_1C280BAE0();
  uint64_t v21 = v20;
  swift_getAssociatedTypeWitness();
  uint64_t v122 = a16;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  uint64_t updated = type metadata accessor for UpdateModelsWorkRequest();
  uint64_t v105 = sub_1C280BE40(&qword_1EBB74C28, (void (*)(uint64_t))sub_1C280BAE0);
  uint64_t v22 = sub_1C28CCF10();
  uint64_t v108 = *(void *)(v22 - 8);
  uint64_t v109 = v22;
  MEMORY[0x1F4188790](v22);
  uint64_t v106 = (char *)&v78 - v23;
  sub_1C280BEBC();
  uint64_t v99 = v24;
  uint64_t v98 = *(void *)(v24 - 8);
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v97 = (char *)&v78 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = v21;
  uint64_t v104 = *(void *)(v21 - 8);
  MEMORY[0x1F4188790](v25);
  uint64_t v103 = (char *)&v78 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v117 = sub_1C28CC760();
  uint64_t v120 = *(void *)(v117 - 8);
  uint64_t v28 = *(void *)(v120 + 64);
  MEMORY[0x1F4188790](v117);
  uint64_t v115 = (char *)&v78 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C280C20C();
  uint64_t v118 = v29;
  uint64_t v100 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v121 = (char *)&v78 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = a3;
  uint64_t v123 = a3;
  sub_1C28CDA30();
  swift_getWitnessTable();
  uint64_t v80 = Collection<>.hkTypes.getter();
  uint64_t v81 = sub_1C28CC740();
  if (a15)
  {
    uint64_t v123 = 0;
    unint64_t v124 = 0xE000000000000000;
    sub_1C28CE120();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v31 = a5;
    uint64_t v32 = v119;
    uint64_t v123 = v119;
    unint64_t v124 = a15;
    sub_1C28CD7C0();
    uint64_t v79 = v123;
    unint64_t v78 = v124;
    uint64_t v123 = v32;
    unint64_t v124 = a15;
    a5 = v31;
    swift_bridgeObjectRetain();
    sub_1C28CD7C0();
    uint64_t v119 = v123;
    unint64_t v33 = v124;
    uint64_t v34 = &v114;
  }
  else
  {
    uint64_t v82 = 0;
    unint64_t v78 = 0;
    unint64_t v33 = v119;
    uint64_t v34 = &v111;
  }
  *(v34 - 32) = v33;
  uint64_t v90 = a1;
  uint64_t v94 = sub_1C280D68C(a1, (uint64_t)v91, v94, a5, v122, a17);
  uint64_t v123 = v94;
  uint64_t v35 = v120;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v120 + 16);
  uint64_t v89 = v120 + 16;
  uint64_t v91 = v36;
  int v37 = v115;
  uint64_t v38 = v117;
  v36(v115, a1, v117);
  uint64_t v39 = *(unsigned __int8 *)(v35 + 80);
  uint64_t v40 = (v39 + 40) & ~v39;
  uint64_t v86 = v39 | 7;
  uint64_t v87 = v40;
  unint64_t v41 = (v28 + v40 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v84 = v41;
  unint64_t v42 = (v41 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v88 = v42 + 16;
  unint64_t v83 = v42;
  unint64_t v43 = (v42 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v114 = a17;
  unint64_t v44 = (v43 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v45 = (char *)swift_allocObject();
  *((void *)v45 + 2) = v122;
  *((void *)v45 + 3) = a17;
  *((void *)v45 + 4) = v116;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
  uint64_t v120 = v35 + 32;
  uint64_t v85 = v46;
  v46(&v45[v40], v37, v38);
  *(void *)&v45[v41] = v80;
  uint64_t v47 = (uint64_t *)&v45[v42];
  unint64_t v48 = v78;
  uint64_t *v47 = v79;
  v47[1] = v48;
  unint64_t v49 = &v45[v43];
  uint64_t v50 = v93;
  *(void *)unint64_t v49 = v92;
  *((void *)v49 + 1) = v50;
  uint64_t v51 = (void *)v81;
  *(void *)&v45[v44] = v81;
  swift_bridgeObjectRetain();
  swift_retain();
  id v52 = v51;
  sub_1C28CD090();
  sub_1C280C544();
  sub_1C280C2F8();
  sub_1C280C5AC();
  uint64_t v93 = MEMORY[0x1E4F1A938];
  sub_1C280BE40(&qword_1EBB74B90, (void (*)(uint64_t))sub_1C280C2F8);
  sub_1C28CD450();
  swift_release();
  uint64_t v53 = (void *)swift_allocObject();
  uint64_t v54 = v122;
  uint64_t v55 = v114;
  v53[2] = v122;
  v53[3] = v55;
  uint64_t v56 = v96;
  v53[4] = v95;
  v53[5] = v56;
  uint64_t v57 = v119;
  v53[6] = v52;
  v53[7] = v57;
  v53[8] = v82;
  uint64_t v58 = swift_allocObject();
  *(void *)(v58 + 16) = sub_1C280E9A4;
  *(void *)(v58 + 24) = v53;
  id v59 = v52;
  swift_retain();
  sub_1C28CD090();
  sub_1C280C3C0(0, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
  sub_1C280BFA8();
  sub_1C280BE40(&qword_1EBB74C08, (void (*)(uint64_t))sub_1C280C20C);
  sub_1C280BE40(&qword_1EBB74BA8, (void (*)(uint64_t))sub_1C280BFA8);
  uint64_t v60 = v97;
  sub_1C28CD3B0();
  swift_release();
  uint64_t v61 = (void *)swift_allocObject();
  v61[2] = v54;
  v61[3] = v55;
  uint64_t v62 = v102;
  v61[4] = v101;
  v61[5] = v62;
  v61[6] = v59;
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_1C280F150;
  *(void *)(v63 + 24) = v61;
  id v64 = v59;
  swift_retain();
  sub_1C28CD090();
  sub_1C280BBCC();
  sub_1C280BE40(&qword_1EBB74C18, (void (*)(uint64_t))sub_1C280BEBC);
  sub_1C280BE88();
  uint64_t v65 = v103;
  uint64_t v66 = v99;
  sub_1C28CD3A0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v98 + 8))(v60, v66);
  uint64_t v67 = v115;
  uint64_t v68 = v117;
  v91(v115, v90, v117);
  uint64_t v69 = (char *)swift_allocObject();
  uint64_t v70 = v114;
  *((void *)v69 + 2) = v54;
  *((void *)v69 + 3) = v70;
  *((void *)v69 + 4) = v116;
  v85(&v69[v87], v67, v68);
  uint64_t v71 = v112;
  *(void *)&v69[v84] = v111;
  uint64_t v72 = &v69[v83];
  *(void *)uint64_t v72 = v110;
  *((void *)v72 + 1) = v71;
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v73 = v106;
  uint64_t v74 = v113;
  sub_1C28CD330();
  swift_release();
  uint64_t v75 = v109;
  swift_getWitnessTable();
  uint64_t v76 = sub_1C28CD300();

  swift_release();
  (*(void (**)(char *, uint64_t))(v108 + 8))(v73, v75);
  (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v74);
  (*(void (**)(char *, uint64_t))(v100 + 8))(v121, v118);
  return v76;
}

uint64_t sub_1C280B280@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v66 = a8;
  uint64_t v63 = a6;
  uint64_t v64 = a7;
  uint64_t v61 = a4;
  uint64_t v62 = a5;
  uint64_t v70 = a3;
  uint64_t v71 = a2;
  uint64_t v74 = a9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v54 = AssociatedTypeWitness;
  swift_getAssociatedTypeWitness();
  uint64_t v15 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest();
  unint64_t v16 = sub_1C27C7060();
  uint64_t v17 = sub_1C28CD0A0();
  uint64_t v58 = sub_1C28CD0A0();
  uint64_t v60 = v15;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v18 = sub_1C28CCF10();
  unint64_t v65 = v16;
  uint64_t v55 = swift_getWitnessTable();
  uint64_t v19 = sub_1C28CCEE0();
  uint64_t v72 = swift_getWitnessTable();
  uint64_t v73 = v17;
  *(void *)&long long v75 = v17;
  *((void *)&v75 + 1) = v19;
  uint64_t v76 = v72;
  uint64_t v77 = swift_getWitnessTable();
  uint64_t v52 = v77;
  uint64_t v59 = sub_1C28CCEC0();
  uint64_t v57 = *(void *)(v59 - 8);
  MEMORY[0x1F4188790](v59);
  uint64_t v51 = (char *)&v47 - v20;
  sub_1C2815CF8(0, &qword_1EBB74C50, (uint64_t (*)(uint64_t))sub_1C2817344, MEMORY[0x1E4F1AC08]);
  uint64_t v22 = v21;
  uint64_t v23 = *(void *)(v21 - 8);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  uint64_t v26 = (char *)&v47 - v25;
  uint64_t v49 = *(void *)(v18 - 8);
  uint64_t v27 = MEMORY[0x1F4188790](v24);
  uint64_t v29 = (char *)&v47 - v28;
  uint64_t v67 = v19;
  uint64_t v50 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v27);
  uint64_t v31 = (char *)&v47 - v30;
  uint64_t v32 = *((void *)a1 + 2);
  unint64_t v33 = (void *)*((void *)a1 + 3);
  long long v75 = *a1;
  uint64_t v76 = v32;
  uint64_t v77 = (uint64_t)v33;
  uint64_t v68 = a12;
  uint64_t v69 = a13;
  uint64_t v34 = v70;
  uint64_t v35 = sub_1C280C6F0((uint64_t *)&v75, a12, a13);
  sub_1C28CC730();
  if (sub_1C28CCB00())
  {
    *(void *)&long long v75 = v35;
    uint64_t v36 = sub_1C28CD300();
    uint64_t result = swift_release();
  }
  else
  {
    uint64_t v48 = a11;
    uint64_t v71 = a10;
    *(void *)&long long v75 = v33;
    sub_1C2817344();
    id v38 = v33;
    sub_1C28CD210();
    uint64_t v39 = swift_checkMetadataState();
    unint64_t v40 = sub_1C2818098();
    uint64_t v41 = Publisher<>.databaseChangesContentPublisher<A>(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:databaseChangesPublisherFactory:dateRangePublisherFactory:queryDebugIdentifierPrefix:)(v34, v61, 1, v62, v63, v64, v66, v71, v48, v22, v39, v40, AssociatedConformanceWitness);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v26, v22);
    *(void *)&long long v75 = v41;
    uint64_t v42 = swift_allocObject();
    uint64_t v43 = v69;
    *(void *)(v42 + 16) = v68;
    *(void *)(v42 + 24) = v43;
    sub_1C28CD330();
    swift_release();
    swift_release();
    sub_1C28CD430();
    (*(void (**)(char *, uint64_t))(v49 + 8))(v29, v18);
    *(void *)&long long v75 = v35;
    unint64_t v44 = v51;
    uint64_t v45 = v67;
    sub_1C28CD370();
    uint64_t v46 = v59;
    swift_getWitnessTable();
    uint64_t v36 = sub_1C28CD300();
    swift_release();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v44, v46);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v31, v45);
  }
  *uint64_t v74 = v36;
  return result;
}

uint64_t sub_1C280B900()
{
  uint64_t v1 = sub_1C28CC760();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C280B9F0@<X0>(long long *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = *(void *)(sub_1C28CC760() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C280B280(a1, v2[4], (uint64_t)v2 + v8, *(void *)((char *)v2 + v9), *(void *)((char *)v2 + v10), *(void *)((char *)v2 + v10 + 8), *(void *)((char *)v2 + v11), *(void *)((char *)v2 + v11 + 8), a2, *(void *)((char *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)((char *)v2 + ((v11 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), v5, v6);
}

void sub_1C280BAE0()
{
  if (!qword_1EBB74C30)
  {
    sub_1C280C4AC(255, &qword_1EBB74B88, (void (*)(uint64_t))sub_1C280BBCC, (void (*)(void))sub_1C280BE88);
    sub_1C280BEBC();
    sub_1C280C668();
    sub_1C280BE40(&qword_1EBB74C18, (void (*)(uint64_t))sub_1C280BEBC);
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C30);
    }
  }
}

void sub_1C280BBCC()
{
  if (!qword_1EBB74BC0)
  {
    sub_1C280BC78();
    type metadata accessor for DatabaseState();
    sub_1C280BE40(&qword_1EBB74BE8, (void (*)(uint64_t))sub_1C280BC78);
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74BC0);
    }
  }
}

void sub_1C280BC78()
{
  if (!qword_1EBB74BF0)
  {
    sub_1C280BD0C();
    sub_1C280BE40(&qword_1EBB755A8, (void (*)(uint64_t))sub_1C280BD0C);
    unint64_t v0 = sub_1C28CCF30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74BF0);
    }
  }
}

void sub_1C280BD0C()
{
  if (!qword_1EBB755B0)
  {
    sub_1C280BD74();
    unint64_t v0 = sub_1C28CD0A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB755B0);
    }
  }
}

void sub_1C280BD74()
{
  if (!qword_1EBB757D8)
  {
    sub_1C27D1C9C(255, &qword_1EBB77288);
    sub_1C27C7060();
    unint64_t v0 = sub_1C28CE7E0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB757D8);
    }
  }
}

uint64_t type metadata accessor for DatabaseState()
{
  uint64_t result = qword_1EBB74AC0;
  if (!qword_1EBB74AC0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C280BE40(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C280BE88()
{
  return sub_1C280BE40(&qword_1EBB74BB8, (void (*)(uint64_t))sub_1C280BBCC);
}

void sub_1C280BEBC()
{
  if (!qword_1EBB74C20)
  {
    sub_1C280BFA8();
    sub_1C280C20C();
    sub_1C280BE40(&qword_1EBB74BA8, (void (*)(uint64_t))sub_1C280BFA8);
    sub_1C280BE40(&qword_1EBB74C08, (void (*)(uint64_t))sub_1C280C20C);
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C20);
    }
  }
}

void sub_1C280BFA8()
{
  if (!qword_1EBB74BB0)
  {
    sub_1C2817990(255, &qword_1EBB74BD0, &qword_1EBB75590, (uint64_t (*)(uint64_t))sub_1C27DE860, (void (*)(void))sub_1C280C0F4);
    sub_1C280C3C0(255, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
    sub_1C280C17C();
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74BB0);
    }
  }
}

void sub_1C280C078(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_1C27C7060();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

unint64_t sub_1C280C0F4()
{
  unint64_t result = qword_1EBB75588;
  if (!qword_1EBB75588)
  {
    sub_1C280C078(255, &qword_1EBB75590, (uint64_t (*)(uint64_t))sub_1C27DE860, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75588);
  }
  return result;
}

unint64_t sub_1C280C17C()
{
  unint64_t result = qword_1EBB74BC8;
  if (!qword_1EBB74BC8)
  {
    sub_1C2817990(255, &qword_1EBB74BD0, &qword_1EBB75590, (uint64_t (*)(uint64_t))sub_1C27DE860, (void (*)(void))sub_1C280C0F4);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74BC8);
  }
  return result;
}

void sub_1C280C20C()
{
  if (!qword_1EBB74C10)
  {
    sub_1C280C2F8();
    sub_1C280C4AC(255, &qword_1EBB74B78, (void (*)(uint64_t))sub_1C280C544, (void (*)(void))sub_1C280C5AC);
    sub_1C280BE40(&qword_1EBB74B90, (void (*)(uint64_t))sub_1C280C2F8);
    sub_1C280C5E0();
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C10);
    }
  }
}

void sub_1C280C2F8()
{
  if (!qword_1EBB74B98)
  {
    sub_1C280C078(255, &qword_1EBB76D30, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    sub_1C280C3C0(255, qword_1EBB74AD8, MEMORY[0x1E4F671C0]);
    sub_1C280C424();
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74B98);
    }
  }
}

void sub_1C280C3C0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_1C280C424()
{
  unint64_t result = qword_1EBB76D28;
  if (!qword_1EBB76D28)
  {
    sub_1C280C078(255, &qword_1EBB76D30, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76D28);
  }
  return result;
}

void sub_1C280C4AC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    sub_1C27C7060();
    a4();
    unint64_t v6 = sub_1C28CCEE0();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

void sub_1C280C544()
{
  if (!qword_1EBB74C40)
  {
    unint64_t v0 = sub_1C28CD0A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C40);
    }
  }
}

uint64_t sub_1C280C5AC()
{
  return sub_1C280BE40(&qword_1EBB74C38, (void (*)(uint64_t))sub_1C280C544);
}

unint64_t sub_1C280C5E0()
{
  unint64_t result = qword_1EBB74B70;
  if (!qword_1EBB74B70)
  {
    sub_1C280C4AC(255, &qword_1EBB74B78, (void (*)(uint64_t))sub_1C280C544, (void (*)(void))sub_1C280C5AC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74B70);
  }
  return result;
}

unint64_t sub_1C280C668()
{
  unint64_t result = qword_1EBB74B80;
  if (!qword_1EBB74B80)
  {
    sub_1C280C4AC(255, &qword_1EBB74B88, (void (*)(uint64_t))sub_1C280BBCC, (void (*)(void))sub_1C280BE88);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74B80);
  }
  return result;
}

uint64_t sub_1C280C6F0(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  swift_getAssociatedTypeWitness();
  uint64_t v73 = a2;
  uint64_t v74 = a3;
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest();
  unint64_t v7 = sub_1C27C7060();
  uint64_t v8 = MEMORY[0x1E4FBC0F0];
  uint64_t v86 = sub_1C28CD0A0();
  unint64_t v87 = v86;
  uint64_t v80 = v86;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v89 = WitnessTable;
  uint64_t v78 = WitnessTable;
  uint64_t v9 = sub_1C28CCEC0();
  uint64_t v77 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  long long v75 = (char *)&v56 - v10;
  uint64_t v11 = sub_1C28CDA30();
  uint64_t v12 = swift_getWitnessTable();
  uint64_t v86 = v11;
  unint64_t v87 = v7;
  uint64_t WitnessTable = v12;
  uint64_t v89 = v8;
  uint64_t v13 = sub_1C28CCF90();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v79 = v9;
  uint64_t v86 = v9;
  unint64_t v87 = v13;
  uint64_t v69 = v14;
  uint64_t WitnessTable = v14;
  uint64_t v89 = v15;
  uint64_t v67 = v15;
  uint64_t v16 = sub_1C28CCEC0();
  uint64_t v71 = *(void *)(v16 - 8);
  uint64_t v72 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v70 = (char *)&v56 - v17;
  uint64_t v66 = v11;
  uint64_t v86 = v11;
  unint64_t v87 = MEMORY[0x1E4FBC248];
  uint64_t v64 = v12;
  uint64_t WitnessTable = v12;
  uint64_t v89 = MEMORY[0x1E4FBC278];
  uint64_t v62 = sub_1C28CCF90();
  uint64_t v61 = *(void *)(v62 - 8);
  uint64_t v18 = MEMORY[0x1F4188790](v62);
  uint64_t v60 = (char *)&v56 - v19;
  uint64_t v76 = v13;
  uint64_t v65 = *(void *)(v13 - 8);
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v63 = (char *)&v56 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v23 = (uint64_t *)((char *)&v56 - v22);
  uint64_t v83 = sub_1C28CD200();
  uint64_t v81 = *(void *)(v83 - 8);
  MEMORY[0x1F4188790](v83);
  uint64_t v25 = (char *)&v56 - v24;
  uint64_t v26 = sub_1C28CE7D0();
  uint64_t v82 = *(void *)(v26 - 8);
  MEMORY[0x1F4188790](v26);
  uint64_t v28 = (char *)&v56 - v27;
  uint64_t v29 = sub_1C28CD230();
  uint64_t v57 = *(void *)(v29 - 8);
  MEMORY[0x1F4188790](v29);
  uint64_t v31 = (char *)&v56 - v30;
  unint64_t v32 = a1[1];
  uint64_t v59 = *a1;
  uint64_t v58 = a1[2];
  unint64_t v84 = (void *)a1[3];
  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C28CE3B0();
    swift_bridgeObjectRelease();
    if (v35) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1C28CD220();
    swift_getWitnessTable();
    uint64_t v34 = sub_1C28CD300();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v31, v29);
    goto LABEL_6;
  }
  if (!*(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_5;
  }
LABEL_3:
  *uint64_t v23 = v32;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  sub_1C28CD210();
  uint64_t v33 = v83;
  sub_1C28CD1D0();
  (*(void (**)(char *, uint64_t))(v81 + 8))(v25, v33);
  swift_getWitnessTable();
  uint64_t v34 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v82 + 8))(v28, v26);
LABEL_6:
  if (v84 && *(void *)(v58 + 16))
  {
    uint64_t v36 = v84;
    *uint64_t v23 = v58;
    v23[1] = v36;
    swift_storeEnumTagMultiPayload();
    id v37 = v36;
    swift_bridgeObjectRetain();
    sub_1C28CD210();
    uint64_t v38 = v83;
    sub_1C28CD1D0();
    (*(void (**)(char *, uint64_t))(v81 + 8))(v25, v38);
    swift_getWitnessTable();
    uint64_t v39 = sub_1C28CD300();

    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t))(v82 + 8))(v28, v26);
  }
  else
  {
    sub_1C28CD220();
    swift_getWitnessTable();
    uint64_t v39 = sub_1C28CD300();
    uint64_t v40 = (*(uint64_t (**)(char *, uint64_t))(v57 + 8))(v31, v29);
  }
  uint64_t v86 = v59;
  MEMORY[0x1F4188790](v40);
  uint64_t v41 = v74;
  *(&v56 - 2) = v73;
  *(&v56 - 1) = v41;
  uint64_t v42 = sub_1C28CDA30();
  swift_bridgeObjectRetain();
  uint64_t v43 = swift_getWitnessTable();
  uint64_t v45 = sub_1C2833270((void (*)(char *, char *))sub_1C2818138, (uint64_t)(&v56 - 4), v42, v6, MEMORY[0x1E4FBC248], v43, MEMORY[0x1E4FBC278], v44);
  swift_bridgeObjectRelease();
  uint64_t v86 = v45;
  uint64_t v46 = v60;
  sub_1C28CD830();
  swift_bridgeObjectRelease();
  uint64_t v47 = v63;
  uint64_t v48 = v62;
  sub_1C28CCF80();
  (*(void (**)(char *, uint64_t))(v61 + 8))(v46, v48);
  uint64_t v86 = v34;
  uint64_t v85 = v39;
  uint64_t v49 = v75;
  sub_1C28CD370();
  uint64_t v50 = v70;
  uint64_t v51 = v79;
  uint64_t v52 = v76;
  sub_1C28CD370();
  (*(void (**)(char *, uint64_t))(v77 + 8))(v49, v51);
  uint64_t v53 = v72;
  swift_getWitnessTable();
  uint64_t v54 = sub_1C28CD300();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v53);
  (*(void (**)(char *, uint64_t))(v65 + 8))(v47, v52);
  return v54;
}

uint64_t sub_1C280D18C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v29 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v24 - v8;
  uint64_t v10 = sub_1C28CCE10();
  uint64_t v30 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCDC0();
  uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v31(v9, a1, AssociatedTypeWitness);
  uint64_t v13 = sub_1C28CCE00();
  os_log_type_t v14 = sub_1C28CDCD0();
  int v28 = v14;
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v26 = a1;
    uint64_t v16 = v15;
    uint64_t v24 = swift_slowAlloc();
    uint64_t v33 = v24;
    *(_DWORD *)uint64_t v16 = 136315394;
    uint64_t v27 = a2;
    uint64_t v17 = sub_1C28CE830();
    uint64_t v32 = sub_1C27D36AC(v17, v18, &v33);
    uint64_t v25 = v10;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    v31(v29, (uint64_t)v9, AssociatedTypeWitness);
    uint64_t v19 = sub_1C28CD750();
    uint64_t v32 = sub_1C27D36AC(v19, v20, &v33);
    a2 = v27;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);
    _os_log_impl(&dword_1C27B7000, v13, (os_log_type_t)v28, "[%s]: Emitting new request due to database change: %s", (uint8_t *)v16, 0x16u);
    uint64_t v21 = v24;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v21, -1, -1);
    uint64_t v22 = v16;
    a1 = v26;
    MEMORY[0x1C87609B0](v22, -1, -1);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v9, AssociatedTypeWitness);

    (*(void (**)(char *, uint64_t))(v30 + 8))(v12, v10);
  }
  v31(a2, a1, AssociatedTypeWitness);
  type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C280D588@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
  type metadata accessor for DataTypesSharableModelGeneratorPipelineRequest();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_1C280D68C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v24 = a5;
  uint64_t v25 = a6;
  v23[1] = a1;
  v23[2] = a2;
  sub_1C2817BAC();
  uint64_t v9 = v8;
  uint64_t v10 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2817D20();
  uint64_t v26 = v13;
  uint64_t v28 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC710();
  __swift_project_boxed_opaque_existential_1(v30, v30[3]);
  uint64_t v29 = sub_1C28CCA00();
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a3;
  *(void *)(v16 + 24) = a4;
  sub_1C2817C88();
  sub_1C2815CF8(0, &qword_1EBB75678, MEMORY[0x1E4F67288], MEMORY[0x1E4FBB320]);
  sub_1C280BE40(&qword_1EBB75568, (void (*)(uint64_t))sub_1C2817C88);
  swift_bridgeObjectRetain();
  sub_1C28CD330();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  sub_1C28CC750();
  sub_1C280BE40(&qword_1EBB75428, (void (*)(uint64_t))sub_1C2817BAC);
  uint64_t v17 = sub_1C28CD2E0();
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v30);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  v30[0] = v17;
  unint64_t v18 = (void *)swift_allocObject();
  uint64_t v19 = v25;
  void v18[2] = v24;
  v18[3] = v19;
  v18[4] = v27;
  sub_1C28CD330();
  swift_release();
  swift_release();
  sub_1C280BE40(&qword_1EBB74BA0, (void (*)(uint64_t))sub_1C2817D20);
  uint64_t v20 = v26;
  uint64_t v21 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v15, v20);
  return v21;
}

uint64_t sub_1C280DA48@<X0>(uint64_t *a1@<X0>, void *a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(char *, uint64_t)@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v82 = a8;
  uint64_t v83 = a7;
  uint64_t v77 = a5;
  uint64_t v79 = a4;
  uint64_t v93 = a9;
  uint64_t v81 = a10;
  sub_1C281789C();
  uint64_t v89 = *(void *)(v16 - 8);
  uint64_t v90 = v16;
  MEMORY[0x1F4188790](v16);
  unint64_t v88 = (char *)v64 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2817990(0, (unint64_t *)&qword_1EBB74BE0, &qword_1EBB755A0, (uint64_t (*)(uint64_t))sub_1C2817A18, (void (*)(void))sub_1C2817A4C);
  uint64_t v85 = *(void *)(v18 - 8);
  uint64_t v86 = v18;
  MEMORY[0x1F4188790](v18);
  unint64_t v84 = (char *)v64 - v19;
  uint64_t v87 = sub_1C28CDC60();
  uint64_t v92 = *(void *)(v87 - 8);
  MEMORY[0x1F4188790](v87);
  uint64_t v91 = (char *)v64 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1C28CC760();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = MEMORY[0x1F4188790](v21);
  uint64_t v71 = (char *)v64 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v23);
  uint64_t v26 = (char *)v64 - v25;
  uint64_t v27 = sub_1C28CCE10();
  uint64_t v75 = *(void *)(v27 - 8);
  uint64_t v76 = v27;
  MEMORY[0x1F4188790](v27);
  uint64_t v29 = (char *)v64 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *a1;
  uint64_t v31 = (void *)a1[1];
  uint64_t v80 = v30;
  id v32 = v31;
  sub_1C28CCDC0();
  uint64_t v33 = *(void (**)(char *, char *, uint64_t))(v22 + 16);
  uint64_t v73 = v26;
  uint64_t v74 = v21;
  uint64_t v70 = v33;
  v33(v26, a3, v21);
  id v34 = v32;
  id v78 = a2;
  swift_bridgeObjectRetain_n();
  id v35 = v34;
  uint64_t v36 = sub_1C28CCE00();
  os_log_type_t v37 = sub_1C28CDCD0();
  int v38 = v37;
  if (os_log_type_enabled(v36, v37))
  {
    v64[1] = a12;
    uint64_t v39 = swift_slowAlloc();
    uint64_t v69 = a6;
    uint64_t v40 = v39;
    uint64_t v67 = swift_slowAlloc();
    uint64_t v94 = a11;
    uint64_t v95 = v67;
    *(_DWORD *)uint64_t v40 = 136315906;
    os_log_t v66 = v36;
    v64[0] = a11;
    swift_getMetatypeMetadata();
    int v65 = v38;
    uint64_t v41 = sub_1C28CD750();
    uint64_t v94 = sub_1C27D36AC(v41, v42, &v95);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 12) = 2080;
    uint64_t v94 = (uint64_t)v31;
    sub_1C2817344();
    id v43 = v35;
    uint64_t v44 = sub_1C28CD750();
    id v68 = v35;
    uint64_t v94 = sub_1C27D36AC(v44, v45, &v95);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 22) = 2048;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    uint64_t v47 = MEMORY[0x1C875EF70](v78, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    uint64_t v94 = v47;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v40 + 32) = 2080;
    uint64_t v48 = v73;
    uint64_t v49 = v74;
    v70(v71, v73, v74);
    uint64_t v50 = sub_1C28CD750();
    uint64_t v94 = sub_1C27D36AC(v50, v51, &v95);
    id v35 = v68;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v48, v49);
    uint64_t v36 = v66;
    _os_log_impl(&dword_1C27B7000, v66, (os_log_type_t)v65, "[%s]: Received prior anchor %s, creating publishers for %ld configurations in generatorContext %s", (uint8_t *)v40, 0x2Au);
    uint64_t v52 = v67;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v52, -1, -1);
    MEMORY[0x1C87609B0](v40, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v73, v74);
  }

  (*(void (**)(char *, uint64_t))(v75 + 8))(v29, v76);
  uint64_t v72 = v31;
  swift_bridgeObjectRetain();
  id v78 = v35;
  swift_bridgeObjectRetain();
  uint64_t v53 = v91;
  sub_1C28CDC50();
  uint64_t v95 = v83(v53, v81);
  uint64_t v54 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C280C078(0, &qword_1EBB755A0, (uint64_t (*)(uint64_t))sub_1C2817A18, MEMORY[0x1E4F1AAE0]);
  sub_1C2817A4C();
  uint64_t v55 = v84;
  sub_1C28CD360();
  sub_1C28CD090();
  sub_1C28CC7D0();
  sub_1C280C078(0, &qword_1EBB76D30, MEMORY[0x1E4F671C0], v54);
  sub_1C2817AD4();
  sub_1C280C424();
  uint64_t v56 = v88;
  uint64_t v57 = v86;
  sub_1C28CD3B0();
  sub_1C280BE40(&qword_1EBB74BF8, (void (*)(uint64_t))sub_1C281789C);
  uint64_t v58 = v90;
  uint64_t v59 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v89 + 8))(v56, v58);
  (*(void (**)(char *, uint64_t))(v85 + 8))(v55, v57);
  uint64_t v95 = v59;
  uint64_t v60 = swift_allocObject();
  uint64_t v61 = v72;
  *(void *)(v60 + 16) = v80;
  *(void *)(v60 + 24) = v61;
  sub_1C280C3C0(0, qword_1EBB74AD8, MEMORY[0x1E4F671C0]);
  id v62 = v78;
  swift_bridgeObjectRetain();
  sub_1C28CD330();

  swift_release();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v92 + 8))(v53, v87);
}

uint64_t sub_1C280E38C()
{
  uint64_t v1 = sub_1C28CC760();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (((((((*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
      + 23) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C280E4B4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v7 = *(void *)(sub_1C28CC760() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C280DA48(a1, *(void **)(v2 + 32), (char *)(v2 + v8), *(void *)(v2 + v9), *(void *)(v2 + v10), *(void *)(v2 + v10 + 8), *(uint64_t (**)(char *, uint64_t))(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 8), a2, *(void *)(v2 + ((((v10 + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)), v5, v6);
}

uint64_t sub_1C280E5A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X8>)
{
  sub_1C280C3C0(0, qword_1EBB74AD8, MEMORY[0x1E4F671C0]);
  unint64_t v9 = (char *)a4 + *(int *)(v8 + 48);
  *a4 = a2;
  a4[1] = a3;
  uint64_t v10 = sub_1C28CC7D0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v9, a1, v10);
  id v11 = a3;

  return swift_bridgeObjectRetain();
}

uint64_t sub_1C280E660@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11)
{
  uint64_t v30 = a5;
  uint64_t v31 = a8;
  uint64_t v28 = a1;
  uint64_t v29 = a7;
  uint64_t v36 = a2;
  uint64_t v37 = a9;
  uint64_t v35 = a11;
  uint64_t v32 = a3;
  uint64_t v33 = a10;
  uint64_t v13 = sub_1C28CC7D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v13);
  sub_1C2817990(0, &qword_1EBB74BD0, &qword_1EBB75590, (uint64_t (*)(uint64_t))sub_1C27DE860, (void (*)(void))sub_1C280C0F4);
  uint64_t v34 = v16;
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v27 - v18;
  uint64_t v31 = a4(a6, v29, v31);
  uint64_t v38 = v31;
  sub_1C280C078(0, &qword_1EBB75590, (uint64_t (*)(uint64_t))sub_1C27DE860, MEMORY[0x1E4F1AAE0]);
  sub_1C280C0F4();
  sub_1C28CD360();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v32, v13);
  unint64_t v20 = (*(unsigned __int8 *)(v14 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v21 = (char *)swift_allocObject();
  uint64_t v22 = v35;
  uint64_t v23 = v36;
  *((void *)v21 + 2) = v33;
  *((void *)v21 + 3) = v22;
  *((void *)v21 + 4) = v28;
  *((void *)v21 + 5) = v23;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v21[v20], (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v13);
  sub_1C280C3C0(0, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
  sub_1C280C17C();
  swift_bridgeObjectRetain();
  id v24 = v23;
  uint64_t v25 = v34;
  sub_1C28CD330();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v19, v25);
}

uint64_t sub_1C280E95C()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C280E9A4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C280E660(a1, a2, a3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32), *(void *)(v4 + 40), *(void *)(v4 + 48), *(void *)(v4 + 56), *(void *)(v4 + 64), a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

void sub_1C280E9D8(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  uint64_t v46 = a2;
  uint64_t v11 = sub_1C28CCE10();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C28CC7D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v19 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    unint64_t v42 = a6;
    uint64_t v43 = a4;
    uint64_t v39 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v40 = v17;
    uint64_t v44 = v12;
    uint64_t v45 = v11;
    uint64_t v41 = a3;
    id v20 = v19;
    sub_1C28CCDC0();
    id v21 = v19;
    id v22 = v19;
    uint64_t v23 = sub_1C28CCE00();
    os_log_type_t v24 = sub_1C28CDCB0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      uint64_t v47 = a5;
      uint64_t v48 = v26;
      *(_DWORD *)uint64_t v25 = 136315394;
      swift_getMetatypeMetadata();
      uint64_t v27 = sub_1C28CD750();
      uint64_t v47 = sub_1C27D36AC(v27, v28, &v48);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v47 = (uint64_t)v19;
      id v29 = v19;
      sub_1C27C7060();
      uint64_t v30 = sub_1C28CD750();
      uint64_t v47 = sub_1C27D36AC(v30, v31, &v48);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27DEB6C(v19, 1);
      sub_1C27DEB6C(v19, 1);
      _os_log_impl(&dword_1C27B7000, v23, v24, "[%s]: Error when querying for date ranges for database changes: %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v26, -1, -1);
      MEMORY[0x1C87609B0](v25, -1, -1);
    }
    else
    {
      sub_1C27DEB6C(v19, 1);
      sub_1C27DEB6C(v19, 1);
    }

    (*(void (**)(char *, uint64_t))(v44 + 8))(v14, v45);
    uint64_t v36 = v41;
    uint64_t v35 = v42;
    uint64_t v37 = v43;
    sub_1C280C3C0(0, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
    *uint64_t v35 = v46;
    v35[1] = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v39, v37, v40);
    id v38 = v36;
    swift_bridgeObjectRetain();
    sub_1C28065C4(MEMORY[0x1E4FBC860]);
    sub_1C28CCA40();
    sub_1C27DEB6C(v19, 1);
  }
  else
  {
    uint64_t v32 = v17;
    uint64_t v33 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_1C280C3C0(0, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
    *a6 = v46;
    a6[1] = a3;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v33, a4, v32);
    sub_1C2817890(v19, 0);
    id v34 = a3;
    swift_bridgeObjectRetain();
    sub_1C28CCA40();
  }
}

uint64_t sub_1C280EE08(char *a1)
{
  return sub_1C280F5A8(a1, qword_1EBB74AD8, MEMORY[0x1E4F671C0]);
}

uint64_t sub_1C280EE28@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t)@<X3>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v27 = a6;
  uint64_t v28 = a7;
  uint64_t v26 = a3;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v31 = a8;
  uint64_t v10 = sub_1C28CCA60();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x1F4188790](v10);
  sub_1C280BC78();
  uint64_t v14 = v13;
  uint64_t v15 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = a4(a5);
  sub_1C280BD0C();
  sub_1C280BE40(&qword_1EBB755A8, (void (*)(uint64_t))sub_1C280BD0C);
  sub_1C28CD360();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v26, v10);
  unint64_t v18 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v20 = v28;
  *(void *)(v19 + 16) = v27;
  *(void *)(v19 + 24) = v20;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v19 + v18, (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  id v21 = (void *)(v19 + ((v12 + v18 + 7) & 0xFFFFFFFFFFFFFFF8));
  id v22 = v30;
  *id v21 = v29;
  v21[1] = v22;
  type metadata accessor for DatabaseState();
  sub_1C280BE40(&qword_1EBB74BE8, (void (*)(uint64_t))sub_1C280BC78);
  swift_bridgeObjectRetain();
  id v23 = v22;
  sub_1C28CD330();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v17, v14);
}

uint64_t sub_1C280F110()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C280F150@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_1C280EE28(a1, a2, a3, *(uint64_t (**)(uint64_t))(v4 + 32), *(void *)(v4 + 48), *(void *)(v4 + 16), *(void *)(v4 + 24), a4);
}

uint64_t sub_1C280F160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1C28CCE10();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void **)a1;
  if (*(unsigned char *)(a1 + 8))
  {
    uint64_t v45 = a2;
    id v17 = v16;
    sub_1C28CCDC0();
    id v18 = v16;
    id v19 = v16;
    uint64_t v20 = sub_1C28CCE00();
    os_log_type_t v21 = sub_1C28CDCB0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v43 = a4;
      uint64_t v23 = v22;
      uint64_t v42 = swift_slowAlloc();
      uint64_t v46 = a5;
      uint64_t v47 = v42;
      *(_DWORD *)uint64_t v23 = 136315394;
      uint64_t v44 = a3;
      swift_getMetatypeMetadata();
      uint64_t v24 = sub_1C28CD750();
      uint64_t v46 = sub_1C27D36AC(v24, v25, &v47);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v46 = (uint64_t)v16;
      id v26 = v16;
      sub_1C27C7060();
      uint64_t v27 = sub_1C28CD750();
      uint64_t v46 = sub_1C27D36AC(v27, v28, &v47);
      a3 = v44;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C2817718(v16);
      sub_1C2817718(v16);
      _os_log_impl(&dword_1C27B7000, v20, v21, "[%s]: Error when querying for cloud sync status: %s", (uint8_t *)v23, 0x16u);
      uint64_t v29 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v29, -1, -1);
      uint64_t v30 = v23;
      a4 = v43;
      MEMORY[0x1C87609B0](v30, -1, -1);

      sub_1C2817718(v16);
    }
    else
    {
      sub_1C2817718(v16);
      sub_1C2817718(v16);
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
    uint64_t v38 = sub_1C28CCA60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 16))(a6, v45, v38);
    uint64_t v39 = type metadata accessor for DatabaseState();
    uint64_t v40 = (void *)(a6 + *(int *)(v39 + 20));
    void *v40 = a3;
    v40[1] = a4;
    *(unsigned char *)(a6 + *(int *)(v39 + 24)) = 1;
    id v41 = a4;
    return swift_bridgeObjectRetain();
  }
  else
  {
    id v31 = v16;
    char v32 = sub_1C28CDEF0();
    sub_1C2817718(v16);
    uint64_t v33 = sub_1C28CCA60();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 16))(a6, a2, v33);
    uint64_t v34 = type metadata accessor for DatabaseState();
    uint64_t v35 = (void *)(a6 + *(int *)(v34 + 20));
    *uint64_t v35 = a3;
    v35[1] = a4;
    *(unsigned char *)(a6 + *(int *)(v34 + 24)) = v32 & 1;
    id v36 = a4;
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_1C280F550()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C280F588(char *a1)
{
  return sub_1C280F5A8(a1, &qword_1EBB74AD0, MEMORY[0x1E4F67318]);
}

uint64_t sub_1C280F5A8(char *a1, unint64_t *a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v3 + 16);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *((void *)a1 + 1);
  sub_1C280C3C0(0, a2, a3);
  return v5(v6, v7, &a1[*(int *)(v8 + 48)]);
}

uint64_t sub_1C280F608@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(id)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>)
{
  uint64_t v379 = a6;
  v378 = a5;
  uint64_t v426 = a4;
  uint64_t v441 = a3;
  uint64_t v427 = a2;
  uint64_t v418 = a1;
  v383 = a9;
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB718];
  sub_1C2815CF8(0, &qword_1EBB74AB8, MEMORY[0x1E4F67308], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v12 - 8);
  v400 = (char *)&v356 - v13;
  uint64_t v406 = sub_1C28CCA20();
  v414 = *(char **)(v406 - 8);
  MEMORY[0x1F4188790](v406);
  v405 = (char *)&v356 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2815CF8(0, &qword_1EBB74AB0, MEMORY[0x1E4F67288], v11);
  MEMORY[0x1F4188790](v15 - 8);
  v410 = (char *)&v356 - v16;
  uint64_t v415 = sub_1C28CC9B0();
  uint64_t v395 = *(void *)(v415 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v415);
  v392 = (char *)&v356 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  v366 = (char *)&v356 - v20;
  MEMORY[0x1F4188790](v19);
  v412 = (char *)&v356 - v21;
  uint64_t v440 = a7;
  swift_getAssociatedTypeWitness();
  uint64_t v429 = a8;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v420 = *(void (***)(uint64_t, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v24 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  v424 = (char *)&v356 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v24);
  uint64_t v423 = (uint64_t)&v356 - v26;
  uint64_t v27 = swift_checkMetadataState();
  uint64_t v436 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x1F4188790](v27);
  v391 = (char *)&v356 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x1F4188790](v28);
  v372 = (char *)&v356 - v31;
  uint64_t v32 = MEMORY[0x1F4188790](v30);
  v367 = (char *)&v356 - v33;
  uint64_t v34 = MEMORY[0x1F4188790](v32);
  v364 = (char *)&v356 - v35;
  uint64_t v36 = MEMORY[0x1F4188790](v34);
  v377 = (char *)&v356 - v37;
  uint64_t v38 = MEMORY[0x1F4188790](v36);
  v373 = (char *)&v356 - v39;
  uint64_t v40 = MEMORY[0x1F4188790](v38);
  v399 = (char *)&v356 - v41;
  uint64_t v42 = MEMORY[0x1F4188790](v40);
  v431 = (char *)&v356 - v43;
  uint64_t v44 = MEMORY[0x1F4188790](v42);
  unint64_t v437 = (unint64_t)&v356 - v45;
  uint64_t v362 = v46;
  MEMORY[0x1F4188790](v44);
  v430 = (char *)&v356 - v47;
  uint64_t v388 = sub_1C28CC7D0();
  uint64_t v393 = *(void *)(v388 - 8);
  uint64_t v48 = MEMORY[0x1F4188790](v388);
  v375 = (char *)&v356 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v48);
  unint64_t v51 = (char *)&v356 - v50;
  uint64_t v52 = type metadata accessor for DatabaseState();
  uint64_t v53 = MEMORY[0x1F4188790](v52);
  v438 = (char *)&v356 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v55 = MEMORY[0x1F4188790](v53);
  uint64_t v57 = (char *)&v356 - v56;
  MEMORY[0x1F4188790](v55);
  uint64_t v59 = (char *)&v356 - v58;
  uint64_t v432 = sub_1C28CCE10();
  uint64_t v60 = *(void *)(v432 - 8);
  uint64_t v61 = MEMORY[0x1F4188790](v432);
  v387 = (char *)&v356 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x1F4188790](v61);
  v390 = (char *)&v356 - v64;
  uint64_t v65 = MEMORY[0x1F4188790](v63);
  v385 = (char *)&v356 - v66;
  uint64_t v67 = MEMORY[0x1F4188790](v65);
  v368 = (char *)&v356 - v68;
  uint64_t v69 = MEMORY[0x1F4188790](v67);
  v363 = (char *)&v356 - v70;
  uint64_t v71 = MEMORY[0x1F4188790](v69);
  v380 = (char *)&v356 - v72;
  uint64_t v73 = MEMORY[0x1F4188790](v71);
  v376 = (char *)&v356 - v74;
  uint64_t v75 = MEMORY[0x1F4188790](v73);
  v407 = (char *)&v356 - v76;
  uint64_t v77 = MEMORY[0x1F4188790](v75);
  v416 = (char *)&v356 - v78;
  uint64_t v79 = MEMORY[0x1F4188790](v77);
  v381 = (char *)&v356 - v80;
  MEMORY[0x1F4188790](v79);
  uint64_t v82 = (char *)&v356 - v81;
  uint64_t v425 = AssociatedTypeWitness;
  uint64_t v453 = sub_1C28CD5D0();
  unint64_t v451 = MEMORY[0x1E4FBC860];
  unint64_t v452 = MEMORY[0x1E4FBC860];
  sub_1C28CCDC0();
  uint64_t v83 = v418;
  sub_1C2815D5C(v418, (uint64_t)v59);
  v444 = v57;
  sub_1C2815D5C(v83, (uint64_t)v57);
  unint64_t v84 = sub_1C28CCE00();
  os_log_type_t v85 = sub_1C28CDCD0();
  int v86 = v85;
  BOOL v87 = os_log_type_enabled(v84, v85);
  uint64_t v442 = AssociatedConformanceWitness;
  uint64_t v428 = v52;
  v382 = v51;
  uint64_t v397 = v60;
  if (v87)
  {
    uint64_t v88 = swift_slowAlloc();
    v443 = (void (**)(void, void, void))swift_slowAlloc();
    v446 = v443;
    *(_DWORD *)uint64_t v88 = 136315650;
    LODWORD(v439) = v86;
    uint64_t v89 = sub_1C28CE830();
    id v448 = (id)sub_1C27D36AC(v89, v90, (uint64_t *)&v446);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v88 + 12) = 2080;
    id v448 = *(id *)&v59[*(int *)(v52 + 20) + 8];
    uint64_t v91 = v448;
    sub_1C2817344();
    id v92 = v91;
    uint64_t v93 = sub_1C28CD750();
    id v448 = (id)sub_1C27D36AC(v93, v94, (uint64_t *)&v446);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C28174D4((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for DatabaseState);
    *(_WORD *)(v88 + 22) = 2080;
    uint64_t v95 = (uint64_t)v444;
    sub_1C28CCA50();
    uint64_t v96 = sub_1C28CC7C0();
    (*(void (**)(char *, uint64_t))(v393 + 8))(v51, v388);
    id v448 = (id)v96;
    uint64_t v97 = v84;
    uint64_t v98 = sub_1C28CD750();
    id v448 = (id)sub_1C27D36AC(v98, v99, (uint64_t *)&v446);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    sub_1C28174D4(v95, (uint64_t (*)(void))type metadata accessor for DatabaseState);
    _os_log_impl(&dword_1C27B7000, v84, (os_log_type_t)v439, "[%s]: Computing work needed from %s to %s", (uint8_t *)v88, 0x20u);
    uint64_t v100 = v443;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v100, -1, -1);
    uint64_t v101 = v88;
    uint64_t AssociatedConformanceWitness = v442;
    MEMORY[0x1C87609B0](v101, -1, -1);

    (*(void (**)(char *, uint64_t))(v397 + 8))(v82, v432);
  }
  else
  {
    sub_1C28174D4((uint64_t)v59, (uint64_t (*)(void))type metadata accessor for DatabaseState);
    sub_1C28174D4((uint64_t)v444, (uint64_t (*)(void))type metadata accessor for DatabaseState);

    (*(void (**)(char *, uint64_t))(v60 + 8))(v82, v432);
  }
  uint64_t v102 = v427;
  uint64_t v103 = swift_bridgeObjectRetain();
  uint64_t v104 = MEMORY[0x1C875EFA0](v103, v27);
  uint64_t v106 = v418;
  uint64_t v107 = v431;
  uint64_t v109 = v437;
  uint64_t v108 = (uint64_t)v438;
  uint64_t v110 = v430;
  if (v104)
  {
    uint64_t v111 = 0;
    v434 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
    v443 = (void (**)(void, void, void))(v436 + 16);
    v433 = (void (**)(uint64_t, char *, uint64_t))(v436 + 32);
    v439 = (void (**)(uint64_t, uint64_t))(v436 + 8);
    uint64_t v422 = AssociatedConformanceWitness + 56;
    v419 = (void (**)(char *, uint64_t))(v397 + 8);
    v413 = &v449;
    uint64_t v435 = AssociatedConformanceWitness + 32;
    uint64_t v417 = AssociatedConformanceWitness + 24;
    v421 = (void (**)(char *, uint64_t, uint64_t))(v420 + 2);
    ++v420;
    v409 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v395 + 56);
    v402 = (void (**)(char *, char *, uint64_t))(v395 + 16);
    v408 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v395 + 48);
    v396 = (void (**)(char *, uint64_t, uint64_t))(v395 + 32);
    v394 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v414 + 56);
    v404 = (void (**)(char *, uint64_t))(v414 + 8);
    v403 = (void (**)(char *, uint64_t))(v395 + 8);
    uint64_t v365 = v429 + 32;
    v361 = (void (**)(char *, uint64_t))(v393 + 8);
    *(void *)&long long v105 = 136315394;
    long long v411 = v105;
    uint64_t v384 = MEMORY[0x1E4FBC840] + 8;
    *(void *)&long long v105 = 136315906;
    long long v374 = v105;
    uint64_t v369 = MEMORY[0x1E4FBC838] + 8;
    while (1)
    {
      char v113 = sub_1C28CD9C0();
      sub_1C28CD960();
      if (v113)
      {
        unint64_t v114 = v102
             + ((*(unsigned __int8 *)(v436 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v436 + 80))
             + *(void *)(v436 + 72) * v111;
        uint64_t v115 = v111;
        uint64_t v116 = *(void (**)(char *, unint64_t, uint64_t))(v436 + 16);
        v116(v110, v114, v27);
      }
      else
      {
        v444 = (char *)v111;
        uint64_t result = sub_1C28CE140();
        if (v362 != 8) {
          goto LABEL_139;
        }
        v446 = (void *)result;
        uint64_t v116 = (void (*)(char *, unint64_t, uint64_t))*v443;
        (*v443)(v110, &v446, v27);
        swift_unknownObjectRelease();
        uint64_t v115 = (uint64_t)v444;
      }
      BOOL v117 = __OFADD__(v115, 1);
      uint64_t v118 = (uint64_t *)(v115 + 1);
      v444 = (char *)v118;
      if (v117)
      {
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
        goto LABEL_138;
      }
      (*v433)(v109, v110, v27);
      char v119 = v434(v27, AssociatedConformanceWitness);
      sub_1C2815D5C(v106, v108);
      if ((v119 & 1) == 0) {
        break;
      }
      uint64_t v120 = v108;
      char v121 = *(unsigned char *)(v108 + *(int *)(v428 + 24));
      sub_1C28174D4(v120, (uint64_t (*)(void))type metadata accessor for DatabaseState);
      if (v121) {
        goto LABEL_16;
      }
      (*v439)(v109, v27);
LABEL_7:
      uint64_t v111 = (uint64_t)v444;
LABEL_8:
      uint64_t v112 = MEMORY[0x1C875EFA0](v102, v27);
      uint64_t v108 = (uint64_t)v438;
      if (v111 == v112) {
        goto LABEL_122;
      }
    }
    sub_1C28174D4(v108, (uint64_t (*)(void))type metadata accessor for DatabaseState);
LABEL_16:
    uint64_t v122 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 56))(v441, v27, AssociatedConformanceWitness);
    swift_release();
    if (v122)
    {
      uint64_t v123 = v416;
      sub_1C28CCDC0();
      v116(v107, v109, v27);
      unint64_t v124 = sub_1C28CCE00();
      os_log_type_t v125 = sub_1C28CDCD0();
      if (os_log_type_enabled(v124, v125))
      {
        uint64_t v126 = swift_slowAlloc();
        v414 = (char *)swift_slowAlloc();
        v446 = v414;
        *(_DWORD *)uint64_t v126 = v411;
        uint64_t v127 = sub_1C28CE830();
        id v448 = (id)sub_1C27D36AC(v127, v128, (uint64_t *)&v446);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v126 + 12) = 2080;
        uint64_t v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v442 + 24))(v27, v442);
        id v448 = (id)sub_1C27D36AC(v129, v130, (uint64_t *)&v446);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        uint64_t v131 = *v439;
        (*v439)((uint64_t)v107, v27);
        _os_log_impl(&dword_1C27B7000, v124, v125, "[%s]: Creating work request for unanchored configuration: %s", (uint8_t *)v126, 0x16u);
        uint64_t v132 = v414;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v132, -1, -1);
        uint64_t v133 = v126;
        uint64_t v102 = v427;
        MEMORY[0x1C87609B0](v133, -1, -1);
      }
      else
      {
        uint64_t v131 = *v439;
        (*v439)((uint64_t)v107, v27);
      }

      (*v419)(v123, v432);
      uint64_t v144 = v423;
      uint64_t v145 = v418;
      uint64_t v109 = v437;
      sub_1C2814BF4(v441, v418, v437, v423);
      uint64_t v146 = v425;
      (*v421)(v424, v144, v425);
      sub_1C28CDA30();
      sub_1C28CD9F0();
      uint64_t v147 = v146;
      uint64_t v106 = v145;
      (*v420)(v144, v147);
      goto LABEL_24;
    }
    uint64_t v134 = *(void *)(v106 + *(int *)(v428 + 20));
    uint64_t v135 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 24);
    uint64_t v136 = v135(v27, AssociatedConformanceWitness);
    uint64_t v138 = *(void *)(v134 + 16);
    v414 = (char *)v135;
    if (v138 && (unint64_t v139 = sub_1C27D3320(v136, v137), (v140 & 1) != 0))
    {
      uint64_t v141 = (uint64_t)v410;
      uint64_t v142 = v415;
      (*(void (**)(char *, unint64_t, uint64_t))(v395 + 16))(v410, *(void *)(v134 + 56) + *(void *)(v395 + 72) * v139, v415);
      uint64_t v143 = 0;
    }
    else
    {
      uint64_t v143 = 1;
      uint64_t v141 = (uint64_t)v410;
      uint64_t v142 = v415;
    }
    (*v409)(v141, v143, 1, v142);
    swift_bridgeObjectRelease();
    if ((*v408)(v141, 1, v142) == 1)
    {
      sub_1C2817534(v141, &qword_1EBB74AB0, MEMORY[0x1E4F67288]);
      uint64_t v148 = v407;
      sub_1C28CCDC0();
      v149 = v399;
      v116(v399, v437, v27);
      char v150 = sub_1C28CCE00();
      os_log_type_t v151 = sub_1C28CDCD0();
      if (os_log_type_enabled(v150, v151))
      {
        uint64_t v152 = swift_slowAlloc();
        uint64_t v153 = swift_slowAlloc();
        v446 = (void *)v153;
        *(_DWORD *)uint64_t v152 = v411;
        id v448 = (id)v440;
        swift_getMetatypeMetadata();
        uint64_t v154 = sub_1C28CD750();
        id v448 = (id)sub_1C27D36AC(v154, v155, (uint64_t *)&v446);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        *(_WORD *)(v152 + 12) = 2080;
        uint64_t v156 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
        id v448 = (id)sub_1C27D36AC(v156, v157, (uint64_t *)&v446);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        uint64_t v158 = *v439;
        (*v439)((uint64_t)v149, v27);
        _os_log_impl(&dword_1C27B7000, v150, v151, "[%s]: Creating work request for configuration without existing model: %s", (uint8_t *)v152, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v153, -1, -1);
        MEMORY[0x1C87609B0](v152, -1, -1);

        (*v419)(v407, v432);
      }
      else
      {
        uint64_t v158 = *v439;
        (*v439)((uint64_t)v149, v27);

        (*v419)(v148, v432);
      }
      uint64_t v102 = v427;
      uint64_t v183 = v423;
      uint64_t v109 = v437;
      sub_1C2814BF4(v441, v106, v437, v423);
      uint64_t v184 = v106;
      uint64_t v185 = v425;
      (*v421)(v424, v183, v425);
      sub_1C28CDA30();
      sub_1C28CD9F0();
      uint64_t v186 = v185;
      uint64_t v106 = v184;
      (*v420)(v183, v186);
      v158(v109, v27);
      goto LABEL_42;
    }
    uint64_t v159 = v412;
    v389 = *v396;
    v389(v412, v141, v142);
    char v160 = v405;
    sub_1C28CC9A0();
    uint64_t v161 = (uint64_t)v400;
    sub_1C28CC980();
    uint64_t v162 = v406;
    (*v394)(v161, 0, 1, v406);
    char v163 = sub_1C28CCA10();
    sub_1C2817534(v161, &qword_1EBB74AB8, MEMORY[0x1E4F67308]);
    uint64_t v164 = *v404;
    (*v404)(v160, v162);
    if (v163)
    {
      uint64_t v165 = sub_1C28CC990();
      unint64_t v167 = v166;
      id v168 = objc_allocWithZone(MEMORY[0x1E4F67A78]);
      uint64_t v169 = (void *)sub_1C28CC380();
      sub_1C27E2870(v165, v167);
      id v170 = objc_msgSend(v168, sel_initWithData_, v169);

      if (!v170)
      {
        v215 = v376;
        sub_1C28CCDC0();
        uint64_t v216 = v373;
        v116(v373, v437, v27);
        unsigned int v217 = sub_1C28CCE00();
        os_log_type_t v218 = sub_1C28CDCD0();
        if (os_log_type_enabled(v217, v218))
        {
          uint64_t v219 = swift_slowAlloc();
          uint64_t v401 = swift_slowAlloc();
          v446 = (void *)v401;
          *(_DWORD *)uint64_t v219 = v411;
          id v448 = (id)v440;
          swift_getMetatypeMetadata();
          uint64_t v220 = sub_1C28CD750();
          id v448 = (id)sub_1C27D36AC(v220, v221, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          *(_WORD *)(v219 + 12) = 2080;
          uint64_t v222 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
          id v448 = (id)sub_1C27D36AC(v222, v223, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          int v224 = *v439;
          (*v439)((uint64_t)v216, v27);
          _os_log_impl(&dword_1C27B7000, v217, v218, "[%s]: Creating work request for configuration with unreadable summary data: %s", (uint8_t *)v219, 0x16u);
          uint64_t v225 = v401;
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v225, -1, -1);
          MEMORY[0x1C87609B0](v219, -1, -1);

          (*v419)(v376, v432);
        }
        else
        {
          int v224 = *v439;
          (*v439)((uint64_t)v216, v27);

          (*v419)(v215, v432);
        }
        uint64_t v102 = v427;
        uint64_t v226 = v425;
        uint64_t v242 = v423;
        uint64_t v243 = v418;
        uint64_t v109 = v437;
        sub_1C2814BF4(v441, v418, v437, v423);
        (*v421)(v424, v242, v226);
        sub_1C28CDA30();
        sub_1C28CD9F0();
        (*v420)(v242, v226);
        (*v403)(v412, v415);
        v224(v109, v27);
        uint64_t v106 = v243;
        goto LABEL_25;
      }
      char v171 = v378(v170);
      uint64_t v102 = v427;
      uint64_t AssociatedConformanceWitness = v442;
      char v172 = v377;
      uint64_t v173 = v385;
      uint64_t v174 = v380;
      if (v171)
      {
        id v370 = v170;
        uint64_t v175 = (*(uint64_t (**)(char *, uint64_t))(v429 + 32))(v412, v440);
        uint64_t v109 = v437;
        if (!v175)
        {
          sub_1C28CCDC0();
          v116(v172, v109, v27);
          v248 = v174;
          uint64_t v249 = sub_1C28CCE00();
          os_log_type_t v250 = sub_1C28CDCD0();
          int v251 = v250;
          if (os_log_type_enabled(v249, v250))
          {
            uint64_t v252 = swift_slowAlloc();
            uint64_t v253 = swift_slowAlloc();
            v446 = (void *)v253;
            *(_DWORD *)uint64_t v252 = v411;
            uint64_t v254 = sub_1C28CE830();
            id v448 = (id)sub_1C27D36AC(v254, v255, (uint64_t *)&v446);
            LODWORD(v401) = v251;
            sub_1C28CDF90();
            swift_bridgeObjectRelease();
            *(_WORD *)(v252 + 12) = 2080;
            uint64_t v256 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
            id v448 = (id)sub_1C27D36AC(v256, v257, (uint64_t *)&v446);
            sub_1C28CDF90();
            swift_bridgeObjectRelease();
            uint64_t v131 = *v439;
            (*v439)((uint64_t)v172, v27);
            _os_log_impl(&dword_1C27B7000, v249, (os_log_type_t)v401, "[%s]: Creating work request for configuration with existing model without anchor: %s", (uint8_t *)v252, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C87609B0](v253, -1, -1);
            uint64_t v258 = v252;
            uint64_t v102 = v427;
            MEMORY[0x1C87609B0](v258, -1, -1);

            (*v419)(v380, v432);
          }
          else
          {
            uint64_t v131 = *v439;
            (*v439)((uint64_t)v172, v27);

            (*v419)(v248, v432);
          }
          uint64_t v266 = v423;
          sub_1C2814BF4(v441, v106, v109, v423);
          uint64_t v267 = v106;
          uint64_t v268 = v425;
          (*v421)(v424, v266, v425);
          sub_1C28CDA30();
          sub_1C28CD9F0();

          uint64_t v269 = v268;
          uint64_t v106 = v267;
          (*v420)(v266, v269);
          goto LABEL_115;
        }
        uint64_t v176 = (void *)v175;
        sub_1C28CCA50();
        id v177 = v176;
        uint64_t v178 = sub_1C28CC7C0();
        id v359 = v177;
        if (!v178)
        {

LABEL_61:
          unint64_t v259 = sub_1C28CC940();
          uint64_t v260 = sub_1C27E4CB0(v259);
          swift_bridgeObjectRelease();
          uint64_t v261 = sub_1C28CC7B0();
          uint64_t v108 = v261;
          uint64_t v401 = v261 & 0xC000000000000001;
          if ((v261 & 0xC000000000000001) != 0)
          {
            uint64_t v262 = sub_1C28CE060();
            if (v262)
            {
              uint64_t v358 = v260;
              unint64_t v447 = MEMORY[0x1E4FBC860];
              uint64_t v118 = (uint64_t *)&v447;
              uint64_t v102 = v262;
              sub_1C28CE1F0();
              uint64_t result = sub_1C28CE290();
              uint64_t v264 = v102;
              id v448 = (id)result;
              uint64_t v449 = v265;
              char v450 = 1;
              if ((v102 & 0x8000000000000000) == 0) {
                goto LABEL_69;
              }
              __break(1u);
LABEL_139:
              __break(1u);
LABEL_140:
              __break(1u);
              return result;
            }
          }
          else
          {
            uint64_t v270 = *(NSObject **)(v261 + 16);
            if (v270)
            {
              uint64_t v358 = v260;
              unint64_t v447 = MEMORY[0x1E4FBC860];
              uint64_t v118 = (uint64_t *)&v447;
              v271 = v270;
              sub_1C28CE1F0();
              uint64_t v272 = sub_1C28171CC(v108);
              uint64_t v264 = v271;
              id v448 = (id)v272;
              uint64_t v449 = v273;
              char v450 = v274 & 1;
LABEL_69:
              uint64_t v109 = 0;
              uint64_t v275 = v108 & 0xFFFFFFFFFFFFFF8;
              if (v108 < 0) {
                uint64_t v275 = v108;
              }
              uint64_t v386 = v275;
              os_log_t v371 = (os_log_t)(v108 + 64);
              uint64_t v357 = v108 + 88;
              uint64_t v276 = v108;
              v398 = (void (*)(char *, uint64_t))v264;
              v360 = (uint64_t *)v108;
              while (2)
              {
                if (v109 == v264) {
                  goto LABEL_132;
                }
                unint64_t v277 = (unint64_t)v448;
                uint64_t v102 = v449;
                char v278 = v450;
                uint64_t v279 = v276;
                sub_1C2817000((uint64_t)v448, v449, v450, v276);
                uint64_t v108 = v280;
                uint64_t v118 = (uint64_t *)&v447;
                sub_1C28CE1C0();
                sub_1C28CE200();
                sub_1C28CE210();
                uint64_t result = sub_1C28CE1D0();
                if (v401)
                {
                  if ((v278 & 1) == 0) {
                    goto LABEL_140;
                  }
                  uint64_t v281 = sub_1C28CE2D0();
                  uint64_t AssociatedConformanceWitness = v442;
                  if (v281) {
                    swift_isUniquelyReferenced_nonNull_native();
                  }
                  uint64_t v102 = v427;
                  sub_1C281727C();
                  uint64_t v118 = (uint64_t *)&v448;
                  uint64_t v108 = sub_1C28CD620();
                  sub_1C28CE340();
                  ((void (*)(void **, void))v108)(&v446, 0);
                  uint64_t v276 = v279;
                  uint64_t v264 = v398;
LABEL_73:
                  if (++v109 == v264)
                  {
                    sub_1C27D968C((uint64_t)v448, v449, v450);
                    unint64_t v291 = v447;
                    swift_bridgeObjectRelease();
                    uint64_t v106 = v418;
                    uint64_t v109 = v437;
                    uint64_t v260 = v358;
                    goto LABEL_102;
                  }
                  continue;
                }
                break;
              }
              if (v278)
              {
                if (sub_1C28CE2E0() != *(_DWORD *)(v279 + 36)) {
                  goto LABEL_133;
                }
                uint64_t v445 = sub_1C28CE2F0();
                sub_1C2817338(v277, v102, 1);
                sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
                swift_unknownObjectRetain();
                swift_dynamicCast();
                uint64_t v282 = v446;
                swift_unknownObjectRelease();
                uint64_t v118 = v360;
                sub_1C2872308((uint64_t)v282);
                uint64_t v108 = v283;

                if ((v108 & 1) == 0) {
                  goto LABEL_135;
                }
                uint64_t v108 = sub_1C28CE2C0();
                uint64_t v118 = (uint64_t *)sub_1C28CE310();
                uint64_t v285 = v284;
                sub_1C27D968C(v277, v102, 1);
                swift_unknownObjectRelease();
                sub_1C27D968C(v277, v102, 1);
                uint64_t v276 = v279;
                goto LABEL_93;
              }
              if ((v277 & 0x8000000000000000) != 0) {
                goto LABEL_134;
              }
              uint64_t v276 = v279;
              uint64_t v118 = (uint64_t *)(1 << *(unsigned char *)(v279 + 32));
              if ((uint64_t)v277 >= (uint64_t)v118) {
                goto LABEL_134;
              }
              uint64_t v108 = v277 >> 6;
              Class isa = v371[v277 >> 6].isa;
              if ((((unint64_t)isa >> v277) & 1) == 0) {
                goto LABEL_136;
              }
              if (*(_DWORD *)(v279 + 36) != v102) {
                goto LABEL_137;
              }
              unint64_t v287 = (unint64_t)isa & (-2 << (v277 & 0x3F));
              if (v287)
              {
                uint64_t v118 = (uint64_t *)(__clz(__rbit64(v287)) | v277 & 0xFFFFFFFFFFFFFFC0);
              }
              else
              {
                uint64_t v288 = v108 + 1;
                unint64_t v289 = ((unint64_t)v118 + 63) >> 6;
                if (v108 + 1 < v289)
                {
                  Class v290 = v371[v288].isa;
                  if (!v290)
                  {
                    uint64_t v288 = v108 + 2;
                    if (v108 + 2 >= v289) {
                      goto LABEL_92;
                    }
                    Class v290 = v371[v288].isa;
                    if (!v290)
                    {
                      while (v289 - 3 != v108)
                      {
                        Class v290 = *(Class *)(v357 + 8 * v108++);
                        if (v290)
                        {
                          sub_1C27D968C(v277, v102, 0);
                          uint64_t v276 = v279;
                          uint64_t v288 = v108 + 2;
                          goto LABEL_91;
                        }
                      }
                      sub_1C27D968C(v277, v102, 0);
                      uint64_t v276 = v279;
                      goto LABEL_92;
                    }
                  }
LABEL_91:
                  uint64_t v118 = (uint64_t *)(__clz(__rbit64((unint64_t)v290)) + (v288 << 6));
                }
              }
LABEL_92:
              uint64_t v285 = v102;
LABEL_93:
              uint64_t v264 = v398;
              id v448 = v118;
              uint64_t v449 = v285;
              char v450 = v278;
              uint64_t v102 = v427;
              uint64_t AssociatedConformanceWitness = v442;
              goto LABEL_73;
            }
          }
          swift_bridgeObjectRelease();
          unint64_t v291 = MEMORY[0x1E4FBC860];
LABEL_102:
          uint64_t v292 = sub_1C27E4CB0(v291);
          swift_bridgeObjectRelease();
          uint64_t v293 = sub_1C2815DC0(v292, v260);
          swift_bridgeObjectRelease();
          if ((v293 & 0xC000000000000001) != 0) {
            uint64_t v294 = sub_1C28CE060();
          }
          else {
            uint64_t v294 = *(void *)(v293 + 16);
          }
          uint64_t v295 = v367;
          uint64_t v296 = v368;
          swift_release();
          if (!v294)
          {
            (*v402)(v366, v412, v415);
            unint64_t v308 = v451;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v308 = sub_1C2801CD0(0, *(void *)(v308 + 16) + 1, 1, v308);
            }
            uint64_t v107 = v431;
            uint64_t v111 = (uint64_t)v444;
            unint64_t v310 = *(void *)(v308 + 16);
            unint64_t v309 = *(void *)(v308 + 24);
            if (v310 >= v309 >> 1) {
              unint64_t v308 = sub_1C2801CD0(v309 > 1, v310 + 1, 1, v308);
            }
            *(void *)(v308 + 16) = v310 + 1;
            uint64_t v311 = v395;
            unint64_t v312 = v308
                 + ((*(unsigned __int8 *)(v311 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v311 + 80))
                 + *(void *)(v311 + 72) * v310;
            uint64_t v313 = v415;
            v389((char *)v312, (uint64_t)v366, v415);

            unint64_t v451 = v308;
            (*v361)(v375, v388);
            (*(void (**)(char *, uint64_t))(v311 + 8))(v412, v313);
            (*v439)(v109, v27);
            uint64_t v110 = v430;
            goto LABEL_8;
          }
          sub_1C28CCDC0();
          v116(v295, v109, v27);
          uint64_t v297 = v296;
          v298 = sub_1C28CCE00();
          os_log_type_t v299 = sub_1C28CDCD0();
          int v300 = v299;
          if (os_log_type_enabled(v298, v299))
          {
            uint64_t v301 = swift_slowAlloc();
            uint64_t v302 = swift_slowAlloc();
            v446 = (void *)v302;
            *(_DWORD *)uint64_t v301 = v411;
            uint64_t v303 = sub_1C28CE830();
            id v448 = (id)sub_1C27D36AC(v303, v304, (uint64_t *)&v446);
            LODWORD(v401) = v300;
            sub_1C28CDF90();
            swift_bridgeObjectRelease();
            *(_WORD *)(v301 + 12) = 2080;
            uint64_t v305 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
            id v448 = (id)sub_1C27D36AC(v305, v306, (uint64_t *)&v446);
            sub_1C28CDF90();
            swift_bridgeObjectRelease();
            uint64_t v131 = *v439;
            (*v439)((uint64_t)v295, v27);
            _os_log_impl(&dword_1C27B7000, v298, (os_log_type_t)v401, "[%s]: Creating work request for configuration with database change: %s", (uint8_t *)v301, 0x16u);
            swift_arrayDestroy();
            MEMORY[0x1C87609B0](v302, -1, -1);
            uint64_t v307 = v301;
            uint64_t v102 = v427;
            MEMORY[0x1C87609B0](v307, -1, -1);

            (*v419)(v368, v432);
          }
          else
          {
            uint64_t v131 = *v439;
            (*v439)((uint64_t)v295, v27);

            (*v419)(v297, v432);
          }
          uint64_t v314 = v423;
          sub_1C2814BF4(v441, v106, v109, v423);
          uint64_t v315 = v106;
          uint64_t v316 = v425;
          (*v421)(v424, v314, v425);
          sub_1C28CDA30();
          sub_1C28CD9F0();

          uint64_t v317 = v316;
          uint64_t v106 = v315;
          (*v420)(v314, v317);
          (*v361)(v375, v388);
LABEL_115:
          (*v403)(v412, v415);
LABEL_24:
          v131(v109, v27);
LABEL_25:
          uint64_t v107 = v431;
          uint64_t v110 = v430;
          uint64_t v111 = (uint64_t)v444;
          uint64_t AssociatedConformanceWitness = v442;
          goto LABEL_8;
        }
        uint64_t v179 = (void *)v178;
        sub_1C27D1C9C(0, &qword_1EBB76D98);
        id v180 = v177;
        char v181 = sub_1C28CDF30();

        if ((v181 & 1) == 0) {
          goto LABEL_61;
        }
        if (sub_1C28CC960())
        {
          MEMORY[0x1C875EE90]();
          uint64_t v182 = v388;
          if (*(void *)((v452 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v452 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
            sub_1C28CD970();
          }
          sub_1C28CD9D0();
          sub_1C28CD940();

          (*v361)(v375, v182);
          (*v403)(v412, v415);
          (*v439)(v109, v27);
          goto LABEL_47;
        }
        v318 = v363;
        sub_1C28CCDC0();
        v319 = v364;
        v116(v364, v109, v27);
        v320 = sub_1C28CCE00();
        os_log_type_t v321 = sub_1C28CDCC0();
        int v322 = v321;
        if (os_log_type_enabled(v320, v321))
        {
          uint64_t v323 = swift_slowAlloc();
          uint64_t v401 = swift_slowAlloc();
          v446 = (void *)v401;
          *(_DWORD *)uint64_t v323 = v411;
          v398 = (void (*)(char *, uint64_t))v320;
          uint64_t v324 = sub_1C28CE830();
          LODWORD(v389) = v322;
          id v448 = (id)sub_1C27D36AC(v324, v325, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          *(_WORD *)(v323 + 12) = 2080;
          uint64_t v326 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
          id v448 = (id)sub_1C27D36AC(v326, v327, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          v414 = (char *)*v439;
          ((void (*)(char *, uint64_t))v414)(v319, v27);
          v320 = v398;
          _os_log_impl(&dword_1C27B7000, (os_log_t)v398, (os_log_type_t)v389, "[%s]: Creating work request for configuration with existing model without UUID: %s", (uint8_t *)v323, 0x16u);
          uint64_t v328 = v401;
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v328, -1, -1);
          uint64_t v329 = v323;
          uint64_t v102 = v427;
          MEMORY[0x1C87609B0](v329, -1, -1);
        }
        else
        {
          v414 = (char *)*v439;
          ((void (*)(char *, uint64_t))v414)(v319, v27);
        }

        (*v419)(v318, v432);
        uint64_t v330 = v423;
        sub_1C2814BF4(v441, v106, v109, v423);
        uint64_t v331 = v106;
        uint64_t v332 = v425;
        (*v421)(v424, v330, v425);
        sub_1C28CDA30();
        sub_1C28CD9F0();

        uint64_t v333 = v332;
        uint64_t v106 = v331;
        (*v420)(v330, v333);
        (*v361)(v375, v388);
      }
      else
      {
        sub_1C28CCDC0();
        uint64_t v227 = v372;
        uint64_t v109 = v437;
        v116(v372, v437, v27);
        id v228 = v170;
        v229 = sub_1C28CCE00();
        os_log_type_t v230 = sub_1C28CDCD0();
        int v231 = v230;
        if (os_log_type_enabled(v229, v230))
        {
          uint64_t v232 = swift_slowAlloc();
          uint64_t v401 = swift_slowAlloc();
          v446 = (void *)v401;
          *(_DWORD *)uint64_t v232 = v374;
          v398 = (void (*)(char *, uint64_t))v229;
          id v448 = (id)v440;
          swift_getMetatypeMetadata();
          uint64_t v233 = sub_1C28CD750();
          id v448 = (id)sub_1C27D36AC(v233, v234, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          LODWORD(v389) = v231;
          *(_WORD *)(v232 + 12) = 2048;
          id v235 = objc_msgSend(v228, sel_minimumSupportedVersion);

          id v448 = v235;
          sub_1C28CDF90();

          *(_WORD *)(v232 + 22) = 2048;
          id v236 = objc_msgSend(v228, sel_latestSupportedVersion);

          id v448 = v236;
          sub_1C28CDF90();

          *(_WORD *)(v232 + 32) = 2080;
          uint64_t v237 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
          id v448 = (id)sub_1C27D36AC(v237, v238, (uint64_t *)&v446);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          v414 = (char *)*v439;
          ((void (*)(char *, uint64_t))v414)(v227, v27);
          os_log_t v239 = (os_log_t)v398;
          _os_log_impl(&dword_1C27B7000, (os_log_t)v398, (os_log_type_t)v389, "[%s]: Creating work request for configuration with incompatible summary data version (%lld, %lld): %s", (uint8_t *)v232, 0x2Au);
          uint64_t v240 = v401;
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v240, -1, -1);
          uint64_t v241 = v232;
          uint64_t v102 = v427;
          MEMORY[0x1C87609B0](v241, -1, -1);

          (*v419)(v385, v432);
        }
        else
        {

          v414 = (char *)*v439;
          ((void (*)(char *, uint64_t))v414)(v227, v27);

          (*v419)(v173, v432);
        }
        uint64_t v244 = v423;
        sub_1C2814BF4(v441, v106, v109, v423);
        uint64_t v245 = v106;
        uint64_t v246 = v425;
        (*v421)(v424, v244, v425);
        sub_1C28CDA30();
        sub_1C28CD9F0();

        uint64_t v247 = v246;
        uint64_t v106 = v245;
        (*v420)(v244, v247);
      }
      (*v403)(v412, v415);
      ((void (*)(uint64_t, uint64_t))v414)(v109, v27);
LABEL_42:
      uint64_t AssociatedConformanceWitness = v442;
LABEL_48:
      uint64_t v107 = v431;
      uint64_t v110 = v430;
      goto LABEL_7;
    }
    char v187 = v390;
    sub_1C28CCDC0();
    v188 = v392;
    (*v402)(v392, v159, v142);
    uint64_t v189 = v391;
    v116(v391, v437, v27);
    uint64_t v190 = v187;
    uint64_t v191 = sub_1C28CCE00();
    os_log_type_t v192 = sub_1C28CDCD0();
    int v193 = v192;
    BOOL v194 = os_log_type_enabled(v191, v192);
    uint64_t v401 = (unint64_t)v403 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000;
    if (v194)
    {
      uint64_t v195 = swift_slowAlloc();
      v389 = (void (*)(char *, uint64_t, uint64_t))swift_slowAlloc();
      v446 = v389;
      *(_DWORD *)uint64_t v195 = v374;
      LODWORD(v386) = v193;
      id v448 = (id)v440;
      swift_getMetatypeMetadata();
      uint64_t v196 = sub_1C28CD750();
      os_log_t v371 = v191;
      id v448 = (id)sub_1C27D36AC(v196, v197, (uint64_t *)&v446);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v195 + 12) = 2080;
      v398 = (void (*)(char *, uint64_t))(v195 + 14);
      uint64_t v198 = v405;
      sub_1C28CC9A0();
      sub_1C280BE40(&qword_1EA3106B0, MEMORY[0x1E4F67308]);
      uint64_t v199 = v406;
      uint64_t v200 = sub_1C28CE610();
      unint64_t v202 = v201;
      v164(v198, v199);
      id v448 = (id)sub_1C27D36AC(v200, v202, (uint64_t *)&v446);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      v398 = *v403;
      v398(v392, v415);
      *(_WORD *)(v195 + 22) = 2080;
      id v370 = (id)(v195 + 24);
      sub_1C28CC980();
      uint64_t v203 = sub_1C28CE610();
      unint64_t v205 = v204;
      v164(v198, v199);
      id v448 = (id)sub_1C27D36AC(v203, v205, (uint64_t *)&v446);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v195 + 32) = 2080;
      v206 = v391;
      uint64_t AssociatedConformanceWitness = v442;
      uint64_t v207 = ((uint64_t (*)(uint64_t, uint64_t))v414)(v27, v442);
      id v448 = (id)sub_1C27D36AC(v207, v208, (uint64_t *)&v446);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      uint64_t v209 = *v439;
      (*v439)((uint64_t)v206, v27);
      os_log_t v210 = v371;
      _os_log_impl(&dword_1C27B7000, v371, (os_log_type_t)v386, "[%s]: Creating work request for configuration with incompatible version %s from %s: %s", (uint8_t *)v195, 0x2Au);
      uint64_t v211 = v389;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v211, -1, -1);
      MEMORY[0x1C87609B0](v195, -1, -1);

      (*v419)(v390, v432);
    }
    else
    {
      v398 = *v403;
      v398(v188, v142);
      uint64_t v209 = *v439;
      (*v439)((uint64_t)v189, v27);

      (*v419)(v190, v432);
      uint64_t AssociatedConformanceWitness = v442;
    }
    uint64_t v212 = v423;
    uint64_t v213 = v418;
    uint64_t v109 = v437;
    sub_1C2814BF4(v441, v418, v437, v423);
    uint64_t v214 = v425;
    (*v421)(v424, v212, v425);
    sub_1C28CDA30();
    sub_1C28CD9F0();
    (*v420)(v212, v214);
    v398(v412, v415);
    uint64_t v106 = v213;
    v209(v109, v27);
LABEL_47:
    uint64_t v102 = v427;
    goto LABEL_48;
  }
LABEL_122:
  swift_bridgeObjectRelease();
  uint64_t v109 = (uint64_t)v381;
  sub_1C28CCDC0();
  unint64_t v334 = v452;
  swift_bridgeObjectRetain_n();
  uint64_t v108 = sub_1C28CCE00();
  LOBYTE(v102) = sub_1C28CDCD0();
  if (os_log_type_enabled((os_log_t)v108, (os_log_type_t)v102))
  {
    uint64_t v118 = (uint64_t *)swift_slowAlloc();
    uint64_t v116 = (void (*)(char *, unint64_t, uint64_t))swift_slowAlloc();
    v446 = v116;
    *(_DWORD *)uint64_t v118 = 136315394;
    uint64_t v335 = sub_1C28CE830();
    id v448 = (id)sub_1C27D36AC(v335, v336, (uint64_t *)&v446);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *((_WORD *)v118 + 6) = 2048;
    if (v334 >> 62)
    {
LABEL_138:
      swift_bridgeObjectRetain();
      uint64_t v337 = sub_1C28CE3B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v337 = *(void *)((v334 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v338 = v397;
    swift_bridgeObjectRelease();
    id v448 = (id)v337;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, (os_log_t)v108, (os_log_type_t)v102, "[%s]: Found %ld configurations where models can be reused", (uint8_t *)v118, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v116, -1, -1);
    MEMORY[0x1C87609B0](v118, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v338 = v397;
  }
  v339 = *(void (**)(uint64_t, uint64_t))(v338 + 8);
  v339(v109, v432);
  v340 = v387;
  sub_1C28CCDC0();
  unint64_t v341 = v451;
  swift_bridgeObjectRetain_n();
  v342 = sub_1C28CCE00();
  os_log_type_t v343 = sub_1C28CDCD0();
  if (os_log_type_enabled(v342, v343))
  {
    uint64_t v344 = swift_slowAlloc();
    uint64_t v345 = swift_slowAlloc();
    v446 = (void *)v345;
    *(_DWORD *)uint64_t v344 = 136315394;
    uint64_t v346 = sub_1C28CE830();
    id v448 = (id)sub_1C27D36AC(v346, v347, (uint64_t *)&v446);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v344 + 12) = 2048;
    uint64_t v348 = *(void *)(v341 + 16);
    swift_bridgeObjectRelease();
    id v448 = (id)v348;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v342, v343, "[%s]: Found %ld configurations where anchor metadata needs to be updated", (uint8_t *)v344, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v345, -1, -1);
    MEMORY[0x1C87609B0](v344, -1, -1);

    v339((uint64_t)v387, v432);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    v339((uint64_t)v340, v432);
  }
  uint64_t v349 = v393;
  v350 = v382;
  uint64_t v351 = v453;
  swift_beginAccess();
  unint64_t v352 = v452;
  swift_beginAccess();
  unint64_t v353 = v451;
  sub_1C28CCA50();
  uint64_t v354 = sub_1C28CC7C0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v349 + 8))(v350, v388);
  v355 = v383;
  uint64_t *v383 = v351;
  v355[1] = v352;
  v355[2] = v353;
  v355[3] = v354;
  return result;
}

uint64_t sub_1C2813060()
{
  uint64_t v1 = sub_1C28CC760();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2813154@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = *(void *)(sub_1C28CC760() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = v2[4];
  uint64_t v12 = *(void *)((char *)v2 + v9);
  uint64_t v13 = *(uint64_t (**)(id))((char *)v2 + v10);
  uint64_t v14 = *(void *)((char *)v2 + v10 + 8);

  return sub_1C280F608(a1, v11, (uint64_t)v2 + v8, v12, v13, v14, v5, v6, a2);
}

uint64_t dispatch thunk of static DataTypesSharableModelGeneratorPipeline.anchor(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

void sub_1C281323C(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 24);
}

void *sub_1C2813288(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = (void *)a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v5 = v4;
  return a1;
}

void *sub_1C28132DC(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[3];
  id v5 = (void *)a2[3];
  a1[3] = v5;
  id v6 = v5;

  return a1;
}

uint64_t sub_1C2813368(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 24);
  *(_OWORD *)(a1 + 16) = a2[1];

  return a1;
}

uint64_t sub_1C28133C0(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_1C2813408(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1C2813448()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C28134EC(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    unsigned int v9 = a2[v5];
    unsigned int v10 = v9 - 3;
    if (v9 >= 3)
    {
      if (v5 <= 3) {
        uint64_t v11 = v5;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a2;
          goto LABEL_19;
        case 2:
          int v12 = *(unsigned __int16 *)a2;
          goto LABEL_19;
        case 3:
          int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a2;
LABEL_19:
          int v13 = (v12 | (v10 << (8 * v5))) + 3;
          unsigned int v9 = v12 + 3;
          if (v5 < 4) {
            unsigned int v9 = v13;
          }
          break;
        default:
          break;
      }
    }
    if (v9 == 2)
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v5) = 2;
    }
    else if (v9 == 1)
    {
      uint64_t v14 = (void *)*((void *)a2 + 1);
      *a1 = *(void *)a2;
      a1[1] = v14;
      *((unsigned char *)a1 + v5) = 1;
      swift_bridgeObjectRetain();
      id v15 = v14;
    }
    else
    {
      *a1 = *(void *)a2;
      *((unsigned char *)a1 + v5) = 0;
      swift_bridgeObjectRetain();
    }
  }
  return v3;
}

void sub_1C2813694(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v3 <= 0x10) {
    unint64_t v3 = 16;
  }
  unsigned int v4 = a1[v3];
  unsigned int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        int v8 = (v7 | (v5 << (8 * v3))) + 3;
        unsigned int v4 = v7 + 3;
        if (v3 < 4) {
          unsigned int v4 = v8;
        }
        break;
      default:
        break;
    }
  }
  if (v4 == 2)
  {
    unsigned int v10 = *(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8);
    v10();
  }
  else if (v4 == 1)
  {
    swift_bridgeObjectRelease();
    unsigned int v9 = (void *)*((void *)a1 + 1);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void *sub_1C281380C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    *((unsigned char *)a1 + v4) = 2;
  }
  else if (v5 == 1)
  {
    unsigned int v10 = (void *)*((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v10;
    *((unsigned char *)a1 + v4) = 1;
    swift_bridgeObjectRetain();
    id v11 = v10;
  }
  else
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v4) = 0;
    swift_bridgeObjectRetain();
  }
  return a1;
}

id *sub_1C2813974(id *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (id *)a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    }
    else if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      *((unsigned char *)a1 + v7) = 2;
    }
    else
    {
      *a1 = *(id *)a2;
      if (v13 == 1)
      {
        uint64_t v18 = (void *)*((void *)a2 + 1);
        a1[1] = v18;
        *((unsigned char *)a1 + v7) = 1;
        swift_bridgeObjectRetain();
        id v19 = v18;
      }
      else
      {
        *((unsigned char *)a1 + v7) = 0;
        swift_bridgeObjectRetain();
      }
    }
  }
  return a1;
}

_OWORD *sub_1C2813BD8(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 3;
  if (v5 >= 3)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 3;
        unsigned int v5 = v8 + 3;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 2)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 2;
  }
  else if (v5 == 1)
  {
    *a1 = *(_OWORD *)a2;
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *(void *)a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

id *sub_1C2813D28(id *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != (id *)a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = *((unsigned __int8 *)a1 + v7);
    unsigned int v9 = v8 - 3;
    if (v8 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *(unsigned __int8 *)a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (*((unsigned __int8 *)a1 + 2) << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 3;
          unsigned int v8 = v11 + 3;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 2)
    {
      (*(void (**)(id *, uint64_t))(v6 + 8))(a1, v5);
    }
    else if (v8 == 1)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 3;
    if (v13 >= 3)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_30;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_30;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_30;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_30:
          int v17 = (v16 | (v14 << (8 * v7))) + 3;
          unsigned int v13 = v16 + 3;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 2)
    {
      (*(void (**)(id *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 2;
    }
    else if (v13 == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *a1 = *(id *)a2;
    }
    *((unsigned char *)a1 + v7) = v18;
  }
  return a1;
}

uint64_t sub_1C2813F74(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 253) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 3) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 254;
}

void sub_1C28140A8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFE)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 253) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFD)
  {
    unsigned int v8 = a2 - 254;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C2814270);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C2814298(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 3;
  if (v4 >= 3)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 3;
        LODWORD(v4) = v7 + 3;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C2814350(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 2)
  {
    unsigned int v5 = a2 - 3;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 3;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 3;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

void *initializeBufferWithCopyOfBuffer for SharableModelsState(void *a1, void *a2)
{
  uint64_t v3 = (void *)a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  id v4 = v3;
  return a1;
}

void destroy for SharableModelsState(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 8);
}

void *assignWithCopy for SharableModelsState(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  id v4 = (void *)a1[1];
  unsigned int v5 = (void *)a2[1];
  a1[1] = v5;
  id v6 = v5;

  return a1;
}

uint64_t assignWithTake for SharableModelsState(uint64_t a1, _OWORD *a2)
{
  swift_bridgeObjectRelease();
  id v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for SharableModelsState(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SharableModelsState(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SharableModelsState()
{
  return &type metadata for SharableModelsState;
}

void *sub_1C28145C8(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (void *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C28CCA60();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = *(int *)(a3 + 24);
    unsigned int v10 = (void *)((char *)a1 + v8);
    int v11 = (void *)((char *)a2 + v8);
    int v12 = (void *)v11[1];
    *unsigned int v10 = *v11;
    v10[1] = v12;
    *((unsigned char *)a1 + v9) = *((unsigned char *)a2 + v9);
    swift_bridgeObjectRetain();
    id v13 = v12;
  }
  return a1;
}

void sub_1C28146AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CCA60();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(v5 + 8);
}

uint64_t sub_1C281472C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = *(int *)(a3 + 24);
  uint64_t v9 = (void *)(a1 + v7);
  unsigned int v10 = (void *)(a2 + v7);
  int v11 = (void *)v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  swift_bridgeObjectRetain();
  id v12 = v11;
  return a1;
}

uint64_t sub_1C28147C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unsigned int v10 = *(void **)(v8 + 8);
  int v11 = *(void **)(v9 + 8);
  *(void *)(v8 + 8) = v11;
  id v12 = v11;

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C281487C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 24);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  *(unsigned char *)(a1 + v7) = *(unsigned char *)(a2 + v7);
  return a1;
}

uint64_t sub_1C2814900(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCA60();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  swift_bridgeObjectRelease();
  unsigned int v10 = *(void **)(v8 + 8);
  *(void *)(v8 + 8) = *(void *)(v9 + 8);

  *(unsigned char *)(a1 + *(int *)(a3 + 24)) = *(unsigned char *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_1C28149B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C28149C4);
}

uint64_t sub_1C28149C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CCA60();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C2814A84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2814A98);
}

uint64_t sub_1C2814A98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C28CCA60();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C2814B54()
{
  uint64_t result = sub_1C28CCA60();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C2814BF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v59 = a4;
  uint64_t v60 = a1;
  uint64_t v5 = type metadata accessor for DataTypeContentConfigurationContext();
  MEMORY[0x1F4188790](v5 - 8);
  uint64_t v62 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_1C28CC810();
  uint64_t v58 = *(void *)(v61 - 8);
  MEMORY[0x1F4188790](v61);
  uint64_t v57 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2815CF8(0, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v54 = (uint64_t)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)&v48 - v11;
  uint64_t v13 = sub_1C28CCAB0();
  uint64_t v55 = *(void *)(v13 - 8);
  uint64_t v56 = v13;
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v53 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  int v17 = (char *)&v48 - v16;
  uint64_t v18 = sub_1C28CC7D0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v48 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v52 = AssociatedTypeWitness;
  uint64_t v50 = AssociatedConformanceWitness;
  uint64_t v63 = a3;
  uint64_t v24 = (void *)DataTypeContentConfiguration.hkType.getter(AssociatedTypeWitness, AssociatedConformanceWitness);
  sub_1C28CCA50();
  uint64_t v25 = sub_1C28CC7B0();
  uint64_t v26 = *(void (**)(char *, uint64_t))(v19 + 8);
  v26(v21, v18);
  id v27 = v24;
  uint64_t v28 = sub_1C28717D4(v27, v25);

  swift_bridgeObjectRelease();
  id v49 = v28;
  id v29 = v27;
  sub_1C28CCA50();
  sub_1C28CC7C0();
  v26(v21, v18);
  unint64_t v51 = v17;
  sub_1C28CCA70();
  uint64_t v30 = sub_1C28CCA30();
  if (*(void *)(v30 + 16))
  {
    id v31 = v29;
    unint64_t v32 = sub_1C2872308((uint64_t)v31);
    if (v33)
    {
      unint64_t v34 = v32;
      uint64_t v35 = *(void *)(v30 + 56);
      uint64_t v36 = sub_1C28CBFB0();
      uint64_t v37 = *(void *)(v36 - 8);
      (*(void (**)(char *, unint64_t, uint64_t))(v37 + 16))(v12, v35 + *(void *)(v37 + 72) * v34, v36);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v37 + 56))(v12, 0, 1, v36);
    }
    else
    {
      uint64_t v39 = sub_1C28CBFB0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v12, 1, 1, v39);
    }
  }
  else
  {
    uint64_t v38 = sub_1C28CBFB0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v12, 1, 1, v38);
  }
  swift_bridgeObjectRelease();
  uint64_t v41 = v55;
  uint64_t v40 = v56;
  uint64_t v42 = v51;
  (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v53, v51, v56);
  sub_1C2817440((uint64_t)v12, v54);
  uint64_t v43 = v57;
  sub_1C28CC7E0();
  uint64_t v44 = v58;
  uint64_t v46 = v61;
  uint64_t v45 = (uint64_t)v62;
  (*(void (**)(char *, char *, uint64_t))(v58 + 16))(v62, v43, v61);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 40))(v60, v45, v52);

  sub_1C28174D4(v45, (uint64_t (*)(void))type metadata accessor for DataTypeContentConfigurationContext);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v43, v46);
  sub_1C2817534((uint64_t)v12, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60]);
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v42, v40);
}

uint64_t sub_1C2815240@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  swift_bridgeObjectRetain();
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C2817E18(v6, a1, a2);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v7;
  return result;
}

uint64_t sub_1C28152BC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v110 = a3;
  uint64_t v108 = a2;
  uint64_t v103 = sub_1C28CCE10();
  uint64_t v8 = *(void *)(v103 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v103);
  uint64_t v11 = (char *)v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v104 = (char *)v90 - v12;
  sub_1C2815CF8(0, &qword_1EBB74AB0, MEMORY[0x1E4F67288], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v13 - 8);
  uint64_t v109 = (char *)v90 - v14;
  uint64_t v15 = sub_1C28CC9B0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v18 = MEMORY[0x1F4188790](v17);
  uint64_t v116 = (char *)v90 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v101 = (char *)v90 - v21;
  MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)v90 - v23;
  uint64_t result = *a1;
  uint64_t v26 = *(void *)(*a1 + 16);
  if (v26)
  {
    uint64_t v95 = v22;
    uint64_t v96 = v11;
    uint64_t v91 = a5;
    uint64_t v28 = *(void (**)(char *, unint64_t, uint64_t))(v16 + 16);
    uint64_t v27 = v16 + 16;
    unint64_t v29 = result + ((*(unsigned __int8 *)(v27 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v27 + 64));
    uint64_t v106 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v27 + 32);
    uint64_t v107 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v27 + 40);
    uint64_t v117 = *(void *)(v27 + 56);
    uint64_t v118 = v28;
    uint64_t v112 = (void (**)(char *, uint64_t))(v27 - 8);
    uint64_t v102 = (void (**)(char *, uint64_t))(v8 + 8);
    unint64_t v99 = (void (**)(unint64_t, char *, uint64_t))(v27 + 24);
    uint64_t v100 = (void (**)(unint64_t, char *, uint64_t))(v27 + 16);
    uint64_t v105 = a4 + 32;
    v90[1] = result;
    swift_bridgeObjectRetain();
    char v113 = 0;
    uint64_t v30 = (void *)MEMORY[0x1E4FBC868];
    *(void *)&long long v31 = 136315394;
    long long v97 = v31;
    uint64_t v93 = MEMORY[0x1E4FBC840] + 8;
    uint64_t v115 = v27;
    uint64_t v111 = v24;
    uint64_t v92 = a4;
    while (1)
    {
      v118(v24, v29, v15);
      uint64_t v32 = sub_1C28CC930();
      uint64_t v34 = v30[2];
      uint64_t v114 = v26;
      if (v34 && (unint64_t v35 = sub_1C27D3320(v32, v33), (v36 & 1) != 0))
      {
        v118(v109, v30[7] + v35 * v117, v15);
        uint64_t v37 = 0;
      }
      else
      {
        uint64_t v37 = 1;
      }
      uint64_t v38 = (uint64_t)v109;
      (*v107)(v109, v37, 1, v15);
      swift_bridgeObjectRelease();
      int v39 = (*v106)(v38, 1, v15);
      sub_1C2817534(v38, &qword_1EBB74AB0, MEMORY[0x1E4F67288]);
      if (v39 != 1)
      {
        uint64_t v40 = v104;
        sub_1C28CCDC0();
        uint64_t v41 = v101;
        v118(v101, (unint64_t)v24, v15);
        uint64_t v42 = sub_1C28CCE00();
        os_log_type_t v43 = sub_1C28CDCC0();
        if (os_log_type_enabled(v42, v43))
        {
          uint64_t v44 = swift_slowAlloc();
          uint64_t v45 = swift_slowAlloc();
          char v119 = (void *)v45;
          *(_DWORD *)uint64_t v44 = v97;
          uint64_t v46 = sub_1C28CE830();
          *(void *)(v44 + 4) = sub_1C27D36AC(v46, v47, (uint64_t *)&v119);
          swift_bridgeObjectRelease();
          *(_WORD *)(v44 + 12) = 2080;
          uint64_t v48 = sub_1C28CC930();
          *(void *)(v44 + 14) = sub_1C27D36AC(v48, v49, (uint64_t *)&v119);
          swift_bridgeObjectRelease();
          (*v112)(v41, v15);
          _os_log_impl(&dword_1C27B7000, v42, v43, "[%s]: Found multiple models with same identifier: %s", (uint8_t *)v44, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v45, -1, -1);
          uint64_t v50 = v44;
          uint64_t v24 = v111;
          MEMORY[0x1C87609B0](v50, -1, -1);

          (*v102)(v104, v103);
        }
        else
        {
          (*v112)(v41, v15);

          (*v102)(v40, v103);
        }
      }
      uint64_t v51 = a4;
      uint64_t v52 = sub_1C28CC930();
      uint64_t v53 = v24;
      uint64_t v54 = v52;
      uint64_t v56 = v55;
      v118(v116, (unint64_t)v53, v15);
      int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v119 = v30;
      unint64_t v59 = sub_1C27D3320(v54, v56);
      uint64_t v60 = v30[2];
      BOOL v61 = (v58 & 1) == 0;
      uint64_t v62 = v60 + v61;
      if (__OFADD__(v60, v61)) {
        break;
      }
      char v63 = v58;
      if (v30[3] >= v62)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1C2875D60();
        }
      }
      else
      {
        sub_1C2872EFC(v62, isUniquelyReferenced_nonNull_native);
        unint64_t v64 = sub_1C27D3320(v54, v56);
        if ((v63 & 1) != (v65 & 1)) {
          goto LABEL_36;
        }
        unint64_t v59 = v64;
      }
      a4 = v51;
      uint64_t v66 = v119;
      uint64_t v67 = v113;
      if (v63)
      {
        (*v99)(v119[7] + v59 * v117, v116, v15);
      }
      else
      {
        v119[(v59 >> 6) + 8] |= 1 << v59;
        uint64_t v68 = (uint64_t *)(v66[6] + 16 * v59);
        *uint64_t v68 = v54;
        v68[1] = v56;
        (*v100)(v66[7] + v59 * v117, v116, v15);
        uint64_t v69 = v66[2];
        BOOL v70 = __OFADD__(v69, 1);
        uint64_t v71 = v69 + 1;
        if (v70) {
          goto LABEL_35;
        }
        v66[2] = v71;
        swift_bridgeObjectRetain();
      }
      uint64_t v30 = v119;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v24 = v111;
      uint64_t v72 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(a4 + 32))(v111, v110, a4);
      uint64_t v73 = (void *)v72;
      if (v67)
      {
        if (v72)
        {
          sub_1C27D1C9C(0, &qword_1EBB76D98);
          id v74 = v67;
          id v75 = v73;
          char v76 = sub_1C28CDC80();

          (*v112)(v24, v15);
          if (v76)
          {

            char v113 = v73;
          }
          else
          {
          }
        }
        else
        {
          id v98 = v67;
          uint64_t v77 = v96;
          sub_1C28CCDC0();
          uint64_t v78 = v95;
          v118(v95, (unint64_t)v24, v15);
          uint64_t v79 = sub_1C28CCE00();
          uint64_t v80 = sub_1C28CDCD0();
          if (os_log_type_enabled(v79, (os_log_type_t)v80))
          {
            uint64_t v81 = swift_slowAlloc();
            uint64_t v94 = swift_slowAlloc();
            char v119 = (void *)v94;
            *(_DWORD *)uint64_t v81 = v97;
            uint64_t v82 = sub_1C28CE830();
            *(void *)(v81 + 4) = sub_1C27D36AC(v82, v83, (uint64_t *)&v119);
            swift_bridgeObjectRelease();
            *(_WORD *)(v81 + 12) = 2080;
            uint64_t v84 = sub_1C28CC930();
            *(void *)(v81 + 14) = sub_1C27D36AC(v84, v85, (uint64_t *)&v119);
            swift_bridgeObjectRelease();
            int v86 = *v112;
            (*v112)(v78, v15);
            _os_log_impl(&dword_1C27B7000, v79, (os_log_type_t)v80, "[%s]: Found model without anchor: %s", (uint8_t *)v81, 0x16u);
            uint64_t v87 = v94;
            swift_arrayDestroy();
            MEMORY[0x1C87609B0](v87, -1, -1);
            MEMORY[0x1C87609B0](v81, -1, -1);

            (*v102)(v77, v103);
            uint64_t v24 = v111;
            v86(v111, v15);
            a4 = v92;
          }
          else
          {

            uint64_t v88 = *v112;
            (*v112)(v78, v15);
            (*v102)(v77, v103);
            uint64_t v24 = v111;
            v88(v111, v15);
          }
        }
      }
      else
      {
        (*v112)(v24, v15);
        char v113 = v73;
      }
      v29 += v117;
      uint64_t v26 = v114 - 1;
      if (v114 == 1)
      {
        uint64_t result = swift_bridgeObjectRelease();
        a5 = v91;
        uint64_t v89 = v113;
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    uint64_t result = sub_1C28CE680();
    __break(1u);
  }
  else
  {
    uint64_t v89 = 0;
    uint64_t v30 = (void *)MEMORY[0x1E4FBC868];
LABEL_33:
    *a5 = v30;
    a5[1] = v89;
  }
  return result;
}

void sub_1C2815CF8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C2815D5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for DatabaseState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2815DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  uint64_t v3 = a1;
  unint64_t v4 = a1 & 0xC000000000000001;
  if ((a2 & 0xC000000000000001) == 0)
  {
    if (!v4)
    {
      return sub_1C2816278(a1, a2);
    }
LABEL_7:
    return sub_1C28160F0(a1, a2);
  }
  if (v4)
  {
    if (a2 >= 0) {
      uint64_t v2 = a2 & 0xFFFFFFFFFFFFFF8;
    }
    uint64_t v5 = sub_1C28CE060();
    a2 = sub_1C2826E84(v2, v5);
    a1 = v3;
    goto LABEL_7;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
  uint64_t v7 = MEMORY[0x1E4FBC870];
  uint64_t v29 = MEMORY[0x1E4FBC870];
  sub_1C28CE050();
  if (!sub_1C28CE080()) {
    goto LABEL_34;
  }
  uint64_t v8 = v3 + 56;
  do
  {
    swift_dynamicCast();
    if (!*(void *)(v3 + 16)) {
      goto LABEL_12;
    }
    uint64_t v9 = sub_1C28CDF20();
    uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v11 = v9 & ~v10;
    if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
      goto LABEL_12;
    }
    id v12 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
    char v13 = sub_1C28CDF30();

    if ((v13 & 1) == 0)
    {
      uint64_t v14 = ~v10;
      while (1)
      {
        unint64_t v11 = (v11 + 1) & v14;
        if (((*(void *)(v8 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
          break;
        }
        id v15 = *(id *)(*(void *)(v3 + 48) + 8 * v11);
        char v16 = sub_1C28CDF30();

        if (v16) {
          goto LABEL_20;
        }
      }
LABEL_12:

      continue;
    }
LABEL_20:
    uint64_t v17 = v29;
    unint64_t v18 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v18)
    {
      sub_1C2827490(v18 + 1);
      uint64_t v17 = v29;
    }
    uint64_t result = sub_1C28CDF20();
    uint64_t v19 = v17 + 56;
    uint64_t v20 = -1 << *(unsigned char *)(v17 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v17 + 56 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v17 + 56 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          return result;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v19 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v19 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    *(void *)(*(void *)(v17 + 48) + 8 * v23) = v28;
    ++*(void *)(v17 + 16);
  }
  while (sub_1C28CE080());
  uint64_t v7 = v29;
LABEL_34:
  swift_release();
  return v7;
}

uint64_t sub_1C28160F0(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1C2816400((void *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_1C2816400((unint64_t *)v9, v5, v3, a2);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x1C87609B0](v9, -1, -1);
  }
  return v8;
}

uint64_t sub_1C2816278(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  v12[1] = *MEMORY[0x1E4F143B8];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x1F4188790](isStackAllocationSafe);
    bzero((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    sub_1C2816848((void *)((char *)v12 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, a2, v3);
    uint64_t v8 = v7;
    swift_release();
  }
  else
  {
    uint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v6);
    sub_1C2816848((unint64_t *)v9, v5, a2, v3);
    uint64_t v8 = v10;
    swift_release();
    MEMORY[0x1C87609B0](v9, -1, -1);
  }
  return v8;
}

void sub_1C2816400(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if ((a3 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1C28CE050();
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
    sub_1C27D0EB4(&qword_1EBB73CC8, (unint64_t *)&qword_1EBB75998);
    sub_1C28CDB30();
    uint64_t v4 = v40;
    uint64_t v35 = v41;
    uint64_t v5 = v42;
    uint64_t v6 = v43;
    uint64_t v7 = v44;
  }
  else
  {
    uint64_t v8 = -1 << *(unsigned char *)(a3 + 32);
    uint64_t v35 = a3 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    uint64_t v7 = v10 & *(void *)(a3 + 56);
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
  }
  uint64_t v33 = 0;
  int64_t v34 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v38 = a4 + 56;
  uint64_t v37 = v4;
LABEL_8:
  uint64_t v11 = v6;
  unint64_t v12 = v7;
  while (v4 < 0)
  {
    if (!sub_1C28CE080()) {
      goto LABEL_45;
    }
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
    swift_unknownObjectRetain();
    swift_dynamicCast();
    id v14 = v45;
    swift_unknownObjectRelease();
    uint64_t v6 = v11;
    uint64_t v7 = v12;
    if (!v45) {
      goto LABEL_45;
    }
LABEL_33:
    uint64_t v18 = sub_1C28CDF20();
    uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v20 = v18 & ~v19;
    unint64_t v21 = v20 >> 6;
    uint64_t v22 = 1 << v20;
    if (((1 << v20) & *(void *)(v38 + 8 * (v20 >> 6))) == 0) {
      goto LABEL_9;
    }
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
    id v23 = *(id *)(*(void *)(a4 + 48) + 8 * v20);
    char v24 = sub_1C28CDF30();

    if (v24)
    {

LABEL_41:
      uint64_t v4 = v37;
      unint64_t v30 = a1[v21];
      a1[v21] = v22 | v30;
      uint64_t v11 = v6;
      unint64_t v12 = v7;
      if ((v22 & v30) == 0)
      {
        if (!__OFADD__(v33++, 1)) {
          goto LABEL_8;
        }
        __break(1u);
        goto LABEL_45;
      }
    }
    else
    {
      uint64_t v25 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
      {
        unint64_t v27 = i & v25;
        if (((*(void *)(v38 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
          break;
        }
        id v28 = *(id *)(*(void *)(a4 + 48) + 8 * v27);
        char v29 = sub_1C28CDF30();

        if (v29)
        {

          unint64_t v21 = v27 >> 6;
          uint64_t v22 = 1 << v27;
          goto LABEL_41;
        }
      }
LABEL_9:

      uint64_t v11 = v6;
      uint64_t v4 = v37;
      unint64_t v12 = v7;
    }
  }
  if (v12)
  {
    uint64_t v7 = (v12 - 1) & v12;
    unint64_t v13 = __clz(__rbit64(v12)) | (v11 << 6);
    uint64_t v6 = v11;
LABEL_32:
    id v14 = *(id *)(*(void *)(v4 + 48) + 8 * v13);
    if (!v14) {
      goto LABEL_45;
    }
    goto LABEL_33;
  }
  int64_t v15 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v15 >= v34) {
      goto LABEL_45;
    }
    unint64_t v16 = *(void *)(v35 + 8 * v15);
    uint64_t v6 = v11 + 1;
    if (!v16)
    {
      uint64_t v6 = v11 + 2;
      if (v11 + 2 >= v34) {
        goto LABEL_45;
      }
      unint64_t v16 = *(void *)(v35 + 8 * v6);
      if (!v16)
      {
        uint64_t v6 = v11 + 3;
        if (v11 + 3 >= v34) {
          goto LABEL_45;
        }
        unint64_t v16 = *(void *)(v35 + 8 * v6);
        if (!v16)
        {
          uint64_t v6 = v11 + 4;
          if (v11 + 4 >= v34) {
            goto LABEL_45;
          }
          unint64_t v16 = *(void *)(v35 + 8 * v6);
          if (!v16)
          {
            uint64_t v6 = v11 + 5;
            if (v11 + 5 >= v34) {
              goto LABEL_45;
            }
            unint64_t v16 = *(void *)(v35 + 8 * v6);
            if (!v16)
            {
              uint64_t v17 = v11 + 6;
              while (v34 != v17)
              {
                unint64_t v16 = *(void *)(v35 + 8 * v17++);
                if (v16)
                {
                  uint64_t v6 = v17 - 1;
                  goto LABEL_31;
                }
              }
LABEL_45:
              sub_1C27D9684();
              swift_retain();
              sub_1C2816D7C(a1, a2, v33, a4);
              return;
            }
          }
        }
      }
    }
LABEL_31:
    uint64_t v7 = (v16 - 1) & v16;
    unint64_t v13 = __clz(__rbit64(v16)) + (v6 << 6);
    goto LABEL_32;
  }
  __break(1u);
}

void sub_1C2816848(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v6 = 0;
    uint64_t v53 = a4 + 56;
    uint64_t v7 = 1 << *(unsigned char *)(a4 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(a4 + 56);
    int64_t v54 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v56 = 0;
    uint64_t v61 = a3 + 56;
    while (1)
    {
      while (1)
      {
        if (v9)
        {
          uint64_t v57 = (v9 - 1) & v9;
          int64_t v59 = v6;
          unint64_t v10 = __clz(__rbit64(v9)) | (v6 << 6);
          uint64_t v11 = a4;
        }
        else
        {
          int64_t v12 = v6 + 1;
          uint64_t v11 = a4;
          if (__OFADD__(v6, 1))
          {
            __break(1u);
            goto LABEL_65;
          }
          if (v12 >= v54) {
            goto LABEL_63;
          }
          unint64_t v13 = *(void *)(v53 + 8 * v12);
          int64_t v14 = v6 + 1;
          if (!v13)
          {
            int64_t v14 = v12 + 1;
            if (v12 + 1 >= v54) {
              goto LABEL_63;
            }
            unint64_t v13 = *(void *)(v53 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v12 + 2;
              if (v12 + 2 >= v54) {
                goto LABEL_63;
              }
              unint64_t v13 = *(void *)(v53 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v12 + 3;
                if (v15 >= v54) {
                  goto LABEL_63;
                }
                unint64_t v13 = *(void *)(v53 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      goto LABEL_67;
                    }
                    if (v14 >= v54) {
                      goto LABEL_63;
                    }
                    unint64_t v13 = *(void *)(v53 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_22;
                    }
                  }
                }
                int64_t v14 = v15;
              }
            }
          }
LABEL_22:
          uint64_t v57 = (v13 - 1) & v13;
          int64_t v59 = v14;
          unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
        }
        id v16 = *(id *)(*(void *)(v11 + 48) + 8 * v10);
        uint64_t v17 = sub_1C28CDF20();
        uint64_t v18 = v5;
        uint64_t v19 = -1 << *(unsigned char *)(v5 + 32);
        unint64_t v20 = v17 & ~v19;
        unint64_t v21 = v20 >> 6;
        uint64_t v22 = 1 << v20;
        if (((1 << v20) & *(void *)(v61 + 8 * (v20 >> 6))) != 0) {
          break;
        }
LABEL_6:

        uint64_t v5 = v18;
        unint64_t v9 = v57;
        int64_t v6 = v59;
      }
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
      id v23 = *(id *)(*(void *)(v18 + 48) + 8 * v20);
      char v24 = sub_1C28CDF30();

      if ((v24 & 1) == 0)
      {
        uint64_t v25 = ~v19;
        for (unint64_t i = v20 + 1; ; unint64_t i = v27 + 1)
        {
          unint64_t v27 = i & v25;
          if (((*(void *)(v61 + (((i & v25) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v25)) & 1) == 0) {
            break;
          }
          uint64_t v5 = v18;
          id v28 = *(id *)(*(void *)(v18 + 48) + 8 * v27);
          char v29 = sub_1C28CDF30();

          if (v29)
          {

            unint64_t v21 = v27 >> 6;
            uint64_t v22 = 1 << v27;
            goto LABEL_30;
          }
        }
        goto LABEL_6;
      }

      uint64_t v5 = v18;
LABEL_30:
      unint64_t v9 = v57;
      int64_t v6 = v59;
      a1[v21] |= v22;
      BOOL v30 = __OFADD__(v56++, 1);
      if (v30) {
        goto LABEL_66;
      }
    }
  }
  int64_t v31 = 0;
  uint64_t v55 = a3 + 56;
  uint64_t v56 = 0;
  uint64_t v32 = 1 << *(unsigned char *)(a3 + 32);
  if (v32 < 64) {
    uint64_t v33 = ~(-1 << v32);
  }
  else {
    uint64_t v33 = -1;
  }
  unint64_t v34 = v33 & *(void *)(a3 + 56);
  int64_t v58 = (unint64_t)(v32 + 63) >> 6;
  uint64_t v35 = a4 + 56;
  while (1)
  {
    if (v34)
    {
      unint64_t v36 = __clz(__rbit64(v34));
      v34 &= v34 - 1;
      int64_t v62 = v31;
      unint64_t v37 = v36 | (v31 << 6);
      goto LABEL_55;
    }
    int64_t v38 = v31 + 1;
    if (__OFADD__(v31, 1))
    {
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
      goto LABEL_68;
    }
    if (v38 >= v58) {
      goto LABEL_63;
    }
    unint64_t v39 = *(void *)(v55 + 8 * v38);
    int64_t v40 = v31 + 1;
    if (!v39)
    {
      int64_t v40 = v31 + 2;
      if (v31 + 2 >= v58) {
        goto LABEL_63;
      }
      unint64_t v39 = *(void *)(v55 + 8 * v40);
      if (!v39)
      {
        int64_t v40 = v31 + 3;
        if (v31 + 3 >= v58) {
          goto LABEL_63;
        }
        unint64_t v39 = *(void *)(v55 + 8 * v40);
        if (!v39) {
          break;
        }
      }
    }
LABEL_54:
    unint64_t v34 = (v39 - 1) & v39;
    int64_t v62 = v40;
    unint64_t v37 = __clz(__rbit64(v39)) + (v40 << 6);
LABEL_55:
    unint64_t v60 = v37;
    id v42 = *(id *)(*(void *)(v5 + 48) + 8 * v37);
    uint64_t v43 = sub_1C28CDF20();
    uint64_t v44 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v45 = v43 & ~v44;
    if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
      goto LABEL_38;
    }
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
    id v46 = *(id *)(*(void *)(v4 + 48) + 8 * v45);
    char v47 = sub_1C28CDF30();

    if (v47)
    {
LABEL_60:

      int64_t v31 = v62;
      *(unint64_t *)((char *)a1 + ((v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v60;
      BOOL v30 = __OFADD__(v56++, 1);
      uint64_t v4 = a4;
      if (v30)
      {
        __break(1u);
LABEL_63:
        swift_retain();
        sub_1C2816D7C(a1, a2, v56, v5);
        return;
      }
    }
    else
    {
      uint64_t v48 = ~v44;
      while (1)
      {
        unint64_t v45 = (v45 + 1) & v48;
        uint64_t v4 = a4;
        if (((*(void *)(v35 + ((v45 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v45) & 1) == 0) {
          break;
        }
        id v49 = *(id *)(*(void *)(a4 + 48) + 8 * v45);
        char v50 = sub_1C28CDF30();

        if (v50) {
          goto LABEL_60;
        }
      }
LABEL_38:

      int64_t v31 = v62;
    }
  }
  uint64_t v41 = v31 + 4;
  if (v31 + 4 >= v58) {
    goto LABEL_63;
  }
  unint64_t v39 = *(void *)(v55 + 8 * v41);
  if (v39)
  {
    int64_t v40 = v31 + 4;
    goto LABEL_54;
  }
  while (1)
  {
    int64_t v40 = v41 + 1;
    if (__OFADD__(v41, 1)) {
      break;
    }
    if (v40 >= v58) {
      goto LABEL_63;
    }
    unint64_t v39 = *(void *)(v55 + 8 * v40);
    ++v41;
    if (v39) {
      goto LABEL_54;
    }
  }
LABEL_68:
  __break(1u);
}

uint64_t sub_1C2816D7C(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x1E4FBC870];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_1C28173AC();
  uint64_t result = sub_1C28CE100();
  uint64_t v9 = result;
  id v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1C28CDF20();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1C2816FD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C2836A60(a1);
  *a2 = result;
  return result;
}

void sub_1C2817000(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v5 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_1C28CE2B0();
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_19;
  }
  if (a3)
  {
LABEL_10:
    if (sub_1C28CE2E0() == *(_DWORD *)(a4 + 36))
    {
      sub_1C28CE2F0();
      sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      unint64_t v5 = sub_1C2872308((uint64_t)v10);
      char v7 = v6;

      if (v7) {
        goto LABEL_12;
      }
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
      return;
    }
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 64) >> a1) & 1) == 0)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
    __break(1u);
    goto LABEL_10;
  }
LABEL_12:
  uint64_t v8 = *(void **)(*(void *)(a4 + 48) + 8 * v5);

  id v9 = v8;
}

uint64_t sub_1C28171CC(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  id v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void sub_1C281727C()
{
  if (!qword_1EBB74C80)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB76D90);
    sub_1C27D1C9C(255, &qword_1EBB76DB8);
    sub_1C27D0EB4((unint64_t *)&qword_1EBB76B00, (unint64_t *)&qword_1EBB76D90);
    unint64_t v0 = sub_1C28CD630();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C80);
    }
  }
}

uint64_t sub_1C2817338(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_1C2817344()
{
  if (!qword_1EBB76DA0)
  {
    sub_1C27D1C9C(255, &qword_1EBB76D98);
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76DA0);
    }
  }
}

void sub_1C28173AC()
{
  if (!qword_1EA3106B8)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB75998);
    sub_1C27D0EB4(&qword_1EBB73CC8, (unint64_t *)&qword_1EBB75998);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3106B8);
    }
  }
}

uint64_t sub_1C2817440(uint64_t a1, uint64_t a2)
{
  sub_1C2815CF8(0, (unint64_t *)&qword_1EBB76B08, MEMORY[0x1E4F26E60], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C28174D4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2817534(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2815CF8(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_1C28175A4()
{
  uint64_t v1 = sub_1C28CCA60();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2817654@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(sub_1C28CCA60() - 8);
  unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = (*(void *)(v6 + 64) + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v2 + v8);
  unint64_t v10 = *(void **)(v2 + v8 + 8);

  return sub_1C280F160(a1, v2 + v7, v9, v10, v5, a2);
}

void sub_1C2817718(id a1)
{
}

uint64_t sub_1C2817724()
{
  uint64_t v1 = sub_1C28CC7D0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();

  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1C28177F8(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = *(void *)(sub_1C28CC7D0() - 8);
  uint64_t v7 = v2[4];
  unint64_t v8 = (void *)v2[5];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v6 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));

  sub_1C280E9D8(a1, v7, v8, v9, v5, a2);
}

id sub_1C2817890(id a1, char a2)
{
  if (a2) {
    return a1;
  }
  else {
    return (id)swift_bridgeObjectRetain();
  }
}

void sub_1C281789C()
{
  if (!qword_1EBB74C00)
  {
    sub_1C280C078(255, &qword_1EBB76D30, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    sub_1C2817990(255, (unint64_t *)&qword_1EBB74BE0, &qword_1EBB755A0, (uint64_t (*)(uint64_t))sub_1C2817A18, (void (*)(void))sub_1C2817A4C);
    sub_1C280C424();
    sub_1C2817AD4();
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74C00);
    }
  }
}

void sub_1C2817990(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t (*a4)(uint64_t), void (*a5)(void))
{
  if (!*a2)
  {
    sub_1C280C078(255, a3, a4, MEMORY[0x1E4F1AAE0]);
    a5();
    unint64_t v7 = sub_1C28CCF30();
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

void sub_1C2817A18(uint64_t a1)
{
}

unint64_t sub_1C2817A4C()
{
  unint64_t result = qword_1EBB75598;
  if (!qword_1EBB75598)
  {
    sub_1C280C078(255, &qword_1EBB755A0, (uint64_t (*)(uint64_t))sub_1C2817A18, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75598);
  }
  return result;
}

unint64_t sub_1C2817AD4()
{
  unint64_t result = qword_1EBB74BD8;
  if (!qword_1EBB74BD8)
  {
    sub_1C2817990(255, (unint64_t *)&qword_1EBB74BE0, &qword_1EBB755A0, (uint64_t (*)(uint64_t))sub_1C2817A18, (void (*)(void))sub_1C2817A4C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74BD8);
  }
  return result;
}

uint64_t sub_1C2817B64()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2817BA4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1C280E5A0(a1, *(void *)(v2 + 16), *(void **)(v2 + 24), a2);
}

void sub_1C2817BAC()
{
  if (!qword_1EBB75430)
  {
    sub_1C2817C88();
    sub_1C2815CF8(255, &qword_1EBB75678, MEMORY[0x1E4F67288], MEMORY[0x1E4FBB320]);
    sub_1C280BE40(&qword_1EBB75568, (void (*)(uint64_t))sub_1C2817C88);
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75430);
    }
  }
}

void sub_1C2817C88()
{
  if (!qword_1EBB75570)
  {
    sub_1C2815CF8(255, &qword_1EBB75678, MEMORY[0x1E4F67288], MEMORY[0x1E4FBB320]);
    unint64_t v0 = sub_1C28CD0A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75570);
    }
  }
}

void sub_1C2817D20()
{
  if (!qword_1EBB748D8)
  {
    sub_1C2817C88();
    sub_1C280BE40(&qword_1EBB75568, (void (*)(uint64_t))sub_1C2817C88);
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB748D8);
    }
  }
}

uint64_t sub_1C2817DBC()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2817DF4@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2815240(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

uint64_t sub_1C2817DFC()
{
  return swift_deallocObject();
}

uint64_t sub_1C2817E0C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_1C28152BC(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_1C2817E18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = sub_1C28CC9B0();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  unint64_t v36 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t result = MEMORY[0x1E4FBC860];
  uint64_t v37 = MEMORY[0x1E4FBC860];
  uint64_t v14 = *(void *)(a1 + 16);
  if (v14)
  {
    unint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    uint64_t v15 = v10 + 16;
    uint64_t v35 = v16;
    uint64_t v17 = *(unsigned __int8 *)(v15 + 64);
    uint64_t v18 = *(void *)(v15 + 56);
    uint64_t v29 = v7;
    uint64_t v30 = (v17 + 32) & ~v17;
    uint64_t v19 = a1 + v30;
    uint64_t v27 = v3;
    id v28 = (void (**)(char *, uint64_t))(v15 - 8);
    uint64_t v33 = a3;
    unint64_t v34 = (void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v31 = v15;
    uint64_t v32 = a2;
    v16(v12, a1 + v30, v7);
    while (1)
    {
      sub_1C28CC930();
      uint64_t v20 = a2;
      uint64_t v21 = v7;
      char v22 = sub_1C28CD810();
      swift_bridgeObjectRelease();
      if (v22)
      {
        char v23 = *v34;
        (*v34)(v36, v12, v21);
        uint64_t v24 = v37;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C28293C8(0, *(void *)(v24 + 16) + 1, 1);
          uint64_t v24 = v37;
        }
        unint64_t v26 = *(void *)(v24 + 16);
        unint64_t v25 = *(void *)(v24 + 24);
        if (v26 >= v25 >> 1)
        {
          sub_1C28293C8(v25 > 1, v26 + 1, 1);
          uint64_t v24 = v37;
        }
        *(void *)(v24 + 16) = v26 + 1;
        uint64_t v7 = v29;
        v23((char *)(v24 + v30 + v26 * v18), v36, v29);
        uint64_t v37 = v24;
        a2 = v32;
      }
      else
      {
        (*v28)(v12, v21);
        uint64_t v7 = v21;
        a2 = v20;
      }
      v19 += v18;
      if (!--v14) {
        break;
      }
      v35(v12, v19, v7);
    }
    return v37;
  }
  return result;
}

unint64_t sub_1C2818098()
{
  unint64_t result = qword_1EBB74C48;
  if (!qword_1EBB74C48)
  {
    sub_1C2815CF8(255, &qword_1EBB74C50, (uint64_t (*)(uint64_t))sub_1C2817344, MEMORY[0x1E4F1AC08]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74C48);
  }
  return result;
}

uint64_t sub_1C2818120()
{
  return swift_deallocObject();
}

uint64_t sub_1C2818130@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_1C280D18C(a1, a2);
}

uint64_t sub_1C2818138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C280D588(a1, a2);
}

uint64_t AdvertisableFeatureConfiguration.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdvertisableFeatureConfiguration.title.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*AdvertisableFeatureConfiguration.title.modify())()
{
  return nullsub_1;
}

uint64_t AdvertisableFeatureConfiguration.description.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t AdvertisableFeatureConfiguration.description.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*AdvertisableFeatureConfiguration.description.modify())()
{
  return nullsub_1;
}

void *AdvertisableFeatureConfiguration.accessoryImage.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  return v1;
}

void AdvertisableFeatureConfiguration.accessoryImage.setter(uint64_t a1)
{
  *(void *)(v1 + 32) = a1;
}

uint64_t (*AdvertisableFeatureConfiguration.accessoryImage.modify())()
{
  return nullsub_1;
}

uint64_t AdvertisableFeatureConfiguration.init(title:description:accessoryImage:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

void AdvertisableFeatureConfiguration.hash(into:)()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1C28CE720();
    id v2 = v1;
    sub_1C28CDF40();
  }
  else
  {
    sub_1C28CE720();
  }
}

uint64_t AdvertisableFeatureConfiguration.hashValue.getter()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1C28CE700();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE720();
  if (v1)
  {
    id v2 = v1;
    sub_1C28CDF40();
  }
  return sub_1C28CE740();
}

void sub_1C28184B8()
{
  uint64_t v1 = *(void **)(v0 + 32);
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_1C28CE720();
    id v2 = v1;
    sub_1C28CDF40();
  }
  else
  {
    sub_1C28CE720();
  }
}

uint64_t sub_1C28185A8()
{
  uint64_t v1 = *(void **)(v0 + 32);
  sub_1C28CE700();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE720();
  if (v1)
  {
    id v2 = v1;
    sub_1C28CDF40();
  }
  return sub_1C28CE740();
}

unint64_t static AdvertisableFeature.SourceProviderInfoPlistKey.getter()
{
  return 0xD000000000000028;
}

uint64_t AdvertisableFeature.Location.hash(into:)()
{
  return sub_1C28CE710();
}

BOOL static AdvertisableFeature.Location.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t AdvertisableFeature.Location.hashValue.getter()
{
  return sub_1C28CE740();
}

void *static AdvertisableFeature.Identifier.healthWelcomeFlowIdentifiers.getter()
{
  return &unk_1F1DD8CC0;
}

void *static AdvertisableFeature.Identifier.watchPairingFlowIdentifiers.getter()
{
  return &unk_1F1DD8CE8;
}

HealthExperience::AdvertisableFeature::Identifier_optional __swiftcall AdvertisableFeature.Identifier.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1C28CE460();
  result.value = swift_bridgeObjectRelease();
  char v5 = 6;
  if (v3 < 6) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

unint64_t AdvertisableFeature.Identifier.rawValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD000000000000018;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

HealthExperience::AdvertisableFeature::Identifier_optional sub_1C2818844(Swift::String *a1)
{
  return AdvertisableFeature.Identifier.init(rawValue:)(*a1);
}

unint64_t sub_1C2818850@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = AdvertisableFeature.Identifier.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1C2818878()
{
  return sub_1C28890A0();
}

uint64_t sub_1C2818880()
{
  return sub_1C289AA70();
}

uint64_t sub_1C2818888()
{
  return sub_1C28893B8();
}

uint64_t sub_1C2818890(char *a1, char *a2)
{
  return sub_1C27F2440(*a1, *a2);
}

uint64_t AdvertisableFeatureError.internalDescription.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

HealthExperience::AdvertisableFeatureError __swiftcall AdvertisableFeatureError.init(internalDescription:)(HealthExperience::AdvertisableFeatureError internalDescription)
{
  *uint64_t v1 = internalDescription;
  return internalDescription;
}

void static AdvertisableFeatureError.timedOut.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000013;
  a1[1] = 0x80000001C28DBE70;
}

uint64_t static AdvertisableFeatureError.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C28CE640();
  }
}

uint64_t sub_1C2818924(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1C28CE640();
  }
}

uint64_t _s16HealthExperience32AdvertisableFeatureConfigurationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  unint64_t v4 = (void *)a1[4];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = (void *)a2[4];
  BOOL v8 = *a1 == *a2 && a1[1] == a2[1];
  if (v8 || (v9 = sub_1C28CE640(), uint64_t result = 0, (v9 & 1) != 0))
  {
    BOOL v11 = v2 == v5 && v3 == v6;
    if (v11 || (v12 = sub_1C28CE640(), uint64_t result = 0, (v12 & 1) != 0))
    {
      if (v4)
      {
        if (v7)
        {
          sub_1C2819D3C();
          id v13 = v7;
          id v14 = v4;
          char v15 = sub_1C28CDF30();

          if (v15) {
            return 1;
          }
        }
      }
      else if (!v7)
      {
        return 1;
      }
      return 0;
    }
  }
  return result;
}

uint64_t _s16HealthExperience37AdvertisableFeaturePostCommitWorkItemO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC330();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
  MEMORY[0x1F4188790](v8 - 8);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2819D7C();
  uint64_t v12 = MEMORY[0x1F4188790](v11 - 8);
  id v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_1C2819DE0(a1, (uint64_t)v14);
  sub_1C2819DE0(a2, v15);
  unint64_t v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) == 1)
  {
    char v17 = 1;
    int v18 = v16(v15, 1, v4);
    uint64_t v19 = (uint64_t (*)(void))type metadata accessor for AdvertisableFeaturePostCommitWorkItem;
    if (v18 == 1) {
      goto LABEL_8;
    }
  }
  else
  {
    sub_1C2819DE0((uint64_t)v14, (uint64_t)v10);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      char v17 = MEMORY[0x1C875D880](v10, v7);
      uint64_t v20 = *(void (**)(char *, uint64_t))(v5 + 8);
      v20(v7, v4);
      v20(v10, v4);
      uint64_t v19 = (uint64_t (*)(void))type metadata accessor for AdvertisableFeaturePostCommitWorkItem;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  char v17 = 0;
  uint64_t v19 = (uint64_t (*)(void))sub_1C2819D7C;
LABEL_8:
  sub_1C2819E44((uint64_t)v14, v19);
  return v17 & 1;
}

unint64_t sub_1C2818CE0()
{
  unint64_t result = qword_1EA3106C0;
  if (!qword_1EA3106C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3106C0);
  }
  return result;
}

unint64_t sub_1C2818D38()
{
  unint64_t result = qword_1EA3106C8;
  if (!qword_1EA3106C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3106C8);
  }
  return result;
}

unint64_t sub_1C2818D90()
{
  unint64_t result = qword_1EA3106D0;
  if (!qword_1EA3106D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3106D0);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for AdvertisableFeaturePostCommitWorkItem(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    uint64_t v7 = sub_1C28CC330();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for AdvertisableFeaturePostCommitWorkItem(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC330();
  uint64_t v5 = *(void *)(v2 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
    return v4(a1, v2);
  }
  return result;
}

void *initializeWithCopy for AdvertisableFeaturePostCommitWorkItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC330();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for AdvertisableFeaturePostCommitWorkItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC330();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for AdvertisableFeaturePostCommitWorkItem(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC330();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for AdvertisableFeaturePostCommitWorkItem(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC330();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeaturePostCommitWorkItem(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C281951C);
}

uint64_t sub_1C281951C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC330();
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeaturePostCommitWorkItem(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C281959C);
}

uint64_t sub_1C281959C(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  uint64_t v6 = sub_1C28CC330();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, v5, a3, v6);
}

uint64_t sub_1C281961C(uint64_t a1)
{
  uint64_t v2 = sub_1C28CC330();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);

  return v3(a1, 1, v2);
}

uint64_t sub_1C2819684(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC330();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, 1, v4);
}

uint64_t type metadata accessor for AdvertisableFeaturePostCommitWorkItem()
{
  uint64_t result = qword_1EA3106D8;
  if (!qword_1EA3106D8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2819740()
{
  uint64_t result = sub_1C28CC330();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

void destroy for AdvertisableFeatureConfiguration(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void **)(a1 + 32);
}

void *initializeWithCopy for AdvertisableFeatureConfiguration(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v6 = v5;
  return a1;
}

void *assignWithCopy for AdvertisableFeatureConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a1[4];
  uint64_t v5 = (void *)a2[4];
  a1[4] = v5;
  id v6 = v5;

  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AdvertisableFeatureConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void **)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);

  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeatureConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeatureConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeatureConfiguration()
{
  return &type metadata for AdvertisableFeatureConfiguration;
}

ValueMetadata *type metadata accessor for AdvertisableFeature()
{
  return &type metadata for AdvertisableFeature;
}

unsigned char *storeEnumTagSinglePayload for AdvertisableFeature.Location(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2819ABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeature.Location()
{
  return &type metadata for AdvertisableFeature.Location;
}

unsigned char *storeEnumTagSinglePayload for AdvertisableFeature.Identifier(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2819BC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeature.Identifier()
{
  return &type metadata for AdvertisableFeature.Identifier;
}

void *initializeBufferWithCopyOfBuffer for AdvertisableFeatureError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for AdvertisableFeatureError()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for AdvertisableFeatureError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for AdvertisableFeatureError(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AdvertisableFeatureError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AdvertisableFeatureError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AdvertisableFeatureError()
{
  return &type metadata for AdvertisableFeatureError;
}

unint64_t sub_1C2819D3C()
{
  unint64_t result = qword_1EBB75CA0;
  if (!qword_1EBB75CA0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB75CA0);
  }
  return result;
}

void sub_1C2819D7C()
{
  if (!qword_1EA3106E8)
  {
    type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EA3106E8);
    }
  }
}

uint64_t sub_1C2819DE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AdvertisableFeaturePostCommitWorkItem();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2819E44(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

UIImage __swiftcall CNContact.photoOrMonogram(size:)(CGSize size)
{
  unint64_t v2 = v1;
  double height = size.height;
  double width = size.width;
  id v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F1BB20]), sel_init);
  unsigned int v6 = self;
  id v7 = objc_msgSend(v6, sel_scopeWithPointSize_scale_rightToLeft_style_, _sSo13UIApplicationC16HealthExperienceE031userInterfaceLayoutDirectionForB3AppSo06UIUserefG0VvgZ_0(), 0, width, height, 3.0);
  sub_1C27D87FC();
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1C28D19D0;
  *(void *)(v8 + 32) = v2;
  sub_1C28CD940();
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F80);
  id v9 = v2;
  int v10 = (void *)sub_1C28CD910();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v5, sel_avatarImageForContacts_scope_, v10, v7);

  swift_unknownObjectRelease();
  return (UIImage)v11;
}

uint64_t CNContact.localizedShortName.getter()
{
  return sub_1C281A028(MEMORY[0x1E4F65798]);
}

uint64_t CNContact.localizedFullName.getter()
{
  return sub_1C281A028(MEMORY[0x1E4F65790]);
}

uint64_t sub_1C281A028(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  sub_1C28CCBA0();
  id v3 = objc_msgSend(v1, sel_givenName);
  uint64_t v4 = sub_1C28CD730();
  uint64_t v6 = v5;

  id v7 = objc_msgSend(v1, sel_familyName);
  uint64_t v8 = sub_1C28CD730();
  uint64_t v10 = v9;

  uint64_t v11 = a1(v4, v6, v8, v10);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11;
}

uint64_t CNContact.contactPhotoPublisherIfExistsElseMonogram()()
{
  sub_1C281AB0C();
  uint64_t v2 = v1;
  uint64_t v3 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)(swift_allocObject() + 16) = v0;
  sub_1C281AE04(0, &qword_1EA3106F8, (unint64_t *)&qword_1EBB75CA0);
  sub_1C281AB88();
  id v6 = v0;
  sub_1C28CD260();
  sub_1C281AC9C(&qword_1EA310708, (void (*)(uint64_t))sub_1C281AB0C);
  uint64_t v7 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return v7;
}

uint64_t sub_1C281A288(void *a1)
{
  sub_1C281AE04(0, &qword_1EA310730, (unint64_t *)&qword_1EBB76F80);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  id v6 = (char *)v9 - v5;
  v9[1] = a1;
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76F80);
  id v7 = a1;
  sub_1C28CD210();
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75CA0);
  sub_1C28CD1E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

UIImage sub_1C281A3E8@<X0>(UIImage *a1@<X8>)
{
  result.super.Class isa = CNContact.photoOrMonogram(size:)((CGSize)__PAIR128__(0x4062C00000000000, 0x4062C00000000000)).super.isa;
  a1->super.Class isa = result.super.isa;
  return result;
}

uint64_t CNContact.termsOfAddressOptions.getter()
{
  sub_1C28CC1E0();
  id v1 = objc_msgSend(v0, sel_termsOfAddress);
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EA310710);
  unint64_t v2 = sub_1C28CD920();

  uint64_t v3 = sub_1C281A5A0(v2);
  swift_bridgeObjectRelease();
  sub_1C281AC38(0, &qword_1EA310718, MEMORY[0x1E4F273D8], MEMORY[0x1E4FBBE00]);
  uint64_t v4 = *(void *)(sub_1C28CC1F0() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1C28D23F0;
  *(void *)(v6 + v5) = v3;
  (*(void (**)(void))(v4 + 104))();
  return sub_1C28CC1D0();
}

uint64_t sub_1C281A5A0(unint64_t a1)
{
  sub_1C281AC38(0, &qword_1EA310720, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB718]);
  uint64_t v3 = MEMORY[0x1F4188790](v2 - 8);
  unint64_t v5 = (char *)&v35 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v3);
  uint64_t v8 = (char *)&v35 - v7;
  uint64_t v9 = MEMORY[0x1F4188790](v6);
  uint64_t v11 = (char *)&v35 - v10;
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)&v35 - v12;
  uint64_t v14 = sub_1C28CBFE0();
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v35 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1F4188790](v15);
  unint64_t v39 = (char *)&v35 - v17;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1C28CE3B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v18 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (!v18) {
    return v19;
  }
  uint64_t v40 = MEMORY[0x1E4FBC860];
  uint64_t result = sub_1C28293E8(0, v18 & ~(v18 >> 63), 0);
  if (v18 < 0)
  {
    __break(1u);
  }
  else
  {
    if ((a1 & 0xC000000000000001) == 0)
    {
      unint64_t v26 = (void **)(a1 + 32);
      uint64_t v27 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v38 + 56);
      uint64_t v35 = v5;
      unint64_t v36 = v27;
      id v28 = (uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
      unint64_t v39 = (char *)(v38 + 56);
      uint64_t v29 = (void (**)(char *, char *, uint64_t))(v38 + 32);
      while (1)
      {
        uint64_t v30 = *v26;
        ((void (*)(char *, uint64_t, uint64_t, uint64_t))v36)(v8, 1, 1, v14);
        sub_1C281AC9C(&qword_1EA310728, MEMORY[0x1E4F26EB0]);
        id v31 = v30;
        sub_1C28CE440();
        sub_1C281ACE4((uint64_t)v8, (uint64_t)v5);
        uint64_t result = (*v28)(v5, 1, v14);
        if (result == 1) {
          break;
        }
        sub_1C281AD78((uint64_t)v8);
        uint64_t v32 = *v29;
        (*v29)((char *)v37, v5, v14);

        uint64_t v19 = v40;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1C28293E8(0, *(void *)(v19 + 16) + 1, 1);
          uint64_t v19 = v40;
        }
        unint64_t v34 = *(void *)(v19 + 16);
        unint64_t v33 = *(void *)(v19 + 24);
        if (v34 >= v33 >> 1)
        {
          sub_1C28293E8(v33 > 1, v34 + 1, 1);
          uint64_t v19 = v40;
        }
        *(void *)(v19 + 16) = v34 + 1;
        v32((char *)(v19+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v34), (char *)v37, v14);
        uint64_t v40 = v19;
        ++v26;
        --v18;
        unint64_t v5 = v35;
        if (!v18) {
          return v19;
        }
      }
      goto LABEL_25;
    }
    uint64_t v21 = 0;
    unint64_t v36 = (uint64_t (**)(char *, uint64_t, uint64_t))(v38 + 48);
    uint64_t v37 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
    uint64_t v22 = (void (**)(char *, char *, uint64_t))(v38 + 32);
    uint64_t v35 = (char *)a1;
    while (1)
    {
      MEMORY[0x1C875F6E0](v21, a1);
      (*v37)(v13, 1, 1, v14);
      sub_1C281AC9C(&qword_1EA310728, MEMORY[0x1E4F26EB0]);
      sub_1C28CE440();
      sub_1C281ACE4((uint64_t)v13, (uint64_t)v11);
      uint64_t result = (*v36)(v11, 1, v14);
      if (result == 1) {
        break;
      }
      sub_1C281AD78((uint64_t)v13);
      char v23 = *v22;
      (*v22)(v39, v11, v14);
      swift_unknownObjectRelease();
      uint64_t v19 = v40;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1C28293E8(0, *(void *)(v19 + 16) + 1, 1);
        uint64_t v19 = v40;
      }
      unint64_t v25 = *(void *)(v19 + 16);
      unint64_t v24 = *(void *)(v19 + 24);
      if (v25 >= v24 >> 1)
      {
        sub_1C28293E8(v24 > 1, v25 + 1, 1);
        uint64_t v19 = v40;
      }
      ++v21;
      *(void *)(v19 + 16) = v25 + 1;
      v23((char *)(v19+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v25), v39, v14);
      uint64_t v40 = v19;
      a1 = (unint64_t)v35;
      if (v18 == v21) {
        return v19;
      }
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

void sub_1C281AB0C()
{
  if (!qword_1EA3106F0)
  {
    sub_1C281AE04(255, &qword_1EA3106F8, (unint64_t *)&qword_1EBB75CA0);
    sub_1C281AB88();
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA3106F0);
    }
  }
}

unint64_t sub_1C281AB88()
{
  unint64_t result = qword_1EA310700;
  if (!qword_1EA310700)
  {
    sub_1C281AE04(255, &qword_1EA3106F8, (unint64_t *)&qword_1EBB75CA0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310700);
  }
  return result;
}

uint64_t sub_1C281ABF8()
{
  return swift_deallocObject();
}

uint64_t sub_1C281AC30()
{
  return sub_1C281A288(*(void **)(v0 + 16));
}

void sub_1C281AC38(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_1C281AC9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C281ACE4(uint64_t a1, uint64_t a2)
{
  sub_1C281AC38(0, &qword_1EA310720, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C281AD78(uint64_t a1)
{
  sub_1C281AC38(0, &qword_1EA310720, MEMORY[0x1E4F26EB0], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C281AE04(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27D1C9C(255, a3);
    unint64_t v4 = sub_1C28CD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t Publishers.IgnoreFailureResult.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t Publishers.IgnoreFailureResult.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_1C281AEC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1C28CE7E0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v14 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v14 - v8, a1, v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v11 = *(void *)(a2 - 8);
  uint64_t v12 = v11;
  if (EnumCaseMultiPayload == 1)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56))(a3, 1, 1, a2);
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  }
  else
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v12 + 56))(a3, 0, 1, a2);
  }
}

uint64_t sub_1C281B060()
{
  return swift_deallocObject();
}

uint64_t sub_1C281B070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C281AEC8(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_1C281B084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 48);
}

uint64_t sub_1C281B08C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C281B11C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_1C281B278(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x1C281B490);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for Publishers.IgnoreFailureResult()
{
  return swift_getGenericMetadata();
}

uint64_t sub_1C281B4D0()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthExperienceWithTestsClass()
{
  return self;
}

id sub_1C281B504()
{
  type metadata accessor for HealthExperienceWithTestsClass();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id result = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  qword_1EBB7F3A8 = (uint64_t)result;
  return result;
}

uint64_t static DateInterval.halfYearBack(from:calendar:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v23[1] = a2;
  uint64_t v25 = a3;
  uint64_t v4 = sub_1C28CC570();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  unsigned int v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D0A20(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v8 - 8);
  unsigned int v10 = (char *)v23 - v9;
  uint64_t v11 = sub_1C28CC450();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  int v15 = (char *)v23 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)v23 - v17;
  MEMORY[0x1F4188790](v16);
  uint64_t v20 = (char *)v23 - v19;
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E4F27BC0], v4);
  unint64_t v24 = a1;
  sub_1C28CC520();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1C281B8AC((uint64_t)v10);
    uint64_t result = sub_1C28CE360();
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v20, v10, v11);
    uint64_t v21 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    v21(v18, v20, v11);
    v21(v15, v24, v11);
    sub_1C28CBF90();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v20, v11);
  }
  return result;
}

uint64_t sub_1C281B8AC(uint64_t a1)
{
  sub_1C27D0A20(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static DateInterval.entireDayInterval(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a1;
  uint64_t v38 = a2;
  uint64_t v2 = sub_1C28CC570();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D0A20(0, (unint64_t *)&qword_1EBB771E0, MEMORY[0x1E4F27928], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v6 - 8);
  unint64_t v34 = (char *)&v31 - v7;
  uint64_t v8 = sub_1C28CC580();
  uint64_t v31 = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC450();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v37 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  unint64_t v36 = (char *)&v31 - v17;
  uint64_t v18 = MEMORY[0x1F4188790](v16);
  unint64_t v33 = (char *)&v31 - v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v35 = (char *)&v31 - v21;
  MEMORY[0x1F4188790](v20);
  char v23 = (char *)&v31 - v22;
  sub_1C28CC550();
  sub_1C28CC4D0();
  unint64_t v24 = *(void (**)(char *, uint64_t))(v9 + 8);
  v24(v11, v8);
  sub_1C28CC550();
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x1E4F27BF0], v2);
  uint64_t v25 = (uint64_t)v34;
  sub_1C28CC520();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v24(v11, v31);
  unint64_t v26 = v33;
  uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v27(v33, v32, v12);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v13 + 48))(v25, 1, v12) == 1)
  {
    id v28 = v35;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v35, v26, v12);
    sub_1C281B8AC(v25);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v26, v12);
    id v28 = v35;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 32))(v35, v25, v12);
  }
  v27(v36, (uint64_t)v23, v12);
  v27(v37, (uint64_t)v28, v12);
  sub_1C28CBF90();
  uint64_t v29 = *(void (**)(char *, uint64_t))(v13 + 8);
  v29(v28, v12);
  return ((uint64_t (*)(char *, uint64_t))v29)(v23, v12);
}

uint64_t Date.tomorrow.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, 0, 1, 0, 0, 0, a1);
}

uint64_t Date.oneWeekAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(0, 0, -7, 0, 0, 0, a1);
}

uint64_t Date.oneYearAgo.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(-1, 0, 0, 0, 0, 0, a1);
}

uint64_t Date.oneYearAfter.getter@<X0>(uint64_t a1@<X8>)
{
  return Date.adjustedBy(years:months:days:hours:minutes:seconds:)(1, 0, 0, 0, 0, 0, a1);
}

uint64_t Date.startOfWeek(for:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  void v14[2] = a1;
  v14[3] = a2;
  uint64_t v2 = sub_1C28CC190();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D0A20(0, qword_1EBB771F8, MEMORY[0x1E4F27C88], MEMORY[0x1E4FBBE00]);
  uint64_t v6 = sub_1C28CC570();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 72);
  unint64_t v9 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_1C28D2ED0;
  unint64_t v11 = v10 + v9;
  uint64_t v12 = *(void (**)(unint64_t, void, uint64_t))(v7 + 104);
  v12(v11, *MEMORY[0x1E4F27C78], v6);
  v12(v11 + v8, *MEMORY[0x1E4F27BE8], v6);
  v12(v11 + 2 * v8, *MEMORY[0x1E4F27BC0], v6);
  sub_1C27D0BA0(v10);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1C28CC4E0();
  swift_bridgeObjectRelease();
  sub_1C28CC0E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t Date.isInSameMonth(date:)()
{
  uint64_t v0 = sub_1C28CC570();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C28CC580();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC550();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x1E4F27C30], v0);
  char v8 = sub_1C28CC530();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v8 & 1;
}

void Date.dateFrom(sourceTimeZone:)(uint64_t a1)
{
  sub_1C27D0A20(0, &qword_1EBB75A70, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v4 = (char *)&v10 - v3;
  uint64_t v5 = (void *)sub_1C28CC3F0();
  sub_1C281C3B8(a1, (uint64_t)v4);
  uint64_t v6 = sub_1C28CC5C0();
  uint64_t v7 = *(void *)(v6 - 8);
  char v8 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    char v8 = (void *)sub_1C28CC590();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  id v9 = objc_msgSend(v5, sel_hk_dateFromSourceTimeZone_, v8);

  sub_1C28CC430();
}

uint64_t sub_1C281C3B8(uint64_t a1, uint64_t a2)
{
  sub_1C27D0A20(0, &qword_1EBB75A70, MEMORY[0x1E4F27D68], MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C281C44C(unint64_t a1)
{
  unint64_t v1 = a1;
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C28CE3B0();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_1C281C7A0();
      uint64_t v3 = sub_1C28CE100();
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1C28CE3B0();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = MEMORY[0x1E4FBC870];
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = v3 + 56;
  uint64_t v42 = v5;
  if ((v1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    unint64_t v40 = v1;
    while (1)
    {
      uint64_t v9 = MEMORY[0x1C875F6E0](v8, v1);
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_37;
      }
      uint64_t v11 = v9;
      uint64_t v12 = sub_1C28CDF20();
      uint64_t v13 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        sub_1C27DE9BC();
        id v18 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
        char v19 = sub_1C28CDF30();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          unint64_t v1 = v40;
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)(v7 + 8 * (v14 >> 6));
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(*(void *)(v3 + 48) + 8 * v14);
          char v22 = sub_1C28CDF30();

          if (v22) {
            goto LABEL_11;
          }
        }
        unint64_t v1 = v40;
      }
      *(void *)(v7 + 8 * v15) = v17 | v16;
      *(void *)(*(void *)(v3 + 48) + 8 * v14) = v11;
      uint64_t v23 = *(void *)(v3 + 16);
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_38;
      }
      *(void *)(v3 + 16) = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    id v26 = *(id *)(v1 + 32 + 8 * v25);
    uint64_t v27 = sub_1C28CDF20();
    uint64_t v28 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v29 = v27 & ~v28;
    unint64_t v30 = v29 >> 6;
    uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
    uint64_t v32 = 1 << v29;
    if (((1 << v29) & v31) != 0)
    {
      sub_1C27DE9BC();
      id v33 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
      char v34 = sub_1C28CDF30();

      if (v34) {
        goto LABEL_24;
      }
      uint64_t v35 = ~v28;
      unint64_t v29 = (v29 + 1) & v35;
      unint64_t v30 = v29 >> 6;
      uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
      uint64_t v32 = 1 << v29;
      if ((v31 & (1 << v29)) != 0)
      {
        while (1)
        {
          id v36 = *(id *)(*(void *)(v3 + 48) + 8 * v29);
          char v37 = sub_1C28CDF30();

          if (v37) {
            break;
          }
          unint64_t v29 = (v29 + 1) & v35;
          unint64_t v30 = v29 >> 6;
          uint64_t v31 = *(void *)(v7 + 8 * (v29 >> 6));
          uint64_t v32 = 1 << v29;
          if ((v31 & (1 << v29)) == 0) {
            goto LABEL_32;
          }
        }
LABEL_24:

        uint64_t v5 = v42;
        goto LABEL_25;
      }
LABEL_32:
      uint64_t v5 = v42;
    }
    *(void *)(v7 + 8 * v30) = v32 | v31;
    *(void *)(*(void *)(v3 + 48) + 8 * v29) = v26;
    uint64_t v38 = *(void *)(v3 + 16);
    BOOL v10 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v10) {
      goto LABEL_39;
    }
    *(void *)(v3 + 16) = v39;
LABEL_25:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
}

void sub_1C281C7A0()
{
  if (!qword_1EA310738)
  {
    sub_1C27DE9BC();
    sub_1C27D0F04((unint64_t *)&qword_1EBB76B00, (void (*)(uint64_t))sub_1C27DE9BC);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310738);
    }
  }
}

void static CameraAuthorizationSupport.checkOrRequestCameraAccessIfNeeded(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v51 = a1;
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v48 = *(void *)(v3 - 8);
  uint64_t v49 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1C28CD500();
  uint64_t v50 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1C28CD520();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v43 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (void *)*MEMORY[0x1E4F15C18];
  unint64_t v14 = self;
  unint64_t v15 = (char *)objc_msgSend(v14, sel_authorizationStatusForMediaType_, v13);
  uint64_t v16 = (uint64_t)v15;
  if ((unint64_t)(v15 - 2) < 2)
  {
    sub_1C281D17C();
    char v22 = (void *)sub_1C28CDE80();
    uint64_t v23 = (void *)swift_allocObject();
    void v23[2] = v51;
    void v23[3] = a2;
    v23[4] = v16;
    uint64_t v57 = sub_1C281D534;
    int64_t v58 = v23;
    uint64_t aBlock = MEMORY[0x1E4F143A8];
    uint64_t v54 = 1107296256;
    uint64_t v55 = sub_1C27BC934;
    uint64_t v56 = &block_descriptor_18;
    uint64_t v24 = _Block_copy(&aBlock);
    swift_retain();
    swift_release();
    sub_1C28CD510();
    uint64_t aBlock = MEMORY[0x1E4FBC860];
    sub_1C281D590((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
    sub_1C281D538();
    sub_1C281D590((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
    sub_1C28CE020();
    MEMORY[0x1C875F420](0, v12, v8, v24);
    _Block_release(v24);

    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v6);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  else
  {
    uint64_t v44 = v12;
    unint64_t v45 = v8;
    uint64_t v46 = v10;
    uint64_t v47 = v9;
    if (v15)
    {
      if (v15 == (char *)1)
      {
        sub_1C281D17C();
        uint64_t v17 = (void *)sub_1C28CDE80();
        id v18 = (void *)swift_allocObject();
        void v18[2] = v51;
        v18[3] = a2;
        v18[4] = 1;
        uint64_t v57 = sub_1C281D534;
        int64_t v58 = v18;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v54 = 1107296256;
        uint64_t v55 = sub_1C27BC934;
        uint64_t v56 = &block_descriptor_12;
        char v19 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v20 = v44;
        sub_1C28CD510();
        uint64_t aBlock = MEMORY[0x1E4FBC860];
        sub_1C281D590((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
        sub_1C281D538();
        sub_1C281D590((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
        id v21 = v45;
        sub_1C28CE020();
        MEMORY[0x1C875F420](0, v20, v21, v19);
        _Block_release(v19);

        (*(void (**)(char *, uint64_t))(v50 + 8))(v21, v6);
        (*(void (**)(char *, uint64_t))(v46 + 8))(v20, v47);
      }
      else
      {
        sub_1C28CCDC0();
        uint64_t v28 = sub_1C28CCE00();
        os_log_type_t v29 = sub_1C28CDCB0();
        if (os_log_type_enabled(v28, v29))
        {
          uint64_t v30 = swift_slowAlloc();
          uint64_t v31 = swift_slowAlloc();
          uint64_t aBlock = v31;
          *(_DWORD *)uint64_t v30 = 136315394;
          uint64_t v52 = sub_1C27D36AC(0xD00000000000001ALL, 0x80000001C28D2ED0, &aBlock);
          sub_1C28CDF90();
          *(_WORD *)(v30 + 12) = 2080;
          uint64_t v52 = v16;
          type metadata accessor for AVAuthorizationStatus(0);
          uint64_t v32 = sub_1C28CD750();
          uint64_t v52 = sub_1C27D36AC(v32, v33, &aBlock);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v28, v29, "%s Camera Access: Unexpected return value %s", (uint8_t *)v30, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v31, -1, -1);
          MEMORY[0x1C87609B0](v30, -1, -1);
        }

        (*(void (**)(char *, uint64_t))(v48 + 8))(v5, v49);
        uint64_t v35 = v50;
        uint64_t v34 = v51;
        uint64_t v37 = v46;
        uint64_t v36 = v47;
        uint64_t v38 = v45;
        sub_1C281D17C();
        uint64_t v39 = (void *)sub_1C28CDE80();
        unint64_t v40 = (void *)swift_allocObject();
        v40[2] = v34;
        v40[3] = a2;
        v40[4] = v16;
        uint64_t v57 = sub_1C281D534;
        int64_t v58 = v40;
        uint64_t aBlock = MEMORY[0x1E4F143A8];
        uint64_t v54 = 1107296256;
        uint64_t v55 = sub_1C27BC934;
        uint64_t v56 = &block_descriptor_3;
        uint64_t v41 = _Block_copy(&aBlock);
        swift_retain();
        swift_release();
        uint64_t v42 = v44;
        sub_1C28CD510();
        uint64_t aBlock = MEMORY[0x1E4FBC860];
        sub_1C281D590((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
        sub_1C281D538();
        sub_1C281D590((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
        sub_1C28CE020();
        MEMORY[0x1C875F420](0, v42, v38, v41);
        _Block_release(v41);

        (*(void (**)(char *, uint64_t))(v35 + 8))(v38, v6);
        (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v36);
      }
    }
    else
    {
      uint64_t v25 = (void *)swift_allocObject();
      void v25[2] = v51;
      v25[3] = a2;
      v25[4] = v13;
      uint64_t v57 = sub_1C281DA5C;
      int64_t v58 = v25;
      uint64_t aBlock = MEMORY[0x1E4F143A8];
      uint64_t v54 = 1107296256;
      uint64_t v55 = sub_1C281D4A8;
      uint64_t v56 = &block_descriptor_6;
      id v26 = _Block_copy(&aBlock);
      swift_retain();
      id v27 = v13;
      swift_release();
      objc_msgSend(v14, sel_requestAccessForMediaType_completionHandler_, v27, v26);
      _Block_release(v26);
    }
  }
}

unint64_t sub_1C281D17C()
{
  unint64_t result = qword_1EBB77310;
  if (!qword_1EBB77310)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB77310);
  }
  return result;
}

uint64_t sub_1C281D1BC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_1C28CD500();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1C28CD520();
  uint64_t v11 = *(void *)(v20 - 8);
  MEMORY[0x1F4188790](v20);
  uint64_t v13 = (char *)&v19 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C281D17C();
  unint64_t v14 = (void *)sub_1C28CDE80();
  unint64_t v15 = (void *)swift_allocObject();
  _OWORD v15[2] = a2;
  v15[3] = a3;
  void v15[4] = a4;
  aBlock[4] = sub_1C281DAEC;
  aBlock[5] = v15;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C27BC934;
  aBlock[3] = &block_descriptor_27;
  uint64_t v16 = _Block_copy(aBlock);
  swift_retain();
  id v17 = a4;
  swift_release();
  sub_1C28CD510();
  aBlock[0] = MEMORY[0x1E4FBC860];
  sub_1C281D590((unint64_t *)&qword_1EBB772F8, MEMORY[0x1E4FBCB00]);
  sub_1C281D538();
  sub_1C281D590((unint64_t *)&qword_1EBB77308, (void (*)(uint64_t))sub_1C281D538);
  sub_1C28CE020();
  MEMORY[0x1C875F420](0, v13, v10, v16);
  _Block_release(v16);

  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v20);
}

uint64_t sub_1C281D4A8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  v3(a2);

  return swift_release();
}

uint64_t sub_1C281D4FC()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1C281D538()
{
  if (!qword_1EBB77300)
  {
    sub_1C28CD500();
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB77300);
    }
  }
}

uint64_t sub_1C281D590(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void static CameraAuthorizationSupport.presentCameraAccessDeniedAlert(on:)(void *a1)
{
  if (qword_1EBB75700 != -1) {
    swift_once();
  }
  sub_1C28CC200();
  sub_1C28CC200();
  unint64_t v2 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  uint64_t v3 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  id v4 = objc_msgSend(self, sel_alertControllerWithTitle_message_preferredStyle_, v2, v3, 1, 0xE000000000000000);

  sub_1C28CC200();
  uint64_t v5 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  uint64_t v6 = self;
  id v7 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v5, 1, 0, 0xE000000000000000);

  objc_msgSend(v4, sel_addAction_, v7);
  sub_1C28CC200();
  uint64_t v8 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  aBlock[4] = sub_1C281D9C8;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x1E4F143A8];
  aBlock[1] = 1107296256;
  void aBlock[2] = sub_1C281D960;
  aBlock[3] = &block_descriptor_21;
  uint64_t v9 = _Block_copy(aBlock);
  swift_release();
  id v10 = objc_msgSend(v6, sel_actionWithTitle_style_handler_, v8, 0, v9, 0xE000000000000000);
  _Block_release(v9);

  objc_msgSend(v4, sel_addAction_, v10);
  objc_msgSend(v4, sel_setPreferredAction_, v10);
  if (a1) {
    objc_msgSend(a1, sel_presentViewController_animated_completion_, v4, 1, 0);
  }
}

void sub_1C281D960(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
}

void sub_1C281D9C8()
{
}

id static CameraAuthorizationSupport.shouldShowCameraOption()()
{
  id result = objc_msgSend(self, sel_sharedConnection);
  if (result)
  {
    uint64_t v1 = result;
    id v2 = objc_msgSend(result, sel_isCameraAllowed);

    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C281DA5C(uint64_t a1)
{
  return sub_1C281D1BC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1C281DA68()
{
  return (*(uint64_t (**)(void))(v0 + 16))(*(void *)(v0 + 32));
}

ValueMetadata *type metadata accessor for CameraAuthorizationSupport()
{
  return &type metadata for CameraAuthorizationSupport;
}

uint64_t objectdestroy_2Tm()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C281DAEC()
{
  uint64_t v1 = *(uint64_t (**)(id))(v0 + 16);
  id v2 = objc_msgSend(self, sel_authorizationStatusForMediaType_, *(void *)(v0 + 32));
  return v1(v2);
}

uint64_t sub_1C281DB80()
{
  return sub_1C28891B0();
}

uint64_t sub_1C281DB88()
{
  return sub_1C289AC70();
}

uint64_t sub_1C281DB90()
{
  return sub_1C2889618();
}

HealthExperience::CloudSyncRestoreState_optional sub_1C281DB98(Swift::String *a1)
{
  return CloudSyncRestoreState.init(rawValue:)(*a1);
}

unint64_t sub_1C281DBB8()
{
  unint64_t result = 0x64656C6261736964;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x647055736465656ELL;
      break;
    case 2:
      unint64_t result = 0x726F727265;
      break;
    case 3:
      unint64_t result = 0x6465636E7973;
      break;
    case 4:
      unint64_t result = 0x65636E7953746F6ELL;
      break;
    case 5:
      unint64_t result = 0xD000000000000017;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C281DC88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2820BEC(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C281DCB0(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1C281DCBC(uint64_t a1)
{
  unint64_t v2 = sub_1C28209C0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281DCF8(uint64_t a1)
{
  unint64_t v2 = sub_1C28209C0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C281DD34()
{
  return 0;
}

uint64_t sub_1C281DD40@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_1C281DD70(uint64_t a1)
{
  unint64_t v2 = sub_1C2820920();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281DDAC(uint64_t a1)
{
  unint64_t v2 = sub_1C2820920();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C281DDE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C28CE640();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C281DE68(uint64_t a1)
{
  unint64_t v2 = sub_1C2820878();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281DEA4(uint64_t a1)
{
  unint64_t v2 = sub_1C2820878();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C281DEE0(uint64_t a1)
{
  unint64_t v2 = sub_1C282077C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281DF1C(uint64_t a1)
{
  unint64_t v2 = sub_1C282077C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C281DF58(uint64_t a1)
{
  unint64_t v2 = sub_1C28208CC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281DF94(uint64_t a1)
{
  unint64_t v2 = sub_1C28208CC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C281DFD0(uint64_t a1)
{
  unint64_t v2 = sub_1C28207D0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281E00C(uint64_t a1)
{
  unint64_t v2 = sub_1C28207D0();

  return MEMORY[0x1F41862B0](a1, v2);
}

unint64_t sub_1C281E048()
{
  return 0xD000000000000012;
}

uint64_t sub_1C281E064@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2820E80(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C281E090(uint64_t a1)
{
  unint64_t v2 = sub_1C2820824();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C281E0CC(uint64_t a1)
{
  unint64_t v2 = sub_1C2820824();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t CloudSyncState.encode(to:)(void *a1)
{
  unint64_t v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDE0];
  sub_1C2820ACC(0, &qword_1EBB75748, (uint64_t (*)(void))sub_1C282077C, (uint64_t)&type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v59 = *(void *)(v3 - 8);
  uint64_t v60 = v3;
  MEMORY[0x1F4188790](v3);
  int64_t v58 = (char *)&v42 - v4;
  sub_1C2820ACC(0, &qword_1EBB75820, (uint64_t (*)(void))sub_1C28207D0, (uint64_t)&type metadata for CloudSyncState.NotSyncedCodingKeys, v2);
  uint64_t v55 = v5;
  uint64_t v52 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v50 = (char *)&v42 - v6;
  sub_1C2820ACC(0, &qword_1EBB75818, (uint64_t (*)(void))sub_1C2820824, (uint64_t)&type metadata for CloudSyncState.SyncedCodingKeys, v2);
  uint64_t v56 = *(void *)(v7 - 8);
  uint64_t v57 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v42 - v8;
  uint64_t v9 = sub_1C28CC450();
  uint64_t v53 = *(void *)(v9 - 8);
  uint64_t v54 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v49 = (char *)&v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2820ACC(0, &qword_1EBB75730, (uint64_t (*)(void))sub_1C2820878, (uint64_t)&type metadata for CloudSyncState.ErrorCodingKeys, v2);
  uint64_t v47 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  MEMORY[0x1F4188790](v11);
  uint64_t v46 = (char *)&v42 - v12;
  sub_1C2820ACC(0, &qword_1EBB75740, (uint64_t (*)(void))sub_1C28208CC, (uint64_t)&type metadata for CloudSyncState.NeedsUpdateCodingKeys, v2);
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  MEMORY[0x1F4188790](v13);
  uint64_t v43 = (char *)&v42 - v14;
  sub_1C2820ACC(0, &qword_1EBB75738, (uint64_t (*)(void))sub_1C2820920, (uint64_t)&type metadata for CloudSyncState.DisabledCodingKeys, v2);
  uint64_t v16 = v15;
  uint64_t v42 = *(void *)(v15 - 8);
  MEMORY[0x1F4188790](v15);
  id v18 = (char *)&v42 - v17;
  uint64_t v19 = type metadata accessor for CloudSyncState();
  MEMORY[0x1F4188790](v19);
  id v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2820ACC(0, &qword_1EBB75728, (uint64_t (*)(void))sub_1C28209C0, (uint64_t)&type metadata for CloudSyncState.CodingKeys, v2);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v61 = v22;
  uint64_t v62 = v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v25 = (char *)&v42 - v24;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28209C0();
  sub_1C28CE800();
  sub_1C2820A14(v63, (uint64_t)v21);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = v53;
      uint64_t v31 = v49;
      uint64_t v32 = v21;
      uint64_t v33 = v54;
      (*(void (**)(char *, unsigned char *, uint64_t))(v53 + 32))(v49, v32, v54);
      char v68 = 3;
      sub_1C2820824();
      uint64_t v34 = v51;
      uint64_t v28 = v61;
      sub_1C28CE550();
      sub_1C2821EC8(&qword_1EA310368, MEMORY[0x1E4F27928]);
      uint64_t v35 = v57;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v34, v35);
      (*(void (**)(char *, uint64_t))(v30 + 8))(v31, v33);
      goto LABEL_4;
    case 2u:
      char v64 = 0;
      sub_1C2820920();
      uint64_t v37 = v61;
      sub_1C28CE550();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v16);
      goto LABEL_10;
    case 3u:
      char v65 = 1;
      sub_1C28208CC();
      uint64_t v38 = v43;
      uint64_t v37 = v61;
      sub_1C28CE550();
      uint64_t v40 = v44;
      uint64_t v39 = v45;
      goto LABEL_9;
    case 4u:
      char v69 = 4;
      sub_1C28207D0();
      uint64_t v41 = v50;
      uint64_t v37 = v61;
      sub_1C28CE550();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v41, v55);
      goto LABEL_10;
    case 5u:
      char v70 = 5;
      sub_1C282077C();
      uint64_t v38 = v58;
      uint64_t v37 = v61;
      sub_1C28CE550();
      uint64_t v40 = v59;
      uint64_t v39 = v60;
LABEL_9:
      (*(void (**)(char *, uint64_t))(v40 + 8))(v38, v39);
LABEL_10:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v25, v37);
      break;
    default:
      char v26 = *v21;
      char v67 = 2;
      sub_1C2820878();
      id v27 = v46;
      uint64_t v28 = v61;
      sub_1C28CE550();
      char v66 = v26;
      sub_1C2820A78();
      uint64_t v29 = v48;
      sub_1C28CE5E0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v29);
LABEL_4:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v62 + 8))(v25, v28);
      break;
  }
  return result;
}

uint64_t CloudSyncState.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v85 = a2;
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x1E4FBBDC0];
  sub_1C2820ACC(0, qword_1EBB74A10, (uint64_t (*)(void))sub_1C282077C, (uint64_t)&type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v88 = v4;
  uint64_t v78 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v84 = (char *)&v66 - v5;
  sub_1C2820ACC(0, qword_1EBB74918, (uint64_t (*)(void))sub_1C28207D0, (uint64_t)&type metadata for CloudSyncState.NotSyncedCodingKeys, v3);
  uint64_t v87 = v6;
  uint64_t v75 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v82 = (char *)&v66 - v7;
  sub_1C2820ACC(0, &qword_1EBB74910, (uint64_t (*)(void))sub_1C2820824, (uint64_t)&type metadata for CloudSyncState.SyncedCodingKeys, v3);
  uint64_t v76 = *(void *)(v8 - 8);
  uint64_t v77 = v8;
  MEMORY[0x1F4188790](v8);
  unint64_t v83 = (char *)&v66 - v9;
  sub_1C2820ACC(0, &qword_1EBB749F8, (uint64_t (*)(void))sub_1C2820878, (uint64_t)&type metadata for CloudSyncState.ErrorCodingKeys, v3);
  uint64_t v73 = *(void *)(v10 - 8);
  uint64_t v74 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v81 = (char *)&v66 - v11;
  sub_1C2820ACC(0, &qword_1EBB74A08, (uint64_t (*)(void))sub_1C28208CC, (uint64_t)&type metadata for CloudSyncState.NeedsUpdateCodingKeys, v3);
  uint64_t v71 = *(void *)(v12 - 8);
  uint64_t v72 = v12;
  MEMORY[0x1F4188790](v12);
  uint64_t v80 = (char *)&v66 - v13;
  sub_1C2820ACC(0, &qword_1EBB74A00, (uint64_t (*)(void))sub_1C2820920, (uint64_t)&type metadata for CloudSyncState.DisabledCodingKeys, v3);
  uint64_t v70 = v14;
  uint64_t v69 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v79 = (char *)&v66 - v15;
  sub_1C2820ACC(0, &qword_1EBB749F0, (uint64_t (*)(void))sub_1C28209C0, (uint64_t)&type metadata for CloudSyncState.CodingKeys, v3);
  uint64_t v17 = v16;
  uint64_t v86 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v19 = (char *)&v66 - v18;
  uint64_t v20 = type metadata accessor for CloudSyncState();
  uint64_t v21 = MEMORY[0x1F4188790](v20);
  uint64_t v23 = (char *)&v66 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x1F4188790](v21);
  char v26 = (char *)&v66 - v25;
  MEMORY[0x1F4188790](v24);
  uint64_t v28 = (char *)&v66 - v27;
  uint64_t v29 = a1;
  uint64_t v30 = a1[3];
  uint64_t v89 = v29;
  __swift_project_boxed_opaque_existential_1(v29, v30);
  sub_1C28209C0();
  uint64_t v31 = v90;
  sub_1C28CE7F0();
  if (v31)
  {
    uint64_t v32 = (uint64_t)v89;
    return __swift_destroy_boxed_opaque_existential_1Tm(v32);
  }
  char v66 = v26;
  uint64_t v90 = 0;
  char v67 = v23;
  uint64_t v34 = v87;
  uint64_t v33 = v88;
  char v68 = v28;
  uint64_t v35 = sub_1C28CE530();
  uint64_t v36 = v17;
  uint64_t v37 = v19;
  if (*(void *)(v35 + 16) != 1)
  {
    uint64_t v42 = sub_1C28CE180();
    swift_allocError();
    uint64_t v44 = v43;
    sub_1C27E29F8();
    uint64_t *v44 = v20;
    uint64_t v45 = v36;
    sub_1C28CE490();
    sub_1C28CE160();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v42 - 8) + 104))(v44, *MEMORY[0x1E4FBBA70], v42);
    swift_willThrow();
LABEL_8:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v86 + 8))(v37, v45);
    uint64_t v32 = (uint64_t)v89;
    return __swift_destroy_boxed_opaque_existential_1Tm(v32);
  }
  switch(*(unsigned char *)(v35 + 32))
  {
    case 1:
      char v92 = 1;
      sub_1C28208CC();
      uint64_t v46 = v80;
      uint64_t v39 = v36;
      uint64_t v47 = v90;
      sub_1C28CE480();
      uint64_t v32 = (uint64_t)v89;
      if (v47) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v72);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v36);
      uint64_t v41 = (uint64_t)v68;
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 2:
      char v94 = 2;
      sub_1C2820878();
      uint64_t v48 = v81;
      uint64_t v39 = v36;
      uint64_t v49 = v90;
      sub_1C28CE480();
      uint64_t v32 = (uint64_t)v89;
      if (v49) {
        goto LABEL_16;
      }
      sub_1C2820B98();
      uint64_t v50 = v74;
      sub_1C28CE520();
      uint64_t v51 = v48;
      uint64_t v52 = v86;
      (*(void (**)(char *, uint64_t))(v73 + 8))(v51, v50);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v19, v36);
      char v64 = v66;
      *char v66 = v93;
      swift_storeEnumTagMultiPayload();
      uint64_t v65 = (uint64_t)v64;
      uint64_t v41 = (uint64_t)v68;
      sub_1C2820B34(v65, (uint64_t)v68);
      goto LABEL_23;
    case 3:
      char v95 = 3;
      sub_1C2820824();
      uint64_t v53 = v83;
      uint64_t v45 = v36;
      uint64_t v54 = v90;
      sub_1C28CE480();
      if (v54) {
        goto LABEL_8;
      }
      uint64_t v90 = v36;
      sub_1C28CC450();
      sub_1C2821EC8(&qword_1EA3103F8, MEMORY[0x1E4F27928]);
      uint64_t v61 = (uint64_t)v67;
      uint64_t v62 = v77;
      sub_1C28CE520();
      uint64_t v63 = v86;
      (*(void (**)(char *, uint64_t))(v76 + 8))(v53, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v19, v90);
      swift_storeEnumTagMultiPayload();
      uint64_t v41 = (uint64_t)v68;
      sub_1C2820B34(v61, (uint64_t)v68);
      uint64_t v32 = (uint64_t)v89;
      goto LABEL_23;
    case 4:
      uint64_t v55 = v34;
      char v96 = 4;
      sub_1C28207D0();
      uint64_t v56 = v82;
      uint64_t v39 = v36;
      uint64_t v57 = v90;
      sub_1C28CE480();
      uint64_t v32 = (uint64_t)v89;
      if (v57) {
        goto LABEL_16;
      }
      (*(void (**)(char *, uint64_t))(v75 + 8))(v56, v55);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v36);
      uint64_t v41 = (uint64_t)v68;
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    case 5:
      uint64_t v87 = v20;
      char v97 = 5;
      sub_1C282077C();
      uint64_t v59 = v84;
      uint64_t v60 = v90;
      sub_1C28CE480();
      uint64_t v32 = (uint64_t)v89;
      if (v60)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v36);
        return __swift_destroy_boxed_opaque_existential_1Tm(v32);
      }
      (*(void (**)(char *, uint64_t))(v78 + 8))(v59, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v36);
      uint64_t v41 = (uint64_t)v68;
      swift_storeEnumTagMultiPayload();
      goto LABEL_23;
    default:
      char v91 = 0;
      sub_1C2820920();
      uint64_t v38 = v79;
      uint64_t v39 = v36;
      uint64_t v40 = v90;
      sub_1C28CE480();
      uint64_t v32 = (uint64_t)v89;
      if (v40)
      {
LABEL_16:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v39);
        return __swift_destroy_boxed_opaque_existential_1Tm(v32);
      }
      (*(void (**)(char *, uint64_t))(v69 + 8))(v38, v70);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v19, v36);
      uint64_t v41 = (uint64_t)v68;
      swift_storeEnumTagMultiPayload();
LABEL_23:
      sub_1C2820B34(v41, v85);
      uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(v32);
      break;
  }
  return result;
}

uint64_t sub_1C281F69C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CloudSyncState.init(from:)(a1, a2);
}

uint64_t sub_1C281F6B4(void *a1)
{
  return CloudSyncState.encode(to:)(a1);
}

unint64_t CloudSyncError.rawValue.getter(char a1)
{
  unint64_t result = 0xD000000000000011;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x464364756F6C4369;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000012;
      break;
    case 5:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C281F798()
{
  char v1 = *v0;
  sub_1C28CE700();
  CloudSyncError.rawValue.getter(v1);
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  return sub_1C28CE740();
}

uint64_t sub_1C281F7FC()
{
  CloudSyncError.rawValue.getter(*v0);
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C281F850()
{
  char v1 = *v0;
  sub_1C28CE700();
  CloudSyncError.rawValue.getter(v1);
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  return sub_1C28CE740();
}

uint64_t sub_1C281F8B0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = _s16HealthExperience14CloudSyncErrorO8rawValueACSgSS_tcfC_0();
  *a1 = result;
  return result;
}

unint64_t sub_1C281F8E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CloudSyncError.rawValue.getter(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C281F90C(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = CloudSyncError.rawValue.getter(*a1);
  uint64_t v5 = v4;
  if (v3 == CloudSyncError.rawValue.getter(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1C28CE640();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1C281F998()
{
  return sub_1C28CD8E0();
}

uint64_t sub_1C281F9F8()
{
  return sub_1C28CD8C0();
}

uint64_t CloudSyncState.init(status:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  char v8 = (char *)&v48 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v48 - v9;
  uint64_t v11 = sub_1C28CCE10();
  uint64_t v50 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  uint64_t v12 = MEMORY[0x1F4188790](v11);
  uint64_t v14 = (char *)&v48 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v16 = (char *)&v48 - v15;
  sub_1C27BBE08();
  uint64_t v18 = MEMORY[0x1F4188790](v17 - 8);
  uint64_t v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v18);
  uint64_t v22 = (char *)&v48 - v21;
  if (objc_msgSend(a1, sel_accountProhibitedForCloudSync))
  {

    *a2 = 3;
    type metadata accessor for CloudSyncState();
    goto LABEL_8;
  }
  uint64_t v49 = a2;
  if (!objc_msgSend(a1, sel_syncEnabled)
    || !objc_msgSend(a1, sel_accountSupportsSecureContainer))
  {

    type metadata accessor for CloudSyncState();
LABEL_8:
    return swift_storeEnumTagMultiPayload();
  }
  id v23 = objc_msgSend(a1, sel_errorRequiringUserAction);
  if (!v23)
  {
    id v27 = objc_msgSend(a1, sel_restoreCompletionDate);
    if (v27)
    {
      uint64_t v28 = v27;
      sub_1C28CC430();

      uint64_t v29 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
      v29(v22, v10, v4);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v22, 0, 1, v4);
      uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
      if (v30(v22, 1, v4) != 1)
      {
        sub_1C2821F74((uint64_t)v22, (uint64_t (*)(void))sub_1C27BBE08);
        HKCloudSyncObserverStatus.lastPushOrPullDate.getter(v20);

        int v31 = v30(v20, 1, v4);
        uint64_t v32 = v49;
        if (v31 == 1)
        {
          sub_1C2821F74((uint64_t)v20, (uint64_t (*)(void))sub_1C27BBE08);
        }
        else
        {
          v29(v8, v20, v4);
          v29(v32, v8, v4);
        }
        type metadata accessor for CloudSyncState();
        return swift_storeEnumTagMultiPayload();
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v22, 1, 1, v4);
    }

    sub_1C2821F74((uint64_t)v22, (uint64_t (*)(void))sub_1C27BBE08);
    type metadata accessor for CloudSyncState();
    return swift_storeEnumTagMultiPayload();
  }
  id v24 = v23;
  char v25 = _s16HealthExperience14CloudSyncErrorO5errorACs0E0_p_tcfC_0(v24);
  switch(v25)
  {
    case 5:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    default:
      char v33 = sub_1C28CE640();
      swift_bridgeObjectRelease();
      if (v33)
      {
LABEL_24:
        sub_1C28CCDC0();
        id v40 = v24;
        uint64_t v41 = sub_1C28CCE00();
        os_log_type_t v42 = sub_1C28CDCB0();
        if (os_log_type_enabled(v41, v42))
        {
          uint64_t v43 = (uint8_t *)swift_slowAlloc();
          uint64_t v44 = swift_slowAlloc();
          uint64_t v52 = (uint64_t)v40;
          uint64_t v53 = v44;
          *(_DWORD *)uint64_t v43 = 136446210;
          uint64_t v48 = v43 + 4;
          sub_1C27C7060();
          id v45 = v40;
          uint64_t v46 = sub_1C28CD750();
          uint64_t v52 = sub_1C27D36AC(v46, v47, &v53);
          sub_1C28CDF90();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v41, v42, "Unhandled cloud sync error received: %{public}s", v43, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v44, -1, -1);
          MEMORY[0x1C87609B0](v43, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v50 + 8))(v16, v51);
      }
      else
      {
        sub_1C28CCDC0();
        uint64_t v34 = sub_1C28CCE00();
        os_log_type_t v35 = sub_1C28CDCB0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          uint64_t v37 = swift_slowAlloc();
          uint64_t v53 = v37;
          *(_DWORD *)uint64_t v36 = 136446210;
          uint64_t v48 = v36 + 4;
          LOBYTE(v52) = v25;
          uint64_t v38 = sub_1C28CD750();
          uint64_t v52 = sub_1C27D36AC(v38, v39, &v53);
          sub_1C28CDF90();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_1C27B7000, v34, v35, "Cloud sync has error requiring user action: %{public}s", v36, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1C87609B0](v37, -1, -1);
          MEMORY[0x1C87609B0](v36, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v50 + 8))(v14, v51);
      }
      *uint64_t v49 = v25;
      type metadata accessor for CloudSyncState();
      break;
  }
  return swift_storeEnumTagMultiPayload();
}

uint64_t static CloudSyncState.alertPluginFeedItemUniqueIdentifier(for:)(void *a1)
{
  uint64_t v2 = sub_1C28CC4B0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = 0;
  unint64_t v12 = 0xE000000000000000;
  sub_1C28CE120();
  id v6 = objc_msgSend(a1, sel_identifier);
  sub_1C28CC490();

  sub_1C2821EC8(&qword_1EBB76FC0, MEMORY[0x1E4F27990]);
  uint64_t v7 = sub_1C28CE610();
  unint64_t v9 = v8;
  swift_bridgeObjectRelease();
  uint64_t v11 = v7;
  unint64_t v12 = v9;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_1C28CD7C0();
  return v11;
}

uint64_t _s16HealthExperience14CloudSyncStateO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC450();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CloudSyncState();
  uint64_t v9 = MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (unsigned __int8 *)&v27 - v12;
  sub_1C2821F10();
  uint64_t v15 = MEMORY[0x1F4188790](v14 - 8);
  uint64_t v17 = (char *)&v27 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = &v17[*(int *)(v15 + 56)];
  sub_1C2820A14(a1, (uint64_t)v17);
  sub_1C2820A14(a2, (uint64_t)v18);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C2820A14((uint64_t)v17, (uint64_t)v11);
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
        goto LABEL_15;
      }
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v18, v4);
      char v19 = sub_1C28CC420();
      uint64_t v21 = *(void (**)(char *, uint64_t))(v5 + 8);
      v21(v7, v4);
      v21(v11, v4);
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      break;
    case 2u:
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      if (EnumCaseMultiPayload != 2) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 3u:
      int v23 = swift_getEnumCaseMultiPayload();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      if (v23 != 3) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 4u:
      int v24 = swift_getEnumCaseMultiPayload();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      if (v24 != 4) {
        goto LABEL_15;
      }
      goto LABEL_13;
    case 5u:
      int v25 = swift_getEnumCaseMultiPayload();
      uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      if (v25 != 5) {
        goto LABEL_15;
      }
LABEL_13:
      char v19 = 1;
      break;
    default:
      sub_1C2820A14((uint64_t)v17, (uint64_t)v13);
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_15:
        char v19 = 0;
        uint64_t v20 = (uint64_t (*)(void))sub_1C2821F10;
      }
      else
      {
        char v19 = sub_1C27F2FD4(*v13, *v18);
        uint64_t v20 = (uint64_t (*)(void))type metadata accessor for CloudSyncState;
      }
      break;
  }
  sub_1C2821F74((uint64_t)v17, v20);
  return v19 & 1;
}

unint64_t sub_1C282077C()
{
  unint64_t result = qword_1EBB761B0;
  if (!qword_1EBB761B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761B0);
  }
  return result;
}

unint64_t sub_1C28207D0()
{
  unint64_t result = qword_1EBB75E60;
  if (!qword_1EBB75E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E60);
  }
  return result;
}

unint64_t sub_1C2820824()
{
  unint64_t result = qword_1EBB75E48;
  if (!qword_1EBB75E48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E48);
  }
  return result;
}

unint64_t sub_1C2820878()
{
  unint64_t result = qword_1EBB76168;
  if (!qword_1EBB76168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76168);
  }
  return result;
}

unint64_t sub_1C28208CC()
{
  unint64_t result = qword_1EBB76198;
  if (!qword_1EBB76198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76198);
  }
  return result;
}

unint64_t sub_1C2820920()
{
  unint64_t result = qword_1EBB76180;
  if (!qword_1EBB76180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76180);
  }
  return result;
}

uint64_t type metadata accessor for CloudSyncState()
{
  uint64_t result = qword_1EBB76DE0;
  if (!qword_1EBB76DE0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

unint64_t sub_1C28209C0()
{
  unint64_t result = qword_1EBB76150;
  if (!qword_1EBB76150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76150);
  }
  return result;
}

uint64_t sub_1C2820A14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudSyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C2820A78()
{
  unint64_t result = qword_1EA310740;
  if (!qword_1EA310740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310740);
  }
  return result;
}

void sub_1C2820ACC(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3();
    unint64_t v10 = a5(a1, a4, v9);
    if (!v11) {
      atomic_store(v10, a2);
    }
  }
}

uint64_t sub_1C2820B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CloudSyncState();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1C2820B98()
{
  unint64_t result = qword_1EA310748;
  if (!qword_1EA310748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310748);
  }
  return result;
}

uint64_t sub_1C2820BEC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C6261736964 && a2 == 0xE800000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x647055736465656ELL && a2 == 0xEB00000000657461 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x726F727265 && a2 == 0xE500000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6465636E7973 && a2 == 0xE600000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x65636E7953746F6ELL && a2 == 0xE900000000000064 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x80000001C28DC070)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1C2820E80(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000012 && a2 == 0x80000001C28DC050)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t _s16HealthExperience14CloudSyncErrorO5errorACs0E0_p_tcfC_0(void *a1)
{
  id v2 = a1;
  sub_1C27C7060();
  type metadata accessor for HKError(0);
  if (swift_dynamicCast())
  {
    sub_1C2821EC8((unint64_t *)&qword_1EA30FF10, type metadata accessor for HKError);
    uint64_t v3 = sub_1C28CC260();

    if ((unint64_t)(v3 - 701) <= 5) {
      return (0x10004020503uLL >> (8 * (v3 + 67)));
    }
    else {
      return 5;
    }
  }
  else
  {

    return 5;
  }
}

uint64_t _s16HealthExperience14CloudSyncErrorO8rawValueACSgSS_tcfC_0()
{
  unint64_t v0 = sub_1C28CE460();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

unint64_t sub_1C2821054()
{
  unint64_t result = qword_1EA310750;
  if (!qword_1EA310750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310750);
  }
  return result;
}

unint64_t sub_1C28210AC()
{
  unint64_t result = qword_1EA310758;
  if (!qword_1EA310758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310758);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CloudSyncState(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v7 = sub_1C28CC450();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
  }
  return a1;
}

uint64_t destroy for CloudSyncState(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 1)
  {
    uint64_t v3 = sub_1C28CC450();
    uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
    return v4(a1, v3);
  }
  return result;
}

void *initializeWithCopy for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C28CC450();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithCopy for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C2821F74((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for CloudSyncState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C28CC450();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

void *initializeWithTake for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1C28CC450();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for CloudSyncState(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C2821F74((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for CloudSyncState);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1C28CC450();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1C28215C8()
{
  uint64_t result = sub_1C28CC450();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncError()
{
  return &type metadata for CloudSyncError;
}

unsigned char *_s16HealthExperience14CloudSyncErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *uint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C282173CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncState.CodingKeys()
{
  return &type metadata for CloudSyncState.CodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.DisabledCodingKeys()
{
  return &type metadata for CloudSyncState.DisabledCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.NeedsUpdateCodingKeys()
{
  return &type metadata for CloudSyncState.NeedsUpdateCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.ErrorCodingKeys()
{
  return &type metadata for CloudSyncState.ErrorCodingKeys;
}

unsigned char *_s16HealthExperience14CloudSyncStateO15ErrorCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2821844);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncState.SyncedCodingKeys()
{
  return &type metadata for CloudSyncState.SyncedCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.NotSyncedCodingKeys()
{
  return &type metadata for CloudSyncState.NotSyncedCodingKeys;
}

ValueMetadata *type metadata accessor for CloudSyncState.FirstRestoreNotCompleteCodingKeys()
{
  return &type metadata for CloudSyncState.FirstRestoreNotCompleteCodingKeys;
}

unint64_t sub_1C28218A0()
{
  unint64_t result = qword_1EA310760;
  if (!qword_1EA310760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310760);
  }
  return result;
}

unint64_t sub_1C28218F8()
{
  unint64_t result = qword_1EA310768;
  if (!qword_1EA310768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310768);
  }
  return result;
}

unint64_t sub_1C2821950()
{
  unint64_t result = qword_1EA310770;
  if (!qword_1EA310770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310770);
  }
  return result;
}

unint64_t sub_1C28219A8()
{
  unint64_t result = qword_1EBB76160;
  if (!qword_1EBB76160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76160);
  }
  return result;
}

unint64_t sub_1C2821A00()
{
  unint64_t result = qword_1EBB76158;
  if (!qword_1EBB76158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76158);
  }
  return result;
}

unint64_t sub_1C2821A58()
{
  unint64_t result = qword_1EBB76190;
  if (!qword_1EBB76190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76190);
  }
  return result;
}

unint64_t sub_1C2821AB0()
{
  unint64_t result = qword_1EBB76188;
  if (!qword_1EBB76188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76188);
  }
  return result;
}

unint64_t sub_1C2821B08()
{
  unint64_t result = qword_1EBB761A8;
  if (!qword_1EBB761A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761A8);
  }
  return result;
}

unint64_t sub_1C2821B60()
{
  unint64_t result = qword_1EBB761A0;
  if (!qword_1EBB761A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761A0);
  }
  return result;
}

unint64_t sub_1C2821BB8()
{
  unint64_t result = qword_1EBB76178;
  if (!qword_1EBB76178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76178);
  }
  return result;
}

unint64_t sub_1C2821C10()
{
  unint64_t result = qword_1EBB76170;
  if (!qword_1EBB76170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76170);
  }
  return result;
}

unint64_t sub_1C2821C68()
{
  unint64_t result = qword_1EBB75E58;
  if (!qword_1EBB75E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E58);
  }
  return result;
}

unint64_t sub_1C2821CC0()
{
  unint64_t result = qword_1EBB75E50;
  if (!qword_1EBB75E50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E50);
  }
  return result;
}

unint64_t sub_1C2821D18()
{
  unint64_t result = qword_1EBB75E70;
  if (!qword_1EBB75E70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E70);
  }
  return result;
}

unint64_t sub_1C2821D70()
{
  unint64_t result = qword_1EBB75E68;
  if (!qword_1EBB75E68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75E68);
  }
  return result;
}

unint64_t sub_1C2821DC8()
{
  unint64_t result = qword_1EBB761C0;
  if (!qword_1EBB761C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761C0);
  }
  return result;
}

unint64_t sub_1C2821E20()
{
  unint64_t result = qword_1EBB761B8;
  if (!qword_1EBB761B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB761B8);
  }
  return result;
}

unint64_t sub_1C2821E74()
{
  unint64_t result = qword_1EA310778;
  if (!qword_1EA310778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310778);
  }
  return result;
}

uint64_t sub_1C2821EC8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C2821F10()
{
  if (!qword_1EBB74078)
  {
    type metadata accessor for CloudSyncState();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB74078);
    }
  }
}

uint64_t sub_1C2821F74(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

id CloudSyncEventPublisherObserver.healthStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience31CloudSyncEventPublisherObserver_healthStore);
}

uint64_t static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.setter(uint64_t (*a1)(), uint64_t a2)
{
  off_1EBB76980 = a1;
  qword_1EBB76988 = a2;
  return swift_release();
}

uint64_t (*static CloudSyncEventPublisherObserver.defaultCloudSyncObserverConstructor.modify())()
{
  return j__swift_endAccess;
}

char *CloudSyncEventPublisherObserver.__allocating_init(healthStore:makeCloudSyncObserver:)(void *a1, uint64_t (*a2)(id, char *), uint64_t a3)
{
  id v7 = objc_allocWithZone(v3);
  return CloudSyncEventPublisherObserver.init(healthStore:makeCloudSyncObserver:)(a1, a2, a3);
}

void sub_1C28220EC()
{
  if (!qword_1EBB76990)
  {
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76990);
    }
  }
}

void sub_1C2822144(uint64_t a1, void *a2)
{
}

void sub_1C2822154(int a1, id a2)
{
  id v3 = a2;
  sub_1C28CD160();
}

uint64_t sub_1C2822224()
{
  return sub_1C28CD160();
}

void sub_1C28222D0(uint64_t a1, void *a2)
{
}

void sub_1C28222D8(uint64_t a1, void *a2)
{
  id v2 = a2;
  sub_1C28CD160();
}

id CloudSyncEventPublisherObserver.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void CloudSyncEventPublisherObserver.init()()
{
}

id CloudSyncEventPublisherObserver.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CloudSyncEventPublisherObserver();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for CloudSyncEventPublisherObserver(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CloudSyncEventPublisherObserver);
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.__allocating_init(healthStore:makeCloudSyncObserver:)()
{
  return (*(uint64_t (**)(void))(v0 + 136))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserver(_:syncDidStartWith:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserver(_:syncFailedWithError:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserverSyncCompleted(_:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of CloudSyncEventPublisherObserver.cloudSyncObserverStatusUpdated(_:status:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x1E4FBC8C8] & *v0) + 0xA8))();
}

uint64_t assignWithCopy for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1C27BC4F4(*(id *)a2, v4);
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1C27D7BB8(v5, v6);
  return a1;
}

uint64_t assignWithTake for CloudSyncEventPublisherObserver.CloudSyncEvent(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  unsigned __int8 v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1C27D7BB8(v4, v5);
  return a1;
}

uint64_t sub_1C28225E8(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 2u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 3);
  }
}

uint64_t sub_1C2822600(uint64_t result, unsigned int a2)
{
  if (a2 >= 3)
  {
    *(void *)uint64_t result = a2 - 3;
    LOBYTE(a2) = 3;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CloudSyncEventPublisherObserver.CloudSyncEvent()
{
  return &type metadata for CloudSyncEventPublisherObserver.CloudSyncEvent;
}

uint64_t DataTypesHaveSomeDataPublisher.Data.init(BOOLeanLiteral:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 1;
  if ((result & 1) == 0) {
    uint64_t v2 = 2;
  }
  *a2 = v2;
  return result;
}

BOOL DataTypesHaveSomeDataPublisher.Data.isUnknown.getter()
{
  return *v0 == 3;
}

unsigned char *sub_1C282264C@<X0>(unsigned char *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = 1;
  if (!*result) {
    uint64_t v2 = 2;
  }
  *a2 = v2;
  return result;
}

uint64_t sub_1C2822664@<X0>(void *a1@<X8>)
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28CD2C0();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1C28226E4(void **a1)
{
  id v1 = *a1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C2824D54(v1);
  swift_retain();
  return sub_1C28CD2D0();
}

uint64_t sub_1C2822760()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1C28CD2C0();
  swift_release();

  return swift_release();
}

uint64_t sub_1C28227E0()
{
  return sub_1C28CD2D0();
}

void (*sub_1C2822850(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1C28CD2B0();
  return sub_1C2805A04;
}

uint64_t sub_1C28228DC()
{
  return swift_endAccess();
}

uint64_t sub_1C282295C(uint64_t a1)
{
  sub_1C2822CD4(0, &qword_1EA310810, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v2);
  id v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v12 - v8, a1, v3);
  v10(v7, (uint64_t)v9, v3);
  swift_beginAccess();
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  sub_1C28CD2A0();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, v3);
}

uint64_t sub_1C2822B00()
{
  return swift_endAccess();
}

uint64_t sub_1C2822B7C(uint64_t a1)
{
  sub_1C2822CD4(0, &qword_1EA310810, MEMORY[0x1E4F1AC60]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&v7 - v5, a1, v3);
  swift_beginAccess();
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  sub_1C28CD2A0();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v3);
}

void sub_1C2822CD4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, ValueMetadata *))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, &type metadata for DataTypesHaveSomeDataPublisher.Data);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void (*sub_1C2822D24(void *a1))(uint64_t a1, char a2)
{
  uint64_t v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  sub_1C2822CD4(0, &qword_1EA310810, MEMORY[0x1E4F1AC60]);
  v3[10] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v3[11] = v5;
  size_t v6 = *(void *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  uint64_t v7 = malloc(v6);
  uint64_t v8 = OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  v3[16] = v9;
  sub_1C28CD290();
  swift_endAccess();
  return sub_1C2805F28;
}

id DataTypesHaveSomeDataPublisher.healthStore.getter()
{
  return *(id *)(v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore);
}

uint64_t DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(a1, a2, a3);
  return v6;
}

uint64_t *DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(void *a1, uint64_t a2, void *a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v41 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  unint64_t v10 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v37 - v14;
  uint64_t v16 = (char *)v4 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  uint64_t v43 = 3;
  sub_1C28CD280();
  (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v15, v12);
  uint64_t v17 = OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query;
  sub_1C2823360();
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + 24) = 0;
  *(void *)(v18 + 16) = 0;
  *(uint64_t *)((char *)v4 + v17) = v18;
  *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore) = (uint64_t)a1;
  id v19 = a1;
  sub_1C28CCD80();
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  id v40 = v10;
  uint64_t v20 = sub_1C28CCE00();
  os_log_type_t v21 = sub_1C28CDCD0();
  if (os_log_type_enabled(v20, v21))
  {
    uint64_t v22 = swift_slowAlloc();
    id v39 = v19;
    uint64_t v23 = v22;
    uint64_t v37 = swift_slowAlloc();
    uint64_t v43 = v37;
    *(_DWORD *)uint64_t v23 = 136446466;
    uint64_t v42 = *v4;
    sub_1C28247BC();
    uint64_t v24 = sub_1C28CD750();
    uint64_t v38 = v8;
    uint64_t v42 = sub_1C27D36AC(v24, v25, &v43);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v23 + 12) = 2082;
    uint64_t v26 = sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    uint64_t v27 = swift_bridgeObjectRetain();
    uint64_t v28 = MEMORY[0x1C875EEC0](v27, v26);
    uint64_t v29 = a3;
    unint64_t v31 = v30;
    swift_bridgeObjectRelease();
    uint64_t v42 = sub_1C27D36AC(v28, v31, &v43);
    sub_1C28CDF90();
    a3 = v29;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1C27B7000, v20, v21, "[%{public}s] Initializing query for types: %{public}s", (uint8_t *)v23, 0x16u);
    uint64_t v32 = v37;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v32, -1, -1);
    uint64_t v33 = v23;
    id v19 = v39;
    MEMORY[0x1C87609B0](v33, -1, -1);

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v38);
  }
  else
  {
    swift_release_n();
    swift_bridgeObjectRelease_n();

    uint64_t v34 = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v40, v8);
  }
  uint64_t v35 = *(uint64_t *)((char *)v4 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  MEMORY[0x1F4188790](v34);
  *(&v37 - 4) = a2;
  *(&v37 - 3) = (uint64_t)a3;
  *(&v37 - 2) = (uint64_t)v4;
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v35 + 24));
  sub_1C2823680((id *)(v35 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v35 + 24));

  swift_bridgeObjectRelease();
  swift_release();

  return v4;
}

void sub_1C2823360()
{
  if (!qword_1EA310820)
  {
    sub_1C28233C8();
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_1C28CE1A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310820);
    }
  }
}

void sub_1C28233C8()
{
  if (!qword_1EA310828)
  {
    sub_1C27D1C9C(255, &qword_1EA310830);
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310828);
    }
  }
}

void sub_1C2823430(id *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  id v8 = objc_allocWithZone(MEMORY[0x1E4F2B8A0]);
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
  swift_bridgeObjectRetain();
  id v9 = a3;
  swift_retain();
  unint64_t v10 = (void *)sub_1C28CD910();
  swift_bridgeObjectRelease();
  id v19 = sub_1C2824D4C;
  uint64_t v20 = v7;
  uint64_t v15 = MEMORY[0x1E4F143A8];
  unint64_t v16 = 1107296256;
  uint64_t v17 = sub_1C28246BC;
  uint64_t v18 = &block_descriptor_4;
  uint64_t v11 = _Block_copy(&v15);
  id v12 = objc_msgSend(v8, sel_initWithTypes_anchor_resultsHandler_, v10, v9, v11);

  _Block_release(v11);
  swift_release();
  swift_release();
  uint64_t v15 = 0;
  unint64_t v16 = 0xE000000000000000;
  id v13 = v12;
  sub_1C28CE830();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  uint64_t v21 = a4;
  sub_1C28CE270();
  uint64_t v14 = (void *)sub_1C28CD6F0();
  swift_bridgeObjectRelease();
  objc_msgSend(v13, sel_setDebugIdentifier_, v14);

  *a1 = v13;
}

void sub_1C2823680(id *a1)
{
  sub_1C2823430(a1, *(void *)(v1 + 16), *(void **)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_1C28236A0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2823F08(a3, a4);
    return swift_release();
  }
  return result;
}

uint64_t DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)(void *a1, unint64_t a2, void *a3)
{
  uint64_t v5 = sub_1C2823798(a2);
  swift_bridgeObjectRelease();
  if (v5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = MEMORY[0x1E4FBC860];
  }
  type metadata accessor for DataTypesHaveSomeDataPublisher();
  uint64_t v7 = swift_allocObject();
  DataTypesHaveSomeDataPublisher.init(healthStore:types:anchor:)(a1, v6, a3);
  return v7;
}

uint64_t sub_1C2823798(unint64_t a1)
{
  uint64_t v1 = a1;
  uint64_t v12 = MEMORY[0x1E4FBC860];
  if (a1 >> 62) {
    goto LABEL_18;
  }
  sub_1C28CE1F0();
  uint64_t v2 = *(void *)((v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v2)
  {
    if ((v1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; ; ++i)
      {
        MEMORY[0x1C875F6E0](i, v1);
        uint64_t v4 = i + 1;
        if (__OFADD__(i, 1)) {
          break;
        }
        self;
        if (!swift_dynamicCastObjCClass())
        {
          swift_unknownObjectRelease();
          goto LABEL_15;
        }
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
        if (v4 == v2) {
          return v12;
        }
      }
      __break(1u);
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v1 + 32;
      while (1)
      {
        uint64_t v7 = v5 + 1;
        if (__OFADD__(v5, 1)) {
          break;
        }
        id v8 = *(void **)(v6 + 8 * v5);
        self;
        uint64_t v9 = swift_dynamicCastObjCClass();
        if (!v9)
        {
LABEL_15:
          swift_release();
          return 0;
        }
        uint64_t v1 = v9;
        id v10 = v8;
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
        ++v5;
        if (v7 == v2) {
          return v12;
        }
      }
    }
    __break(1u);
LABEL_18:
    swift_bridgeObjectRetain();
    sub_1C28CE3B0();
    swift_bridgeObjectRelease();
    sub_1C28CE1F0();
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_1C28CE3B0();
    swift_bridgeObjectRelease();
  }
  return v12;
}

void sub_1C2823980()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD80();
  swift_retain_n();
  uint64_t v6 = sub_1C28CCE00();
  os_log_type_t v7 = sub_1C28CDCD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    id v10 = (void *)swift_slowAlloc();
    id v19 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v18 = *v1;
    sub_1C28247BC();
    uint64_t v11 = sub_1C28CD750();
    uint64_t v18 = sub_1C27D36AC(v11, v12, (uint64_t *)&v19);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C27B7000, v6, v7, "[%{public}s] Activating query", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v10, -1, -1);
    MEMORY[0x1C87609B0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = *(os_unfair_lock_s **)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  uint64_t v14 = (void **)&v13[4];
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1C2824D68(v14, &v19);
  os_unfair_lock_unlock(v15);
  unint64_t v16 = v19;
  if (v19)
  {
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore), sel_executeQuery_, v19);
  }
}

void sub_1C2823C24()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD80();
  swift_retain_n();
  uint64_t v6 = sub_1C28CCE00();
  os_log_type_t v7 = sub_1C28CDCD0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v17 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    id v19 = (void *)v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v18 = *v1;
    sub_1C28247BC();
    uint64_t v11 = sub_1C28CD750();
    uint64_t v18 = sub_1C27D36AC(v11, v12, (uint64_t *)&v19);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1C27B7000, v6, v7, "[%{public}s] Cancelling query", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v10, -1, -1);
    MEMORY[0x1C87609B0](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {
    swift_release_n();

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v13 = *(os_unfair_lock_s **)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  uint64_t v14 = (uint64_t *)&v13[4];
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1C2823EC8(v14, &v19);
  os_unfair_lock_unlock(v15);
  unint64_t v16 = v19;
  if (v19)
  {
    objc_msgSend(*(id *)((char *)v1 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_healthStore), sel_stopQuery_, v19);
  }
}

uint64_t *sub_1C2823EC8@<X0>(uint64_t *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *result;
  *uint64_t result = 0;
  *a2 = v2;
  return result;
}

id sub_1C2823ED8@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  uint64_t v2 = *a1;
  *a2 = *a1;
  return v2;
}

void sub_1C2823F08(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unint64_t v12 = (char *)&v41 - v11;
  id v13 = *(os_unfair_lock_s **)((char *)v2 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher_query);
  uint64_t v14 = (void **)&v13[4];
  uint64_t v15 = v13 + 6;
  os_unfair_lock_lock(v13 + 6);
  sub_1C2823ED8(v14, &v45);
  os_unfair_lock_unlock(v15);
  if (v45)
  {

    if (!a1)
    {
      sub_1C28CCD80();
      swift_retain();
      id v22 = a2;
      swift_retain();
      id v23 = a2;
      uint64_t v24 = sub_1C28CCE00();
      uint64_t v25 = sub_1C28CDCB0();
      if (os_log_type_enabled(v24, (os_log_type_t)v25))
      {
        uint64_t v43 = v6;
        uint64_t v26 = swift_slowAlloc();
        uint64_t v42 = (void *)swift_slowAlloc();
        id v45 = v42;
        *(_DWORD *)uint64_t v26 = 136446466;
        uint64_t v44 = *v3;
        sub_1C28247BC();
        uint64_t v27 = sub_1C28CD750();
        uint64_t v44 = sub_1C27D36AC(v27, v28, (uint64_t *)&v45);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        swift_release_n();
        *(_WORD *)(v26 + 12) = 2082;
        if (a2)
        {
          uint64_t v44 = (uint64_t)a2;
          id v29 = a2;
          sub_1C27C7060();
          uint64_t v30 = sub_1C28CD750();
          unint64_t v32 = v31;
        }
        else
        {
          unint64_t v32 = 0xE300000000000000;
          uint64_t v30 = 7104878;
        }
        uint64_t v44 = sub_1C27D36AC(v30, v32, (uint64_t *)&v45);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();

        _os_log_impl(&dword_1C27B7000, v24, (os_log_type_t)v25, "[%{public}s] Query error: %{public}s", (uint8_t *)v26, 0x16u);
        id v39 = v42;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v39, -1, -1);
        MEMORY[0x1C87609B0](v26, -1, -1);

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v43);
      }
      else
      {
        swift_release_n();

        (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      }
      swift_getKeyPath();
      swift_getKeyPath();
      id v45 = a2;
      swift_retain();
      id v40 = a2;
      goto LABEL_28;
    }
    sub_1C28CCD80();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v16 = sub_1C28CCE00();
    os_log_type_t v17 = sub_1C28CDCD0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v43 = v6;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v42 = (void *)swift_slowAlloc();
      id v45 = v42;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v44 = *v3;
      sub_1C28247BC();
      uint64_t v19 = sub_1C28CD750();
      uint64_t v44 = sub_1C27D36AC(v19, v20, (uint64_t *)&v45);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v18 + 12) = 2082;
      if ((a1 & 0xC000000000000001) != 0) {
        uint64_t v21 = sub_1C28CE060();
      }
      else {
        uint64_t v21 = *(void *)(a1 + 16);
      }
      BOOL v34 = v21 == 0;
      if (v21) {
        uint64_t v35 = 0x65736C6166;
      }
      else {
        uint64_t v35 = 1702195828;
      }
      if (v34) {
        unint64_t v36 = 0xE400000000000000;
      }
      else {
        unint64_t v36 = 0xE500000000000000;
      }
      uint64_t v44 = sub_1C27D36AC(v35, v36, (uint64_t *)&v45);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1C27B7000, v16, v17, "[%{public}s] Received results. Empty: %{public}s", (uint8_t *)v18, 0x16u);
      uint64_t v37 = v42;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v37, -1, -1);
      MEMORY[0x1C87609B0](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v43);
      if ((a1 & 0xC000000000000001) == 0) {
        goto LABEL_20;
      }
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();

      (*(void (**)(char *, uint64_t))(v7 + 8))(v12, v6);
      if ((a1 & 0xC000000000000001) == 0)
      {
LABEL_20:
        uint64_t v33 = *(void *)(a1 + 16);
        goto LABEL_21;
      }
    }
    uint64_t v33 = sub_1C28CE060();
LABEL_21:
    if (v33) {
      uint64_t v38 = 1;
    }
    else {
      uint64_t v38 = 2;
    }
    swift_getKeyPath();
    swift_getKeyPath();
    id v45 = (void *)v38;
    swift_retain();
LABEL_28:
    sub_1C28CD2D0();
  }
}

uint64_t DataTypesHaveSomeDataPublisher.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();
  return v0;
}

uint64_t DataTypesHaveSomeDataPublisher.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC16HealthExperience30DataTypesHaveSomeDataPublisher__haveSomeData;
  sub_1C2822CD4(0, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C28246BC(uint64_t a1, void *a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v6 = a4;
  uint64_t v9 = *(void (**)(id, void *, uint64_t, void *))(a1 + 32);
  if (a4)
  {
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    sub_1C27D1C9C(0, &qword_1EBB76DB8);
    sub_1C2807F90();
    uint64_t v6 = sub_1C28CD610();
  }
  swift_retain();
  id v10 = a2;
  id v11 = a3;
  id v12 = a5;
  v9(v10, a3, v6, a5);
  swift_release();

  return swift_bridgeObjectRelease();
}

unint64_t sub_1C28247BC()
{
  unint64_t result = qword_1EA310838;
  if (!qword_1EA310838)
  {
    type metadata accessor for DataTypesHaveSomeDataPublisher();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310838);
  }
  return result;
}

uint64_t type metadata accessor for DataTypesHaveSomeDataPublisher()
{
  uint64_t result = qword_1EA310840;
  if (!qword_1EA310840) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C2824844()
{
  return MEMORY[0x1E4FBB3C0];
}

uint64_t sub_1C2824858()
{
  return type metadata accessor for DataTypesHaveSomeDataPublisher();
}

void sub_1C2824860()
{
  sub_1C2822CD4(319, &qword_1EA310808, MEMORY[0x1E4F1AC70]);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t method lookup function for DataTypesHaveSomeDataPublisher(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for DataTypesHaveSomeDataPublisher);
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 104))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 112))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.haveSomeData.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 120))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 136))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.$haveSomeData.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 144))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.__allocating_init(healthStore:types:anchor:)()
{
  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.activate()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of DataTypesHaveSomeDataPublisher.cancel()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

void destroy for DataTypesHaveSomeDataPublisher.Data(void **a1)
{
  uint64_t v1 = *a1;
  int v2 = -1;
  if ((unint64_t)v1 < 0xFFFFFFFF) {
    int v2 = (int)v1;
  }
  if ((v2 + 1) <= 1) {
}
  }

void *_s16HealthExperience30DataTypesHaveSomeDataPublisherC4DataOwCP_0(void *a1, void **a2)
{
  uint64_t v3 = *a2;
  LODWORD(v4) = -1;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  if ((v4 + 1) <= 1) {
    id v5 = v3;
  }
  *a1 = v3;
  return a1;
}

void **assignWithCopy for DataTypesHaveSomeDataPublisher.Data(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1)
  {
    if (v8 <= 1) {
      id v11 = v7;
    }
    *a1 = v7;
  }
  else if (v8 > 1)
  {

    *a1 = *a2;
  }
  else
  {
    id v9 = v7;
    id v10 = *a1;
    *a1 = v7;
  }
  return a1;
}

void **assignWithTake for DataTypesHaveSomeDataPublisher.Data(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  LODWORD(v4) = -1;
  if ((unint64_t)v3 >= 0xFFFFFFFF) {
    int v5 = -1;
  }
  else {
    int v5 = (int)v3;
  }
  unsigned int v6 = v5 + 1;
  uint64_t v7 = *a2;
  if ((unint64_t)*a2 < 0xFFFFFFFF) {
    uint64_t v4 = *a2;
  }
  unsigned int v8 = v4 + 1;
  if (v6 > 1) {
    goto LABEL_11;
  }
  if (v8 > 1)
  {

LABEL_11:
    *a1 = v7;
    return a1;
  }
  *a1 = v7;

  return a1;
}

uint64_t getEnumTagSinglePayload for DataTypesHaveSomeDataPublisher.Data(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) < 2) {
    LODWORD(v3) = 0;
  }
  if (v3 >= 4) {
    return (v3 - 3);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DataTypesHaveSomeDataPublisher.Data(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2 + 3;
    }
  }
  return result;
}

uint64_t sub_1C2824CB4(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  if ((v1 + 1) >= 2) {
    return v1;
  }
  else {
    return 0;
  }
}

void *sub_1C2824CD4(void *result, unsigned int a2)
{
  if (a2 > 0x7FFFFFFE)
  {
    *uint64_t result = 0;
    *(_DWORD *)uint64_t result = a2 - 0x7FFFFFFF;
  }
  else if (a2)
  {
    *uint64_t result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DataTypesHaveSomeDataPublisher.Data()
{
  return &type metadata for DataTypesHaveSomeDataPublisher.Data;
}

uint64_t sub_1C2824D14()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C2824D4C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  return sub_1C28236A0(a1, a2, a3, a4);
}

id sub_1C2824D54(id result)
{
  if ((char *)result - 1 >= (char *)3) {
    return result;
  }
  return result;
}

id sub_1C2824D68@<X0>(void **a1@<X0>, void **a2@<X8>)
{
  return sub_1C2823ED8(a1, a2);
}

uint64_t static StorageLocations.relevenceEngineLogsDirectory.getter()
{
  uint64_t v0 = sub_1C28CC330();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x1F4188790](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CC780();
  sub_1C28CC2D0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t static StorageLocations.healthAppGroupContainer.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = (void *)sub_1C28CC770();
  id v3 = objc_msgSend(v2, sel_containerURLForSecurityApplicationGroupIdentifier_, *MEMORY[0x1E4F2BD60]);

  if (v3)
  {
    sub_1C28CC310();

    uint64_t v4 = sub_1C28CC330();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
    uint64_t v6 = v4;
    uint64_t v7 = a1;
    uint64_t v8 = 0;
  }
  else
  {
    uint64_t v9 = sub_1C28CC330();
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56);
    uint64_t v6 = v9;
    uint64_t v7 = a1;
    uint64_t v8 = 1;
  }

  return v5(v7, v8, 1, v6);
}

uint64_t dispatch thunk of OrderedSortHint.orderedElements.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of OrderedSortHint.sortHintValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t TransactionRecord.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CC4B0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t TransactionRecord.name.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TransactionRecord() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TransactionRecord.description.getter()
{
  uint64_t v2 = *(void *)(v0 + *(int *)(type metadata accessor for TransactionRecord() + 20));
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  sub_1C28CC460();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t TransactionRecord.hash(into:)()
{
  sub_1C28CC4B0();
  sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  sub_1C28CD680();
  type metadata accessor for TransactionRecord();
  swift_bridgeObjectRetain();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t static TransactionRecord.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1C28CC480() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = *(int *)(type metadata accessor for TransactionRecord() + 20);
  uint64_t v5 = *(void *)(a1 + v4);
  uint64_t v6 = *(void *)(a1 + v4 + 8);
  uint64_t v7 = (void *)(a2 + v4);
  if (v5 == *v7 && v6 == v7[1]) {
    return 1;
  }

  return sub_1C28CE640();
}

uint64_t TransactionRecord.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2825298()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2825358()
{
  sub_1C28CC4B0();
  sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  sub_1C28CD680();
  swift_bridgeObjectRetain();
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C282540C()
{
  return sub_1C28CE740();
}

uint64_t sub_1C28254C8(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + *(int *)(a1 + 20));
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  sub_1C28CC460();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1C2825534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((sub_1C28CC480() & 1) == 0) {
    return 0;
  }
  uint64_t v6 = *(int *)(a3 + 20);
  uint64_t v7 = *(void *)(a1 + v6);
  uint64_t v8 = *(void *)(a1 + v6 + 8);
  uint64_t v9 = (void *)(a2 + v6);
  if (v7 == *v9 && v8 == v9[1]) {
    return 1;
  }

  return sub_1C28CE640();
}

uint64_t TransactionManagedCache.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  TransactionManagedCache.init()();
  return v0;
}

char *TransactionManagedCache.init()()
{
  uint64_t v1 = *(void *)v0;
  sub_1C28CC650();
  swift_allocObject();
  *((void *)v0 + 2) = sub_1C28CC640();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 56))(&v0[*(void *)(*(void *)v0 + 96)], 1, 1);
  *(void *)&v0[*(void *)(*(void *)v0 + 104)] = MEMORY[0x1E4FBC870];
  return v0;
}

uint64_t TransactionManagedCache.finishUse(for:)(uint64_t a1)
{
  uint64_t v91 = *v1;
  uint64_t v3 = sub_1C28CCE10();
  uint64_t v89 = *(void *)(v3 - 8);
  uint64_t v90 = v3;
  uint64_t v4 = MEMORY[0x1F4188790](v3);
  uint64_t v87 = (char *)&v82 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x1F4188790](v4);
  uint64_t v86 = (void (*)(char *, uint64_t))((char *)&v82 - v7);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v82 - v8;
  sub_1C2829C48();
  MEMORY[0x1F4188790](v10 - 8);
  id v12 = (char *)&v82 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for TransactionRecord();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x1F4188790](v13);
  uint64_t v93 = (uint64_t)&v82 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x1F4188790](v15);
  uint64_t v92 = (uint64_t)&v82 - v18;
  uint64_t v19 = MEMORY[0x1F4188790](v17);
  uint64_t v21 = (char *)&v82 - v20;
  uint64_t v22 = MEMORY[0x1F4188790](v19);
  uint64_t v24 = (char *)&v82 - v23;
  MEMORY[0x1F4188790](v22);
  uint64_t v26 = (char *)&v82 - v25;
  sub_1C28CC620();
  uint64_t v27 = *(void *)(*v1 + 104);
  uint64_t v88 = v1;
  unint64_t v28 = (uint64_t *)((char *)v1 + v27);
  swift_beginAccess();
  sub_1C2829448(a1, (uint64_t)v12);
  swift_endAccess();
  uint64_t v94 = v14;
  uint64_t v95 = v13;
  int v29 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13);
  uint64_t v85 = v28;
  if (v29 == 1)
  {
    sub_1C27C8C44((uint64_t)v12, (uint64_t (*)(void))sub_1C2829C48);
    sub_1C28CCDC0();
    sub_1C27C8D1C(a1, (uint64_t)v21);
    uint64_t v30 = sub_1C28CCE00();
    os_log_type_t v31 = sub_1C28CDCD0();
    if (os_log_type_enabled(v30, v31))
    {
      uint64_t v32 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      v97[0] = v33;
      *(_DWORD *)uint64_t v32 = 136446466;
      uint64_t v34 = sub_1C28CE830();
      uint64_t v96 = sub_1C27D36AC(v34, v35, v97);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v32 + 12) = 2082;
      unint64_t v36 = (uint64_t *)&v21[*(int *)(v95 + 20)];
      uint64_t v38 = *v36;
      unint64_t v37 = v36[1];
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1C27D36AC(v38, v37, v97);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27C8C44((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1C27B7000, v30, v31, "[%{public}s]: Finished use for %{public}s, but no existing transaction found for it", (uint8_t *)v32, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v33, -1, -1);
      MEMORY[0x1C87609B0](v32, -1, -1);
    }
    else
    {
      sub_1C27C8C44((uint64_t)v21, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    }

    uint64_t v50 = *(void (**)(char *, uint64_t))(v89 + 8);
    v50((char *)v86, v90);
  }
  else
  {
    sub_1C27C7978((uint64_t)v12, (uint64_t)v26);
    sub_1C28CCDC0();
    sub_1C27C8D1C((uint64_t)v26, (uint64_t)v24);
    id v39 = sub_1C28CCE00();
    os_log_type_t v40 = sub_1C28CDCD0();
    int v41 = v40;
    if (os_log_type_enabled(v39, v40))
    {
      uint64_t v42 = swift_slowAlloc();
      LODWORD(v86) = v41;
      uint64_t v43 = v42;
      uint64_t v44 = swift_slowAlloc();
      v97[0] = v44;
      *(_DWORD *)uint64_t v43 = 136446466;
      uint64_t v45 = sub_1C28CE830();
      uint64_t v96 = sub_1C27D36AC(v45, v46, v97);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v43 + 12) = 2082;
      unint64_t v47 = (uint64_t *)&v24[*(int *)(v95 + 20)];
      uint64_t v49 = *v47;
      unint64_t v48 = v47[1];
      swift_bridgeObjectRetain();
      uint64_t v96 = sub_1C27D36AC(v49, v48, v97);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27C8C44((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      _os_log_impl(&dword_1C27B7000, v39, (os_log_type_t)v86, "[%{public}s]: Finished use for %{public}s", (uint8_t *)v43, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v44, -1, -1);
      MEMORY[0x1C87609B0](v43, -1, -1);
    }
    else
    {

      sub_1C27C8C44((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    }
    uint64_t v50 = *(void (**)(char *, uint64_t))(v89 + 8);
    v50(v9, v90);
    sub_1C27C8C44((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
  }
  uint64_t v51 = v87;
  sub_1C28CCDC0();
  swift_retain_n();
  uint64_t v52 = sub_1C28CCE00();
  int v53 = sub_1C28CDCD0();
  if (!os_log_type_enabled(v52, (os_log_type_t)v53))
  {

    swift_release_n();
    v50(v51, v90);
LABEL_26:
    sub_1C2826138();
    return sub_1C28CC630();
  }
  int v83 = v53;
  uint64_t v86 = v50;
  uint64_t v54 = swift_slowAlloc();
  uint64_t v82 = swift_slowAlloc();
  v97[0] = v82;
  *(_DWORD *)uint64_t v54 = 136446466;
  uint64_t v55 = sub_1C28CE830();
  uint64_t v96 = sub_1C27D36AC(v55, v56, v97);
  sub_1C28CDF90();
  swift_bridgeObjectRelease();
  uint64_t v84 = (uint8_t *)v54;
  *(_WORD *)(v54 + 12) = 2082;
  uint64_t v57 = *v85;
  int64_t v58 = *(void *)(*v85 + 16);
  if (!v58)
  {
    swift_release();
    uint64_t v71 = MEMORY[0x1E4FBC860];
LABEL_25:
    uint64_t v77 = v84;
    uint64_t v78 = MEMORY[0x1C875EEC0](v71, MEMORY[0x1E4FBB1A0]);
    unint64_t v80 = v79;
    swift_bridgeObjectRelease();
    uint64_t v96 = sub_1C27D36AC(v78, v80, v97);
    sub_1C28CDF90();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v52, (os_log_type_t)v83, "[%{public}s]: Updated transactions %{public}s", v77, 0x16u);
    uint64_t v81 = v82;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v81, -1, -1);
    MEMORY[0x1C87609B0](v77, -1, -1);

    v86(v51, v90);
    goto LABEL_26;
  }
  uint64_t v85 = (uint64_t *)v52;
  uint64_t v96 = MEMORY[0x1E4FBC860];
  swift_bridgeObjectRetain();
  sub_1C27D8968(0, v58, 0);
  uint64_t result = sub_1C27D90B4(v57);
  int64_t v60 = result;
  int v62 = v61;
  char v64 = v63 & 1;
  uint64_t v91 = v57 + 56;
  while ((v60 & 0x8000000000000000) == 0 && v60 < 1 << *(unsigned char *)(v57 + 32))
  {
    if (((*(void *)(v91 + (((unint64_t)v60 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v60) & 1) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(v57 + 36) != v62) {
      goto LABEL_29;
    }
    uint64_t v65 = v92;
    sub_1C27C8D1C(*(void *)(v57 + 48) + *(void *)(v94 + 72) * v60, v92);
    uint64_t v66 = v65;
    uint64_t v67 = v93;
    sub_1C27C7978(v66, v93);
    char v68 = (uint64_t *)(v67 + *(int *)(v95 + 20));
    uint64_t v70 = *v68;
    uint64_t v69 = v68[1];
    swift_bridgeObjectRetain();
    sub_1C27C8C44(v67, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    uint64_t v71 = v96;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_1C27D8968(0, *(void *)(v71 + 16) + 1, 1);
      uint64_t v71 = v96;
    }
    unint64_t v73 = *(void *)(v71 + 16);
    unint64_t v72 = *(void *)(v71 + 24);
    if (v73 >= v72 >> 1)
    {
      sub_1C27D8968(v72 > 1, v73 + 1, 1);
      uint64_t v71 = v96;
    }
    *(void *)(v71 + 16) = v73 + 1;
    unint64_t v74 = v71 + 16 * v73;
    *(void *)(v74 + 32) = v70;
    *(void *)(v74 + 40) = v69;
    uint64_t result = sub_1C27D8CF0(v60, v62, v64 & 1, v57);
    int64_t v60 = result;
    int v62 = v75;
    char v64 = v76 & 1;
    if (!--v58)
    {
      sub_1C27D968C(result, v75, v76 & 1);
      swift_release();
      swift_bridgeObjectRelease();
      uint64_t v51 = v87;
      uint64_t v52 = v85;
      goto LABEL_25;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1C2826138()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  uint64_t v3 = *v0;
  uint64_t v4 = *(void *)(*v0 + 80);
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v23 - v7;
  uint64_t v9 = sub_1C28CCE10();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  id v12 = (char *)v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = (uint64_t)v1 + *(void *)(v2 + 104);
  uint64_t result = swift_beginAccess();
  if (!*(void *)(*(void *)v13 + 16))
  {
    uint64_t v27 = v3;
    uint64_t v28 = v6;
    sub_1C28CCDC0();
    uint64_t v15 = sub_1C28CCE00();
    os_log_type_t v16 = sub_1C28CDCD0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      v30[0] = v25;
      uint64_t v26 = v5;
      *(_DWORD *)uint64_t v17 = 136446210;
      v23[1] = v17 + 4;
      uint64_t v24 = v17;
      uint64_t v18 = sub_1C28CE830();
      uint64_t v29 = sub_1C27D36AC(v18, v19, v30);
      uint64_t v5 = v26;
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      uint64_t v20 = v24;
      _os_log_impl(&dword_1C27B7000, v15, v16, "[%{public}s]: Finished use, no more transactions left, clearing cache", v24, 0xCu);
      uint64_t v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v21, -1, -1);
      MEMORY[0x1C87609B0](v20, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56))(v8, 1, 1, v4);
    uint64_t v22 = (uint64_t)v1 + *(void *)(*v1 + 96);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v28 + 40))(v22, v8, v5);
    return swift_endAccess();
  }
  return result;
}

uint64_t TransactionManagedCache.deinit()
{
  swift_release();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t TransactionManagedCache.__deallocating_deinit()
{
  TransactionManagedCache.deinit();

  return swift_deallocClassInstance();
}

uint64_t sub_1C28265A8(void *a1, void *a2)
{
  return sub_1C28265F0(a1, a2, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, (unint64_t *)&qword_1EA310738, (unint64_t *)&qword_1EBB76B00);
}

uint64_t sub_1C28265CC(void *a1, void *a2)
{
  return sub_1C28265F0(a1, a2, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, (unint64_t *)&qword_1EA3106B8, &qword_1EBB73CC8);
}

uint64_t sub_1C28265F0(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_1C28CE070();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_1C27D1C9C(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_1C28CE060();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_1C2826EA8(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      unint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_1C28274B4(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_1C2827D88((uint64_t)v16, v31);
    *uint64_t v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1C28CDF20();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_1C27D1C9C(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_1C28CDF30();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_1C28CDF30();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    uint64_t *v6 = 0x8000000000000000;
    id v34 = a2;
    sub_1C2827F98((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    uint64_t *v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_1C28268DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0) {
      uint64_t v7 = *v2;
    }
    else {
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v8 = sub_1C28CE070();
    swift_release();
    if (v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      type metadata accessor for AdvertisableFeatureModel();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v41;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t v32 = sub_1C28CE060();
    if (__OFADD__(v32, 1))
    {
      __break(1u);
      JUMPOUT(0x1C2826E54);
    }
    uint64_t v33 = sub_1C2827308(v7, v32 + 1);
    uint64_t v42 = v33;
    if (*(void *)(v33 + 24) <= *(void *)(v33 + 16))
    {
      swift_retain();
      sub_1C2827B44();
      uint64_t v34 = v42;
    }
    else
    {
      uint64_t v34 = v33;
      swift_retain();
    }
    sub_1C2827EF4(a2, v34);
    *uint64_t v3 = v34;
    goto LABEL_55;
  }
  sub_1C28CE700();
  swift_bridgeObjectRetain();
  AdvertisableFeatureModel.hash(into:)();
  uint64_t v10 = sub_1C28CE740();
  uint64_t v11 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v12 = v10 & ~v11;
  uint64_t v40 = v6 + 56;
  if (((*(void *)(v6 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
    swift_bridgeObjectRelease();
LABEL_52:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v43 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    uint64_t v36 = swift_retain();
    sub_1C2828150(v36, v12, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v43;
LABEL_55:
    swift_bridgeObjectRelease();
    *a1 = a2;
    return 1;
  }
  id v37 = v2;
  uint64_t v38 = ~v11;
  uint64_t v39 = v6;
  while (1)
  {
    uint64_t v13 = *(void *)(*(void *)(v6 + 48) + 8 * v12);
    unint64_t v14 = 0xD00000000000001CLL;
    unint64_t v15 = 0x80000001C28DAC20;
    switch(*(unsigned char *)(v13 + 16))
    {
      case 1:
        unint64_t v14 = 0xD000000000000019;
        id v16 = "lowCardioFitnessNotification";
        goto LABEL_15;
      case 2:
        unint64_t v14 = 0xD000000000000018;
        id v16 = "highHeartRateNotification";
        goto LABEL_15;
      case 3:
        unint64_t v15 = 0x80000001C28DAC80;
        unint64_t v14 = 0xD000000000000011;
        break;
      case 4:
        unint64_t v14 = 0xD00000000000001DLL;
        id v16 = "trendNotification";
        goto LABEL_15;
      case 5:
        unint64_t v14 = 0xD00000000000001ELL;
        id v16 = "walkingSteadinessNotification";
LABEL_15:
        unint64_t v15 = (unint64_t)v16 | 0x8000000000000000;
        break;
      default:
        break;
    }
    unint64_t v17 = 0xD00000000000001CLL;
    unint64_t v18 = 0x80000001C28DAC20;
    switch(*(unsigned char *)(a2 + 16))
    {
      case 1:
        unint64_t v17 = 0xD000000000000019;
        uint64_t v19 = "lowCardioFitnessNotification";
        goto LABEL_22;
      case 2:
        unint64_t v17 = 0xD000000000000018;
        uint64_t v19 = "highHeartRateNotification";
        goto LABEL_22;
      case 3:
        unint64_t v18 = 0x80000001C28DAC80;
        unint64_t v17 = 0xD000000000000011;
        break;
      case 4:
        unint64_t v17 = 0xD00000000000001DLL;
        uint64_t v19 = "trendNotification";
        goto LABEL_22;
      case 5:
        unint64_t v17 = 0xD00000000000001ELL;
        uint64_t v19 = "walkingSteadinessNotification";
LABEL_22:
        unint64_t v18 = (unint64_t)v19 | 0x8000000000000000;
        break;
      default:
        break;
    }
    if (v14 == v17 && v15 == v18)
    {
      swift_retain();
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v20 = sub_1C28CE640();
      swift_retain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v20 & 1) == 0) {
        goto LABEL_43;
      }
    }
    uint64_t v21 = *(void *)(v13 + 40);
    uint64_t v22 = *(void *)(v13 + 48);
    char v23 = *(void **)(v13 + 56);
    uint64_t v24 = *(void *)(a2 + 40);
    uint64_t v25 = *(void *)(a2 + 48);
    char v26 = *(void **)(a2 + 56);
    BOOL v27 = *(void *)(v13 + 24) == *(void *)(a2 + 24) && *(void *)(v13 + 32) == *(void *)(a2 + 32);
    if (!v27 && (sub_1C28CE640() & 1) == 0) {
      goto LABEL_43;
    }
    BOOL v28 = v21 == v24 && v22 == v25;
    if (!v28 && (sub_1C28CE640() & 1) == 0) {
      goto LABEL_43;
    }
    if (v23) {
      break;
    }
    if (!v26) {
      goto LABEL_42;
    }
LABEL_43:
    swift_release();
    uint64_t v6 = v39;
    unint64_t v12 = (v12 + 1) & v38;
    if (((*(void *)(v40 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v37;
      goto LABEL_52;
    }
  }
  if (!v26) {
    goto LABEL_43;
  }
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75CA0);
  id v29 = v26;
  id v30 = v23;
  char v31 = sub_1C28CDF30();

  if ((v31 & 1) == 0) {
    goto LABEL_43;
  }
LABEL_42:
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  swift_retain();
  sub_1C28CCB10();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  *a1 = *(void *)(*(void *)(*v37 + 48) + 8 * v12);
  swift_retain();
  return 0;
}

uint64_t sub_1C2826E84(uint64_t a1, uint64_t a2)
{
  return sub_1C2826EA8(a1, a2, (unint64_t *)&qword_1EA3106B8, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, &qword_1EBB73CC8);
}

uint64_t sub_1C2826EA8(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_1C282A3C0(0, a3, a4, a5, a6);
    uint64_t v10 = sub_1C28CE0F0();
    uint64_t v23 = v10;
    sub_1C28CE050();
    if (sub_1C28CE080())
    {
      sub_1C27D1C9C(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_1C28274B4(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_1C28CDF20();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_1C28CE080());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v10;
}

uint64_t sub_1C28270D0(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C27CFC7C();
    uint64_t v2 = sub_1C28CE0F0();
    uint64_t v14 = v2;
    sub_1C28CE050();
    if (sub_1C28CE080())
    {
      sub_1C28CD0F0();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v14;
        if (*(void *)(v14 + 24) <= *(void *)(v14 + 16))
        {
          sub_1C27BCDAC();
          uint64_t v2 = v14;
        }
        sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
        uint64_t result = sub_1C28CD670();
        uint64_t v4 = v2 + 56;
        uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
        unint64_t v6 = result & ~v5;
        unint64_t v7 = v6 >> 6;
        if (((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6))) != 0)
        {
          unint64_t v8 = __clz(__rbit64((-1 << v6) & ~*(void *)(v2 + 56 + 8 * (v6 >> 6)))) | v6 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v9 = 0;
          unint64_t v10 = (unint64_t)(63 - v5) >> 6;
          do
          {
            if (++v7 == v10 && (v9 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v11 = v7 == v10;
            if (v7 == v10) {
              unint64_t v7 = 0;
            }
            v9 |= v11;
            uint64_t v12 = *(void *)(v4 + 8 * v7);
          }
          while (v12 == -1);
          unint64_t v8 = __clz(__rbit64(~v12)) + (v7 << 6);
        }
        *(void *)(v4 + ((v8 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v8;
        *(void *)(*(void *)(v2 + 48) + 8 * v8) = v13;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C28CE080());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2827308(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    sub_1C282A298();
    uint64_t v2 = sub_1C28CE0F0();
    uint64_t v6 = v2;
    sub_1C28CE050();
    if (sub_1C28CE080())
    {
      type metadata accessor for AdvertisableFeatureModel();
      do
      {
        swift_dynamicCast();
        uint64_t v2 = v6;
        if (*(void *)(v6 + 24) <= *(void *)(v6 + 16))
        {
          sub_1C2827B44();
          uint64_t v2 = v6;
        }
        sub_1C28CE700();
        AdvertisableFeatureModel.hash(into:)();
        sub_1C28CE740();
        unint64_t v3 = sub_1C28CE040();
        *(void *)(v2 + 56 + ((v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v3;
        *(void *)(*(void *)(v2 + 48) + 8 * v3) = v5;
        ++*(void *)(v2 + 16);
      }
      while (sub_1C28CE080());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E4FBC870];
  }
  return v2;
}

uint64_t sub_1C2827490(uint64_t a1)
{
  return sub_1C28274B4(a1, (unint64_t *)&qword_1EA3106B8, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, &qword_1EBB73CC8);
}

uint64_t sub_1C28274B4(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C282A3C0(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C28CE0E0();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    BOOL v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_1C28CDF20();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v9;
  return result;
}

uint64_t sub_1C2827750()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TransactionRecord();
  uint64_t v33 = *(void *)(v2 - 8);
  uint64_t v34 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C282A32C();
  uint64_t v6 = sub_1C28CE0E0();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    BOOL v30 = v0;
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v9 = *(void *)(v5 + 56);
    uint64_t v32 = (void *)(v5 + 56);
    if (v8 < 64) {
      uint64_t v10 = ~(-1 << v8);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & v9;
    int64_t v31 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v12 = v6 + 56;
    uint64_t result = swift_retain();
    int64_t v14 = 0;
    while (1)
    {
      if (v11)
      {
        unint64_t v16 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v17 = v16 | (v14 << 6);
      }
      else
      {
        int64_t v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = v32[v18];
        ++v14;
        if (!v19)
        {
          int64_t v14 = v18 + 1;
          if (v18 + 1 >= v31) {
            goto LABEL_33;
          }
          unint64_t v19 = v32[v14];
          if (!v19)
          {
            int64_t v14 = v18 + 2;
            if (v18 + 2 >= v31) {
              goto LABEL_33;
            }
            unint64_t v19 = v32[v14];
            if (!v19)
            {
              int64_t v20 = v18 + 3;
              if (v20 >= v31)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v30;
                uint64_t v29 = 1 << *(unsigned char *)(v5 + 32);
                if (v29 > 63) {
                  bzero(v32, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v32 = -1 << v29;
                }
                *(void *)(v5 + 16) = 0;
                break;
              }
              unint64_t v19 = v32[v20];
              if (!v19)
              {
                while (1)
                {
                  int64_t v14 = v20 + 1;
                  if (__OFADD__(v20, 1)) {
                    goto LABEL_39;
                  }
                  if (v14 >= v31) {
                    goto LABEL_33;
                  }
                  unint64_t v19 = v32[v14];
                  ++v20;
                  if (v19) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v14 = v20;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      uint64_t v21 = *(void *)(v33 + 72);
      sub_1C27C7978(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
      sub_1C28CE700();
      sub_1C28CC4B0();
      sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
      sub_1C28CD680();
      swift_bridgeObjectRetain();
      sub_1C28CD790();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1C28CE740();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t result = sub_1C27C7978((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v7;
  return result;
}

unint64_t sub_1C2827B44()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C282A298();
  uint64_t v3 = sub_1C28CE0E0();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    unint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_29:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_23;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_23;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_23:
                swift_release();
                uint64_t v19 = 1 << *(unsigned char *)(v2 + 32);
                if (v19 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v19 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v19;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_29;
                  }
                  if (v12 >= v9) {
                    goto LABEL_23;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_22;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_22:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      sub_1C28CE700();
      AdvertisableFeatureModel.hash(into:)();
      sub_1C28CE740();
      unint64_t result = sub_1C28CE040();
      *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
      *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
      ++*(void *)(v4 + 16);
    }
  }
  unint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

unint64_t sub_1C2827D88(uint64_t a1, uint64_t a2)
{
  sub_1C28CDF20();
  unint64_t result = sub_1C28CE040();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C2827E0C(uint64_t a1, uint64_t a2)
{
  sub_1C28CD0F0();
  sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
  sub_1C28CD670();
  unint64_t result = sub_1C28CE040();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

unint64_t sub_1C2827EF4(uint64_t a1, uint64_t a2)
{
  sub_1C28CE700();
  AdvertisableFeatureModel.hash(into:)();
  sub_1C28CE740();
  unint64_t result = sub_1C28CE040();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

void sub_1C2827F98(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_1C28274B4(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_1C28285EC(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_1C2828B88(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_1C28CDF20();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1C27D1C9C(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_1C28CDF30();

    if (v18)
    {
LABEL_13:
      sub_1C28CE670();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_1C28CDF30();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

uint64_t sub_1C2828150(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_1C2827B44();
    }
    else
    {
      if (v7 > v6)
      {
        unint64_t result = (uint64_t)sub_1C28289D8((void (*)(void))sub_1C282A298);
        goto LABEL_49;
      }
      sub_1C28291B8();
    }
    uint64_t v8 = *v3;
    sub_1C28CE700();
    AdvertisableFeatureModel.hash(into:)();
    unint64_t result = sub_1C28CE740();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    uint64_t v35 = v8 + 56;
    uint64_t v36 = v8;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v34 = ~v9;
      type metadata accessor for AdvertisableFeatureModel();
      do
      {
        uint64_t v10 = *(void *)(*(void *)(v36 + 48) + 8 * a2);
        unint64_t v11 = 0xD00000000000001CLL;
        unint64_t v12 = 0x80000001C28DAC20;
        switch(*(unsigned char *)(v10 + 16))
        {
          case 1:
            unint64_t v11 = 0xD000000000000019;
            uint64_t v13 = "lowCardioFitnessNotification";
            goto LABEL_16;
          case 2:
            unint64_t v11 = 0xD000000000000018;
            uint64_t v13 = "highHeartRateNotification";
            goto LABEL_16;
          case 3:
            unint64_t v12 = 0x80000001C28DAC80;
            unint64_t v11 = 0xD000000000000011;
            break;
          case 4:
            unint64_t v11 = 0xD00000000000001DLL;
            uint64_t v13 = "trendNotification";
            goto LABEL_16;
          case 5:
            unint64_t v11 = 0xD00000000000001ELL;
            uint64_t v13 = "walkingSteadinessNotification";
LABEL_16:
            unint64_t v12 = (unint64_t)v13 | 0x8000000000000000;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xD00000000000001CLL;
        unint64_t v15 = 0x80000001C28DAC20;
        switch(*(unsigned char *)(v5 + 16))
        {
          case 1:
            unint64_t v14 = 0xD000000000000019;
            uint64_t v16 = "lowCardioFitnessNotification";
            goto LABEL_23;
          case 2:
            unint64_t v14 = 0xD000000000000018;
            uint64_t v16 = "highHeartRateNotification";
            goto LABEL_23;
          case 3:
            unint64_t v15 = 0x80000001C28DAC80;
            unint64_t v14 = 0xD000000000000011;
            break;
          case 4:
            unint64_t v14 = 0xD00000000000001DLL;
            uint64_t v16 = "trendNotification";
            goto LABEL_23;
          case 5:
            unint64_t v14 = 0xD00000000000001ELL;
            uint64_t v16 = "walkingSteadinessNotification";
LABEL_23:
            unint64_t v15 = (unint64_t)v16 | 0x8000000000000000;
            break;
          default:
            break;
        }
        if (v11 == v14 && v12 == v15)
        {
          swift_retain();
          swift_bridgeObjectRelease_n();
        }
        else
        {
          char v17 = sub_1C28CE640();
          swift_retain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v17 & 1) == 0) {
            goto LABEL_44;
          }
        }
        uint64_t v18 = *(void *)(v10 + 40);
        uint64_t v19 = *(void *)(v10 + 48);
        id v20 = *(void **)(v10 + 56);
        uint64_t v22 = *(void *)(v5 + 40);
        uint64_t v21 = *(void *)(v5 + 48);
        uint64_t v23 = *(void **)(v5 + 56);
        BOOL v24 = *(void *)(v10 + 24) == *(void *)(v5 + 24) && *(void *)(v10 + 32) == *(void *)(v5 + 32);
        if (v24 || (sub_1C28CE640() & 1) != 0)
        {
          BOOL v25 = v18 == v22 && v19 == v21;
          if (v25 || (sub_1C28CE640() & 1) != 0)
          {
            if (v20)
            {
              if (v23)
              {
                sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75CA0);
                id v26 = v23;
                id v27 = v20;
                char v28 = sub_1C28CDF30();

                if (v28)
                {
LABEL_43:
                  swift_retain();
                  sub_1C28CCB10();
                  swift_release();
                  swift_retain();
                  sub_1C28CCB10();
                  swift_release();
                  swift_retain();
                  sub_1C28CCB10();
                  swift_release();
                  swift_retain();
                  sub_1C28CCB10();
                  swift_release();
                  swift_release();
                  unint64_t result = sub_1C28CE670();
                  __break(1u);
                  break;
                }
              }
            }
            else if (!v23)
            {
              goto LABEL_43;
            }
          }
        }
LABEL_44:
        unint64_t result = swift_release();
        a2 = (a2 + 1) & v34;
      }
      while (((*(void *)(v35 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_49:
  uint64_t v29 = *v33;
  *(void *)(*v33 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v29 + 48) + 8 * a2) = v5;
  uint64_t v30 = *(void *)(v29 + 16);
  BOOL v31 = __OFADD__(v30, 1);
  uint64_t v32 = v30 + 1;
  if (v31)
  {
    __break(1u);
    JUMPOUT(0x1C28285BCLL);
  }
  *(void *)(v29 + 16) = v32;
  return result;
}

id sub_1C28285EC(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  uint64_t v5 = v4;
  sub_1C282A3C0(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_1C28CE0D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    *uint64_t v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    uint64_t v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C28287A4()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TransactionRecord();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2 - 8);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C282A32C();
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1C28CE0D0();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v1 = v8;
    return result;
  }
  id result = (void *)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v21);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v22 = *(void *)(v10 + 8 * v13);
      if (!v22)
      {
        int64_t v13 = v21 + 2;
        if (v21 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v22 = *(void *)(v10 + 8 * v13);
        if (!v22) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v3 + 72) * v19;
    sub_1C27C8D1C(*(void *)(v6 + 48) + v20, (uint64_t)v5);
    id result = (void *)sub_1C27C7978((uint64_t)v5, *(void *)(v8 + 48) + v20);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v17) {
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v10 + 8 * v23);
  if (v22)
  {
    int64_t v13 = v23;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v22 = *(void *)(v10 + 8 * v13);
    ++v23;
    if (v22) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1C28289D8(void (*a1)(void))
{
  uint64_t v2 = v1;
  a1(0);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1C28CE0D0();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(void *)(*(void *)(v5 + 48) + 8 * v16) = *(void *)(*(void *)(v3 + 48) + 8 * v16);
    id result = (void *)swift_retain();
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_1C2828B88(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_1C282A3C0(0, a2, a3, a4, a5);
  uint64_t v8 = sub_1C28CE0E0();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_1C28CDF20();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1C2828E00()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for TransactionRecord();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v4 = (char *)&v29 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *v0;
  sub_1C282A32C();
  uint64_t v6 = sub_1C28CE0E0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v9 = *(void *)(v5 + 56);
  unint64_t v29 = v0;
  uint64_t v30 = v5 + 56;
  if (v8 < 64) {
    uint64_t v10 = ~(-1 << v8);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & v9;
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 56;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v11)
    {
      unint64_t v16 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_24;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v18 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v18);
    ++v14;
    if (!v19)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v31) {
        goto LABEL_33;
      }
      unint64_t v19 = *(void *)(v30 + 8 * v14);
      if (!v19)
      {
        int64_t v14 = v18 + 2;
        if (v18 + 2 >= v31) {
          goto LABEL_33;
        }
        unint64_t v19 = *(void *)(v30 + 8 * v14);
        if (!v19) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
LABEL_24:
    uint64_t v21 = *(void *)(v32 + 72);
    sub_1C27C8D1C(*(void *)(v5 + 48) + v21 * v17, (uint64_t)v4);
    sub_1C28CE700();
    sub_1C28CC4B0();
    sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
    sub_1C28CD680();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1C28CE740();
    uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v12 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    uint64_t result = sub_1C27C7978((uint64_t)v4, *(void *)(v7 + 48) + v15 * v21);
    ++*(void *)(v7 + 16);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v31)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v29;
    goto LABEL_35;
  }
  unint64_t v19 = *(void *)(v30 + 8 * v20);
  if (v19)
  {
    int64_t v14 = v20;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v14 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v14 >= v31) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v30 + 8 * v14);
    ++v20;
    if (v19) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

unint64_t sub_1C28291B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_1C282A298();
  uint64_t v3 = sub_1C28CE0E0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_24:
    unint64_t result = swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  unint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v13 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v14 = v13 | (v12 << 6);
      goto LABEL_7;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v14 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_7:
    uint64_t v15 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    sub_1C28CE700();
    swift_retain();
    AdvertisableFeatureModel.hash(into:)();
    sub_1C28CE740();
    unint64_t result = sub_1C28CE040();
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(*(void *)(v4 + 48) + 8 * result) = v15;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_23:
    swift_release();
    uint64_t v1 = v0;
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_22;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C28293C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2843CB0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C28293E8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2843CDC(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C2829408(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C2843F54(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_1C2829428(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_1C28440C4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_1C2829448@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = type metadata accessor for TransactionRecord();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  unint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_1C28CE700();
  sub_1C28CC4B0();
  sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
  swift_bridgeObjectRetain();
  sub_1C28CD680();
  uint64_t v10 = (void *)(a1 + *(int *)(v5 + 20));
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v11 = sub_1C28CE740();
  uint64_t v12 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v13 = v11 & ~v12;
  if ((*(void *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    unint64_t v23 = v2;
    uint64_t v24 = v6;
    uint64_t v25 = a2;
    uint64_t v14 = ~v12;
    uint64_t v15 = *(void *)(v6 + 72);
    while (1)
    {
      sub_1C27C8D1C(*(void *)(v9 + 48) + v15 * v13, (uint64_t)v8);
      if (sub_1C28CC480())
      {
        int64_t v16 = &v8[*(int *)(v5 + 20)];
        BOOL v17 = *(void *)v16 == *v10 && *((void *)v16 + 1) == v10[1];
        if (v17 || (sub_1C28CE640() & 1) != 0) {
          break;
        }
      }
      sub_1C27C8C44((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
      unint64_t v13 = (v13 + 1) & v14;
      if (((*(void *)(v9 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = v24;
        a2 = v25;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
      }
    }
    sub_1C27C8C44((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
    swift_bridgeObjectRelease();
    int64_t v18 = v23;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v18;
    uint64_t v26 = *v18;
    *int64_t v18 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1C28287A4();
      uint64_t v20 = v26;
    }
    uint64_t v21 = v25;
    sub_1C27C7978(*(void *)(v20 + 48) + v15 * v13, v25);
    sub_1C282993C(v13);
    *int64_t v18 = v26;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v5);
  }
  else
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, 1, 1, v5);
  }
}

uint64_t sub_1C2829758()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1C28CE060();
  uint64_t v2 = swift_unknownObjectRetain();
  uint64_t v3 = sub_1C28270D0(v2, v1);
  uint64_t v10 = v3;
  sub_1C28CD0F0();
  sub_1C27CF740((unint64_t *)&qword_1EBB755B8, MEMORY[0x1E4F1AB18]);
  swift_retain();
  uint64_t v4 = sub_1C28CD670();
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = v4 & ~v5;
  if ((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v7 = ~v5;
    sub_1C27CF740(&qword_1EBB755C0, MEMORY[0x1E4F1AB18]);
    while ((sub_1C28CD6E0() & 1) == 0)
    {
      unint64_t v6 = (v6 + 1) & v7;
      if (((*(void *)(v3 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
      {
        swift_release();
        __break(1u);
        break;
      }
    }
    swift_release();
    uint64_t v8 = *(void *)(*(void *)(v3 + 48) + 8 * v6);
    sub_1C27CFD10(v6);
    if (sub_1C28CD6E0())
    {
      *uint64_t v0 = v10;
      return v8;
    }
    __break(1u);
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1C282993C(unint64_t a1)
{
  uint64_t v25 = type metadata accessor for TransactionRecord();
  uint64_t v3 = *(void *)(v25 - 8);
  uint64_t result = MEMORY[0x1F4188790](v25);
  unint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = *v1 + 56;
  uint64_t v9 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    unint64_t v23 = v1;
    uint64_t v11 = ~v9;
    swift_retain();
    uint64_t v12 = sub_1C28CE030();
    uint64_t v24 = v8;
    if ((*(void *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v13 = (v12 + 1) & v11;
      uint64_t v14 = *(void *)(v3 + 72);
      while (1)
      {
        int64_t v15 = v14 * v10;
        sub_1C27C8D1C(*(void *)(v7 + 48) + v14 * v10, (uint64_t)v6);
        sub_1C28CE700();
        sub_1C28CC4B0();
        sub_1C27CF740(&qword_1EBB77070, MEMORY[0x1E4F27990]);
        sub_1C28CD680();
        swift_bridgeObjectRetain();
        sub_1C28CD790();
        swift_bridgeObjectRelease();
        uint64_t v16 = sub_1C28CE740();
        sub_1C27C8C44((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for TransactionRecord);
        unint64_t v17 = v16 & v11;
        if ((uint64_t)a1 >= (uint64_t)v13) {
          break;
        }
        if (v17 < v13) {
          goto LABEL_11;
        }
LABEL_12:
        unint64_t v18 = v14 * a1;
        if ((uint64_t)(v14 * a1) < v15 || *(void *)(v7 + 48) + v14 * a1 >= *(void *)(v7 + 48) + v15 + v14)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v18 == v15) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        unint64_t v10 = (v10 + 1) & v11;
        if (((*(void *)(v24 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v17 < v13) {
        goto LABEL_6;
      }
LABEL_11:
      if ((uint64_t)a1 < (uint64_t)v17) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_16:
    *(void *)(v24 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    uint64_t result = swift_release();
    uint64_t v1 = v23;
  }
  else
  {
    *(void *)(v8 + ((a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  uint64_t v19 = *v1;
  uint64_t v20 = *(void *)(*v1 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v19 + 16) = v22;
    ++*(_DWORD *)(v19 + 36);
  }
  return result;
}

void sub_1C2829C48()
{
  if (!qword_1EBB74080[0])
  {
    type metadata accessor for TransactionRecord();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, qword_1EBB74080);
    }
  }
}

uint64_t sub_1C2829CA0()
{
  return sub_1C27CF740(&qword_1EBB743B8, (void (*)(uint64_t))type metadata accessor for TransactionRecord);
}

uint64_t *initializeBufferWithCopyOfBuffer for TransactionRecord(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1C28CC4B0();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (uint64_t *)((char *)a1 + v8);
    unint64_t v10 = (uint64_t *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(_OWORD *)(a1 + *(int *)(a3 + 20)) = *(_OWORD *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC4B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2829F78);
}

uint64_t sub_1C2829F78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC4B0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TransactionRecord(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C282A050);
}

uint64_t sub_1C282A050(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1C28CC4B0();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1C282A110()
{
  uint64_t result = sub_1C28CC4B0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C282A1A4()
{
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t type metadata accessor for TransactionManagedCache()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for TransactionManagedCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for TransactionManagedCache);
}

uint64_t dispatch thunk of TransactionManagedCache.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

void sub_1C282A298()
{
  if (!qword_1EA310850)
  {
    type metadata accessor for AdvertisableFeatureModel();
    sub_1C27CF740(&qword_1EA310160, (void (*)(uint64_t))type metadata accessor for AdvertisableFeatureModel);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310850);
    }
  }
}

void sub_1C282A32C()
{
  if (!qword_1EBB747F8)
  {
    type metadata accessor for TransactionRecord();
    sub_1C27CF740(&qword_1EBB743B0, (void (*)(uint64_t))type metadata accessor for TransactionRecord);
    unint64_t v0 = sub_1C28CE110();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB747F8);
    }
  }
}

void sub_1C282A3C0(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_1C27D1C9C(255, a3);
    sub_1C27D0EB4(a5, a3);
    unint64_t v8 = sub_1C28CE110();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

BOOL static HKCloudSyncObserver.AccountStatus.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t HKCloudSyncObserver.AccountStatus.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t HKCloudSyncObserver.AccountStatus.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t static HKCloudSyncObserver.accountStatusPublisher(for:accountStore:)@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  v10[3] = sub_1C27D1C9C(0, &qword_1EA310858);
  v10[4] = &protocol witness table for ACAccountStore;
  v10[0] = a2;
  *a3 = a1;
  sub_1C27CE8A4((uint64_t)v10, (uint64_t)(a3 + 1));
  id v6 = a1;
  id v7 = a2;
  uint64_t v8 = sub_1C28CDC70();
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  a3[6] = v8;
  return result;
}

void HKCloudSyncObserver.AccountStatusPublisher.init(healthStore:accountStore:)(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v12[3] = sub_1C27D1C9C(0, &qword_1EA310858);
  v12[4] = &protocol witness table for ACAccountStore;
  v12[0] = a2;
  *(void *)&v10[0] = a1;
  sub_1C27CE8A4((uint64_t)v12, (uint64_t)v10 + 8);
  id v6 = a2;
  id v7 = a1;
  uint64_t v8 = sub_1C28CDC70();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v12);
  uint64_t v11 = v8;
  *(void *)(a3 + 48) = v8;
  long long v9 = v10[1];
  *(_OWORD *)a3 = v10[0];
  *(_OWORD *)(a3 + 16) = v9;
  *(_OWORD *)(a3 + 32) = v10[2];
}

id HKCloudSyncObserver.AccountStatusPublisher.healthStore.getter()
{
  return *v0;
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.accountProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1C27CE8A4(v1 + 8, a1);
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.init(healthStore:accountProvider:statusPublisher:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  sub_1C27CE8A4(a2, (uint64_t)(a4 + 1));
  if (!a3)
  {
    id v8 = a1;
    a3 = sub_1C28CDC70();
  }
  uint64_t result = __swift_destroy_boxed_opaque_existential_1Tm(a2);
  a4[6] = a3;
  return result;
}

uint64_t HKCloudSyncObserver.AccountStatusPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v49 = a2;
  uint64_t v50 = a3;
  uint64_t v48 = a1;
  sub_1C282AD20();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  uint64_t v43 = v4;
  MEMORY[0x1F4188790](v3);
  id v6 = (char *)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C282ADDC();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v46 = v7;
  uint64_t v47 = v8;
  MEMORY[0x1F4188790](v7);
  uint64_t v39 = (char *)&v37 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C282B194(0, &qword_1EA3108B8, (void (*)(uint64_t))sub_1C282ADDC, (void (*)(void))sub_1C282B214);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  uint64_t v45 = v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v41 = (char *)&v37 - v12;
  uint64_t v13 = sub_1C28CDED0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C282B194(0, &qword_1EA310890, MEMORY[0x1E4F27FC8], (void (*)(void))sub_1C282B0CC);
  uint64_t v18 = v17;
  uint64_t v19 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  BOOL v21 = (char *)&v37 - v20;
  sub_1C282AEC8();
  uint64_t v37 = v22;
  uint64_t v40 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (char *)&v37 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v25 = objc_msgSend(self, sel_defaultCenter);
  sub_1C28CDEE0();

  sub_1C282B0CC();
  sub_1C28CD330();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_1C282B100();
  sub_1C28CD3C0();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v26 = v38;
  *(void *)&v51[0] = *(void *)(v38 + 48);
  sub_1C280BD0C();
  sub_1C282B248(&qword_1EBB755A8, (void (*)(uint64_t))sub_1C280BD0C);
  sub_1C28CD2F0();
  sub_1C282B248(&qword_1EA3108A8, (void (*)(uint64_t))sub_1C282AD20);
  sub_1C282B248(&qword_1EA3108B0, (void (*)(uint64_t))sub_1C282AEC8);
  BOOL v27 = v39;
  uint64_t v28 = v42;
  uint64_t v29 = v37;
  sub_1C28CD320();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v6, v28);
  sub_1C282B7CC(v26, (uint64_t)v51);
  uint64_t v30 = swift_allocObject();
  long long v31 = v51[1];
  *(_OWORD *)(v30 + 16) = v51[0];
  *(_OWORD *)(v30 + 32) = v31;
  *(_OWORD *)(v30 + 48) = v51[2];
  *(void *)(v30 + 64) = v52;
  uint64_t v32 = swift_allocObject();
  *(void *)(v32 + 16) = sub_1C282B84C;
  *(void *)(v32 + 24) = v30;
  sub_1C282B214();
  uint64_t v33 = v41;
  uint64_t v34 = v46;
  sub_1C28CD330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v47 + 8))(v27, v34);
  sub_1C282B8B8();
  uint64_t v35 = v44;
  sub_1C28CD410();
  (*(void (**)(char *, uint64_t))(v45 + 8))(v33, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v24, v29);
}

void sub_1C282AD20()
{
  if (!qword_1EA310860)
  {
    sub_1C280BD0C();
    sub_1C27D1C9C(255, &qword_1EBB77288);
    sub_1C282B248(&qword_1EBB755A8, (void (*)(uint64_t))sub_1C280BD0C);
    unint64_t v0 = sub_1C28CCEA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310860);
    }
  }
}

void sub_1C282ADDC()
{
  if (!qword_1EA310868)
  {
    sub_1C282AD20();
    sub_1C282AEC8();
    sub_1C282B248(&qword_1EA3108A8, (void (*)(uint64_t))sub_1C282AD20);
    sub_1C282B248(&qword_1EA3108B0, (void (*)(uint64_t))sub_1C282AEC8);
    unint64_t v0 = sub_1C28CCE90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310868);
    }
  }
}

void sub_1C282AEC8()
{
  if (!qword_1EA310870)
  {
    sub_1C282AFC0();
    sub_1C282B194(255, &qword_1EA310890, MEMORY[0x1E4F27FC8], (void (*)(void))sub_1C282B0CC);
    sub_1C282B248(&qword_1EA310898, (void (*)(uint64_t))sub_1C282AFC0);
    sub_1C282B100();
    unint64_t v0 = sub_1C28CCEC0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310870);
    }
  }
}

void sub_1C282AFC0()
{
  if (!qword_1EA310878)
  {
    sub_1C282B070();
    sub_1C282B248(&qword_1EA310888, (void (*)(uint64_t))sub_1C282B070);
    unint64_t v0 = sub_1C28CCF90();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310878);
    }
  }
}

void sub_1C282B070()
{
  if (!qword_1EA310880)
  {
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310880);
    }
  }
}

uint64_t sub_1C282B0CC()
{
  return sub_1C282B248(&qword_1EBB76DC0, MEMORY[0x1E4F27FC8]);
}

unint64_t sub_1C282B100()
{
  unint64_t result = qword_1EA3108A0;
  if (!qword_1EA3108A0)
  {
    sub_1C282B194(255, &qword_1EA310890, MEMORY[0x1E4F27FC8], (void (*)(void))sub_1C282B0CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108A0);
  }
  return result;
}

void sub_1C282B194(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_1C28CCF10();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_1C282B214()
{
  return sub_1C282B248(&qword_1EA3108C0, (void (*)(uint64_t))sub_1C282ADDC);
}

uint64_t sub_1C282B248(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C282B290@<X0>(void *a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1C28CCE10();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)&v39 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v39 - v14;
  uint64_t v16 = a2[4];
  uint64_t v17 = a2[5];
  __swift_project_boxed_opaque_existential_1(a2 + 1, v16);
  uint64_t v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
  if (v18)
  {

    if (objc_msgSend(a1, sel_accountSupportsSecureContainer))
    {
      sub_1C28CCDF0();
      uint64_t v19 = sub_1C28CCE00();
      os_log_type_t v20 = sub_1C28CDC90();
      if (os_log_type_enabled(v19, v20))
      {
        BOOL v21 = (uint8_t *)swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v42 = v22;
        *(_DWORD *)BOOL v21 = 136446210;
        uint64_t v23 = sub_1C28CE830();
        uint64_t v40 = v6;
        uint64_t v41 = sub_1C27D36AC(v23, v24, &v42);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v19, v20, "[%{public}s] iCloud account supports 2FA", v21, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v22, -1, -1);
        MEMORY[0x1C87609B0](v21, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v40);
      }
      else
      {

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v15, v6);
      }
      char v38 = 2;
    }
    else
    {
      sub_1C28CCDF0();
      uint64_t v32 = sub_1C28CCE00();
      os_log_type_t v33 = sub_1C28CDC90();
      if (os_log_type_enabled(v32, v33))
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        uint64_t v35 = swift_slowAlloc();
        uint64_t v42 = v35;
        *(_DWORD *)uint64_t v34 = 136446210;
        uint64_t v36 = sub_1C28CE830();
        uint64_t v40 = v6;
        uint64_t v41 = sub_1C27D36AC(v36, v37, &v42);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v32, v33, "[%{public}s] iCloud account doesn't support 2FA", v34, 0xCu);
        char v38 = 1;
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v35, -1, -1);
        MEMORY[0x1C87609B0](v34, -1, -1);

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v40);
      }
      else
      {

        uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v13, v6);
        char v38 = 1;
      }
    }
  }
  else
  {
    sub_1C28CCDF0();
    uint64_t v26 = sub_1C28CCE00();
    os_log_type_t v27 = sub_1C28CDC90();
    if (os_log_type_enabled(v26, v27))
    {
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v29 = swift_slowAlloc();
      uint64_t v42 = v29;
      *(_DWORD *)uint64_t v28 = 136446210;
      uint64_t v30 = sub_1C28CE830();
      uint64_t v40 = v6;
      uint64_t v41 = sub_1C27D36AC(v30, v31, &v42);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v26, v27, "[%{public}s] not signed into iCloud account", v28, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v29, -1, -1);
      MEMORY[0x1C87609B0](v28, -1, -1);

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v40);
    }
    else
    {

      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    char v38 = 0;
  }
  *a3 = v38;
  return result;
}

uint64_t sub_1C282B7CC(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_1C282B804()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 24);
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C282B84C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_1C282B290(a1, (void *)(v2 + 16), a2);
}

uint64_t sub_1C282B854()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C282B88C(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 16))(*a1);
}

unint64_t sub_1C282B8B8()
{
  unint64_t result = qword_1EA3108C8;
  if (!qword_1EA3108C8)
  {
    sub_1C282B194(255, &qword_1EA3108B8, (void (*)(uint64_t))sub_1C282ADDC, (void (*)(void))sub_1C282B214);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108C8);
  }
  return result;
}

id ACAccountStore.primaryiCloudAccount.getter()
{
  id v1 = objc_msgSend(v0, sel_aa_primaryAppleAccount);

  return v1;
}

unint64_t sub_1C282B988()
{
  unint64_t result = qword_1EA3108D0;
  if (!qword_1EA3108D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108D0);
  }
  return result;
}

id sub_1C282B9DC()
{
  id v1 = objc_msgSend(*v0, sel_aa_primaryAppleAccount);

  return v1;
}

unsigned char *_s13AccountStatusOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C282BAE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKCloudSyncObserver.AccountStatus()
{
  return &type metadata for HKCloudSyncObserver.AccountStatus;
}

uint64_t _s22AccountStatusPublisherVwxx(id *a1)
{
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)(a1 + 1));

  return swift_release();
}

uint64_t _s22AccountStatusPublisherVwcp(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  uint64_t v5 = a1 + 8;
  uint64_t v6 = a2 + 8;
  long long v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  uint64_t v8 = v7;
  uint64_t v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  id v10 = v4;
  v9(v5, v6, v8);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  return a1;
}

uint64_t _s22AccountStatusPublisherVwca(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    int v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        unint64_t result = (uint64_t *)swift_release();
        *int v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *int v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s22AccountStatusPublisherVwta(uint64_t a1, uint64_t a2)
{
  long long v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  __swift_destroy_boxed_opaque_existential_1Tm(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  swift_release();
  return a1;
}

uint64_t _s22AccountStatusPublisherVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22AccountStatusPublisherVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HKCloudSyncObserver.AccountStatusPublisher()
{
  return &type metadata for HKCloudSyncObserver.AccountStatusPublisher;
}

uint64_t dispatch thunk of AccountProvider.primaryiCloudAccount.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id ColorProviderContext.healthStore.getter()
{
  return *v0;
}

void ColorProviderContext.healthStore.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t (*ColorProviderContext.healthStore.modify())()
{
  return nullsub_1;
}

unint64_t sub_1C282C02C()
{
  unint64_t result = qword_1EA3108D8;
  if (!qword_1EA3108D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108D8);
  }
  return result;
}

uint64_t sub_1C282C080()
{
  return swift_deallocObject();
}

unint64_t sub_1C282C090()
{
  unint64_t result = qword_1EA3108E0;
  if (!qword_1EA3108E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108E0);
  }
  return result;
}

unint64_t sub_1C282C0E4()
{
  unint64_t result = qword_1EA3108E8;
  if (!qword_1EA3108E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108E8);
  }
  return result;
}

UIColor __swiftcall ColorRepresentation.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t v3 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v3);
  uint64_t v5 = (uint64_t *)((char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = *(void *)a1.healthStore.super.isa;
  sub_1C27D4D68(v1, (uint64_t)v5, type metadata accessor for ColorRepresentation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v14 = *v5;
      uint64_t v8 = &type metadata for DisplayCategoryColorProvider;
      os_log_type_t v20 = &type metadata for DisplayCategoryColorProvider;
      unint64_t v9 = sub_1C282C0E4();
      uint64_t v21 = v9;
      v19[0] = v14;
      break;
    case 2u:
      char v10 = *(unsigned char *)v5;
      uint64_t v8 = &type metadata for SemanticColorProvider;
      os_log_type_t v20 = &type metadata for SemanticColorProvider;
      unint64_t v9 = sub_1C282C090();
      uint64_t v21 = v9;
      LOBYTE(v19[0]) = v10;
      break;
    case 3u:
      long long v17 = *(_OWORD *)v5;
      uint64_t v11 = v5[2];
      uint64_t v12 = v5[3];
      uint64_t v8 = &type metadata for RGBColorProvider;
      os_log_type_t v20 = &type metadata for RGBColorProvider;
      unint64_t v9 = sub_1C282C02C();
      uint64_t v21 = v9;
      uint64_t v13 = swift_allocObject();
      v19[0] = v13;
      *(_OWORD *)(v13 + 16) = v17;
      *(void *)(v13 + 32) = v11;
      *(void *)(v13 + 40) = v12;
      break;
    default:
      os_log_type_t v20 = (ValueMetadata *)type metadata accessor for HKObjectTypeColorProvider(0);
      uint64_t v21 = sub_1C27D47D8(&qword_1EBB749A0, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
      boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v19);
      sub_1C27D5AAC((uint64_t)v5, (uint64_t)boxed_opaque_existential_0, type metadata accessor for HKObjectTypeColorProvider);
      uint64_t v8 = v20;
      unint64_t v9 = v21;
      break;
  }
  __swift_project_boxed_opaque_existential_1(v19, (uint64_t)v8);
  uint64_t v18 = v6;
  v15.super.Class isa = (Class)(*(uint64_t (**)(uint64_t *, ValueMetadata *, unint64_t))(v9 + 32))(&v18, v8, v9);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v19);
  return v15;
}

uint64_t static HKObjectTypeColorProvider.== infix(_:_:)()
{
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
  sub_1C282F13C(&qword_1EBB74908);

  return sub_1C28CD590();
}

BOOL static DisplayCategoryColorProvider.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t ColorRepresentation.hash(into:)()
{
  uint64_t v1 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D4D68(v0, (uint64_t)v6, type metadata accessor for ColorRepresentation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C28CE710();
      uint64_t result = sub_1C28CE710();
      break;
    case 2u:
      sub_1C28CE710();
      sub_1C28CD790();
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 3u:
      sub_1C28CE710();
      sub_1C28CE730();
      sub_1C28CE730();
      sub_1C28CE730();
      uint64_t result = sub_1C28CE730();
      break;
    default:
      sub_1C27D5AAC((uint64_t)v6, (uint64_t)v3, type metadata accessor for HKObjectTypeColorProvider);
      sub_1C28CE710();
      sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
      sub_1C282F190();
      sub_1C28CD680();
      uint64_t result = sub_1C282FA3C((uint64_t)v3, type metadata accessor for HKObjectTypeColorProvider);
      break;
  }
  return result;
}

void sub_1C282C6EC(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1C282C6F8(uint64_t a1)
{
  unint64_t v2 = sub_1C27D5BE0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282C734(uint64_t a1)
{
  unint64_t v2 = sub_1C27D5BE0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C282C774(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB2C8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282C7B0(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB2C8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C282C7EC(uint64_t a1)
{
  unint64_t v2 = sub_1C27D5B8C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282C828(uint64_t a1)
{
  unint64_t v2 = sub_1C27D5B8C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C282C864(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB580();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282C8A0(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB580();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C282C8DC(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB47C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282C918(uint64_t a1)
{
  unint64_t v2 = sub_1C27DB47C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t ColorRepresentation.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282C9C0()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282CA04()
{
  return sub_1C28CE740();
}

uint64_t HKObjectTypeColorProvider.objectType.getter()
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);

  return sub_1C28CD570();
}

uint64_t HKObjectTypeColorProvider.objectType.setter()
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);

  return sub_1C28CD580();
}

void (*HKObjectTypeColorProvider.objectType.modify(void *a1))(void *a1)
{
  unint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  v2[4] = sub_1C28CD560();
  return sub_1C282CB98;
}

void sub_1C282CB98(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

uint64_t HKObjectTypeColorProvider.init(_:)()
{
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);

  return sub_1C28CD5B0();
}

void HKObjectTypeColorProvider.color(for:)(uint64_t *a1)
{
  uint64_t v1 = *a1;
  HKObjectTypeColorProvider.uiColor(for:)((HealthExperience::ColorProviderContext)&v1);

  JUMPOUT(0x1C875E9F0);
}

uint64_t HKObjectTypeColorProvider.hash(into:)()
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  sub_1C282F190();

  return sub_1C28CD680();
}

uint64_t sub_1C282CCF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x79547463656A626FLL && a2 == 0xEA00000000006570)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1C28CE640();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1C282CD9C(uint64_t a1)
{
  unint64_t v2 = sub_1C27D455C();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282CDD8(uint64_t a1)
{
  unint64_t v2 = sub_1C27D455C();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t HKObjectTypeColorProvider.encode(to:)(void *a1)
{
  sub_1C27D5A44(0, &qword_1EBB75790, (uint64_t (*)(void))sub_1C27D455C, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27D455C();
  sub_1C28CE800();
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  sub_1C27D44EC(&qword_1EBB74C58);
  sub_1C28CE5E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t HKObjectTypeColorProvider.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282D060()
{
  sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
  sub_1C282F13C(&qword_1EBB74908);

  return sub_1C28CD590();
}

uint64_t sub_1C282D0E8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282D16C()
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  sub_1C282F190();

  return sub_1C28CD680();
}

uint64_t sub_1C282D1EC()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282D26C(void *a1)
{
  sub_1C27D5A44(0, &qword_1EBB75790, (uint64_t (*)(void))sub_1C27D455C, (uint64_t)&type metadata for HKObjectTypeColorProvider.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27D455C();
  sub_1C28CE800();
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  sub_1C27D44EC(&qword_1EBB74C58);
  sub_1C28CE5E0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisplayCategoryColorProvider.categoryIdentifierRawValue.getter()
{
  return *(void *)v0;
}

uint64_t DisplayCategoryColorProvider.categoryIdentifierRawValue.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*DisplayCategoryColorProvider.categoryIdentifierRawValue.modify())()
{
  return nullsub_1;
}

uint64_t DisplayCategoryColorProvider.init(_:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void DisplayCategoryColorProvider.color(for:)(HealthExperience::ColorProviderContext a1)
{
  DisplayCategoryColorProvider.uiColor(for:)(a1);

  JUMPOUT(0x1C875E9F0);
}

UIColor __swiftcall DisplayCategoryColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  id v7 = objc_msgSend(self, sel_categoryWithID_, *v1);
  if (v7)
  {
    uint64_t v8 = v7;
    id v9 = objc_msgSend(v7, sel_color);

    if (v9) {
      return (UIColor)v9;
    }
  }
  sub_1C28CCDA0();
  uint64_t v11 = sub_1C28CCE00();
  os_log_type_t v12 = sub_1C28CDCB0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = swift_slowAlloc();
    uint64_t v17 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v16 = sub_1C27D36AC(0xD00000000000001CLL, 0x80000001C28D3B80, &v17);
    sub_1C28CDF90();
    *(_WORD *)(v13 + 12) = 2048;
    uint64_t v16 = v6;
    sub_1C28CDF90();
    _os_log_impl(&dword_1C27B7000, v11, v12, "[%s]: Unable to resolve color for %ld", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v14, -1, -1);
    MEMORY[0x1C87609B0](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id v15 = objc_msgSend(self, sel_blackColor);

  return (UIColor)v15;
}

uint64_t DisplayCategoryColorProvider.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t sub_1C282D76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C28305D8(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_1C282D798(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA6F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282D7D4(uint64_t a1)
{
  unint64_t v2 = sub_1C27DA6F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t DisplayCategoryColorProvider.encode(to:)(void *a1)
{
  sub_1C27D5A44(0, &qword_1EBB75798, (uint64_t (*)(void))sub_1C27DA6F8, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v8 - v5;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA6F8();
  sub_1C28CE800();
  sub_1C28CE5D0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DisplayCategoryColorProvider.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t DisplayCategoryColorProvider.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v13 = a2;
  sub_1C27D5A44(0, &qword_1EA310918, (uint64_t (*)(void))sub_1C27DA6F8, (uint64_t)&type metadata for DisplayCategoryColorProvider.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v12 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C27DA6F8();
  sub_1C28CE7F0();
  if (!v2)
  {
    id v9 = v13;
    uint64_t v10 = sub_1C28CE510();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *id v9 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

void sub_1C282DB60(HealthExperience::ColorProviderContext a1)
{
  DisplayCategoryColorProvider.uiColor(for:)(a1);

  JUMPOUT(0x1C875E9F0);
}

uint64_t sub_1C282DBA8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return DisplayCategoryColorProvider.init(from:)(a1, a2);
}

uint64_t SemanticColorProvider.color(for:)()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = MEMORY[0x1F40FC498]();
      break;
    case 2:
      id v1 = objc_msgSend(self, sel_tertiaryLabelColor);
      JUMPOUT(0x1C875E9F0);
    case 3:
      uint64_t result = MEMORY[0x1F40FC2F0]();
      break;
    default:
      uint64_t result = MEMORY[0x1F40FC450]();
      break;
  }
  return result;
}

UIColor __swiftcall SemanticColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  id v2 = objc_msgSend(self, *off_1E6456B18[*v1]);

  return (UIColor)v2;
}

HealthExperience::SemanticColorProvider_optional __swiftcall SemanticColorProvider.init(rawValue:)(Swift::String rawValue)
{
  id v2 = v1;
  unint64_t v3 = sub_1C28CE460();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  *id v2 = v5;
  return result;
}

uint64_t SemanticColorProvider.rawValue.getter()
{
  uint64_t result = 0x7972616D697270;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x7261646E6F636573;
      break;
    case 2:
      uint64_t result = 0x7972616974726574;
      break;
    case 3:
      uint64_t result = 0x746E65636361;
      break;
    default:
      return result;
  }
  return result;
}

HealthExperience::SemanticColorProvider_optional sub_1C282DDC0(Swift::String *a1)
{
  return SemanticColorProvider.init(rawValue:)(*a1);
}

void sub_1C282DDCC(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE700000000000000;
  uint64_t v3 = 0x7972616D697270;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE900000000000079;
      uint64_t v3 = 0x7261646E6F636573;
      goto LABEL_3;
    case 2:
      *a1 = 0x7972616974726574;
      a1[1] = 0xE800000000000000;
      break;
    case 3:
      *a1 = 0x746E65636361;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_1C282DE68()
{
  switch(*v0)
  {
    case 1:
      uint64_t result = MEMORY[0x1F40FC498]();
      break;
    case 2:
      id v1 = objc_msgSend(self, sel_tertiaryLabelColor);
      JUMPOUT(0x1C875E9F0);
    case 3:
      uint64_t result = MEMORY[0x1F40FC2F0]();
      break;
    default:
      uint64_t result = MEMORY[0x1F40FC450]();
      break;
  }
  return result;
}

id sub_1C282DF28()
{
  id v1 = objc_msgSend(self, *off_1E6456B18[*v0]);

  return v1;
}

uint64_t sub_1C282DF7C(unsigned __int8 *a1, char *a2)
{
  return sub_1C27F2810(*a1, *a2);
}

uint64_t sub_1C282DF88()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282E064()
{
  sub_1C28CD790();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C282E128()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282E200()
{
  return sub_1C28CD8E0();
}

uint64_t sub_1C282E260()
{
  return sub_1C28CD8C0();
}

HealthExperience::RGBColorProvider __swiftcall RGBColorProvider.init(red:green:blue:alpha:)(Swift::Double red, Swift::Double green, Swift::Double blue, Swift::Double alpha)
{
  *uint64_t v4 = red;
  v4[1] = green;
  v4[2] = blue;
  v4[3] = alpha;
  result.alpha = alpha;
  result.blue = blue;
  result.green = green;
  result.red = red;
  return result;
}

HealthExperience::RGBColorProvider __swiftcall RGBColorProvider.init(uiColor:)(UIColor uiColor)
{
  uint64_t v3 = v1;
  v11[1] = *MEMORY[0x1E4F143B8];
  double v10 = 0.0;
  v11[0] = 0;
  double v8 = 0.0;
  double v9 = 0.0;
  [(objc_class *)uiColor.super.isa getRed:v11 green:&v10 blue:&v9 alpha:&v8];

  double v5 = v10;
  double v4 = *(double *)v11;
  double v7 = v8;
  double v6 = v9;
  *(void *)uint64_t v3 = v11[0];
  *(double *)(v3 + 8) = v5;
  *(double *)(v3 + 16) = v6;
  *(double *)(v3 + 24) = v7;
  result.alpha = v7;
  result.blue = v6;
  result.green = v5;
  result.red = v4;
  return result;
}

uint64_t RGBColorProvider.color(for:)()
{
  uint64_t v1 = sub_1C28CD480();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v4 = *v0;
  double v5 = v0[1];
  double v6 = v0[2];
  double v7 = v0[3];
  (*(void (**)(char *, void))(v8 + 104))(v3, *MEMORY[0x1E4F3EB10]);
  return MEMORY[0x1C875EA40](v3, v4, v5, v6, v7);
}

UIColor __swiftcall RGBColorProvider.uiColor(for:)(HealthExperience::ColorProviderContext a1)
{
  double v2 = *v1;
  double v3 = v1[1];
  double v4 = v1[2];
  double v5 = v1[3];
  id v6 = objc_allocWithZone(MEMORY[0x1E4FB1618]);

  return (UIColor)objc_msgSend(v6, sel_initWithRed_green_blue_alpha_, v2, v3, v4, v5);
}

uint64_t RGBColorProvider.hash(into:)()
{
  return sub_1C28CE730();
}

uint64_t sub_1C282E500()
{
  uint64_t result = 6579570;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6E65657267;
      break;
    case 2:
      uint64_t result = 1702194274;
      break;
    case 3:
      uint64_t result = 0x6168706C61;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1C282E578@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2830660(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C282E5A0(uint64_t a1)
{
  unint64_t v2 = sub_1C282F3EC();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C282E5DC(uint64_t a1)
{
  unint64_t v2 = sub_1C282F3EC();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RGBColorProvider.encode(to:)(void *a1)
{
  sub_1C27D5A44(0, &qword_1EBB75850, (uint64_t (*)(void))sub_1C282F3EC, (uint64_t)&type metadata for RGBColorProvider.CodingKeys, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  double v7 = (char *)&v9 - v6;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C282F3EC();
  sub_1C28CE800();
  char v13 = 0;
  sub_1C28CE5C0();
  if (!v1)
  {
    char v12 = 1;
    sub_1C28CE5C0();
    char v11 = 2;
    sub_1C28CE5C0();
    char v10 = 3;
    sub_1C28CE5C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t RGBColorProvider.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t RGBColorProvider.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v21 = a2;
  sub_1C27D5A44(0, &qword_1EA310920, (uint64_t (*)(void))sub_1C282F3EC, (uint64_t)&type metadata for RGBColorProvider.CodingKeys, MEMORY[0x1E4FBBDC0]);
  uint64_t v5 = v4;
  uint64_t v6 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v20 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C282F3EC();
  sub_1C28CE7F0();
  if (!v2)
  {
    uint64_t v9 = v6;
    char v10 = v21;
    char v25 = 0;
    sub_1C28CE500();
    uint64_t v12 = v11;
    char v24 = 1;
    sub_1C28CE500();
    uint64_t v14 = v13;
    char v23 = 2;
    sub_1C28CE500();
    uint64_t v16 = v15;
    char v22 = 3;
    sub_1C28CE500();
    uint64_t v19 = v18;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v8, v5);
    *char v10 = v12;
    v10[1] = v14;
    v10[2] = v16;
    _OWORD v10[3] = v19;
  }
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
}

uint64_t sub_1C282EA9C()
{
  uint64_t v1 = sub_1C28CD480();
  MEMORY[0x1F4188790](v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v4 = *v0;
  double v5 = v0[1];
  double v6 = v0[2];
  double v7 = v0[3];
  (*(void (**)(char *, void))(v8 + 104))(v3, *MEMORY[0x1E4F3EB10]);
  return MEMORY[0x1C875EA40](v3, v4, v5, v6, v7);
}

id sub_1C282EB84()
{
  double v1 = *v0;
  double v2 = v0[1];
  double v3 = v0[2];
  double v4 = v0[3];
  id v5 = objc_allocWithZone(MEMORY[0x1E4FB1618]);

  return objc_msgSend(v5, sel_initWithRed_green_blue_alpha_, v1, v2, v3, v4);
}

uint64_t sub_1C282EBE8()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282EC38()
{
  return sub_1C28CE740();
}

uint64_t sub_1C282EC80@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return RGBColorProvider.init(from:)(a1, a2);
}

uint64_t sub_1C282EC98(void *a1)
{
  return RGBColorProvider.encode(to:)(a1);
}

BOOL _s16HealthExperience16RGBColorProviderV2eeoiySbAC_ACtFZ_0(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1] && a1[2] == a2[2] && a1[3] == a2[3];
}

uint64_t _s16HealthExperience19ColorRepresentationO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v32 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ColorRepresentation(0);
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (float64x2_t *)((char *)&v31 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (unsigned __int8 *)&v31 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (uint64_t *)((char *)&v31 - v14);
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v31 - v16;
  sub_1C2830840();
  uint64_t v19 = MEMORY[0x1F4188790](v18 - 8);
  uint64_t v21 = (char *)&v31 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_1C27D4D68(a1, (uint64_t)v21, type metadata accessor for ColorRepresentation);
  sub_1C27D4D68(a2, v22, type metadata accessor for ColorRepresentation);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_1C27D4D68((uint64_t)v21, (uint64_t)v15, type metadata accessor for ColorRepresentation);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      char v24 = (uint64_t (*)(void))sub_1C2830840;
      if (EnumCaseMultiPayload != 1) {
        goto LABEL_10;
      }
      char v23 = *v15 == *(void *)v22;
      goto LABEL_12;
    case 2u:
      sub_1C27D4D68((uint64_t)v21, (uint64_t)v12, type metadata accessor for ColorRepresentation);
      int v26 = swift_getEnumCaseMultiPayload();
      char v24 = (uint64_t (*)(void))sub_1C2830840;
      if (v26 != 2) {
        goto LABEL_10;
      }
      char v23 = sub_1C27F2810(*v12, *(unsigned char *)v22);
      goto LABEL_12;
    case 3u:
      sub_1C27D4D68((uint64_t)v21, (uint64_t)v9, type metadata accessor for ColorRepresentation);
      int v27 = swift_getEnumCaseMultiPayload();
      char v24 = (uint64_t (*)(void))sub_1C2830840;
      if (v27 == 3)
      {
        char v23 = vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_f64(*v9, *(float64x2_t *)v22), (int32x4_t)vceqq_f64(v9[1], *(float64x2_t *)(v22 + 16)))), 0xFuLL)));
        goto LABEL_12;
      }
LABEL_10:
      char v23 = 0;
      break;
    default:
      sub_1C27D4D68((uint64_t)v21, (uint64_t)v17, type metadata accessor for ColorRepresentation);
      if (swift_getEnumCaseMultiPayload())
      {
        sub_1C282FA3C((uint64_t)v17, type metadata accessor for HKObjectTypeColorProvider);
        char v23 = 0;
        char v24 = (uint64_t (*)(void))sub_1C2830840;
      }
      else
      {
        uint64_t v28 = v22;
        uint64_t v29 = v32;
        sub_1C27D5AAC(v28, v32, type metadata accessor for HKObjectTypeColorProvider);
        sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB75998);
        sub_1C282F13C(&qword_1EBB74908);
        char v23 = sub_1C28CD590();
        sub_1C282FA3C(v29, type metadata accessor for HKObjectTypeColorProvider);
        sub_1C282FA3C((uint64_t)v17, type metadata accessor for HKObjectTypeColorProvider);
LABEL_12:
        char v24 = type metadata accessor for ColorRepresentation;
      }
      break;
  }
  sub_1C282FA3C((uint64_t)v21, v24);
  return v23 & 1;
}

uint64_t sub_1C282F13C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27D1C9C(255, (unint64_t *)&qword_1EBB75998);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C282F190()
{
  unint64_t result = qword_1EA3108F0;
  if (!qword_1EA3108F0)
  {
    sub_1C27D4F54(255, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
    sub_1C282F13C(&qword_1EBB73CC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108F0);
  }
  return result;
}

unint64_t sub_1C282F248()
{
  unint64_t result = qword_1EBB75800;
  if (!qword_1EBB75800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75800);
  }
  return result;
}

unint64_t sub_1C282F29C()
{
  unint64_t result = qword_1EA3108F8;
  if (!qword_1EA3108F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3108F8);
  }
  return result;
}

unint64_t sub_1C282F2F0()
{
  unint64_t result = qword_1EA310900;
  if (!qword_1EA310900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310900);
  }
  return result;
}

unint64_t sub_1C282F344()
{
  unint64_t result = qword_1EA310908;
  if (!qword_1EA310908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310908);
  }
  return result;
}

unint64_t sub_1C282F398()
{
  unint64_t result = qword_1EA310910;
  if (!qword_1EA310910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310910);
  }
  return result;
}

unint64_t sub_1C282F3EC()
{
  unint64_t result = qword_1EBB75828;
  if (!qword_1EBB75828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75828);
  }
  return result;
}

uint64_t sub_1C282F440(uint64_t a1)
{
  *(void *)(a1 + 8) = sub_1C27D47D8(&qword_1EA310928, (void (*)(uint64_t))type metadata accessor for ColorRepresentation);
  uint64_t result = sub_1C27D47D8(&qword_1EA310930, (void (*)(uint64_t))type metadata accessor for ColorRepresentation);
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_1C282F4C4()
{
  return sub_1C27D47D8(&qword_1EA310938, (void (*)(uint64_t))type metadata accessor for ColorRepresentation);
}

uint64_t sub_1C282F50C()
{
  return sub_1C27D47D8(&qword_1EA310940, (void (*)(uint64_t))type metadata accessor for HKObjectTypeColorProvider);
}

uint64_t sub_1C282F554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C282F580(a1, a2, a3, (uint64_t (*)(void))sub_1C282F398, (uint64_t (*)(void))sub_1C27DA688);
}

uint64_t sub_1C282F580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_1C282F5C0()
{
  unint64_t result = qword_1EA310948;
  if (!qword_1EA310948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310948);
  }
  return result;
}

uint64_t sub_1C282F614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C282F580(a1, a2, a3, (uint64_t (*)(void))sub_1C282F344, (uint64_t (*)(void))sub_1C282F29C);
}

unint64_t sub_1C282F644()
{
  unint64_t result = qword_1EA310950;
  if (!qword_1EA310950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310950);
  }
  return result;
}

uint64_t sub_1C282F698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1C282F580(a1, a2, a3, (uint64_t (*)(void))sub_1C282F2F0, (uint64_t (*)(void))sub_1C282F248);
}

unint64_t sub_1C282F6C8()
{
  unint64_t result = qword_1EA310958;
  if (!qword_1EA310958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310958);
  }
  return result;
}

uint64_t sub_1C282F71C@<X0>(uint64_t *a1@<X8>)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  uint64_t result = sub_1C28CD570();
  *a1 = result;
  return result;
}

uint64_t sub_1C282F77C(void **a1)
{
  double v1 = *a1;
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  id v2 = v1;
  return sub_1C28CD580();
}

uint64_t dispatch thunk of ColorProvider.color(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ColorProvider.uiColor(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t *initializeBufferWithCopyOfBuffer for ColorRepresentation(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

void *assignWithCopy for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C282FA3C((uint64_t)a1, type metadata accessor for ColorRepresentation);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t sub_1C282FA3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ColorRepresentation(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1C282FA3C((uint64_t)a1, type metadata accessor for ColorRepresentation);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t initializeBufferWithCopyOfBuffer for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  int v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t initializeWithCopy for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C282FF80);
}

uint64_t sub_1C282FF80(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for HKObjectTypeColorProvider(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C283002C);
}

uint64_t sub_1C283002C(uint64_t a1, uint64_t a2)
{
  sub_1C27D4F54(0, (unint64_t *)&qword_1EBB75ED0, (unint64_t *)&qword_1EBB75998, 0x1E4F2B2C0, MEMORY[0x1E4F29518]);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

ValueMetadata *type metadata accessor for SemanticColorProvider()
{
  return &type metadata for SemanticColorProvider;
}

ValueMetadata *type metadata accessor for RGBColorProvider()
{
  return &type metadata for RGBColorProvider;
}

ValueMetadata *type metadata accessor for RGBColorProvider.CodingKeys()
{
  return &type metadata for RGBColorProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for DisplayCategoryColorProvider.CodingKeys()
{
  return &type metadata for DisplayCategoryColorProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for HKObjectTypeColorProvider.CodingKeys()
{
  return &type metadata for HKObjectTypeColorProvider.CodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.CodingKeys()
{
  return &type metadata for ColorRepresentation.CodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.ObjectTypeCodingKeys()
{
  return &type metadata for ColorRepresentation.ObjectTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.DisplayCategoryCodingKeys()
{
  return &type metadata for ColorRepresentation.DisplayCategoryCodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.SemanticCodingKeys()
{
  return &type metadata for ColorRepresentation.SemanticCodingKeys;
}

ValueMetadata *type metadata accessor for ColorRepresentation.RgbCodingKeys()
{
  return &type metadata for ColorRepresentation.RgbCodingKeys;
}

unint64_t sub_1C28301BC()
{
  unint64_t result = qword_1EA310960;
  if (!qword_1EA310960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310960);
  }
  return result;
}

unint64_t sub_1C2830214()
{
  unint64_t result = qword_1EA310968;
  if (!qword_1EA310968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310968);
  }
  return result;
}

unint64_t sub_1C283026C()
{
  unint64_t result = qword_1EA310970;
  if (!qword_1EA310970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310970);
  }
  return result;
}

unint64_t sub_1C28302C4()
{
  unint64_t result = qword_1EA310978;
  if (!qword_1EA310978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310978);
  }
  return result;
}

unint64_t sub_1C283031C()
{
  unint64_t result = qword_1EA310980;
  if (!qword_1EA310980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310980);
  }
  return result;
}

unint64_t sub_1C2830374()
{
  unint64_t result = qword_1EA310988;
  if (!qword_1EA310988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310988);
  }
  return result;
}

unint64_t sub_1C28303CC()
{
  unint64_t result = qword_1EA310990;
  if (!qword_1EA310990)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310990);
  }
  return result;
}

unint64_t sub_1C2830424()
{
  unint64_t result = qword_1EA310998;
  if (!qword_1EA310998)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310998);
  }
  return result;
}

unint64_t sub_1C283047C()
{
  unint64_t result = qword_1EBB75838;
  if (!qword_1EBB75838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75838);
  }
  return result;
}

unint64_t sub_1C28304D4()
{
  unint64_t result = qword_1EBB75830;
  if (!qword_1EBB75830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75830);
  }
  return result;
}

unint64_t sub_1C283052C()
{
  unint64_t result = qword_1EBB751F0;
  if (!qword_1EBB751F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB751F0);
  }
  return result;
}

unint64_t sub_1C2830584()
{
  unint64_t result = qword_1EBB751E8;
  if (!qword_1EBB751E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB751E8);
  }
  return result;
}

uint64_t sub_1C28305D8(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD00000000000001ALL && a2 == 0x80000001C28DC280)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_1C2830660(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 6579570 && a2 == 0xE300000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E65657267 && a2 == 0xE500000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1702194274 && a2 == 0xE400000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6168706C61 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

unint64_t sub_1C28307EC()
{
  unint64_t result = qword_1EA3109A0;
  if (!qword_1EA3109A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109A0);
  }
  return result;
}

void sub_1C2830840()
{
  if (!qword_1EBB74900)
  {
    type metadata accessor for ColorRepresentation(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB74900);
    }
  }
}

uint64_t AtomicLazy.__allocating_init(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AtomicLazy.init(_:)(a1, a2);
  return v4;
}

uint64_t AtomicLazy.__allocating_init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  AtomicLazy.init(wrappedValue:)(a1, a2);
  return v4;
}

void *AtomicLazy.init(wrappedValue:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*v2 + 80);
  uint64_t v6 = *(void *)(*v2 + 88);
  uint64_t v7 = type metadata accessor for AtomicLazy.State();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (uint64_t (**)())((char *)&v14 - v9);
  uint64_t v11 = (uint64_t (*)())swift_allocObject();
  *((void *)v11 + 2) = v5;
  *((void *)v11 + 3) = v6;
  *((void *)v11 + 4) = a1;
  *((void *)v11 + 5) = a2;
  *uint64_t v10 = sub_1C2831138;
  v10[1] = v11;
  swift_storeEnumTagMultiPayload();
  uint64_t v12 = sub_1C27CDDC8();
  (*(void (**)(uint64_t (**)(), uint64_t))(v8 + 8))(v10, v7);
  v2[2] = v12;
  return v2;
}

void AtomicLazy.wrappedValue.getter()
{
}

void AtomicLazy.wrappedValue.setter()
{
}

void AtomicLazy.wrappedValue.modify()
{
}

uint64_t static AtomicLazy.subscript.setter(uint64_t a1, uint64_t a2)
{
  sub_1C2831160(a1);
  swift_release();
  swift_release();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v2 + 80) - 8) + 8))(a2);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(*(void *)(*(void *)(v2 + 88) - 8) + 8);

  return v5(a1);
}

void sub_1C2830C70(uint64_t a1)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[2];
  v4[2] = *(void *)(*v1 + 80);
  v4[3] = *(void *)(v2 + 88);
  void v4[4] = a1;
  type metadata accessor for AtomicLazy.State();
  sub_1C27CD92C((void (*)(uint64_t))sub_1C2831F2C, (uint64_t)v4, v3);
}

void (*static AtomicLazy.subscript.modify(void *a1, uint64_t a2, uint64_t a3, uint64_t a4))(uint64_t a1, char a2)
{
  uint64_t v9 = malloc(0x48uLL);
  *a1 = v9;
  *uint64_t v9 = a3;
  v9[1] = a4;
  uint64_t v10 = *(void *)(v4 + 88);
  void v9[2] = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  v9[3] = v11;
  size_t v12 = *(void *)(v11 + 64);
  v9[4] = malloc(v12);
  uint64_t v13 = malloc(v12);
  uint64_t v14 = *(void *)(v4 + 80);
  void v9[5] = v13;
  v9[6] = v14;
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = v15;
  v9[7] = v15;
  v9[8] = malloc(*(void *)(v15 + 64));
  (*(void (**)(void))(v16 + 16))();
  static AtomicLazy.subscript.getter(a2);
  return sub_1C2830E64;
}

void sub_1C2830E64(uint64_t a1, char a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v4 = *(void *)(*(void *)a1 + 56);
  uint64_t v3 = *(void **)(*(void *)a1 + 64);
  uint64_t v5 = *(void **)(*(void *)a1 + 40);
  uint64_t v6 = *(void *)(*(void *)a1 + 48);
  uint64_t v8 = *(void *)(*(void *)a1 + 24);
  uint64_t v7 = *(void **)(*(void *)a1 + 32);
  uint64_t v9 = *(void *)(*(void *)a1 + 16);
  if (a2)
  {
    (*(void (**)(void, void *, uint64_t))(v8 + 16))(*(void *)(*(void *)a1 + 32), v5, v9);
    swift_retain();
    swift_retain();
    sub_1C2831160((uint64_t)v7);
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    uint64_t v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v7, v9);
    v10(v5, v9);
  }
  else
  {
    swift_retain();
    swift_retain();
    sub_1C2831160((uint64_t)v5);
    swift_release();
    swift_release();
    (*(void (**)(void *, uint64_t))(v4 + 8))(v3, v6);
    (*(void (**)(void *, uint64_t))(v8 + 8))(v5, v9);
  }
  free(v3);
  free(v5);
  free(v7);

  free(v2);
}

uint64_t sub_1C2830FE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = type metadata accessor for AtomicLazy.State();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 16))(a1, a2, a4);
  return swift_storeEnumTagMultiPayload();
}

uint64_t AtomicLazy.deinit()
{
  swift_release();
  return v0;
}

uint64_t AtomicLazy.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1C2831100()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2831138()
{
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1C2831160(uint64_t a1)
{
  return swift_release();
}

void sub_1C28311AC()
{
}

void sub_1C28311BC()
{
}

uint64_t sub_1C2831218()
{
  return 16;
}

__n128 sub_1C2831224(__n128 *a1, __n128 *a2)
{
  __n128 result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_1C2831230()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AtomicLazy()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for AtomicLazy(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AtomicLazy);
}

uint64_t dispatch thunk of AtomicLazy.__allocating_init(_:)()
{
  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of AtomicLazy.__allocating_init(wrappedValue:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t sub_1C28312D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C283136C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v4 + 64) <= 0x10uLL) {
    uint64_t v5 = 16;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_24:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 2;
        unsigned int v9 = v12 + 2;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 != 1)
  {
    uint64_t v14 = *((void *)a2 + 1);
    *uint64_t v3 = *(void *)a2;
    v3[1] = v14;
    *((unsigned char *)v3 + v5) = 0;
    goto LABEL_24;
  }
  (*(void (**)(void *))(v4 + 16))(a1);
  *((unsigned char *)v3 + v5) = 1;
  return v3;
}

unsigned __int8 *sub_1C283150C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      uint64_t v18 = *((void *)a2 + 1);
      *(void *)a1 = *(void *)a2;
      *((void *)a1 + 1) = v18;
      a1[v7] = 0;
      swift_retain();
    }
  }
  return a1;
}

_OWORD *sub_1C2831728(_OWORD *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    uint64_t v4 = 16;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(_OWORD *))(*(void *)(*(void *)(a3 + 24) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(_OWORD *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C2831860(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 24);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 0x10uLL) {
      uint64_t v7 = 16;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C2831A78(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v4 = 16;
  if (*(void *)(v3 + 64) > 0x10uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C2831BAC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  if (v5 <= 0x10) {
    unint64_t v5 = 16;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C2831D74);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C2831D9C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v3 = 16;
  if (*(void *)(v2 + 64) > 0x10uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C2831E54(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64) <= 0x10uLL) {
    size_t v4 = 16;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C2831F2C(uint64_t a1)
{
  return sub_1C2830FE0(a1, v1[4], v1[2], v1[3]);
}

uint64_t sub_1C2831F4C(uint64_t a1, uint64_t (*a2)(uint64_t, uint64_t, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v46 = a1;
  uint64_t v45 = sub_1C28CC7D0();
  uint64_t v42 = *(void *)(v45 - 8);
  uint64_t v43 = *(void *)(v42 + 64);
  MEMORY[0x1F4188790](v45);
  uint64_t v41 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2839870();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v48 = v11;
  uint64_t v49 = v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v47 = (char *)&v37 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27DE740();
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  char v18 = (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28399B0();
  uint64_t v39 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C283991C();
  uint64_t v40 = v23;
  uint64_t v44 = *(void *)(v23 - 8);
  MEMORY[0x1F4188790](v23);
  char v38 = (char *)&v37 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = a2(a4, a5, a6);
  sub_1C27DE82C(0);
  sub_1C27DE9FC(0);
  sub_1C2839BF0((unint64_t *)&qword_1EBB75588, sub_1C27DE82C);
  sub_1C2839BF0((unint64_t *)&unk_1EBB755D0, sub_1C27DE9FC);
  sub_1C28CD350();
  swift_release();
  sub_1C2839BF0((unint64_t *)&unk_1EBB754A8, (void (*)(uint64_t))sub_1C27DE740);
  sub_1C28CD430();
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  sub_1C2839BF0(&qword_1EBB75388, (void (*)(uint64_t))sub_1C28399B0);
  int v26 = v38;
  uint64_t v25 = v39;
  sub_1C28CD360();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v22, v25);
  uint64_t v28 = v41;
  uint64_t v27 = v42;
  uint64_t v29 = v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v41, v46, v45);
  unint64_t v30 = (*(unsigned __int8 *)(v27 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v27 + 80);
  uint64_t v31 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v27 + 32))(v31 + v30, v28, v29);
  sub_1C28CCA60();
  sub_1C2839BF0(&qword_1EBB754C8, (void (*)(uint64_t))sub_1C283991C);
  uint64_t v32 = v47;
  uint64_t v33 = v40;
  sub_1C28CD310();
  swift_release();
  sub_1C2839BF0(&qword_1EBB75348, (void (*)(uint64_t))sub_1C2839870);
  uint64_t v34 = v48;
  uint64_t v35 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v32, v34);
  (*(void (**)(char *, uint64_t))(v44 + 8))(v26, v33);
  return v35;
}

uint64_t sub_1C2832538@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  int v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCDC0();
  id v8 = a1;
  id v9 = a1;
  uint64_t v10 = sub_1C28CCE00();
  os_log_type_t v11 = sub_1C28CDCB0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v24 = v4;
    uint64_t v13 = v12;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v27 = v14;
    *(_DWORD *)uint64_t v13 = 136315394;
    sub_1C2839680(0, &qword_1EBB75540, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    uint64_t v26 = v15;
    sub_1C2839C38();
    uint64_t v25 = a2;
    uint64_t v16 = sub_1C28CD750();
    uint64_t v26 = sub_1C27D36AC(v16, v17, &v27);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v26 = (uint64_t)a1;
    id v18 = a1;
    sub_1C27C7060();
    uint64_t v19 = sub_1C28CD750();
    uint64_t v26 = sub_1C27D36AC(v19, v20, &v27);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v10, v11, "[%s]: Received error from date range query that should return a Result: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v14, -1, -1);
    MEMORY[0x1C87609B0](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v27 = (uint64_t)a1;
  char v28 = 1;
  id v21 = a1;
  sub_1C27DE860(0);
  return sub_1C28CD210();
}

uint64_t sub_1C2832824@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  os_log_type_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC7D0();
  MEMORY[0x1F4188790](v12);
  if (a2)
  {
    id v17 = a1;
    sub_1C28CCDC0();
    id v18 = a1;
    id v19 = a1;
    unint64_t v20 = sub_1C28CCE00();
    os_log_type_t v21 = sub_1C28CDCB0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v32 = swift_slowAlloc();
      uint64_t v34 = v32;
      *(_DWORD *)uint64_t v22 = 136315394;
      sub_1C2839680(0, &qword_1EBB75540, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
      uint64_t v33 = v23;
      sub_1C2839C38();
      uint64_t v24 = sub_1C28CD750();
      uint64_t v33 = sub_1C27D36AC(v24, v25, &v34);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v22 + 12) = 2080;
      uint64_t v33 = (uint64_t)a1;
      id v26 = a1;
      sub_1C27C7060();
      uint64_t v27 = sub_1C28CD750();
      uint64_t v33 = sub_1C27D36AC(v27, v28, &v34);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      sub_1C27DEB6C(a1, 1);
      sub_1C27DEB6C(a1, 1);
      _os_log_impl(&dword_1C27B7000, v20, v21, "[%s]: Error when query for date ranges for database changes: %s", (uint8_t *)v22, 0x16u);
      uint64_t v29 = v32;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v29, -1, -1);
      MEMORY[0x1C87609B0](v22, -1, -1);

      sub_1C27DEB6C(a1, 1);
    }
    else
    {
      sub_1C27DEB6C(a1, 1);
      sub_1C27DEB6C(a1, 1);
    }
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    uint64_t v30 = sub_1C28CCA60();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(a4, 1, 1, v30);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v14 + 16))((char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
    swift_bridgeObjectRetain();
    sub_1C28CCA40();
    uint64_t v15 = sub_1C28CCA60();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a4, 0, 1, v15);
  }
}

uint64_t Publisher<>.databaseChangesContentPublisher<A>(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:databaseChangesPublisherFactory:dateRangePublisherFactory:queryDebugIdentifierPrefix:)(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v62 = a7;
  uint64_t v58 = a8;
  uint64_t v59 = a5;
  uint64_t v61 = a6;
  uint64_t v57 = a4;
  int v60 = a3;
  uint64_t v43 = a2;
  uint64_t v53 = a1;
  uint64_t v56 = a9;
  uint64_t v45 = a10;
  uint64_t v63 = a12;
  uint64_t v47 = sub_1C28CC760();
  uint64_t v14 = *(void *)(v47 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x1F4188790](v47);
  uint64_t v41 = (char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = a13;
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_1C28CD0A0();
  uint64_t v46 = v16;
  uint64_t v17 = sub_1C28CCF10();
  uint64_t v49 = v17;
  uint64_t v55 = *(void *)(v17 - 8);
  MEMORY[0x1F4188790](v17);
  uint64_t v51 = (char *)&v40 - v18;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = WitnessTable;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v64 = v16;
  uint64_t v65 = v17;
  uint64_t v66 = WitnessTable;
  uint64_t v67 = v48;
  uint64_t v52 = sub_1C28CCEF0();
  uint64_t v54 = *(void *)(v52 - 8);
  MEMORY[0x1F4188790](v52);
  uint64_t v44 = (char *)&v40 - v20;
  uint64_t v64 = a2;
  sub_1C28CDA30();
  swift_getWitnessTable();
  uint64_t v42 = Collection<>.hkTypes.getter();
  uint64_t v21 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))((char *)&v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0), v53, v47);
  unint64_t v22 = (*(unsigned __int8 *)(v14 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v23 = (v15 + v22 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v24 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v25 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  id v26 = (char *)swift_allocObject();
  *((void *)v26 + 2) = v45;
  *((void *)v26 + 3) = a11;
  uint64_t v27 = v40;
  *((void *)v26 + 4) = v63;
  *((void *)v26 + 5) = v27;
  *((void *)v26 + 6) = v43;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v26[v22], v41, v21);
  unint64_t v28 = &v26[v23];
  uint64_t v29 = v59;
  uint64_t v30 = v56;
  *(void *)unint64_t v28 = v58;
  *((void *)v28 + 1) = v30;
  uint64_t v31 = &v26[v24];
  *(void *)uint64_t v31 = v57;
  *((void *)v31 + 1) = v29;
  *(void *)&v26[v25] = v42;
  uint64_t v32 = &v26[(v25 + 15) & 0xFFFFFFFFFFFFFFF8];
  uint64_t v33 = v62;
  *(void *)uint64_t v32 = v61;
  *((void *)v32 + 1) = v33;
  v32[16] = v60;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  uint64_t v34 = v51;
  sub_1C28CD330();
  swift_release();
  uint64_t v35 = v44;
  uint64_t v36 = v49;
  MEMORY[0x1C875E9B0](v49, v48, v50);
  (*(void (**)(char *, uint64_t))(v55 + 8))(v34, v36);
  uint64_t v37 = v52;
  swift_getWitnessTable();
  uint64_t v38 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v54 + 8))(v35, v37);
  return v38;
}

uint64_t sub_1C2833100(void (*a1)(uint64_t *__return_ptr, id *), uint64_t a2, unint64_t a3)
{
  if (a3 >> 62) {
    goto LABEL_16;
  }
  uint64_t v6 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    uint64_t result = MEMORY[0x1E4FBC860];
    if (!v6) {
      break;
    }
    uint64_t v13 = MEMORY[0x1E4FBC860];
    uint64_t result = sub_1C28CE1F0();
    if (v6 < 0)
    {
      __break(1u);
      return result;
    }
    uint64_t v8 = 0;
    while (v6 != v8)
    {
      if ((a3 & 0xC000000000000001) != 0) {
        id v9 = (id)MEMORY[0x1C875F6E0](v8, a3);
      }
      else {
        id v9 = *(id *)(a3 + 8 * v8 + 32);
      }
      uint64_t v10 = v9;
      id v11 = v9;
      a1(&v12, &v11);

      if (v3) {
        return swift_release();
      }
      ++v8;
      sub_1C28CE1C0();
      sub_1C28CE200();
      sub_1C28CE210();
      sub_1C28CE1D0();
      if (v6 == v8) {
        return v13;
      }
    }
    __break(1u);
LABEL_16:
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1C28CE3B0();
    swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1C2833270(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v28 = a5;
  uint64_t v29 = a8;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v27 = *(void *)(a5 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v40 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v33 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v10 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v12 = (char *)&v26 - v11;
  MEMORY[0x1F4188790](v10);
  uint64_t v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_getAssociatedTypeWitness();
  uint64_t v30 = *(void *)(v15 - 8);
  uint64_t v31 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = sub_1C28CDB80();
  if (!v18) {
    return sub_1C28CD9A0();
  }
  uint64_t v19 = v18;
  uint64_t v43 = sub_1C28CD5D0();
  uint64_t v32 = sub_1C28CE240();
  sub_1C28CE1E0();
  uint64_t v36 = v8;
  uint64_t result = sub_1C28CDB70();
  if (v19 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v34 = (void (**)(char *))(v33 + 2);
    uint64_t v35 = v14;
    ++v33;
    while (1)
    {
      uint64_t v21 = (void (*)(char *, void))sub_1C28CDBC0();
      unint64_t v22 = v12;
      unint64_t v23 = v12;
      uint64_t v24 = AssociatedTypeWitness;
      (*v34)(v22);
      v21(v42, 0);
      uint64_t v25 = v41;
      v38(v23, v40);
      if (v25) {
        break;
      }
      uint64_t v41 = 0;
      (*v33)(v23, v24);
      sub_1C28CE220();
      sub_1C28CDBA0();
      --v19;
      uint64_t v12 = v23;
      if (!v19)
      {
        (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
        return v43;
      }
    }
    (*v33)(v23, v24);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v31);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v27 + 32))(v29, v40, v28);
  }
  return result;
}

uint64_t Publisher<>.mapToAnchoredChangeSet()(uint64_t a1, uint64_t a2)
{
  sub_1C2836790(255);
  v12[0] = v4;
  v12[1] = a1;
  void v12[2] = sub_1C2839BF0((unint64_t *)&qword_1EBB76D28, sub_1C2836790);
  uint64_t v12[3] = a2;
  uint64_t v5 = sub_1C28CCF60();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v8 = (char *)v12 - v7;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  sub_1C28CD090();
  sub_1C28CC7D0();
  sub_1C28CD3B0();
  swift_release();
  swift_getWitnessTable();
  uint64_t v10 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t DataTypeContentConfigurationPublisher.generatorContext.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1C28CC760();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DataTypeContentConfigurationPublisher.configurations.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t DataTypeContentConfigurationPublisher.filterAnchoredTypeChangesWithNoChange.getter(uint64_t a1)
{
  return *(unsigned __int8 *)(v1 + *(int *)(a1 + 64));
}

uint64_t DataTypeContentConfigurationPublisher.upstream.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 32) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

uint64_t DataTypeContentConfigurationPublisher.init(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:upstream:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v12 = sub_1C28CC760();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(a6, a1, v12);
  uint64_t v13 = (int *)type metadata accessor for DataTypeContentConfigurationPublisher();
  *(void *)(a6 + v13[15]) = a2;
  *(unsigned char *)(a6 + v13[16]) = a3;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + v13[17], a4, a5);
}

uint64_t DataTypeContentConfigurationPublisher.receive<A>(subscriber:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v91 = a4;
  uint64_t v89 = a3;
  uint64_t v82 = a1;
  uint64_t v84 = *(void *)(a2 + 24);
  uint64_t v90 = sub_1C28CD0A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v81 = sub_1C28CCFB0();
  uint64_t v88 = *(void *)(v81 - 8);
  MEMORY[0x1F4188790](v81);
  uint64_t v86 = (char *)&v76 - v6;
  uint64_t v80 = sub_1C28CCE10();
  uint64_t v79 = *(void *)(v80 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v80);
  uint64_t v85 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v7);
  uint64_t v13 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v104 = (char *)&v76 - v14;
  sub_1C27D9154(0, (unint64_t *)&qword_1EBB76D58, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, MEMORY[0x1E4FBB320]);
  uint64_t v16 = v15;
  uint64_t v17 = sub_1C28CDA30();
  unint64_t v18 = sub_1C2837960();
  uint64_t v19 = sub_1C28CD5C0();
  uint64_t v106 = v19;
  uint64_t v20 = *(int *)(a2 + 60);
  uint64_t v83 = v4;
  uint64_t v21 = *(void *)(v4 + v20);
  uint64_t v22 = swift_bridgeObjectRetain();
  if (MEMORY[0x1C875EFA0](v22, v9))
  {
    uint64_t v77 = v11;
    uint64_t v23 = 0;
    uint64_t v78 = a2;
    uint64_t v24 = *(void *)(a2 + 40);
    id v98 = v13;
    uint64_t v99 = v24;
    uint64_t v25 = *(uint64_t (**)(void, void))(v24 + 16);
    uint64_t v96 = v24 + 16;
    uint64_t v97 = v21;
    uint64_t v102 = v10;
    uint64_t v103 = (void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
    uint64_t v94 = v10 + 8;
    uint64_t v95 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v26 = v17;
    uint64_t v27 = v21;
    uint64_t v92 = v16;
    unint64_t v93 = v18;
    while (1)
    {
      char v37 = sub_1C28CD9C0();
      sub_1C28CD960();
      if (v37)
      {
        unint64_t v38 = v27
            + ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))
            + *(void *)(v10 + 72) * v23;
        uint64_t v39 = *(void (**)(char *, uint64_t *, uint64_t))(v10 + 16);
        v39(v104, (uint64_t *)v38, v9);
        uint64_t v40 = v23 + 1;
        if (__OFADD__(v23, 1)) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t result = sub_1C28CE140();
        if (v77 != 8)
        {
          __break(1u);
          return result;
        }
        uint64_t v107 = result;
        uint64_t v39 = *v103;
        (*v103)(v104, &v107, v9);
        swift_unknownObjectRelease();
        uint64_t v40 = v23 + 1;
        if (__OFADD__(v23, 1))
        {
LABEL_12:
          __break(1u);
LABEL_13:
          swift_bridgeObjectRelease();
          uint64_t v19 = v106;
          uint64_t v49 = v78;
          uint64_t v50 = v99;
          goto LABEL_15;
        }
      }
      uint64_t v100 = v39;
      uint64_t v101 = v40;
      (*v95)(v13, v104, v9);
      uint64_t v41 = v99;
      uint64_t v42 = v25;
      uint64_t v105 = v25(v9, v99);
      MEMORY[0x1C875EBE0](&v107, &v105, v106, v16, v26, v18);
      swift_bridgeObjectRelease();
      if (v107)
      {
        uint64_t v28 = v41;
        uint64_t v29 = v25;
        uint64_t v30 = v25(v9, v28);
        sub_1C28379FC(v9, v9);
        uint64_t v31 = v102;
        swift_allocObject();
        uint64_t v32 = sub_1C28CD950();
        v100(v33, (uint64_t *)v13, v9);
        uint64_t v107 = v32;
        nullsub_1(v26);
        uint64_t v34 = sub_1C28CD980();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v107 = v34;
        uint64_t v105 = v30;
        uint64_t v16 = v92;
        unint64_t v35 = v93;
        sub_1C28CD640();
        sub_1C28CD660();
        (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v9);
        unint64_t v18 = v35;
        uint64_t v25 = v29;
      }
      else
      {
        uint64_t v43 = v25(v9, v41);
        sub_1C28379FC(v9, v9);
        uint64_t v44 = v102;
        swift_allocObject();
        uint64_t v45 = sub_1C28CD950();
        v100(v46, (uint64_t *)v13, v9);
        uint64_t v107 = v45;
        nullsub_1(v26);
        uint64_t v105 = v43;
        uint64_t v16 = v92;
        unint64_t v47 = v93;
        sub_1C28CD640();
        sub_1C28CD660();
        (*(void (**)(char *, uint64_t))(v44 + 8))(v13, v9);
        unint64_t v18 = v47;
        uint64_t v25 = v42;
      }
      uint64_t v27 = v97;
      uint64_t v36 = MEMORY[0x1C875EFA0](v97, v9);
      ++v23;
      uint64_t v10 = v102;
      uint64_t v13 = v98;
      if (v101 == v36) {
        goto LABEL_13;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v50 = *(void *)(a2 + 40);
  uint64_t v49 = a2;
LABEL_15:
  uint64_t v107 = v19;
  uint64_t v51 = MEMORY[0x1F4188790](v50);
  uint64_t v52 = v84;
  *(&v76 - 8) = v9;
  *(&v76 - 7) = v52;
  uint64_t v53 = v89;
  *(&v76 - 6) = *(void *)(v49 + 32);
  *(&v76 - 5) = v53;
  uint64_t v54 = *(void *)(v49 + 48);
  *(&v76 - 4) = v51;
  *(&v76 - 3) = v54;
  uint64_t v55 = v83;
  *(&v76 - 2) = v91;
  *(&v76 - 1) = v55;
  uint64_t v56 = MEMORY[0x1F4188790](v51);
  *(&v76 - 10) = v9;
  *(&v76 - 9) = v57;
  *(&v76 - 8) = v58;
  *(&v76 - 7) = v53;
  *(&v76 - 6) = v56;
  *(&v76 - 5) = v59;
  *(&v76 - 4) = v60;
  *(&v76 - 3) = (uint64_t)sub_1C2837A64;
  *(&v76 - 2) = v61;
  uint64_t v62 = sub_1C28CD640();
  swift_bridgeObjectRetain();
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v65 = sub_1C2833270((void (*)(char *, char *))sub_1C2837A98, (uint64_t)(&v76 - 12), v62, v90, MEMORY[0x1E4FBC248], v63, MEMORY[0x1E4FBC278], v64);
  swift_bridgeObjectRelease();
  uint64_t v66 = v85;
  sub_1C28CCDC0();
  swift_bridgeObjectRetain_n();
  uint64_t v67 = sub_1C28CCE00();
  os_log_type_t v68 = sub_1C28CDCD0();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v107 = v70;
    *(_DWORD *)uint64_t v69 = 136315394;
    uint64_t v105 = v49;
    swift_getMetatypeMetadata();
    uint64_t v71 = sub_1C28CD750();
    uint64_t v105 = sub_1C27D36AC(v71, v72, &v107);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v69 + 12) = 2048;
    uint64_t v73 = MEMORY[0x1C875EF70](v65, v90);
    swift_bridgeObjectRelease();
    uint64_t v105 = v73;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v67, v68, "[%s]: Created %ld streams from sample type groupings of configurations", (uint8_t *)v69, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v70, -1, -1);
    MEMORY[0x1C87609B0](v69, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v79 + 8))(v66, v80);
  uint64_t v74 = v81;
  uint64_t v107 = v65;
  sub_1C28CDA30();
  swift_getWitnessTable();
  uint64_t v75 = v86;
  sub_1C28CCFC0();
  sub_1C28CCFA0();
  (*(void (**)(char *, uint64_t))(v88 + 8))(v75, v74);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C2834418(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v58 = a8;
  uint64_t v61 = a7;
  uint64_t v71 = a6;
  uint64_t v59 = a4;
  uint64_t v62 = a3;
  uint64_t v64 = a2;
  unint64_t v72 = a1;
  uint64_t v56 = a9;
  uint64_t v60 = a10;
  uint64_t v63 = sub_1C28CD0A0();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v70 = sub_1C28CCFB0();
  uint64_t v69 = *(void *)(v70 - 8);
  MEMORY[0x1F4188790](v70);
  os_log_type_t v68 = (char *)&v56 - v17;
  uint64_t v66 = sub_1C28CCE10();
  uint64_t v65 = *(void *)(v66 - 8);
  MEMORY[0x1F4188790](v66);
  uint64_t v73 = (char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28387DC();
  uint64_t v57 = v19;
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v56 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = a4;
  uint64_t v86 = a5;
  uint64_t v87 = a6;
  uint64_t v88 = a7;
  uint64_t v89 = a8;
  uint64_t v23 = v56;
  uint64_t v90 = v56;
  uint64_t v91 = a10;
  uint64_t v92 = a3;
  uint64_t v93 = sub_1C2833100((void (*)(uint64_t *__return_ptr, id *))sub_1C28388F8, (uint64_t)v84, a1);
  uint64_t v24 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F671C8];
  sub_1C2839680(0, &qword_1EBB75550, MEMORY[0x1E4F671C8], MEMORY[0x1E4F1AAE0]);
  sub_1C2838930();
  sub_1C2838870();
  sub_1C2839BF0(&qword_1EBB75688, (void (*)(uint64_t))sub_1C2838930);
  sub_1C28CCFC0();
  *(void *)(swift_allocObject() + 16) = 1;
  sub_1C2839680(0, &qword_1EBB74EA0, v24, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  sub_1C2839BF0(&qword_1EBB75508, (void (*)(uint64_t))sub_1C28387DC);
  sub_1C28389D0();
  uint64_t v25 = v57;
  uint64_t v26 = sub_1C28CD3F0();
  swift_release();
  uint64_t v93 = v26;
  sub_1C2838A58();
  sub_1C2839BF0(&qword_1EBB75528, (void (*)(uint64_t))sub_1C2838A58);
  uint64_t v27 = sub_1C28CD190();
  swift_release();
  uint64_t v28 = v22;
  uint64_t v29 = v58;
  (*(void (**)(char *, uint64_t))(v20 + 8))(v28, v25);
  uint64_t v30 = v63;
  uint64_t v31 = v64;
  uint64_t v93 = v64;
  uint64_t v75 = v59;
  uint64_t v57 = a5;
  uint64_t v76 = a5;
  uint64_t v77 = v71;
  uint64_t v78 = v61;
  uint64_t v79 = v29;
  uint64_t v80 = v23;
  uint64_t v81 = v60;
  uint64_t v82 = v27;
  uint64_t v83 = v62;
  uint64_t v32 = v59;
  uint64_t v33 = sub_1C28CDA30();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v36 = sub_1C2833270((void (*)(char *, char *))sub_1C2838B44, (uint64_t)v74, v33, v30, MEMORY[0x1E4FBC248], v34, MEMORY[0x1E4FBC278], v35);
  sub_1C28CCD80();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  char v37 = sub_1C28CCE00();
  os_log_type_t v38 = sub_1C28CDC90();
  int v39 = v38;
  if (os_log_type_enabled(v37, v38))
  {
    uint64_t v40 = swift_slowAlloc();
    LODWORD(v61) = v39;
    uint64_t v41 = v40;
    uint64_t v60 = swift_slowAlloc();
    uint64_t v97 = v23;
    uint64_t v98 = v60;
    *(_DWORD *)uint64_t v41 = 136315906;
    uint64_t v62 = v27;
    uint64_t v93 = v32;
    uint64_t v94 = v57;
    uint64_t v95 = v71;
    uint64_t v96 = v29;
    uint64_t v93 = type metadata accessor for DataTypeContentConfigurationPublisher();
    swift_getMetatypeMetadata();
    uint64_t v42 = sub_1C28CD750();
    uint64_t v93 = sub_1C27D36AC(v42, v43, &v98);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 12) = 2048;
    uint64_t v44 = MEMORY[0x1C875EF70](v36, v30);
    swift_bridgeObjectRelease();
    uint64_t v93 = v44;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 22) = 2048;
    uint64_t v45 = MEMORY[0x1C875EF70](v31, v32);
    swift_bridgeObjectRelease();
    uint64_t v93 = v45;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v41 + 32) = 2080;
    uint64_t v46 = sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB76D90);
    uint64_t v47 = swift_bridgeObjectRetain();
    uint64_t v48 = MEMORY[0x1C875EEC0](v47, v46);
    unint64_t v50 = v49;
    swift_bridgeObjectRelease();
    uint64_t v93 = sub_1C27D36AC(v48, v50, &v98);
    sub_1C28CDF90();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v37, (os_log_type_t)v61, "[%s]: Created %ld request publishers from %ld configurations for %s", (uint8_t *)v41, 0x2Au);
    uint64_t v51 = v60;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v51, -1, -1);
    MEMORY[0x1C87609B0](v41, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  (*(void (**)(char *, uint64_t))(v65 + 8))(v73, v66);
  uint64_t v93 = v36;
  sub_1C28CDA30();
  swift_getWitnessTable();
  uint64_t v52 = v68;
  sub_1C28CCFC0();
  uint64_t v53 = v70;
  swift_getWitnessTable();
  uint64_t v54 = sub_1C28CD300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v69 + 8))(v52, v53);
  return v54;
}

uint64_t sub_1C2834D74@<X0>(void **a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v45 = a4;
  uint64_t v46 = a7;
  uint64_t v48 = a6;
  unint64_t v49 = a9;
  uint64_t v44 = a3;
  uint64_t v47 = a10;
  uint64_t v50 = a3;
  uint64_t v51 = a4;
  uint64_t v52 = a5;
  uint64_t v53 = a7;
  uint64_t v38 = a5;
  uint64_t v54 = a8;
  uint64_t v13 = type metadata accessor for DataTypeContentConfigurationPublisher();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  int v39 = (char *)&v35 - v15;
  uint64_t v36 = a8;
  uint64_t v16 = type metadata accessor for AggregatedDataTypeChangesPublisher();
  uint64_t v43 = *(void *)(v16 - 8);
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v35 - v17;
  char v37 = (char *)&v35 - v17;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v19 = sub_1C28CCF40();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v41 = v19;
  uint64_t v42 = v20;
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v35 - v21;
  uint64_t v23 = (uint64_t)v18;
  uint64_t v24 = v38;
  Publisher<>.aggregatedChangesPublisher(for:)(*a1, v38, v23);
  uint64_t v25 = v39;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v39, a2, v13);
  unint64_t v26 = (*(unsigned __int8 *)(v14 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v27 = (char *)swift_allocObject();
  uint64_t v28 = v45;
  *((void *)v27 + 2) = v44;
  *((void *)v27 + 3) = v28;
  uint64_t v29 = v48;
  *((void *)v27 + 4) = v24;
  *((void *)v27 + 5) = v29;
  uint64_t v30 = v36;
  *((void *)v27 + 6) = v46;
  *((void *)v27 + 7) = v30;
  *((void *)v27 + 8) = v47;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(&v27[v26], v25, v13);
  uint64_t v31 = v37;
  sub_1C28CD380();
  swift_release();
  (*(void (**)(char *, uint64_t))(v43 + 8))(v31, v16);
  uint64_t v32 = v41;
  swift_getWitnessTable();
  uint64_t v33 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v42 + 8))(v22, v32);
  *unint64_t v49 = v33;
  return result;
}

uint64_t sub_1C28350E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = sub_1C28CCAB0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[1] = a3;
  void v20[2] = a4;
  v20[3] = a5;
  v20[4] = a7;
  v20[5] = a8;
  if (*(unsigned char *)(a2 + *(int *)(type metadata accessor for DataTypeContentConfigurationPublisher() + 64)) != 1) {
    return 1;
  }
  sub_1C28CC7F0();
  uint64_t v18 = (void *)sub_1C28CCA90();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v18)
  {

    return 1;
  }
  return 0;
}

uint64_t sub_1C2835224@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X7>, uint64_t *a6@<X8>)
{
  uint64_t v18 = a6;
  v17[0] = a3;
  v17[1] = a4;
  sub_1C2838B84();
  uint64_t v10 = v9;
  uint64_t v11 = *(void *)(v9 - 8);
  MEMORY[0x1F4188790](v9);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = a1;
  sub_1C2838C30();
  type metadata accessor for DataTypeContentConfigurationContext();
  sub_1C2839BF0(&qword_1EBB75378, (void (*)(uint64_t))sub_1C2838C30);
  sub_1C28CD330();
  sub_1C2839BF0(&qword_1EBB75470, (void (*)(uint64_t))sub_1C2838B84);
  uint64_t v14 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  uint64_t v19 = (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t))(a5 + 48))(a2, v14, v17[0], a5);
  sub_1C28CD0A0();
  swift_getWitnessTable();
  uint64_t v15 = sub_1C28CD300();
  swift_release();
  uint64_t result = swift_release();
  *uint64_t v18 = v15;
  return result;
}

uint64_t sub_1C2835470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CC810();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a2, a1, v4);
}

uint64_t sub_1C28354DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return DataTypeContentConfigurationPublisher.receive<A>(subscriber:)(a1, a4, a2, a3);
}

uint64_t sub_1C28354F0@<X0>(void **a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, unint64_t a5@<X4>, uint64_t (*a6)(char *, void *)@<X5>, uint64_t a7@<X6>, unint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10, uint64_t a11, unsigned __int8 a12, uint64_t (*a13)(uint64_t), uint64_t a14, uint64_t a15, uint64_t a16)
{
  unint64_t v99 = a8;
  uint64_t v100 = a7;
  uint64_t v104 = a6;
  unint64_t v97 = a5;
  uint64_t v91 = a4;
  uint64_t v123 = a9;
  unint64_t v124 = a13;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_1C2838FEC();
  uint64_t v129 = a14;
  uint64_t v133 = a14;
  unint64_t v134 = AssociatedTypeWitness;
  uint64_t v121 = AssociatedTypeWitness;
  uint64_t v119 = v20;
  uint64_t v135 = v20;
  uint64_t v136 = a16;
  uint64_t v116 = sub_1C2839BF0(&qword_1EBB75368, (void (*)(uint64_t))sub_1C2838FEC);
  uint64_t v137 = v116;
  uint64_t v120 = type metadata accessor for DataTypeContentConfigurationPublisher();
  uint64_t v118 = *(void *)(v120 - 8);
  MEMORY[0x1F4188790](v120);
  uint64_t v117 = (uint64_t)&v89 - v21;
  sub_1C2839270();
  uint64_t v114 = v22;
  uint64_t v113 = *(void *)(v22 - 8);
  MEMORY[0x1F4188790](v22);
  uint64_t v112 = (char *)&v89 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2839478();
  uint64_t v107 = v24;
  uint64_t v106 = *(void *)(v24 - 8);
  MEMORY[0x1F4188790](v24);
  uint64_t v105 = (char *)&v89 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_1C28CDC60();
  uint64_t v103 = *(void *)(v96 - 8);
  MEMORY[0x1F4188790](v96);
  uint64_t v102 = (char *)&v89 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2839594();
  id v110 = v27;
  uint64_t v109 = *((void *)v27 - 1);
  MEMORY[0x1F4188790](v27);
  uint64_t v108 = (char *)&v89 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_1C28CC760();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x1F4188790](v29);
  uint64_t v126 = (char *)&v89 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v31);
  uint64_t v34 = (char *)&v89 - v33;
  uint64_t v95 = sub_1C28CCE10();
  uint64_t v94 = *(void *)(v95 - 8);
  MEMORY[0x1F4188790](v95);
  uint64_t v36 = (char *)&v89 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v37 = *a1;
  sub_1C28CCDC0();
  uint64_t v38 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  uint64_t v93 = v34;
  int v39 = a3;
  os_log_type_t v125 = v38;
  v38(v34, a3, v29);
  id v40 = v37;
  swift_bridgeObjectRetain_n();
  id v41 = v40;
  uint64_t v42 = sub_1C28CCE00();
  os_log_type_t v43 = sub_1C28CDCD0();
  uint64_t v92 = v42;
  int v90 = v43;
  BOOL v44 = os_log_type_enabled(v42, v43);
  uint64_t v122 = a2;
  uint64_t v127 = v39;
  uint64_t v128 = a16;
  uint64_t v101 = v37;
  id v98 = v41;
  if (v44)
  {
    uint64_t v45 = swift_slowAlloc();
    uint64_t v89 = swift_slowAlloc();
    uint64_t v133 = v89;
    *(_DWORD *)uint64_t v45 = 136315906;
    unint64_t v130 = v124;
    swift_getMetatypeMetadata();
    uint64_t v46 = sub_1C28CD750();
    unint64_t v130 = (uint64_t (*)(uint64_t))sub_1C27D36AC(v46, v47, &v133);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2080;
    unint64_t v130 = (uint64_t (*)(uint64_t))v37;
    sub_1C27D9154(0, (unint64_t *)&qword_1EBB76DA0, &qword_1EBB76D98, 0x1E4F2B3C8, MEMORY[0x1E4FBB718]);
    id v48 = v41;
    uint64_t v49 = sub_1C28CD750();
    unint64_t v130 = (uint64_t (*)(uint64_t))sub_1C27D36AC(v49, v50, &v133);
    sub_1C28CDF90();

    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 22) = 2048;
    uint64_t v51 = MEMORY[0x1C875EF70](a2, v129);
    swift_bridgeObjectRelease();
    unint64_t v130 = (uint64_t (*)(uint64_t))v51;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 32) = 2080;
    uint64_t v52 = v93;
    v125(v126, v93, v29);
    uint64_t v53 = sub_1C28CD750();
    unint64_t v130 = (uint64_t (*)(uint64_t))sub_1C27D36AC(v53, v54, &v133);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v52, v29);
    uint64_t v55 = v92;
    _os_log_impl(&dword_1C27B7000, v92, (os_log_type_t)v90, "[%s]: Received new anchor %s, creating publishers for %ld configurations in generatorContext %s", (uint8_t *)v45, 0x2Au);
    uint64_t v56 = v89;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v56, -1, -1);
    MEMORY[0x1C87609B0](v45, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v93, v29);
  }
  (*(void (**)(char *, uint64_t))(v94 + 8))(v36, v95);
  uint64_t v57 = v30 + 16;
  uint64_t v58 = v104;
  unint64_t v59 = v97;
  uint64_t v60 = v96;
  uint64_t v95 = a15;
  LODWORD(v104) = a12;
  uint64_t v100 = a11;
  unint64_t v97 = a10;
  uint64_t v115 = v29;
  uint64_t v111 = v57;
  if (v59)
  {
    uint64_t v133 = 0;
    unint64_t v134 = 0xE000000000000000;
    sub_1C28CE120();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v61 = v91;
    uint64_t v133 = v91;
    unint64_t v134 = v59;
    sub_1C28CD7C0();
    uint64_t v133 = v61;
    unint64_t v134 = v59;
    swift_bridgeObjectRetain();
    sub_1C28CD7C0();
    uint64_t v96 = v133;
    unint64_t v99 = v134;
  }
  else
  {
    uint64_t v96 = 0;
    unint64_t v99 = 0;
  }
  id v62 = v98;
  swift_bridgeObjectRetain();
  uint64_t v63 = v102;
  sub_1C28CDC50();
  sub_1C28CC720();
  __swift_project_boxed_opaque_existential_1(&v133, v136);
  uint64_t v64 = (void *)sub_1C28CC700();
  uint64_t v65 = v58(v63, v64);

  (*(void (**)(char *, uint64_t))(v103 + 8))(v63, v60);
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v133);
  uint64_t v133 = v65;
  sub_1C28CD090();
  sub_1C2839560(0);
  sub_1C28CC7D0();
  sub_1C2836790(0);
  sub_1C2839BF0((unint64_t *)&qword_1EBB75598, sub_1C2839560);
  sub_1C2839BF0((unint64_t *)&qword_1EBB76D28, sub_1C2836790);
  uint64_t v66 = v105;
  sub_1C28CD3B0();
  uint64_t v103 = MEMORY[0x1E4F1AA40];
  sub_1C2839BF0(&qword_1EBB754D8, (void (*)(uint64_t))sub_1C2839478);
  uint64_t v67 = v107;
  uint64_t v68 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v106 + 8))(v66, v67);
  swift_release();
  uint64_t v133 = v68;
  uint64_t v69 = (void *)swift_allocObject();
  uint64_t v70 = v129;
  v69[2] = v124;
  v69[3] = v70;
  uint64_t v71 = v128;
  v69[4] = v95;
  v69[5] = v71;
  sub_1C2839680(0, &qword_1EBB755F8, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AC18]);
  sub_1C28396F4();
  unint64_t v72 = v108;
  sub_1C28CD350();
  swift_release();
  swift_release();
  sub_1C2839BF0(&qword_1EBB75490, (void (*)(uint64_t))sub_1C2839594);
  id v73 = v110;
  uint64_t v74 = sub_1C28CD300();
  (*(void (**)(char *, id))(v109 + 8))(v72, v73);
  sub_1C28CC720();
  __swift_project_boxed_opaque_existential_1(&v133, v136);
  uint64_t v75 = (void *)sub_1C28CC700();
  unint64_t v130 = (uint64_t (*)(uint64_t))v74;
  uint64_t v131 = sub_1C27DC2D4;
  uint64_t v132 = 0;
  uint64_t v76 = (void *)swift_allocObject();
  uint64_t v77 = v100;
  v76[2] = v97;
  v76[3] = v77;
  uint64_t v78 = v96;
  v76[4] = v75;
  v76[5] = v78;
  v76[6] = v99;
  sub_1C283935C();
  sub_1C28CCA60();
  unint64_t v124 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67318];
  sub_1C2839680(0, &qword_1EBB75560, MEMORY[0x1E4F67318], MEMORY[0x1E4F1AAE0]);
  sub_1C2839BF0(&qword_1EBB75418, (void (*)(uint64_t))sub_1C283935C);
  sub_1C2839160();
  swift_retain();
  swift_retain();
  id v110 = v75;
  swift_bridgeObjectRetain();
  uint64_t v79 = v112;
  sub_1C28CD3B0();
  swift_release();
  swift_release();
  swift_release();
  sub_1C2839BF0(&qword_1EBB754E8, (void (*)(uint64_t))sub_1C2839270);
  uint64_t v80 = v114;
  uint64_t v81 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v113 + 8))(v79, v80);
  swift_release();
  swift_bridgeObjectRelease();

  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)&v133);
  uint64_t v133 = v81;
  *(void *)(swift_allocObject() + 16) = 1;
  sub_1C2839680(0, (unint64_t *)&unk_1EBB74EB0, v124, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
  sub_1C28391E8();
  uint64_t v82 = sub_1C28CD3F0();
  swift_release();
  unint64_t v130 = (uint64_t (*)(uint64_t))v82;
  sub_1C2839080();
  sub_1C2839BF0(&qword_1EBB75518, (void (*)(uint64_t))sub_1C2839080);
  uint64_t v83 = sub_1C28CD190();
  swift_release();
  swift_release();
  uint64_t v84 = (uint64_t)v126;
  v125(v126, v127, v115);
  uint64_t v133 = v83;
  uint64_t v85 = v117;
  DataTypeContentConfigurationPublisher.init(generatorContext:configurations:filterAnchoredTypeChangesWithNoChange:upstream:)(v84, v122, v104 & 1, (uint64_t)&v133, v119, v117);
  swift_bridgeObjectRetain();
  uint64_t v86 = v120;
  swift_getWitnessTable();
  uint64_t v87 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v118 + 8))(v85, v86);
  *uint64_t v123 = v87;
  return result;
}

uint64_t sub_1C283655C()
{
  uint64_t v1 = sub_1C28CC760();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2836688@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  long long v13 = *(_OWORD *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 40);
  uint64_t v7 = *(void *)(sub_1C28CC760() - 8);
  unint64_t v8 = (*(unsigned __int8 *)(v7 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (*(void *)(v7 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v9 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 23) & 0xFFFFFFFFFFFFFFF8;
  return sub_1C28354F0(a1, *(void *)(v2 + 48), (char *)(v2 + v8), *(void *)(v2 + v9), *(void *)(v2 + v9 + 8), *(uint64_t (**)(char *, void *))(v2 + v10), *(void *)(v2 + v10 + 8), *(void *)(v2 + v11), a2, *(void *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8)), *(void *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 8), *(unsigned char *)(v2 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8) + 16), (uint64_t (*)(uint64_t))v13, *((uint64_t *)&v13 + 1), v5, v6);
}

void sub_1C2836790(uint64_t a1)
{
}

uint64_t sub_1C28367C4@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = *a1;
  sub_1C28CCD80();
  id v9 = v8;
  id v10 = v8;
  unint64_t v11 = sub_1C28CCE00();
  os_log_type_t v12 = sub_1C28CDCB0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = swift_slowAlloc();
    v22[1] = a2;
    uint64_t v14 = v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v24 = v15;
    *(_DWORD *)uint64_t v14 = 136315394;
    uint64_t v16 = sub_1C28CE830();
    uint64_t v23 = sub_1C27D36AC(v16, v17, &v24);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v14 + 12) = 2080;
    uint64_t v23 = (uint64_t)v8;
    id v18 = v8;
    sub_1C27C7060();
    uint64_t v19 = sub_1C28CD750();
    uint64_t v23 = sub_1C27D36AC(v19, v20, &v24);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1C27B7000, v11, v12, "[%s]: Error in database changes query: %s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v15, -1, -1);
    MEMORY[0x1C87609B0](v14, -1, -1);
  }
  else
  {
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  sub_1C28CC7D0();
  return sub_1C28CD220();
}

uint64_t sub_1C2836A60(uint64_t a1)
{
  return sub_1C2836A78(a1, (void (*)(void))sub_1C2839CA4);
}

uint64_t sub_1C2836A78(uint64_t a1, void (*a2)(void))
{
  id v48 = a2;
  uint64_t v59 = a1;
  sub_1C2838ECC(0);
  uint64_t v54 = *(void *)(v2 - 8);
  uint64_t v55 = v2;
  MEMORY[0x1F4188790](v2);
  uint64_t v58 = (char *)&v47 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1C28CCE10();
  uint64_t v56 = *(void *)(v4 - 8);
  uint64_t v57 = v4;
  MEMORY[0x1F4188790](v4);
  uint64_t v60 = (char *)&v47 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2838F00(0, &qword_1EBB755C8, MEMORY[0x1E4F671C0]);
  uint64_t v50 = *(void *)(v6 - 8);
  uint64_t v51 = v6;
  MEMORY[0x1F4188790](v6);
  unint64_t v8 = (char *)&v47 - v7;
  sub_1C2838F54(0);
  uint64_t v52 = *(void *)(v9 - 8);
  uint64_t v53 = v9;
  MEMORY[0x1F4188790](v9);
  unint64_t v11 = (char *)&v47 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1C28CC7D0();
  uint64_t v49 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v47 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v13);
  unint64_t v17 = (char *)&v47 - v16;
  uint64_t v18 = sub_1C28CDC40();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x1F4188790](v18);
  uint64_t v21 = (char *)&v47 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2817A18(0);
  MEMORY[0x1F4188790](v22);
  uint64_t v24 = (void **)((char *)&v47 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2838F88(v59, (uint64_t)v24);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v25 = v48;
    uint64_t v59 = v12;
    uint64_t v26 = *v24;
    sub_1C28CCD80();
    id v27 = v26;
    id v28 = v26;
    uint64_t v29 = sub_1C28CCE00();
    os_log_type_t v30 = sub_1C28CDCB0();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v33 = v54;
    uint64_t v32 = v55;
    if (v31)
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v62 = v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      v25(0);
      uint64_t v36 = sub_1C28CE830();
      uint64_t v61 = sub_1C27D36AC(v36, v37, &v62);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v61 = (uint64_t)v26;
      id v38 = v26;
      sub_1C27C7060();
      uint64_t v39 = sub_1C28CD750();
      uint64_t v61 = sub_1C27D36AC(v39, v40, &v62);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v29, v30, "[%s]: Error in database changes query: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v35, -1, -1);
      MEMORY[0x1C87609B0](v34, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v57);
    uint64_t v45 = v58;
    sub_1C27C7060();
    sub_1C28CD220();
    sub_1C2839BF0(&qword_1EA3109A8, sub_1C2838ECC);
    uint64_t v44 = sub_1C28CD300();

    (*(void (**)(char *, uint64_t))(v33 + 8))(v45, v32);
  }
  else
  {
    (*(void (**)(char *, void **, uint64_t))(v19 + 32))(v21, v24, v18);
    sub_1C28CDC30();
    sub_1C28CDC20();
    sub_1C28CC7A0();
    uint64_t v41 = v49;
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v15, v17, v12);
    sub_1C28CD210();
    sub_1C27C7060();
    uint64_t v42 = v51;
    sub_1C28CD1D0();
    (*(void (**)(char *, uint64_t))(v50 + 8))(v8, v42);
    sub_1C2839BF0(&qword_1EBB757C0, sub_1C2838F54);
    uint64_t v43 = v53;
    uint64_t v44 = sub_1C28CD300();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v11, v43);
    (*(void (**)(char *, uint64_t))(v41 + 8))(v17, v12);
    (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  }
  return v44;
}

uint64_t sub_1C28371D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v51 = a2;
  uint64_t v61 = a3;
  uint64_t v62 = a1;
  sub_1C2838ECC(0);
  uint64_t v56 = *(void *)(v3 - 8);
  uint64_t v57 = v3;
  MEMORY[0x1F4188790](v3);
  uint64_t v60 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v58 = *(void *)(v5 - 8);
  uint64_t v59 = v5;
  MEMORY[0x1F4188790](v5);
  uint64_t v63 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2838F00(0, &qword_1EBB755C8, MEMORY[0x1E4F671C0]);
  uint64_t v52 = *(void *)(v7 - 8);
  uint64_t v53 = v7;
  MEMORY[0x1F4188790](v7);
  uint64_t v9 = (char *)&v48 - v8;
  sub_1C2838F54(0);
  uint64_t v54 = *(void *)(v10 - 8);
  uint64_t v55 = v10;
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1C28CC7D0();
  uint64_t v50 = *(void *)(v13 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v48 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)&v48 - v17;
  uint64_t v19 = sub_1C28CDC40();
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x1F4188790](v19);
  uint64_t v22 = (char *)&v48 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2817A18(0);
  MEMORY[0x1F4188790](v23);
  uint64_t v25 = (void **)((char *)&v48 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1C2838F88(v62, (uint64_t)v25);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v62 = v13;
    uint64_t v26 = *v25;
    sub_1C28CCD80();
    id v27 = v26;
    id v28 = v26;
    uint64_t v29 = sub_1C28CCE00();
    os_log_type_t v30 = sub_1C28CDCB0();
    BOOL v31 = os_log_type_enabled(v29, v30);
    uint64_t v33 = v56;
    uint64_t v32 = v57;
    if (v31)
    {
      uint64_t v34 = swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v65 = v35;
      *(_DWORD *)uint64_t v34 = 136315394;
      uint64_t v36 = sub_1C28CE830();
      uint64_t v64 = sub_1C27D36AC(v36, v37, &v65);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v34 + 12) = 2080;
      uint64_t v64 = (uint64_t)v26;
      id v38 = v26;
      sub_1C27C7060();
      uint64_t v39 = sub_1C28CD750();
      uint64_t v64 = sub_1C27D36AC(v39, v40, &v65);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v29, v30, "[%s]: Error in database changes query: %s", (uint8_t *)v34, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v35, -1, -1);
      MEMORY[0x1C87609B0](v34, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v58 + 8))(v63, v59);
    uint64_t v47 = v60;
    sub_1C27C7060();
    sub_1C28CD220();
    sub_1C2839BF0(&qword_1EA3109A8, sub_1C2838ECC);
    uint64_t v45 = sub_1C28CD300();

    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v47, v32);
  }
  else
  {
    uint64_t v41 = *(void (**)(char *, void **, uint64_t))(v20 + 32);
    uint64_t v49 = v19;
    v41(v22, v25, v19);
    sub_1C28CDC30();
    sub_1C28CDC20();
    sub_1C28CC7A0();
    uint64_t v42 = v50;
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v16, v18, v13);
    sub_1C28CD210();
    sub_1C27C7060();
    uint64_t v43 = v53;
    sub_1C28CD1D0();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v43);
    sub_1C2839BF0(&qword_1EBB757C0, sub_1C2838F54);
    uint64_t v44 = v55;
    uint64_t v45 = sub_1C28CD300();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v12, v44);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v13);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v49);
  }
  *uint64_t v61 = v45;
  return result;
}

uint64_t sub_1C2837930()
{
  return swift_deallocObject();
}

uint64_t sub_1C2837940@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C28371D4(a1, *(void *)(v2 + 16), a2);
}

uint64_t type metadata accessor for DataTypeContentConfigurationPublisher()
{
  return swift_getGenericMetadata();
}

unint64_t sub_1C2837960()
{
  unint64_t result = qword_1EBB74208[0];
  if (!qword_1EBB74208[0])
  {
    sub_1C27D9154(255, (unint64_t *)&qword_1EBB76D58, (unint64_t *)&qword_1EBB76D90, 0x1E4F2B448, MEMORY[0x1E4FBB320]);
    sub_1C2807F90();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_1EBB74208);
  }
  return result;
}

void sub_1C28379FC(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    sub_1C27D87FC();
  }
  else
  {
    sub_1C28CE620();
  }
}

uint64_t sub_1C2837A64(unint64_t a1, uint64_t a2)
{
  return sub_1C2834418(a1, a2, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], v2[8]);
}

uint64_t sub_1C2837A98@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void, void))(v2 + 72))(*a1, a1[1]);
  *a2 = result;
  return result;
}

uint64_t sub_1C2837AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 56);
}

uint64_t sub_1C2837AE8()
{
  uint64_t result = sub_1C28CC760();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C2837BCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  uint64_t v9 = *(void *)(a3 + 32);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  unsigned int v12 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || (((v11 + ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v11) + *(void *)(*(void *)(v9 - 8) + 64) <= 0x18
      ? (BOOL v13 = v12 > 7)
      : (BOOL v13 = 1),
        v13))
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v12 | 7) + 16) & ~(unint64_t)(v12 | 7)));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    unint64_t v14 = ((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v15 = ((unint64_t)a2 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
    *(void *)unint64_t v14 = *(void *)v15;
    *(unsigned char *)(v14 + 8) = *(unsigned char *)(v15 + 8);
    uint64_t v16 = (v14 + v11 + 9) & ~v11;
    uint64_t v17 = (v15 + v11 + 9) & ~v11;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v9);
  }
  return a1;
}

uint64_t sub_1C2837D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CC760();
  uint64_t v5 = *(void *)(v4 - 8) + 8;
  (*(void (**)(uint64_t, uint64_t))v5)(a1, v4);
  unint64_t v6 = (a1 + *(void *)(v5 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(*(void *)(a2 + 32) - 8);
  uint64_t v8 = *(uint64_t (**)(unint64_t))(v7 + 8);
  unint64_t v9 = (v6 + *(unsigned __int8 *)(v7 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);

  return v8(v9);
}

uint64_t sub_1C2837E48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 48) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(a3 + 32);
  uint64_t v12 = *(void *)(v11 - 8);
  BOOL v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16);
  uint64_t v14 = *(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (v14 + 9 + v9) & ~v14;
  uint64_t v16 = (v14 + 9 + v10) & ~v14;
  swift_bridgeObjectRetain();
  v13(v15, v16, v11);
  return a1;
}

uint64_t sub_1C2837F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 40) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1C2838030(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 32) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1C283810C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v7)(a1, a2, v6);
  uint64_t v8 = *(void *)(v7 + 24) + 7;
  unint64_t v9 = (v8 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v10 = (v8 + a2) & 0xFFFFFFFFFFFFFFF8;
  *(void *)unint64_t v9 = *(void *)v10;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + 8) = *(unsigned char *)(v10 + 8);
  uint64_t v11 = *(void *)(*(void *)(a3 + 32) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 40))((*(unsigned __int8 *)(v11 + 80) + 9 + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 9 + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_1C28381F0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6 = sub_1C28CC760();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(void *)(*(void *)(a3 + 32) - 8);
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v8 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v14 = ((v11 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v11) + *(void *)(v9 + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 < 2)
    {
LABEL_28:
      if (v8 == v13)
      {
        uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v7 + 48);
        return v22(a1, v8, v6);
      }
      else
      {
        uint64_t v23 = (unint64_t *)(((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8);
        if ((v12 & 0x80000000) != 0)
        {
          uint64_t v25 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v25(((unint64_t)v23 + v11 + 9) & ~v11);
        }
        else
        {
          unint64_t v24 = *v23;
          if (v24 >= 0xFFFFFFFF) {
            LODWORD(v24) = -1;
          }
          return (v24 + 1);
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_28;
  }
LABEL_18:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = ((v11 + ((v10 + 7) & 0xFFFFFFF8) + 9) & ~v11) + *(_DWORD *)(v9 + 64);
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v13 + (v21 | v19) + 1;
}

void sub_1C2838490(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8 = sub_1C28CC760();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(unsigned int *)(v9 + 84);
  uint64_t v11 = *(void *)(*(void *)(a4 + 32) - 8);
  uint64_t v12 = *(void *)(v9 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v11 + 80);
  if (v10 <= *(_DWORD *)(v11 + 84)) {
    unsigned int v14 = *(_DWORD *)(v11 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  if (v14 <= 0x7FFFFFFF) {
    unsigned int v15 = 0x7FFFFFFF;
  }
  else {
    unsigned int v15 = v14;
  }
  size_t v16 = ((v13 + ((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 9) & ~v13) + *(void *)(v11 + 64);
  if (a3 <= v15)
  {
    int v17 = 0;
  }
  else if (v16 <= 3)
  {
    unsigned int v20 = ((a3 - v15 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v20))
    {
      int v17 = 4;
    }
    else if (v20 >= 0x100)
    {
      int v17 = 2;
    }
    else
    {
      int v17 = v20 > 1;
    }
  }
  else
  {
    int v17 = 1;
  }
  if (v15 < a2)
  {
    unsigned int v18 = ~v15 + a2;
    if (v16 < 4)
    {
      int v19 = (v18 >> (8 * v16)) + 1;
      if (v16)
      {
        int v21 = v18 & ~(-1 << (8 * v16));
        bzero(a1, v16);
        if (v16 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v16 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v16);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v16] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v16] = v19;
        return;
      case 3:
        goto LABEL_49;
      case 4:
        *(_DWORD *)&a1[v16] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v16] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x1C28387B4);
    case 4:
      *(_DWORD *)&a1[v16] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v10 == v15)
        {
          uint64_t v22 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
          v22(a1, a2, v10, v8);
        }
        else
        {
          uint64_t v23 = (void *)((unint64_t)&a1[v12 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((v14 & 0x80000000) != 0)
          {
            uint64_t v25 = *(void (**)(unint64_t, uint64_t))(v11 + 56);
            v25(((unint64_t)v23 + v13 + 9) & ~v13, a2);
          }
          else
          {
            if ((a2 & 0x80000000) != 0) {
              uint64_t v24 = a2 ^ 0x80000000;
            }
            else {
              uint64_t v24 = (a2 - 1);
            }
            *uint64_t v23 = v24;
          }
        }
      }
      return;
  }
}

void sub_1C28387DC()
{
  if (!qword_1EBB75510)
  {
    sub_1C2839680(255, &qword_1EBB75550, MEMORY[0x1E4F671C8], MEMORY[0x1E4F1AAE0]);
    sub_1C2838870();
    unint64_t v0 = sub_1C28CCFB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75510);
    }
  }
}

unint64_t sub_1C2838870()
{
  unint64_t result = qword_1EBB75548;
  if (!qword_1EBB75548)
  {
    sub_1C2839680(255, &qword_1EBB75550, MEMORY[0x1E4F671C8], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75548);
  }
  return result;
}

uint64_t sub_1C28388F8@<X0>(void **a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C2834D74(a1, v2[9], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2, v2[8]);
}

void sub_1C2838930()
{
  if (!qword_1EBB75680)
  {
    sub_1C2839680(255, &qword_1EBB75550, MEMORY[0x1E4F671C8], MEMORY[0x1E4F1AAE0]);
    unint64_t v0 = sub_1C28CDA30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75680);
    }
  }
}

uint64_t sub_1C28389B8()
{
  return swift_deallocObject();
}

uint64_t sub_1C28389C8()
{
  return sub_1C289C5DC(*(void *)(v0 + 16));
}

unint64_t sub_1C28389D0()
{
  unint64_t result = qword_1EBB74E98;
  if (!qword_1EBB74E98)
  {
    sub_1C2839680(255, &qword_1EBB74EA0, MEMORY[0x1E4F671C8], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74E98);
  }
  return result;
}

void sub_1C2838A58()
{
  if (!qword_1EBB75530)
  {
    sub_1C28387DC();
    sub_1C2839680(255, &qword_1EBB74EA0, MEMORY[0x1E4F671C8], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    sub_1C2839BF0(&qword_1EBB75508, (void (*)(uint64_t))sub_1C28387DC);
    sub_1C28389D0();
    unint64_t v0 = sub_1C28CCFD0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75530);
    }
  }
}

uint64_t sub_1C2838B44@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C2835224(v1[9], v1[10], v1[2], v1[3], v1[6], a1);
}

void sub_1C2838B84()
{
  if (!qword_1EBB75478)
  {
    sub_1C2838C30();
    type metadata accessor for DataTypeContentConfigurationContext();
    sub_1C2839BF0(&qword_1EBB75378, (void (*)(uint64_t))sub_1C2838C30);
    unint64_t v0 = sub_1C28CCF10();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75478);
    }
  }
}

void sub_1C2838C30()
{
  if (!qword_1EBB75380)
  {
    sub_1C2838A58();
    sub_1C2839BF0(&qword_1EBB75528, (void (*)(uint64_t))sub_1C2838A58);
    unint64_t v0 = sub_1C28CCEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75380);
    }
  }
}

uint64_t sub_1C2838CC4()
{
  uint64_t v1 = *(void *)(v0 + 32);
  unint64_t v2 = (int *)(type metadata accessor for DataTypeContentConfigurationPublisher() - 8);
  uint64_t v3 = v0
     + ((*(unsigned __int8 *)(*(void *)v2 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v2 + 80));
  uint64_t v4 = sub_1C28CC760();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v3 + v2[19], v1);
  return swift_deallocObject();
}

uint64_t sub_1C2838E00(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = *(void *)(type metadata accessor for DataTypeContentConfigurationPublisher() - 8);
  return sub_1C28350E4(a1, (uint64_t)v1 + ((*(unsigned __int8 *)(v9 + 80) + 72) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v3, v4, v5, v6, v7, v8) & 1;
}

void sub_1C2838ECC(uint64_t a1)
{
}

void sub_1C2838F00(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CD200();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_1C2838F54(uint64_t a1)
{
}

uint64_t sub_1C2838F88(uint64_t a1, uint64_t a2)
{
  sub_1C2817A18(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_1C2838FEC()
{
  if (!qword_1EBB75370)
  {
    sub_1C2839080();
    sub_1C2839BF0(&qword_1EBB75518, (void (*)(uint64_t))sub_1C2839080);
    unint64_t v0 = sub_1C28CCEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75370);
    }
  }
}

void sub_1C2839080()
{
  if (!qword_1EBB75520)
  {
    unint64_t v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E4F67318];
    sub_1C2839680(255, &qword_1EBB75560, MEMORY[0x1E4F67318], MEMORY[0x1E4F1AAE0]);
    sub_1C2839680(255, (unint64_t *)&unk_1EBB74EB0, v0, (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    sub_1C2839160();
    sub_1C28391E8();
    unint64_t v1 = sub_1C28CCFD0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB75520);
    }
  }
}

unint64_t sub_1C2839160()
{
  unint64_t result = qword_1EBB75558;
  if (!qword_1EBB75558)
  {
    sub_1C2839680(255, &qword_1EBB75560, MEMORY[0x1E4F67318], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75558);
  }
  return result;
}

unint64_t sub_1C28391E8()
{
  unint64_t result = qword_1EBB74EA8;
  if (!qword_1EBB74EA8)
  {
    sub_1C2839680(255, (unint64_t *)&unk_1EBB74EB0, MEMORY[0x1E4F67318], (uint64_t (*)(uint64_t, uint64_t, void, void))type metadata accessor for ReplaySubject);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74EA8);
  }
  return result;
}

void sub_1C2839270()
{
  if (!qword_1EBB754F0)
  {
    sub_1C2839680(255, &qword_1EBB75560, MEMORY[0x1E4F67318], MEMORY[0x1E4F1AAE0]);
    sub_1C283935C();
    sub_1C2839160();
    sub_1C2839BF0(&qword_1EBB75418, (void (*)(uint64_t))sub_1C283935C);
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB754F0);
    }
  }
}

void sub_1C283935C()
{
  if (!qword_1EBB75420)
  {
    sub_1C2839680(255, &qword_1EBB75540, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    sub_1C28393F0();
    unint64_t v0 = type metadata accessor for Publishers.BufferWithAggregator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75420);
    }
  }
}

unint64_t sub_1C28393F0()
{
  unint64_t result = qword_1EBB75538;
  if (!qword_1EBB75538)
  {
    sub_1C2839680(255, &qword_1EBB75540, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB75538);
  }
  return result;
}

void sub_1C2839478()
{
  if (!qword_1EBB754E0)
  {
    sub_1C2836790(255);
    sub_1C2839560(255);
    sub_1C2839BF0((unint64_t *)&qword_1EBB76D28, sub_1C2836790);
    sub_1C2839BF0((unint64_t *)&qword_1EBB75598, sub_1C2839560);
    unint64_t v0 = sub_1C28CCF60();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB754E0);
    }
  }
}

void sub_1C2839560(uint64_t a1)
{
}

void sub_1C2839594()
{
  if (!qword_1EBB75498)
  {
    sub_1C2836790(255);
    sub_1C2839680(255, &qword_1EBB755F8, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AC18]);
    sub_1C2839BF0((unint64_t *)&qword_1EBB76D28, sub_1C2836790);
    sub_1C28396F4();
    unint64_t v0 = sub_1C28CCF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75498);
    }
  }
}

void sub_1C2839680(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, void, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7, MEMORY[0x1E4FBC248], MEMORY[0x1E4FBC278]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C28396F4()
{
  unint64_t result = qword_1EBB755F0;
  if (!qword_1EBB755F0)
  {
    sub_1C2839680(255, &qword_1EBB755F8, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AC18]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB755F0);
  }
  return result;
}

uint64_t sub_1C283977C@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C2832538(*a1, a2);
}

uint64_t sub_1C2839784@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C2836A78(a1, sub_1C2839560);
  *a2 = result;
  return result;
}

uint64_t sub_1C28397C0()
{
  return swift_deallocObject();
}

uint64_t sub_1C28397D0@<X0>(void **a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1C28367C4(a1, a2);
}

uint64_t sub_1C28397DC()
{
  swift_release();

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2839824@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1C2831F4C(a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48));
  *a2 = result;
  return result;
}

uint64_t sub_1C2839858()
{
  return swift_deallocObject();
}

uint64_t sub_1C2839868()
{
  return sub_1C289C5FC(*(void *)(v0 + 16));
}

void sub_1C2839870()
{
  if (!qword_1EBB75350)
  {
    sub_1C283991C();
    sub_1C28CCA60();
    sub_1C2839BF0(&qword_1EBB754C8, (void (*)(uint64_t))sub_1C283991C);
    unint64_t v0 = sub_1C28CCEA0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75350);
    }
  }
}

void sub_1C283991C()
{
  if (!qword_1EBB754D0)
  {
    sub_1C28399B0();
    sub_1C2839BF0(&qword_1EBB75388, (void (*)(uint64_t))sub_1C28399B0);
    unint64_t v0 = sub_1C28CCF30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB754D0);
    }
  }
}

void sub_1C28399B0()
{
  if (!qword_1EBB75390[0])
  {
    sub_1C27DE740();
    sub_1C2839BF0((unint64_t *)&unk_1EBB754A8, (void (*)(uint64_t))sub_1C27DE740);
    unint64_t v0 = sub_1C28CCEE0();
    if (!v1) {
      atomic_store(v0, qword_1EBB75390);
    }
  }
}

void sub_1C2839A60(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = sub_1C27C7060();
    unint64_t v9 = a4(a1, v7, v8, MEMORY[0x1E4FBC0F0]);
    if (!v10) {
      atomic_store(v9, a2);
    }
  }
}

uint64_t sub_1C2839ADC()
{
  uint64_t v1 = sub_1C28CC7D0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1C2839B6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void *)(sub_1C28CC7D0() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void **)a1;
  char v8 = *(unsigned char *)(a1 + 8);

  return sub_1C2832824(v7, v8, v6, a2);
}

uint64_t sub_1C2839BF0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C2839C38()
{
  unint64_t result = qword_1EA3109B0;
  if (!qword_1EA3109B0)
  {
    sub_1C2839680(255, &qword_1EBB75540, MEMORY[0x1E4F671C0], MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA3109B0);
  }
  return result;
}

void sub_1C2839CA4()
{
  if (!qword_1EBB74BE0)
  {
    sub_1C2839560(255);
    sub_1C2839BF0((unint64_t *)&qword_1EBB75598, sub_1C2839560);
    unint64_t v0 = sub_1C28CCF30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74BE0);
    }
  }
}

void *static KeywordFeatureTag.identifiers(for:)(void *a1)
{
  uint64_t v1 = *(void *)(_sSo17HKDisplayCategoryC16HealthExperienceE11identifiers3forSaySo0aB10IdentifierVGSo12HKObjectTypeC_tFZ_0(a1)
                 + 16);
  if (v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
    do
    {
      id v5 = (id)HKDisplayCategoryIdentifierToString();
      if (v5)
      {
        uint64_t v6 = v5;
        uint64_t v7 = sub_1C28CD730();
        uint64_t v9 = v8;

        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v3 = sub_1C2801FA0(0, v3[2] + 1, 1, v3);
        }
        unint64_t v11 = v3[2];
        unint64_t v10 = v3[3];
        if (v11 >= v10 >> 1) {
          uint64_t v3 = sub_1C2801FA0((void *)(v10 > 1), v11 + 1, 1, v3);
        }
        v3[2] = v11 + 1;
        uint64_t v4 = &v3[2 * v11];
        void v4[4] = v7;
        v4[5] = v9;
      }
      ++v2;
    }
    while (v1 != v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t static KeywordFeatureTag.identifier(for:)(unsigned char *a1)
{
  switch(*a1)
  {
    case 1:
      uint64_t result = MEMORY[0x1F4120400]();
      break;
    case 2:
      uint64_t result = MEMORY[0x1F4120408]();
      break;
    case 3:
      uint64_t result = MEMORY[0x1F4120450]();
      break;
    case 4:
      uint64_t result = MEMORY[0x1F4120440]();
      break;
    case 5:
      uint64_t result = MEMORY[0x1F4120410]();
      break;
    case 6:
      uint64_t result = MEMORY[0x1F4120448]();
      break;
    case 7:
      uint64_t result = MEMORY[0x1F4120458]();
      break;
    case 8:
      uint64_t result = MEMORY[0x1F4120420]();
      break;
    default:
      uint64_t result = MEMORY[0x1F4120428]();
      break;
  }
  return result;
}

id static HKQuery.optionalPredicateForSamples(within:options:)(uint64_t a1, uint64_t a2)
{
  sub_1C283A074();
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1C28CBFB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  unint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2817440(a1, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1C283A0CC((uint64_t)v6);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    uint64_t v12 = self;
    uint64_t v13 = (void *)sub_1C28CBF60();
    id v11 = objc_msgSend(v12, sel_predicateForSamplesWithinDateInterval_options_, v13, a2);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return v11;
}

void sub_1C283A074()
{
  if (!qword_1EBB76B08)
  {
    sub_1C28CBFB0();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB76B08);
    }
  }
}

uint64_t sub_1C283A0CC(uint64_t a1)
{
  sub_1C283A074();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t static HKStatisticsCollectionCacheMode.mode(for:)(char a1)
{
  return a1 & 1;
}

uint64_t Collection<>.rawValuesString.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  void v9[2] = a1;
  v9[3] = a2;
  v9[4] = a3;
  uint64_t v10 = sub_1C2833270((void (*)(char *, char *))sub_1C283A220, (uint64_t)v9, a1, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBC248], a2, MEMORY[0x1E4FBC278], a8);
  sub_1C27E963C();
  sub_1C283A290();
  sub_1C28CD690();
  swift_bridgeObjectRelease();
  uint64_t v10 = 91;
  unint64_t v11 = 0xE100000000000000;
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  return v10;
}

uint64_t sub_1C283A220()
{
  return sub_1C28CD8A0();
}

unint64_t sub_1C283A290()
{
  unint64_t result = qword_1EBB76A08;
  if (!qword_1EBB76A08)
  {
    sub_1C27E963C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76A08);
  }
  return result;
}

uint64_t MutableCollection.mutateEach(_:)(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v47 = a1;
  uint64_t v48 = a2;
  uint64_t v6 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v8 = (char *)v45 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = v9;
  uint64_t v10 = *(void *)(v9 + 8);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v12 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v46 = (char *)v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v12);
  uint64_t v51 = (char *)v45 - v15;
  uint64_t v16 = MEMORY[0x1F4188790](v14);
  uint64_t v50 = (char *)v45 - v17;
  MEMORY[0x1F4188790](v16);
  int v19 = (char *)v45 - v18;
  unsigned int v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v58 = v4;
  v20(v8, v4, a3);
  uint64_t v60 = v19;
  uint64_t v54 = v10;
  sub_1C28CDB70();
  int v21 = v20;
  uint64_t v22 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v56 = v8;
  uint64_t v57 = v6 + 8;
  uint64_t v59 = a3;
  uint64_t v53 = v22;
  v22(v8, a3);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  uint64_t v55 = v11 + 16;
  uint64_t v24 = (void (**)(char *, uint64_t))(v11 + 8);
  v45[0] = v21;
  v45[1] = v6 + 16;
  while (1)
  {
    uint64_t v25 = v50;
    uint64_t v26 = AssociatedTypeWitness;
    v23(v50, v60, AssociatedTypeWitness);
    id v27 = v56;
    uint64_t v28 = v59;
    v21(v56, v58, v59);
    uint64_t v29 = v51;
    sub_1C28CDB90();
    v53(v27, v28);
    swift_getAssociatedConformanceWitness();
    LOBYTE(v27) = sub_1C28CD6E0();
    os_log_type_t v30 = *v24;
    (*v24)(v29, v26);
    v30(v25, v26);
    if (v27) {
      return ((uint64_t (*)(char *, uint64_t))v30)(v60, AssociatedTypeWitness);
    }
    BOOL v31 = v24;
    uint64_t v32 = v56;
    uint64_t v33 = v46;
    uint64_t v34 = v23;
    v23(v46, v60, AssociatedTypeWitness);
    uint64_t v35 = v58;
    uint64_t v36 = (void (*)(unsigned char *, uint64_t))sub_1C28CD6D0();
    uint64_t v37 = v52;
    v47(v38);
    if (v37) {
      break;
    }
    uint64_t v52 = 0;
    v36(v61, 0);
    uint64_t v39 = v33;
    uint64_t v24 = v31;
    v30(v39, AssociatedTypeWitness);
    unint64_t v40 = v32;
    uint64_t v41 = v32;
    uint64_t v42 = v59;
    int v21 = (void (*)(char *, uint64_t, uint64_t))v45[0];
    ((void (*)(char *, uint64_t, uint64_t))v45[0])(v41, v35, v59);
    sub_1C28CDBA0();
    v53(v40, v42);
    uint64_t v23 = v34;
  }
  v36(v61, 1);
  uint64_t v44 = AssociatedTypeWitness;
  v30(v33, AssociatedTypeWitness);
  return ((uint64_t (*)(char *, uint64_t))v30)(v60, v44);
}

id HKActivityMoveMode.description.getter()
{
  id result = (id)HKActivityMoveModeToString();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1C28CD730();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_1C283A7AC()
{
  id result = (id)HKActivityMoveModeToString();
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = sub_1C28CD730();

    return (id)v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t static HKActivityMoveMode.CodingKeys.== infix(_:_:)()
{
  return 1;
}

uint64_t HKActivityMoveMode.CodingKeys.hash(into:)()
{
  return sub_1C28CE710();
}

uint64_t HKActivityMoveMode.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DC300)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v5 = 0;
  }
  else
  {
    char v6 = sub_1C28CE640();
    uint64_t result = swift_bridgeObjectRelease();
    char v5 = v6 ^ 1;
  }
  *a3 = v5 & 1;
  return result;
}

void HKActivityMoveMode.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t HKActivityMoveMode.CodingKeys.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t HKActivityMoveMode.CodingKeys.intValue.getter()
{
  return 0;
}

unint64_t HKActivityMoveMode.CodingKeys.stringValue.getter()
{
  return 0xD000000000000010;
}

unint64_t sub_1C283A948()
{
  unint64_t result = qword_1EA3109B8;
  if (!qword_1EA3109B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109B8);
  }
  return result;
}

unint64_t sub_1C283A9A0()
{
  unint64_t result = qword_1EA3109C0;
  if (!qword_1EA3109C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109C0);
  }
  return result;
}

unint64_t sub_1C283A9F8()
{
  unint64_t result = qword_1EA3109C8;
  if (!qword_1EA3109C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109C8);
  }
  return result;
}

unint64_t sub_1C283AA4C()
{
  return 0xD000000000000010;
}

uint64_t sub_1C283AA6C(uint64_t a1)
{
  unint64_t v2 = sub_1C283ACC0();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C283AAA8(uint64_t a1)
{
  unint64_t v2 = sub_1C283ACC0();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t sub_1C283AAE4()
{
  return sub_1C28CD8F0();
}

uint64_t sub_1C283AB44()
{
  return sub_1C28CD8D0();
}

unsigned char *_s10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C283AC30);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for HKActivityMoveMode.CodingKeys()
{
  return &type metadata for HKActivityMoveMode.CodingKeys;
}

unint64_t sub_1C283AC68()
{
  unint64_t result = qword_1EBB77028;
  if (!qword_1EBB77028)
  {
    type metadata accessor for HKActivityMoveMode(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB77028);
  }
  return result;
}

unint64_t sub_1C283ACC0()
{
  unint64_t result = qword_1EA3109D0;
  if (!qword_1EA3109D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109D0);
  }
  return result;
}

unint64_t sub_1C283AD14()
{
  sub_1C283BACC();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_1C28D4C70;
  *(_OWORD *)(v0 + 32) = xmmword_1C28D4C80;
  *(void *)(v0 + 48) = 0xEA00000000003231;
  *(_OWORD *)(v0 + 56) = xmmword_1C28D4C90;
  *(void *)(v0 + 72) = 0xEA00000000003239;
  *(_OWORD *)(v0 + 80) = xmmword_1C28D4CA0;
  *(void *)(v0 + 96) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 104) = xmmword_1C28D4CB0;
  *(void *)(v0 + 120) = 0xEA00000000003237;
  *(_OWORD *)(v0 + 128) = xmmword_1C28D4CC0;
  *(void *)(v0 + 144) = 0xEA00000000003030;
  *(_OWORD *)(v0 + 152) = xmmword_1C28D4CD0;
  *(void *)(v0 + 168) = 0xEA00000000003230;
  *(_OWORD *)(v0 + 176) = xmmword_1C28D4CE0;
  *(void *)(v0 + 192) = 0xEA00000000003332;
  *(_OWORD *)(v0 + 200) = xmmword_1C28D4CF0;
  *(void *)(v0 + 216) = 0xEA00000000003631;
  *(_OWORD *)(v0 + 224) = xmmword_1C28D4D00;
  *(void *)(v0 + 240) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 248) = xmmword_1C28D4D10;
  *(void *)(v0 + 264) = 0xEA00000000003438;
  *(_OWORD *)(v0 + 272) = xmmword_1C28D4D20;
  *(void *)(v0 + 288) = 0xEA00000000003833;
  *(void *)(v0 + 296) = 13;
  *(void *)(v0 + 304) = 0x3239333534393431;
  *(void *)(v0 + 312) = 0xEA00000000003838;
  *(_OWORD *)(v0 + 320) = xmmword_1C28D4D30;
  *(void *)(v0 + 336) = 0xEA00000000003231;
  *(void *)(v0 + 344) = 15;
  *(void *)(v0 + 352) = 0x3539333534393431;
  *(void *)(v0 + 360) = 0xEA00000000003234;
  *(_OWORD *)(v0 + 368) = xmmword_1C28D4D40;
  *(void *)(v0 + 384) = 0xEA00000000003734;
  *(void *)(v0 + 392) = 19;
  *(void *)(v0 + 400) = 0x3731343534393431;
  *(void *)(v0 + 408) = 0xEA00000000003736;
  *(_OWORD *)(v0 + 416) = xmmword_1C28D4D50;
  *(void *)(v0 + 432) = 0xEA00000000003837;
  *(void *)(v0 + 440) = 21;
  *(void *)(v0 + 448) = 0x3538333534393431;
  *(void *)(v0 + 456) = 0xEA00000000003430;
  *(_OWORD *)(v0 + 464) = xmmword_1C28D4D60;
  *(void *)(v0 + 480) = 0xEA00000000003937;
  *(void *)(v0 + 488) = 23;
  *(void *)(v0 + 496) = 0x3538333534393431;
  *(void *)(v0 + 504) = 0xEA00000000003438;
  *(_OWORD *)(v0 + 512) = xmmword_1C28D4D70;
  *(void *)(v0 + 528) = 0xEA00000000003131;
  *(void *)(v0 + 536) = 25;
  *(void *)(v0 + 544) = 0x3339333534393431;
  *(void *)(v0 + 552) = 0xEA00000000003732;
  *(_OWORD *)(v0 + 560) = xmmword_1C28D4D80;
  *(void *)(v0 + 576) = 0xEA00000000003339;
  *(void *)(v0 + 584) = 27;
  *(void *)(v0 + 592) = 0x3839333534393431;
  *(void *)(v0 + 600) = 0xEA00000000003733;
  *(_OWORD *)(v0 + 608) = xmmword_1C28D4D90;
  *(void *)(v0 + 624) = 0xEA00000000003736;
  *(void *)(v0 + 632) = 29;
  *(void *)(v0 + 640) = 0x3232333734393431;
  *(void *)(v0 + 648) = 0xEA00000000003236;
  *(_OWORD *)(v0 + 656) = xmmword_1C28D4DA0;
  *(void *)(v0 + 672) = 0xEA00000000003435;
  *(void *)(v0 + 680) = 31;
  *(void *)(v0 + 688) = 0x3238333534393431;
  *(void *)(v0 + 696) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 704) = xmmword_1C28D4DB0;
  *(void *)(v0 + 720) = 0xEA00000000003130;
  *(void *)(v0 + 728) = 33;
  *(void *)(v0 + 736) = 0x3538333534393431;
  *(void *)(v0 + 744) = 0xEA00000000003837;
  *(_OWORD *)(v0 + 752) = xmmword_1C28D4DC0;
  *(void *)(v0 + 768) = 0xEA00000000003638;
  *(void *)(v0 + 776) = 35;
  *(void *)(v0 + 784) = 0x3134333734393431;
  *(void *)(v0 + 792) = 0xEA00000000003839;
  *(_OWORD *)(v0 + 800) = xmmword_1C28D4DD0;
  *(void *)(v0 + 816) = 0xEA00000000003533;
  *(void *)(v0 + 824) = 37;
  *(void *)(v0 + 832) = 0x3231343534393431;
  *(void *)(v0 + 840) = 0xEA00000000003136;
  *(_OWORD *)(v0 + 848) = xmmword_1C28D4DE0;
  *(void *)(v0 + 864) = 0xEA00000000003734;
  *(void *)(v0 + 872) = 39;
  *(void *)(v0 + 880) = 0x3938333534393431;
  *(void *)(v0 + 888) = 0xEA00000000003730;
  *(_OWORD *)(v0 + 896) = xmmword_1C28D4DF0;
  *(void *)(v0 + 912) = 0xEA00000000003230;
  *(void *)(v0 + 920) = 41;
  *(void *)(v0 + 928) = 0x3631333734393431;
  *(void *)(v0 + 936) = 0xEA00000000003337;
  *(_OWORD *)(v0 + 944) = xmmword_1C28D4E00;
  *(void *)(v0 + 960) = 0xEA00000000003230;
  *(void *)(v0 + 968) = 43;
  *(void *)(v0 + 976) = 0x3338333534393431;
  *(void *)(v0 + 984) = 0xEA00000000003839;
  *(_OWORD *)(v0 + 992) = xmmword_1C28D4E10;
  *(void *)(v0 + 1008) = 0xEA00000000003738;
  *(void *)(v0 + 1016) = 45;
  *(void *)(v0 + 1024) = 0x3938333534393431;
  *(void *)(v0 + 1032) = 0xEA00000000003235;
  *(_OWORD *)(v0 + 1040) = xmmword_1C28D4E20;
  *(void *)(v0 + 1056) = 0xEA00000000003538;
  *(void *)(v0 + 1064) = 47;
  *(void *)(v0 + 1072) = 0x3039323436393431;
  *(void *)(v0 + 1080) = 0xEA00000000003433;
  *(_OWORD *)(v0 + 1088) = xmmword_1C28D4E30;
  *(void *)(v0 + 1104) = 0xEA00000000003839;
  *(void *)(v0 + 1112) = 49;
  *(void *)(v0 + 1120) = 0x3932333734393431;
  *(void *)(v0 + 1128) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 1136) = xmmword_1C28D4E40;
  *(void *)(v0 + 1152) = 0xEA00000000003835;
  *(void *)(v0 + 1160) = 51;
  *(void *)(v0 + 1168) = 0x3838333534393431;
  *(void *)(v0 + 1176) = 0xEA00000000003037;
  *(_OWORD *)(v0 + 1184) = xmmword_1C28D4E50;
  *(void *)(v0 + 1200) = 0xEA00000000003736;
  *(void *)(v0 + 1208) = 53;
  *(void *)(v0 + 1216) = 0x3739323436393431;
  *(void *)(v0 + 1224) = 0xEA00000000003131;
  *(_OWORD *)(v0 + 1232) = xmmword_1C28D4E60;
  *(void *)(v0 + 1248) = 0xEA00000000003537;
  *(void *)(v0 + 1256) = 55;
  *(void *)(v0 + 1264) = 0x3430333436393431;
  *(void *)(v0 + 1272) = 0xEA00000000003437;
  *(_OWORD *)(v0 + 1280) = xmmword_1C28D4E70;
  *(void *)(v0 + 1296) = 0xEA00000000003831;
  *(void *)(v0 + 1304) = 57;
  *(void *)(v0 + 1312) = 0x3730333436393431;
  *(void *)(v0 + 1320) = 0xEA00000000003437;
  *(_OWORD *)(v0 + 1328) = xmmword_1C28D4E80;
  *(void *)(v0 + 1344) = 0xEA00000000003432;
  *(void *)(v0 + 1352) = 60;
  *(void *)(v0 + 1360) = 0x3636333534393431;
  *(void *)(v0 + 1368) = 0xEA00000000003538;
  *(_OWORD *)(v0 + 1376) = xmmword_1C28D4E90;
  *(void *)(v0 + 1392) = 0xEA00000000003539;
  *(void *)(v0 + 1400) = 62;
  *(void *)(v0 + 1408) = 0x3439333534393431;
  *(void *)(v0 + 1416) = 0xEA00000000003732;
  *(_OWORD *)(v0 + 1424) = xmmword_1C28D4EA0;
  *(void *)(v0 + 1440) = 0xEA00000000003438;
  *(void *)(v0 + 1448) = 70;
  *(void *)(v0 + 1456) = 0x3431343534393431;
  *(void *)(v0 + 1464) = 0xEA00000000003136;
  *(_OWORD *)(v0 + 1472) = xmmword_1C28D4EB0;
  *(void *)(v0 + 1488) = 0xEA00000000003133;
  *(void *)(v0 + 1496) = 72;
  *(void *)(v0 + 1504) = 0x3436333534393431;
  *(void *)(v0 + 1512) = 0xEA00000000003435;
  *(_OWORD *)(v0 + 1520) = xmmword_1C28D4EC0;
  *(void *)(v0 + 1536) = 0xEA00000000003630;
  *(void *)(v0 + 1544) = 75;
  *(void *)(v0 + 1552) = 0x3635333436393431;
  *(void *)(v0 + 1560) = 0xEA00000000003832;
  *(_OWORD *)(v0 + 1568) = xmmword_1C28D4ED0;
  *(void *)(v0 + 1584) = 0xEA00000000003937;
  *(void *)(v0 + 1592) = 79;
  *(void *)(v0 + 1600) = 0x3434333734393431;
  *(void *)(v0 + 1608) = 0xEA00000000003037;
  *(_OWORD *)(v0 + 1616) = xmmword_1C28D4EE0;
  *(void *)(v0 + 1632) = 0xEA00000000003934;
  *(void *)(v0 + 1640) = 83;
  *(void *)(v0 + 1648) = 0x3238333534393431;
  *(void *)(v0 + 1656) = 0xEA00000000003137;
  *(_OWORD *)(v0 + 1664) = xmmword_1C28D4EF0;
  *(void *)(v0 + 1680) = 0xEA00000000003633;
  *(void *)(v0 + 1688) = 89;
  *(void *)(v0 + 1696) = 0x3731343534393431;
  *(void *)(v0 + 1704) = 0xEA00000000003339;
  *(_OWORD *)(v0 + 1712) = xmmword_1C28D4F00;
  *(void *)(v0 + 1728) = 0xEA00000000003539;
  *(void *)(v0 + 1736) = 91;
  *(void *)(v0 + 1744) = 0x3233343534393431;
  *(void *)(v0 + 1752) = 0xEA00000000003837;
  *(_OWORD *)(v0 + 1760) = xmmword_1C28D4F10;
  *(void *)(v0 + 1776) = 0xEA00000000003233;
  *(void *)(v0 + 1784) = 95;
  *(void *)(v0 + 1792) = 0x3332343534393431;
  *(void *)(v0 + 1800) = 0xEA00000000003738;
  *(_OWORD *)(v0 + 1808) = xmmword_1C28D4F20;
  *(void *)(v0 + 1824) = 0xEA00000000003633;
  *(void *)(v0 + 1832) = 97;
  *(void *)(v0 + 1840) = 0x3832343534393431;
  *(void *)(v0 + 1848) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 1856) = xmmword_1C28D4F30;
  *(void *)(v0 + 1872) = 0xEA00000000003138;
  *(void *)(v0 + 1880) = 100;
  *(void *)(v0 + 1888) = 0x3039333436393431;
  *(void *)(v0 + 1896) = 0xEA00000000003539;
  *(_OWORD *)(v0 + 1904) = xmmword_1C28D4F40;
  *(void *)(v0 + 1920) = 0xEA00000000003436;
  *(void *)(v0 + 1928) = 110;
  *(void *)(v0 + 1936) = 0x3633333534393431;
  *(void *)(v0 + 1944) = 0xEA00000000003132;
  *(_OWORD *)(v0 + 1952) = xmmword_1C28D4F50;
  *(void *)(v0 + 1968) = 0xEA00000000003936;
  *(void *)(v0 + 1976) = 113;
  *(void *)(v0 + 1984) = 0x3735333534393431;
  *(void *)(v0 + 1992) = 0xEA00000000003035;
  *(_OWORD *)(v0 + 2000) = xmmword_1C28D4F60;
  *(void *)(v0 + 2016) = 0xEA00000000003936;
  *(void *)(v0 + 2024) = 118;
  *(void *)(v0 + 2032) = 0x3838333534393431;
  *(void *)(v0 + 2040) = 0xEA00000000003033;
  *(_OWORD *)(v0 + 2048) = xmmword_1C28D4F70;
  *(void *)(v0 + 2064) = 0xEA00000000003538;
  *(void *)(v0 + 2072) = 125;
  *(void *)(v0 + 2080) = 0x3036333734393431;
  *(void *)(v0 + 2088) = 0xEA00000000003830;
  *(_OWORD *)(v0 + 2096) = xmmword_1C28D4F80;
  *(void *)(v0 + 2112) = 0xEA00000000003533;
  *(void *)(v0 + 2120) = 138;
  *(void *)(v0 + 2128) = 0x3434333534393431;
  *(void *)(v0 + 2136) = 0xEA00000000003535;
  *(_OWORD *)(v0 + 2144) = xmmword_1C28D4F90;
  *(void *)(v0 + 2160) = 0xEA00000000003835;
  *(void *)(v0 + 2168) = 140;
  *(void *)(v0 + 2176) = 0x3036353636393431;
  *(void *)(v0 + 2184) = 0xEA00000000003133;
  *(_OWORD *)(v0 + 2192) = xmmword_1C28D4FA0;
  *(void *)(v0 + 2208) = 0xEA00000000003439;
  *(void *)(v0 + 2216) = 145;
  *(void *)(v0 + 2224) = 0x3934333534393431;
  *(void *)(v0 + 2232) = 0xEA00000000003632;
  *(_OWORD *)(v0 + 2240) = xmmword_1C28D4FB0;
  *(void *)(v0 + 2256) = 0xEA00000000003437;
  *(void *)(v0 + 2264) = 156;
  *(void *)(v0 + 2272) = 0x3037353636393431;
  *(void *)(v0 + 2280) = 0xEA00000000003738;
  *(_OWORD *)(v0 + 2288) = xmmword_1C28D4FC0;
  *(void *)(v0 + 2304) = 0xEA00000000003437;
  *(void *)(v0 + 2312) = 158;
  *(void *)(v0 + 2320) = 0x3130343436393431;
  *(void *)(v0 + 2328) = 0xEA00000000003336;
  *(_OWORD *)(v0 + 2336) = xmmword_1C28D4FD0;
  *(void *)(v0 + 2352) = 0xEA00000000003631;
  *(void *)(v0 + 2360) = 160;
  *(void *)(v0 + 2368) = 0x3530343436393431;
  *(void *)(v0 + 2376) = 0xEA00000000003635;
  *(_OWORD *)(v0 + 2384) = xmmword_1C28D4FE0;
  *(void *)(v0 + 2400) = 0xEA00000000003031;
  *(void *)(v0 + 2408) = 162;
  *(void *)(v0 + 2416) = 0x3031343436393431;
  *(void *)(v0 + 2424) = 0xEA00000000003930;
  *(_OWORD *)(v0 + 2432) = xmmword_1C28D4FF0;
  *(void *)(v0 + 2448) = 0xEA00000000003735;
  *(void *)(v0 + 2456) = 164;
  *(void *)(v0 + 2464) = 0x3933343436393431;
  *(void *)(v0 + 2472) = 0xEA00000000003936;
  *(_OWORD *)(v0 + 2480) = xmmword_1C28D5000;
  *(void *)(v0 + 2496) = 0xEA00000000003234;
  *(void *)(v0 + 2504) = 166;
  *(void *)(v0 + 2512) = 0x3434343436393431;
  *(void *)(v0 + 2520) = 0xEA00000000003734;
  *(_OWORD *)(v0 + 2528) = xmmword_1C28D5010;
  *(void *)(v0 + 2544) = 0xEA00000000003337;
  *(void *)(v0 + 2552) = 168;
  *(void *)(v0 + 2560) = 0x3834343436393431;
  *(void *)(v0 + 2568) = 0xEA00000000003938;
  *(_OWORD *)(v0 + 2576) = xmmword_1C28D5020;
  *(void *)(v0 + 2592) = 0xEA00000000003335;
  *(void *)(v0 + 2600) = 170;
  *(void *)(v0 + 2608) = 0x3734353636393431;
  *(void *)(v0 + 2616) = 0xEA00000000003635;
  *(_OWORD *)(v0 + 2624) = xmmword_1C28D5030;
  *(void *)(v0 + 2640) = 0xEA00000000003836;
  *(void *)(v0 + 2648) = 172;
  *(void *)(v0 + 2656) = 0x3136333436393431;
  *(void *)(v0 + 2664) = 0xEA00000000003532;
  *(_OWORD *)(v0 + 2672) = xmmword_1C28D5040;
  *(void *)(v0 + 2688) = 0xEA00000000003238;
  *(void *)(v0 + 2696) = 178;
  *(void *)(v0 + 2704) = 0x3037333436393431;
  *(void *)(v0 + 2712) = 0xEA00000000003231;
  *(_OWORD *)(v0 + 2720) = xmmword_1C28D5050;
  *(void *)(v0 + 2736) = 0xEA00000000003135;
  *(void *)(v0 + 2744) = 182;
  *(void *)(v0 + 2752) = 0x3231363636393431;
  *(void *)(v0 + 2760) = 0xEA00000000003130;
  *(_OWORD *)(v0 + 2768) = xmmword_1C28D5060;
  *(void *)(v0 + 2784) = 0xEA00000000003935;
  *(void *)(v0 + 2792) = 186;
  *(void *)(v0 + 2800) = 0x3639333436393431;
  *(void *)(v0 + 2808) = 0xEA00000000003033;
  *(_OWORD *)(v0 + 2816) = xmmword_1C28D5070;
  *(void *)(v0 + 2832) = 0xEA00000000003937;
  *(void *)(v0 + 2840) = 188;
  *(void *)(v0 + 2848) = 0x3731363636393431;
  *(void *)(v0 + 2856) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 2864) = xmmword_1C28D5080;
  *(void *)(v0 + 2880) = 0xEA00000000003930;
  *(void *)(v0 + 2888) = 191;
  *(void *)(v0 + 2896) = 0x3537333436393431;
  *(void *)(v0 + 2904) = 0xEA00000000003532;
  *(_OWORD *)(v0 + 2912) = xmmword_1C28D5090;
  *(void *)(v0 + 2928) = 0xEA00000000003039;
  *(void *)(v0 + 2936) = 193;
  *(void *)(v0 + 2944) = 0x3238333436393431;
  *(void *)(v0 + 2952) = 0xEA00000000003639;
  *(_OWORD *)(v0 + 2960) = xmmword_1C28D50A0;
  *(void *)(v0 + 2976) = 0xEA00000000003835;
  *(void *)(v0 + 2984) = 195;
  *(void *)(v0 + 2992) = 0x3432363636393431;
  *(void *)(v0 + 3000) = 0xEA00000000003135;
  *(_OWORD *)(v0 + 3008) = xmmword_1C28D50B0;
  *(void *)(v0 + 3024) = 0xEA00000000003837;
  *(void *)(v0 + 3032) = 199;
  *(void *)(v0 + 3040) = 0x3337333436393431;
  *(void *)(v0 + 3048) = 0xEA00000000003534;
  *(_OWORD *)(v0 + 3056) = xmmword_1C28D50C0;
  *(void *)(v0 + 3072) = 0xEA00000000003439;
  *(void *)(v0 + 3080) = 202;
  *(void *)(v0 + 3088) = 0x3234363636393431;
  *(void *)(v0 + 3096) = 0xEA00000000003139;
  *(_OWORD *)(v0 + 3104) = xmmword_1C28D50D0;
  *(void *)(v0 + 3120) = 0xEA00000000003339;
  *(void *)(v0 + 3128) = 205;
  *(void *)(v0 + 3136) = 0x3235363636393431;
  *(void *)(v0 + 3144) = 0xEA00000000003535;
  *(_OWORD *)(v0 + 3152) = xmmword_1C28D50E0;
  *(void *)(v0 + 3168) = 0xEA00000000003339;
  *(void *)(v0 + 3176) = 207;
  *(void *)(v0 + 3184) = 0x3036363636393431;
  *(void *)(v0 + 3192) = 0xEA00000000003830;
  *(_OWORD *)(v0 + 3200) = xmmword_1C28D50F0;
  *(void *)(v0 + 3216) = 0xEA00000000003234;
  *(void *)(v0 + 3224) = 249;
  *(void *)(v0 + 3232) = 0x3333373334353531;
  *(void *)(v0 + 3240) = 0xEA00000000003935;
  *(_OWORD *)(v0 + 3248) = xmmword_1C28D5100;
  *(void *)(v0 + 3264) = 0xEA00000000003439;
  *(void *)(v0 + 3272) = 266;
  *(void *)(v0 + 3280) = 0x3530393639303631;
  *(void *)(v0 + 3288) = 0xEA00000000003739;
  unint64_t v1 = sub_1C2807C7C((void *)v0);
  swift_setDeallocating();
  sub_1C283BB24();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return v1;
}

void sub_1C283BACC()
{
  if (!qword_1EBB74CE0)
  {
    sub_1C283BB24();
    unint64_t v0 = sub_1C28CE620();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB74CE0);
    }
  }
}

void sub_1C283BB24()
{
  if (!qword_1EBB74C88)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_1EBB74C88);
    }
  }
}

uint64_t ProfileDisplayName.init(sharingEntry:contact:)(uint64_t a1, id a2)
{
  if (a2)
  {
    id v3 = objc_msgSend(a2, sel_termsOfAddress);
    sub_1C283BDB8();
    sub_1C28CD920();

    sub_1C283BDF8(0, &qword_1EA3109D8, (void (*)(uint64_t))sub_1C283BDB8);
    sub_1C283BDF8(0, &qword_1EA3109E0, MEMORY[0x1E4F26EB0]);
    swift_dynamicCast();
  }
  type metadata accessor for SharingEntryProfileInformation();
  sub_1C28CCBA0();
  sub_1C28CCB90();
  sub_1C28CCB90();
  sub_1C28CC900();

  return sub_1C27DF1EC(a1);
}

unint64_t sub_1C283BDB8()
{
  unint64_t result = qword_1EA310710;
  if (!qword_1EA310710)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310710);
  }
  return result;
}

void sub_1C283BDF8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDA30();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id AppStoreDataProvider.bag.getter()
{
  return *(id *)(v0 + 16);
}

id sub_1C283BE54()
{
  uint64_t v1 = (void *)v0[3];
  if (v1)
  {
    id v2 = (id)v0[3];
  }
  else
  {
    id v3 = (void *)(*(uint64_t (**)(void))(*v0 + 280))();
    unint64_t v4 = (void *)v0[3];
    v0[3] = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1C283BED4()
{
  uint64_t v1 = *(void **)(v0 + 32);
  id v2 = v1;
  if (v1 == (void *)1)
  {
    id v2 = sub_1C283C0AC(v0, 0x437972746E756F63, 0xEB0000000065646FLL, (SEL *)&selRef_stringForKey_);
    id v3 = *(void **)(v0 + 32);
    *(void *)(v0 + 32) = v2;
    id v4 = v2;
    sub_1C283C198(v3);
  }
  sub_1C283C1A8(v1);
  return v2;
}

void sub_1C283BF58(uint64_t a1)
{
  id v2 = *(void **)(v1 + 32);
  *(void *)(v1 + 32) = a1;
  sub_1C283C198(v2);
}

void (*sub_1C283BF68(id *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1C283BED4();
  return sub_1C283BFB0;
}

void sub_1C283BFB0(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(v3 + 32);
  *(void *)(v3 + 32) = *(void *)a1;
  if (a2)
  {
    id v5 = v2;
    sub_1C283C198(v4);
  }
  else
  {
    sub_1C283C198(v4);
  }
}

id sub_1C283C02C()
{
  uint64_t v1 = *(void **)(v0 + 40);
  id v2 = v1;
  if (v1 == (void *)1)
  {
    id v2 = sub_1C283C0AC(v0, 0xD000000000000013, 0x80000001C28DC4D0, (SEL *)&selRef_URLForKey_);
    uint64_t v3 = *(void **)(v0 + 40);
    *(void *)(v0 + 40) = v2;
    id v4 = v2;
    sub_1C283C198(v3);
  }
  sub_1C283C1A8(v1);
  return v2;
}

id sub_1C283C0AC(uint64_t a1, uint64_t a2, uint64_t a3, SEL *a4)
{
  v13[1] = *(id *)MEMORY[0x1E4F143B8];
  id v5 = *(void **)(a1 + 16);
  char v6 = (void *)sub_1C28CD6F0();
  id v7 = objc_msgSend(v5, *a4, v6);

  v13[0] = 0;
  id v8 = objc_msgSend(v7, sel_valueWithError_, v13);

  id v9 = v13[0];
  if (!v8)
  {
    uint64_t v10 = v9;
    uint64_t v11 = (void *)sub_1C28CC290();

    swift_willThrow();
    return 0;
  }
  return v8;
}

void sub_1C283C198(id a1)
{
  if (a1 != (id)1) {
}
  }

id sub_1C283C1A8(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

void sub_1C283C1B8(uint64_t a1)
{
  id v2 = *(void **)(v1 + 40);
  *(void *)(v1 + 40) = a1;
  sub_1C283C198(v2);
}

void (*sub_1C283C1C8(id *a1))(uint64_t a1, char a2)
{
  a1[1] = v1;
  *a1 = sub_1C283C02C();
  return sub_1C283C210;
}

void sub_1C283C210(uint64_t a1, char a2)
{
  id v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = *(void *)a1;
  if (a2)
  {
    id v5 = v2;
    sub_1C283C198(v4);
  }
  else
  {
    sub_1C283C198(v4);
  }
}

id sub_1C283C28C()
{
  uint64_t v1 = (void *)v0[6];
  if (v1)
  {
    id v2 = (id)v0[6];
  }
  else
  {
    uint64_t v3 = (void *)(*(uint64_t (**)(void))(*v0 + 264))();
    id v4 = (void *)v0[6];
    v0[6] = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

id sub_1C283C30C()
{
  uint64_t v1 = (void *)v0[7];
  if (v1)
  {
    id v2 = (id)v0[7];
  }
  else
  {
    uint64_t v3 = (void *)(*(uint64_t (**)(void))(*v0 + 272))();
    id v4 = (void *)v0[7];
    v0[7] = v3;
    id v2 = v3;

    uint64_t v1 = 0;
  }
  id v5 = v1;
  return v2;
}

uint64_t sub_1C283C38C()
{
  unint64_t v0 = sub_1C283AD14();
  if (qword_1EBB73DA8 != -1) {
    swift_once();
  }
  uint64_t v1 = swift_bridgeObjectRetain();
  return sub_1C283C408(v1, v0);
}

uint64_t sub_1C283C408(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1C28418A8(a1, (uint64_t)sub_1C2841BAC, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t AppStoreDataProvider.__allocating_init()()
{
  uint64_t v0 = swift_allocObject();
  AppStoreDataProvider.init()();
  return v0;
}

id AppStoreDataProvider.init()()
{
  uint64_t v1 = self;
  id result = objc_msgSend(v1, sel_bagSubProfile);
  if (result)
  {
    uint64_t v3 = result;
    sub_1C28CD730();

    id result = objc_msgSend(v1, sel_bagSubProfileVersion);
    if (result)
    {
      id v4 = result;
      sub_1C28CD730();

      id v5 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      uint64_t v6 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      id v7 = objc_msgSend(self, sel_bagForProfile_profileVersion_, v5, v6);

      *(void *)(v0 + 16) = v7;
      *(_OWORD *)(v0 + 24) = xmmword_1C28D13F0;
      *(void *)(v0 + 48) = 0;
      *(void *)(v0 + 56) = 0;
      *(void *)(v0 + 40) = 1;
      id v8 = sub_1C283BE54();
      id v9 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD28]), sel_initWithTokenService_, v8);

      id v10 = sub_1C283C28C();
      objc_msgSend(v10, sel_setProtocolHandler_, v9);

      return (id)v0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

id sub_1C283C63C()
{
  id v0 = objc_msgSend(self, sel_ephemeralSessionConfiguration);
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DE88]), sel_initWithConfiguration_, v0);

  return v1;
}

id sub_1C283C6A4()
{
  id v1 = sub_1C283BE54();
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F4DD30]), sel_initWithTokenService_bag_, v1, *(void *)(v0 + 16));

  return v2;
}

id sub_1C283C6F8()
{
  id v1 = *(void **)(v0 + 16);
  id v2 = objc_allocWithZone(MEMORY[0x1E4F4DD48]);
  id v3 = v1;
  id v4 = (void *)sub_1C28CD6F0();
  id v5 = objc_msgSend(v2, sel_initWithClientIdentifier_bag_, v4, v3);

  return v5;
}

uint64_t sub_1C283C780(uint64_t a1)
{
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = a1;
  id v4 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2842974(0, &qword_1EBB73E20, MEMORY[0x1E4F1AAE0]);
  sub_1C28429E4(&qword_1EBB73E18, &qword_1EBB73E20, v4);
  swift_retain();
  swift_bridgeObjectRetain();

  return sub_1C28CD260();
}

uint64_t sub_1C283C878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  sub_1C284268C();
  uint64_t v36 = *(void *)(v6 - 8);
  uint64_t v37 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v35 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1C28CCE10();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD80();
  swift_bridgeObjectRetain_n();
  swift_retain_n();
  uint64_t v12 = sub_1C28CCE00();
  os_log_type_t v13 = sub_1C28CDCD0();
  int v14 = v13;
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v15 = swift_slowAlloc();
    uint64_t v34 = a3;
    uint64_t v16 = v15;
    uint64_t v17 = swift_slowAlloc();
    uint64_t v33 = v17;
    *(_DWORD *)uint64_t v16 = 136446722;
    uint64_t v39 = 0;
    unint64_t v40 = 0xE000000000000000;
    uint64_t v41 = v17;
    swift_retain();
    int v32 = v14;
    sub_1C28CE120();
    sub_1C28CD7C0();
    uint64_t v38 = a1;
    sub_1C28CE270();
    sub_1C28CD7C0();
    swift_release();
    uint64_t v31 = v8;
    uint64_t v39 = sub_1C27D36AC(v39, v40, &v41);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2048;
    uint64_t v18 = *(void *)(a2 + 16);
    swift_bridgeObjectRelease();
    uint64_t v39 = v18;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 22) = 2080;
    uint64_t v19 = swift_bridgeObjectRetain();
    uint64_t v20 = MEMORY[0x1C875EEC0](v19, MEMORY[0x1E4FBB550]);
    unint64_t v22 = v21;
    swift_bridgeObjectRelease();
    uint64_t v39 = sub_1C27D36AC(v20, v22, &v41);
    sub_1C28CDF90();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1C27B7000, v12, (os_log_type_t)v32, "%{public}s: Fetching Editorial Items for %ld identifiers %s", (uint8_t *)v16, 0x20u);
    uint64_t v23 = v33;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v23, -1, -1);
    uint64_t v24 = v16;
    a3 = v34;
    MEMORY[0x1C87609B0](v24, -1, -1);

    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v31);
  }
  else
  {

    swift_release_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  }
  uint64_t v39 = sub_1C283D0AC(a2);
  swift_retain();
  sub_1C28CD090();
  sub_1C2842784(0, &qword_1EBB73E10, MEMORY[0x1E4F1AAE0]);
  uint64_t v25 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x1E4F1AAE0];
  sub_1C2842974(0, &qword_1EBB73E20, MEMORY[0x1E4F1AAE0]);
  sub_1C28427FC();
  sub_1C28429E4(&qword_1EBB73E18, &qword_1EBB73E20, v25);
  uint64_t v26 = v35;
  sub_1C28CD3B0();
  swift_release();
  swift_release();
  sub_1C2842878(&qword_1EBB73DF8, (void (*)(uint64_t))sub_1C284268C);
  uint64_t v27 = v37;
  uint64_t v28 = sub_1C28CD300();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v26, v27);
  *a3 = v28;
  return result;
}

uint64_t sub_1C283CDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v25 = a3;
  uint64_t v5 = sub_1C28CBE80();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x1F4188790](v5);
  sub_1C28428C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v23 = v8;
  uint64_t v24 = v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v12 = sub_1C283C28C();
  os_log_type_t v13 = (void *)sub_1C28CBE60();
  id v14 = objc_msgSend(v12, sel_dataTaskPromiseWithRequest_, v13);

  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  unint64_t v15 = (*(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  uint64_t v16 = swift_allocObject();
  *(void *)(v16 + 16) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v16 + v15, (char *)&v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  *(void *)(v16 + ((v7 + v15 + 7) & 0xFFFFFFFFFFFFFFF8)) = v14;
  uint64_t v17 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x1E4F1AC28];
  sub_1C2842974(0, &qword_1EBB73E48, MEMORY[0x1E4F1AC28]);
  sub_1C28429E4(&qword_1EBB73E40, &qword_1EBB73E48, v17);
  swift_retain();
  id v18 = v14;
  sub_1C28CD260();
  sub_1C2842878(&qword_1EBB73E60, (void (*)(uint64_t))sub_1C28428C0);
  uint64_t v19 = v23;
  uint64_t v20 = sub_1C28CD300();

  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v11, v19);
  uint64_t *v25 = v20;
  return result;
}

uint64_t sub_1C283D0AC(uint64_t a1)
{
  sub_1C2842784(0, &qword_1EBB73E28, MEMORY[0x1E4F1ABF8]);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  uint64_t v54 = v4;
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v48 - v5;
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v55 = *(void (***)(char *, void))(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v56 = (char *)&v48 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C284212C();
  uint64_t v51 = *((void *)v9 - 1);
  uint64_t v52 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v50 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C2842E50(0, &qword_1EBB73CE0, MEMORY[0x1E4F26ED8], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v11 - 8);
  os_log_type_t v13 = (char *)&v48 - v12;
  uint64_t v14 = sub_1C28CC060();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  uint64_t v17 = MEMORY[0x1F4188790](v14);
  id v18 = (char *)&v48 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v48 - v19;
  uint64_t v57 = a1;
  uint64_t v21 = a1;
  uint64_t v22 = v1;
  sub_1C2840598(v21, (uint64_t)v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    uint64_t v51 = v7;
    uint64_t v52 = v6;
    sub_1C2842220((uint64_t)v13, &qword_1EBB73CE0, MEMORY[0x1E4F26ED8]);
    sub_1C28CCD80();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v23 = sub_1C28CCE00();
    os_log_type_t v24 = sub_1C28CDCB0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = swift_slowAlloc();
      uint64_t v26 = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v59 = 0;
      unint64_t v60 = 0xE000000000000000;
      uint64_t v61 = v26;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v58 = v1;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      uint64_t v59 = sub_1C27D36AC(v59, v60, &v61);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v27 = swift_bridgeObjectRetain();
      uint64_t v28 = MEMORY[0x1C875EEC0](v27, MEMORY[0x1E4FBB550]);
      unint64_t v30 = v29;
      swift_bridgeObjectRelease();
      uint64_t v59 = sub_1C27D36AC(v28, v30, &v61);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v23, v24, "%{public}s: Unable to create URL for identifier %s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v26, -1, -1);
      MEMORY[0x1C87609B0](v25, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v55[1](v56, v51);
    uint64_t v43 = v52;
    sub_1C2842290();
    uint64_t v44 = swift_allocError();
    *uint64_t v45 = 2;
    uint64_t v59 = v44;
    sub_1C28CBE80();
    sub_1C27C7060();
    sub_1C28CD1B0();
    sub_1C28422E4();
    uint64_t v46 = v53;
    uint64_t v42 = sub_1C28CD300();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v43, v46);
  }
  else
  {
    uint64_t v56 = *(char **)(v15 + 32);
    uint64_t v31 = v20;
    ((void (*)(char *, char *, uint64_t))v56)(v20, v13, v14);
    uint64_t v48 = v1;
    id v32 = sub_1C283C30C();
    uint64_t v49 = v20;
    uint64_t v33 = (void *)sub_1C28CC000();
    uint64_t v55 = (void (**)(char *, void))objc_msgSend(v32, sel_requestWithComponents_, v33);

    (*(void (**)(char *, char *, uint64_t))(v15 + 16))(v18, v31, v14);
    unint64_t v34 = (*(unsigned __int8 *)(v15 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    unint64_t v35 = (v16 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = v57;
    uint64_t v37 = swift_allocObject();
    *(void *)(v37 + 16) = v22;
    ((void (*)(unint64_t, char *, uint64_t))v56)(v37 + v34, v18, v14);
    uint64_t v38 = v55;
    *(void *)(v37 + v35) = v55;
    *(void *)(v37 + ((v35 + 15) & 0xFFFFFFFFFFFFFFF8)) = v36;
    sub_1C2842784(0, &qword_1EBB73E38, MEMORY[0x1E4F1AC28]);
    sub_1C28421AC();
    swift_retain();
    id v39 = v38;
    swift_bridgeObjectRetain();
    unint64_t v40 = v50;
    sub_1C28CD260();
    sub_1C2842878(&qword_1EBB73E50, (void (*)(uint64_t))sub_1C284212C);
    uint64_t v41 = v52;
    uint64_t v42 = sub_1C28CD300();

    (*(void (**)(char *, char *))(v51 + 8))(v40, v41);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v49, v14);
  }
  return v42;
}

uint64_t sub_1C283D8B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v19 = a5;
  uint64_t v9 = sub_1C28CC060();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x1F4188790](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  unint64_t v13 = (*(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v14 = (v11 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v15 + v13, v12, v9);
  *(void *)(v15 + v14) = a3;
  *(void *)(v15 + ((v14 + 15) & 0xFFFFFFFFFFFFFFF8)) = a4;
  sub_1C2842784(0, &qword_1EBB73E38, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  id v16 = a3;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1C28CD250();
  *uint64_t v19 = result;
  return result;
}

void sub_1C283DA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6)
{
  uint64_t v37 = a1;
  uint64_t v11 = sub_1C28CC060();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x1F4188790](v11);
  unint64_t v14 = (char *)v29 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1C28CCE10();
  uint64_t v35 = *(void *)(v15 - 8);
  uint64_t v36 = v15;
  MEMORY[0x1F4188790](v15);
  uint64_t v17 = (char *)v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD80();
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, a4, v11);
  swift_retain_n();
  uint64_t v18 = sub_1C28CCE00();
  os_log_type_t v19 = sub_1C28CDCD0();
  int v20 = v19;
  if (os_log_type_enabled(v18, v19))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v33 = a2;
    uint64_t v22 = v21;
    uint64_t v31 = swift_slowAlloc();
    uint64_t v39 = v31;
    uint64_t aBlock = 0;
    *(_DWORD *)uint64_t v22 = 136446466;
    v29[1] = v22 + 4;
    unint64_t v41 = 0xE000000000000000;
    swift_retain();
    int v30 = v20;
    sub_1C28CE120();
    unint64_t v34 = a5;
    sub_1C28CD7C0();
    uint64_t v38 = a3;
    sub_1C28CE270();
    sub_1C28CD7C0();
    swift_release();
    uint64_t aBlock = sub_1C27D36AC(aBlock, v41, &v39);
    uint64_t v32 = a6;
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    sub_1C2842878(&qword_1EBB73CD8, MEMORY[0x1E4F26ED8]);
    uint64_t v23 = sub_1C28CE610();
    uint64_t aBlock = sub_1C27D36AC(v23, v24, &v39);
    a6 = v32;
    a5 = v34;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    _os_log_impl(&dword_1C27B7000, v18, (os_log_type_t)v30, "%{public}s: Encoding request with components %s.", (uint8_t *)v22, 0x16u);
    uint64_t v25 = v31;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v25, -1, -1);
    uint64_t v26 = v22;
    a2 = v33;
    MEMORY[0x1C87609B0](v26, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }

  (*(void (**)(char *, uint64_t))(v35 + 8))(v17, v36);
  uint64_t v27 = (void *)swift_allocObject();
  v27[2] = a3;
  v27[3] = a6;
  void v27[4] = v37;
  v27[5] = a2;
  uint64_t v44 = sub_1C2842608;
  uint64_t v45 = v27;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v41 = 1107296256;
  uint64_t v42 = sub_1C283EBE4;
  uint64_t v43 = &block_descriptor_5;
  uint64_t v28 = _Block_copy(&aBlock);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addFinishBlock_, v28);
  _Block_release(v28);
}

uint64_t sub_1C283DF20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t *), uint64_t a6)
{
  uint64_t v95 = a6;
  uint64_t v96 = a5;
  sub_1C2842784(0, &qword_1EBB73EE8, MEMORY[0x1E4FBC448]);
  uint64_t v93 = v9;
  MEMORY[0x1F4188790](v9);
  uint64_t v94 = (uint64_t *)((char *)&v83 - v10);
  uint64_t v11 = sub_1C28CCE10();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v91 = v11;
  uint64_t v92 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v83 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x1F4188790](v13);
  uint64_t v18 = (char *)&v83 - v17;
  MEMORY[0x1F4188790](v16);
  int v20 = (char *)&v83 - v19;
  sub_1C2842E50(0, &qword_1EBB74AA0, MEMORY[0x1E4F26C48], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v21 - 8);
  uint64_t v23 = (char *)&v83 - v22;
  uint64_t v24 = sub_1C28CBE80();
  uint64_t v25 = MEMORY[0x1F4188790](v24);
  uint64_t v26 = MEMORY[0x1F4188790](v25);
  uint64_t v28 = (char *)&v83 - v27;
  MEMORY[0x1F4188790](v26);
  if (a2)
  {
    id v32 = a2;
    sub_1C28CCD80();
    id v33 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    id v34 = a2;
    swift_retain();
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_1C28CCE00();
    os_log_type_t v36 = sub_1C28CDCB0();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      int v90 = (char *)v38;
      *(_DWORD *)uint64_t v37 = 136446722;
      uint64_t v98 = 0;
      unint64_t v99 = 0xE000000000000000;
      uint64_t v100 = v38;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v97 = a3;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      uint64_t v98 = sub_1C27D36AC(v98, v99, &v100);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 12) = 2080;
      uint64_t v98 = (uint64_t)a2;
      id v39 = a2;
      sub_1C27C7060();
      uint64_t v40 = sub_1C28CD750();
      uint64_t v98 = sub_1C27D36AC(v40, v41, &v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      *(_WORD *)(v37 + 22) = 2080;
      uint64_t v42 = swift_bridgeObjectRetain();
      uint64_t v43 = MEMORY[0x1C875EEC0](v42, MEMORY[0x1E4FBB550]);
      unint64_t v45 = v44;
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1C27D36AC(v43, v45, &v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v35, v36, "%{public}s: Recieved an error %s encoding the URL for identifiers %s", (uint8_t *)v37, 0x20u);
      uint64_t v46 = v90;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v46, -1, -1);
      MEMORY[0x1C87609B0](v37, -1, -1);
    }
    else
    {
      swift_release_n();

      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v20, v91);
    uint64_t v65 = v96;
    uint64_t v66 = v94;
    uint64_t *v94 = (uint64_t)a2;
    swift_storeEnumTagMultiPayload();
    id v67 = a2;
    v65(v66);

    return sub_1C2842614((uint64_t)v66);
  }
  if (!a1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v30 + 56))(v23, 1, 1, v24);
    goto LABEL_11;
  }
  uint64_t v89 = v31;
  int v90 = (char *)&v83 - v29;
  uint64_t v47 = v30;
  sub_1C28CBE70();
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v47 + 32);
  v48(v23, v28, v24);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v47 + 56))(v23, 0, 1, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v47 + 48))(v23, 1, v24) == 1)
  {
LABEL_11:
    sub_1C2842220((uint64_t)v23, &qword_1EBB74AA0, MEMORY[0x1E4F26C48]);
    sub_1C28CCD80();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    uint64_t v68 = sub_1C28CCE00();
    os_log_type_t v69 = sub_1C28CDCB0();
    if (os_log_type_enabled(v68, v69))
    {
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      *(_DWORD *)uint64_t v70 = 136446466;
      uint64_t v98 = 0;
      unint64_t v99 = 0xE000000000000000;
      uint64_t v100 = v71;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v97 = a3;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      uint64_t v98 = sub_1C27D36AC(v98, v99, &v100);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v70 + 12) = 2080;
      uint64_t v72 = swift_bridgeObjectRetain();
      uint64_t v73 = MEMORY[0x1C875EEC0](v72, MEMORY[0x1E4FBB550]);
      unint64_t v75 = v74;
      swift_bridgeObjectRelease();
      uint64_t v98 = sub_1C27D36AC(v73, v75, &v100);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v68, v69, "%{public}s: Unable to cast AMSURLRequest for identifiers %s.", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v71, -1, -1);
      MEMORY[0x1C87609B0](v70, -1, -1);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v18, v91);
    uint64_t v76 = v96;
    uint64_t v66 = v94;
    sub_1C2842290();
    uint64_t v77 = swift_allocError();
    *uint64_t v78 = 0;
    *uint64_t v66 = v77;
    swift_storeEnumTagMultiPayload();
    v76(v66);
    return sub_1C2842614((uint64_t)v66);
  }
  uint64_t v49 = v90;
  v48(v90, v23, v24);
  sub_1C28CCD80();
  uint64_t v50 = v89;
  uint64_t v87 = *(void (**)(uint64_t, char *, uint64_t))(v47 + 16);
  uint64_t v88 = v47 + 16;
  v87(v89, v49, v24);
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v51 = sub_1C28CCE00();
  os_log_type_t v52 = sub_1C28CDCD0();
  int v53 = v52;
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v54 = swift_slowAlloc();
    uint64_t v86 = v15;
    uint64_t v55 = v54;
    uint64_t v56 = swift_slowAlloc();
    uint64_t v85 = v56;
    *(_DWORD *)uint64_t v55 = 136446722;
    uint64_t v83 = v55 + 4;
    uint64_t v98 = 0;
    unint64_t v99 = 0xE000000000000000;
    uint64_t v100 = v56;
    swift_retain();
    sub_1C28CE120();
    int v84 = v53;
    sub_1C28CD7C0();
    uint64_t v97 = a3;
    sub_1C28CE270();
    sub_1C28CD7C0();
    swift_release();
    uint64_t v98 = sub_1C27D36AC(v98, v99, &v100);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 12) = 2080;
    uint64_t v57 = swift_bridgeObjectRetain();
    uint64_t v58 = MEMORY[0x1C875EEC0](v57, MEMORY[0x1E4FBB550]);
    unint64_t v60 = v59;
    swift_bridgeObjectRelease();
    uint64_t v98 = sub_1C27D36AC(v58, v60, &v100);
    sub_1C28CDF90();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v55 + 22) = 2080;
    sub_1C2842878(&qword_1EBB73CD0, MEMORY[0x1E4F26C48]);
    uint64_t v61 = sub_1C28CE610();
    uint64_t v98 = sub_1C27D36AC(v61, v62, &v100);
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v63(v50, v24);
    _os_log_impl(&dword_1C27B7000, v51, (os_log_type_t)v84, "%{public}s: Successfully encoded URL request for identifiers %s and request %s", (uint8_t *)v55, 0x20u);
    uint64_t v64 = v85;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v64, -1, -1);
    MEMORY[0x1C87609B0](v55, -1, -1);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v91);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_release_n();
    uint64_t v63 = *(void (**)(uint64_t, uint64_t))(v47 + 8);
    v63(v50, v24);

    (*(void (**)(char *, uint64_t))(v92 + 8))(v15, v91);
  }
  uint64_t v80 = (void (*)(uint64_t))v96;
  uint64_t v81 = (uint64_t)v94;
  uint64_t v82 = v90;
  v87((uint64_t)v94, v90, v24);
  swift_storeEnumTagMultiPayload();
  v80(v81);
  sub_1C2842614(v81);
  return ((uint64_t (*)(char *, uint64_t))v63)(v82, v24);
}

uint64_t sub_1C283EBE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_1C28CBE80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x1F4188790](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a1;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
  sub_1C2842974(0, &qword_1EBB73E48, MEMORY[0x1E4F1AC28]);
  swift_allocObject();
  swift_retain();
  id v13 = a3;
  uint64_t result = sub_1C28CD250();
  *a4 = result;
  return result;
}

void sub_1C283ED88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v45 = a1;
  uint64_t v9 = sub_1C28CBE80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v12 = MEMORY[0x1F4188790](v9);
  id v13 = (char *)&v34 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t v16 = sub_1C28CCE10();
  uint64_t v41 = *(void *)(v16 - 8);
  uint64_t v42 = v16;
  MEMORY[0x1F4188790](v16);
  uint64_t v18 = (char *)&v34 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28CCD80();
  uint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  uint64_t v44 = v10 + 16;
  v43(v15, a4, v9);
  uint64_t v46 = a3;
  swift_retain_n();
  uint64_t v19 = sub_1C28CCE00();
  os_log_type_t v20 = sub_1C28CDCD0();
  int v40 = v20;
  if (os_log_type_enabled(v19, v20))
  {
    uint64_t v21 = swift_slowAlloc();
    uint64_t v38 = a2;
    uint64_t v22 = v21;
    uint64_t v35 = swift_slowAlloc();
    uint64_t v48 = v35;
    uint64_t aBlock = 0;
    *(_DWORD *)uint64_t v22 = 136446466;
    uint64_t v36 = v11;
    uint64_t v37 = v22 + 4;
    unint64_t v50 = 0xE000000000000000;
    uint64_t v23 = v46;
    swift_retain();
    os_log_t v34 = v19;
    sub_1C28CE120();
    id v39 = a5;
    sub_1C28CD7C0();
    uint64_t v47 = v23;
    sub_1C28CE270();
    sub_1C28CD7C0();
    swift_release();
    uint64_t aBlock = sub_1C27D36AC(aBlock, v50, &v48);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v22 + 12) = 2080;
    uint64_t v37 = a4;
    sub_1C2842878(&qword_1EBB73CD0, MEMORY[0x1E4F26C48]);
    uint64_t v24 = sub_1C28CE610();
    uint64_t aBlock = sub_1C27D36AC(v24, v25, &v48);
    a5 = v39;
    a4 = v37;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    os_log_t v26 = v34;
    _os_log_impl(&dword_1C27B7000, v34, (os_log_type_t)v40, "%{public}s: Begining EditorialItem download for request %s.", (uint8_t *)v22, 0x16u);
    uint64_t v27 = v35;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v27, -1, -1);
    uint64_t v28 = v22;
    a2 = v38;
    MEMORY[0x1C87609B0](v28, -1, -1);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  (*(void (**)(char *, uint64_t))(v41 + 8))(v18, v42);
  uint64_t v29 = swift_allocObject();
  swift_weakInit();
  v43(v13, a4, v9);
  unint64_t v30 = (*(unsigned __int8 *)(v10 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v31 = (char *)swift_allocObject();
  uint64_t v32 = v45;
  *((void *)v31 + 2) = v29;
  *((void *)v31 + 3) = v32;
  *((void *)v31 + 4) = a2;
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(&v31[v30], v13, v9);
  int v53 = sub_1C2842D74;
  uint64_t v54 = v31;
  uint64_t aBlock = MEMORY[0x1E4F143A8];
  unint64_t v50 = 1107296256;
  uint64_t v51 = sub_1C283EBE4;
  os_log_type_t v52 = &block_descriptor_36;
  id v33 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(a5, sel_addFinishBlock_, v33);
  _Block_release(v33);
}

void sub_1C283F2CC(char *a1, char *a2, uint64_t a3, void (*a4)(char **), uint64_t a5, uint64_t a6)
{
  uint64_t v103 = a6;
  uint64_t v107 = a5;
  uint64_t v108 = a4;
  uint64_t v104 = sub_1C28CBE80();
  uint64_t v8 = *(void *)(v104 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v104);
  uint64_t v102 = (char *)&v98 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v100 = (char *)&v98 - v12;
  uint64_t v13 = MEMORY[0x1F4188790](v11);
  uint64_t v15 = (char *)&v98 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v98 - v16;
  uint64_t v18 = sub_1C28CCE10();
  uint64_t v19 = *(void *)(v18 - 8);
  uint64_t v105 = v18;
  uint64_t v106 = v19;
  uint64_t v20 = MEMORY[0x1F4188790](v18);
  uint64_t v101 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x1F4188790](v20);
  uint64_t v24 = (char *)&v98 - v23;
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v98 - v26;
  uint64_t v28 = MEMORY[0x1F4188790](v25);
  unint64_t v30 = (char *)&v98 - v29;
  MEMORY[0x1F4188790](v28);
  uint64_t v32 = (char *)&v98 - v31;
  swift_beginAccess();
  uint64_t Strong = swift_weakLoadStrong();
  if (!Strong)
  {
    sub_1C28CCD80();
    uint64_t v57 = sub_1C28CCE00();
    os_log_type_t v58 = sub_1C28CDCB0();
    if (os_log_type_enabled(v57, v58))
    {
      unint64_t v59 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v59 = 0;
      _os_log_impl(&dword_1C27B7000, v57, v58, "The store data provider has been deallocated.", v59, 2u);
      MEMORY[0x1C87609B0](v59, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v32, v105);
    sub_1C2842290();
    uint64_t v60 = swift_allocError();
    *uint64_t v61 = 4;
    id v110 = (char *)v60;
    LOBYTE(v111) = 1;
    v108(&v110);
    goto LABEL_8;
  }
  uint64_t v34 = Strong;
  if (a2)
  {
    uint64_t v35 = a2;
    sub_1C28CCD80();
    uint64_t v36 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v17, v103, v104);
    uint64_t v37 = a2;
    uint64_t v38 = a1;
    swift_retain();
    id v39 = a2;
    swift_retain();
    int v40 = v38;
    uint64_t v41 = sub_1C28CCE00();
    os_log_type_t v42 = sub_1C28CDCB0();
    int v43 = v42;
    if (os_log_type_enabled(v41, v42))
    {
      uint64_t v44 = swift_slowAlloc();
      uint64_t v45 = swift_slowAlloc();
      uint64_t v103 = v45;
      *(_DWORD *)uint64_t v44 = 136446978;
      uint64_t v101 = a1;
      id v110 = 0;
      unint64_t v111 = 0xE000000000000000;
      uint64_t v112 = v45;
      swift_retain();
      LODWORD(v102) = v43;
      sub_1C28CE120();
      uint64_t v100 = v40;
      sub_1C28CD7C0();
      uint64_t v109 = v34;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      id v110 = (char *)sub_1C27D36AC((uint64_t)v110, v111, &v112);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v44 + 12) = 2080;
      id v110 = a2;
      uint64_t v46 = a2;
      sub_1C27C7060();
      uint64_t v47 = sub_1C28CD750();
      id v110 = (char *)sub_1C27D36AC(v47, v48, &v112);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      *(_WORD *)(v44 + 22) = 2080;
      sub_1C2842878(&qword_1EBB73CD0, MEMORY[0x1E4F26C48]);
      os_log_t v99 = v41;
      uint64_t v49 = v104;
      uint64_t v50 = sub_1C28CE610();
      id v110 = (char *)sub_1C27D36AC(v50, v51, &v112);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v49);
      *(_WORD *)(v44 + 32) = 2080;
      id v110 = v101;
      sub_1C2842E50(0, &qword_1EBB73E98, (uint64_t (*)(uint64_t))sub_1C2842EB4, MEMORY[0x1E4FBB718]);
      os_log_type_t v52 = v100;
      uint64_t v53 = sub_1C28CD750();
      id v110 = (char *)sub_1C27D36AC(v53, v54, &v112);
      sub_1C28CDF90();

      swift_bridgeObjectRelease();
      os_log_t v55 = v99;
      _os_log_impl(&dword_1C27B7000, v99, (os_log_type_t)v102, "%{public}s: Recieved an error %s downloading the request %s. Result %s", (uint8_t *)v44, 0x2Au);
      uint64_t v56 = v103;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v56, -1, -1);
      MEMORY[0x1C87609B0](v44, -1, -1);
    }
    else
    {
      swift_release_n();

      (*(void (**)(char *, uint64_t))(v8 + 8))(v17, v36);
    }
    (*(void (**)(char *, uint64_t))(v106 + 8))(v30, v105);
    uint64_t v68 = v108;
    id v110 = a2;
    LOBYTE(v111) = 1;
    os_log_type_t v69 = a2;
    v68(&v110);

    swift_release();
    unint64_t v62 = a2;
    goto LABEL_13;
  }
  if (!a1)
  {
    sub_1C28CCD80();
    uint64_t v70 = v104;
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v15, v103, v104);
    swift_retain_n();
    uint64_t v71 = sub_1C28CCE00();
    os_log_type_t v72 = sub_1C28CDCB0();
    int v73 = v72;
    if (os_log_type_enabled(v71, v72))
    {
      uint64_t v74 = swift_slowAlloc();
      uint64_t v75 = swift_slowAlloc();
      uint64_t v103 = v75;
      *(_DWORD *)uint64_t v74 = 136446722;
      id v110 = 0;
      unint64_t v111 = 0xE000000000000000;
      uint64_t v112 = v75;
      swift_retain();
      LODWORD(v102) = v73;
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v109 = v34;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      id v110 = (char *)sub_1C27D36AC((uint64_t)v110, v111, &v112);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v74 + 12) = 2080;
      sub_1C2842878(&qword_1EBB73CD0, MEMORY[0x1E4F26C48]);
      uint64_t v76 = sub_1C28CE610();
      id v110 = (char *)sub_1C27D36AC(v76, v77, &v112);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v70);
      *(_WORD *)(v74 + 22) = 2080;
      id v110 = 0;
      sub_1C2842E50(0, &qword_1EBB77158, (uint64_t (*)(uint64_t))sub_1C27C7060, MEMORY[0x1E4FBB718]);
      uint64_t v78 = sub_1C28CD750();
      id v110 = (char *)sub_1C27D36AC(v78, v79, &v112);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v71, (os_log_type_t)v102, "%{public}s: There are no apps for the request %s. The error is %s.", (uint8_t *)v74, 0x20u);
      uint64_t v80 = v103;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v80, -1, -1);
      MEMORY[0x1C87609B0](v74, -1, -1);
    }
    else
    {
      swift_release_n();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v15, v70);
    }

    (*(void (**)(char *, uint64_t))(v106 + 8))(v27, v105);
    uint64_t v96 = v108;
    sub_1C2842290();
    uint64_t v60 = swift_allocError();
    unsigned char *v97 = 5;
    id v110 = (char *)v60;
    LOBYTE(v111) = 1;
    v96(&v110);
    swift_release();
LABEL_8:
    unint64_t v62 = (void *)v60;
LABEL_13:

    return;
  }
  uint64_t v63 = Strong;
  id v64 = objc_msgSend(a1, sel_data);
  uint64_t v65 = sub_1C28CC390();
  unint64_t v67 = v66;

  sub_1C28CBEB0();
  swift_allocObject();
  sub_1C28CBEA0();
  sub_1C2842DFC();
  sub_1C28CBE90();
  swift_release();
  uint64_t v81 = (uint64_t)v110;
  uint64_t v82 = v24;
  sub_1C28CCD80();
  uint64_t v83 = v100;
  uint64_t v84 = v104;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v100, v103, v104);
  swift_retain_n();
  uint64_t v85 = sub_1C28CCE00();
  os_log_type_t v86 = sub_1C28CDCD0();
  int v87 = v86;
  if (os_log_type_enabled(v85, v86))
  {
    uint64_t v89 = swift_slowAlloc();
    LODWORD(v102) = v87;
    uint64_t v90 = v89;
    uint64_t v91 = swift_slowAlloc();
    uint64_t v101 = (char *)v91;
    *(_DWORD *)uint64_t v90 = 136446466;
    uint64_t v98 = (char *)(v90 + 4);
    id v110 = 0;
    unint64_t v111 = 0xE000000000000000;
    uint64_t v112 = v91;
    swift_retain();
    os_log_t v99 = v85;
    sub_1C28CE120();
    uint64_t v103 = v81;
    sub_1C28CD7C0();
    uint64_t v109 = v63;
    sub_1C28CE270();
    sub_1C28CD7C0();
    swift_release();
    id v110 = (char *)sub_1C27D36AC((uint64_t)v110, v111, &v112);
    sub_1C28CDF90();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v90 + 12) = 2080;
    uint64_t v98 = v82;
    sub_1C2842878(&qword_1EBB73CD0, MEMORY[0x1E4F26C48]);
    uint64_t v92 = sub_1C28CE610();
    id v110 = (char *)sub_1C27D36AC(v92, v93, &v112);
    uint64_t v81 = v103;
    sub_1C28CDF90();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v83, v84);
    os_log_t v94 = v99;
    _os_log_impl(&dword_1C27B7000, v99, (os_log_type_t)v102, "%{public}s: EditorialItem download complete for request %s.", (uint8_t *)v90, 0x16u);
    uint64_t v95 = v101;
    swift_arrayDestroy();
    MEMORY[0x1C87609B0](v95, -1, -1);
    MEMORY[0x1C87609B0](v90, -1, -1);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v98, v105);
  }
  else
  {
    swift_release_n();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v83, v84);

    (*(void (**)(char *, uint64_t))(v106 + 8))(v82, v105);
  }
  id v110 = (char *)v81;
  LOBYTE(v111) = 0;
  v108(&v110);
  sub_1C27E2870(v65, v67);
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1C2840598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v73 = a2;
  uint64_t v5 = sub_1C28CCE10();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v69 = v5;
  uint64_t v70 = v6;
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v12 = (char *)&v65 - v11;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v65 - v14;
  MEMORY[0x1F4188790](v13);
  uint64_t v17 = (char *)&v65 - v16;
  sub_1C2842E50(0, (unint64_t *)&qword_1EBB768B0, MEMORY[0x1E4F276F0], MEMORY[0x1E4FBB718]);
  MEMORY[0x1F4188790](v18 - 8);
  uint64_t v20 = (char *)&v65 - v19;
  uint64_t v21 = sub_1C28CC060();
  uint64_t v71 = *(void *)(v21 - 8);
  uint64_t v72 = v21;
  uint64_t v22 = MEMORY[0x1F4188790](v21);
  uint64_t v24 = (char *)&v65 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(*(void *)v2 + 152))(v22);
  if (!v25)
  {
    sub_1C28CCD80();
    swift_retain_n();
    uint64_t v36 = sub_1C28CCE00();
    os_log_type_t v37 = sub_1C28CDCB0();
    if (os_log_type_enabled(v36, v37))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      uint64_t v39 = swift_slowAlloc();
      *(_DWORD *)uint64_t v38 = 136446210;
      v75[0] = 0;
      v75[1] = 0xE000000000000000;
      uint64_t v76 = v39;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v74 = v2;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      v75[0] = sub_1C27D36AC(v75[0], v75[1], &v76);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v36, v37, "%{public}s: Unable to retrieve the country code from the bag.", v38, 0xCu);
      uint64_t v40 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v39, -1, -1);
      MEMORY[0x1C87609B0](v38, -1, -1);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v69);
LABEL_22:
      uint64_t v61 = v72;
      uint64_t v63 = v73;
      uint64_t v62 = v71;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, v40, 1, v61);
    }

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v9, v69);
LABEL_21:
    uint64_t v40 = 1;
    goto LABEL_22;
  }
  uint64_t v26 = (void *)v25;
  uint64_t v27 = (*(uint64_t (**)(void))(*(void *)v2 + 176))();
  if (!v27)
  {
    sub_1C28CCD80();
    swift_retain_n();
    uint64_t v41 = sub_1C28CCE00();
    os_log_type_t v42 = sub_1C28CDCB0();
    if (os_log_type_enabled(v41, v42))
    {
      int v43 = (uint8_t *)swift_slowAlloc();
      uint64_t v44 = swift_slowAlloc();
      *(_DWORD *)int v43 = 136446210;
      v75[0] = 0;
      v75[1] = 0xE000000000000000;
      uint64_t v76 = v44;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v74 = v2;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      v75[0] = sub_1C27D36AC(v75[0], v75[1], &v76);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v41, v42, "%{public}s: Unable to retrieve the host from the bag.", v43, 0xCu);
      uint64_t v40 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v44, -1, -1);
      MEMORY[0x1C87609B0](v43, -1, -1);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v69);
      goto LABEL_22;
    }

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v12, v69);
    goto LABEL_21;
  }
  uint64_t v28 = (void *)v27;
  swift_retain();
  uint64_t v29 = sub_1C2841FE8(a1, v3);
  swift_release();
  uint64_t v30 = v29[2];
  id v68 = v28;
  if (!v30)
  {
    swift_bridgeObjectRelease();
    sub_1C28CCD80();
    swift_retain_n();
    uint64_t v45 = sub_1C28CCE00();
    os_log_type_t v46 = sub_1C28CDCB0();
    if (os_log_type_enabled(v45, v46))
    {
      uint64_t v47 = (uint8_t *)swift_slowAlloc();
      uint64_t v48 = swift_slowAlloc();
      *(_DWORD *)uint64_t v47 = 136446210;
      v75[0] = 0;
      v75[1] = 0xE000000000000000;
      uint64_t v76 = v48;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v74 = v3;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      v75[0] = sub_1C27D36AC(v75[0], v75[1], &v76);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v45, v46, "%{public}s: No editorial identifiers found.", v47, 0xCu);
      uint64_t v40 = 1;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v48, -1, -1);
      MEMORY[0x1C87609B0](v47, -1, -1);

      (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v69);
      goto LABEL_22;
    }

    swift_release_n();
    (*(void (**)(char *, uint64_t))(v70 + 8))(v15, v69);
    goto LABEL_21;
  }
  v75[0] = (uint64_t)v29;
  sub_1C27E963C();
  sub_1C2842878((unint64_t *)&qword_1EBB76A08, (void (*)(uint64_t))sub_1C27E963C);
  uint64_t v67 = sub_1C28CD690();
  swift_bridgeObjectRelease();
  sub_1C28CC050();
  sub_1C28CC040();
  id v31 = objc_msgSend(v68, sel_absoluteString);
  if (v31)
  {
    uint64_t v32 = v31;
    uint64_t v33 = sub_1C28CD730();
    uint64_t v35 = v34;
  }
  else
  {
    uint64_t v33 = 0;
    uint64_t v35 = 0;
  }
  MEMORY[0x1C875D5B0](v33, v35);
  v75[0] = 0;
  v75[1] = 0xE000000000000000;
  sub_1C28CE120();
  swift_bridgeObjectRelease();
  strcpy((char *)v75, "/v1/editorial/");
  HIBYTE(v75[1]) = -18;
  id v49 = objc_msgSend(v26, sel_description);
  sub_1C28CD730();

  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C28CD7C0();
  sub_1C28CC030();
  sub_1C2842E50(0, &qword_1EBB74CD8, MEMORY[0x1E4F26EA0], MEMORY[0x1E4FBBE00]);
  sub_1C28CBFD0();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_1C28D5110;
  sub_1C28CBFC0();
  swift_bridgeObjectRelease();
  sub_1C28CBFC0();
  sub_1C28CBFF0();
  sub_1C28CC010();
  uint64_t v50 = sub_1C28CC330();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v50 - 8) + 48))(v20, 1, v50) == 1)
  {
    sub_1C2842220((uint64_t)v20, (unint64_t *)&qword_1EBB768B0, MEMORY[0x1E4F276F0]);
    sub_1C28CCD80();
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    unint64_t v51 = sub_1C28CCE00();
    os_log_type_t v52 = sub_1C28CDCB0();
    int v53 = v52;
    if (os_log_type_enabled(v51, v52))
    {
      uint64_t v54 = swift_slowAlloc();
      uint64_t v55 = swift_slowAlloc();
      uint64_t v67 = v55;
      *(_DWORD *)uint64_t v54 = 136446466;
      uint64_t v65 = v54 + 4;
      v75[0] = 0;
      v75[1] = 0xE000000000000000;
      uint64_t v76 = v55;
      swift_retain();
      int v66 = v53;
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v74 = v3;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      v75[0] = sub_1C27D36AC(v75[0], v75[1], &v76);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v54 + 12) = 2080;
      uint64_t v56 = swift_bridgeObjectRetain();
      uint64_t v57 = MEMORY[0x1C875EEC0](v56, MEMORY[0x1E4FBB550]);
      unint64_t v59 = v58;
      swift_bridgeObjectRelease();
      v75[0] = sub_1C27D36AC(v57, v59, &v76);
      sub_1C28CDF90();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v51, (os_log_type_t)v66, "%{public}s: Unable to create URL for identifiers %s", (uint8_t *)v54, 0x16u);
      uint64_t v60 = v67;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v60, -1, -1);
      MEMORY[0x1C87609B0](v54, -1, -1);
    }
    else
    {
      swift_release_n();
      swift_bridgeObjectRelease_n();
    }

    (*(void (**)(char *, uint64_t))(v70 + 8))(v17, v69);
    uint64_t v62 = v71;
    uint64_t v61 = v72;
    (*(void (**)(char *, uint64_t))(v71 + 8))(v24, v72);
    uint64_t v40 = 1;
    uint64_t v63 = v73;
  }
  else
  {

    sub_1C2842220((uint64_t)v20, (unint64_t *)&qword_1EBB768B0, MEMORY[0x1E4F276F0]);
    uint64_t v62 = v71;
    uint64_t v61 = v72;
    uint64_t v63 = v73;
    (*(void (**)(uint64_t, char *, uint64_t))(v71 + 32))(v73, v24, v72);
    uint64_t v40 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 56))(v63, v40, 1, v61);
}

uint64_t sub_1C28413D8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_1C28CCE10();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *a1;
  uint64_t v13 = (*(uint64_t (**)(uint64_t))(*(void *)a2 + 248))(v9);
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_1C2872450(v12), (v15 & 1) != 0))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v14);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = v18;
    a3[1] = v17;
  }
  else
  {
    uint64_t v30 = v7;
    swift_bridgeObjectRelease();
    sub_1C28CCD80();
    swift_retain_n();
    uint64_t v20 = sub_1C28CCE00();
    os_log_type_t v21 = sub_1C28CDCD0();
    if (os_log_type_enabled(v20, v21))
    {
      uint64_t v22 = swift_slowAlloc();
      uint64_t v29 = v3;
      uint64_t v23 = v22;
      uint64_t v28 = swift_slowAlloc();
      uint64_t v34 = v28;
      *(_DWORD *)uint64_t v23 = 136446466;
      v27[1] = v23 + 4;
      uint64_t v32 = 0;
      unint64_t v33 = 0xE000000000000000;
      swift_retain();
      sub_1C28CE120();
      sub_1C28CD7C0();
      uint64_t v31 = a2;
      sub_1C28CE270();
      sub_1C28CD7C0();
      swift_release();
      uint64_t v32 = sub_1C27D36AC(v32, v33, &v34);
      sub_1C28CDF90();
      swift_release_n();
      swift_bridgeObjectRelease();
      *(_WORD *)(v23 + 12) = 2080;
      uint64_t v32 = v12;
      uint64_t v24 = sub_1C28CE610();
      uint64_t v32 = sub_1C27D36AC(v24, v25, &v34);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1C27B7000, v20, v21, "%{public}s: Unable to find identifier or the identifier does not have an associated EI %s.", (uint8_t *)v23, 0x16u);
      uint64_t v26 = v28;
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v26, -1, -1);
      MEMORY[0x1C87609B0](v23, -1, -1);
    }
    else
    {

      swift_release_n();
    }
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v30);
    *a3 = 0;
    a3[1] = 0;
  }
  return result;
}

id *AppStoreDataProvider.deinit()
{
  sub_1C283C198(v0[4]);
  sub_1C283C198(v0[5]);

  return v0;
}

uint64_t AppStoreDataProvider.__deallocating_deinit()
{
  sub_1C283C198(v0[4]);
  sub_1C283C198(v0[5]);

  return swift_deallocClassInstance();
}

uint64_t AppStoreDataProvider.description.getter()
{
  return 0;
}

uint64_t sub_1C2841884()
{
  return AppStoreDataProvider.description.getter();
}

uint64_t sub_1C28418A8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v7 = sub_1C285CE64();
  if (!v9) {
    goto LABEL_23;
  }
  uint64_t v10 = v7;
  uint64_t v11 = v9;
  uint64_t v57 = v8;
  uint64_t v12 = (void *)*a5;
  unint64_t v14 = sub_1C2872450(v7);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  char v18 = v13;
  if (v12[3] >= v17)
  {
    if (a4)
    {
      os_log_type_t v21 = (void *)*a5;
      if (v13) {
        goto LABEL_9;
      }
    }
    else
    {
      sub_1C287601C();
      os_log_type_t v21 = (void *)*a5;
      if (v18) {
        goto LABEL_9;
      }
    }
LABEL_11:
    v21[(v14 >> 6) + 8] |= 1 << v14;
    *(void *)(v21[6] + 8 * v14) = v10;
    uint64_t v27 = (void *)(v21[7] + 16 * v14);
    *uint64_t v27 = v57;
    v27[1] = v11;
    uint64_t v28 = v21[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    v21[2] = v30;
LABEL_13:
    uint64_t v31 = sub_1C285CE64();
    if (v33)
    {
      uint64_t v34 = v31;
      uint64_t v35 = v32;
      uint64_t v36 = v33;
      do
      {
        uint64_t v44 = (void *)*a5;
        unint64_t v45 = sub_1C2872450(v34);
        uint64_t v47 = v44[2];
        BOOL v48 = (v46 & 1) == 0;
        BOOL v29 = __OFADD__(v47, v48);
        uint64_t v49 = v47 + v48;
        if (v29) {
          goto LABEL_24;
        }
        char v50 = v46;
        if (v44[3] < v49)
        {
          sub_1C28732E0(v49, 1);
          unint64_t v45 = sub_1C2872450(v34);
          if ((v50 & 1) != (v51 & 1)) {
            goto LABEL_26;
          }
        }
        os_log_type_t v52 = (void *)*a5;
        if (v50)
        {
          uint64_t v37 = 16 * v45;
          uint64_t v38 = (uint64_t *)(v52[7] + 16 * v45);
          uint64_t v40 = *v38;
          uint64_t v39 = v38[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v41 = (void *)(v52[7] + v37);
          swift_bridgeObjectRelease();
          *uint64_t v41 = v40;
          v41[1] = v39;
        }
        else
        {
          v52[(v45 >> 6) + 8] |= 1 << v45;
          *(void *)(v52[6] + 8 * v45) = v34;
          int v53 = (void *)(v52[7] + 16 * v45);
          *int v53 = v35;
          v53[1] = v36;
          uint64_t v54 = v52[2];
          BOOL v29 = __OFADD__(v54, 1);
          uint64_t v55 = v54 + 1;
          if (v29) {
            goto LABEL_25;
          }
          v52[2] = v55;
        }
        uint64_t v34 = sub_1C285CE64();
        uint64_t v35 = v42;
        uint64_t v36 = v43;
      }
      while (v43);
    }
LABEL_23:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1C27D9684();
    return swift_release();
  }
  sub_1C28732E0(v17, a4 & 1);
  unint64_t v19 = sub_1C2872450(v10);
  if ((v18 & 1) == (v20 & 1))
  {
    unint64_t v14 = v19;
    os_log_type_t v21 = (void *)*a5;
    if ((v18 & 1) == 0) {
      goto LABEL_11;
    }
LABEL_9:
    uint64_t v22 = 16 * v14;
    uint64_t v23 = (uint64_t *)(v21[7] + 16 * v14);
    uint64_t v25 = *v23;
    uint64_t v24 = v23[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v26 = (void *)(v21[7] + v22);
    swift_bridgeObjectRelease();
    *uint64_t v26 = v25;
    v26[1] = v24;
    goto LABEL_13;
  }
LABEL_26:
  uint64_t result = sub_1C28CE680();
  __break(1u);
  return result;
}

uint64_t sub_1C2841BAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(void *)(a2 + 16) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C2841BC4()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C2841C04@<X0>(uint64_t *a1@<X8>)
{
  return sub_1C283C878(*(void *)(v1 + 16), *(void *)(v1 + 24), a1);
}

id sub_1C2841C0C@<X0>(void *a1@<X8>)
{
  id result = sub_1C283BE54();
  *a1 = result;
  return result;
}

void sub_1C2841C38(void **a1, uint64_t a2)
{
  uint64_t v2 = *a1;
  id v4 = *(id *)(*(void *)a2 + 24);
  *(void *)(*(void *)a2 + 24) = *a1;
  id v3 = v2;
}

uint64_t sub_1C2841C80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 152))();
  *a2 = result;
  return result;
}

uint64_t sub_1C2841CCC(id *a1, uint64_t a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))(**(void **)a2 + 160);
  id v4 = *a1;
  return v3(v2);
}

uint64_t sub_1C2841D24@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(**(void **)a1 + 176))();
  *a2 = result;
  return result;
}

uint64_t sub_1C2841D70(id *a1, uint64_t a2)
{
  id v2 = *a1;
  id v3 = *(uint64_t (**)(id))(**(void **)a2 + 184);
  id v4 = *a1;
  return v3(v2);
}

uint64_t type metadata accessor for AppStoreDataProvider()
{
  return self;
}

uint64_t method lookup function for AppStoreDataProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AppStoreDataProvider);
}

uint64_t dispatch thunk of AppStoreDataProvider.tokenService.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 128))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 152))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 160))();
}

uint64_t dispatch thunk of AppStoreDataProvider.currentStoreFront.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 176))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.setter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t dispatch thunk of AppStoreDataProvider.hostURL.modify()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 192))();
}

uint64_t dispatch thunk of AppStoreDataProvider.editorialItemMapping.getter()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 248))();
}

uint64_t dispatch thunk of AppStoreDataProvider.__allocating_init()()
{
  return (*(uint64_t (**)(void))(v0 + 256))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeSession()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 264))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeEncoder()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 272))();
}

uint64_t dispatch thunk of AppStoreDataProvider.makeTokenService()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 280))();
}

uint64_t dispatch thunk of AppStoreDataProvider.fetchEditorialItems(for:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 288))();
}

void *sub_1C2841FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3) {
    return (void *)MEMORY[0x1E4FBC860];
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x1E4FBC860];
  do
  {
    uint64_t v16 = *(void *)(a1 + 8 * v5 + 32);
    sub_1C28413D8(&v16, a2, &v14);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v6;
    }
    uint64_t v8 = v15;
    if (v15)
    {
      uint64_t v9 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v6 = sub_1C2801FA0(0, v6[2] + 1, 1, v6);
      }
      unint64_t v11 = v6[2];
      unint64_t v10 = v6[3];
      if (v11 >= v10 >> 1) {
        uint64_t v6 = sub_1C2801FA0((void *)(v10 > 1), v11 + 1, 1, v6);
      }
      _OWORD v6[2] = v11 + 1;
      uint64_t v7 = &v6[2 * v11];
      v7[4] = v9;
      v7[5] = v8;
    }
    ++v5;
  }
  while (v3 != v5);
  swift_bridgeObjectRelease();
  return v6;
}

void sub_1C284212C()
{
  if (!qword_1EBB73E58)
  {
    sub_1C2842784(255, &qword_1EBB73E38, MEMORY[0x1E4F1AC28]);
    sub_1C28421AC();
    unint64_t v0 = sub_1C28CD270();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB73E58);
    }
  }
}

unint64_t sub_1C28421AC()
{
  unint64_t result = qword_1EBB73E30;
  if (!qword_1EBB73E30)
  {
    sub_1C2842784(255, &qword_1EBB73E38, MEMORY[0x1E4F1AC28]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73E30);
  }
  return result;
}

uint64_t sub_1C2842220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_1C2842E50(0, a2, a3, MEMORY[0x1E4FBB718]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

unint64_t sub_1C2842290()
{
  unint64_t result = qword_1EA3109E8;
  if (!qword_1EA3109E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109E8);
  }
  return result;
}

unint64_t sub_1C28422E4()
{
  unint64_t result = qword_1EA3109F0;
  if (!qword_1EA3109F0)
  {
    sub_1C2842784(255, &qword_1EBB73E28, MEMORY[0x1E4F1ABF8]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109F0);
  }
  return result;
}

uint64_t sub_1C284235C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C28CC060() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = *(void *)(v1 + 16);
  uint64_t v7 = *(void **)(v1 + v5);
  uint64_t v8 = *(void *)(v1 + ((v5 + 15) & 0xFFFFFFFFFFFFFFF8));

  return sub_1C283D8B0(v6, v1 + v4, v7, v8, a1);
}

uint64_t objectdestroy_14Tm()
{
  uint64_t v1 = sub_1C28CC060();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_1C2842504(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C28CC060() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(v2 + 16);
  uint64_t v9 = *(void **)(v2 + v7);
  uint64_t v10 = *(void *)(v2 + ((v7 + 15) & 0xFFFFFFFFFFFFFFF8));

  sub_1C283DA70(a1, a2, v8, v2 + v6, v9, v10);
}

uint64_t sub_1C28425C0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2842608(uint64_t a1, void *a2)
{
  return sub_1C283DF20(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void (**)(uint64_t *))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_1C2842614(uint64_t a1)
{
  sub_1C2842784(0, &qword_1EBB73EE8, MEMORY[0x1E4FBC448]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1C284268C()
{
  if (!qword_1EBB73E00)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x1E4F1AAE0];
    sub_1C2842974(255, &qword_1EBB73E20, MEMORY[0x1E4F1AAE0]);
    sub_1C2842784(255, &qword_1EBB73E10, MEMORY[0x1E4F1AAE0]);
    sub_1C28429E4(&qword_1EBB73E18, &qword_1EBB73E20, v0);
    sub_1C28427FC();
    unint64_t v1 = sub_1C28CCF60();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB73E00);
    }
  }
}

void sub_1C2842784(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, unint64_t, void))
{
  if (!*a2)
  {
    uint64_t v6 = sub_1C28CBE80();
    unint64_t v7 = sub_1C27C7060();
    unint64_t v8 = a3(a1, v6, v7, MEMORY[0x1E4FBC0F0]);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C28427FC()
{
  unint64_t result = qword_1EBB73E08;
  if (!qword_1EBB73E08)
  {
    sub_1C2842784(255, &qword_1EBB73E10, MEMORY[0x1E4F1AAE0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73E08);
  }
  return result;
}

uint64_t sub_1C2842870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1C283CDB4(a1, v2, a2);
}

uint64_t sub_1C2842878(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C28428C0()
{
  if (!qword_1EBB73E68)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t, void))MEMORY[0x1E4F1AC28];
    sub_1C2842974(255, &qword_1EBB73E48, MEMORY[0x1E4F1AC28]);
    sub_1C28429E4(&qword_1EBB73E40, &qword_1EBB73E48, v0);
    unint64_t v1 = sub_1C28CD270();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EBB73E68);
    }
  }
}

void sub_1C2842974(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, void))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C27C7060();
    unint64_t v7 = a3(a1, &type metadata for AppStoreDataProvider.EditorialItemsList, v6, MEMORY[0x1E4FBC0F0]);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C28429E4(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t, void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C2842974(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C2842A2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v3 = *(void *)(sub_1C28CBE80() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void *)(v1 + 16);
  unint64_t v6 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_1C283EBE8(v5, v1 + v4, v6, a1);
}

uint64_t objectdestroy_23Tm()
{
  uint64_t v1 = sub_1C28CBE80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1C2842BB8(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_1C28CBE80() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v8 = *(void **)(v2 + ((*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8));

  sub_1C283ED88(a1, a2, v7, v2 + v6, v8);
}

uint64_t sub_1C2842C68()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C2842CA0()
{
  uint64_t v1 = sub_1C28CBE80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_1C2842D74(char *a1, char *a2)
{
  uint64_t v5 = *(void *)(sub_1C28CBE80() - 8);
  uint64_t v6 = v2[2];
  uint64_t v7 = (void (*)(char **))v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (uint64_t)v2 + ((*(unsigned __int8 *)(v5 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  sub_1C283F2CC(a1, a2, v6, v7, v8, v9);
}

unint64_t sub_1C2842DFC()
{
  unint64_t result = qword_1EBB73DA0;
  if (!qword_1EBB73DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB73DA0);
  }
  return result;
}

void sub_1C2842E50(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_1C2842EB4()
{
  unint64_t result = qword_1EBB73E90;
  if (!qword_1EBB73E90)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB73E90);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AppStoreDataProvider.AMSError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2842FC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AppStoreDataProvider.AMSError()
{
  return &type metadata for AppStoreDataProvider.AMSError;
}

unint64_t sub_1C2842FFC()
{
  unint64_t result = qword_1EA3109F8;
  if (!qword_1EA3109F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA3109F8);
  }
  return result;
}

uint64_t Publisher.printDebugOnly(_:to:)()
{
  return sub_1C28CD300();
}

uint64_t sub_1C28430AC(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = 0x6863746157;
  if (*(unsigned char *)(v1 + 16)) {
    uint64_t v4 = 0x412068746C616548;
  }
  unint64_t v5 = 0xEA00000000007070;
  if (!*(unsigned char *)(v1 + 16)) {
    unint64_t v5 = 0xE500000000000000;
  }
  uint64_t v6 = MEMORY[0x1E4FBB1A0];
  uint64_t v25 = MEMORY[0x1E4FBB1A0];
  *(void *)&long long v24 = v4;
  *((void *)&v24 + 1) = v5;
  sub_1C2807E74(&v24, v23);
  uint64_t v7 = MEMORY[0x1E4FBC868];
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2874450(v23, 0x65707954776F6C66, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  unint64_t v9 = *(void *)(v2 + 24);
  uint64_t v10 = sub_1C28432EC(v9);
  uint64_t v25 = v6;
  *(void *)&long long v24 = v10;
  *((void *)&v24 + 1) = v11;
  sub_1C2807E74(&v24, v23);
  char v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2874450(v23, 0x6573657250736177, 0xEC0000006465746ELL, v12);
  swift_bridgeObjectRelease();
  uint64_t v13 = sub_1C28436B8(v9);
  uint64_t v25 = v6;
  *(void *)&long long v24 = v13;
  *((void *)&v24 + 1) = v14;
  sub_1C2807E74(&v24, v23);
  char v15 = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2874450(v23, 0x6261736944646964, 0xEA0000000000656CLL, v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_1C28CD730();
  uint64_t v18 = v17;
  id v19 = objc_msgSend(a1, sel_environmentDataSource);
  unsigned __int8 v20 = objc_msgSend(v19, sel_isImproveHealthAndActivityEnabled);

  uint64_t v25 = MEMORY[0x1E4FBB390];
  LOBYTE(v24) = v20;
  sub_1C2807E74(&v24, v23);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1C2874450(v23, v16, v18, v21);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1C28432EC(unint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C28CE3B0();
    if (!v3) {
      goto LABEL_16;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_16;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_38;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C875F6E0](i, a1);
      swift_retain();
      sub_1C28CCB10();
      swift_release();
      if (v18 == 1)
      {
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
      }
      else
      {
        swift_unknownObjectRelease();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v3; ++j)
    {
      swift_retain();
      swift_retain();
      sub_1C28CCB10();
      swift_release();
      if (v18 == 1)
      {
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
      }
      else
      {
        swift_release();
      }
    }
  }
LABEL_16:
  swift_bridgeObjectRelease();
  uint64_t v6 = v19;
  if ((v19 & 0x8000000000000000) == 0 && (v19 & 0x4000000000000000) == 0)
  {
    uint64_t v7 = *(void *)(v19 + 16);
    if (v7) {
      goto LABEL_19;
    }
LABEL_35:
    swift_release();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_36;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C28CE3B0();
  swift_release();
  if (!v7) {
    goto LABEL_35;
  }
LABEL_19:
  uint64_t v19 = v2;
  sub_1C27D8968(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
LABEL_38:
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1C28436A0);
  }
  uint64_t v8 = 0;
  uint64_t v9 = v19;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v10 = MEMORY[0x1C875F6E0](v8, v6);
    }
    else {
      uint64_t v10 = swift_retain();
    }
    unint64_t v11 = 0xE200000000000000;
    uint64_t v12 = 26211;
    switch(*(unsigned char *)(v10 + 16))
    {
      case 1:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7497832;
        break;
      case 2:
        uint64_t v12 = 7497836;
        unint64_t v11 = 0xE300000000000000;
        break;
      case 3:
        uint64_t v12 = 29300;
        break;
      case 4:
        uint64_t v12 = 29559;
        break;
      case 5:
        uint64_t v12 = 25960;
        break;
      default:
        break;
    }
    swift_release();
    uint64_t v19 = v9;
    unint64_t v14 = *(void *)(v9 + 16);
    unint64_t v13 = *(void *)(v9 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1C27D8968(v13 > 1, v14 + 1, 1);
      uint64_t v9 = v19;
    }
    ++v8;
    *(void *)(v9 + 16) = v14 + 1;
    uint64_t v15 = v9 + 16 * v14;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
  }
  while (v7 != v8);
  swift_release();
LABEL_36:
  uint64_t v19 = v9;
  swift_bridgeObjectRetain();
  sub_1C2844278(&v19);
  swift_bridgeObjectRelease();
  sub_1C27C2E0C(0, (unint64_t *)&qword_1EBB76F58, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C283A290();
  uint64_t v16 = sub_1C28CD690();
  swift_release();
  return v16;
}

uint64_t sub_1C28436B8(unint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBC860];
  uint64_t v19 = MEMORY[0x1E4FBC860];
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_1C28CE3B0();
    if (!v3) {
      goto LABEL_18;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (!v3) {
      goto LABEL_18;
    }
  }
  if (v3 < 1)
  {
    __break(1u);
    goto LABEL_40;
  }
  if ((a1 & 0xC000000000000001) != 0)
  {
    for (uint64_t i = 0; i != v3; ++i)
    {
      MEMORY[0x1C875F6E0](i, a1);
      swift_retain();
      sub_1C28CCB10();
      swift_release();
      if (v18 != 1 || (swift_retain(), sub_1C28CCB10(), swift_release(), (v18 & 1) != 0))
      {
        swift_unknownObjectRelease();
      }
      else
      {
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
      }
    }
  }
  else
  {
    for (uint64_t j = 0; j != v3; ++j)
    {
      swift_retain();
      swift_retain();
      sub_1C28CCB10();
      swift_release();
      if (v18 != 1 || (swift_retain(), sub_1C28CCB10(), swift_release(), (v18 & 1) != 0))
      {
        swift_release();
      }
      else
      {
        sub_1C28CE1C0();
        sub_1C28CE200();
        sub_1C28CE210();
        sub_1C28CE1D0();
      }
    }
  }
LABEL_18:
  swift_bridgeObjectRelease();
  uint64_t v6 = v19;
  if ((v19 & 0x8000000000000000) == 0 && (v19 & 0x4000000000000000) == 0)
  {
    uint64_t v7 = *(void *)(v19 + 16);
    if (v7) {
      goto LABEL_21;
    }
LABEL_37:
    swift_release();
    uint64_t v9 = MEMORY[0x1E4FBC860];
    goto LABEL_38;
  }
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1C28CE3B0();
  swift_release();
  if (!v7) {
    goto LABEL_37;
  }
LABEL_21:
  uint64_t v19 = v2;
  sub_1C27D8968(0, v7 & ~(v7 >> 63), 0);
  if (v7 < 0)
  {
LABEL_40:
    __break(1u);
    swift_release();
    __break(1u);
    JUMPOUT(0x1C2843AB4);
  }
  uint64_t v8 = 0;
  uint64_t v9 = v19;
  do
  {
    if ((v6 & 0xC000000000000001) != 0) {
      uint64_t v10 = MEMORY[0x1C875F6E0](v8, v6);
    }
    else {
      uint64_t v10 = swift_retain();
    }
    unint64_t v11 = 0xE200000000000000;
    uint64_t v12 = 26211;
    switch(*(unsigned char *)(v10 + 16))
    {
      case 1:
        unint64_t v11 = 0xE300000000000000;
        uint64_t v12 = 7497832;
        break;
      case 2:
        uint64_t v12 = 7497836;
        unint64_t v11 = 0xE300000000000000;
        break;
      case 3:
        uint64_t v12 = 29300;
        break;
      case 4:
        uint64_t v12 = 29559;
        break;
      case 5:
        uint64_t v12 = 25960;
        break;
      default:
        break;
    }
    swift_release();
    uint64_t v19 = v9;
    unint64_t v14 = *(void *)(v9 + 16);
    unint64_t v13 = *(void *)(v9 + 24);
    if (v14 >= v13 >> 1)
    {
      sub_1C27D8968(v13 > 1, v14 + 1, 1);
      uint64_t v9 = v19;
    }
    ++v8;
    *(void *)(v9 + 16) = v14 + 1;
    uint64_t v15 = v9 + 16 * v14;
    *(void *)(v15 + 32) = v12;
    *(void *)(v15 + 40) = v11;
  }
  while (v7 != v8);
  swift_release();
LABEL_38:
  uint64_t v19 = v9;
  swift_bridgeObjectRetain();
  sub_1C2844278(&v19);
  swift_bridgeObjectRelease();
  sub_1C27C2E0C(0, (unint64_t *)&qword_1EBB76F58, MEMORY[0x1E4FBB1A0], MEMORY[0x1E4FBB320]);
  sub_1C283A290();
  uint64_t v16 = sub_1C28CD690();
  swift_release();
  return v16;
}

uint64_t sub_1C2843C54()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent()
{
  return self;
}

uint64_t sub_1C2843CB0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2843D08(a1, a2, a3, a4, sub_1C2845ACC, MEMORY[0x1E4F67288]);
}

uint64_t sub_1C2843CDC(char a1, int64_t a2, char a3, void *a4)
{
  return sub_1C2843D08(a1, a2, a3, a4, sub_1C2845A98, MEMORY[0x1E4F26EB0]);
}

uint64_t sub_1C2843D08(char a1, int64_t a2, char a3, void *a4, void (*a5)(void), uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    uint64_t v16 = (void *)MEMORY[0x1E4FBC860];
    goto LABEL_19;
  }
  a5(0);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = (void *)swift_allocObject();
  size_t v17 = _swift_stdlib_malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  char v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  long long v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C2843F54(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C27C2E0C(0, &qword_1EA310518, (uint64_t)&type metadata for AdvertisableFeature.Identifier, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C28440C4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2845A00(0, &qword_1EA310A18, (uint64_t (*)(uint64_t))sub_1C2845A64, MEMORY[0x1E4FBBE00]);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    v10[2] = v8;
    _OWORD v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    int64_t v10 = (void *)MEMORY[0x1E4FBC860];
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_1C2845A64(0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

uint64_t sub_1C2844278(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1C2844F34(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1C28442E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1C28442E4(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_1C28CE600();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_1C28449D0(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x1E4FBC860];
    __dst = (char *)(MEMORY[0x1E4FBC860] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x1E4FBC860] + 16);
      int64_t v11 = (char *)MEMORY[0x1E4FBC860];
LABEL_118:
      os_log_t v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_1C2844AA0((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_1C2844F20((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          os_log_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x1E4FBC860];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1C28CD9B0();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  int64_t v11 = (char *)MEMORY[0x1E4FBC860];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    size_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1C28CE640();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    char v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1C28CE640()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v11 = sub_1C2844D3C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      int64_t v11 = sub_1C2844D3C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            unint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        id v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        os_log_type_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_1C2844AA0((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)os_log_type_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        int64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1C28CE640() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_1C28CE350();
  __break(1u);
  return result;
}

uint64_t sub_1C28449D0(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_1C28CE640(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2844AA0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      size_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        char v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1C28CE640() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)char v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)char v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1C28CE640() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_1C2844E64((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1C28CE410();
  __break(1u);
  return result;
}

char *sub_1C2844D3C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_1C2845A00(0, &qword_1EA310A00, (uint64_t (*)(uint64_t))sub_1C2844F48, MEMORY[0x1E4FBBE00]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x1E4FBC860];
  }
  uint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_1C2844E64(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1C28CE410();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_1C2844F20(uint64_t a1)
{
  return sub_1C2844D3C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1C2844F34(uint64_t a1)
{
  return sub_1C27BC7A8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void sub_1C2844F48()
{
  if (!qword_1EA310A08)
  {
    unint64_t v0 = sub_1C28CDBF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EA310A08);
    }
  }
}

uint64_t sub_1C2844FA8(void *a1)
{
  v20[1] = *(id *)MEMORY[0x1E4F143B8];
  v20[0] = 0;
  id v1 = objc_msgSend(a1, sel_biologicalSexWithError_, v20);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = v20[0];
    id v4 = (id)HKAnalyticsPropertyValueForBiologicalSex();
    uint64_t v5 = sub_1C28CD730();
  }
  else
  {
    id v6 = v20[0];
    uint64_t v7 = (void *)sub_1C28CC290();

    swift_willThrow();
    id v8 = v7;
    id v9 = v7;
    uint64_t v10 = sub_1C28CCE00();
    os_log_type_t v11 = sub_1C28CDCB0();
    if (os_log_type_enabled(v10, v11))
    {
      uint64_t v12 = swift_slowAlloc();
      uint64_t v13 = (void *)swift_slowAlloc();
      v20[0] = v13;
      *(_DWORD *)uint64_t v12 = 136446466;
      type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
      sub_1C28459C8();
      uint64_t v14 = sub_1C28CD750();
      sub_1C27D36AC(v14, v15, (uint64_t *)v20);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v12 + 12) = 2082;
      id v16 = v7;
      sub_1C27C7060();
      uint64_t v17 = sub_1C28CD750();
      sub_1C27D36AC(v17, v18, (uint64_t *)v20);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v10, v11, "[%{public}s] Error when retrieving biological sex: %{public}s", (uint8_t *)v12, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v13, -1, -1);
      MEMORY[0x1C87609B0](v12, -1, -1);
    }
    else
    {
    }
    uint64_t v5 = sub_1C28CD730();
  }
  return v5;
}

id sub_1C2845248(void *a1, void *a2, uint64_t a3)
{
  v39[1] = *(id *)MEMORY[0x1E4F143B8];
  uint64_t v6 = sub_1C28CC450();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v10 = objc_msgSend(a2, sel_currentDate);
  sub_1C28CC430();

  os_log_type_t v11 = (void *)sub_1C28CC3F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  v39[0] = 0;
  id v12 = objc_msgSend(a1, sel_ageWithCurrentDate_error_, v11, v39);

  id v13 = v39[0];
  if (v12)
  {
    id v14 = objc_allocWithZone(NSNumber);
    id v15 = v12;
    id v16 = objc_msgSend(v14, sel_initWithInteger_, a3);
    id v17 = (id)HKAnalyticsDecadeBucketedAgeForAgeWithMinimumAge();

    if (!v17)
    {
      unint64_t v18 = sub_1C28CCE00();
      os_log_type_t v19 = sub_1C28CDCB0();
      if (os_log_type_enabled(v18, v19))
      {
        uint64_t v20 = (uint8_t *)swift_slowAlloc();
        uint64_t v21 = (void *)swift_slowAlloc();
        v39[0] = v21;
        *(_DWORD *)uint64_t v20 = 136446210;
        uint64_t v38 = type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
        sub_1C28459C8();
        uint64_t v22 = sub_1C28CD750();
        uint64_t v38 = sub_1C27D36AC(v22, v23, (uint64_t *)v39);
        sub_1C28CDF90();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1C27B7000, v18, v19, "[%{public}s] Error when bucketing retrieved age", v20, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1C87609B0](v21, -1, -1);
        MEMORY[0x1C87609B0](v20, -1, -1);
      }

      id v17 = (id)*MEMORY[0x1E4F29668];
    }
  }
  else
  {
    long long v24 = v13;
    uint64_t v25 = (void *)sub_1C28CC290();

    swift_willThrow();
    id v26 = v25;
    id v27 = v25;
    uint64_t v28 = sub_1C28CCE00();
    os_log_type_t v29 = sub_1C28CDCB0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v39[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v38 = type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
      sub_1C28459C8();
      uint64_t v32 = sub_1C28CD750();
      uint64_t v38 = sub_1C27D36AC(v32, v33, (uint64_t *)v39);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      uint64_t v38 = (uint64_t)v25;
      id v34 = v25;
      sub_1C27C7060();
      uint64_t v35 = sub_1C28CD750();
      uint64_t v38 = sub_1C27D36AC(v35, v36, (uint64_t *)v39);
      sub_1C28CDF90();
      swift_bridgeObjectRelease();

      _os_log_impl(&dword_1C27B7000, v28, v29, "[%{public}s] Error when retrieving bucketed age: %{public}s", (uint8_t *)v30, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1C87609B0](v31, -1, -1);
      MEMORY[0x1C87609B0](v30, -1, -1);
    }
    else
    {
    }
    id v17 = (id)*MEMORY[0x1E4F29668];
  }
  return v17;
}

uint64_t sub_1C284570C(void *a1)
{
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v27 = a1;
  id v6 = objc_msgSend(a1, sel_healthDataSource);
  if (v6)
  {
    uint64_t v7 = v6;
    uint64_t v8 = sub_1C28CD730();
    uint64_t v10 = v9;
    sub_1C28CCD90();
    uint64_t v11 = sub_1C2844FA8(v7);
    uint64_t v13 = v12;
    id v26 = *(void (**)(char *, uint64_t))(v3 + 8);
    v26(v5, v2);
    unint64_t v30 = MEMORY[0x1E4FBB1A0];
    *(void *)&long long v29 = v11;
    *((void *)&v29 + 1) = v13;
    sub_1C2807E74(&v29, v28);
    uint64_t v14 = MEMORY[0x1E4FBC868];
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = v14;
    sub_1C2874450(v28, v8, v10, isUniquelyReferenced_nonNull_native);
    uint64_t v16 = v31;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v17 = sub_1C28CD730();
    uint64_t v19 = v18;
    id v20 = objc_msgSend(v27, sel_environmentDataSource);
    sub_1C28CCD90();
    id v21 = sub_1C2845248(v7, v20, 17);

    v26(v5, v2);
    unint64_t v30 = sub_1C2805004();
    *(void *)&long long v29 = v21;
    sub_1C2807E74(&v29, v28);
    char v22 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v31 = v16;
    sub_1C2874450(v28, v17, v19, v22);
    uint64_t v23 = v31;
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v23;
  }
  else
  {
    uint64_t result = sub_1C28CE360();
    __break(1u);
  }
  return result;
}

unint64_t sub_1C28459C8()
{
  unint64_t result = qword_1EA310A10;
  if (!qword_1EA310A10)
  {
    type metadata accessor for AdvertisableFeatureInteractionAnalyticsEvent();
    unint64_t result = swift_getMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_1EA310A10);
  }
  return result;
}

void sub_1C2845A00(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_1C2845A64(uint64_t a1)
{
}

void sub_1C2845A98(uint64_t a1)
{
}

void sub_1C2845ACC(uint64_t a1)
{
}

uint64_t dispatch thunk of ObservableConvertible.asObservable()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_1C2845B14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  type metadata accessor for CachedAsync.CacheEntry();
  uint64_t v4 = sub_1C28CDF70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C2845BD0(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 96);
  swift_beginAccess();
  type metadata accessor for CachedAsync.CacheEntry();
  uint64_t v4 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t CachedAsync.__allocating_init(dataProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  CachedAsync.init(dataProvider:)(a1, a2);
  return v4;
}

uint64_t CachedAsync.init(dataProvider:)(uint64_t a1, uint64_t a2)
{
  swift_defaultActor_initialize();
  uint64_t v5 = v2 + *(void *)(*(void *)v2 + 96);
  uint64_t v6 = type metadata accessor for CachedAsync.CacheEntry();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
  uint64_t v7 = (void *)(v2 + *(void *)(*(void *)v2 + 104));
  *uint64_t v7 = a1;
  v7[1] = a2;
  return v2;
}

uint64_t type metadata accessor for CachedAsync.CacheEntry()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *CachedAsync.deinit()
{
  uint64_t v1 = *v0;
  uint64_t v2 = type metadata accessor for CachedAsync.CacheEntry();
  uint64_t v3 = sub_1C28CDF70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (char *)v0 + *(void *)(v1 + 96);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  uint64_t v8 = *(void *)(v2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v2);
  }
  else
  {
    sub_1C27C7060();
    sub_1C28CDAB0();
    swift_release();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, v3);
  swift_release();
  swift_defaultActor_destroy();
  return v0;
}

uint64_t CachedAsync.__deallocating_deinit()
{
  CachedAsync.deinit();

  return MEMORY[0x1F4188210](v0);
}

uint64_t sub_1C2846028()
{
  uint64_t v0 = type metadata accessor for CachedAsync.CacheEntry();
  uint64_t v1 = sub_1C28CDF70();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v4 = (char *)&v7 - v3;
  sub_1C2845B14((uint64_t)&v7 - v3);
  uint64_t v5 = *(void *)(v0 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v4, 1, v0) == 1)
  {
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  else if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v5 + 8))(v4, v0);
    return 0;
  }
  else
  {
    sub_1C27C7060();
    sub_1C28CDAB0();
    swift_release();
    return 1;
  }
}

uint64_t sub_1C28461D4(uint64_t a1)
{
  v2[2] = a1;
  v2[3] = v1;
  uint64_t v3 = *(void *)(*(void *)v1 + 80);
  v2[4] = v3;
  v2[5] = *(void *)(v3 - 8);
  v2[6] = swift_task_alloc();
  sub_1C2846DA4();
  v2[7] = swift_task_alloc();
  uint64_t v4 = type metadata accessor for CachedAsync.CacheEntry();
  v2[8] = v4;
  uint64_t v5 = sub_1C28CDF70();
  v2[9] = v5;
  v2[10] = *(void *)(v5 - 8);
  v2[11] = swift_task_alloc();
  v2[12] = swift_task_alloc();
  v2[13] = *(void *)(v4 - 8);
  v2[14] = swift_task_alloc();
  v2[15] = swift_task_alloc();
  return MEMORY[0x1F4188298](sub_1C28463BC, v1, 0);
}

uint64_t sub_1C28463BC()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[8];
  sub_1C2845B14(v1);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3) == 1)
  {
    uint64_t v4 = v0[13];
    uint64_t v5 = (uint64_t *)v0[11];
    uint64_t v6 = v0[8];
    uint64_t v7 = v0[7];
    uint64_t v8 = v0[3];
    (*(void (**)(void, void))(v0[10] + 8))(v0[12], v0[9]);
    uint64_t v9 = sub_1C28CDA90();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v7, 1, 1, v9);
    type metadata accessor for CachedAsync();
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v11 = (void *)swift_allocObject();
    void v11[2] = v8;
    v11[3] = WitnessTable;
    v11[4] = v8;
    swift_retain_n();
    uint64_t v12 = sub_1C2847218(v7, (uint64_t)&unk_1EA310A48, (uint64_t)v11);
    v0[19] = v12;
    *uint64_t v5 = v12;
    swift_storeEnumTagMultiPayload();
    uint64_t v13 = *(void (**)(uint64_t *, void, uint64_t, uint64_t))(v4 + 56);
    v0[20] = v13;
    v0[21] = (v4 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v13(v5, 0, 1, v6);
    swift_retain();
    sub_1C2845BD0((uint64_t)v5);
    uint64_t v14 = (void *)swift_task_alloc();
    v0[22] = v14;
    unint64_t v15 = sub_1C27C7060();
    *uint64_t v14 = v0;
    v14[1] = sub_1C2846980;
    uint64_t v16 = v0[6];
    uint64_t v17 = v0[4];
    uint64_t v18 = MEMORY[0x1E4FBC0F0];
    uint64_t v19 = v12;
LABEL_8:
    return MEMORY[0x1F4187D90](v16, v19, v17, v15, v18);
  }
  uint64_t v20 = v0[14];
  uint64_t v21 = v0[15];
  uint64_t v22 = v0[13];
  uint64_t v23 = v0[8];
  (*(void (**)(uint64_t, void, uint64_t))(v22 + 32))(v21, v0[12], v23);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v20, v21, v23);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    uint64_t v30 = *(void *)v0[14];
    v0[16] = v30;
    uint64_t v31 = (void *)swift_task_alloc();
    v0[17] = v31;
    unint64_t v15 = sub_1C27C7060();
    *uint64_t v31 = v0;
    v31[1] = sub_1C2846788;
    uint64_t v17 = v0[4];
    uint64_t v16 = v0[2];
    uint64_t v18 = MEMORY[0x1E4FBC0F0];
    uint64_t v19 = v30;
    goto LABEL_8;
  }
  uint64_t v24 = v0[14];
  uint64_t v25 = v0[4];
  uint64_t v26 = v0[5];
  uint64_t v27 = v0[2];
  (*(void (**)(void, void))(v0[13] + 8))(v0[15], v0[8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 32))(v27, v24, v25);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v28 = (uint64_t (*)(void))v0[1];
  return v28();
}

uint64_t sub_1C2846788()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 144) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1C2846BF0;
  }
  else {
    uint64_t v4 = sub_1C28468B4;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C28468B4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2846980()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 184) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1C2846CBC;
  }
  else {
    uint64_t v4 = sub_1C2846AAC;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C2846AAC()
{
  uint64_t v1 = (void (*)(uint64_t, void, uint64_t, uint64_t))v0[20];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[5];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[4];
  uint64_t v7 = v0[2];
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v6);
  swift_storeEnumTagMultiPayload();
  v1(v2, 0, 1, v3);
  sub_1C2845BD0(v2);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v7, v5, v6);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1C2846BF0()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[13];
  uint64_t v3 = v0[8];
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1C2846CBC()
{
  uint64_t v1 = *(void *)(v0 + 88);
  (*(void (**)(uint64_t, uint64_t, uint64_t, void))(v0 + 160))(v1, 1, 1, *(void *)(v0 + 64));
  sub_1C2845BD0(v1);
  swift_willThrow();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

void sub_1C2846DA4()
{
  if (!qword_1EA310A38)
  {
    sub_1C28CDA90();
    unint64_t v0 = sub_1C28CDF70();
    if (!v1) {
      atomic_store(v0, &qword_1EA310A38);
    }
  }
}

uint64_t sub_1C2846DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v4 + 16) = a1;
  *(void *)(v4 + 24) = a4;
  return MEMORY[0x1F4188298](sub_1C2846E1C, a4, 0);
}

uint64_t sub_1C2846E1C()
{
  uint64_t v1 = (int **)(v0[3] + *(void *)(*(void *)v0[3] + 104));
  uint64_t v2 = *v1;
  v0[4] = v1[1];
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)v2 + *v2);
  swift_retain();
  uint64_t v3 = (void *)swift_task_alloc();
  v0[5] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1C2846F1C;
  uint64_t v4 = v0[2];
  return v6(v4);
}

uint64_t sub_1C2846F1C()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 48) = v0;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 24);
  if (v0) {
    uint64_t v4 = sub_1C28470AC;
  }
  else {
    uint64_t v4 = sub_1C2847048;
  }
  return MEMORY[0x1F4188298](v4, v3, 0);
}

uint64_t sub_1C2847048()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C28470AC()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for CachedAsync()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C2847128()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C2847168(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  uint64_t v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_1C284858C;
  return MEMORY[0x1F4188298](sub_1C2846E1C, v4, 0);
}

uint64_t sub_1C2847218(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1C28CDA90();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1C28CDA80();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_1C2848530(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1C28CDA40();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t CachedAsync.unownedExecutor.getter()
{
  return v0;
}

uint64_t sub_1C28473A0()
{
  return CachedAsync.unownedExecutor.getter();
}

uint64_t sub_1C28473BC()
{
  type metadata accessor for CachedAsync.CacheEntry();
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_initClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for CachedAsync(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for CachedAsync);
}

uint64_t dispatch thunk of CachedAsync.__allocating_init(dataProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of CachedAsync.cancelTask()()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 168))();
}

uint64_t dispatch thunk of CachedAsync.getValue()(uint64_t a1)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))(*(void *)(*(void *)v1 + 176) + **(int **)(*(void *)v1 + 176));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_1C28475CC;
  return v6(a1);
}

uint64_t sub_1C28475CC()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1C28476C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

void *sub_1C284775C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(v4 + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  int v6 = *(_DWORD *)(v4 + 80);
  if ((v6 & 0x1000F8) != 0 || (unint64_t)(v5 + 1) > 0x18)
  {
    uint64_t v8 = *(void *)a2;
    *uint64_t v3 = *(void *)a2;
    uint64_t v3 = (void *)(v8 + ((unsigned __int16)((v6 & 0xF8) + 23) & (unsigned __int16)~(v6 & 0xF8) & 0x1F8));
LABEL_24:
    swift_retain();
    return v3;
  }
  unsigned int v9 = a2[v5];
  unsigned int v10 = v9 - 2;
  if (v9 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v11 = v5;
    }
    else {
      uint64_t v11 = 4;
    }
    switch(v11)
    {
      case 1:
        int v12 = *a2;
        goto LABEL_19;
      case 2:
        int v12 = *(unsigned __int16 *)a2;
        goto LABEL_19;
      case 3:
        int v12 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_19;
      case 4:
        int v12 = *(_DWORD *)a2;
LABEL_19:
        int v13 = (v12 | (v10 << (8 * v5))) + 2;
        unsigned int v9 = v12 + 2;
        if (v5 < 4) {
          unsigned int v9 = v13;
        }
        break;
      default:
        break;
    }
  }
  if (v9 != 1)
  {
    *a1 = *(void *)a2;
    *((unsigned char *)a1 + v5) = 0;
    goto LABEL_24;
  }
  (*(void (**)(void *))(v4 + 16))(a1);
  *((unsigned char *)v3 + v5) = 1;
  return v3;
}

uint64_t sub_1C28478D4(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  if (v2 <= 8) {
    unint64_t v2 = 8;
  }
  unsigned int v3 = a1[v2];
  unsigned int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        int v7 = (v6 | (v4 << (8 * v2))) + 2;
        unsigned int v3 = v6 + 2;
        if (v2 < 4) {
          unsigned int v3 = v7;
        }
        break;
      default:
        break;
    }
  }
  if (v3 == 1) {
    return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  }
  else {
    return swift_release();
  }
}

void *sub_1C28479D4(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 16))(a1);
    char v10 = 1;
  }
  else
  {
    *a1 = *(void *)a2;
    swift_retain();
    char v10 = 0;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C2847B10(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 16))(a1, a2, v5);
      a1[v7] = 1;
    }
    else
    {
      *(void *)a1 = *(void *)a2;
      a1[v7] = 0;
      swift_retain();
    }
  }
  return a1;
}

void *sub_1C2847D2C(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    uint64_t v4 = 8;
  }
  else {
    uint64_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  unsigned int v5 = a2[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a2;
        goto LABEL_13;
      case 2:
        int v8 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v8 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v8 = *(_DWORD *)a2;
LABEL_13:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1)
  {
    (*(void (**)(void *))(*(void *)(*(void *)(a3 + 16) - 8) + 32))(a1);
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v4) = v10;
  return a1;
}

unsigned __int8 *sub_1C2847E64(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(v5 - 8);
    if (*(void *)(v6 + 64) <= 8uLL) {
      uint64_t v7 = 8;
    }
    else {
      uint64_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a1[v7];
    unsigned int v9 = v8 - 2;
    if (v8 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v10 = v7;
      }
      else {
        uint64_t v10 = 4;
      }
      switch(v10)
      {
        case 1:
          int v11 = *a1;
          goto LABEL_14;
        case 2:
          int v11 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v11 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v11 = *(_DWORD *)a1;
LABEL_14:
          int v12 = (v11 | (v9 << (8 * v7))) + 2;
          unsigned int v8 = v11 + 2;
          if (v7 < 4) {
            unsigned int v8 = v12;
          }
          break;
        default:
          break;
      }
    }
    if (v8 == 1) {
      (*(void (**)(unsigned __int8 *, uint64_t))(v6 + 8))(a1, v5);
    }
    else {
      swift_release();
    }
    unsigned int v13 = a2[v7];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v7 <= 3) {
        uint64_t v15 = v7;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          goto LABEL_28;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          goto LABEL_28;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_28;
        case 4:
          int v16 = *(_DWORD *)a2;
LABEL_28:
          int v17 = (v16 | (v14 << (8 * v7))) + 2;
          unsigned int v13 = v16 + 2;
          if (v7 < 4) {
            unsigned int v13 = v17;
          }
          break;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v6 + 32))(a1, a2, v5);
      char v18 = 1;
    }
    else
    {
      char v18 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v7] = v18;
  }
  return a1;
}

uint64_t sub_1C284807C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v4 = 8;
  if (*(void *)(v3 + 64) > 8uLL) {
    uint64_t v4 = *(void *)(v3 + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  uint64_t v5 = v4 + 1;
  char v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    unsigned int v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      int v7 = *(_DWORD *)((char *)a1 + v5);
      if (!v7) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 > 0xFF)
    {
      int v7 = *(unsigned __int16 *)((char *)a1 + v5);
      if (!*(unsigned __int16 *)((char *)a1 + v5)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v9 < 2)
    {
LABEL_22:
      unsigned int v11 = *((unsigned __int8 *)a1 + v4);
      if (v11 >= 2) {
        return (v11 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v7 = *((unsigned __int8 *)a1 + v5);
  if (!*((unsigned char *)a1 + v5)) {
    goto LABEL_22;
  }
LABEL_14:
  int v10 = (v7 - 1) << v6;
  if (v5 > 3) {
    int v10 = 0;
  }
  if (v5)
  {
    if (v5 > 3) {
      LODWORD(v5) = 4;
    }
    switch((int)v5)
    {
      case 2:
        LODWORD(v5) = *a1;
        break;
      case 3:
        LODWORD(v5) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v5) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v5) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v5 | v10) + 255;
}

void sub_1C28481B0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (v5 <= 8) {
    unint64_t v5 = 8;
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x1C2848378);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_1C28483A0(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v3 = 8;
  if (*(void *)(v2 + 64) > 8uLL) {
    uint64_t v3 = *(void *)(v2 + 64);
  }
  uint64_t v4 = a1[v3];
  int v5 = v4 - 2;
  if (v4 >= 2)
  {
    if (v3 <= 3) {
      uint64_t v6 = v3;
    }
    else {
      uint64_t v6 = 4;
    }
    switch(v6)
    {
      case 1:
        int v7 = *a1;
        goto LABEL_12;
      case 2:
        int v7 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v7 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v7 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v8 = (v7 | (v5 << (8 * v3))) + 2;
        LODWORD(v4) = v7 + 2;
        if (v3 >= 4) {
          uint64_t v4 = v4;
        }
        else {
          uint64_t v4 = v8;
        }
        break;
      default:
        return v4;
    }
  }
  return v4;
}

void sub_1C2848458(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (*(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 8uLL) {
    size_t v4 = 8;
  }
  else {
    size_t v4 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (a2 > 1)
  {
    unsigned int v5 = a2 - 2;
    if (v4 < 4)
    {
      unsigned int v6 = v5 >> (8 * v4);
      int v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if (v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if (v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t sub_1C2848530(uint64_t a1)
{
  sub_1C2846DA4();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2848590()
{
  return swift_deallocObject();
}

uint64_t ReplaySubject.__allocating_init(bufferSize:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ReplaySubject.init(bufferSize:)(a1);
  return v2;
}

uint64_t sub_1C28485E0(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  sub_1C27BFE38(a1);
  return v2;
}

uint64_t sub_1C2848620(uint64_t a1)
{
  uint64_t v16 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  size_t v4 = (char *)&v14 - v3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v5 = sub_1C28CD030();
  uint64_t v6 = sub_1C28CDF70();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  int v9 = (char *)&v14 - v8;
  sub_1C28CC9C0();
  uint64_t v10 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v10, v6);
  LODWORD(v10) = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v9, 1, v5);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (v10 == 1)
  {
    swift_beginAccess();
    sub_1C28CD090();
    if (sub_1C28CD070())
    {
      uint64_t v12 = sub_1C28CD010();
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v4, v16, AssociatedTypeWitness);
      swift_beginAccess();
      sub_1C28CDA30();
      sub_1C28CD9F0();
      swift_endAccess();
      uint64_t v12 = sub_1C27C5510(0, 1);
    }
    uint64_t v13 = v12;
    sub_1C28CC9D0();
    return v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2848980(uint64_t a1)
{
  uint64_t v18 = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v2 = sub_1C28CD030();
  uint64_t v3 = sub_1C28CDF70();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v5);
  uint64_t v10 = (char *)&v17 - v9;
  MEMORY[0x1F4188790](v8);
  uint64_t v12 = (char *)&v17 - v11;
  sub_1C28CC9C0();
  uint64_t v13 = v1 + *(void *)(*(void *)v1 + 120);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v12, v13, v3);
  uint64_t v14 = *(void *)(v2 - 8);
  int v15 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v2);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v12, v3);
  if (v15 == 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v10, v18, v2);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(v10, 0, 1, v2);
    (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v10, v3);
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v4 + 40))(v13, v7, v3);
    swift_endAccess();
    sub_1C27C5510(0, 1);
    return sub_1C28CC9D0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C2848C88(char *a1)
{
  return sub_1C27C5510(a1, 0);
}

uint64_t *sub_1C2848C90()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, void))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 112), *(void *)(v1 + 80));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 120);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  sub_1C28CD030();
  uint64_t v3 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  return v0;
}

uint64_t sub_1C2848DE8()
{
  return sub_1C2849F20((void (*)(void))sub_1C2848C90);
}

BOOL sub_1C2848E00()
{
  uint64_t v1 = *v0;
  uint64_t v2 = sub_1C28CD030();
  uint64_t v3 = sub_1C28CDF70();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v6 = (char *)&v10 - v5;
  uint64_t v7 = (char *)v0 + *(void *)(v1 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, v7, v3);
  BOOL v8 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(v6, 1, v2) == 1;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  return v8;
}

uint64_t ReplaySubject.send(_:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void *)(*v1 + 80);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v7 = (char *)v17 - v6;
  sub_1C28CC9C0();
  if (!sub_1C2848E00()) {
    return sub_1C28CC9D0();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  swift_beginAccess();
  sub_1C28CDA30();
  sub_1C28CD9F0();
  swift_endAccess();
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = MEMORY[0x1C875EF70](v8, v4);
  swift_bridgeObjectRelease();
  if (v1[2] < v9)
  {
    swift_beginAccess();
    swift_getWitnessTable();
    sub_1C28CDBD0();
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  swift_beginAccess();
  uint64_t v10 = v1[4];
  swift_bridgeObjectRetain();
  uint64_t v11 = sub_1C28CC9D0();
  v17[6] = v10;
  MEMORY[0x1F4188790](v11);
  uint64_t v13 = *(void *)(v3 + 88);
  uint64_t v12 = *(void *)(v3 + 96);
  v17[-4] = v4;
  v17[-3] = v13;
  v17[-2] = v12;
  v17[-1] = a1;
  uint64_t v14 = sub_1C28CD0C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  v17[1] = v4;
  void v17[2] = v13;
  v17[3] = v14;
  v17[4] = WitnessTable;
  type metadata accessor for ReplaySubject.Subscription();
  sub_1C28CDA30();
  swift_getWitnessTable();
  sub_1C28CD890();
  return swift_bridgeObjectRelease();
}

void sub_1C28492C4()
{
  sub_1C28492F8(*(void *)(v0 + 40));
}

void sub_1C28492F8(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v6 = *(void *)(*v1 + 88);
  uint64_t v7 = *(void *)(*v1 + 96);
  uint64_t v8 = *(void *)(*v1 + 104);
  v9[0] = *(void *)(*v1 + 80);
  v9[1] = v6;
  void v9[2] = v7;
  v9[3] = v8;
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
  type metadata accessor for DemandBuffer();
  sub_1C28CDF70();
  uint64_t v4 = (void *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1C27DB9E4(v4, v9);
  os_unfair_lock_unlock(v5);
  if (v9[0])
  {
    swift_retain();
    sub_1C2848620(a1);
    swift_release_n();
  }
}

uint64_t ReplaySubject.send(completion:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v1;
  uint64_t v5 = *(void *)(*v1 + 88);
  uint64_t v6 = *(void *)(*v1 + 96);
  uint64_t v7 = sub_1C28CD030();
  uint64_t v8 = sub_1C28CDF70();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v11 = (char *)v20 - v10;
  sub_1C28CC9C0();
  if (!sub_1C2848E00()) {
    return sub_1C28CC9D0();
  }
  uint64_t v12 = *(void *)(v7 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v11, a1, v7);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v11, 0, 1, v7);
  uint64_t v13 = (char *)v2 + *(void *)(*v2 + 128);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v9 + 40))(v13, v11, v8);
  swift_endAccess();
  swift_beginAccess();
  uint64_t v14 = v2[4];
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1C28CC9D0();
  void v20[6] = v14;
  MEMORY[0x1F4188790](v15);
  uint64_t v16 = *(void *)(v4 + 80);
  v20[-4] = v16;
  v20[-3] = v5;
  v20[-2] = v6;
  v20[-1] = a1;
  uint64_t v17 = sub_1C28CD0C0();
  uint64_t WitnessTable = swift_getWitnessTable();
  v20[1] = v16;
  id v20[2] = v5;
  v20[3] = v17;
  v20[4] = WitnessTable;
  type metadata accessor for ReplaySubject.Subscription();
  sub_1C28CDA30();
  swift_getWitnessTable();
  sub_1C28CD890();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C28497B4()
{
  return sub_1C28497E8(*(void *)(v0 + 40));
}

uint64_t sub_1C28497E8(uint64_t a1)
{
  uint64_t v3 = v1[2];
  uint64_t v7 = *(void *)(*v1 + 88);
  uint64_t v8 = *(void *)(*v1 + 96);
  uint64_t v9 = *(void *)(*v1 + 104);
  v10[0] = *(void *)(*v1 + 80);
  v10[1] = v7;
  v10[2] = v8;
  _OWORD v10[3] = v9;
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
  type metadata accessor for DemandBuffer();
  sub_1C28CDF70();
  uint64_t v4 = (void *)(v3 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v3 + 16));
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_1C27DB9CC(v4, v10);
  os_unfair_lock_unlock(v5);
  if (v10[0])
  {
    swift_retain();
    sub_1C2848980(a1);
    swift_release();
  }
  sub_1C2849CA0();
  return swift_release();
}

uint64_t ReplaySubject.send(subscription:)(void *a1)
{
  return sub_1C27BA540(a1);
}

uint64_t sub_1C28499A4()
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_1C2849A04();
    return swift_release();
  }
  return result;
}

uint64_t sub_1C2849A04()
{
  return sub_1C28CC9D0();
}

uint64_t ReplaySubject.deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 128);
  sub_1C28CD030();
  uint64_t v2 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  return v0;
}

uint64_t ReplaySubject.__deallocating_deinit()
{
  return sub_1C2849F20((void (*)(void))ReplaySubject.deinit);
}

void sub_1C2849CA0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  type metadata accessor for ReplaySubject.Subscription.SubscriptionState();
  sub_1C284A9A0(0, &qword_1EBB76898, (void (*)(uint64_t))sub_1C284A9F4);
  uint64_t v2 = (void *)(v1 + *(void *)(*MEMORY[0x1E4FBBAB0] + *(void *)v1 + 16));
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_1C284A980(v2, &v6);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = v6;
  if (v6)
  {
    uint64_t v5 = swift_retain();
    ((void (*)(uint64_t))v4)(v5);
    sub_1C27C0290((uint64_t)v4);
    sub_1C27C0290((uint64_t)v4);
  }
}

uint64_t sub_1C2849E10@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  uint64_t v5 = a1[1];
  uint64_t v4 = a1[2];
  a1[1] = 0;
  a1[2] = 0;
  swift_release();
  *a1 = 0;
  if (v5)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v5;
    *(void *)(result + 24) = v4;
    uint64_t v7 = sub_1C284AA70;
  }
  else
  {
    uint64_t v7 = 0;
    uint64_t result = 0;
  }
  *a2 = v7;
  a2[1] = (uint64_t (*)())result;
  return result;
}

uint64_t sub_1C2849E9C()
{
  swift_release();
  uint64_t v1 = v0 + qword_1EBB76048;
  uint64_t v2 = sub_1C28CCE80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_1C2849F08()
{
  return sub_1C2849F20((void (*)(void))sub_1C2849E9C);
}

uint64_t sub_1C2849F20(void (*a1)(void))
{
  a1();

  return swift_deallocClassInstance();
}

void sub_1C2849F7C()
{
}

uint64_t sub_1C2849FA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = sub_1C28CE780();
  MEMORY[0x1F4188790](v6 - 8);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C284A9A0(0, &qword_1EA310168, MEMORY[0x1E4FBC420]);
  uint64_t v10 = MEMORY[0x1F4188790](v9 - 8);
  uint64_t v12 = (char *)v21 - v11;
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x1F4188790](v10);
  uint64_t v16 = (char *)v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v14);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  v17((char *)v21 - v18, a1, a4);
  sub_1C27CAE78(0, &qword_1EA310BE8);
  if (swift_dynamicCast())
  {
    sub_1C27CAE60(v21, (uint64_t)v23);
    __swift_project_boxed_opaque_existential_1(v23, v23[3]);
    sub_1C28CE280();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v23);
  }
  else
  {
    uint64_t v22 = 0;
    memset(v21, 0, sizeof(v21));
    sub_1C284AADC((uint64_t)v21, &qword_1EA310BF0, &qword_1EA310BE8);
    v17(v16, a1, a4);
    uint64_t v20 = sub_1C28CE770();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v12, 1, 1, v20);
    sub_1C27E68F0((uint64_t)v8);
    return sub_1C28CE7B0();
  }
}

uint64_t sub_1C284A258()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1C284A290()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1C284A2C0()
{
  (*(void (**)(unint64_t))(*(void *)(*(void *)(v0 + 32) - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v0 + 32) - 8) + 80)));

  return swift_deallocObject();
}

uint64_t sub_1C284A348()
{
  return sub_1C2849FA0((uint64_t)v0+ ((*(unsigned __int8 *)(*(void *)(v0[4] - 8) + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v0[4] - 8) + 80)), v0[2], v0[3], v0[4]);
}

void sub_1C284A38C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  if (!*a2)
  {
    sub_1C27CAE78(255, a3);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_1C284A3E4@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v2 = *(void *)(v1 + 24);
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = v3;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C284A3FC()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C284A434()
{
  uint64_t v1 = sub_1C28CCE80();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

uint64_t sub_1C284A500()
{
  sub_1C28CCE80();

  return sub_1C28499A4();
}

uint64_t sub_1C284A594()
{
  __swift_destroy_boxed_opaque_existential_1Tm(v0 + 16);

  return swift_deallocObject();
}

uint64_t sub_1C284A5CC@<X0>(uint64_t *a1@<X8>)
{
  __swift_project_boxed_opaque_existential_1((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t result = sub_1C28CE610();
  a1[3] = MEMORY[0x1E4FBB1A0];
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1C284A624()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1C28CE660();
}

uint64_t sub_1C284A670()
{
  __swift_project_boxed_opaque_existential_1((void *)(v0 + 16), *(void *)(v0 + 40));
  return sub_1C28CE610();
}

uint64_t sub_1C284A6B4(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 96);
}

uint64_t method lookup function for ReplaySubject(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for ReplaySubject);
}

uint64_t dispatch thunk of ReplaySubject.__allocating_init(bufferSize:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t sub_1C284A6E8(uint64_t a1)
{
  uint64_t result = swift_release();
  if (*(void *)(a1 + 8))
  {
    return swift_release();
  }
  return result;
}

void *sub_1C284A738(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_retain();
  swift_release();
  return a1;
}

void *sub_1C284A7D8(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[1];
  if (!a1[1])
  {
    if (v4)
    {
      uint64_t v6 = a2[2];
      a1[1] = v4;
      a1[2] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = a2[2];
  a1[1] = v4;
  a1[2] = v5;
  swift_release();
  return a1;
}

uint64_t sub_1C284A864(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_1C284A8C0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

uint64_t sub_1C284A914(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F41863F8](a1, a2, a3, 32);
}

uint64_t sub_1C284A91C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_1C284A93C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

uint64_t type metadata accessor for DemandBuffer.Demand()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_1C284A980@<X0>(void *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_1C2849E10(a1, a2);
}

void sub_1C284A9A0(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1C28CDF70();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_1C284A9F4()
{
  unint64_t result = qword_1EBB76890;
  if (!qword_1EBB76890)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_1EBB76890);
  }
  return result;
}

uint64_t sub_1C284AA38()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C284AA70()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C284AA9C()
{
  return sub_1C28CCE70() & 1;
}

uint64_t sub_1C284AADC(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  sub_1C284A38C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

id ManagedObjectContextOperating<>.makeDependentSaveOperation()(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = (*(uint64_t (**)(void))(a2 + 8))();
  uint64_t v5 = (objc_class *)type metadata accessor for SaveManagedObjectContextOperation();
  uint64_t v6 = (char *)objc_allocWithZone(v5);
  *(void *)&v6[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = v4;
  v9.receiver = v6;
  v9.super_class = v5;
  id v7 = objc_msgSendSuper2(&v9, sel_init);
  objc_msgSend(v7, sel_addDependency_, v3);
  return v7;
}

id SaveManagedObjectContextOperation.__allocating_init(context:)(uint64_t a1)
{
  uint64_t v3 = (char *)objc_allocWithZone(v1);
  *(void *)&v3[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = a1;
  v5.receiver = v3;
  v5.super_class = v1;
  return objc_msgSendSuper2(&v5, sel_init);
}

uint64_t type metadata accessor for SaveManagedObjectContextOperation()
{
  return self;
}

id SaveManagedObjectContextOperation.init(context:)(uint64_t a1)
{
  *(void *)&v1[OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context] = a1;
  v3.receiver = v1;
  v3.super_class = (Class)type metadata accessor for SaveManagedObjectContextOperation();
  return objc_msgSendSuper2(&v3, sel_init);
}

uint64_t sub_1C284AC8C()
{
  return swift_release();
}

uint64_t sub_1C284AD40()
{
  return swift_deallocObject();
}

uint64_t sub_1C284AD78()
{
  return sub_1C284AC8C();
}

id sub_1C284AD80(uint64_t a1)
{
  uint64_t v24 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = sub_1C28CCE10();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)v21 - v7;
  objc_super v9 = *(void **)(a1 + OBJC_IVAR____TtC16HealthExperience33SaveManagedObjectContextOperation_context);
  id result = objc_msgSend(v9, sel_hasChanges);
  if (result)
  {
    sub_1C28CCD80();
    uint64_t v11 = sub_1C28CCE00();
    os_log_type_t v12 = sub_1C28CDC90();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl(&dword_1C27B7000, v11, v12, "Saving FeedItems", v13, 2u);
      MEMORY[0x1C87609B0](v13, -1, -1);
    }

    uint64_t v14 = *(void (**)(char *, uint64_t))(v3 + 8);
    v14(v8, v2);
    id v22 = 0;
    if (objc_msgSend(v9, sel_save_, &v22))
    {
      id v15 = v22;
      sub_1C28CCD80();
      uint64_t v16 = sub_1C28CCE00();
      os_log_type_t v17 = sub_1C28CDC90();
      if (os_log_type_enabled(v16, v17))
      {
        uint64_t v18 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v18 = 0;
        _os_log_impl(&dword_1C27B7000, v16, v17, "Saved FeedItems", v18, 2u);
        MEMORY[0x1C87609B0](v18, -1, -1);
      }

      return (id)((uint64_t (*)(char *, uint64_t))v14)(v6, v2);
    }
    else
    {
      id v19 = v22;
      uint64_t v20 = sub_1C28CC290();

      swift_willThrow();
      id v22 = 0;
      unint64_t v23 = 0xE000000000000000;
      sub_1C28CE120();
      swift_bridgeObjectRelease();
      id v22 = (id)0xD000000000000023;
      unint64_t v23 = 0x80000001C28DC840;
      v21[1] = v20;
      sub_1C27C7060();
      sub_1C28CD760();
      sub_1C28CD7C0();
      swift_bridgeObjectRelease();
      id result = (id)sub_1C28CE360();
      __break(1u);
    }
  }
  return result;
}

id SaveManagedObjectContextOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void SaveManagedObjectContextOperation.init()()
{
}

void sub_1C284B224()
{
}

id SaveManagedObjectContextOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for SaveManagedObjectContextOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t dispatch thunk of ManagedObjectContextOperating.context.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t method lookup function for SaveManagedObjectContextOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for SaveManagedObjectContextOperation);
}

uint64_t dispatch thunk of SaveManagedObjectContextOperation.__allocating_init(context:)()
{
  return (*(uint64_t (**)(void))(v0 + 200))();
}

id sub_1C284B2B8()
{
  return sub_1C284AD80(*(void *)(v0 + 16));
}

uint64_t *sub_1C284B2D0(uint64_t a1, uint64_t a2)
{
  return sub_1C27C51D4(a1, a2);
}

uint64_t sub_1C284B31C()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C284B33C(uint64_t a1)
{
  uint64_t v2 = v1;
  sub_1C28CC620();
  uint64_t v4 = (uint64_t *)(v2 + *(void *)(*(void *)v2 + 160));
  swift_beginAccess();
  uint64_t v5 = *v4;
  sub_1C28CD090();
  if ((sub_1C28CD070() & 1) == 0)
  {
    sub_1C28CD090();
    char v6 = sub_1C28CD070();
    uint64_t v7 = sub_1C28CD090();
    if (v6)
    {
LABEL_3:
      *uint64_t v4 = v7;
      goto LABEL_9;
    }
    uint64_t result = sub_1C28CD070();
    if ((result & 1) == 0)
    {
      if ((v5 | a1) < 0) {
        goto LABEL_21;
      }
      uint64_t v7 = v5 + a1;
      if (!__OFADD__(v5, a1))
      {
        if ((v7 & 0x8000000000000000) == 0) {
          goto LABEL_3;
        }
        __break(1u);
LABEL_21:
        __break(1u);
        return result;
      }
    }
    *uint64_t v4 = sub_1C28CD090();
  }
LABEL_9:
  swift_endAccess();
  swift_beginAccess();
  sub_1C27CEABC(v2 + 32, (uint64_t)&v12);
  if (v16)
  {
    if (v16 == 1)
    {
      sub_1C27CEA68((uint64_t)&v12);
    }
    else if (!(v14 | v15 | (unint64_t)v12 | v13 | *((void *)&v12 + 1)))
    {
      return sub_1C28CC630();
    }
    swift_getWitnessTable();
    sub_1C28CC8F0();
    return sub_1C28CC630();
  }
  sub_1C27CAE60(&v12, (uint64_t)v11);
  uint64_t v9 = *(void *)(*(void *)v2 + 200);
  if (!*(void *)(v2 + v9))
  {
    sub_1C28CC630();
    uint64_t v10 = sub_1C284B578();
    sub_1C28CC620();
    *(void *)(v2 + v9) = v10;
    swift_release();
  }
  sub_1C28CC630();
  __swift_project_boxed_opaque_existential_1(v11, v11[3]);
  sub_1C28CD0B0();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t sub_1C284B578()
{
  uint64_t v1 = (void *)*v0;
  uint64_t v2 = swift_allocObject();
  swift_weakInit();
  uint64_t v3 = (void *)swift_allocObject();
  uint64_t v4 = v1[10];
  v3[2] = v4;
  uint64_t v5 = v1[11];
  void v3[3] = v5;
  uint64_t v6 = v1[12];
  v3[4] = v6;
  uint64_t v7 = v1[13];
  v3[5] = v7;
  uint64_t v8 = v1[14];
  v3[6] = v8;
  uint64_t v9 = v1[15];
  v3[7] = v9;
  v3[8] = v2;
  uint64_t v10 = swift_allocObject();
  swift_weakInit();
  uint64_t v11 = (void *)swift_allocObject();
  void v11[2] = v4;
  v11[3] = v5;
  void v11[4] = v6;
  v11[5] = v7;
  void v11[6] = v8;
  v11[7] = v9;
  v11[8] = v10;
  swift_retain();
  swift_retain();
  uint64_t v12 = sub_1C28CD340();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v12;
}

uint64_t sub_1C284B770(uint64_t a1)
{
  uint64_t v32 = *v1;
  uint64_t v3 = *(void *)(v32 + 96);
  uint64_t v4 = sub_1C28CDF70();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  uint64_t v5 = MEMORY[0x1F4188790](v4);
  uint64_t v30 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v29 - v8;
  uint64_t v34 = v3;
  uint64_t v37 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v31 = (char *)&v29 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v12 = sub_1C28CD030();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x1F4188790](v12);
  uint64_t v15 = (char *)&v29 - v14;
  sub_1C28CC620();
  uint64_t v35 = v13;
  uint64_t v36 = v12;
  char v16 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v33 = a1;
  v16(v15, a1, v12);
  int v17 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v15, 1, AssociatedTypeWitness);
  uint64_t v18 = *v1;
  if (v17 == 1)
  {
    id v19 = (char *)v1 + *(void *)(v18 + 168);
    swift_beginAccess();
    *id v19 = 1;
    return sub_1C28CC630();
  }
  else
  {
    uint64_t v21 = (uint64_t)v1 + *(void *)(v18 + 152);
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v38 + 16))(v9, v21, v39);
    uint64_t v22 = v37;
    uint64_t v23 = v34;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v9, 1, v34) == 1)
    {
      (*(void (**)(char *, uint64_t))(v38 + 8))(v9, v39);
      sub_1C28CC630();
    }
    else
    {
      uint64_t v24 = v31;
      (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v31, v9, v23);
      uint64_t v25 = (char *)v1 + *(void *)(*v1 + 168);
      swift_beginAccess();
      unsigned char *v25 = 1;
      swift_getAssociatedTypeWitness();
      uint64_t v26 = sub_1C28CD9A0();
      uint64_t v27 = (uint64_t *)((char *)v1 + *(void *)(*v1 + 184));
      swift_beginAccess();
      *uint64_t v27 = v26;
      swift_bridgeObjectRelease();
      uint64_t v28 = v30;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v30, 1, 1, v23);
      swift_beginAccess();
      (*(void (**)(uint64_t, char *, uint64_t))(v38 + 40))(v21, v28, v39);
      swift_endAccess();
      sub_1C28CC630();
      sub_1C28CC9C0();
      sub_1C28CCFF0();
      sub_1C28CC9D0();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v23);
    }
    return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v15, v36);
  }
}

uint64_t sub_1C284BCB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void (*a9)(uint64_t))
{
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    a9(a1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1C284BD18(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v9 - v5;
  sub_1C28CC620();
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, AssociatedTypeWitness);
  swift_beginAccess();
  sub_1C28CDA30();
  sub_1C28CD9F0();
  swift_endAccess();
  swift_beginAccess();
  sub_1C27CEABC(v1 + 32, (uint64_t)&v10);
  if (v13 == 1)
  {
    sub_1C27CEA68((uint64_t)&v10);
LABEL_7:
    swift_getWitnessTable();
    sub_1C28CC8F0();
    return sub_1C28CC630();
  }
  if (v13 == 2 && v10 == 1)
  {
    int8x16_t v7 = vorrq_s8(v11, v12);
    if (!*(void *)&vorr_s8(*(int8x8_t *)v7.i8, (int8x8_t)*(_OWORD *)&vextq_s8(v7, v7, 8uLL))) {
      goto LABEL_7;
    }
  }
  sub_1C27CEA68((uint64_t)&v10);
  return sub_1C28CC630();
}

uint64_t sub_1C284BF4C(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v28 = *v1;
  uint64_t v4 = *(void *)(v28 + 96);
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v7);
  int8x16_t v12 = (char *)v26 - v11;
  sub_1C28CC620();
  char v13 = (char *)v2 + *(void *)(*v2 + 176);
  swift_beginAccess();
  if (*v13) {
    goto LABEL_14;
  }
  v26[1] = a1;
  uint64_t v27 = v10;
  uint64_t v14 = sub_1C28CD080();
  uint64_t v15 = (void *)((char *)v2 + *(void *)(*v2 + 160));
  swift_beginAccess();
  uint64_t v16 = *v15;
  sub_1C28CD090();
  uint64_t result = sub_1C28CD070();
  if ((result & 1) == 0)
  {
    if (v16 < 0)
    {
      __break(1u);
      goto LABEL_28;
    }
    if (!v16)
    {
LABEL_25:
      sub_1C28CC630();
      return v14;
    }
  }
  swift_beginAccess();
  uint64_t v18 = *v15;
  sub_1C28CD090();
  char v19 = sub_1C28CD070();
  uint64_t v20 = v27;
  if (v19) {
    goto LABEL_12;
  }
  sub_1C28CD090();
  uint64_t result = sub_1C28CD070();
  if ((result & 1) == 0)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      if (v18)
      {
        uint64_t v21 = v18 - 1;
        goto LABEL_11;
      }
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  uint64_t v21 = sub_1C28CD090();
LABEL_11:
  *uint64_t v15 = v21;
LABEL_12:
  swift_endAccess();
  uint64_t v22 = (char *)v2 + *(void *)(*v2 + 152);
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v22, v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v9, 1, v4) == 1)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);
LABEL_14:
    sub_1C28CC630();
    return sub_1C28CD080();
  }
  (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v12, v9, v4);
  sub_1C28CC630();
  sub_1C28CC9C0();
  uint64_t v14 = sub_1C28CD010();
  sub_1C28CC9D0();
  sub_1C28CC620();
  swift_beginAccess();
  uint64_t v23 = *v15;
  sub_1C28CD090();
  if (sub_1C28CD070()) {
    goto LABEL_24;
  }
  sub_1C28CD090();
  char v24 = sub_1C28CD070();
  uint64_t v25 = sub_1C28CD090();
  if (v24)
  {
LABEL_23:
    *uint64_t v15 = v25;
LABEL_24:
    swift_endAccess();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v12, v4);
    goto LABEL_25;
  }
  uint64_t result = sub_1C28CD070();
  if (result)
  {
LABEL_21:
    uint64_t v25 = sub_1C28CD090();
    goto LABEL_23;
  }
  if ((v23 | v14) < 0)
  {
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  uint64_t v25 = v23 + v14;
  if (__OFADD__(v23, v14)) {
    goto LABEL_21;
  }
  if ((v25 & 0x8000000000000000) == 0) {
    goto LABEL_23;
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1C284C374(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v36 = *v1;
  uint64_t v4 = *(void *)(v36 + 96);
  uint64_t v5 = sub_1C28CDF70();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  uint64_t v6 = MEMORY[0x1F4188790](v5);
  uint64_t v33 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x1F4188790](v6);
  uint64_t v10 = (char *)&v32 - v9;
  uint64_t v40 = v4;
  uint64_t v39 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v8);
  uint64_t v34 = (char *)&v32 - v11;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  uint64_t v13 = sub_1C28CD030();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x1F4188790](v13);
  uint64_t v16 = (char *)&v32 - v15;
  uint64_t v41 = v1[2];
  sub_1C28CC620();
  int v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  uint64_t v35 = a1;
  v17(v16, a1, v13);
  int v18 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 48))(v16, 1, AssociatedTypeWitness);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  if (v18 == 1)
  {
    swift_beginAccess();
    sub_1C27CEABC((uint64_t)(v2 + 4), (uint64_t)&v42);
    int v19 = v45;
    sub_1C27CEA68((uint64_t)&v42);
    uint64_t v42 = 1;
    long long v43 = 0u;
    long long v44 = 0u;
    unsigned __int8 v45 = 2;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)&v42, (uint64_t)(v2 + 4));
    swift_endAccess();
    if (!v19)
    {
      swift_getWitnessTable();
      sub_1C28CC8F0();
    }
  }
  else
  {
    uint64_t v20 = *v2;
    if (*(void *)((char *)v2 + *(void *)(*v2 + 200)))
    {
      swift_retain();
      sub_1C28CD0E0();
      swift_release();
      uint64_t v20 = *v2;
    }
    uint64_t v21 = v39;
    uint64_t v22 = (char *)v2 + *(void *)(v20 + 168);
    swift_beginAccess();
    *uint64_t v22 = 1;
    swift_getAssociatedTypeWitness();
    uint64_t v23 = sub_1C28CD9A0();
    char v24 = (void *)((char *)v2 + *(void *)(*v2 + 184));
    swift_beginAccess();
    *char v24 = v23;
    swift_bridgeObjectRelease();
    uint64_t v42 = 1;
    long long v43 = 0u;
    long long v44 = 0u;
    unsigned __int8 v45 = 2;
    swift_beginAccess();
    sub_1C27CE908((uint64_t)&v42, (uint64_t)(v2 + 4));
    swift_endAccess();
    uint64_t v25 = (char *)v2 + *(void *)(*v2 + 152);
    swift_beginAccess();
    uint64_t v27 = v37;
    uint64_t v26 = v38;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v10, v25, v38);
    uint64_t v28 = v40;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v10, 1, v40) != 1)
    {
      uint64_t v29 = v34;
      (*(void (**)(char *, char *, uint64_t))(v21 + 32))(v34, v10, v28);
      uint64_t v30 = v33;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56))(v33, 1, 1, v28);
      swift_beginAccess();
      (*(void (**)(char *, char *, uint64_t))(v27 + 40))(v25, v30, v26);
      swift_endAccess();
      sub_1C28CC630();
      sub_1C28CC9C0();
      sub_1C28CCFF0();
      sub_1C28CC9D0();
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v29, v28);
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  }
  return sub_1C28CC630();
}

uint64_t sub_1C284CA0C()
{
  uint64_t v1 = v0;
  sub_1C28CC620();
  swift_beginAccess();
  sub_1C27CEABC(v0 + 32, (uint64_t)&v6);
  sub_1C28CD050();
  sub_1C27CEA68((uint64_t)&v6);
  if (v11)
  {
    __swift_project_boxed_opaque_existential_1(v10, v11);
    sub_1C28CD020();
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v10);
  }
  else
  {
    sub_1C27CEB18((uint64_t)v10);
  }
  uint64_t v6 = 1;
  long long v7 = 0u;
  long long v8 = 0u;
  char v9 = 2;
  swift_beginAccess();
  sub_1C27CE908((uint64_t)&v6, v0 + 32);
  swift_endAccess();
  if (*(void *)(v0 + *(void *)(*(void *)v0 + 200)))
  {
    swift_retain();
    sub_1C28CD0E0();
    swift_release();
  }
  swift_getAssociatedTypeWitness();
  uint64_t v2 = sub_1C28CD9A0();
  uint64_t v3 = (uint64_t *)(v1 + *(void *)(*(void *)v1 + 184));
  swift_beginAccess();
  *uint64_t v3 = v2;
  swift_bridgeObjectRelease();
  uint64_t v4 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 176));
  swift_beginAccess();
  *uint64_t v4 = 1;
  return sub_1C28CC630();
}

uint64_t *sub_1C284CC00()
{
  uint64_t v1 = *v0;
  swift_release();
  swift_release();
  sub_1C27CEA68((uint64_t)(v0 + 4));
  uint64_t v2 = (uint64_t)v0 + *(void *)(*v0 + 152);
  uint64_t v3 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(v2, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(void *)(*(void *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(void *)(*v0 + 192));
  swift_release();
  return v0;
}

uint64_t sub_1C284CD34()
{
  sub_1C284CC00();

  return swift_deallocClassInstance();
}

uint64_t sub_1C284CD88(uint64_t a1)
{
  return sub_1C284BF4C(a1);
}

uint64_t sub_1C284CDAC(uint64_t a1)
{
  return sub_1C284C374(a1);
}

uint64_t sub_1C284CDD0(uint64_t a1)
{
  return sub_1C284B33C(a1);
}

uint64_t sub_1C284CDF4()
{
  return swift_retain();
}

uint64_t sub_1C284CDFC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CDF70();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1C284CE9C(uint64_t a1)
{
  uint64_t v3 = v1 + *(void *)(*(void *)v1 + 152);
  swift_beginAccess();
  uint64_t v4 = sub_1C28CDF70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1C284CF44())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C284CFAC()
{
  return swift_retain();
}

uint64_t sub_1C284CFB4()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_1C284D00C(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 184));
  swift_beginAccess();
  *uint64_t v3 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1C284D06C())()
{
  return j__swift_endAccess;
}

uint64_t sub_1C284D0D4()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 160);
  swift_beginAccess();
  return *(void *)v1;
}

uint64_t sub_1C284D128(uint64_t a1)
{
  uint64_t v3 = (void *)(v1 + *(void *)(*(void *)v1 + 160));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C284D180())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C284D1E8()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 168));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C284D23C(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 168));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C284D294())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C284D2FC()
{
  uint64_t v1 = (unsigned __int8 *)(v0 + *(void *)(*(void *)v0 + 176));
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1C284D350(char a1)
{
  uint64_t v3 = (unsigned char *)(v1 + *(void *)(*(void *)v1 + 176));
  uint64_t result = swift_beginAccess();
  *uint64_t v3 = a1;
  return result;
}

uint64_t (*sub_1C284D3A8())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_1C284D410()
{
  return sub_1C284CA0C();
}

uint64_t sub_1C284D434()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1C284D504(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_1C284D660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C284D708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C284D7B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1C284D858(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_1C284DA50(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1C284DD1CLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          char v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_1C284DD44()
{
  uint64_t result = sub_1C28CDF70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F) {
      return swift_initClassMetadata2();
    }
  }
  return result;
}

uint64_t sub_1C284DE60(uint64_t a1, uint64_t a2)
{
  return *(void *)(a2 + 120);
}

uint64_t sub_1C284DE68()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C284DE84()
{
  return swift_getWitnessTable();
}

uint64_t sub_1C284DEA0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_1C284DEC0()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1C284DEF8()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1C284DF30(uint64_t a1)
{
  return sub_1C284DF60(a1, (void (*)(uint64_t))sub_1C284B770);
}

uint64_t sub_1C284DF48(uint64_t a1)
{
  return sub_1C284DF60(a1, (void (*)(uint64_t))sub_1C284BD18);
}

uint64_t sub_1C284DF60(uint64_t a1, void (*a2)(uint64_t))
{
  return sub_1C284BCB0(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], v2[7], a2);
}

uint64_t Sequence.sorted<A>(by:reversed:)()
{
  return sub_1C28CD870();
}

uint64_t sub_1C284DFF4(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v5 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a4 + 8);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v7);
  uint64_t v11 = (char *)v17 - v10;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  unsigned int v12 = (void (**)(char *, uint64_t))(v6 + 8);
  if (a3) {
    char v13 = sub_1C28CD6A0();
  }
  else {
    char v13 = sub_1C28CD6B0();
  }
  char v14 = v13;
  BOOL v15 = *v12;
  (*v12)(v9, v5);
  v15(v11, v5);
  return v14 & 1;
}

uint64_t sub_1C284E184(uint64_t a1, uint64_t a2)
{
  return sub_1C284DFF4(a1, a2, *(unsigned char *)(v2 + 40), *(void **)(v2 + 48)) & 1;
}

uint64_t Sequence.sorted<A>(by:using:)()
{
  return sub_1C28CD870();
}

uint64_t sub_1C284E1FC(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, char *), uint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(*MEMORY[0x1E4FBC5F0] + *a5 + 8);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v8);
  unsigned int v12 = (char *)v16 - v11;
  swift_getAtKeyPath();
  swift_getAtKeyPath();
  char v13 = a3(v12, v10);
  char v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  v14(v12, v6);
  return v13 & 1;
}

uint64_t sub_1C284E384(uint64_t a1, uint64_t a2)
{
  return sub_1C284E1FC(a1, a2, *(uint64_t (**)(char *, char *))(v2 + 32), *(void *)(v2 + 40), *(void **)(v2 + 48)) & 1;
}

uint64_t Sequence<>.unique()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = sub_1C28CD9A0();
  if (MEMORY[0x1C875EFB0](v12, AssociatedTypeWitness)) {
    uint64_t v13 = sub_1C284E980(v12, AssociatedTypeWitness, a3);
  }
  else {
    uint64_t v13 = MEMORY[0x1E4FBC870];
  }
  swift_bridgeObjectRelease();
  uint64_t v18 = v13;
  uint64_t v14 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v4, a1);
  MEMORY[0x1F4188790](v14);
  *(&v17 - 4) = a1;
  *(&v17 - 3) = a2;
  *(&v17 - 2) = a3;
  *(&v17 - 1) = (uint64_t)&v18;
  uint64_t v15 = sub_1C28CD860();
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t sub_1C284E554(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = MEMORY[0x1F4188790](AssociatedTypeWitness);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1F4188790](v4);
  uint64_t v8 = (char *)&v11 - v7;
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v6, a1, AssociatedTypeWitness);
  sub_1C28CDB40();
  char v9 = sub_1C28CDB20();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, AssociatedTypeWitness);
  return v9 & 1;
}

uint64_t Sequence.unique<A>(using:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v13 = *(void *)(a3 - 8);
  MEMORY[0x1F4188790](a1);
  uint64_t v15 = &v18[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v26 = sub_1C28CD5E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, v6, a3);
  uint64_t v19 = a3;
  uint64_t v20 = a4;
  uint64_t v21 = a5;
  uint64_t v22 = a6;
  uint64_t v23 = a1;
  uint64_t v24 = a2;
  uint64_t v25 = &v26;
  uint64_t v16 = sub_1C28CD860();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_1C284E7F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a6 - 8);
  uint64_t v8 = MEMORY[0x1F4188790](a1);
  uint64_t v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v8);
  uint64_t v13 = (char *)v21 - v12;
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v21 - v15;
  v17(v14);
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v16, a6);
  sub_1C28CDB40();
  char v18 = sub_1C28CDB20();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v7 + 8);
  v19(v13, a6);
  v19(v16, a6);
  return v18 & 1;
}

uint64_t sub_1C284E980(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = MEMORY[0x1F4188790](a1);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x1F4188790](v7);
  uint64_t v51 = (char *)&v39 - v11;
  uint64_t v40 = v12;
  uint64_t v13 = MEMORY[0x1F4188790](v10);
  uint64_t v15 = (char *)&v39 - v14;
  if (MEMORY[0x1C875EF70](v13))
  {
    sub_1C28CE110();
    uint64_t v16 = sub_1C28CE100();
  }
  else
  {
    uint64_t v16 = MEMORY[0x1E4FBC870];
  }
  uint64_t v44 = MEMORY[0x1C875EFB0](v5, a2);
  if (!v44) {
    return v16;
  }
  uint64_t v17 = 0;
  uint64_t v49 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  uint64_t v50 = v16 + 56;
  uint64_t v46 = v6 + 32;
  char v48 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v41 = v6;
  uint64_t v42 = v5;
  long long v43 = v15;
  while (1)
  {
    char v18 = sub_1C28CD9C0();
    sub_1C28CD960();
    if (v18)
    {
      uint64_t v19 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v19(v15, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v17), a2);
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1C28CE140();
      if (v40 != 8) {
        goto LABEL_23;
      }
      uint64_t v52 = result;
      uint64_t v19 = *v49;
      (*v49)(v15, &v52, a2);
      swift_unknownObjectRelease();
      BOOL v20 = __OFADD__(v17, 1);
      uint64_t v21 = v17 + 1;
      if (v20)
      {
LABEL_20:
        __break(1u);
        return v16;
      }
    }
    uint64_t v47 = v21;
    unsigned __int8 v45 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v45(v51, v15, a2);
    uint64_t v22 = sub_1C28CD670();
    uint64_t v23 = v16;
    uint64_t v24 = -1 << *(unsigned char *)(v16 + 32);
    unint64_t v25 = v22 & ~v24;
    unint64_t v26 = v25 >> 6;
    uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
    uint64_t v28 = 1 << v25;
    uint64_t v29 = *(void *)(v6 + 72);
    if (((1 << v25) & v27) != 0)
    {
      uint64_t v30 = ~v24;
      do
      {
        v19(v9, (uint64_t *)(*(void *)(v23 + 48) + v29 * v25), a2);
        uint64_t v31 = a3;
        char v32 = sub_1C28CD6E0();
        uint64_t v33 = *v48;
        (*v48)(v9, a2);
        if (v32)
        {
          v33(v51, a2);
          a3 = v31;
          uint64_t v6 = v41;
          uint64_t v5 = v42;
          uint64_t v16 = v23;
          goto LABEL_7;
        }
        unint64_t v25 = (v25 + 1) & v30;
        unint64_t v26 = v25 >> 6;
        uint64_t v27 = *(void *)(v50 + 8 * (v25 >> 6));
        uint64_t v28 = 1 << v25;
        a3 = v31;
      }
      while ((v27 & (1 << v25)) != 0);
      uint64_t v6 = v41;
      uint64_t v5 = v42;
    }
    uint64_t v34 = v51;
    *(void *)(v50 + 8 * v26) = v28 | v27;
    unint64_t v35 = *(void *)(v23 + 48) + v29 * v25;
    uint64_t v16 = v23;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v45)(v35, v34, a2);
    uint64_t v37 = *(void *)(v23 + 16);
    BOOL v20 = __OFADD__(v37, 1);
    uint64_t v38 = v37 + 1;
    if (v20) {
      break;
    }
    *(void *)(v23 + 16) = v38;
LABEL_7:
    uint64_t v15 = v43;
    uint64_t v17 = v47;
    if (v47 == v44) {
      return v16;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t sub_1C284ED3C(uint64_t a1)
{
  return sub_1C284E554(a1) & 1;
}

uint64_t sub_1C284ED60(uint64_t a1)
{
  return sub_1C284E7F8(a1, v1[6], v1[7], v1[8], v1[2], v1[3]) & 1;
}

uint64_t AsynchronousBlockOperation.debugIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

id AsynchronousBlockOperation.__allocating_init(debugIdentifier:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (char *)objc_allocWithZone(v4);
  uint64_t v10 = &v9[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier];
  *(void *)uint64_t v10 = a1;
  *((void *)v10 + 1) = a2;
  uint64_t v11 = &v9[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_workBlock];
  *(void *)uint64_t v11 = a3;
  *((void *)v11 + 1) = a4;
  v13.receiver = v9;
  v13.super_class = v4;
  return objc_msgSendSuper2(&v13, sel_init);
}

id AsynchronousBlockOperation.init(debugIdentifier:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = &v4[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_debugIdentifier];
  *(void *)uint64_t v5 = a1;
  *((void *)v5 + 1) = a2;
  uint64_t v6 = &v4[OBJC_IVAR____TtC16HealthExperience26AsynchronousBlockOperation_workBlock];
  *(void *)uint64_t v6 = a3;
  *((void *)v6 + 1) = a4;
  v8.receiver = v4;
  v8.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  return objc_msgSendSuper2(&v8, sel_init);
}

uint64_t type metadata accessor for AsynchronousBlockOperation()
{
  return self;
}

uint64_t sub_1C284EF80()
{
  uint64_t v7 = 0;
  unint64_t v8 = 0xE000000000000000;
  swift_bridgeObjectRetain();
  sub_1C28CE120();
  v6.receiver = v0;
  v6.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  id v1 = objc_msgSendSuper2(&v6, sel_debugDescription);
  uint64_t v2 = sub_1C28CD730();
  unint64_t v4 = v3;
  swift_bridgeObjectRelease();

  uint64_t v7 = v2;
  unint64_t v8 = v4;
  sub_1C28CD7C0();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v7;
}

id AsynchronousBlockOperation.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return objc_msgSend(v1, sel_init);
}

void AsynchronousBlockOperation.init()()
{
}

uint64_t sub_1C284F110()
{
  swift_release();

  return swift_bridgeObjectRelease();
}

id AsynchronousBlockOperation.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AsynchronousBlockOperation();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t method lookup function for AsynchronousBlockOperation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x1F4186708](a1, a2, &nominal type descriptor for AsynchronousBlockOperation);
}

uint64_t dispatch thunk of AsynchronousBlockOperation.__allocating_init(debugIdentifier:_:)()
{
  return (*(uint64_t (**)(void))(v0 + 208))();
}

uint64_t CompoundAsyncPrecondition.init(asyncPreconditions:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t CompoundAsyncPrecondition.evaluate(_:)(uint64_t (*a1)(uint64_t), uint64_t a2)
{
  uint64_t v5 = *v2;
  if (!*(void *)(*v2 + 16)) {
    return a1(1);
  }
  sub_1C27CE8A4(v5 + 32, (uint64_t)v11);
  uint64_t v6 = v12;
  uint64_t v7 = v13;
  __swift_project_boxed_opaque_existential_1(v11, v12);
  unint64_t v8 = (void *)swift_allocObject();
  v8[2] = v5;
  v8[3] = 1;
  v8[4] = a1;
  void v8[5] = a2;
  uint64_t v9 = *(void (**)(uint64_t (*)(uint64_t), void *, uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain_n();
  swift_retain();
  v9(sub_1C284F448, v8, v6, v7);
  swift_bridgeObjectRelease();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v11);
}

uint64_t sub_1C284F31C(uint64_t result, uint64_t a2, unint64_t a3, uint64_t (*a4)(uint64_t), uint64_t a5)
{
  if ((result & 1) == 0)
  {
    uint64_t v9 = 0;
    return a4(v9);
  }
  unint64_t v8 = *(void *)(a2 + 16);
  if (v8 == a3)
  {
    uint64_t v9 = 1;
    return a4(v9);
  }
  if (v8 > a3)
  {
    unint64_t v10 = a3 + 1;
    sub_1C27CE8A4(a2 + 40 * a3 + 32, (uint64_t)v15);
    uint64_t v11 = v16;
    uint64_t v12 = v17;
    __swift_project_boxed_opaque_existential_1(v15, v16);
    uint64_t v13 = (void *)swift_allocObject();
    id v13[2] = a2;
    v13[3] = v10;
    void v13[4] = a4;
    v13[5] = a5;
    uint64_t v14 = *(void (**)(uint64_t (*)(), void *, uint64_t, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain_n();
    swift_retain();
    v14(sub_1C284F4C0, v13, v11, v12);
    swift_bridgeObjectRelease();
    swift_release();
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v15);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C284F448(uint64_t a1)
{
  return sub_1C284F31C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(uint64_t (**)(uint64_t))(v1 + 32), *(void *)(v1 + 40));
}

uint64_t dispatch thunk of AsyncPrecondition.evaluate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

ValueMetadata *type metadata accessor for CompoundAsyncPrecondition()
{
  return &type metadata for CompoundAsyncPrecondition;
}

uint64_t objectdestroyTm()
{
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocObject();
}

void *ColorRepresentation.encode()()
{
  uint64_t v1 = type metadata accessor for HKObjectTypeColorProvider(0);
  MEMORY[0x1F4188790](v1 - 8);
  unint64_t v3 = (char *)&v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = type metadata accessor for ColorRepresentation(0);
  MEMORY[0x1F4188790](v4);
  uint64_t v6 = (double *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  id v7 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67A10]), sel_init);
  if (!v7)
  {
    __break(1u);
    JUMPOUT(0x1C284F7C0);
  }
  unint64_t v8 = v7;
  sub_1C284F7E0(v0, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      objc_msgSend(v8, sel_setDisplayCategoryIdentifier_, *(void *)v6);
      break;
    case 2u:
      uint64_t v16 = (void *)sub_1C28CD6F0();
      swift_bridgeObjectRelease();
      objc_msgSend(v8, sel_setSemanticColorName_, v16);

      break;
    case 3u:
      double v11 = *v6;
      double v12 = v6[1];
      double v13 = v6[2];
      double v14 = v6[3];
      id v15 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E4F67A70]), byte_1E6457618);
      objc_msgSend(v15, sel_setRed_, v11);
      objc_msgSend(v15, sel_setGreen_, v12);
      objc_msgSend(v15, sel_setBlue_, v13);
      objc_msgSend(v15, sel_setAlpha_, v14);
      objc_msgSend(v8, sel_setRgbConfiguration_, v15);

      break;
    default:
      sub_1C284F844((uint64_t)v6, (uint64_t)v3);
      sub_1C284F8A8();
      uint64_t v9 = (void *)sub_1C28CD570();
      id v10 = objc_msgSend(v9, sel_identifier);

      if (!v10)
      {
        sub_1C28CD730();
        id v10 = (id)sub_1C28CD6F0();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v8, sel_setObjectTypeIdentifier_, v10);

      sub_1C284F940((uint64_t)v3);
      break;
  }
  return v8;
}

uint64_t sub_1C284F7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ColorRepresentation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C284F844(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for HKObjectTypeColorProvider(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_1C284F8A8()
{
  if (!qword_1EBB75ED0)
  {
    sub_1C284F900();
    unint64_t v0 = sub_1C28CD5A0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_1EBB75ED0);
    }
  }
}

unint64_t sub_1C284F900()
{
  unint64_t result = qword_1EBB75998;
  if (!qword_1EBB75998)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1EBB75998);
  }
  return result;
}

uint64_t sub_1C284F940(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for HKObjectTypeColorProvider(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void ColorRepresentation.init(_:)(void *a1@<X0>, void *a2@<X8>)
{
  if (objc_msgSend(a1, sel_hasObjectTypeIdentifier))
  {
    uint64_t v4 = self;
    id v5 = objc_msgSend(a1, sel_objectTypeIdentifier);
    id v6 = objc_msgSend(v4, sel__typeWithIdentifier_, v5);

    if (v6)
    {
      sub_1C284F900();
      sub_1C28CD5B0();

      type metadata accessor for ColorRepresentation(0);
LABEL_6:
      swift_storeEnumTagMultiPayload();
      return;
    }
    char v14 = 1;
    goto LABEL_23;
  }
  if (objc_msgSend(a1, sel_hasDisplayCategoryIdentifier))
  {
    id v7 = objc_msgSend(a1, sel_displayCategoryIdentifier);

    *a2 = v7;
    type metadata accessor for ColorRepresentation(0);
    goto LABEL_6;
  }
  if (!objc_msgSend(a1, sel_hasSemanticColorName))
  {
    if (objc_msgSend(a1, sel_hasRgbConfiguration))
    {
      id v15 = objc_msgSend(a1, sel_rgbConfiguration);
      if (v15)
      {
        uint64_t v16 = v15;
        if (objc_msgSend(v15, sel_hasRed)
          && objc_msgSend(v16, sel_hasGreen)
          && objc_msgSend(v16, sel_hasBlue)
          && objc_msgSend(v16, sel_hasAlpha))
        {
          objc_msgSend(v16, sel_red);
          uint64_t v18 = v17;
          objc_msgSend(v16, sel_green);
          uint64_t v20 = v19;
          objc_msgSend(v16, sel_blue);
          uint64_t v22 = v21;
          objc_msgSend(v16, sel_alpha);
          uint64_t v24 = v23;

          *a2 = v18;
          a2[1] = v20;
          a2[2] = v22;
          a2[3] = v24;
          type metadata accessor for ColorRepresentation(0);
          goto LABEL_6;
        }
      }
      char v14 = 4;
    }
    else
    {
      char v14 = 0;
    }
    goto LABEL_23;
  }
  id v8 = objc_msgSend(a1, sel_semanticColorName);
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = sub_1C28CD730();
    double v12 = v11;

    v13._countAndFlagsBits = v10;
    v13._object = v12;
    SemanticColorProvider.init(rawValue:)(v13);
    if (v26 != 4)
    {

      *(unsigned char *)a2 = v26;
      type metadata accessor for ColorRepresentation(0);
      goto LABEL_6;
    }
    char v14 = 3;
LABEL_23:
    sub_1C284FCA0();
    swift_allocError();
    char *v25 = v14;
    swift_willThrow();

    return;
  }
  __break(1u);
}

unint64_t sub_1C284FCA0()
{
  unint64_t result = qword_1EA310C10;
  if (!qword_1EA310C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310C10);
  }
  return result;
}

unsigned char *_s30ColorRepresentationCodingErrorOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C284FDC0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s30ColorRepresentationCodingErrorOMa()
{
  return &_s30ColorRepresentationCodingErrorON;
}

unint64_t sub_1C284FDFC()
{
  unint64_t result = qword_1EA310C18;
  if (!qword_1EA310C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310C18);
  }
  return result;
}

uint64_t FeatureStatusConfiguration.uniqueIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.uniqueIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*FeatureStatusConfiguration.uniqueIdentifier.modify())()
{
  return nullsub_1;
}

uint64_t FeatureStatusConfiguration.titleName.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.analyticsDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.isSensitiveFeature.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t FeatureStatusConfiguration.isSensitiveFeature.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 48) = result;
  return result;
}

uint64_t (*FeatureStatusConfiguration.isSensitiveFeature.modify())()
{
  return nullsub_1;
}

void FeatureStatusConfiguration.featureStatusKind.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 49);
}

unsigned char *FeatureStatusConfiguration.featureStatusKind.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 49) = *result;
  return result;
}

uint64_t (*FeatureStatusConfiguration.featureStatusKind.modify())()
{
  return nullsub_1;
}

uint64_t FeatureStatusConfiguration.imageData.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeatureStatusConfiguration();
  return sub_1C2850184(v1 + *(int *)(v3 + 36), a1, (uint64_t (*)(void))sub_1C284FFEC);
}

void sub_1C284FFEC(uint64_t a1)
{
}

uint64_t FeatureStatusConfiguration.accessoryTitle.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 40));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.primaryDescriptionContent.getter()
{
  type metadata accessor for FeatureStatusConfiguration();

  return swift_bridgeObjectRetain();
}

uint64_t FeatureStatusConfiguration.secondaryDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 48));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.footerMarkdown.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 52));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.isOnboardingCompleted.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 56));
}

uint64_t FeatureStatusConfiguration.countryRecord.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = type metadata accessor for FeatureStatusConfiguration();
  return sub_1C2850184(v1 + *(int *)(v3 + 60), a1, (uint64_t (*)(void))sub_1C28501EC);
}

uint64_t sub_1C2850184(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_1C28501EC(uint64_t a1)
{
}

void sub_1C2850220(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t FeatureStatusConfiguration.reuseIdentifier.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 64));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t FeatureStatusConfiguration.reuseIdentifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for FeatureStatusConfiguration() + 64));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*FeatureStatusConfiguration.reuseIdentifier.modify())(void)
{
  return nullsub_1;
}

uint64_t sub_1C2850354(unint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6)
{
  swift_bridgeObjectRetain();
  sub_1C28CDF80();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  swift_bridgeObjectRetain();
  sub_1C28CDF80();
  uint64_t v15 = v14;
  uint64_t result = swift_bridgeObjectRelease();
  if ((v15 & 0x1000000000000000) != 0) {
    goto LABEL_25;
  }
  uint64_t v17 = (a5 >> 59) & 1;
  if ((a6 & 0x1000000000000000) == 0) {
    LOBYTE(v17) = 1;
  }
  uint64_t v18 = 4 << v17;
  unint64_t v19 = a1;
  if ((a1 & 0xC) == 4 << v17)
  {
    uint64_t result = sub_1C28526AC(a1, a5, a6);
    unint64_t v19 = result;
  }
  uint64_t v40 = a3;
  unint64_t v20 = a2;
  unint64_t v21 = a5 & 0x800000000000000;
  if ((a6 & 0x1000000000000000) != 0)
  {
    uint64_t v23 = a6 & 0x2000000000000000;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    if ((a6 & 0x2000000000000000) != 0) {
      unint64_t v32 = HIBYTE(a6) & 0xF;
    }
    else {
      unint64_t v32 = a5 & 0xFFFFFFFFFFFFLL;
    }
    if (v32 < v19 >> 16) {
      goto LABEL_43;
    }
    uint64_t result = sub_1C28CD7F0();
    uint64_t v22 = result;
    if (v21) {
      uint64_t v26 = 7;
    }
    else {
      uint64_t v26 = 11;
    }
  }
  else
  {
    uint64_t v22 = v19 >> 16;
    uint64_t v23 = a6 & 0x2000000000000000;
    unint64_t v24 = HIBYTE(a6) & 0xF;
    uint64_t v25 = a5 & 0xFFFFFFFFFFFFLL;
    uint64_t v26 = 7;
  }
  if (!v23) {
    unint64_t v24 = v25;
  }
  uint64_t v27 = 4 << (v21 >> 59);
  unint64_t v28 = v26 | (v24 << 16);
  a2 = v20;
  if ((a6 & 0x1000000000000000) == 0) {
    uint64_t v27 = 8;
  }
  unint64_t v29 = v20;
  if ((v20 & 0xC) == v27)
  {
    unint64_t v33 = v20;
    uint64_t v34 = v22;
    uint64_t result = sub_1C28526AC(v33, a5, a6);
    uint64_t v22 = v34;
    unint64_t v29 = result;
  }
  if ((v26 & 0xC) == v18)
  {
    unint64_t v35 = v26 | (v24 << 16);
    uint64_t v36 = v22;
    uint64_t result = sub_1C28526AC(v35, a5, a6);
    uint64_t v22 = v36;
    unint64_t v28 = result;
    if ((a6 & 0x1000000000000000) == 0)
    {
LABEL_17:
      uint64_t v30 = (v28 >> 16) - (v29 >> 16);
      if ((a4 & 0x1000000000000000) == 0) {
        goto LABEL_18;
      }
      goto LABEL_37;
    }
  }
  else if ((a6 & 0x1000000000000000) == 0)
  {
    goto LABEL_17;
  }
  if (v24 < v29 >> 16)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v24 >= v28 >> 16)
  {
    uint64_t v37 = v22;
    uint64_t v38 = sub_1C28CD7F0();
    uint64_t v22 = v37;
    uint64_t v30 = v38;
    if ((a4 & 0x1000000000000000) == 0)
    {
LABEL_18:
      if ((a4 & 0x2000000000000000) != 0)
      {
        uint64_t result = HIBYTE(a4) & 0xF;
        uint64_t v31 = v22 + result;
        if (!__OFADD__(v22, result)) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v40 & 0xFFFFFFFFFFFFLL;
        uint64_t v31 = v22 + (v40 & 0xFFFFFFFFFFFFLL);
        if (!__OFADD__(v22, v40 & 0xFFFFFFFFFFFFLL)) {
          goto LABEL_23;
        }
      }
      goto LABEL_39;
    }
LABEL_37:
    uint64_t v39 = v22;
    uint64_t result = sub_1C28CD7D0();
    uint64_t v31 = v39 + result;
    if (!__OFADD__(v39, result))
    {
LABEL_23:
      uint64_t result = v31 + v30;
      if (!__OFADD__(v31, v30))
      {
        MEMORY[0x1C875ED10](result);
LABEL_25:
        sub_1C28CD820();
        sub_1C2856218();
        sub_1C28CD7B0();
        swift_bridgeObjectRelease();
        sub_1C28CD7B0();
        sub_1C2852728(a2, a5, a6);
        sub_1C28CD7B0();
        swift_bridgeObjectRelease();
        return 0;
      }
      goto LABEL_40;
    }
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

uint64_t FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerDescription:footerLinkTitle:footerLinkURL:isOnboardingCompleted:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char *a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, long long a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned __int8 a17)
{
  uint64_t v40 = a4;
  uint64_t v41 = a7;
  uint64_t v38 = a2;
  uint64_t v39 = a3;
  uint64_t v36 = a8;
  uint64_t v37 = a1;
  long long v35 = a9;
  uint64_t v33 = a11;
  uint64_t v34 = a10;
  int v32 = a17;
  sub_1C28501EC(0);
  MEMORY[0x1F4188790](v19 - 8);
  unint64_t v21 = &v31[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1C284FFEC(0);
  MEMORY[0x1F4188790](v22 - 8);
  unint64_t v24 = &v31[-((v23 + 15) & 0xFFFFFFFFFFFFFFF0)];
  char v25 = *a5;
  unint64_t v26 = sub_1C285318C(a12, a13, a16, a14, a15);
  uint64_t v28 = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v42[0] = v25;
  sub_1C2850184(a6, (uint64_t)v24, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v29 = sub_1C28CCAF0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v21, 1, 1, v29);
  FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerMarkdown:isOnboardingCompleted:countryRecord:)(v37, v38, v39, v40, 0, v42, (uint64_t)v24, v41, v36, v35, *((uint64_t *)&v35 + 1), v34, v33, v26, v28, v32, (uint64_t)v21);
  sub_1C2853630(a16, (uint64_t (*)(void))sub_1C27C3244);
  return sub_1C2853630(a6, (uint64_t (*)(void))sub_1C284FFEC);
}

uint64_t FeatureStatusConfiguration.init(titleName:analyticsDescription:isSensitiveFeature:featureStatusKind:imageData:accessoryTitle:primaryDescriptionContent:secondaryDescription:footerMarkdown:isOnboardingCompleted:countryRecord:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, char *a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17)
{
  char v24 = *a6;
  char v25 = (int *)type metadata accessor for FeatureStatusConfiguration();
  unint64_t v26 = (void *)(a9 + v25[16]);
  *unint64_t v26 = 0xD000000000000016;
  v26[1] = 0x80000001C28DC9A0;
  *(void *)(a9 + 16) = a1;
  *(void *)(a9 + 24) = a2;
  *(void *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = a4;
  *(unsigned char *)(a9 + 48) = a5;
  *(unsigned char *)(a9 + 49) = v24;
  sub_1C2850184(a7, a9 + v25[9], (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v27 = (void *)(a9 + v25[10]);
  *uint64_t v27 = a8;
  v27[1] = a10;
  *(void *)(a9 + v25[11]) = a11;
  uint64_t v28 = (void *)(a9 + v25[12]);
  *uint64_t v28 = a12;
  v28[1] = a13;
  uint64_t v29 = (void *)(a9 + v25[13]);
  *uint64_t v29 = a14;
  v29[1] = a15;
  *(unsigned char *)(a9 + v25[14]) = a16;
  sub_1C2850184(a17, a9 + v25[15], (uint64_t (*)(void))sub_1C28501EC);
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  sub_1C2853630(a17, (uint64_t (*)(void))sub_1C28501EC);
  uint64_t result = sub_1C2853630(a7, (uint64_t (*)(void))sub_1C284FFEC);
  *(void *)a9 = 0xD00000000000001BLL;
  *(void *)(a9 + 8) = 0x80000001C28DC9C0;
  return result;
}

uint64_t FeatureStatusConfiguration.init(data:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = type metadata accessor for FeatureStatusConfiguration();
  uint64_t v7 = MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a3 + 48) = 0;
  uint64_t v10 = (void *)(a3 + *(int *)(v7 + 64));
  *uint64_t v10 = 0xD000000000000016;
  v10[1] = 0x80000001C28DC9A0;
  sub_1C28CBEB0();
  swift_allocObject();
  sub_1C28CBEA0();
  sub_1C285619C(&qword_1EA310C20, (void (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration);
  sub_1C28CBE90();
  sub_1C27E2870(a1, a2);
  swift_release();
  return sub_1C2853690((uint64_t)v9, a3, (uint64_t (*)(void))type metadata accessor for FeatureStatusConfiguration);
}

uint64_t FeatureStatusConfiguration.init(userData:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = type metadata accessor for FeatureStatusConfiguration();
  uint64_t v8 = MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(unsigned char *)(a3 + 48) = 0;
  double v11 = (void *)(a3 + *(int *)(v8 + 64));
  *double v11 = 0xD000000000000016;
  v11[1] = 0x80000001C28DC9A0;
  sub_1C28CBEB0();
  swift_allocObject();
  sub_1C28CBEA0();
  sub_1C285619C(&qword_1EA310C20, (void (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration);
  sub_1C28CBE90();
  sub_1C27E2870(a1, a2);
  uint64_t result = swift_release();
  if (!v3) {
    return sub_1C2853690((uint64_t)v10, a3, (uint64_t (*)(void))type metadata accessor for FeatureStatusConfiguration);
  }
  return result;
}

uint64_t FeatureStatusConfiguration.encode()()
{
  sub_1C28CBEE0();
  swift_allocObject();
  sub_1C28CBED0();
  type metadata accessor for FeatureStatusConfiguration();
  sub_1C285619C(&qword_1EBB76958, (void (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration);
  uint64_t v0 = sub_1C28CBEC0();
  swift_release();
  return v0;
}

uint64_t FeatureStatusConfiguration.hash(into:)()
{
  uint64_t v1 = sub_1C28CCAF0();
  uint64_t v21 = *(void *)(v1 - 8);
  MEMORY[0x1F4188790](v1);
  uint64_t v20 = (char *)&v20 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28501EC(0);
  MEMORY[0x1F4188790](v3 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ImageRepresentation();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x1F4188790](v6);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C284FFEC(0);
  MEMORY[0x1F4188790](v10 - 8);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  sub_1C28CE720();
  sub_1C28CD790();
  swift_bridgeObjectRelease();
  uint64_t v13 = (int *)type metadata accessor for FeatureStatusConfiguration();
  sub_1C2850184(v0 + v13[9], (uint64_t)v12, (uint64_t (*)(void))sub_1C284FFEC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    sub_1C2853690((uint64_t)v12, (uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    sub_1C28CE720();
    ImageRepresentation.hash(into:)();
    sub_1C2853630((uint64_t)v9, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  }
  if (*(void *)(v0 + v13[10] + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  uint64_t v14 = *(void *)(v0 + v13[11]);
  if (v14)
  {
    sub_1C28CE720();
    sub_1C28CE710();
    uint64_t v15 = *(void *)(v14 + 16);
    if (v15)
    {
      swift_bridgeObjectRetain();
      uint64_t v16 = v14 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1C28CD790();
        swift_bridgeObjectRelease();
        v16 += 16;
        --v15;
      }
      while (v15);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1C28CE720();
  }
  if (*(void *)(v0 + v13[12] + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  uint64_t v17 = v21;
  if (*(void *)(v0 + v13[13] + 8))
  {
    sub_1C28CE720();
    swift_bridgeObjectRetain();
    sub_1C28CD790();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1C28CE720();
  }
  if (*(unsigned char *)(v0 + v13[14]) != 2) {
    sub_1C28CE720();
  }
  sub_1C28CE720();
  sub_1C2850184(v0 + v13[15], (uint64_t)v5, (uint64_t (*)(void))sub_1C28501EC);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v5, 1, v1) == 1)
  {
    sub_1C28CE720();
  }
  else
  {
    uint64_t v18 = v20;
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v20, v5, v1);
    sub_1C28CE720();
    sub_1C285619C(&qword_1EA310C28, MEMORY[0x1E4F67398]);
    sub_1C28CD680();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v18, v1);
  }
  swift_bridgeObjectRetain();
  sub_1C28CD790();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1C2851634(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6D614E656C746974;
      break;
    case 2:
    case 8:
      unint64_t result = 0xD000000000000014;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 5:
      unint64_t result = 0x7461446567616D69;
      break;
    case 6:
      unint64_t result = 0x726F737365636361;
      break;
    case 7:
      unint64_t result = 0xD000000000000019;
      break;
    case 9:
      unint64_t result = 0x614D7265746F6F66;
      break;
    case 10:
      unint64_t result = 0xD000000000000015;
      break;
    case 11:
      unint64_t result = 0x527972746E756F63;
      break;
    case 12:
      unint64_t result = 0x6564496573756572;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C28517E8()
{
  return sub_1C2851634(*v0);
}

uint64_t sub_1C28517F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2855B68(a1, a2);
  *a3 = result;
  return result;
}

void sub_1C2851818(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_1C2851824(uint64_t a1)
{
  unint64_t v2 = sub_1C28536F8();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2851860(uint64_t a1)
{
  unint64_t v2 = sub_1C28536F8();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t FeatureStatusConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  sub_1C28537A0(0, &qword_1EBB76A20, MEMORY[0x1E4FBBDE0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v12 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28536F8();
  sub_1C28CE800();
  LOBYTE(v12) = 0;
  sub_1C28CE5A0();
  if (!v2)
  {
    LOBYTE(v12) = 1;
    sub_1C28CE5A0();
    LOBYTE(v12) = 2;
    sub_1C28CE5A0();
    LOBYTE(v12) = 3;
    sub_1C28CE5B0();
    LOBYTE(v12) = *(unsigned char *)(v3 + 49);
    char v13 = 4;
    sub_1C285374C();
    sub_1C28CE5E0();
    uint64_t v10 = type metadata accessor for FeatureStatusConfiguration();
    LOBYTE(v12) = 5;
    type metadata accessor for ImageRepresentation();
    sub_1C285619C(&qword_1EBB74FA0, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
    sub_1C28CE590();
    LOBYTE(v12) = 6;
    sub_1C28CE560();
    uint64_t v12 = *(void *)(v3 + *(int *)(v10 + 44));
    char v13 = 7;
    sub_1C27E963C();
    sub_1C2853858(&qword_1EBB76A00);
    sub_1C28CE590();
    LOBYTE(v12) = 8;
    sub_1C28CE560();
    LOBYTE(v12) = 9;
    sub_1C28CE560();
    LOBYTE(v12) = 10;
    sub_1C28CE570();
    LOBYTE(v12) = 11;
    sub_1C28CCAF0();
    sub_1C285619C(&qword_1EBB74CF8, MEMORY[0x1E4F67398]);
    sub_1C28CE590();
    LOBYTE(v12) = 12;
    sub_1C28CE5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t FeatureStatusConfiguration.hashValue.getter()
{
  return sub_1C28CE740();
}

uint64_t FeatureStatusConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v39 = a2;
  sub_1C28501EC(0);
  MEMORY[0x1F4188790](v4 - 8);
  uint64_t v6 = (char *)&v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C284FFEC(0);
  MEMORY[0x1F4188790](v7 - 8);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28537A0(0, &qword_1EA310C30, MEMORY[0x1E4FBBDC0]);
  uint64_t v41 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  char v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for FeatureStatusConfiguration();
  uint64_t v15 = MEMORY[0x1F4188790](v14);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned char v17[48] = 0;
  long long v43 = a1;
  uint64_t v44 = (int *)v15;
  uint64_t v18 = &v17[*(int *)(v15 + 64)];
  *(void *)uint64_t v18 = 0xD000000000000016;
  *((void *)v18 + 1) = 0x80000001C28DC9A0;
  uint64_t v42 = v18;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C28536F8();
  uint64_t v40 = v13;
  sub_1C28CE7F0();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v38 = v6;
    LOBYTE(v45) = 0;
    uint64_t v19 = sub_1C28CE4E0();
    uint64_t v20 = v44;
    *(void *)uint64_t v17 = v19;
    *((void *)v17 + 1) = v21;
    LOBYTE(v45) = 1;
    *((void *)v17 + 2) = sub_1C28CE4E0();
    *((void *)v17 + 3) = v22;
    LOBYTE(v45) = 2;
    *((void *)v17 + 4) = sub_1C28CE4E0();
    *((void *)v17 + 5) = v23;
    LOBYTE(v45) = 3;
    unsigned char v17[48] = sub_1C28CE4F0() & 1;
    char v46 = 4;
    sub_1C2853804();
    sub_1C28CE520();
    v17[49] = v45;
    type metadata accessor for ImageRepresentation();
    LOBYTE(v45) = 5;
    sub_1C285619C(qword_1EBB76350, (void (*)(uint64_t))type metadata accessor for ImageRepresentation);
    sub_1C28CE4D0();
    sub_1C2853690((uint64_t)v9, (uint64_t)&v17[v20[9]], (uint64_t (*)(void))sub_1C284FFEC);
    LOBYTE(v45) = 6;
    uint64_t v24 = sub_1C28CE4A0();
    char v25 = (uint64_t *)&v17[v20[10]];
    uint64_t *v25 = v24;
    v25[1] = v26;
    sub_1C27E963C();
    char v46 = 7;
    sub_1C2853858(&qword_1EA310C40);
    sub_1C28CE4D0();
    *(void *)&v17[v20[11]] = v45;
    LOBYTE(v45) = 8;
    uint64_t v27 = sub_1C28CE4A0();
    uint64_t v28 = (uint64_t *)&v17[v20[12]];
    *uint64_t v28 = v27;
    v28[1] = v29;
    LOBYTE(v45) = 9;
    uint64_t v30 = sub_1C28CE4A0();
    uint64_t v31 = (uint64_t *)&v17[v44[13]];
    *uint64_t v31 = v30;
    v31[1] = v32;
    LOBYTE(v45) = 10;
    v17[v44[14]] = sub_1C28CE4B0();
    sub_1C28CCAF0();
    LOBYTE(v45) = 11;
    sub_1C285619C(&qword_1EA310C48, MEMORY[0x1E4F67398]);
    sub_1C28CE4D0();
    sub_1C2853690((uint64_t)v38, (uint64_t)&v17[v44[15]], (uint64_t (*)(void))sub_1C28501EC);
    LOBYTE(v45) = 12;
    uint64_t v33 = sub_1C28CE4E0();
    uint64_t v35 = v34;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v40, v41);
    uint64_t v36 = (uint64_t *)v42;
    swift_bridgeObjectRelease();
    *uint64_t v36 = v33;
    v36[1] = v35;
    sub_1C2850184((uint64_t)v17, v39, (uint64_t (*)(void))type metadata accessor for FeatureStatusConfiguration);
    __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)v43);
    return sub_1C2853630((uint64_t)v17, (uint64_t (*)(void))type metadata accessor for FeatureStatusConfiguration);
  }
}

uint64_t sub_1C28525C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureStatusConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C28525D8(void *a1)
{
  return FeatureStatusConfiguration.encode(to:)(a1);
}

uint64_t sub_1C28525F4()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2852638()
{
  return sub_1C28CE740();
}

uint64_t sub_1C2852674(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 64));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1C28526AC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1C28CD800();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = MEMORY[0x1C875ED70](15, a1 >> 16);
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

unint64_t sub_1C2852728(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_1C28CD820();
  }
  __break(1u);
  return result;
}

uint64_t _s16HealthExperience26FeatureStatusConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1C28CCAF0();
  uint64_t v93 = *(void *)(v4 - 8);
  MEMORY[0x1F4188790](v4);
  uint64_t v90 = (char *)&v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28560FC(0);
  uint64_t v92 = v6;
  MEMORY[0x1F4188790](v6);
  uint64_t v94 = (uint64_t)&v86 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C28501EC(0);
  uint64_t v9 = MEMORY[0x1F4188790](v8 - 8);
  uint64_t v91 = (uint64_t)&v86 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x1F4188790](v9);
  uint64_t v95 = (uint64_t)&v86 - v12;
  MEMORY[0x1F4188790](v11);
  uint64_t v96 = (uint64_t)&v86 - v13;
  uint64_t v14 = type metadata accessor for ImageRepresentation();
  uint64_t v97 = *(void *)(v14 - 8);
  MEMORY[0x1F4188790](v14);
  uint64_t v16 = (char *)&v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C285611C(0);
  uint64_t v18 = v17;
  MEMORY[0x1F4188790](v17);
  uint64_t v20 = (char *)&v86 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C284FFEC(0);
  uint64_t v22 = MEMORY[0x1F4188790](v21 - 8);
  uint64_t v24 = (char *)&v86 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x1F4188790](v22);
  uint64_t v27 = (char *)&v86 - v26;
  MEMORY[0x1F4188790](v25);
  uint64_t v29 = (char *)&v86 - v28;
  if (*(void *)a1 != *(void *)a2 || *(void *)(a1 + 8) != *(void *)(a2 + 8))
  {
    char v30 = sub_1C28CE640();
    char v31 = 0;
    if ((v30 & 1) == 0) {
      return v31 & 1;
    }
  }
  if (*(void *)(a1 + 16) != *(void *)(a2 + 16) || *(void *)(a1 + 24) != *(void *)(a2 + 24))
  {
    char v32 = sub_1C28CE640();
    char v31 = 0;
    if ((v32 & 1) == 0) {
      return v31 & 1;
    }
  }
  if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || *(void *)(a1 + 40) != *(void *)(a2 + 40))
  {
    char v33 = sub_1C28CE640();
    char v31 = 0;
    if ((v33 & 1) == 0) {
      return v31 & 1;
    }
  }
  if (*(unsigned __int8 *)(a1 + 48) != *(unsigned __int8 *)(a2 + 48)
    || *(unsigned __int8 *)(a1 + 49) != *(unsigned __int8 *)(a2 + 49))
  {
    goto LABEL_19;
  }
  uint64_t v86 = v4;
  uint64_t v34 = type metadata accessor for FeatureStatusConfiguration();
  unint64_t v89 = v20;
  uint64_t v35 = v34;
  sub_1C2850184(a1 + *(int *)(v34 + 36), (uint64_t)v29, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v87 = (int *)v35;
  uint64_t v36 = *(int *)(v35 + 36);
  uint64_t v37 = (uint64_t)v89;
  sub_1C2850184(a2 + v36, (uint64_t)v27, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v38 = v37 + *(int *)(v18 + 48);
  sub_1C2850184((uint64_t)v29, v37, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v88 = v38;
  sub_1C2850184((uint64_t)v27, v38, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v39 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v97 + 48);
  if (v39(v37, 1, v14) == 1)
  {
    sub_1C2853630((uint64_t)v27, (uint64_t (*)(void))sub_1C284FFEC);
    sub_1C2853630((uint64_t)v29, (uint64_t (*)(void))sub_1C284FFEC);
    if (v39(v88, 1, v14) == 1)
    {
      sub_1C2853630((uint64_t)v89, (uint64_t (*)(void))sub_1C284FFEC);
      goto LABEL_22;
    }
LABEL_17:
    uint64_t v41 = sub_1C285611C;
    uint64_t v42 = (uint64_t)v89;
    goto LABEL_18;
  }
  sub_1C2850184((uint64_t)v89, (uint64_t)v24, (uint64_t (*)(void))sub_1C284FFEC);
  uint64_t v40 = v88;
  if (v39(v88, 1, v14) == 1)
  {
    sub_1C2853630((uint64_t)v27, (uint64_t (*)(void))sub_1C284FFEC);
    sub_1C2853630((uint64_t)v29, (uint64_t (*)(void))sub_1C284FFEC);
    sub_1C2853630((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    goto LABEL_17;
  }
  sub_1C2853690(v40, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  char v44 = static ImageRepresentation.== infix(_:_:)((uint64_t)v24, (uint64_t)v16);
  sub_1C2853630((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  sub_1C2853630((uint64_t)v27, (uint64_t (*)(void))sub_1C284FFEC);
  sub_1C2853630((uint64_t)v29, (uint64_t (*)(void))sub_1C284FFEC);
  sub_1C2853630((uint64_t)v24, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
  sub_1C2853630((uint64_t)v89, (uint64_t (*)(void))sub_1C284FFEC);
  if ((v44 & 1) == 0) {
    goto LABEL_19;
  }
LABEL_22:
  uint64_t v45 = v87;
  uint64_t v46 = v87[10];
  uint64_t v47 = (void *)(a1 + v46);
  uint64_t v48 = *(void *)(a1 + v46 + 8);
  uint64_t v49 = (void *)(a2 + v46);
  uint64_t v50 = v49[1];
  if (v48)
  {
    uint64_t v51 = v86;
    if (!v50) {
      goto LABEL_19;
    }
    if (*v47 != *v49 || v48 != v50)
    {
      char v52 = sub_1C28CE640();
      char v31 = 0;
      if ((v52 & 1) == 0) {
        return v31 & 1;
      }
    }
  }
  else
  {
    uint64_t v51 = v86;
    if (v50) {
      goto LABEL_19;
    }
  }
  uint64_t v53 = v45[11];
  uint64_t v54 = *(void **)(a1 + v53);
  BOOL v55 = *(void **)(a2 + v53);
  if (v54)
  {
    if (!v55 || (sub_1C2862060(v54, v55) & 1) == 0) {
      goto LABEL_19;
    }
  }
  else if (v55)
  {
    goto LABEL_19;
  }
  uint64_t v56 = v45[12];
  uint64_t v57 = (void *)(a1 + v56);
  uint64_t v58 = *(void *)(a1 + v56 + 8);
  uint64_t v59 = (void *)(a2 + v56);
  uint64_t v60 = v59[1];
  if (v58)
  {
    if (!v60) {
      goto LABEL_19;
    }
    if (*v57 != *v59 || v58 != v60)
    {
      char v61 = sub_1C28CE640();
      char v31 = 0;
      if ((v61 & 1) == 0) {
        return v31 & 1;
      }
    }
  }
  else if (v60)
  {
    goto LABEL_19;
  }
  uint64_t v62 = v45[13];
  uint64_t v63 = (void *)(a1 + v62);
  uint64_t v64 = *(void *)(a1 + v62 + 8);
  BOOL v65 = (void *)(a2 + v62);
  uint64_t v66 = v65[1];
  if (!v64)
  {
    if (v66) {
      goto LABEL_19;
    }
LABEL_48:
    uint64_t v68 = v45[14];
    int v69 = *(unsigned __int8 *)(a1 + v68);
    int v70 = *(unsigned __int8 *)(a2 + v68);
    if (v69 == 2)
    {
      if (v70 != 2) {
        goto LABEL_19;
      }
    }
    else
    {
      char v31 = 0;
      BOOL v71 = (v69 & 1) == 0;
      if (v70 == 2 || ((v71 ^ v70) & 1) == 0) {
        return v31 & 1;
      }
    }
    uint64_t v72 = v96;
    sub_1C2850184(a1 + v45[15], v96, (uint64_t (*)(void))sub_1C28501EC);
    uint64_t v73 = v95;
    sub_1C2850184(a2 + v45[15], v95, (uint64_t (*)(void))sub_1C28501EC);
    uint64_t v74 = v94;
    uint64_t v75 = v94 + *(int *)(v92 + 48);
    sub_1C2850184(v72, v94, (uint64_t (*)(void))sub_1C28501EC);
    sub_1C2850184(v73, v75, (uint64_t (*)(void))sub_1C28501EC);
    uint64_t v76 = v93;
    uint64_t v77 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v93 + 48);
    if (v77(v74, 1, v51) == 1)
    {
      sub_1C2853630(v73, (uint64_t (*)(void))sub_1C28501EC);
      sub_1C2853630(v72, (uint64_t (*)(void))sub_1C28501EC);
      if (v77(v75, 1, v51) == 1)
      {
        sub_1C2853630(v74, (uint64_t (*)(void))sub_1C28501EC);
LABEL_60:
        uint64_t v82 = v87[16];
        uint64_t v83 = *(void *)(a1 + v82);
        uint64_t v84 = *(void *)(a1 + v82 + 8);
        uint64_t v85 = (void *)(a2 + v82);
        if (v83 == *v85 && v84 == v85[1]) {
          char v31 = 1;
        }
        else {
          char v31 = sub_1C28CE640();
        }
        return v31 & 1;
      }
    }
    else
    {
      uint64_t v78 = v91;
      sub_1C2850184(v74, v91, (uint64_t (*)(void))sub_1C28501EC);
      if (v77(v75, 1, v51) != 1)
      {
        unint64_t v79 = v90;
        (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v90, v75, v51);
        sub_1C285619C(&qword_1EA310C70, MEMORY[0x1E4F67398]);
        char v80 = sub_1C28CD6E0();
        uint64_t v81 = *(void (**)(char *, uint64_t))(v76 + 8);
        v81(v79, v51);
        sub_1C2853630(v95, (uint64_t (*)(void))sub_1C28501EC);
        sub_1C2853630(v96, (uint64_t (*)(void))sub_1C28501EC);
        v81((char *)v78, v51);
        sub_1C2853630(v74, (uint64_t (*)(void))sub_1C28501EC);
        if (v80) {
          goto LABEL_60;
        }
LABEL_19:
        char v31 = 0;
        return v31 & 1;
      }
      sub_1C2853630(v95, (uint64_t (*)(void))sub_1C28501EC);
      sub_1C2853630(v96, (uint64_t (*)(void))sub_1C28501EC);
      (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v78, v51);
    }
    uint64_t v41 = sub_1C28560FC;
    uint64_t v42 = v74;
LABEL_18:
    sub_1C2853630(v42, (uint64_t (*)(void))v41);
    goto LABEL_19;
  }
  if (!v66) {
    goto LABEL_19;
  }
  if (*v63 == *v65 && v64 == v66) {
    goto LABEL_48;
  }
  char v67 = sub_1C28CE640();
  char v31 = 0;
  if (v67) {
    goto LABEL_48;
  }
  return v31 & 1;
}

unint64_t sub_1C285318C(unint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_1C27C3244();
  uint64_t v11 = MEMORY[0x1F4188790](v10 - 8);
  uint64_t v13 = (char *)v33 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x1F4188790](v11);
  uint64_t v16 = (char *)v33 - v15;
  MEMORY[0x1F4188790](v14);
  uint64_t v18 = (char *)v33 - v17;
  sub_1C28561E4(0);
  MEMORY[0x1F4188790](v19 - 8);
  uint64_t v21 = (char *)v33 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a2)
  {
    if (a5)
    {
      unint64_t v34 = a1;
      unint64_t v35 = a2;
      v33[0] = a4;
      v33[1] = a5;
      uint64_t v22 = sub_1C28CC4C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v21, 1, 1, v22);
      sub_1C27D633C();
      swift_bridgeObjectRetain();
      unint64_t v23 = sub_1C28CDFF0();
      unint64_t v25 = v24;
      char v27 = v26;
      sub_1C2853630((uint64_t)v21, (uint64_t (*)(void))sub_1C28561E4);
      if ((v27 & 1) == 0)
      {
        unint64_t v34 = 91;
        unint64_t v35 = 0xE100000000000000;
        sub_1C28CD7C0();
        sub_1C28CD7C0();
        sub_1C2850184(a3, (uint64_t)v18, (uint64_t (*)(void))sub_1C27C3244);
        uint64_t v28 = sub_1C28CC330();
        uint64_t v29 = *(void *)(v28 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v18, 1, v28) == 1)
        {
          sub_1C2853630((uint64_t)v18, (uint64_t (*)(void))sub_1C27C3244);
        }
        else
        {
          sub_1C28CC2A0();
          (*(void (**)(char *, uint64_t))(v29 + 8))(v18, v28);
        }
        sub_1C28CD7C0();
        swift_bridgeObjectRelease();
        sub_1C28CD7C0();
        a1 = sub_1C2850354(v23, v25, v34, v35, a1, a2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
      sub_1C2850184(a3, (uint64_t)v16, (uint64_t (*)(void))sub_1C27C3244);
      swift_bridgeObjectRetain();
      sub_1C2853630((uint64_t)v16, (uint64_t (*)(void))sub_1C27C3244);
    }
  }
  else
  {
    sub_1C2850184(a3, (uint64_t)v16, (uint64_t (*)(void))sub_1C27C3244);
    sub_1C2850184((uint64_t)v16, (uint64_t)v13, (uint64_t (*)(void))sub_1C27C3244);
    uint64_t v30 = sub_1C28CC330();
    uint64_t v31 = *(void *)(v30 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v31 + 48))(v13, 1, v30) == 1)
    {
      sub_1C2853630((uint64_t)v16, (uint64_t (*)(void))sub_1C27C3244);
      sub_1C2853630((uint64_t)v13, (uint64_t (*)(void))sub_1C27C3244);
      return 0;
    }
    else
    {
      a1 = sub_1C28CC2A0();
      sub_1C2853630((uint64_t)v16, (uint64_t (*)(void))sub_1C27C3244);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v13, v30);
    }
  }
  return a1;
}

uint64_t sub_1C2853630(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_1C2853690(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_1C28536F8()
{
  unint64_t result = qword_1EBB76940;
  if (!qword_1EBB76940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76940);
  }
  return result;
}

unint64_t sub_1C285374C()
{
  unint64_t result = qword_1EBB76938;
  if (!qword_1EBB76938)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76938);
  }
  return result;
}

void sub_1C28537A0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C28536F8();
    unint64_t v7 = a3(a1, &type metadata for FeatureStatusConfiguration.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

unint64_t sub_1C2853804()
{
  unint64_t result = qword_1EA310C38;
  if (!qword_1EA310C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310C38);
  }
  return result;
}

uint64_t sub_1C2853858(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1C27E963C();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C28538B8()
{
  return sub_1C285619C(&qword_1EA310C50, (void (*)(uint64_t))type metadata accessor for FeatureStatusConfiguration);
}

void *initializeBufferWithCopyOfBuffer for FeatureStatusConfiguration(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = (void *)a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v16 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
    return v4;
  }
  uint64_t v7 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v7;
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = v8;
  uint64_t v9 = a2[4];
  uint64_t v10 = a2[5];
  *(_WORD *)(a1 + 48) = *((_WORD *)a2 + 24);
  uint64_t v11 = a3[9];
  __dst = (uint64_t *)(a1 + v11);
  uint64_t v62 = (uint64_t *)((char *)a2 + v11);
  *(void *)(a1 + 32) = v9;
  *(void *)(a1 + 40) = v10;
  uint64_t v12 = type metadata accessor for ImageRepresentation();
  uint64_t v13 = *(void **)(v12 - 8);
  uint64_t v14 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v13[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!v14(v62, 1, v12))
  {
    uint64_t v58 = (void (**)(uint64_t *, void, uint64_t, uint64_t))v13;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v27 = v12;
      uint64_t v28 = *v62;
      unint64_t v29 = v62[1];
      sub_1C27E2B38(*v62, v29);
      uint64_t v18 = __dst;
      uint64_t *__dst = v28;
      __dst[1] = v29;
      uint64_t v12 = v27;
      __dst[2] = v62[2];
    }
    else
    {
      uint64_t v18 = __dst;
      if (EnumCaseMultiPayload != 1)
      {
        uint64_t v30 = (void (**)(uint64_t *, void, uint64_t, uint64_t))v13;
        uint64_t v31 = v62[1];
        uint64_t *__dst = *v62;
        __dst[1] = v31;
        uint64_t v32 = v62[3];
        __dst[2] = v62[2];
        __dst[3] = v32;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
LABEL_14:
        swift_storeEnumTagMultiPayload();
        v30[7](v18, 0, 1, v12);
        goto LABEL_15;
      }
      uint64_t v57 = v12;
      uint64_t v19 = v62[1];
      uint64_t *__dst = *v62;
      __dst[1] = v19;
      sub_1C27CC3FC();
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v56 = (char *)__dst + v21;
      uint64_t v63 = (char *)v62 + v21;
      sub_1C27CCDC8(0);
      uint64_t v23 = v22;
      uint64_t v24 = *(void *)(v22 - 8);
      unint64_t v25 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48);
      swift_bridgeObjectRetain();
      if (v25(v63, 1, v23))
      {
        sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
        memcpy(v56, v63, *(void *)(*(void *)(v26 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v24 + 16))(v56, v63, v23);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v24 + 56))(v56, 0, 1, v23);
      }
      uint64_t v18 = __dst;
      uint64_t v12 = v57;
    }
    uint64_t v30 = v58;
    goto LABEL_14;
  }
  sub_1C284FFEC(0);
  memcpy(__dst, v62, *(void *)(*(void *)(v15 - 8) + 64));
LABEL_15:
  uint64_t v33 = a3[10];
  uint64_t v34 = a3[11];
  unint64_t v35 = (void *)((char *)v4 + v33);
  uint64_t v36 = (uint64_t *)((char *)a2 + v33);
  uint64_t v37 = v36[1];
  *unint64_t v35 = *v36;
  v35[1] = v37;
  *(void *)((char *)v4 + v34) = *(uint64_t *)((char *)a2 + v34);
  uint64_t v38 = a3[12];
  uint64_t v39 = a3[13];
  uint64_t v40 = (void *)((char *)v4 + v38);
  uint64_t v41 = (uint64_t *)((char *)a2 + v38);
  uint64_t v42 = v41[1];
  void *v40 = *v41;
  v40[1] = v42;
  long long v43 = (void *)((char *)v4 + v39);
  char v44 = (uint64_t *)((char *)a2 + v39);
  uint64_t v45 = v44[1];
  *long long v43 = *v44;
  v43[1] = v45;
  uint64_t v46 = a3[15];
  *((unsigned char *)v4 + a3[14]) = *((unsigned char *)a2 + a3[14]);
  uint64_t v59 = (char *)v4 + v46;
  __dsta = a3;
  uint64_t v47 = (char *)a2 + v46;
  uint64_t v48 = sub_1C28CCAF0();
  uint64_t v49 = *(void *)(v48 - 8);
  uint64_t v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v49 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v64(v47, 1, v48))
  {
    sub_1C28501EC(0);
    memcpy(v59, v47, *(void *)(*(void *)(v50 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v59, v47, v48);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v49 + 56))(v59, 0, 1, v48);
  }
  uint64_t v51 = __dsta[16];
  char v52 = (void *)((char *)v4 + v51);
  uint64_t v53 = (uint64_t *)((char *)a2 + v51);
  uint64_t v54 = v53[1];
  *char v52 = *v53;
  v52[1] = v54;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t destroy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 36);
  uint64_t v5 = type metadata accessor for ImageRepresentation();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v4, 1, v5))
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 2:
        sub_1C27E2870(*(void *)v4, *(void *)(v4 + 8));
        break;
      case 1:
        swift_bridgeObjectRelease();
        sub_1C27CC3FC();
        uint64_t v12 = v4 + *(int *)(v11 + 48);
        sub_1C27CCDC8(0);
        uint64_t v14 = v13;
        uint64_t v15 = *(void *)(v13 - 8);
        if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48))(v12, 1, v13)) {
          (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v12, v14);
        }
        break;
      case 0:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        break;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v6 = a1 + *(int *)(a2 + 60);
  uint64_t v7 = sub_1C28CCAF0();
  uint64_t v8 = *(void *)(v7 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7)) {
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v6;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v9 = a3[9];
  __dst = (uint64_t *)(a1 + v9);
  uint64_t v10 = (uint64_t *)(a2 + v9);
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  uint64_t v11 = type metadata accessor for ImageRepresentation();
  uint64_t v12 = *(void **)(v11 - 8);
  uint64_t v13 = (unsigned int (*)(uint64_t *, uint64_t, uint64_t))v12[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v13(v10, 1, v11))
  {
    sub_1C284FFEC(0);
    memcpy(__dst, v10, *(void *)(*(void *)(v14 - 8) + 64));
  }
  else
  {
    uint64_t v57 = v12;
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2)
    {
      uint64_t v26 = v11;
      uint64_t v27 = *v10;
      unint64_t v28 = v10[1];
      sub_1C27E2B38(*v10, v28);
      uint64_t v16 = __dst;
      uint64_t *__dst = v27;
      __dst[1] = v28;
      uint64_t v11 = v26;
      __dst[2] = v10[2];
    }
    else
    {
      uint64_t v16 = __dst;
      if (EnumCaseMultiPayload == 1)
      {
        uint64_t v56 = v11;
        uint64_t v17 = v10[1];
        uint64_t *__dst = *v10;
        __dst[1] = v17;
        sub_1C27CC3FC();
        uint64_t v19 = *(int *)(v18 + 48);
        BOOL v55 = (char *)__dst + v19;
        uint64_t v20 = (char *)v10 + v19;
        sub_1C27CCDC8(0);
        uint64_t v22 = v21;
        uint64_t v23 = *(void *)(v21 - 8);
        uint64_t v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48);
        swift_bridgeObjectRetain();
        if (v24(v20, 1, v22))
        {
          sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
          memcpy(v55, v20, *(void *)(*(void *)(v25 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v23 + 16))(v55, v20, v22);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v55, 0, 1, v22);
        }
        uint64_t v11 = v56;
        uint64_t v12 = v57;
        uint64_t v16 = __dst;
      }
      else
      {
        uint64_t v29 = v10[1];
        uint64_t *__dst = *v10;
        __dst[1] = v29;
        uint64_t v30 = v10[2];
        uint64_t v31 = v10[3];
        __dst[2] = v30;
        __dst[3] = v31;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
    }
    swift_storeEnumTagMultiPayload();
    ((void (*)(uint64_t *, void, uint64_t, uint64_t))v12[7])(v16, 0, 1, v11);
  }
  uint64_t v32 = a3[10];
  uint64_t v33 = a3[11];
  uint64_t v34 = (void *)(a1 + v32);
  unint64_t v35 = (void *)(a2 + v32);
  uint64_t v36 = v35[1];
  *uint64_t v34 = *v35;
  v34[1] = v36;
  *(void *)(a1 + v33) = *(void *)(a2 + v33);
  uint64_t v37 = a3[12];
  uint64_t v38 = a3[13];
  uint64_t v39 = (void *)(a1 + v37);
  uint64_t v40 = (void *)(a2 + v37);
  uint64_t v41 = v40[1];
  *uint64_t v39 = *v40;
  v39[1] = v41;
  uint64_t v42 = (void *)(a1 + v38);
  long long v43 = (void *)(a2 + v38);
  uint64_t v44 = v43[1];
  void *v42 = *v43;
  v42[1] = v44;
  uint64_t v45 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v58 = (void *)(a1 + v45);
  uint64_t v46 = (const void *)(a2 + v45);
  uint64_t v47 = sub_1C28CCAF0();
  uint64_t v48 = *(void *)(v47 - 8);
  __dsta = *(unsigned int (**)(const void *, uint64_t, uint64_t))(v48 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__dsta(v46, 1, v47))
  {
    sub_1C28501EC(0);
    memcpy(v58, v46, *(void *)(*(void *)(v49 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v48 + 16))(v58, v46, v47);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v48 + 56))(v58, 0, 1, v47);
  }
  uint64_t v50 = a3[16];
  uint64_t v51 = (void *)(a1 + v50);
  char v52 = (void *)(a2 + v50);
  uint64_t v53 = v52[1];
  *uint64_t v51 = *v52;
  v51[1] = v53;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = a3[9];
  uint64_t v7 = (uint64_t *)(a1 + v6);
  uint64_t v8 = (uint64_t *)(a2 + v6);
  uint64_t v9 = type metadata accessor for ImageRepresentation();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48);
  int v12 = v11(v7, 1, v9);
  int v13 = v11(v8, 1, v9);
  if (v12)
  {
    if (!v13)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 2)
      {
        uint64_t v29 = *v8;
        unint64_t v30 = v8[1];
        sub_1C27E2B38(*v8, v30);
        *uint64_t v7 = v29;
        v7[1] = v30;
        void v7[2] = v8[2];
      }
      else if (EnumCaseMultiPayload == 1)
      {
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        sub_1C27CC3FC();
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v57 = (char *)v8 + v16;
        __dst = (char *)v7 + v16;
        sub_1C27CCDC8(0);
        uint64_t v18 = v17;
        uint64_t v55 = *(void *)(v17 - 8);
        uint64_t v56 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v55 + 48);
        swift_bridgeObjectRetain();
        if (v56(v57, 1, v18))
        {
          sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
          memcpy(__dst, v57, *(void *)(*(void *)(v19 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v55 + 16))(__dst, v57, v18);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v55 + 56))(__dst, 0, 1, v18);
        }
      }
      else
      {
        *uint64_t v7 = *v8;
        v7[1] = v8[1];
        void v7[2] = v8[2];
        v7[3] = v8[3];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
      goto LABEL_19;
    }
LABEL_9:
    sub_1C284FFEC(0);
    memcpy(v7, v8, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_19;
  }
  if (v13)
  {
    sub_1C2853630((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    goto LABEL_9;
  }
  if (a1 != a2)
  {
    sub_1C2853630((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
    int v21 = swift_getEnumCaseMultiPayload();
    if (v21 == 2)
    {
      uint64_t v53 = *v8;
      unint64_t v54 = v8[1];
      sub_1C27E2B38(*v8, v54);
      *uint64_t v7 = v53;
      v7[1] = v54;
      void v7[2] = v8[2];
      swift_storeEnumTagMultiPayload();
    }
    else if (v21 == 1)
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      sub_1C27CC3FC();
      uint64_t v23 = *(int *)(v22 + 48);
      uint64_t v58 = (char *)v8 + v23;
      __dsta = (char *)v7 + v23;
      sub_1C27CCDC8(0);
      uint64_t v25 = v24;
      uint64_t v26 = *(void *)(v24 - 8);
      uint64_t v27 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48);
      swift_bridgeObjectRetain();
      if (v27(v58, 1, v25))
      {
        sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
        memcpy(__dsta, v58, *(void *)(*(void *)(v28 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(__dsta, v58, v25);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(__dsta, 0, 1, v25);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      *uint64_t v7 = *v8;
      v7[1] = v8[1];
      void v7[2] = v8[2];
      v7[3] = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_19:
  uint64_t v31 = a3[10];
  uint64_t v32 = (void *)(a1 + v31);
  uint64_t v33 = (void *)(a2 + v31);
  *uint64_t v32 = *v33;
  v32[1] = v33[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v34 = a3[12];
  unint64_t v35 = (void *)(a1 + v34);
  uint64_t v36 = (void *)(a2 + v34);
  *unint64_t v35 = *v36;
  v35[1] = v36[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = a3[13];
  uint64_t v38 = (void *)(a1 + v37);
  uint64_t v39 = (void *)(a2 + v37);
  *uint64_t v38 = *v39;
  v38[1] = v39[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v40 = a3[15];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (void *)(a2 + v40);
  uint64_t v43 = sub_1C28CCAF0();
  uint64_t v44 = *(void *)(v43 - 8);
  uint64_t v45 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v44 + 48);
  int v46 = v45(v41, 1, v43);
  int v47 = v45(v42, 1, v43);
  if (!v46)
  {
    if (!v47)
    {
      (*(void (**)(void *, void *, uint64_t))(v44 + 24))(v41, v42, v43);
      goto LABEL_25;
    }
    (*(void (**)(void *, uint64_t))(v44 + 8))(v41, v43);
    goto LABEL_24;
  }
  if (v47)
  {
LABEL_24:
    sub_1C28501EC(0);
    memcpy(v41, v42, *(void *)(*(void *)(v48 - 8) + 64));
    goto LABEL_25;
  }
  (*(void (**)(void *, void *, uint64_t))(v44 + 16))(v41, v42, v43);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v44 + 56))(v41, 0, 1, v43);
LABEL_25:
  uint64_t v49 = a3[16];
  uint64_t v50 = (void *)(a1 + v49);
  uint64_t v51 = (void *)(a2 + v49);
  *uint64_t v50 = *v51;
  v50[1] = v51[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  uint64_t v7 = a3[9];
  uint64_t v8 = (_OWORD *)(a1 + v7);
  uint64_t v9 = (_OWORD *)(a2 + v7);
  uint64_t v10 = type metadata accessor for ImageRepresentation();
  uint64_t v11 = *(void *)(v10 - 8);
  if ((*(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10))
  {
    sub_1C284FFEC(0);
    memcpy(v8, v9, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *uint64_t v8 = *v9;
      sub_1C27CC3FC();
      uint64_t v14 = *(int *)(v13 + 48);
      uint64_t v15 = (char *)v8 + v14;
      uint64_t v16 = (char *)v9 + v14;
      sub_1C27CCDC8(0);
      uint64_t v18 = v17;
      uint64_t v19 = *(void *)(v17 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v16, 1, v17))
      {
        sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
        memcpy(v15, v16, *(void *)(*(void *)(v20 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v19 + 32))(v15, v16, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v15, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(v8, v9, *(void *)(v11 + 64));
    }
    (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  }
  uint64_t v21 = a3[11];
  *(_OWORD *)(a1 + a3[10]) = *(_OWORD *)(a2 + a3[10]);
  *(void *)(a1 + v21) = *(void *)(a2 + v21);
  uint64_t v22 = a3[13];
  *(_OWORD *)(a1 + a3[12]) = *(_OWORD *)(a2 + a3[12]);
  *(_OWORD *)(a1 + v22) = *(_OWORD *)(a2 + v22);
  uint64_t v23 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v24 = (void *)(a1 + v23);
  uint64_t v25 = (const void *)(a2 + v23);
  uint64_t v26 = sub_1C28CCAF0();
  uint64_t v27 = *(void *)(v26 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v27 + 48))(v25, 1, v26))
  {
    sub_1C28501EC(0);
    memcpy(v24, v25, *(void *)(*(void *)(v28 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v27 + 32))(v24, v25, v26);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v27 + 56))(v24, 0, 1, v26);
  }
  *(_OWORD *)(a1 + a3[16]) = *(_OWORD *)(a2 + a3[16]);
  return a1;
}

uint64_t assignWithTake for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v8;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v9 = a3[9];
  uint64_t v10 = (_OWORD *)(a1 + v9);
  uint64_t v11 = (_OWORD *)(a2 + v9);
  uint64_t v12 = type metadata accessor for ImageRepresentation();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(uint64_t (**)(_OWORD *, uint64_t, uint64_t))(v13 + 48);
  int v15 = v14(v10, 1, v12);
  int v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      if (a1 == a2) {
        goto LABEL_18;
      }
      sub_1C2853630((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *uint64_t v10 = *v11;
        sub_1C27CC3FC();
        uint64_t v28 = *(int *)(v27 + 48);
        uint64_t v29 = (char *)v10 + v28;
        unint64_t v30 = (char *)v11 + v28;
        sub_1C27CCDC8(0);
        uint64_t v32 = v31;
        uint64_t v33 = *(void *)(v31 - 8);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v30, 1, v31))
        {
          sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
          memcpy(v29, v30, *(void *)(*(void *)(v34 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v29, v30, v32);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v29, 0, 1, v32);
        }
        swift_storeEnumTagMultiPayload();
        goto LABEL_18;
      }
      size_t v26 = *(void *)(v13 + 64);
LABEL_9:
      memcpy(v10, v11, v26);
      goto LABEL_18;
    }
    sub_1C2853630((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ImageRepresentation);
LABEL_8:
    sub_1C284FFEC(0);
    size_t v26 = *(void *)(*(void *)(v25 - 8) + 64);
    goto LABEL_9;
  }
  if (v16) {
    goto LABEL_8;
  }
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *uint64_t v10 = *v11;
    sub_1C27CC3FC();
    uint64_t v18 = *(int *)(v17 + 48);
    uint64_t v19 = (char *)v10 + v18;
    uint64_t v20 = (char *)v11 + v18;
    sub_1C27CCDC8(0);
    uint64_t v22 = v21;
    uint64_t v23 = *(void *)(v21 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v23 + 48))(v20, 1, v21))
    {
      sub_1C2850220(0, &qword_1EBB767E8, (uint64_t (*)(uint64_t))sub_1C27CCDC8, MEMORY[0x1E4FBB718]);
      memcpy(v19, v20, *(void *)(*(void *)(v24 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(v19, v20, v22);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, v22);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(v10, v11, *(void *)(v13 + 64));
  }
  (*(void (**)(_OWORD *, void, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
LABEL_18:
  uint64_t v35 = a3[10];
  uint64_t v36 = (void *)(a1 + v35);
  uint64_t v37 = (uint64_t *)(a2 + v35);
  uint64_t v39 = *v37;
  uint64_t v38 = v37[1];
  *uint64_t v36 = v39;
  v36[1] = v38;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[11]) = *(void *)(a2 + a3[11]);
  swift_bridgeObjectRelease();
  uint64_t v40 = a3[12];
  uint64_t v41 = (void *)(a1 + v40);
  uint64_t v42 = (uint64_t *)(a2 + v40);
  uint64_t v44 = *v42;
  uint64_t v43 = v42[1];
  *uint64_t v41 = v44;
  v41[1] = v43;
  swift_bridgeObjectRelease();
  uint64_t v45 = a3[13];
  int v46 = (void *)(a1 + v45);
  int v47 = (uint64_t *)(a2 + v45);
  uint64_t v49 = *v47;
  uint64_t v48 = v47[1];
  *int v46 = v49;
  v46[1] = v48;
  swift_bridgeObjectRelease();
  uint64_t v50 = a3[15];
  *(unsigned char *)(a1 + a3[14]) = *(unsigned char *)(a2 + a3[14]);
  uint64_t v51 = (void *)(a1 + v50);
  char v52 = (void *)(a2 + v50);
  uint64_t v53 = sub_1C28CCAF0();
  uint64_t v54 = *(void *)(v53 - 8);
  uint64_t v55 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v54 + 48);
  int v56 = v55(v51, 1, v53);
  int v57 = v55(v52, 1, v53);
  if (!v56)
  {
    if (!v57)
    {
      (*(void (**)(void *, void *, uint64_t))(v54 + 40))(v51, v52, v53);
      goto LABEL_24;
    }
    (*(void (**)(void *, uint64_t))(v54 + 8))(v51, v53);
    goto LABEL_23;
  }
  if (v57)
  {
LABEL_23:
    sub_1C28501EC(0);
    memcpy(v51, v52, *(void *)(*(void *)(v58 - 8) + 64));
    goto LABEL_24;
  }
  (*(void (**)(void *, void *, uint64_t))(v54 + 32))(v51, v52, v53);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v54 + 56))(v51, 0, 1, v53);
LABEL_24:
  uint64_t v59 = a3[16];
  uint64_t v60 = (void *)(a1 + v59);
  char v61 = (uint64_t *)(a2 + v59);
  uint64_t v63 = *v61;
  uint64_t v62 = v61[1];
  void *v60 = v63;
  v60[1] = v62;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x1F4186578](a1, a2, a3, sub_1C2855554);
}

uint64_t sub_1C2855554(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    sub_1C284FFEC(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      sub_1C28501EC(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 60);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for FeatureStatusConfiguration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x1F41867C0](a1, a2, a3, a4, sub_1C2855694);
}

uint64_t sub_1C2855694(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 8) = (a2 - 1);
  }
  else
  {
    sub_1C284FFEC(0);
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 36);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      sub_1C28501EC(0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 60);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_1C28557C0()
{
  sub_1C284FFEC(319);
  if (v0 <= 0x3F)
  {
    sub_1C28501EC(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t getEnumTagSinglePayload for FeatureStatusConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for FeatureStatusConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2855A28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureStatusConfiguration.CodingKeys()
{
  return &type metadata for FeatureStatusConfiguration.CodingKeys;
}

unint64_t sub_1C2855A64()
{
  unint64_t result = qword_1EA310C58;
  if (!qword_1EA310C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310C58);
  }
  return result;
}

unint64_t sub_1C2855ABC()
{
  unint64_t result = qword_1EBB76950;
  if (!qword_1EBB76950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76950);
  }
  return result;
}

unint64_t sub_1C2855B14()
{
  unint64_t result = qword_1EBB76948;
  if (!qword_1EBB76948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76948);
  }
  return result;
}

uint64_t sub_1C2855B68(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x80000001C28DAE80 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6D614E656C746974 && a2 == 0xE900000000000065 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C28DCAC0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000001C28DCAE0 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000001C28DCB00 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x7461446567616D69 && a2 == 0xE900000000000061 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x726F737365636361 && a2 == 0xEE00656C74695479 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x80000001C28DCB20 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x80000001C28DCB40 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x614D7265746F6F66 && a2 == 0xEE006E776F646B72 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000001C28DCB60 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x527972746E756F63 && a2 == 0xED000064726F6365 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x6564496573756572 && a2 == 0xEF7265696669746ELL)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v5 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v5) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

void sub_1C28560FC(uint64_t a1)
{
}

void sub_1C285611C(uint64_t a1)
{
}

void sub_1C285613C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v5) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

uint64_t sub_1C285619C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_1C28561E4(uint64_t a1)
{
}

unint64_t sub_1C2856218()
{
  unint64_t result = qword_1EBB74C78;
  if (!qword_1EBB74C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB74C78);
  }
  return result;
}

uint64_t static HealthKitType.sampleType.getter(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = self;
  id v5 = objc_msgSend(v4, sel_dataTypeWithCode_, (*(uint64_t (**)(uint64_t, uint64_t))(a2 + 16))(a1, a2));
  if (v5)
  {
    id v10 = v5;
    uint64_t v6 = self;
    id v5 = v10;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v9 = 0;
  }
  else
  {
    __break(1u);
  }
  return MEMORY[0x1F41864E8](v5, v6, v7, v8, v9);
}

uint64_t dispatch thunk of static HealthKitType.dataTypeCode.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of static HealthKitType.sampleType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t RecommendedSleepAppUserData.title.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.bundleID.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.itunesStoreID.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RecommendedSleepAppUserData.uniqueIdentifier.getter()
{
  uint64_t v2 = *v0;
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRetain();
  sub_1C28CD7C0();
  swift_bridgeObjectRelease();
  return v2;
}

void __swiftcall RecommendedSleepAppUserData.init(title:bundleID:itunesStoreID:)(HealthExperience::RecommendedSleepAppUserData *__return_ptr retstr, Swift::String title, Swift::String bundleID, Swift::String itunesStoreID)
{
  retstr->title = title;
  retstr->bundleID = bundleID;
  retstr->itunesStoreID = itunesStoreID;
}

uint64_t sub_1C2856458()
{
  uint64_t v1 = 0x4449656C646E7562;
  if (*v0 != 1) {
    uint64_t v1 = 0x745373656E757469;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656C746974;
  }
}

uint64_t sub_1C28564BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C2856F08(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C28564E4(uint64_t a1)
{
  unint64_t v2 = sub_1C2856724();

  return MEMORY[0x1F41862A8](a1, v2);
}

uint64_t sub_1C2856520(uint64_t a1)
{
  unint64_t v2 = sub_1C2856724();

  return MEMORY[0x1F41862B0](a1, v2);
}

uint64_t RecommendedSleepAppUserData.encode(to:)(void *a1)
{
  sub_1C2856A2C(0, &qword_1EBB73EE0, MEMORY[0x1E4FBBDE0]);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x1F4188790](v3);
  uint64_t v7 = (char *)v12 - v6;
  uint64_t v8 = v1[2];
  uint64_t v12[3] = v1[3];
  void v12[4] = v8;
  uint64_t v9 = v1[4];
  v12[1] = v1[5];
  void v12[2] = v9;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2856724();
  sub_1C28CE800();
  char v15 = 0;
  uint64_t v10 = v12[5];
  sub_1C28CE5A0();
  if (!v10)
  {
    char v14 = 1;
    sub_1C28CE5A0();
    char v13 = 2;
    sub_1C28CE5A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1C2856724()
{
  unint64_t result = qword_1EBB76960;
  if (!qword_1EBB76960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76960);
  }
  return result;
}

uint64_t RecommendedSleepAppUserData.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_1C2856A2C(0, &qword_1EBB76A18, MEMORY[0x1E4FBBDC0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x1F4188790](v5);
  uint64_t v9 = (char *)&v22 - v8;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_1C2856724();
  sub_1C28CE7F0();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v10 = sub_1C28CE4E0();
  uint64_t v12 = v11;
  uint64_t v25 = v10;
  char v27 = 1;
  swift_bridgeObjectRetain();
  uint64_t v13 = sub_1C28CE4E0();
  uint64_t v15 = v14;
  uint64_t v23 = v13;
  char v26 = 2;
  swift_bridgeObjectRetain();
  uint64_t v24 = v15;
  uint64_t v16 = sub_1C28CE4E0();
  uint64_t v18 = v17;
  uint64_t v19 = v16;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v20 = v24;
  *a2 = v25;
  a2[1] = v12;
  a2[2] = v23;
  a2[3] = v20;
  a2[4] = v19;
  a2[5] = v18;
  __swift_destroy_boxed_opaque_existential_1Tm((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1C2856A2C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  if (!*a2)
  {
    unint64_t v6 = sub_1C2856724();
    unint64_t v7 = a3(a1, &type metadata for RecommendedSleepAppUserData.CodingKeys, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_1C2856A90@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return RecommendedSleepAppUserData.init(from:)(a1, a2);
}

uint64_t sub_1C2856AA8(void *a1)
{
  return RecommendedSleepAppUserData.encode(to:)(a1);
}

uint64_t destroy for RecommendedSleepAppUserData()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for RecommendedSleepAppUserData(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for RecommendedSleepAppUserData(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

void *assignWithTake for RecommendedSleepAppUserData(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RecommendedSleepAppUserData(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RecommendedSleepAppUserData(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendedSleepAppUserData()
{
  return &type metadata for RecommendedSleepAppUserData;
}

unsigned char *storeEnumTagSinglePayload for RecommendedSleepAppUserData.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2856DC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendedSleepAppUserData.CodingKeys()
{
  return &type metadata for RecommendedSleepAppUserData.CodingKeys;
}

unint64_t sub_1C2856E04()
{
  unint64_t result = qword_1EA310C78;
  if (!qword_1EA310C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310C78);
  }
  return result;
}

unint64_t sub_1C2856E5C()
{
  unint64_t result = qword_1EBB76970;
  if (!qword_1EBB76970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76970);
  }
  return result;
}

unint64_t sub_1C2856EB4()
{
  unint64_t result = qword_1EBB76968;
  if (!qword_1EBB76968)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EBB76968);
  }
  return result;
}

uint64_t sub_1C2856F08(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656C746974 && a2 == 0xE500000000000000;
  if (v2 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449656C646E7562 && a2 == 0xE800000000000000 || (sub_1C28CE640() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x745373656E757469 && a2 == 0xED0000444965726FLL)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1C28CE640();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t assertNotNil<A>(_:fallingBackTo:withMessage:file:line:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4)
{
  uint64_t v7 = sub_1C28CDF70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x1F4188790](v7);
  uint64_t v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))((char *)&v13 - v9, a1, v7);
  uint64_t v11 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a4) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v10, a4);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(a3, a2, a4);
}

uint64_t sub_1C2857204()
{
  MEMORY[0x1C875EE90]();
  if (*(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*v0 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_1C28CD970();
  }
  sub_1C28CD9D0();

  return sub_1C28CD940();
}

uint64_t HKDisplayCategory.objectTypes()()
{
  id v1 = objc_msgSend(v0, sel_categoryID);
  uint64_t result = MEMORY[0x1E4FBC860];
  switch((unint64_t)v1)
  {
    case 1uLL:
      sub_1C27D87FC();
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_1C28D5EF0;
      unsigned int v4 = self;
      id v5 = objc_msgSend(v4, sel_dataTypeWithCode_, 5);
      if (!v5)
      {
        __break(1u);
        goto LABEL_287;
      }
      *(void *)(v3 + 32) = v5;
      id v6 = objc_msgSend(v4, sel_dataTypeWithCode_, 14);
      if (!v6)
      {
LABEL_287:
        __break(1u);
        goto LABEL_288;
      }
      *(void *)(v3 + 40) = v6;
      id v7 = objc_msgSend(v4, sel_dataTypeWithCode_, 15);
      if (!v7)
      {
LABEL_288:
        __break(1u);
        goto LABEL_289;
      }
      *(void *)(v3 + 48) = v7;
      id v8 = objc_msgSend(v4, sel_dataTypeWithCode_, 61);
      if (!v8)
      {
LABEL_289:
        __break(1u);
        goto LABEL_290;
      }
      *(void *)(v3 + 56) = v8;
      id v9 = objc_msgSend(v4, sel_dataTypeWithCode_, 62);
      if (!v9)
      {
LABEL_290:
        __break(1u);
        goto LABEL_291;
      }
      *(void *)(v3 + 64) = v9;
      id v10 = objc_msgSend(v4, sel_dataTypeWithCode_, 80);
      if (!v10)
      {
LABEL_291:
        __break(1u);
        goto LABEL_292;
      }
      *(void *)(v3 + 72) = v10;
      id v11 = objc_msgSend(v4, sel_dataTypeWithCode_, 95);
      if (!v11)
      {
LABEL_292:
        __break(1u);
        goto LABEL_293;
      }
      *(void *)(v3 + 80) = v11;
      uint64_t v262 = v3;
      sub_1C28CD940();
      if (!objc_msgSend(v4, sel_dataTypeWithCode_, 305))
      {
        __break(1u);
LABEL_11:
        sub_1C27D87FC();
        uint64_t v12 = swift_allocObject();
        *(_OWORD *)(v12 + 16) = xmmword_1C28D5F20;
        uint64_t v13 = self;
        id v14 = objc_msgSend(v13, sel_dataTypeWithCode_, 7);
        if (v14)
        {
          *(void *)(v12 + 32) = v14;
          id v15 = objc_msgSend(v13, sel_dataTypeWithCode_, 8);
          if (v15)
          {
            *(void *)(v12 + 40) = v15;
            id v16 = objc_msgSend(v13, sel_dataTypeWithCode_, 9);
            if (v16)
            {
              *(void *)(v12 + 48) = v16;
              id v17 = objc_msgSend(v13, sel_dataTypeWithCode_, 10);
              if (v17)
              {
                *(void *)(v12 + 56) = v17;
                id v18 = objc_msgSend(v13, sel_dataTypeWithCode_, 12);
                if (v18)
                {
                  *(void *)(v12 + 64) = v18;
                  id v19 = objc_msgSend(v13, sel_dataTypeWithCode_, 13);
                  if (v19)
                  {
                    *(void *)(v12 + 72) = v19;
                    id v20 = objc_msgSend(v13, sel_dataTypeWithCode_, 70);
                    if (v20)
                    {
                      *(void *)(v12 + 80) = v20;
                      id v21 = objc_msgSend(v13, sel_dataTypeWithCode_, 75);
                      if (v21)
                      {
                        *(void *)(v12 + 88) = v21;
                        id v22 = objc_msgSend(v13, sel_dataTypeWithCode_, 79);
                        if (v22)
                        {
                          *(void *)(v12 + 96) = v22;
                          id v23 = objc_msgSend(v13, sel_dataTypeWithCode_, 83);
                          if (v23)
                          {
                            *(void *)(v12 + 104) = v23;
                            id v24 = objc_msgSend(v13, sel_dataTypeWithCode_, 100);
                            if (v24)
                            {
                              *(void *)(v12 + 112) = v24;
                              id v25 = objc_msgSend(v13, sel_dataTypeWithCode_, 101);
                              if (v25)
                              {
                                *(void *)(v12 + 120) = v25;
                                id v26 = objc_msgSend(v13, sel_dataTypeWithCode_, 110);
                                if (v26)
                                {
                                  *(void *)(v12 + 128) = v26;
                                  id v27 = objc_msgSend(v13, sel_dataTypeWithCode_, 111);
                                  if (v27)
                                  {
                                    *(void *)(v12 + 136) = v27;
                                    id v28 = objc_msgSend(v13, sel_dataTypeWithCode_, 113);
                                    if (v28)
                                    {
                                      *(void *)(v12 + 144) = v28;
                                      id v29 = objc_msgSend(v13, sel_dataTypeWithCode_, 124);
                                      if (v29)
                                      {
                                        *(void *)(v12 + 152) = v29;
                                        id v30 = objc_msgSend(v13, sel_dataTypeWithCode_, 138);
                                        if (v30)
                                        {
                                          *(void *)(v12 + 160) = v30;
                                          id v31 = objc_msgSend(v13, sel_dataTypeWithCode_, 179);
                                          if (v31)
                                          {
                                            *(void *)(v12 + 168) = v31;
                                            id v32 = objc_msgSend(v13, sel_dataTypeWithCode_, 186);
                                            if (v32)
                                            {
                                              *(void *)(v12 + 176) = v32;
                                              id v33 = objc_msgSend(v13, sel_dataTypeWithCode_, 266);
                                              if (v33)
                                              {
                                                *(void *)(v12 + 184) = v33;
                                                id v34 = objc_msgSend(v13, sel_dataTypeWithCode_, 269);
                                                if (v34)
                                                {
                                                  *(void *)(v12 + 192) = v34;
                                                  id v35 = objc_msgSend(v13, sel_dataTypeWithCode_, 270);
                                                  if (v35)
                                                  {
                                                    *(void *)(v12 + 200) = v35;
                                                    id v36 = objc_msgSend(v13, sel_dataTypeWithCode_, 274);
                                                    if (v36)
                                                    {
                                                      *(void *)(v12 + 208) = v36;
                                                      id v37 = objc_msgSend(v13, sel_dataTypeWithCode_, 280);
                                                      if (v37)
                                                      {
                                                        *(void *)(v12 + 216) = v37;
                                                        id v38 = objc_msgSend(v13, sel_dataTypeWithCode_, 281);
                                                        if (v38)
                                                        {
                                                          *(void *)(v12 + 224) = v38;
                                                          id v39 = objc_msgSend(v13, sel_dataTypeWithCode_, 282);
                                                          if (v39)
                                                          {
                                                            *(void *)(v12 + 232) = v39;
                                                            id v40 = objc_msgSend(v13, sel_dataTypeWithCode_, 283);
                                                            if (v40)
                                                            {
                                                              *(void *)(v12 + 240) = v40;
                                                              id v41 = objc_msgSend(v13, sel_dataTypeWithCode_, 286);
                                                              if (v41)
                                                              {
                                                                *(void *)(v12 + 248) = v41;
                                                                id v42 = objc_msgSend(v13, sel_dataTypeWithCode_, 294);
                                                                if (v42)
                                                                {
                                                                  *(void *)(v12 + 256) = v42;
                                                                  id v43 = objc_msgSend(v13, sel_dataTypeWithCode_, 295);
                                                                  if (v43)
                                                                  {
                                                                    *(void *)(v12 + 264) = v43;
                                                                    id v44 = objc_msgSend(v13, sel_dataTypeWithCode_, 296);
                                                                    if (v44)
                                                                    {
                                                                      *(void *)(v12 + 272) = v44;
                                                                      id v45 = objc_msgSend(v13, sel_dataTypeWithCode_, 297);
                                                                      if (v45)
                                                                      {
                                                                        *(void *)(v12 + 280) = v45;
                                                                        id v46 = objc_msgSend(v13, sel_dataTypeWithCode_, 298);
                                                                        if (v46)
                                                                        {
                                                                          *(void *)(v12 + 288) = v46;
                                                                          id v47 = objc_msgSend(v13, sel_dataTypeWithCode_, 301);
                                                                          if (v47)
                                                                          {
                                                                            *(void *)(v12 + 296) = v47;
                                                                            id v48 = objc_msgSend(v13, sel_dataTypeWithCode_, 302);
                                                                            if (v48)
                                                                            {
                                                                              *(void *)(v12 + 304) = v48;
                                                                              id v49 = objc_msgSend(v13, sel_dataTypeWithCode_, 303);
                                                                              if (v49)
                                                                              {
                                                                                *(void *)(v12 + 312) = v49;
                                                                                id v50 = objc_msgSend(v13, sel_dataTypeWithCode_, 304);
                                                                                if (v50)
                                                                                {
                                                                                  *(void *)(v12 + 320) = v50;
LABEL_270:
                                                                                  uint64_t v262 = v12;
                                                                                  sub_1C28CD940();
                                                                                  return v262;
                                                                                }
LABEL_329:
                                                                                __break(1u);
LABEL_330:
                                                                                __break(1u);
LABEL_331:
                                                                                __break(1u);
LABEL_332:
                                                                                __break(1u);
LABEL_333:
                                                                                __break(1u);
LABEL_334:
                                                                                __break(1u);
LABEL_335:
                                                                                __break(1u);
LABEL_336:
                                                                                __break(1u);
LABEL_337:
                                                                                __break(1u);
LABEL_338:
                                                                                __break(1u);
LABEL_339:
                                                                                __break(1u);
LABEL_340:
                                                                                __break(1u);
LABEL_341:
                                                                                __break(1u);
LABEL_342:
                                                                                __break(1u);
LABEL_343:
                                                                                __break(1u);
LABEL_344:
                                                                                __break(1u);
LABEL_345:
                                                                                __break(1u);
LABEL_346:
                                                                                __break(1u);
LABEL_347:
                                                                                __break(1u);
LABEL_348:
                                                                                __break(1u);
LABEL_349:
                                                                                __break(1u);
LABEL_350:
                                                                                __break(1u);
LABEL_351:
                                                                                __break(1u);
LABEL_352:
                                                                                __break(1u);
LABEL_353:
                                                                                __break(1u);
LABEL_354:
                                                                                __break(1u);
LABEL_355:
                                                                                __break(1u);
LABEL_356:
                                                                                __break(1u);
LABEL_357:
                                                                                __break(1u);
LABEL_358:
                                                                                __break(1u);
LABEL_359:
                                                                                __break(1u);
LABEL_360:
                                                                                __break(1u);
LABEL_361:
                                                                                __break(1u);
LABEL_362:
                                                                                __break(1u);
LABEL_363:
                                                                                __break(1u);
LABEL_364:
                                                                                __break(1u);
LABEL_365:
                                                                                __break(1u);
LABEL_366:
                                                                                __break(1u);
LABEL_367:
                                                                                __break(1u);
LABEL_368:
                                                                                __break(1u);
LABEL_369:
                                                                                __break(1u);
LABEL_370:
                                                                                __break(1u);
LABEL_371:
                                                                                __break(1u);
LABEL_372:
                                                                                __break(1u);
LABEL_373:
                                                                                __break(1u);
LABEL_374:
                                                                                __break(1u);
LABEL_375:
                                                                                __break(1u);
LABEL_376:
                                                                                __break(1u);
LABEL_377:
                                                                                __break(1u);
LABEL_378:
                                                                                __break(1u);
LABEL_379:
                                                                                __break(1u);
LABEL_380:
                                                                                __break(1u);
LABEL_381:
                                                                                __break(1u);
LABEL_382:
                                                                                __break(1u);
LABEL_383:
                                                                                __break(1u);
LABEL_384:
                                                                                __break(1u);
LABEL_385:
                                                                                __break(1u);
LABEL_386:
                                                                                __break(1u);
LABEL_387:
                                                                                __break(1u);
LABEL_388:
                                                                                __break(1u);
LABEL_389:
                                                                                __break(1u);
LABEL_390:
                                                                                __break(1u);
LABEL_391:
                                                                                __break(1u);
LABEL_392:
                                                                                __break(1u);
LABEL_393:
                                                                                __break(1u);
LABEL_394:
                                                                                __break(1u);
LABEL_395:
                                                                                __break(1u);
LABEL_396:
                                                                                __break(1u);
LABEL_397:
                                                                                __break(1u);
LABEL_398:
                                                                                __break(1u);
LABEL_399:
                                                                                __break(1u);
LABEL_400:
                                                                                __break(1u);
LABEL_401:
                                                                                __break(1u);
LABEL_402:
                                                                                __break(1u);
LABEL_403:
                                                                                __break(1u);
LABEL_404:
                                                                                __break(1u);
LABEL_405:
                                                                                __break(1u);
LABEL_406:
                                                                                __break(1u);
LABEL_407:
                                                                                __break(1u);
LABEL_408:
                                                                                __break(1u);
LABEL_409:
                                                                                __break(1u);
LABEL_410:
                                                                                __break(1u);
LABEL_411:
                                                                                __break(1u);
LABEL_412:
                                                                                __break(1u);
LABEL_413:
                                                                                __break(1u);
LABEL_414:
                                                                                __break(1u);
LABEL_415:
                                                                                __break(1u);
LABEL_416:
                                                                                __break(1u);
LABEL_417:
                                                                                __break(1u);
LABEL_418:
                                                                                __break(1u);
LABEL_419:
                                                                                __break(1u);
LABEL_420:
                                                                                __break(1u);
LABEL_421:
                                                                                __break(1u);
LABEL_422:
                                                                                __break(1u);
LABEL_423:
                                                                                __break(1u);
LABEL_424:
                                                                                __break(1u);
LABEL_425:
                                                                                __break(1u);
LABEL_426:
                                                                                __break(1u);
LABEL_427:
                                                                                __break(1u);
LABEL_428:
                                                                                __break(1u);
LABEL_429:
                                                                                __break(1u);
LABEL_430:
                                                                                __break(1u);
LABEL_431:
                                                                                __break(1u);
LABEL_432:
                                                                                __break(1u);
LABEL_433:
                                                                                __break(1u);
LABEL_434:
                                                                                __break(1u);
LABEL_435:
                                                                                __break(1u);
LABEL_436:
                                                                                __break(1u);
LABEL_437:
                                                                                __break(1u);
LABEL_438:
                                                                                __break(1u);
LABEL_439:
                                                                                __break(1u);
LABEL_440:
                                                                                __break(1u);
LABEL_441:
                                                                                __break(1u);
LABEL_442:
                                                                                __break(1u);
LABEL_443:
                                                                                __break(1u);
LABEL_444:
                                                                                __break(1u);
LABEL_445:
                                                                                __break(1u);
LABEL_446:
                                                                                __break(1u);
LABEL_447:
                                                                                __break(1u);
LABEL_448:
                                                                                __break(1u);
LABEL_449:
                                                                                __break(1u);
LABEL_450:
                                                                                __break(1u);
LABEL_451:
                                                                                __break(1u);
LABEL_452:
                                                                                __break(1u);
LABEL_453:
                                                                                __break(1u);
LABEL_454:
                                                                                __break(1u);
LABEL_455:
                                                                                __break(1u);
LABEL_456:
                                                                                __break(1u);
LABEL_457:
                                                                                __break(1u);
LABEL_458:
                                                                                __break(1u);
LABEL_459:
                                                                                __break(1u);
LABEL_460:
                                                                                __break(1u);
LABEL_461:
                                                                                __break(1u);
LABEL_462:
                                                                                __break(1u);
LABEL_463:
                                                                                __break(1u);
LABEL_464:
                                                                                __break(1u);
LABEL_465:
                                                                                __break(1u);
LABEL_466:
                                                                                __break(1u);
LABEL_467:
                                                                                __break(1u);
LABEL_468:
                                                                                __break(1u);
LABEL_469:
                                                                                __break(1u);
LABEL_470:
                                                                                __break(1u);
LABEL_471:
                                                                                __break(1u);
LABEL_472:
                                                                                __break(1u);
LABEL_473:
                                                                                __break(1u);
LABEL_474:
                                                                                __break(1u);
LABEL_475:
                                                                                __break(1u);
LABEL_476:
                                                                                __break(1u);
LABEL_477:
                                                                                __break(1u);
LABEL_478:
                                                                                __break(1u);
LABEL_479:
                                                                                __break(1u);
LABEL_480:
                                                                                __break(1u);
LABEL_481:
                                                                                __break(1u);
LABEL_482:
                                                                                __break(1u);
LABEL_483:
                                                                                __break(1u);
LABEL_484:
                                                                                __break(1u);
LABEL_485:
                                                                                __break(1u);
LABEL_486:
                                                                                __break(1u);
LABEL_487:
                                                                                __break(1u);
LABEL_488:
                                                                                __break(1u);
LABEL_489:
                                                                                __break(1u);
LABEL_490:
                                                                                __break(1u);
LABEL_491:
                                                                                __break(1u);
LABEL_492:
                                                                                __break(1u);
LABEL_493:
                                                                                __break(1u);
LABEL_494:
                                                                                __break(1u);
LABEL_495:
                                                                                __break(1u);
LABEL_496:
                                                                                __break(1u);
LABEL_497:
                                                                                __break(1u);
LABEL_498:
                                                                                __break(1u);
LABEL_499:
                                                                                __break(1u);
LABEL_500:
                                                                                __break(1u);
LABEL_501:
                                                                                __break(1u);
LABEL_502:
                                                                                __break(1u);
LABEL_503:
                                                                                __break(1u);
LABEL_504:
                                                                                __break(1u);
LABEL_505:
                                                                                __break(1u);
LABEL_506:
                                                                                __break(1u);
LABEL_507:
                                                                                __break(1u);
LABEL_508:
                                                                                __break(1u);
LABEL_509:
                                                                                __break(1u);
LABEL_510:
                                                                                __break(1u);
LABEL_511:
                                                                                __break(1u);
LABEL_512:
                                                                                __break(1u);
LABEL_513:
                                                                                __break(1u);
LABEL_514:
                                                                                __break(1u);
LABEL_515:
                                                                                __break(1u);
LABEL_516:
                                                                                __break(1u);
LABEL_517:
                                                                                __break(1u);
LABEL_518:
                                                                                __break(1u);
LABEL_519:
                                                                                __break(1u);
LABEL_520:
                                                                                __break(1u);
LABEL_521:
                                                                                __break(1u);
LABEL_522:
                                                                                __break(1u);
LABEL_523:
                                                                                __break(1u);
LABEL_524:
                                                                                __break(1u);
LABEL_525:
                                                                                __break(1u);
LABEL_526:
                                                                                __break(1u);
LABEL_527:
                                                                                __break(1u);
LABEL_528:
                                                                                __break(1u);
LABEL_529:
                                                                                __break(1u);
                                                                                JUMPOUT(0x1C2859C34);
                                                                              }
LABEL_328:
                                                                              __break(1u);
                                                                              goto LABEL_329;
                                                                            }
LABEL_327:
                                                                            __break(1u);
                                                                            goto LABEL_328;
                                                                          }
LABEL_326:
                                                                          __break(1u);
                                                                          goto LABEL_327;
                                                                        }
LABEL_325:
                                                                        __break(1u);
                                                                        goto LABEL_326;
                                                                      }
LABEL_324:
                                                                      __break(1u);
                                                                      goto LABEL_325;
                                                                    }
LABEL_323:
                                                                    __break(1u);
                                                                    goto LABEL_324;
                                                                  }
LABEL_322:
                                                                  __break(1u);
                                                                  goto LABEL_323;
                                                                }
LABEL_321:
                                                                __break(1u);
                                                                goto LABEL_322;
                                                              }
LABEL_320:
                                                              __break(1u);
                                                              goto LABEL_321;
                                                            }
LABEL_319:
                                                            __break(1u);
                                                            goto LABEL_320;
                                                          }
LABEL_318:
                                                          __break(1u);
                                                          goto LABEL_319;
                                                        }
LABEL_317:
                                                        __break(1u);
                                                        goto LABEL_318;
                                                      }
LABEL_316:
                                                      __break(1u);
                                                      goto LABEL_317;
                                                    }
LABEL_315:
                                                    __break(1u);
                                                    goto LABEL_316;
                                                  }
LABEL_314:
                                                  __break(1u);
                                                  goto LABEL_315;
                                                }
LABEL_313:
                                                __break(1u);
                                                goto LABEL_314;
                                              }
LABEL_312:
                                              __break(1u);
                                              goto LABEL_313;
                                            }
LABEL_311:
                                            __break(1u);
                                            goto LABEL_312;
                                          }
LABEL_310:
                                          __break(1u);
                                          goto LABEL_311;
                                        }
LABEL_309:
                                        __break(1u);
                                        goto LABEL_310;
                                      }
LABEL_308:
                                      __break(1u);
                                      goto LABEL_309;
                                    }
LABEL_307:
                                    __break(1u);
                                    goto LABEL_308;
                                  }
LABEL_306:
                                  __break(1u);
                                  goto LABEL_307;
                                }
LABEL_305:
                                __break(1u);
                                goto LABEL_306;
                              }
LABEL_304:
                              __break(1u);
                              goto LABEL_305;
                            }
LABEL_303:
                            __break(1u);
                            goto LABEL_304;
                          }
LABEL_302:
                          __break(1u);
                          goto LABEL_303;
                        }
LABEL_301:
                        __break(1u);
                        goto LABEL_302;
                      }
LABEL_300:
                      __break(1u);
                      goto LABEL_301;
                    }
LABEL_299:
                    __break(1u);
                    goto LABEL_300;
                  }
LABEL_298:
                  __break(1u);
                  goto LABEL_299;
                }
LABEL_297:
                __break(1u);
                goto LABEL_298;
              }
LABEL_296:
              __break(1u);
              goto LABEL_297;
            }
LABEL_295:
            __break(1u);
            goto LABEL_296;
          }
LABEL_294:
          __break(1u);
          goto LABEL_295;
        }
LABEL_293:
        __break(1u);
        goto LABEL_294;
      }
LABEL_173:
      sub_1C2857204();
      return v262;
    case 2uLL:
      goto LABEL_11;
    case 4uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5E90;
      uint64_t v51 = self;
      id v52 = objc_msgSend(v51, sel_dataTypeWithCode_, 20);
      if (!v52) {
        goto LABEL_330;
      }
      *(void *)(v12 + 32) = v52;
      id v53 = objc_msgSend(v51, sel_dataTypeWithCode_, 21);
      if (!v53) {
        goto LABEL_331;
      }
      *(void *)(v12 + 40) = v53;
      id v54 = objc_msgSend(v51, sel_dataTypeWithCode_, 22);
      if (!v54) {
        goto LABEL_332;
      }
      *(void *)(v12 + 48) = v54;
      id v55 = objc_msgSend(v51, sel_dataTypeWithCode_, 23);
      if (!v55) {
        goto LABEL_333;
      }
      *(void *)(v12 + 56) = v55;
      id v56 = objc_msgSend(v51, sel_dataTypeWithCode_, 24);
      if (!v56) {
        goto LABEL_334;
      }
      *(void *)(v12 + 64) = v56;
      id v57 = objc_msgSend(v51, sel_dataTypeWithCode_, 25);
      if (!v57) {
        goto LABEL_335;
      }
      *(void *)(v12 + 72) = v57;
      id v58 = objc_msgSend(v51, sel_dataTypeWithCode_, 26);
      if (!v58) {
        goto LABEL_336;
      }
      *(void *)(v12 + 80) = v58;
      id v59 = objc_msgSend(v51, sel_dataTypeWithCode_, 27);
      if (!v59) {
        goto LABEL_337;
      }
      *(void *)(v12 + 88) = v59;
      id v60 = objc_msgSend(v51, sel_dataTypeWithCode_, 28);
      if (!v60) {
        goto LABEL_338;
      }
      *(void *)(v12 + 96) = v60;
      id v61 = objc_msgSend(v51, sel_dataTypeWithCode_, 29);
      if (!v61) {
        goto LABEL_339;
      }
      *(void *)(v12 + 104) = v61;
      id v62 = objc_msgSend(v51, sel_dataTypeWithCode_, 30);
      if (!v62) {
        goto LABEL_340;
      }
      *(void *)(v12 + 112) = v62;
      id v63 = objc_msgSend(v51, sel_dataTypeWithCode_, 31);
      if (!v63) {
        goto LABEL_341;
      }
      *(void *)(v12 + 120) = v63;
      id v64 = objc_msgSend(v51, sel_dataTypeWithCode_, 32);
      if (!v64) {
        goto LABEL_342;
      }
      *(void *)(v12 + 128) = v64;
      id v65 = objc_msgSend(v51, sel_dataTypeWithCode_, 33);
      if (!v65) {
        goto LABEL_343;
      }
      *(void *)(v12 + 136) = v65;
      id v66 = objc_msgSend(v51, sel_dataTypeWithCode_, 34);
      if (!v66) {
        goto LABEL_344;
      }
      *(void *)(v12 + 144) = v66;
      id v67 = objc_msgSend(v51, sel_dataTypeWithCode_, 35);
      if (!v67) {
        goto LABEL_345;
      }
      *(void *)(v12 + 152) = v67;
      id v68 = objc_msgSend(v51, sel_dataTypeWithCode_, 36);
      if (!v68) {
        goto LABEL_346;
      }
      *(void *)(v12 + 160) = v68;
      id v69 = objc_msgSend(v51, sel_dataTypeWithCode_, 37);
      if (!v69) {
        goto LABEL_347;
      }
      *(void *)(v12 + 168) = v69;
      id v70 = objc_msgSend(v51, sel_dataTypeWithCode_, 38);
      if (!v70) {
        goto LABEL_348;
      }
      *(void *)(v12 + 176) = v70;
      id v71 = objc_msgSend(v51, sel_dataTypeWithCode_, 39);
      if (!v71) {
        goto LABEL_349;
      }
      *(void *)(v12 + 184) = v71;
      id v72 = objc_msgSend(v51, sel_dataTypeWithCode_, 40);
      if (!v72) {
        goto LABEL_350;
      }
      *(void *)(v12 + 192) = v72;
      id v73 = objc_msgSend(v51, sel_dataTypeWithCode_, 41);
      if (!v73) {
        goto LABEL_351;
      }
      *(void *)(v12 + 200) = v73;
      id v74 = objc_msgSend(v51, sel_dataTypeWithCode_, 42);
      if (!v74) {
        goto LABEL_352;
      }
      *(void *)(v12 + 208) = v74;
      id v75 = objc_msgSend(v51, sel_dataTypeWithCode_, 43);
      if (!v75) {
        goto LABEL_353;
      }
      *(void *)(v12 + 216) = v75;
      id v76 = objc_msgSend(v51, sel_dataTypeWithCode_, 44);
      if (!v76) {
        goto LABEL_354;
      }
      *(void *)(v12 + 224) = v76;
      id v77 = objc_msgSend(v51, sel_dataTypeWithCode_, 45);
      if (!v77) {
        goto LABEL_355;
      }
      *(void *)(v12 + 232) = v77;
      id v78 = objc_msgSend(v51, sel_dataTypeWithCode_, 46);
      if (!v78) {
        goto LABEL_356;
      }
      *(void *)(v12 + 240) = v78;
      id v79 = objc_msgSend(v51, sel_dataTypeWithCode_, 47);
      if (!v79) {
        goto LABEL_357;
      }
      *(void *)(v12 + 248) = v79;
      id v80 = objc_msgSend(v51, sel_dataTypeWithCode_, 48);
      if (!v80) {
        goto LABEL_358;
      }
      *(void *)(v12 + 256) = v80;
      id v81 = objc_msgSend(v51, sel_dataTypeWithCode_, 49);
      if (!v81) {
        goto LABEL_359;
      }
      *(void *)(v12 + 264) = v81;
      id v82 = objc_msgSend(v51, sel_dataTypeWithCode_, 50);
      if (!v82) {
        goto LABEL_360;
      }
      *(void *)(v12 + 272) = v82;
      id v83 = objc_msgSend(v51, sel_dataTypeWithCode_, 51);
      if (!v83) {
        goto LABEL_361;
      }
      *(void *)(v12 + 280) = v83;
      id v84 = objc_msgSend(v51, sel_dataTypeWithCode_, 52);
      if (!v84) {
        goto LABEL_362;
      }
      *(void *)(v12 + 288) = v84;
      id v85 = objc_msgSend(v51, sel_dataTypeWithCode_, 53);
      if (!v85) {
        goto LABEL_363;
      }
      *(void *)(v12 + 296) = v85;
      id v86 = objc_msgSend(v51, sel_dataTypeWithCode_, 54);
      if (!v86) {
        goto LABEL_364;
      }
      *(void *)(v12 + 304) = v86;
      id v87 = objc_msgSend(v51, sel_dataTypeWithCode_, 55);
      if (!v87) {
        goto LABEL_365;
      }
      *(void *)(v12 + 312) = v87;
      id v88 = objc_msgSend(v51, sel_dataTypeWithCode_, 56);
      if (!v88) {
        goto LABEL_366;
      }
      *(void *)(v12 + 320) = v88;
      id v89 = objc_msgSend(v51, sel_dataTypeWithCode_, 78);
      if (!v89) {
        goto LABEL_367;
      }
      *(void *)(v12 + 328) = v89;
      id v90 = objc_msgSend(v51, sel_dataTypeWithCode_, 87);
      if (v90) {
        goto LABEL_236;
      }
      __break(1u);
LABEL_89:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5EA0;
      uint64_t v91 = self;
      id v92 = objc_msgSend(v91, sel_dataTypeWithCode_, 63);
      if (!v92) {
        goto LABEL_368;
      }
      *(void *)(v12 + 32) = v92;
      id v93 = objc_msgSend(v91, sel_dataTypeWithCode_, 197);
      if (!v93) {
        goto LABEL_369;
      }
      *(void *)(v12 + 40) = v93;
      id v94 = objc_msgSend(v91, sel_dataTypeWithCode_, 198);
      if (!v94) {
        goto LABEL_370;
      }
      *(void *)(v12 + 48) = v94;
      goto LABEL_270;
    case 5uLL:
      goto LABEL_89;
    case 6uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5F30;
      uint64_t v95 = self;
      id v96 = objc_msgSend(v95, sel_dataTypeWithCode_, 0);
      if (!v96) {
        goto LABEL_371;
      }
      *(void *)(v12 + 32) = v96;
      id v97 = objc_msgSend(v95, sel_dataTypeWithCode_, 1);
      if (!v97) {
        goto LABEL_372;
      }
      *(void *)(v12 + 40) = v97;
      id v98 = objc_msgSend(v95, sel_dataTypeWithCode_, 2);
      if (!v98) {
        goto LABEL_373;
      }
      *(void *)(v12 + 48) = v98;
      id v99 = objc_msgSend(v95, sel_dataTypeWithCode_, 3);
      if (!v99) {
        goto LABEL_374;
      }
      *(void *)(v12 + 56) = v99;
      id v100 = objc_msgSend(v95, sel_dataTypeWithCode_, 4);
      if (!v100) {
        goto LABEL_375;
      }
      *(void *)(v12 + 64) = v100;
      id v101 = objc_msgSend(v95, sel_dataTypeWithCode_, 58);
      if (!v101) {
        goto LABEL_376;
      }
      *(void *)(v12 + 72) = v101;
      id v102 = objc_msgSend(v95, sel_dataTypeWithCode_, 62);
      if (!v102) {
        goto LABEL_377;
      }
      *(void *)(v12 + 80) = v102;
      id v103 = objc_msgSend(v95, sel_dataTypeWithCode_, 90);
      if (!v103) {
        goto LABEL_378;
      }
      *(void *)(v12 + 88) = v103;
      id v104 = objc_msgSend(v95, sel_dataTypeWithCode_, 114);
      if (!v104) {
        goto LABEL_379;
      }
      *(void *)(v12 + 96) = v104;
      id v105 = objc_msgSend(v95, sel_dataTypeWithCode_, 256);
      if (!v105) {
        goto LABEL_380;
      }
      *(void *)(v12 + 104) = v105;
      id v106 = objc_msgSend(v95, sel_dataTypeWithCode_, 257);
      if (!v106) {
        goto LABEL_381;
      }
      *(void *)(v12 + 112) = v106;
      goto LABEL_270;
    case 7uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5EF0;
      uint64_t v107 = self;
      id v108 = objc_msgSend(v107, sel_dataTypeWithCode_, 64);
      if (!v108) {
        goto LABEL_382;
      }
      *(void *)(v12 + 32) = v108;
      id v109 = objc_msgSend(v107, sel_dataTypeWithCode_, 65);
      if (!v109) {
        goto LABEL_383;
      }
      *(void *)(v12 + 40) = v109;
      id v110 = objc_msgSend(v107, sel_dataTypeWithCode_, 66);
      if (!v110) {
        goto LABEL_384;
      }
      *(void *)(v12 + 48) = v110;
      id v111 = objc_msgSend(v107, sel_dataTypeWithCode_, 88);
      if (!v111) {
        goto LABEL_385;
      }
      *(void *)(v12 + 56) = v111;
      id v112 = objc_msgSend(v107, sel_dataTypeWithCode_, 103);
      if (!v112) {
        goto LABEL_386;
      }
      *(void *)(v12 + 64) = v112;
      id v113 = objc_msgSend(v107, sel_dataTypeWithCode_, 177);
      if (!v113) {
        goto LABEL_387;
      }
      *(void *)(v12 + 72) = v113;
      id v114 = objc_msgSend(v107, sel_dataTypeWithCode_, 218);
      if (v114) {
        goto LABEL_250;
      }
      __break(1u);
LABEL_113:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5EC0;
      uint64_t v115 = self;
      id v116 = objc_msgSend(v115, sel_dataTypeWithCode_, 90);
      if (!v116) {
        goto LABEL_388;
      }
      *(void *)(v12 + 32) = v116;
      id v117 = objc_msgSend(v115, sel_dataTypeWithCode_, 91);
      if (!v117) {
        goto LABEL_389;
      }
      *(void *)(v12 + 40) = v117;
      id v118 = objc_msgSend(v115, sel_dataTypeWithCode_, 92);
      if (!v118) {
        goto LABEL_390;
      }
      *(void *)(v12 + 48) = v118;
      id v119 = objc_msgSend(v115, sel_dataTypeWithCode_, 95);
      if (!v119) {
        goto LABEL_391;
      }
      *(void *)(v12 + 56) = v119;
      id v120 = objc_msgSend(v115, sel_dataTypeWithCode_, 96);
      if (!v120) {
        goto LABEL_392;
      }
      *(void *)(v12 + 64) = v120;
      id v121 = objc_msgSend(v115, sel_dataTypeWithCode_, 97);
      if (!v121) {
        goto LABEL_393;
      }
      *(void *)(v12 + 72) = v121;
      id v122 = objc_msgSend(v115, sel_dataTypeWithCode_, 157);
      if (!v122) {
        goto LABEL_394;
      }
      *(void *)(v12 + 80) = v122;
      id v123 = objc_msgSend(v115, sel_dataTypeWithCode_, 158);
      if (!v123) {
        goto LABEL_395;
      }
      *(void *)(v12 + 88) = v123;
      id v124 = objc_msgSend(v115, sel_dataTypeWithCode_, 159);
      if (!v124) {
        goto LABEL_396;
      }
      *(void *)(v12 + 96) = v124;
      id v125 = objc_msgSend(v115, sel_dataTypeWithCode_, 160);
      if (!v125) {
        goto LABEL_397;
      }
      *(void *)(v12 + 104) = v125;
      id v126 = objc_msgSend(v115, sel_dataTypeWithCode_, 161);
      if (!v126) {
        goto LABEL_398;
      }
      *(void *)(v12 + 112) = v126;
      id v127 = objc_msgSend(v115, sel_dataTypeWithCode_, 162);
      if (!v127) {
        goto LABEL_399;
      }
      *(void *)(v12 + 120) = v127;
      id v128 = objc_msgSend(v115, sel_dataTypeWithCode_, 163);
      if (!v128) {
        goto LABEL_400;
      }
      *(void *)(v12 + 128) = v128;
      id v129 = objc_msgSend(v115, sel_dataTypeWithCode_, 164);
      if (!v129) {
        goto LABEL_401;
      }
      *(void *)(v12 + 136) = v129;
      id v130 = objc_msgSend(v115, sel_dataTypeWithCode_, 165);
      if (!v130) {
        goto LABEL_402;
      }
      *(void *)(v12 + 144) = v130;
      id v131 = objc_msgSend(v115, sel_dataTypeWithCode_, 166);
      if (!v131) {
        goto LABEL_403;
      }
      *(void *)(v12 + 152) = v131;
      id v132 = objc_msgSend(v115, sel_dataTypeWithCode_, 167);
      if (!v132) {
        goto LABEL_404;
      }
      *(void *)(v12 + 160) = v132;
      id v133 = objc_msgSend(v115, sel_dataTypeWithCode_, 168);
      if (!v133) {
        goto LABEL_405;
      }
      *(void *)(v12 + 168) = v133;
      id v134 = objc_msgSend(v115, sel_dataTypeWithCode_, 169);
      if (!v134) {
        goto LABEL_406;
      }
      *(void *)(v12 + 176) = v134;
      id v135 = objc_msgSend(v115, sel_dataTypeWithCode_, 170);
      if (!v135) {
        goto LABEL_407;
      }
      *(void *)(v12 + 184) = v135;
      id v136 = objc_msgSend(v115, sel_dataTypeWithCode_, 171);
      if (!v136) {
        goto LABEL_408;
      }
      *(void *)(v12 + 192) = v136;
      id v137 = objc_msgSend(v115, sel_dataTypeWithCode_, 191);
      if (!v137) {
        goto LABEL_409;
      }
      *(void *)(v12 + 200) = v137;
      id v138 = objc_msgSend(v115, sel_dataTypeWithCode_, 192);
      if (!v138) {
        goto LABEL_410;
      }
      *(void *)(v12 + 208) = v138;
      id v139 = objc_msgSend(v115, sel_dataTypeWithCode_, 193);
      if (!v139) {
        goto LABEL_411;
      }
      *(void *)(v12 + 216) = v139;
      id v140 = objc_msgSend(v115, sel_dataTypeWithCode_, 229);
      if (!v140) {
        goto LABEL_412;
      }
      *(void *)(v12 + 224) = v140;
      id v141 = objc_msgSend(v115, sel_dataTypeWithCode_, 230);
      if (!v141) {
        goto LABEL_413;
      }
      *(void *)(v12 + 232) = v141;
      id v142 = objc_msgSend(v115, sel_dataTypeWithCode_, 231);
      if (!v142) {
        goto LABEL_414;
      }
      *(void *)(v12 + 240) = v142;
      id v143 = objc_msgSend(v115, sel_dataTypeWithCode_, 232);
      if (!v143) {
        goto LABEL_415;
      }
      *(void *)(v12 + 248) = v143;
      id v144 = objc_msgSend(v115, sel_dataTypeWithCode_, 233);
      if (!v144) {
        goto LABEL_416;
      }
      *(void *)(v12 + 256) = v144;
      id v145 = objc_msgSend(v115, sel_dataTypeWithCode_, 234);
      if (!v145) {
        goto LABEL_417;
      }
      *(void *)(v12 + 264) = v145;
      id v146 = objc_msgSend(v115, sel_dataTypeWithCode_, 235);
      if (!v146) {
        goto LABEL_418;
      }
      *(void *)(v12 + 272) = v146;
      id v147 = objc_msgSend(v115, sel_dataTypeWithCode_, 243);
      if (!v147) {
        goto LABEL_419;
      }
      *(void *)(v12 + 280) = v147;
      id v148 = objc_msgSend(v115, sel_dataTypeWithCode_, 244);
      if (!v148) {
        goto LABEL_420;
      }
      *(void *)(v12 + 288) = v148;
      id v149 = objc_msgSend(v115, sel_dataTypeWithCode_, 256);
      if (!v149) {
        goto LABEL_421;
      }
      *(void *)(v12 + 296) = v149;
      id v150 = objc_msgSend(v115, sel_dataTypeWithCode_, 262);
      if (!v150) {
        goto LABEL_422;
      }
      *(void *)(v12 + 304) = v150;
      id v151 = objc_msgSend(v115, sel_dataTypeWithCode_, 263);
      if (!v151) {
        goto LABEL_423;
      }
      *(void *)(v12 + 312) = v151;
      id v152 = objc_msgSend(v115, sel_dataTypeWithCode_, 264);
      if (!v152) {
        goto LABEL_424;
      }
      *(void *)(v12 + 320) = v152;
      id v153 = objc_msgSend(v115, sel_dataTypeWithCode_, 265);
      if (!v153) {
        goto LABEL_425;
      }
      *(void *)(v12 + 328) = v153;
      id v154 = objc_msgSend(v115, sel_dataTypeWithCode_, 313);
      if (!v154) {
        goto LABEL_426;
      }
      *(void *)(v12 + 336) = v154;
      id v155 = objc_msgSend(v115, sel_dataTypeWithCode_, 314);
      if (!v155) {
        goto LABEL_427;
      }
      *(void *)(v12 + 344) = v155;
      goto LABEL_270;
    case 8uLL:
      goto LABEL_113;
    case 9uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 107);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_156:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5F10;
      unint64_t v157 = self;
      id v158 = objc_msgSend(v157, sel_dataTypeWithCode_, 145);
      if (!v158) {
        goto LABEL_428;
      }
      *(void *)(v12 + 32) = v158;
      id v159 = objc_msgSend(v157, sel_dataTypeWithCode_, 172);
      if (!v159) {
        goto LABEL_429;
      }
      *(void *)(v12 + 40) = v159;
      id v160 = objc_msgSend(v157, sel_dataTypeWithCode_, 173);
      if (!v160) {
        goto LABEL_430;
      }
      *(void *)(v12 + 48) = v160;
      id v161 = objc_msgSend(v157, sel_dataTypeWithCode_, 178);
      if (!v161) {
        goto LABEL_431;
      }
      *(void *)(v12 + 56) = v161;
      id v162 = objc_msgSend(v157, sel_dataTypeWithCode_, 199);
      if (!v162) {
        goto LABEL_432;
      }
      *(void *)(v12 + 64) = v162;
      id v163 = objc_msgSend(v157, sel_dataTypeWithCode_, 272);
      if (!v163) {
        goto LABEL_433;
      }
      *(void *)(v12 + 72) = v163;
      goto LABEL_270;
    case 0xAuLL:
      goto LABEL_243;
    case 0xBuLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5F00;
      uint64_t v233 = self;
      id v234 = objc_msgSend(v233, sel_dataTypeWithCode_, 5);
      if (!v234) {
        goto LABEL_502;
      }
      *(void *)(v12 + 32) = v234;
      id v235 = objc_msgSend(v233, sel_dataTypeWithCode_, 19);
      if (!v235) {
        goto LABEL_503;
      }
      *(void *)(v12 + 40) = v235;
      id v236 = objc_msgSend(v233, sel_dataTypeWithCode_, 80);
      if (!v236) {
        goto LABEL_504;
      }
      *(void *)(v12 + 48) = v236;
      id v237 = objc_msgSend(v233, sel_dataTypeWithCode_, 118);
      if (!v237) {
        goto LABEL_505;
      }
      *(void *)(v12 + 56) = v237;
      id v238 = objc_msgSend(v233, sel_dataTypeWithCode_, 124);
      if (!v238) {
        goto LABEL_506;
      }
      *(void *)(v12 + 64) = v238;
      id v239 = objc_msgSend(v233, sel_dataTypeWithCode_, 137);
      if (!v239) {
        goto LABEL_507;
      }
      *(void *)(v12 + 72) = v239;
      id v240 = objc_msgSend(v233, sel_dataTypeWithCode_, 139);
      if (!v240) {
        goto LABEL_508;
      }
      *(void *)(v12 + 80) = v240;
      id v241 = objc_msgSend(v233, sel_dataTypeWithCode_, 140);
      if (!v241) {
        goto LABEL_509;
      }
      *(void *)(v12 + 88) = v241;
      id v242 = objc_msgSend(v233, sel_dataTypeWithCode_, 144);
      if (!v242) {
        goto LABEL_510;
      }
      *(void *)(v12 + 96) = v242;
      id v243 = objc_msgSend(v233, sel_dataTypeWithCode_, 147);
      if (!v243) {
        goto LABEL_511;
      }
      *(void *)(v12 + 104) = v243;
      id v244 = objc_msgSend(v233, sel_dataTypeWithCode_, 156);
      if (!v244) {
        goto LABEL_512;
      }
      *(void *)(v12 + 112) = v244;
      id v245 = objc_msgSend(v233, sel_dataTypeWithCode_, 236);
      if (!v245) {
        goto LABEL_513;
      }
      *(void *)(v12 + 120) = v245;
      id v246 = objc_msgSend(v233, sel_dataTypeWithCode_, 248);
      if (!v246) {
        goto LABEL_514;
      }
      *(void *)(v12 + 128) = v246;
      id v247 = objc_msgSend(v233, sel_dataTypeWithCode_, 266);
      if (!v247) {
        goto LABEL_515;
      }
      *(void *)(v12 + 136) = v247;
      goto LABEL_270;
    case 0xCuLL:
      goto LABEL_156;
    case 0xDuLL:
      sub_1C27D87FC();
      uint64_t v164 = swift_allocObject();
      *(_OWORD *)(v164 + 16) = xmmword_1C28D5EB0;
      uint64_t v165 = self;
      id v166 = objc_msgSend(v165, sel_dataTypeWithCode_, 14);
      if (!v166) {
        goto LABEL_434;
      }
      *(void *)(v164 + 32) = v166;
      id v167 = objc_msgSend(v165, sel_dataTypeWithCode_, 60);
      if (!v167) {
        goto LABEL_435;
      }
      *(void *)(v164 + 40) = v167;
      id v168 = objc_msgSend(v165, sel_dataTypeWithCode_, 61);
      if (!v168) {
        goto LABEL_436;
      }
      *(void *)(v164 + 48) = v168;
      id v169 = objc_msgSend(v165, sel_dataTypeWithCode_, 71);
      if (!v169) {
        goto LABEL_437;
      }
      *(void *)(v164 + 56) = v169;
      id v170 = objc_msgSend(v165, sel_dataTypeWithCode_, 72);
      if (!v170) {
        goto LABEL_438;
      }
      *(void *)(v164 + 64) = v170;
      id v171 = objc_msgSend(v165, sel_dataTypeWithCode_, 73);
      if (!v171) {
        goto LABEL_439;
      }
      *(void *)(v164 + 72) = v171;
      id v172 = objc_msgSend(v165, sel_dataTypeWithCode_, 124);
      if (!v172) {
        goto LABEL_440;
      }
      *(void *)(v164 + 80) = v172;
      id v173 = objc_msgSend(v165, sel_dataTypeWithCode_, 183);
      if (!v173) {
        goto LABEL_441;
      }
      *(void *)(v164 + 88) = v173;
      uint64_t v262 = v164;
      sub_1C28CD940();
      if (!objc_msgSend(v165, sel_dataTypeWithCode_, 275)) {
        goto LABEL_442;
      }
      sub_1C2857204();
      if (objc_msgSend(v165, sel_dataTypeWithCode_, 276)) {
        goto LABEL_173;
      }
      goto LABEL_443;
    case 0xEuLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5ED0;
      uint64_t v174 = self;
      id v175 = objc_msgSend(v174, sel_dataTypeWithCode_, 15);
      if (!v175) {
        goto LABEL_444;
      }
      *(void *)(v12 + 32) = v175;
      id v176 = objc_msgSend(v174, sel_dataTypeWithCode_, 18);
      if (!v176) {
        goto LABEL_445;
      }
      *(void *)(v12 + 40) = v176;
      id v177 = objc_msgSend(v174, sel_dataTypeWithCode_, 57);
      if (!v177) {
        goto LABEL_446;
      }
      *(void *)(v12 + 48) = v177;
      id v178 = objc_msgSend(v174, sel_dataTypeWithCode_, 60);
      if (!v178) {
        goto LABEL_447;
      }
      *(void *)(v12 + 56) = v178;
      id v179 = objc_msgSend(v174, sel_dataTypeWithCode_, 89);
      if (!v179) {
        goto LABEL_448;
      }
      *(void *)(v12 + 64) = v179;
      id v180 = objc_msgSend(v174, sel_dataTypeWithCode_, 97);
      if (!v180) {
        goto LABEL_449;
      }
      *(void *)(v12 + 72) = v180;
      id v181 = objc_msgSend(v174, sel_dataTypeWithCode_, 125);
      if (!v181) {
        goto LABEL_450;
      }
      *(void *)(v12 + 80) = v181;
      id v182 = objc_msgSend(v174, sel_dataTypeWithCode_, 189);
      if (!v182) {
        goto LABEL_451;
      }
      *(void *)(v12 + 88) = v182;
      id v183 = objc_msgSend(v174, sel_dataTypeWithCode_, 237);
      if (!v183) {
        goto LABEL_452;
      }
      *(void *)(v12 + 96) = v183;
      id v184 = objc_msgSend(v174, sel_dataTypeWithCode_, 251);
      if (!v184) {
        goto LABEL_453;
      }
      *(void *)(v12 + 104) = v184;
      id v185 = objc_msgSend(v174, sel_dataTypeWithCode_, 277);
      if (!v185) {
        goto LABEL_454;
      }
      *(void *)(v12 + 112) = v185;
      id v186 = objc_msgSend(v174, sel_dataTypeWithCode_, 279);
      if (!v186) {
        goto LABEL_455;
      }
      *(void *)(v12 + 120) = v186;
      goto LABEL_270;
    case 0x10uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 149);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_189:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 155);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_191:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 150);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_193:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 153);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_195:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 154);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_197:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5E90;
      char v187 = self;
      id v188 = objc_msgSend(v187, sel_dataTypeWithCode_, 157);
      if (!v188) {
        goto LABEL_456;
      }
      *(void *)(v12 + 32) = v188;
      id v189 = objc_msgSend(v187, sel_dataTypeWithCode_, 158);
      if (!v189) {
        goto LABEL_457;
      }
      *(void *)(v12 + 40) = v189;
      id v190 = objc_msgSend(v187, sel_dataTypeWithCode_, 159);
      if (!v190) {
        goto LABEL_458;
      }
      *(void *)(v12 + 48) = v190;
      id v191 = objc_msgSend(v187, sel_dataTypeWithCode_, 160);
      if (!v191) {
        goto LABEL_459;
      }
      *(void *)(v12 + 56) = v191;
      id v192 = objc_msgSend(v187, sel_dataTypeWithCode_, 161);
      if (!v192) {
        goto LABEL_460;
      }
      *(void *)(v12 + 64) = v192;
      id v193 = objc_msgSend(v187, sel_dataTypeWithCode_, 162);
      if (!v193) {
        goto LABEL_461;
      }
      *(void *)(v12 + 72) = v193;
      id v194 = objc_msgSend(v187, sel_dataTypeWithCode_, 163);
      if (!v194) {
        goto LABEL_462;
      }
      *(void *)(v12 + 80) = v194;
      id v195 = objc_msgSend(v187, sel_dataTypeWithCode_, 164);
      if (!v195) {
        goto LABEL_463;
      }
      *(void *)(v12 + 88) = v195;
      id v196 = objc_msgSend(v187, sel_dataTypeWithCode_, 165);
      if (!v196) {
        goto LABEL_464;
      }
      *(void *)(v12 + 96) = v196;
      id v197 = objc_msgSend(v187, sel_dataTypeWithCode_, 166);
      if (!v197) {
        goto LABEL_465;
      }
      *(void *)(v12 + 104) = v197;
      id v198 = objc_msgSend(v187, sel_dataTypeWithCode_, 167);
      if (!v198) {
        goto LABEL_466;
      }
      *(void *)(v12 + 112) = v198;
      id v199 = objc_msgSend(v187, sel_dataTypeWithCode_, 168);
      if (!v199) {
        goto LABEL_467;
      }
      *(void *)(v12 + 120) = v199;
      id v200 = objc_msgSend(v187, sel_dataTypeWithCode_, 169);
      if (!v200) {
        goto LABEL_468;
      }
      *(void *)(v12 + 128) = v200;
      id v201 = objc_msgSend(v187, sel_dataTypeWithCode_, 170);
      if (!v201) {
        goto LABEL_469;
      }
      *(void *)(v12 + 136) = v201;
      id v202 = objc_msgSend(v187, sel_dataTypeWithCode_, 171);
      if (!v202) {
        goto LABEL_470;
      }
      *(void *)(v12 + 144) = v202;
      id v203 = objc_msgSend(v187, sel_dataTypeWithCode_, 201);
      if (!v203) {
        goto LABEL_471;
      }
      *(void *)(v12 + 152) = v203;
      id v204 = objc_msgSend(v187, sel_dataTypeWithCode_, 202);
      if (!v204) {
        goto LABEL_472;
      }
      *(void *)(v12 + 160) = v204;
      id v205 = objc_msgSend(v187, sel_dataTypeWithCode_, 203);
      if (!v205) {
        goto LABEL_473;
      }
      *(void *)(v12 + 168) = v205;
      id v206 = objc_msgSend(v187, sel_dataTypeWithCode_, 204);
      if (!v206) {
        goto LABEL_474;
      }
      *(void *)(v12 + 176) = v206;
      id v207 = objc_msgSend(v187, sel_dataTypeWithCode_, 205);
      if (!v207) {
        goto LABEL_475;
      }
      *(void *)(v12 + 184) = v207;
      id v208 = objc_msgSend(v187, sel_dataTypeWithCode_, 206);
      if (!v208) {
        goto LABEL_476;
      }
      *(void *)(v12 + 192) = v208;
      id v209 = objc_msgSend(v187, sel_dataTypeWithCode_, 207);
      if (!v209) {
        goto LABEL_477;
      }
      *(void *)(v12 + 200) = v209;
      id v210 = objc_msgSend(v187, sel_dataTypeWithCode_, 220);
      if (!v210) {
        goto LABEL_478;
      }
      *(void *)(v12 + 208) = v210;
      id v211 = objc_msgSend(v187, sel_dataTypeWithCode_, 221);
      if (!v211) {
        goto LABEL_479;
      }
      *(void *)(v12 + 216) = v211;
      id v212 = objc_msgSend(v187, sel_dataTypeWithCode_, 222);
      if (!v212) {
        goto LABEL_480;
      }
      *(void *)(v12 + 224) = v212;
      id v213 = objc_msgSend(v187, sel_dataTypeWithCode_, 223);
      if (!v213) {
        goto LABEL_481;
      }
      *(void *)(v12 + 232) = v213;
      id v214 = objc_msgSend(v187, sel_dataTypeWithCode_, 224);
      if (!v214) {
        goto LABEL_482;
      }
      *(void *)(v12 + 240) = v214;
      id v215 = objc_msgSend(v187, sel_dataTypeWithCode_, 225);
      if (!v215) {
        goto LABEL_483;
      }
      *(void *)(v12 + 248) = v215;
      id v216 = objc_msgSend(v187, sel_dataTypeWithCode_, 226);
      if (!v216) {
        goto LABEL_484;
      }
      *(void *)(v12 + 256) = v216;
      id v217 = objc_msgSend(v187, sel_dataTypeWithCode_, 229);
      if (!v217) {
        goto LABEL_485;
      }
      *(void *)(v12 + 264) = v217;
      id v218 = objc_msgSend(v187, sel_dataTypeWithCode_, 230);
      if (!v218) {
        goto LABEL_486;
      }
      *(void *)(v12 + 272) = v218;
      id v219 = objc_msgSend(v187, sel_dataTypeWithCode_, 231);
      if (!v219) {
        goto LABEL_487;
      }
      *(void *)(v12 + 280) = v219;
      id v220 = objc_msgSend(v187, sel_dataTypeWithCode_, 232);
      if (!v220) {
        goto LABEL_488;
      }
      *(void *)(v12 + 288) = v220;
      id v221 = objc_msgSend(v187, sel_dataTypeWithCode_, 233);
      if (!v221) {
        goto LABEL_489;
      }
      *(void *)(v12 + 296) = v221;
      id v222 = objc_msgSend(v187, sel_dataTypeWithCode_, 234);
      if (!v222) {
        goto LABEL_490;
      }
      *(void *)(v12 + 304) = v222;
      id v223 = objc_msgSend(v187, sel_dataTypeWithCode_, 235);
      if (!v223) {
        goto LABEL_491;
      }
      *(void *)(v12 + 312) = v223;
      id v224 = objc_msgSend(v187, sel_dataTypeWithCode_, 240);
      if (!v224) {
        goto LABEL_492;
      }
      *(void *)(v12 + 320) = v224;
      id v225 = objc_msgSend(v187, sel_dataTypeWithCode_, 241);
      if (!v225) {
        goto LABEL_493;
      }
      *(void *)(v12 + 328) = v225;
      id v90 = objc_msgSend(v187, sel_dataTypeWithCode_, 242);
      if (!v90) {
        goto LABEL_494;
      }
LABEL_236:
      *(void *)(v12 + 336) = v90;
      goto LABEL_270;
    case 0x11uLL:
      goto LABEL_189;
    case 0x12uLL:
      goto LABEL_191;
    case 0x13uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 151);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_268:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 152);
      if (v156) {
        goto LABEL_269;
      }
      goto LABEL_516;
    case 0x14uLL:
      goto LABEL_268;
    case 0x15uLL:
      goto LABEL_193;
    case 0x16uLL:
      goto LABEL_195;
    case 0x17uLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5EE0;
      v248 = self;
      id v249 = objc_msgSend(v248, sel_dataTypeWithCode_, 124);
      if (!v249) {
        goto LABEL_517;
      }
      *(void *)(v12 + 32) = v249;
      id v250 = objc_msgSend(v248, sel_dataTypeWithCode_, 182);
      if (!v250) {
        goto LABEL_518;
      }
      *(void *)(v12 + 40) = v250;
      id v251 = objc_msgSend(v248, sel_dataTypeWithCode_, 183);
      if (!v251) {
        goto LABEL_519;
      }
      *(void *)(v12 + 48) = v251;
      id v252 = objc_msgSend(v248, sel_dataTypeWithCode_, 187);
      if (!v252) {
        goto LABEL_520;
      }
      *(void *)(v12 + 56) = v252;
      id v253 = objc_msgSend(v248, sel_dataTypeWithCode_, 188);
      if (!v253) {
        goto LABEL_521;
      }
      *(void *)(v12 + 64) = v253;
      id v254 = objc_msgSend(v248, sel_dataTypeWithCode_, 194);
      if (!v254) {
        goto LABEL_522;
      }
      *(void *)(v12 + 72) = v254;
      id v255 = objc_msgSend(v248, sel_dataTypeWithCode_, 195);
      if (!v255) {
        goto LABEL_523;
      }
      *(void *)(v12 + 80) = v255;
      id v256 = objc_msgSend(v248, sel_dataTypeWithCode_, 196);
      if (!v256) {
        goto LABEL_524;
      }
      *(void *)(v12 + 88) = v256;
      id v257 = objc_msgSend(v248, sel_dataTypeWithCode_, 249);
      if (!v257) {
        goto LABEL_525;
      }
      *(void *)(v12 + 96) = v257;
      id v258 = objc_msgSend(v248, sel_dataTypeWithCode_, 250);
      if (!v258) {
        goto LABEL_526;
      }
      *(void *)(v12 + 104) = v258;
      id v259 = objc_msgSend(v248, sel_dataTypeWithCode_, 258);
      if (!v259) {
        goto LABEL_527;
      }
      *(void *)(v12 + 112) = v259;
      id v260 = objc_msgSend(v248, sel_dataTypeWithCode_, 259);
      if (!v260) {
        goto LABEL_528;
      }
      *(void *)(v12 + 120) = v260;
      id v261 = objc_msgSend(v248, sel_dataTypeWithCode_, 260);
      if (!v261) {
        goto LABEL_529;
      }
      *(void *)(v12 + 128) = v261;
      goto LABEL_270;
    case 0x1AuLL:
      goto LABEL_197;
    case 0x1BuLL:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 217);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_239:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 268);
      if (v156) {
        goto LABEL_269;
      }
      __break(1u);
LABEL_241:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D19D0;
      id v156 = objc_msgSend(self, sel_dataTypeWithCode_, 273);
      if (v156)
      {
LABEL_269:
        *(void *)(v12 + 32) = v156;
        goto LABEL_270;
      }
      __break(1u);
LABEL_243:
      sub_1C27D87FC();
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_1C28D5EF0;
      uint64_t v226 = self;
      id v227 = objc_msgSend(v226, sel_dataTypeWithCode_, 63);
      if (!v227) {
        goto LABEL_495;
      }
      *(void *)(v12 + 32) = v227;
      id v228 = objc_msgSend(v226, sel_dataTypeWithCode_, 75);
      if (!v228) {
        goto LABEL_496;
      }
      *(void *)(v12 + 40) = v228;
      id v229 = objc_msgSend(v226, sel_dataTypeWithCode_, 99);
      if (!v229) {
        goto LABEL_497;
      }
      *(void *)(v12 + 48) = v229;
      id v230 = objc_msgSend(v226, sel_dataTypeWithCode_, 279);
      if (!v230) {
        goto LABEL_498;
      }
      *(void *)(v12 + 56) = v230;
      id v231 = objc_msgSend(v226, sel_dataTypeWithCode_, 284);
      if (!v231) {
        goto LABEL_499;
      }
      *(void *)(v12 + 64) = v231;
      id v232 = objc_msgSend(v226, sel_dataTypeWithCode_, 287);
      if (!v232) {
        goto LABEL_500;
      }
      *(void *)(v12 + 72) = v232;
      id v114 = objc_msgSend(v226, sel_dataTypeWithCode_, 288);
      if (!v114) {
        goto LABEL_501;
      }
LABEL_250:
      *(void *)(v12 + 80) = v114;
      goto LABEL_270;
    case 0x1EuLL:
      goto LABEL_239;
    case 0x1FuLL:
      goto LABEL_241;
    default:
      return result;
  }
}

uint64_t _sSo17HKDisplayCategoryC16HealthExperienceE11identifiers3forSaySo0aB10IdentifierVGSo12HKObjectTypeC_tFZ_0(void *a1)
{
  id v1 = objc_msgSend(a1, sel_code);
  if ((unint64_t)v1 > 0x13A) {
    return MEMORY[0x1E4FBC860];
  }
  else {
    return (uint64_t)*(&off_1E6456C08 + (void)v1);
  }
}

uint64_t String.nonEmptyOrNil.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v2) {
    return 0;
  }
  uint64_t v3 = a1;
  swift_bridgeObjectRetain();
  return v3;
}

unint64_t static String.textItemMarkdownDummyLink.getter()
{
  return 0xD000000000000024;
}

uint64_t HKSummarySharingEntry.contactIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_CNContactIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C28CD730();

  return v3;
}

uint64_t HKSummarySharingEntry.emailOrPhoneNumber.getter()
{
  id v1 = objc_msgSend(v0, sel_primaryContactIdentifier);
  uint64_t v2 = sub_1C28CD730();

  return v2;
}

uint64_t sub_1C2859E24()
{
  id v1 = objc_msgSend(*v0, sel_CNContactIdentifier);
  if (!v1) {
    return 0;
  }
  uint64_t v2 = v1;
  uint64_t v3 = sub_1C28CD730();

  return v3;
}

uint64_t sub_1C2859E8C()
{
  id v1 = objc_msgSend(*v0, sel_primaryContactIdentifier);
  uint64_t v2 = sub_1C28CD730();

  return v2;
}

uint64_t dispatch thunk of ContactLookUpInformationProviding.contactIdentifier.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContactLookUpInformationProviding.emailOrPhoneNumber.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntryProfileInformation(for:)(void *a1)
{
  sub_1C285A9E8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v20 = v2;
  uint64_t v21 = v3;
  MEMORY[0x1F4188790](v2);
  id v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v22 = type metadata accessor for SharingEntryProfileInformation;
  sub_1C285AAD4(0, &qword_1EA310CA0, (void (*)(uint64_t))type metadata accessor for SharingEntryProfileInformation);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v23 = v6;
  uint64_t v24 = v7;
  MEMORY[0x1F4188790](v6);
  id v9 = (char *)&v20 - v8;
  uint64_t v10 = swift_allocObject();
  *(void *)(v10 + 16) = a1;
  id v11 = a1;
  uint64_t v12 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1C285AD0C, v10);
  swift_release();
  uint64_t v25 = v12;
  *(void *)(swift_allocObject() + 16) = v11;
  uint64_t v13 = MEMORY[0x1E4FBB718];
  sub_1C27D9A54(0, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, MEMORY[0x1E4FBB718], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
  sub_1C27D1C9C(0, &qword_1EBB756D0);
  sub_1C27D9AD0(&qword_1EA310C98, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, v13);
  id v14 = v11;
  sub_1C28CD390();
  swift_release();
  sub_1C27BF0D0(&qword_1EA310CB8, (void (*)(uint64_t))sub_1C285A9E8);
  uint64_t v15 = v20;
  uint64_t v16 = sub_1C28CD300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v15);
  uint64_t v25 = v16;
  sub_1C27D9A54(0, &qword_1EA310CA8, (uint64_t)&qword_1EBB756D0, 0x1E4F2B5D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
  type metadata accessor for SharingEntryProfileInformation();
  sub_1C285AB7C();
  sub_1C28CD330();
  swift_release();
  sub_1C285ADD8(&qword_1EA310CC0, &qword_1EA310CA0, (void (*)(uint64_t))v22);
  uint64_t v17 = v23;
  uint64_t v18 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v17);
  return v18;
}

uint64_t HKSummarySharingEntryStore.fetchFirstEntry(matching:)(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  sub_1C27D9B9C();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C27D9C68();
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v25 = v7;
  MEMORY[0x1F4188790](v7);
  id v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1C285AE2C();
  uint64_t v26 = v10;
  uint64_t v29 = *(void *)(v10 - 8);
  MEMORY[0x1F4188790](v10);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_1C28CDF00();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x1E4FBB320];
  sub_1C27D9A54(0, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, MEMORY[0x1E4FBB320], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
  uint64_t v23 = v14;
  sub_1C27D9AD0(&qword_1EBB75578, &qword_1EBB75580, (uint64_t)&qword_1EBB75690, (uint64_t)v13);
  sub_1C28CD360();
  swift_release();
  uint64_t v15 = swift_allocObject();
  sub_1C27D8E3C(0, &qword_1EBB75690, v13);
  sub_1C27BF0D0(&qword_1EBB748E0, (void (*)(uint64_t))sub_1C27D9B9C);
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  sub_1C28CD330();
  swift_release();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  sub_1C27BF0D0(&qword_1EBB75480, (void (*)(uint64_t))sub_1C27D9C68);
  uint64_t v16 = v25;
  uint64_t v17 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v24 + 8))(v9, v16);
  uint64_t v30 = v17;
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = v28;
  *(void *)(v18 + 16) = v27;
  *(void *)(v18 + 24) = v19;
  sub_1C27D8E3C(0, &qword_1EA310C90, MEMORY[0x1E4FBB718]);
  swift_retain();
  sub_1C28CD330();
  swift_release();
  swift_release();
  sub_1C27BF0D0(&qword_1EA310CD0, (void (*)(uint64_t))sub_1C285AE2C);
  uint64_t v20 = v26;
  uint64_t v21 = sub_1C28CD300();
  (*(void (**)(char *, uint64_t))(v29 + 8))(v12, v20);
  return v21;
}

uint64_t sub_1C285A720@<X0>(unint64_t *a1@<X0>, uint64_t (*a2)(id)@<X1>, void *a3@<X8>)
{
  unint64_t v5 = *a1;
  swift_retain();
  uint64_t v6 = sub_1C285C700(v5, a2);
  uint64_t result = swift_release();
  *a3 = v6;
  return result;
}

uint64_t HKSummarySharingEntryStore.fetchIncomingAcceptedEntry(for:)(void *a1)
{
  sub_1C285A9E8();
  v14[0] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x1F4188790](v2);
  unint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  id v7 = a1;
  uint64_t v8 = HKSummarySharingEntryStore.fetchFirstEntry(matching:)((uint64_t)sub_1C285C808, v6);
  swift_release();
  v14[1] = v8;
  *(void *)(swift_allocObject() + 16) = v7;
  uint64_t v9 = MEMORY[0x1E4FBB718];
  sub_1C27D9A54(0, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, MEMORY[0x1E4FBB718], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
  sub_1C27D1C9C(0, &qword_1EBB756D0);
  sub_1C27D9AD0(&qword_1EA310C98, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, v9);
  id v10 = v7;
  sub_1C28CD390();
  swift_release();
  sub_1C27BF0D0(&qword_1EA310CB8, (void (*)(uint64_t))sub_1C285A9E8);
  uint64_t v11 = v14[0];
  uint64_t v12 = sub_1C28CD300();
  swift_release();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v11);
  return v12;
}

void sub_1C285A9E8()
{
  if (!qword_1EA310C80)
  {
    uint64_t v0 = MEMORY[0x1E4FBB718];
    sub_1C27D9A54(255, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, MEMORY[0x1E4FBB718], (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D8E3C);
    sub_1C27D1C9C(255, &qword_1EBB756D0);
    sub_1C27D9AD0(&qword_1EA310C98, &qword_1EA310C88, (uint64_t)&qword_1EA310C90, v0);
    unint64_t v1 = sub_1C28CCF50();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_1EA310C80);
    }
  }
}

void sub_1C285AAD4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    sub_1C27D9A54(255, &qword_1EA310CA8, (uint64_t)&qword_1EBB756D0, 0x1E4F2B5D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
    a3(255);
    sub_1C285AB7C();
    unint64_t v5 = sub_1C28CCF10();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

unint64_t sub_1C285AB7C()
{
  unint64_t result = qword_1EA310CB0;
  if (!qword_1EA310CB0)
  {
    sub_1C27D9A54(255, &qword_1EA310CA8, (uint64_t)&qword_1EBB756D0, 0x1E4F2B5D8, (void (*)(uint64_t, uint64_t, uint64_t))sub_1C27D1C9C);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_1EA310CB0);
  }
  return result;
}

id sub_1C285AC00(void *a1, void *a2)
{
  id result = objc_msgSend(a1, sel_profileIdentifier);
  if (result)
  {
    unint64_t v5 = result;
    sub_1C27D1C9C(0, (unint64_t *)&qword_1EBB77120);
    id v6 = a2;
    id v7 = v5;
    char v8 = sub_1C28CDF30();

    if ((v8 & 1) != 0 && objc_msgSend(a1, sel_status) == (id)1) {
      return (id)(objc_msgSend(a1, sel_direction) == (id)1);
    }
    else {
      return 0;
    }
  }
  return result;
}

uint64_t sub_1C285ACD4()
{
  return swift_deallocObject();
}

id sub_1C285AD0C(void *a1)
{
  return sub_1C285AC00(a1, *(void **)(v1 + 16));
}

id sub_1C285AD14@<X0>(void **a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v3 = *a1;
  if (*a1)
  {
    *a3 = v3;
    return v3;
  }
  else
  {
    sub_1C285BEE8();
    swift_allocError();
    void *v6 = a2;
    id v7 = a2;
    return (id)swift_willThrow();
  }
}