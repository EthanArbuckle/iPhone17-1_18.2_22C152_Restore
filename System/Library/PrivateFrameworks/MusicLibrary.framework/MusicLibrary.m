void sub_1B022FFBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_list va;

  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0230078(_Unwind_Exception *a1)
{
}

void sub_1B0230098(void *a1)
{
}

void sub_1B023021C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023041C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0230914(_Unwind_Exception *a1)
{
  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1B02318CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  _Block_object_dispose(&a16, 8);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1B02320D0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B02345B4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B0235654(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14, void *a15, void *a16, void *a17, void *a18, uint64_t a19, void *a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,void *a25)
{
  _Unwind_Resume(a1);
}

void sub_1B0235A80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3RestrictionInfoInitializeIfNecessary()
{
  if (sRestrictionSettingsInfo) {
    return;
  }
  pthread_mutex_lock(&sRestrictionSettingsLock);
  if (!sRestrictionSettingsInfo)
  {
    byte_1EB551E2A = ML3HasExplicitContentRestriction();
    v0 = [MEMORY[0x1E4F74230] sharedConnection];
    int v1 = [v0 effectiveBoolValueForSetting:*MEMORY[0x1E4F73F78]];

    byte_1EB551E2B = v1 == 2;
    v2 = [MEMORY[0x1E4F74230] sharedConnection];
    int v3 = [v2 effectiveBoolValueForSetting:*MEMORY[0x1E4F740E8]];

    byte_1EB551E2C = v3 == 2;
    ML3RestrictionRankInfoInitialize(&qword_1EB551E30, (void *)*MEMORY[0x1E4F740C0], 0, 1000);
    ML3RestrictionRankInfoInitialize(&qword_1EB551E48, (void *)*MEMORY[0x1E4F740C8], 0, 1000);
    if (!byte_1EB551E2A && !byte_1EB551E2B)
    {
      BOOL v4 = 1;
      if (byte_1EB551E2C)
      {
LABEL_9:
        byte_1EB551E29 = v4;
        sRestrictionSettingsInfo = 1;
        goto LABEL_10;
      }
      if (qword_1EB551E38 >= qword_1EB551E40)
      {
        BOOL v4 = qword_1EB551E50 < qword_1EB551E58;
        goto LABEL_9;
      }
    }
    BOOL v4 = 1;
    goto LABEL_9;
  }
LABEL_10:

  pthread_mutex_unlock(&sRestrictionSettingsLock);
}

void sub_1B0235F54(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3RestrictionRankInfoInitialize(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  id v9 = a2;
  v7 = [MEMORY[0x1E4F74230] sharedConnection];
  *a1 = a3;
  a1[2] = a4;
  v8 = [v7 effectiveValueForSetting:v9];
  a1[1] = (int)[v8 intValue];
}

void sub_1B02364C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

BOOL ML3HasExplicitContentRestriction()
{
  v0 = [MEMORY[0x1E4F74230] sharedConnection];
  int v1 = [v0 effectiveBoolValueForSetting:*MEMORY[0x1E4F73FE8]];

  return v1 == 2;
}

void sub_1B0236548(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B0238AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B0238EC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void FastAppendPersistentID(ML3QueryResultSet_MutableBackingStore *a1, int64_t a2, char a3)
{
  end = a1->super._persistentIDs.__end_;
  value = a1->super._persistentIDs.__end_cap_.__value_;
  if (end >= value)
  {
    begin = a1->super._persistentIDs.__begin_;
    uint64_t v10 = end - begin;
    unint64_t v11 = v10 + 1;
    if ((unint64_t)(v10 + 1) >> 61) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v12 = (char *)value - (char *)begin;
    if (v12 >> 2 > v11) {
      unint64_t v11 = v12 >> 2;
    }
    BOOL v13 = (unint64_t)v12 >= 0x7FFFFFFFFFFFFFF8;
    unint64_t v14 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v13) {
      unint64_t v14 = v11;
    }
    if (v14)
    {
      unint64_t v14 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v14);
      begin = a1->super._persistentIDs.__begin_;
      end = a1->super._persistentIDs.__end_;
    }
    else
    {
      uint64_t v15 = 0;
    }
    v16 = (int64_t *)(v14 + 8 * v10);
    v17 = (int64_t *)(v14 + 8 * v15);
    int64_t *v16 = a2;
    v8 = v16 + 1;
    while (end != begin)
    {
      int64_t v18 = *--end;
      *--v16 = v18;
    }
    a1->super._persistentIDs.__begin_ = v16;
    a1->super._persistentIDs.__end_ = v8;
    a1->super._persistentIDs.__end_cap_.__value_ = v17;
    if (begin) {
      operator delete(begin);
    }
  }
  else
  {
    int64_t *end = a2;
    v8 = end + 1;
  }
  a1->super._persistentIDs.__end_ = v8;
  v20 = a1->super._sections.__end_;
  v19 = a1->super._sections.__end_cap_.__value_;
  if (v20 >= v19)
  {
    v22 = a1->super._sections.__begin_;
    uint64_t v23 = v20 - v22;
    uint64_t v24 = v20 - v22 + 1;
    if (v24 < 0) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v25 = v19 - v22;
    if (2 * v25 > v24) {
      uint64_t v24 = 2 * v25;
    }
    if (v25 >= 0x3FFFFFFFFFFFFFFFLL) {
      size_t v26 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      size_t v26 = v24;
    }
    if (v26) {
      uint64_t v27 = (char *)operator new(v26);
    }
    else {
      uint64_t v27 = 0;
    }
    v28 = &v27[v26];
    v27[v23] = a3;
    v21 = &v27[v23 + 1];
    if (v20 == v22)
    {
      v27 += v23;
    }
    else
    {
      v29 = &v20[~(unint64_t)v22];
      do
      {
        char v30 = *--v20;
        (v29--)[(void)v27] = v30;
      }
      while (v20 != v22);
      v20 = a1->super._sections.__begin_;
    }
    a1->super._sections.__begin_ = v27;
    a1->super._sections.__end_ = v21;
    a1->super._sections.__end_cap_.__value_ = v28;
    if (v20) {
      operator delete(v20);
    }
  }
  else
  {
    char *v20 = a3;
    v21 = v20 + 1;
  }
  a1->super._sections.__end_ = v21;
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(unint64_t a1)
{
  if (a1 >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(8 * a1);
}

void sub_1B02392D4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B02395FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B02396CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0239A08(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0239C5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023A674(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  _Unwind_Resume(a1);
}

void sub_1B023A760(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B023B1C0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t iPhoneSortKeyBuilderInstallSqlite3_v2(atomic_uint *pApp, sqlite3 *db)
{
  if (pApp) {
    atomic_fetch_add_explicit(pApp, 1u, memory_order_relaxed);
  }
  uint64_t result = sqlite3_create_function_v2(db, "iPhoneSortKey", 1, 2052, pApp, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))iPhoneSortKeyBuilderMake_xFunc, 0, 0, (void (__cdecl *)(void *))iPhoneSortKeyBuilderRelease);
  if (!result)
  {
    uint64_t result = sqlite3_create_function_v2(db, "iPhoneSortSection", 1, 2053, pApp, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))iPhoneSortKeyBuilderSection_xFunc, 0, 0, 0);
    if (!result) {
      return sqlite3_create_function_v2(db, "iPhoneGroupingKey", 1, 2052, pApp, (void (__cdecl *)(sqlite3_context *, int, sqlite3_value **))iPhoneSortKeyBuilderGroupingKey_xFunc, 0, 0, 0);
    }
  }
  return result;
}

void sub_1B023BC8C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3ArtworkConfigurationMediaTypeForString(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@"MLMediaTypeMusicQuiz"])
  {
    uint64_t v2 = 1;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeAudioBook"])
  {
    uint64_t v2 = 2;
  }
  else if ([v1 isEqualToString:@"MLMediaTypePodcast"])
  {
    uint64_t v2 = 4;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeSong"])
  {
    uint64_t v2 = 8;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeVoiceMemo"])
  {
    uint64_t v2 = 16;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeITunesUAudio"])
  {
    uint64_t v2 = 32;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeDigitalBooklet"])
  {
    uint64_t v2 = 64;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeVideoPodcast"])
  {
    uint64_t v2 = 256;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeTVShow"])
  {
    uint64_t v2 = 512;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeMusicVideo"])
  {
    uint64_t v2 = 1024;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeMovie"])
  {
    uint64_t v2 = 2048;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeVideoITunesU"])
  {
    uint64_t v2 = 4096;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeHomeVideo"])
  {
    uint64_t v2 = 0x2000;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeAny"])
  {
    uint64_t v2 = 0xFFFFFFLL;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeAnyAudio"])
  {
    uint64_t v2 = 255;
  }
  else if ([v1 isEqualToString:@"MLMediaTypeAnyVideo"])
  {
    uint64_t v2 = 65280;
  }
  else
  {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t ML3GreenTeaIsLoggableBundleIdentifier(void *a1)
{
  uint64_t v1 = ML3GreenTeaIsLoggableBundleIdentifier_onceToken;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&ML3GreenTeaIsLoggableBundleIdentifier_onceToken, &__block_literal_global_15281);
  }
  int v3 = [(id)ML3GreenTeaIsLoggableBundleIdentifier___greenTeaBundleIdentifierIgnoreList containsObject:v2];

  return v3 ^ 1u;
}

void sub_1B023C8B8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Block_object_dispose((const void *)(v16 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1B023C970(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023CA3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023CB98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B023D2B0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B023D408(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Block_object_dispose((const void *)(v16 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_1B023D5AC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023D804(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023D9F4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023DD18(_Unwind_Exception *a1)
{
  v6 = v4;

  _Unwind_Resume(a1);
}

void sub_1B023E050(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{
  _Unwind_Resume(a1);
}

void sub_1B023E324(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023E500(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);

  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023E69C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023E6D8()
{
}

void sub_1B023E788(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023E83C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023E908(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023E9DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1B023EB24(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B023EB74()
{
}

void sub_1B023F098(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, void *a11, void *a12, void *a13, void *a14, void *a15)
{
  std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v20 - 192);
  std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v20 - 144);

  _Unwind_Resume(a1);
}

uint64_t std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(uint64_t a1)
{
  id v2 = *(void **)(a1 + 16);
  if (v2)
  {
    do
    {
      int v3 = (void *)*v2;
      operator delete(v2);
      id v2 = v3;
    }
    while (v3);
  }
  BOOL v4 = *(void **)a1;
  *(void *)a1 = 0;
  if (v4) {
    operator delete(v4);
  }
  return a1;
}

uint64_t std::unordered_set<int>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (i = *(uint64_t **)(a2 + 16); i; i = (uint64_t *)*i)
    std::__hash_table<int,std::hash<int>,std::equal_to<int>,std::allocator<int>>::__emplace_unique_key_args<int,int const&>(a1, *((_DWORD *)i + 4), *((_DWORD *)i + 4));
  return a1;
}

void sub_1B023F3E4(_Unwind_Exception *a1)
{
  std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(uint64_t a1, size_t __n)
{
  if (__n == 1)
  {
    size_t prime = 2;
  }
  else
  {
    size_t prime = __n;
    if ((__n & (__n - 1)) != 0) {
      size_t prime = std::__next_prime(__n);
    }
  }
  int8x8_t v4 = *(int8x8_t *)(a1 + 8);
  if (prime <= *(void *)&v4)
  {
    if (prime >= *(void *)&v4) {
      return;
    }
    unint64_t v11 = vcvtps_u32_f32((float)*(unint64_t *)(a1 + 24) / *(float *)(a1 + 32));
    if (*(void *)&v4 < 3uLL || (uint8x8_t v12 = (uint8x8_t)vcnt_s8(v4), v12.i16[0] = vaddlv_u8(v12), v12.u32[0] > 1uLL))
    {
      unint64_t v11 = std::__next_prime(v11);
    }
    else
    {
      uint64_t v13 = 1 << -(char)__clz(v11 - 1);
      if (v11 >= 2) {
        unint64_t v11 = v13;
      }
    }
    if (prime <= v11) {
      size_t prime = v11;
    }
    if (prime >= *(void *)&v4) {
      return;
    }
    if (!prime)
    {
      uint64_t v16 = *(void **)a1;
      *(void *)a1 = 0;
      if (v16) {
        operator delete(v16);
      }
      *(void *)(a1 + 8) = 0;
      return;
    }
  }
  if (prime >> 61) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  v5 = operator new(8 * prime);
  v6 = *(void **)a1;
  *(void *)a1 = v5;
  if (v6) {
    operator delete(v6);
  }
  uint64_t v7 = 0;
  *(void *)(a1 + 8) = prime;
  do
    *(void *)(*(void *)a1 + 8 * v7++) = 0;
  while (prime != v7);
  v8 = *(void **)(a1 + 16);
  if (v8)
  {
    size_t v9 = v8[1];
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)prime);
    v10.i16[0] = vaddlv_u8(v10);
    if (v10.u32[0] > 1uLL)
    {
      if (v9 >= prime) {
        v9 %= prime;
      }
    }
    else
    {
      v9 &= prime - 1;
    }
    *(void *)(*(void *)a1 + 8 * v9) = a1 + 16;
    unint64_t v14 = (void *)*v8;
    if (*v8)
    {
      do
      {
        size_t v15 = v14[1];
        if (v10.u32[0] > 1uLL)
        {
          if (v15 >= prime) {
            v15 %= prime;
          }
        }
        else
        {
          v15 &= prime - 1;
        }
        if (v15 != v9)
        {
          if (!*(void *)(*(void *)a1 + 8 * v15))
          {
            *(void *)(*(void *)a1 + 8 * v15) = v8;
            goto LABEL_31;
          }
          void *v8 = *v14;
          *unint64_t v14 = **(void **)(*(void *)a1 + 8 * v15);
          **(void **)(*(void *)a1 + 8 * v15) = v14;
          unint64_t v14 = v8;
        }
        size_t v15 = v9;
LABEL_31:
        v8 = v14;
        unint64_t v14 = (void *)*v14;
        size_t v9 = v15;
      }
      while (v14);
    }
  }
}

void sub_1B023F68C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023F8DC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B023FAB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B023FB7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void *iPhoneSortKeyBuilderCreateForCurrentDevice()
{
  ML3LocalizationLanguageCanonicalIdentifier();
  v0 = (__CFString *)objc_claimAutoreleasedReturnValue();
  uint64_t v1 = ML3LocalizedSectionDictionary();
  if ((_NSIsNSDictionary() & 1) == 0)
  {
    id v2 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)buf = 0;
      _os_log_impl(&dword_1B022D000, v2, OS_LOG_TYPE_ERROR, "Failed to load section dictionary - using simple sections", buf, 2u);
    }

    int v3 = [MEMORY[0x1E4F28B50] mainBundle];
    int8x8_t v4 = [v3 bundleIdentifier];

    if ([v4 isEqualToString:@"com.apple.Music"])
    {
      v5 = [NSString stringWithFormat:@"We failed to load the sections headers dictionary for language %@", v0];
      ML3ShowFileRadarAlert(@"Invalid Sections Found", @"Failed to load sections headers dictionary.", v5);
    }
    uint64_t v1 = &unk_1F0912668;
  }
  v6 = iPhoneSortKeyBuilderCreate(v0, (const __CFDictionary *)v1);

  return v6;
}

void *iPhoneSortKeyBuilderCreate(const __CFString *a1, const __CFDictionary *a2)
{
  if (!a1) {
    __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 105, "canonicalLanguageIdentifier != NULL");
  }
  int8x8_t v4 = malloc_type_calloc(1uLL, 0x30uLL, 0x1060040E905D0B9uLL);
  if (!v4) {
    __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 108, "builder != NULL");
  }
  v5 = v4;
  CFArrayRef Value = (const __CFArray *)CFDictionaryGetValue(a2, @"SectionHeaders");
  if (!Value || (CFArrayRef v7 = Value, v8 = CFGetTypeID(Value), v8 != CFArrayGetTypeID()) || !CFArrayGetCount(v7)) {
    __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 111, "!CFSafeGetArrayIsEmpty(sectionHeadersDictionaries)");
  }
  CFIndex Count = CFArrayGetCount(v7);
  v5[4] = Count;
  if (Count >= 75) {
    __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 114, "builder->languageCount <= MAXIMUM_LANGUAGE_COUNT");
  }
  uint8x8_t v10 = CFDictionaryGetValue(a2, @"NameTransform");
  v5[5] = v10;
  if (v10)
  {
    CFTypeID v11 = CFGetTypeID(v10);
    if (v11 != CFStringGetTypeID()) {
      __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 117, "builder->nameTransform == NULL || (CFGetTypeID(builder->nameTransform) == CFStringGetTypeID())");
    }
  }
  int v62 = 0;
  CFIndex Length = CFStringGetLength(a1);
  CFIndex MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x600u);
  unint64_t v14 = (UInt8 *)malloc_type_malloc(MaximumSizeForEncoding + 1, 0xFFB73412uLL);
  CFIndex usedBufLen = 0;
  v63.location = 0;
  v63.length = Length;
  CFStringGetBytes(a1, v63, 0x600u, 0, 0, v14, MaximumSizeForEncoding, &usedBufLen);
  v14[usedBufLen] = 0;
  uint64_t v15 = ucol_open();
  free(v14);
  UErrorCode v16 = v62;
  v57 = v5;
  if (v62 > 0)
  {
    int v52 = 703;
LABEL_53:
    v53 = (FILE *)*MEMORY[0x1E4F143C8];
    v54 = u_errorName(v16);
    fprintf(v53, "%s:%d: %s\n", "/Library/Caches/com.apple.xbs/Sources/MusicLibrary/MusicLibrary/Sorting/iPhoneSortKey/iPhoneSortKey.c", v52, v54);
    v5[1] = 0;
LABEL_54:
    __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 120, "builder->collator != NULL");
  }
  ucol_setAttribute();
  if (v62 >= 1)
  {
    ucol_close();
    int v52 = 712;
    UErrorCode v16 = v62;
    goto LABEL_53;
  }
  CFStringRef theString = a1;
  v5[1] = v15;
  if (!v15) {
    goto LABEL_54;
  }
  v5[3] = malloc_type_calloc(v5[4], 0x30uLL, 0x106004084DD7D94uLL);
  if ((uint64_t)v5[4] >= 1)
  {
    CFIndex v17 = 0;
    CFIndex v18 = 0;
    CFAllocatorRef v19 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFArrayRef v56 = v7;
    do
    {
      CFDictionaryRef ValueAtIndex = (const __CFDictionary *)CFArrayGetValueAtIndex(v7, v17);
      if (!ValueAtIndex
        || (v21 = ValueAtIndex, v22 = v5[3], CFTypeID v23 = CFGetTypeID(ValueAtIndex), v23 != CFDictionaryGetTypeID()))
      {
        __assert_rtn("BuildLanguage", "iPhoneSortKey.c", 638, "!CFSafeTypeMismatch(languageDictionary, CFDictionaryGetTypeID)");
      }
      CFStringRef v24 = (const __CFString *)CFDictionaryGetValue(v21, @"FirstCharacterAfterLanguage");
      if (!v24 || (CFStringRef v25 = v24, v26 = CFGetTypeID(v24), v26 != CFStringGetTypeID())) {
        __assert_rtn("BuildLanguage", "iPhoneSortKey.c", 641, "!CFSafeTypeMismatch(firstCharacterAfterLanguage, CFStringGetTypeID)");
      }
      CFArrayRef v27 = (const __CFArray *)CFDictionaryGetValue(v21, @"Headers");
      if (!v27 || (CFArrayRef v28 = v27, v29 = CFGetTypeID(v27), v29 != CFArrayGetTypeID()) || !CFArrayGetCount(v28)) {
        __assert_rtn("BuildLanguage", "iPhoneSortKey.c", 644, "!CFSafeGetArrayIsEmpty(headers)");
      }
      CFStringRef v30 = (const __CFString *)CFArrayGetValueAtIndex(v28, 0);
      CFDataRef SortKeyForSections = CFStringCreateSortKeyForSections(v19, v30);
      if (!SortKeyForSections) {
        __assert_rtn("BuildLanguage", "iPhoneSortKey.c", 647, "firstCharacterSortKey != NULL");
      }
      CFDataRef v32 = SortKeyForSections;
      CFDataRef v33 = CFStringCreateSortKeyForSections(v19, v25);
      if (!v33) {
        __assert_rtn("BuildLanguage", "iPhoneSortKey.c", 650, "endCharacterSortKey != NULL");
      }
      CFDataRef v34 = v33;
      CFIndex v59 = v18;
      CFDataRef cf = v32;
      uint64_t v58 = v22;
      CFIndex v35 = CFArrayGetCount(v28);
      v36 = (const void **)malloc_type_calloc(v35, 8uLL, 0x6004044C4A2DFuLL);
      if (v35 < 1)
      {
        CFArrayRef v43 = CFArrayCreate(v19, v36, v35, MEMORY[0x1E4F1D510]);
        CFIndex v37 = 0;
      }
      else
      {
        CFIndex v37 = 0;
        for (CFIndex i = 0; i != v35; ++i)
        {
          CFStringRef v39 = (const __CFString *)CFArrayGetValueAtIndex(v28, i);
          CFDataRef v40 = CFStringCreateSortKeyForSections(v19, v39);
          if (!v40)
          {
            if (i)
            {
              for (uint64_t j = 0; j != i; ++j)
                CFRelease(v36[j]);
            }
            free(v36);
            CFRelease(v34);
            CFRelease(cf);
            __assert_rtn("iPhoneSortKeyBuilderCreate", "iPhoneSortKey.c", 130, "result != 0");
          }
          CFDataRef v41 = v40;
          CFIndex v42 = CFDataGetLength(v40);
          if (v42 > v37) {
            CFIndex v37 = v42;
          }
          v36[i] = v41;
        }
        CFArrayRef v43 = CFArrayCreate(v19, v36, v35, MEMORY[0x1E4F1D510]);
        v44 = v36;
        do
        {
          v45 = *v44++;
          CFRelease(v45);
          --v35;
        }
        while (v35);
      }
      free(v36);
      CFTypeRef v46 = CFRetain(v28);
      *(void *)(v58 + 48 * v17) = cf;
      v47 = (void *)(v58 + 48 * v17);
      v47[1] = v34;
      v47[2] = v46;
      v47[3] = v43;
      v47[4] = v37;
      v47[5] = v59;
      CFIndex v18 = CFArrayGetCount(v43) + v59;
      ++v17;
      CFArrayRef v7 = v56;
      v5 = v57;
    }
    while (v17 < v57[4]);
  }
  if (CFStringHasPrefix(theString, @"ja"))
  {
    CFAllocatorRef v48 = (const __CFAllocator *)*MEMORY[0x1E4F1CF80];
    CFLocaleRef v49 = CFLocaleCreate((CFAllocatorRef)*MEMORY[0x1E4F1CF80], theString);
    v64.location = 0;
    v64.length = 0;
    v5[2] = CFStringTokenizerCreate(v48, 0, v64, 4uLL, v49);
    CFRelease(v49);
  }
  atomic_fetch_add_explicit((atomic_uint *volatile)v5, 1u, memory_order_relaxed);
  return v5;
}

CFDataRef CFStringCreateSortKeyForSections(const __CFAllocator *a1, CFStringRef theString)
{
  CFIndex Length = CFStringGetLength(theString);
  v5 = (UniChar *)CFAllocatorAllocate(a1, 2 * Length, 0);
  v10.location = 0;
  v10.length = Length;
  CFStringGetCharacters(theString, v10, v5);
  int SortKey = ucol_getSortKey();
  CFArrayRef v7 = (const UInt8 *)CFAllocatorAllocate(a1, SortKey, 0);
  ucol_getSortKey();
  CFAllocatorDeallocate(a1, v5);
  int Bound = ucol_getBound();
  return CFDataCreateWithBytesNoCopy(a1, v7, Bound, a1);
}

id ML3LocalizationLanguageCanonicalIdentifier()
{
  v0 = +[ML3LanguageResourceManager sharedResourceManager];
  uint64_t v1 = [v0 resources];
  id v2 = [v1 canonicalLanguageIdentifier];

  return v2;
}

void sub_1B0241310(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B02414AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id ML3LocalizedSectionDictionary()
{
  v0 = +[ML3LanguageResourceManager sharedResourceManager];
  uint64_t v1 = [v0 resources];
  id v2 = [v1 sectionsInfo];

  return v2;
}

__CFString *iPhoneSortKeyBuilderGetHeaderForSection(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 32);
  if (v4 < 1)
  {
LABEL_7:
    uint64_t v9 = *(void *)(a1 + 24) + 48 * v4;
    uint64_t v10 = *(void *)(v9 - 8);
    if (v10 + CFArrayGetCount(*(CFArrayRef *)(v9 - 24)) + 1 == a2) {
      return @"UNKNOWN_SECTION_HEADER";
    }
    else {
      return @"NUMERIC_SECTION_HEADER";
    }
  }
  uint64_t v5 = 0;
  uint64_t v6 = 0;
  while (1)
  {
    uint64_t v7 = *(void *)(a1 + 24) + v5;
    uint64_t v8 = a2 - *(void *)(v7 + 40);
    if (v8 >= 0) {
      break;
    }
LABEL_6:
    ++v6;
    v5 += 48;
    if (v6 >= v4) {
      goto LABEL_7;
    }
  }
  if (v8 >= CFArrayGetCount(*(CFArrayRef *)(v7 + 16)))
  {
    uint64_t v4 = *(void *)(a1 + 32);
    goto LABEL_6;
  }
  CFArrayRef v12 = *(const __CFArray **)(v7 + 16);

  return (__CFString *)CFArrayGetValueAtIndex(v12, v8);
}

void sub_1B0241A18(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0241D28(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v12 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);

  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);

  _Unwind_Resume(a1);
}

void __ML3GreenTeaIsLoggableBundleIdentifier_block_invoke()
{
  v0 = (void *)ML3GreenTeaIsLoggableBundleIdentifier___greenTeaBundleIdentifierIgnoreList;
  ML3GreenTeaIsLoggableBundleIdentifier___greenTeaBundleIdentifierIgnoreList = (uint64_t)&unk_1F09109D8;
}

void sub_1B024309C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0243274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1B024344C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v13 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1B0245D30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v3);
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v4 - 80));
  objc_destroyWeak((id *)(v4 - 72));
  _Unwind_Resume(a1);
}

void __MLSetSQLiteAutoTraceEnabled_block_invoke(uint64_t a1)
{
  if (_MLShouldAutoTraceML_onceToken != -1) {
    dispatch_once(&_MLShouldAutoTraceML_onceToken, &__block_literal_global_1205);
  }
  if (_MLShouldAutoTraceML_shouldAutoTraceML)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      setenv("SQLITE_AUTO_TRACE", "1", 1);
    }
    else
    {
      unsetenv("SQLITE_AUTO_TRACE");
    }
  }
}

id MLMobileUserHomeDirectory()
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  pthread_mutex_lock(&MLMobileUserHomeDirectory_lock);
  if (MLMobileUserHomeDirectory_pathDictionary)
  {
    CFArrayRef Value = (void *)CFDictionaryGetValue((CFDictionaryRef)MLMobileUserHomeDirectory_pathDictionary, @"mobile");
    if (Value) {
      goto LABEL_20;
    }
  }
  else
  {
    MLMobileUserHomeDirectory_pathDictionary = (uint64_t)CFDictionaryCreateMutable(0, 0, MEMORY[0x1E4F1D530], MEMORY[0x1E4F1D540]);
  }
  pw_dir = getenv("IPHONE_SHARED_RESOURCES_DIRECTORY");
  if (!pw_dir)
  {
    CFIndex Length = CFStringGetLength(@"mobile");
    uint64_t MaximumSizeForEncoding = CFStringGetMaximumSizeForEncoding(Length, 0x8000100u);
    CFIndex usedBufLen = 0;
    uint64_t v5 = (CFAllocatorRef *)MEMORY[0x1E4F1CFB0];
    if (MaximumSizeForEncoding >= 127) {
      uint64_t v6 = (UInt8 *)CFAllocatorAllocate((CFAllocatorRef)*MEMORY[0x1E4F1CFB0], MaximumSizeForEncoding + 1, 0);
    }
    else {
      uint64_t v6 = buffer;
    }
    v16.location = 0;
    v16.length = Length;
    CFIndex Bytes = CFStringGetBytes(@"mobile", v16, 0x8000100u, 0, 1u, v6, MaximumSizeForEncoding, &usedBufLen);
    uint64_t v8 = 0;
    if (Bytes == Length)
    {
      v6[usedBufLen] = 0;
      uint64_t v8 = getpwnam((const char *)v6);
    }
    if (buffer != v6) {
      CFAllocatorDeallocate(*v5, v6);
    }
    if (!v8) {
      goto LABEL_17;
    }
    pw_dir = v8->pw_dir;
    if (!pw_dir) {
      goto LABEL_17;
    }
  }
  CFStringRef v2 = CFStringCreateWithFileSystemRepresentation(0, pw_dir);
  if (v2)
  {
    CFArrayRef Value = (void *)v2;
    CFDictionarySetValue((CFMutableDictionaryRef)MLMobileUserHomeDirectory_pathDictionary, @"mobile", v2);
    CFRelease(Value);
  }
  else
  {
LABEL_17:
    uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buffer = 138543362;
      uint64_t v13 = @"mobile";
      _os_log_impl(&dword_1B022D000, v9, OS_LOG_TYPE_DEFAULT, "Returning NULL path from MLMobileUserHomeDirectory for %{public}@", buffer, 0xCu);
    }

    CFArrayRef Value = 0;
  }
LABEL_20:
  pthread_mutex_unlock(&MLMobileUserHomeDirectory_lock);

  return Value;
}

void _MLDispatchToSerialQueue(int a1, void *a2)
{
  id v3 = a2;
  id v5 = v3;
  if (_MLDispatchToSerialQueue___once == -1)
  {
    uint64_t v4 = v3;
  }
  else
  {
    dispatch_once(&_MLDispatchToSerialQueue___once, &__block_literal_global_83);
    uint64_t v4 = v5;
  }
  if (a1) {
    dispatch_async((dispatch_queue_t)__ML3LogSerialQueue, v4);
  }
  else {
    dispatch_sync((dispatch_queue_t)__ML3LogSerialQueue, v4);
  }
}

void CreateSQLExtensionsOnSqliteConnection()
{
}

void sub_1B0249EEC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void ___ZL26_executeTimeQueryOperationP8NSStringP17ML3QueryResultSetU13block_pointerFvvE_block_invoke()
{
  id v0 = [MEMORY[0x1E4F1CB18] standardUserDefaults];
  _executeTimeQueryOperation(NSString *,ML3QueryResultSet *,void({block_pointer})(void))::timeQueryOps = [v0 BOOLForKey:@"MLTimeQueryOperations"];
}

void sub_1B024A294(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1B024AE48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose((const void *)(v15 - 160), 8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B024B404(_Unwind_Exception *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, long long buf)
{
  if (a2 == 1)
  {
    id v11 = objc_begin_catch(a1);
    uint64_t v12 = NSString;
    uint64_t v15 = [v11 description];
    uint64_t v13 = [v12 stringWithFormat:@"*** Database Exception: %@"];

    uint64_t v14 = _ML3LogCategoryWriter();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      LODWORD(buf) = 138412290;
      *(void *)((char *)&buf + 4) = v13;
      _os_log_impl(&dword_1B022D000, v14, OS_LOG_TYPE_ERROR, "%@", (uint8_t *)&buf, 0xCu);
    }

    +[ML3MediaLibraryWriter writerErrorWithCode:301 description:v13];
    objc_claimAutoreleasedReturnValue();

    objc_end_catch();
    JUMPOUT(0x1B024B2ECLL);
  }
  _Unwind_Resume(a1);
}

void sub_1B024CAE4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
}

void sub_1B024CEE4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1B024D5CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B024DA44(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 112), 8);
  _Unwind_Resume(a1);
}

id ML3ProcessHandleFromPID(uint64_t a1)
{
  int v1 = a1;
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  if (a1)
  {
    CFStringRef v2 = [MEMORY[0x1E4F96478] targetWithPid:a1];
    id v3 = [MEMORY[0x1E4F96430] predicateMatchingTarget:v2];
    id v8 = 0;
    uint64_t v4 = [MEMORY[0x1E4F963E8] handleForPredicate:v3 error:&v8];
    id v5 = v8;

    if (v4) {
      goto LABEL_8;
    }
  }
  else
  {
    id v5 = 0;
  }
  uint64_t v6 = os_log_create("com.apple.amp.medialibrary", "Default");
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 134218242;
    uint64_t v10 = v1;
    __int16 v11 = 2114;
    id v12 = v5;
    _os_log_impl(&dword_1B022D000, v6, OS_LOG_TYPE_ERROR, "Failed to query process handle for PID '%lld'. err=%{public}@", buf, 0x16u);
  }

  uint64_t v4 = 0;
LABEL_8:

  return v4;
}

void sub_1B024EDBC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_1B024F720(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,char a56)
{
}

double _ML3ArtworkConfigurationCGSizeFromString(void *a1)
{
  uint64_t v19 = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  unint64_t v2 = [v1 length];
  MEMORY[0x1F4188790]();
  uint64_t v4 = &buf[-v3];
  MEMORY[0x1F4188790]();
  uint64_t v6 = (const char *)&buf[-v5];
  objc_msgSend(v1, "getCharacters:range:", v4, 0, v2);
  if (v2)
  {
    uint64_t v7 = 0;
    unsigned int v8 = 0;
    uint64_t v9 = 0;
    int v10 = 0;
    double v11 = 0.0;
    do
    {
      while (1)
      {
        if (v10 == 3) {
          goto LABEL_19;
        }
        int v12 = *(unsigned __int16 *)&v4[2 * v7];
        if (v10 != 2) {
          break;
        }
        if (v12 != 125)
        {
          v6[v9++] = v12;
LABEL_13:
          int v10 = 2;
          goto LABEL_15;
        }
        v6[v9] = 0;
        atof(v6);
        int v10 = 3;
        uint64_t v7 = ++v8;
        if (v2 <= v8) {
          goto LABEL_19;
        }
      }
      if (v10 == 1)
      {
        if (v12 != 44)
        {
          v6[v9++] = v12;
          int v10 = 1;
          goto LABEL_15;
        }
        v6[v9] = 0;
        double v11 = atof(v6);
        uint64_t v9 = 0;
        goto LABEL_13;
      }
      int v10 = v12 == 123;
LABEL_15:
      uint64_t v7 = ++v8;
    }
    while (v2 > v8);
  }
  uint64_t v13 = os_log_create("com.apple.amp.medialibrary", "Default");
  if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR))
  {
    *(_DWORD *)buf = 136315394;
    uint64_t v16 = "_ML3ArtworkConfigurationCGSizeFromString";
    __int16 v17 = 2114;
    id v18 = v1;
    _os_log_impl(&dword_1B022D000, v13, OS_LOG_TYPE_ERROR, "%s parse error: error parsing '%{public}@'", buf, 0x16u);
  }

  double v11 = *MEMORY[0x1E4F1DB30];
LABEL_19:

  return v11;
}

void sub_1B02504F4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1B0250824(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t _databaseAuthorizer(_DWORD *a1, int a2, char *__s2, uint64_t a4)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t result = 0;
  switch(a2)
  {
    case 1:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_INDEX: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 2:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 3:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TEMP_INDEX: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 4:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TEMP_TABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 5:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TEMP_TRIGGER: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 6:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TEMP_VIEW: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 7:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_TRIGGER: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 8:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_VIEW: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 9:
      if (strncmp("sqlite_", __s2, 7uLL)) {
        return 0;
      }
      uint64_t v9 = _ML3LogCategoryService();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DELETE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 10:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_INDEX: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 11:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 12:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TEMP_INDEX: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 13:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TEMP_TABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 14:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TEMP_TRIGGER: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 15:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TEMP_VIEW: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 16:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_TRIGGER: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 17:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_VIEW: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 18:
      if (strncmp("sqlite_", __s2, 7uLL)) {
        return 0;
      }
      uint64_t v9 = _ML3LogCategoryService();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_INSERT: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 19:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_PRAGMA: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 20:
      if (strncmp("sqlite_", __s2, 7uLL)) {
        return 0;
      }
      uint64_t v9 = _ML3LogCategoryService();
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_READ: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 21:
    case 22:
    case 31:
    case 32:
    case 33:
      return result;
    case 23:
      if (strncmp("sqlite_", __s2, 7uLL)) {
        return 0;
      }
      uint64_t v9 = _ML3LogCategoryService();
      if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR))
      {
        int v13 = 136446722;
        *(void *)uint64_t v14 = "denied";
        *(_WORD *)&v14[8] = 2082;
        *(void *)&v14[10] = __s2;
        __int16 v15 = 2082;
        uint64_t v16 = a4;
        int v10 = "SQLITE_UPDATE: %{public}s, param1=%{public}s, param2=%{public}s";
LABEL_65:
        double v11 = v9;
        uint32_t v12 = 32;
LABEL_66:
        _os_log_impl(&dword_1B022D000, v11, OS_LOG_TYPE_ERROR, v10, (uint8_t *)&v13, v12);
      }
LABEL_67:

      *a1 = a2;
      return 1;
    case 24:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_ATTACH: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 25:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DETACH: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 26:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_ALTER_TABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 27:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_REINDEX: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 28:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_ANALYZE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 29:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_CREATE_VTABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    case 30:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 136446722;
      *(void *)uint64_t v14 = "denied";
      *(_WORD *)&v14[8] = 2082;
      *(void *)&v14[10] = __s2;
      __int16 v15 = 2082;
      uint64_t v16 = a4;
      int v10 = "SQLITE_DROP_VTABLE: %{public}s, param1=%{public}s, param2=%{public}s";
      goto LABEL_65;
    default:
      uint64_t v9 = os_log_create("com.apple.amp.medialibrary", "Service");
      if (!os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
        goto LABEL_67;
      }
      int v13 = 67109378;
      *(_DWORD *)uint64_t v14 = a2;
      *(_WORD *)&v14[4] = 2082;
      *(void *)&v14[6] = "denied";
      int v10 = "Unknown action %d: %{public}s";
      double v11 = v9;
      uint32_t v12 = 18;
      goto LABEL_66;
  }
}

BOOL ML3IsMemorySQLiteDatabasePath(void *a1)
{
  id v1 = a1;
  if ([v1 isEqualToString:@":memory:"])
  {
    BOOL v2 = 1;
  }
  else
  {
    [v1 rangeOfString:@"mode=memory"];
    BOOL v2 = v3 != 0;
  }

  return v2;
}

void sub_1B0253A80(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9)
{
  if (a2 == 1)
  {
    id v10 = objc_begin_catch(exception_object);
    double v11 = _ML3LogCategoryCacheManagement();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(a9) = 138543362;
      *(void *)((char *)&a9 + 4) = v10;
      _os_log_impl(&dword_1B022D000, v11, OS_LOG_TYPE_DEFAULT, "caught exception gathering purgeable storage amount: %{public}@", (uint8_t *)&a9, 0xCu);
    }

    uint32_t v12 = [v10 userInfo];
    int v13 = [v12 objectForKey:@"ML3DatabaseExceptionErrorUserInfoKey"];

    if (v13 && [v13 code] == 13)
    {
      uint64_t v14 = _ML3LogCategoryCacheManagement();
      if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(a9) = 0;
        _os_log_impl(&dword_1B022D000, v14, OS_LOG_TYPE_DEFAULT, "force-deleting cached assets to free space", (uint8_t *)&a9, 2u);
      }

      [v9 _clearAllCloudAssets];
      objc_end_catch();
      JUMPOUT(0x1B02539D4);
    }
    objc_exception_rethrow();
  }
  _Unwind_Resume(exception_object);
}

void *sub_1B0253DF0(void *result)
{
  *uint64_t result = ++qword_1E9B31BF0;
  return result;
}

uint64_t sub_1B0253E0C(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1B0254068(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1B02541F8(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1B02543E8(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1B0254564(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F08CDB40
                + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B30970) ^ 0xED)) ^ byte_1B04C0580[byte_1B04BD620[(-19 * ((qword_1E9B2FDF8 - dword_1E9B30970) ^ 0xED))] ^ 0xAF])
                - 17);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDD38
                           + (*((unsigned __int8 *)off_1F08CDFA0
                              + (-19 * ((qword_1E9B2FDF8 + v2) ^ 0xED))
                              - 12) ^ 0xFAu)) ^ (-19 * ((qword_1E9B2FDF8 + v2) ^ 0xED)))
       - 155);
  unint64_t v4 = v2 ^ (unint64_t)&v6 ^ *v3;
  *(void *)(v1 - 4) = 1469428717 * v4 - 0x13BC45BED9160A13;
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  unsigned int v8 = 1734 - 535753261 * (((&v7 | 0x243DADCF) - (&v7 & 0x243DADCF)) ^ 0x2EC9A3E0);
  uint64_t v7 = a1;
  LOBYTE(v3) = -19 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xED);
  (*(void (**)(uint64_t *))((char *)*(&off_1F08CDB40
                                              + ((-19 * (dword_1E9B30970 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (dword_1E9B30970 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x33])
                                              - 98)
                                    + 8
                                    * (*((unsigned char *)off_1F08CDD10
                                                                      + (*((unsigned __int8 *)off_1F08CDB78
                                                                         + v3) ^ 0x3Cu)
                                                                      - 8) ^ v3)
                                    + 16356))(&v7);
  return v9;
}

uint64_t sub_1B025475C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CE078
         + (*((unsigned __int8 *)off_1F08CDD60 + a1 - 12) ^ 0xCBu)
         - 4) ^ a1;
}

uint64_t sub_1B025478C(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CDD38
         + (*((unsigned char *)off_1F08CDFA0 + a2 - 12) ^ a1)) ^ a2;
}

uint64_t sub_1B02547B8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDFB8 + (*((unsigned __int8 *)off_1F08CDD90 + a1 - 4) ^ 0xA3u)) ^ a1;
}

uint64_t sub_1B02547E4(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CDD10 + (*((unsigned char *)off_1F08CDB78 + a2) ^ a1)
                                            - 8) ^ a2;
}

uint64_t sub_1B0254810(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD38 + (*((unsigned __int8 *)off_1F08CDFA0 + a1 - 12) ^ 0xFAu)) ^ a1;
}

uint64_t sub_1B025483C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CE078
         + (*((unsigned __int8 *)off_1F08CDD60 + a1 - 12) ^ 0x33u)
         - 4) ^ a1;
}

uint64_t sub_1B025486C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDCA0
         + (*((unsigned __int8 *)off_1F08CDDD8 + a1 - 12) ^ 0xD1u)
         - 4) ^ a1;
}

uint64_t sub_1B025489C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDDB8 + (*((unsigned __int8 *)off_1F08CDCC0 + a1) ^ 0x1Eu) - 4) ^ a1;
}

uint64_t sub_1B02548C8(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F08CDB40
                + (*((unsigned char *)off_1F08CDFB8
                                    + (*((unsigned __int8 *)off_1F08CDD90
                                       + (-19 * ((qword_1E9B2FDF8 + dword_1E9B30950) ^ 0xED))
                                       - 4) ^ 0x35u)) ^ (-19 * ((qword_1E9B2FDF8 + dword_1E9B30950) ^ 0xED)))
                - 51);
  uint64_t v2 = *(void *)(v1 - 4);
  uint64_t v3 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDD38
                           + (*((unsigned __int8 *)off_1F08CDFA0
                              + (-19 * ((qword_1E9B2FDF8 + v2) ^ 0xED))
                              - 12) ^ 0xFAu)) ^ (-19 * ((qword_1E9B2FDF8 + v2) ^ 0xED)))
       - 155);
  unint64_t v4 = (*v3 - v2) ^ (unint64_t)&v6;
  *(void *)(v1 - 4) = 1469428717 * v4 + 0x13BC45BED9160A13;
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  uint64_t v8 = a1;
  unsigned int v7 = 235795823 * ((&v7 & 0x7E4C88B4 | ~(&v7 | 0x7E4C88B4)) ^ 0x151E3E12) + 336;
  LOBYTE(v3) = -19 * ((*(_DWORD *)v3 - *(_DWORD *)(v1 - 4)) ^ 0xED);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08CDB40
                                                             + ((-19
                                                                                              * (dword_1E9B30950 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (dword_1E9B30950 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x69])
                                                             + 66)
                                                   + 8
                                                   * (*((unsigned char *)off_1F08CE078
                                                                                     + (*((unsigned __int8 *)off_1F08CDD60
                                                                                        + v3
                                                                                        - 12) ^ 0xCBu)
                                                                                     - 4) ^ v3)
                                                   + 16140))(&v7);
}

uint64_t sub_1B0254ABC(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CDDB8 + (*((unsigned char *)off_1F08CDCC0 + a2) ^ a1)
                                            - 4) ^ a2;
}

uint64_t sub_1B0254AE8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD38 + (*((unsigned __int8 *)off_1F08CDFA0 + a1 - 12) ^ 0xCEu)) ^ a1;
}

uint64_t sub_1B0254B14(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CDCA0
         + (*((unsigned char *)off_1F08CDDD8 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1B0254B40(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD10 + (*((unsigned __int8 *)off_1F08CDB78 + a1) ^ 0x3Du) - 8) ^ a1;
}

uint64_t sub_1B0254B70(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDCA0
         + (*((unsigned __int8 *)off_1F08CDDD8 + a1 - 12) ^ 0x7Eu)
         - 4) ^ a1;
}

uint64_t sub_1B0254B9C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD38 + (*((unsigned __int8 *)off_1F08CDFA0 + a1 - 12) ^ 0xA3u)) ^ a1;
}

uint64_t sub_1B0254BC8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CE078
         + (*((unsigned __int8 *)off_1F08CDD60 + a1 - 12) ^ 0x69u)
         - 4) ^ a1;
}

uint64_t sub_1B0254BF8(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (unint64_t *)*(&off_1F08CDB40
                           + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B2FDA0) ^ 0xED)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * ((qword_1E9B2FDF8 - dword_1E9B2FDA0) ^ 0xED))] ^ 0x69])
                           - 57);
  unsigned __int8 v2 = -19 * ((qword_1E9B2FDF8 + *v1) ^ 0xED);
  uint64_t v3 = (unint64_t *)*(&off_1F08CDB40
                           + (*((unsigned char *)off_1F08CDD38
                                                             + (*((unsigned __int8 *)off_1F08CDFA0 + v2 - 12) ^ 0xA3u)) ^ v2)
                           + 9);
  unint64_t v4 = 1469428717 * ((*v3 - *v1) ^ (unint64_t)&v6 ^ 0xEC43BA4126E9F5EDLL);
  unint64_t *v1 = v4;
  unint64_t *v3 = v4;
  unsigned int v7 = 1078 - 1734042137 * ((2 * (&v7 & 0x23947D68) - &v7 + 1550549653) ^ 0xA541D8);
  uint64_t v8 = a1;
  LOBYTE(v3) = -19 * (*(_DWORD *)v1 ^ 0xED ^ *(_DWORD *)v3);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08CDB40
                                                             + ((-19
                                                                                * ((qword_1E9B2FDF8 + dword_1E9B2FDA0) ^ 0xED)) ^ byte_1B04C5D00[byte_1B04C0480[(-19 * ((qword_1E9B2FDF8 + dword_1E9B2FDA0) ^ 0xED))] ^ 0xD1])
                                                             - 83)
                                                   + 8
                                                   * (*((unsigned char *)off_1F08CDD10
                                                                                     + (*((unsigned __int8 *)off_1F08CDB78
                                                                                        + v3) ^ 0x3Du)
                                                                                     - 8) ^ v3)
                                                   + 17140))(&v7);
}

uint64_t sub_1B0254DF0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CE078
         + (*((unsigned char *)off_1F08CDD60 + a2 - 12) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1B0254E1C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDDB8 + (*((unsigned __int8 *)off_1F08CDCC0 + a1) ^ 0xD1u) - 4) ^ a1;
}

uint64_t sub_1B0254E4C(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08CDFB8 + (*((unsigned char *)off_1F08CDD90 + a2 - 4) ^ a1)) ^ a2;
}

uint64_t sub_1B0254E78(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDCA0
         + (*((unsigned __int8 *)off_1F08CDDD8 + a1 - 12) ^ 0xC3u)
         - 4) ^ a1;
}

uint64_t sub_1B0254EA8(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CE078
         + (*((unsigned __int8 *)off_1F08CDD60 + a1 - 12) ^ 0x3Eu)
         - 4) ^ a1;
}

uint64_t sub_1B0254ED4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD38 + (*((unsigned __int8 *)off_1F08CDFA0 + a1 - 12) ^ 0xAFu)) ^ a1;
}

uint64_t sub_1B0254F00(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDD10 + (*((unsigned __int8 *)off_1F08CDB78 + a1) ^ 0x3Cu) - 8) ^ a1;
}

uint64_t sub_1B0254F2C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08CDFB8 + (*((unsigned __int8 *)off_1F08CDD90 + a1 - 4) ^ 0x35u)) ^ a1;
}

uint64_t sub_1B0254F58(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7) - 1611802106;
  int v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7) - 1611802106;
  int v4 = (v2 < 1907881794) ^ (v3 < 1907881794);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < 1907881794;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)a1 ^ (1374699841 * ((((2 * a1) | 0x4FD35BAC) - a1 + 1477857834) ^ 0xCA1DB5DF));
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (v1 ^ 0x4B2))
                              + 8 * ((!v6 * (((v1 - 816017451) & 0x30A36FE2) - 888)) ^ v1)
                              - 4))();
}

void sub_1B0255048(_DWORD *a1)
{
  unsigned int v1 = *a1 + 628203409 * ((-2 - ((~a1 | 0x96C77CC6) + (a1 | 0x69388339))) ^ 0x144F70F5);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0255130@<X0>(uint64_t a1@<X4>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>, int8x16_t a7@<Q6>, int32x4_t a8@<Q7>)
{
  a4.i64[0] = *(void *)(v9 + 4);
  a4.i32[2] = *(_DWORD *)(v9 + 12);
  int8x16_t v15 = vextq_s8(a3, a4, 0xCuLL);
  int8x16_t v16 = a4;
  v16.i32[3] = *(_DWORD *)(v9 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a5), vandq_s8(v15, v14)), 1uLL), a6);
  v18.i32[0] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 4) & 1));
  v18.i32[1] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 8) & ((a2 ^ v10) - 439)));
  v18.i32[2] = *(_DWORD *)(a1 + 4 * (*(_DWORD *)(v9 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(a1 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v9 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v9 - 908), v18), v13), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a7)), a8));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == 4) * v11) ^ a2)))();
}

uint64_t sub_1B025513C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v7 = ((153 * (a1 ^ 0x29C)) ^ (v4 + 128)) + v5;
  *(unsigned char *)(a2 + v7) = *(unsigned char *)(v2 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((1844 * (v5 - 1 == v3)) ^ (a1 - 328))))();
}

uint64_t sub_1B0255188(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((54 * (a7 ^ 0x2F7) - 249) | 0x30) - 168) * (v8 != 0)) ^ a7)))();
}

uint64_t sub_1B02551C0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 == 0) ^ (v0 - 52)) & 1)
                                * (((v0 - 2067077236) & 0x3B3517FF) - 480)) ^ v0)))();
}

uint64_t sub_1B0255204()
{
  ++*(_DWORD *)(v2 + 52);
  STACK[0x468] = v1 + ((v0 - 465) | 0x28u) - 2543;
  LODWORD(STACK[0x5B4]) = v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((39 * (STACK[0x420] == 0)) | v0)))();
}

uint64_t sub_1B0255254@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((945 * (a1 + 1 == v3 + 4)) ^ v1)))();
}

uint64_t sub_1B025531C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26
                                                                       + 8
                                                                       * (((a25 < (unint64_t)((v25 - 244) | 0x321u)
                                                                                - 942)
                                                                         * ((v25 - 1605990425) & 0x5FB977BE ^ 0x122)) ^ v25)))(a1, a2, a3, v27);
}

uint64_t sub_1B0255374()
{
  unint64_t v3 = v1 - 1397079334;
  if (v3 <= 0x38) {
    unint64_t v3 = 56;
  }
  int v4 = v3 - v1 + ((v0 - 668459672) | 0x60589C0u) + ((v0 - 1015) | 0x102u) - 2330457226 < 8;
  return (*(uint64_t (**)(void))(v2 + 8 * (((32 * v4) | (v4 << 6)) ^ v0)))();
}

uint64_t sub_1B02553F0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v4 + ((181 * (a3 ^ 0x191)) ^ 0x381) == 32)
                                     * (((181 * (a3 ^ 0x191) + 2027898454) & 0x8720B7B4) + 1099)) ^ (181 * (a3 ^ 0x191)))))();
}

void sub_1B0255448(int a1@<W8>)
{
  *(void *)(v4 - 0x102FB98998D77CDDLL) = *v2;
  *(_DWORD *)(v5 - 0x27EFF0CD9F36B463) = a1;
  void *v2 = 0;
  *(void *)(v8 - 0x7761D79CB8DF4D0BLL) = 0x51089CEA51089CEALL;
  _DWORD *v3 = 277809779;
  *(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) = ((*(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) & 0xFFFFFFFE ^ 0x776CBDFA | v1 ^ 0xC22BA866)
                                          - (*(_DWORD *)(v8 - 0x7761D79CB8DF4CFFLL) & 0xFFFFFFFE ^ 0x776CBDFA | 0x3DD457F1)
                                          + 1037326321) ^ 0xB54715F4;
  *(_DWORD *)(v7 + 48) = *v6;
}

uint64_t sub_1B0255560(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int8x16_t a15, int32x4_t a16, int8x16_t a17, int8x16_t a18, int8x16_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int8x16_t v28 = (int8x16_t)vld1q_dup_f32((const float *)v27);
  v29.i64[0] = 0x8000000080000000;
  v29.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v27 + 4);
  a2.i32[2] = *(_DWORD *)(v27 + 12);
  int8x16_t v30 = vextq_s8(v28, a2, 0xCuLL);
  int8x16_t v31 = a2;
  v31.i32[3] = *(_DWORD *)(v27 + 16);
  int32x4_t v32 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v31, a19), vandq_s8(v30, v29)), 1uLL), a18);
  v33.i32[0] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 4) & 1));
  v33.i32[1] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 8) & 1));
  v33.i32[2] = *(_DWORD *)(v26 + 4 * (*(_DWORD *)(v27 + 12) & 1));
  v33.i32[3] = *(_DWORD *)(v26 + 4 * (v31.i8[12] & 1));
  *(int8x16_t *)uint64_t v27 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v27 + 1588), v33), a15), (int8x16_t)vaddq_s32(vsubq_s32(v32, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v32, v32), a17)), a16));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 11304))(1460018998, a25, 1345627118, 23, 3052433383, 1281);
}

uint64_t sub_1B0255574()
{
  LODWORD(STACK[0x3C8]) = v1;
  int v6 = v0 ^ 0x6A3;
  STACK[0x1918] = 0xF81F920D611722D2;
  LODWORD(STACK[0x43C]) = **(_DWORD **)(v3 + 8 * ((v0 ^ 0x6A3) - 1200)) - 24759838;
  uint64_t v7 = **(unsigned int **)(v3 + 8 * ((v0 ^ 0x6A3) - 1338));
  uint64_t v8 = 1224239923 * ((v2 + 0x1A450EEF0D1ADC24 - 2 * (v2 & 0x1A450EEF0D1ADC24)) ^ 0x321FBB86FFA921F3);
  int v9 = v6 - 1518280087 + v8;
  *(_DWORD *)(v5 - 160) = ((v6 - 1518280087) & 0xE5E6FF82) + v8;
  *(_DWORD *)(v5 - 156) = v9;
  *(_DWORD *)(v5 - 188) = v9 + 35;
  *(void *)(v5 - 184) = v7 ^ v8;
  *(void *)(v5 - 176) = v8 ^ 0x5A748A2C;
  *(_DWORD *)(v5 - 168) = v8 + v6 - 1501687204;
  *(_DWORD *)(v5 - 164) = -1224239923 * ((v2 + 219864100 - 2 * (v2 & 0xD1ADC24)) ^ 0xFFA921F3);
  uint64_t v10 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 + 812)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 192)))(v10);
}

uint64_t sub_1B0255684()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((218
                                * ((((v0 + 1102) < 0x7FFFFFFF) ^ (93 * (v1 ^ 0x4C))) & 1)) ^ v1)))();
}

uint64_t sub_1B02556C4(int a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v12 = *(_DWORD *)(v11 - 140);
  int8x16_t v13 = *(uint64_t (**)(void))(v8 + 8 * (v9 - 1074));
  unsigned int v14 = a4 + 8 + a1;
  uint64_t v15 = *v10;
  *(unsigned char *)(*v10 + v14 + 1) = (v5 ^ BYTE2(v12)) - (v4 & (2 * (v5 ^ BYTE2(v12)))) - 27;
  *(unsigned char *)(v15 + v14) = (HIBYTE(v12) ^ 0xBB) - (v4 & (2 * (HIBYTE(v12) ^ 0xBB))) - 27;
  *(unsigned char *)(v15 + v14 + 2) = (v7 ^ BYTE1(v12)) - (v4 & (v12 >> 7)) - 27;
  *(unsigned char *)(v15 + v14 + 3) = v12 ^ v6;
  return v13();
}

uint64_t sub_1B02556D4(uint64_t a1)
{
  void *v7 = a1;
  int *v8 = (v1 + 1338) ^ (v2 - 1663) ^ v11;
  int v5 = (((v1 + 1338) ^ 0x98) - 1722541643) & 0x66ABE67B;
  uint64_t v14 = v10;
  unsigned int v13 = ((v1 + 1338) ^ 0x98)
      + (((v12 | 0x72FB31C9) + (~v12 | 0x8D04CE36)) ^ 0x780F3FE7) * v4
      + 470;
  (*(void (**)(unsigned char *))(v3 + 8 * (((v1 + 1338) ^ 0x98) + 546)))(v12);
  uint64_t v14 = v9;
  unsigned int v13 = v5 + (v12 ^ 0xAF40E2F) * v4 + 421;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 ^ 0xE71)))(v12);
  return v2 ^ 0xAE215E86;
}

void sub_1B02557F0()
{
  *(_DWORD *)(v1 + 8) = v0 - 4;
}

uint64_t sub_1B02557F8@<X0>(unsigned int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v5 + v8) = ((v1 + 116) ^ v4) * (v1 - 123);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 ^ (v8 == 0)) & 1) * v6) ^ a1)))();
}

uint64_t sub_1B0255800(int a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((((~a19 + v20 - (unint64_t)(v19 + a1) < 0x10) ^ (v21 - a5 + 39)) & 1)
                                * (v21 - 1409)) | v21)))();
}

uint64_t sub_1B0255848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v69 = *(unsigned __int8 *)(v67 - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v69 == 1)
  {
    unsigned int v72 = 3 * a52;
    unsigned int v77 = *(_DWORD *)(v67 - 0x843828D0CDF33E9);
    *(unsigned char *)(v67 - 0x843828D0CDF33F5) = ((8 * v77) ^ 0x78) - ((3 * a52 - 100) & (2 * ((8 * v77) ^ 0x78))) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F4) = ((v77 >> 5) ^ 0x6A) + (~(2 * ((v77 >> 5) ^ 0x6A)) | 0x35) - 26;
    char v76 = -54;
    *(unsigned char *)(v67 - 0x843828D0CDF33F3) = ((v77 >> 13) ^ 0x79) - ((2 * ((v77 >> 13) ^ 0x79)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F2) = ((v77 >> 21) ^ 0x71)
                                          - 2 * (((v77 >> 21) ^ 0x71) & 0x6D ^ (v77 >> 21) & 8)
                                          - 27;
    unsigned int v78 = *(_DWORD *)(v67 - 0x843828D0CDF33EDLL);
    HIDWORD(v79) = v78 ^ 0x12;
    LODWORD(v79) = v77 ^ 0xC0000000;
    *(unsigned char *)(v67 - 0x843828D0CDF33F1) = (v79 >> 29) - ((2 * (v79 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F0) = ((v78 >> 5) ^ 0x7F) - ((2 * ((v78 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33EFLL) = ((v78 >> 13) ^ 0xC0)
                                          + ~(2 * (((v78 >> 13) ^ 0xC0) & 0x6D ^ (v78 >> 13) & 8))
                                          - 26;
    unsigned int v75 = (v78 >> 21) ^ 0xFFFFFF94;
  }
  else
  {
    unsigned int v70 = STACK[0x3FC];
    if (v69 != 2) {
      goto LABEL_6;
    }
    unsigned int v71 = *(_DWORD *)(v67 - 0x843828D0CDF33EDLL);
    unsigned int v72 = a51 & 0xC27673E4;
    unsigned int v73 = *(_DWORD *)(v67 - 0x843828D0CDF33E9);
    HIDWORD(v74) = v71 ^ 0x12;
    LODWORD(v74) = v73 ^ 0xC0000000;
    *(unsigned char *)(v67 - 0x843828D0CDF33F5) = ((v71 >> 21) ^ 0x94)
                                          + (a51 & 0xE4 ^ 0xC1)
                                          - 2 * (((v71 >> 21) ^ 0x94) & 0xE7 ^ (v71 >> 21) & 2);
    *(unsigned char *)(v67 - 0x843828D0CDF33F4) = ((v71 >> 13) ^ 0xC0) - ((2 * ((v71 >> 13) ^ 0xC0)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F3) = ((v71 >> 5) ^ 0x7F) - ((2 * ((v71 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F2) = (v74 >> 29) - ((2 * (v74 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F1) = ((v73 >> 21) ^ 0x71) - ((2 * ((v73 >> 21) ^ 0x71)) & 0xCA) - 27;
    *(unsigned char *)(v67 - 0x843828D0CDF33F0) = ((v73 >> 13) ^ 0x79) - ((2 * ((v73 >> 13) ^ 0x79)) & 0xCA) - 27;
    LOBYTE(v75) = (8 * v73) ^ 0x78;
    char v76 = -64;
    *(unsigned char *)(v67 - 0x843828D0CDF33EFLL) = ((v73 >> 5) ^ 0x6A) - ((2 * ((v73 >> 5) ^ 0x6A)) & 0xCA) - 27;
  }
  unsigned int v70 = (v72 + 1026429521) & 0xC2D1EFDA;
  *(unsigned char *)(v67 - 0x843828D0CDF33EELL) = v75 + v70 - (v76 & (2 * v75)) - 107;
LABEL_6:
  STACK[0x5B8] = *(void *)(v68 + 8 * (int)(v70 - 1348));
  STACK[0x638] = v67;
  STACK[0x640] = v67 - 0x843828D0CDF342DLL;
  unint64_t v80 = STACK[0x468];
  v81 = (char *)&a9 + STACK[0x468] - 0x2CDB5D806DA9DF9DLL;
  STACK[0x648] = (unint64_t)v81;
  STACK[0x468] = v80 + 320;
  int v82 = *(_DWORD *)(v67 - 0x843828D0CDF33E5);
  LODWORD(STACK[0x404]) = v82;
  int v83 = *(_DWORD *)(v67 - 0x843828D0CDF33E1);
  LODWORD(STACK[0x418]) = v83;
  int v84 = *(_DWORD *)(v67 - 0x843828D0CDF33DDLL);
  LODWORD(STACK[0x4A4]) = v84;
  int v85 = *(_DWORD *)(v67 - 0x843828D0CDF33D9);
  LODWORD(STACK[0x504]) = v85;
  int v86 = *(unsigned __int8 *)(v67 - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v86 == 2)
  {
    int v91 = LODWORD(STACK[0x3FC]) ^ 0x49F;
    LODWORD(STACK[0x41C]) = *(_DWORD *)(v67 - 0x843828D0CDF33D5);
    LODWORD(STACK[0x54C]) = 213328488;
    return (*(uint64_t (**)(uint64_t, uint64_t))(v68
                                                       + 8
                                                       * ((26 * (193 * (v91 ^ 0x1C9) + ((v91 - 439) | 2) == 1120)) ^ v91)))(110757599, 42);
  }
  else if (v86 == 1)
  {
    int v87 = LODWORD(STACK[0x3FC]) + 90;
    LODWORD(STACK[0x54C]) = v66;
    BOOL v89 = v67 - 0x843828D0CDF342DLL >= a66 + v80 || (unint64_t)v81 >= v67 - 0x843828D0CDF33EDLL;
    return (*(uint64_t (**)(void))(v68 + 8 * (((LODWORD(STACK[0x334]) - 482) * v89) ^ v87)))();
  }
  else
  {
    int v92 = (*(_DWORD *)(v67 - 0x843828D0CDF33E5) ^ 0x522D736A) + (v82 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33E5) = v92 + 1378710378 - ((2 * v92) & 0xA45AE6D4);
    int v93 = (*(_DWORD *)(v67 - 0x843828D0CDF33E1) ^ 0x522D736A) + (v83 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33E1) = v93 + 1378710378 - ((2 * v93) & 0xA45AE6D4);
    int v94 = (*(_DWORD *)(v67 - 0x843828D0CDF33DDLL) ^ 0x522D736A) + (v84 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33DDLL) = v94 + 1378710378 - ((2 * v94) & 0xA45AE6D4);
    int v95 = (*(_DWORD *)(v67 - 0x843828D0CDF33D9) ^ 0x522D736A) + (v85 ^ 0x522D736A);
    *(_DWORD *)(v67 - 0x843828D0CDF33D9) = v95 + 1378710378 - ((2 * v95) & 0xA45AE6D4);
    STACK[0x468] = v80;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x5B8])(a1, a2, a3, a4, 773938822);
  }
}

uint64_t sub_1B025603C@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (v6 + a2)) = *(unsigned char *)(v4 + (v6 + a2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 != a1) * a3) | (v5 - 252))))();
}

uint64_t sub_1B0256070()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((115 * (((4 * v1 - v2 == 625506449) ^ (v0 + 1)) & 1)) ^ v0)))();
}

uint64_t sub_1B02560B4(uint64_t a1)
{
  unsigned int v8 = v5 + v3 + v4 + 1860;
  v9.i64[0] = 0x9494949494949494;
  v9.i64[1] = 0x9494949494949494;
  uint64_t v10 = v1 + v8;
  uint64_t v11 = a1 + v8;
  int8x16_t v12 = vaddq_s8(*(int8x16_t *)(v10 - 31), v9);
  *(int8x16_t *)(v11 - 15) = vaddq_s8(*(int8x16_t *)(v10 - 15), v9);
  *(int8x16_t *)(v11 - 31) = v12;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v2 & 0xFFFFFFE0) == 32) * (((v6 - 1468664172) & 0x578A0A7D) - 478)) ^ (v6 + 329))))();
}

uint64_t sub_1B025612C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(*a1 - 0x18DA4F3048EDB6D0) = 0;
  return (*(uint64_t (**)(void))(a2 + 8 * (((*v3 == v2) * (v4 - 762)) ^ v4)))();
}

uint64_t sub_1B0256190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23,unsigned int a24)
{
  unsigned int v25 = (a8 ^ (a8 + 349) ^ 0xD0D80E68) + a21;
  BOOL v26 = v25 < (((a5 + a8 + 1115) | 0xC0) ^ 0x48C795A5u);
  BOOL v27 = v25 > a24;
  if (a24 < 0x48C79377 != v26) {
    BOOL v28 = v26;
  }
  else {
    BOOL v28 = v27;
  }
  return (*(uint64_t (**)(void))(v24 + 8 * ((v28 | (16 * v28)) ^ (a5 + a8 + 1205))))();
}

uint64_t sub_1B025619C()
{
  int v5 = *(_DWORD *)(v2 + v3 * (uint64_t)v0 + 36) - 514649368;
  BOOL v7 = v5 > -540604939 && v5 < SLODWORD(STACK[0x380]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 * ((v1 - 1017023355) & 0x3C9E8F58 ^ 0xAA)) ^ v1)))();
}

uint64_t sub_1B0256210(uint64_t a1)
{
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40
                                        + (int)((*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816)) ^ 0x8AE))
                              + 8
                              * (int)(((*(void *)(a1 + 8) == 0x7761D79CB8DF4D13)
                                     * (((*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816) - 372351934) & 0x16319FF7)
                                      - 1128)) | (*(_DWORD *)a1 - 1225351577 * (a1 ^ 0x239AD816)))
                              - 4))();
}

uint64_t sub_1B025629C()
{
  BOOL v4 = v2 + 1203445623 < (v1 - 1881140751);
  if ((v2 + 1203445623) < 0xDC6EDB61 != v1 - 1881140751 < (v0 - 596714809)) {
    BOOL v4 = v1 - 1881140751 < (v0 - 596714809);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((54 * !v4) ^ v0)))();
}

uint64_t sub_1B025630C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25)
{
  *(void *)(v28 - 128) = a22;
  *(void *)(v28 - 120) = a25;
  *(_DWORD *)(v28 - 104) = (v27 + 1584) ^ (((((2 * ((v28 - 144) ^ 0x4CC07973)) | 0xC27ADE42)
                                           - ((v28 - 144) ^ 0x4CC07973)
                                           - 1631416097) ^ 0x9E80A606)
                                         * v25);
  *(void *)(v28 - 112) = a25;
  *(void *)(v28 - 144) = a21;
  *(void *)(v28 - 136) = a9;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 ^ 0x9A8)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * ((46
                                              * (((((v27 ^ 0x2BB) + 139) ^ ((a24 - 584148098) < 0x7FFFFFFF)) & 1) == 0)) ^ (v27 + 956))))(v29);
}

uint64_t sub_1B02563DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v27 - 120) = v23;
  *(void *)(v27 - 112) = a23;
  *(_DWORD *)(v27 - 104) = v25
                         + 1759421093 * (((~(v27 - 120) & 0x6C5869DC) - (~(v27 - 120) | 0x6C5869DD)) ^ 0xDF25D989)
                         + 1481;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0xA22)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((v26 == ((v25 + 331) ^ 0x26469F59))
                                              * (((v25 - 2014397009) & 0x7811439B) + 746)) ^ v25)))(v28);
}

uint64_t sub_1B0256494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,_DWORD *a34)
{
  *a34 ^= a33;
  return (*(uint64_t (**)(void))(v35
                              + 8
                              * (int)(((((((v34 - 495) | 0x81) - 1988964409) | 0x30892C03) ^ 0xB9FBFEAD)
                                     * (v36 == 2137013033)) ^ ((v34 - 495) | 0x81))))();
}

uint64_t sub_1B0256524@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((588 * (a2 == v4 + (a1 ^ (a1 + 179)) + 165 - 410)) ^ (a1 + v2))))();
}

uint64_t sub_1B0256568()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1331
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 2) - 72)))
                                 + ((v2 - 87) ^ (v0 - 200) ^ (*(unsigned __int8 *)(v3 + 2) - 72)) == v0 + v2 - 256 - 287)) ^ v2)))();
}

uint64_t sub_1B02565B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,char a60)
{
  unint64_t v61 = STACK[0x508];
  int v62 = *(unsigned __int8 *)(STACK[0x508] - 0x843828D0CDF33CDLL) ^ 0xCE;
  if (v62 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
  }
                                                                                           + 8
                                                                                           * (((*(_DWORD *)(v61 - 0x843828D0CDF33D1) == 1321801015)
                                                                                             * (a52 - 175)) ^ (LODWORD(STACK[0x3FC]) + 410))))(a1, a2, a3, 36533098, 2897210627, 3037000498);
  if (v62 == 1)
  {
    BOOL v63 = *(_DWORD *)(v61 - 0x843828D0CDF33D1) == ((LODWORD(STACK[0x3FC]) - 1056) | 0x4B) + 1321800636;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
                                                                                           + 8
                                                                                           * ((v63 | (16 * v63)) ^ (LODWORD(STACK[0x3FC]) - 201))))(a1, 82, a3, 36533098, 2897210627, 3037000498);
  }
  else
  {
    int v65 = (LODWORD(STACK[0x3FC]) - 1360) | 0x364;
    STACK[0x5A0] = 91;
    *(unsigned char *)(v61 - 0x843828D0CDF33D2) = (a60 ^ 0xBA) * (a60 + 17);
    BOOL v66 = STACK[0x5A0] != ((5 * (v65 ^ 0x274u)) ^ 0x550);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60
                                                                                           + 8
                                                                                           * (((4 * v66) | (8 * v66)) ^ v65)))(1360, 82, a3, 36533098, 2897210627, 3037000498);
  }
}

uint64_t sub_1B025676C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (int)(((((v5 - 258) | 4)
                                                                                       + ((v5 - 783) ^ 0xFFFFFDAF))
                                                                                      * (v4 > 0xF)) | v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1B02567A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((314 * ((int)(((a4 + 420) ^ 0xAE35E70D) + v5) >= 0)) ^ a4)))();
}

void sub_1B02567E0(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0x8E29127E) - a1 + (a1 & 0x71D6ED81)) ^ 0x84DD1C51);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  __asm { BRAA            X15, X17 }
}

void sub_1B02568B8()
{
  *(_DWORD *)(v0 + 16) = v1 + 1;
}

uint64_t sub_1B02568F4@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v5 = 2 * (a2 ^ 0x52D);
  uint64_t v6 = (v4 + v5 - 452720997);
  BOOL v8 = v2 - 1824920715 > (((v5 - 530) | 0x422) ^ 0x65040C96) || v2 - 1824920715 < (int)v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((1474 * v8) ^ v5)))(a1, v6);
}

uint64_t sub_1B02569CC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1734042137 * (((a1 | 0xD7F017E0) - (a1 & 0xD7F017E0)) ^ 0x8B3ED4AD));
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (v1 ^ 0x5D2))
                              + 8 * (((*(void *)a1 == *(void *)(a1 + 8)) * (v1 ^ 0x557)) ^ v1)
                              - 4))();
}

uint64_t sub_1B0256A48()
{
  BOOL v5 = v1 < v0;
  if (v5 == v2 - 0x5800F43E018EB52ELL < v0 + (v3 ^ 0x7Bu) - 334) {
    BOOL v5 = v2 - 0x5800F43E018EB52ELL < v1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((70 * !v5) ^ v3)))();
}

uint64_t sub_1B0256AB0()
{
  STACK[0x350] = v1;
  unsigned int v3 = v0 & 0xAE1C2BF1;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (int)(v3 ^ 0xBBF)))(1576, 3012117910);
  STACK[0x430] = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((v4 == 0) * (v3 ^ 0x6A9 ^ ((v3 - 993) | 0x550))) ^ v3)))();
}

uint64_t sub_1B0256B2C(uint64_t a1, double a2)
{
  *(double *)(v3 + a1) = a2;
  BOOL v8 = v4 == a1;
  uint64_t v9 = a1 + 8;
  int v10 = v8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((896 * (v6 & ~(v5 ^ v10))) ^ v2)))(v9);
}

uint64_t sub_1B0256B5C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  int v4 = v2 - 1372200252;
  BOOL v3 = v2 - 1372200252 < 0;
  int v5 = 1372200252 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = *(_DWORD *)(a1 + 4) - 460628867 * ((a1 & 0x873FB66C | ~(a1 | 0x873FB66C)) ^ 0x3456CBEE) + 287;
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + v1 - 468)
                              + 8
                              * (((v1 + (v5 ^ 0xF3F5FFDF) + ((2 * v5) & 0xE7EBFFBE) + 201981364 < 0x7FFFFFFF)
                                * ((v1 ^ 0x5D7) - 1957)) ^ v1)
                              - 4))();
}

uint64_t sub_1B0256C60()
{
  uint64_t v7 = 497 * (v4 ^ 0x7D1u);
  v8.i64[0] = 0xCACACACACACACACALL;
  v8.i64[1] = 0xCACACACACACACACALL;
  v9.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v9.i64[1] = 0xE5E5E5E5E5E5E5E5;
  *(int8x16_t *)(v3 + (v0 & 0x3F) + v1 - 310 + (v7 ^ 0x6E3)) = vaddq_s8(vsubq_s8(*v5, vandq_s8(vaddq_s8(*v5, *v5), v8)), v9);
  BOOL v10 = ((v7 + 0x1FFFFF82CLL) & (v2 + 1)) != 16;
  return (*(uint64_t (**)(void))(v6 + 8 * (v10 | (16 * v10) | v7)))();
}

uint64_t sub_1B0256CF0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((26
                                * (((1132050804 << (((v0 ^ 0x32) - 31) ^ 0x13)) & ((23 * (v0 ^ 0x432)) ^ 0xF36FBB07)) == 0x82633260)) ^ v0)))();
}

uint64_t sub_1B0256CF8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((45 * (STACK[0x430] != 0)) | (v0 - 1150))))();
}

uint64_t sub_1B0256D24(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((((v3 + 188) ^ 0x410 ^ ((v3 + 188) | 0x410) ^ 0x3D)
                                                                * (v2 == 0)) ^ v3)))(a1, a2, 1373504863);
}

uint64_t sub_1B0256D68(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  HIDWORD(v12) = a7 ^ 2;
  LODWORD(v12) = a7 ^ a4;
  return (*(uint64_t (**)(void, uint64_t, void))(v8 + 8 * ((97 * (v7 + 1 == v11 + 40)) ^ a5)))((v12 >> 2) + v10 - (v9 & (2 * (v12 >> 2))), a2, (a5 + 31));
}

uint64_t sub_1B0256E28@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(_OWORD *)(a3 + (((v4 - 298) ^ (unint64_t)(a1 + 252)) & (a4 + 16))) = *v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 16) * a2) ^ v4)))();
}

uint64_t sub_1B0256E34@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  int v36 = (unsigned __int8 *)(a1 + a2 + v35);
  int v37 = *v36 ^ 0xE5;
  LODWORD(v36) = ((v36[2] ^ 0xE5) << 16) | ((v36[3] ^ 0xE5) << 24) | v37 & 0xFFFF00FF | (((a32 + 119) ^ 0xDA ^ v36[1]) << 8);
  *(_DWORD *)(v34 + ((a2 + v35) & 0xFFFFFFFFFFFFFFFCLL)) = v36
                                                         + v33
                                                         - 2 * (v36 & 0x2E215E97 ^ v37 & 0x11111111);
  return (*(uint64_t (**)(void))(v32 + 8 * ((1467 * ((unint64_t)(a2 + 4 + v35) < 0x40)) ^ a32)))();
}

void sub_1B0256ED8(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

void sub_1B0256F24(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x330904BA72E93EC0) = v2;
  *(_DWORD *)(v1 + 40) = -1373544826;
}

uint64_t sub_1B0256F7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v19 - 128) = (v14 - 528) ^ (((((v19 - 128) | 0x5428CE33) + (~(v19 - 128) | 0xABD731CC)) ^ 0x39DCD63B) * v16);
  *(void *)(v19 - 120) = v18;
  *(void *)(v19 - 112) = a14;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 501)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 124) == v17 + 3107) * ((v14 - 1175) ^ 4)) ^ v14)))(v20);
}

uint64_t sub_1B0257004(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  return (*(uint64_t (**)(void))(v32
                              + 8
                              * (((v31 + a31 + (v33 ^ 0x37u) + 35 < 0xFFFFFFFB) * ((v33 ^ 0xF9) - 185)) ^ (v33 + 1869))))();
}

uint64_t sub_1B0257050@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xA4Eu));
  return v3(v1);
}

uint64_t sub_1B0257084@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v4 + v3)) = *(unsigned char *)(v2 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (v5 | (((((v5 - 1447) | 1) ^ 0xFFFFFE76) + v4 == a2) << 6))))();
}

uint64_t sub_1B02570BC(uint64_t a1, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((v8 + a3) & a4 ^ a7) ^ (((((v8 + a3) & a4) + 1165) ^ a8) + v10 == 32)) & 1 ^ (v8 + a3) & a4)))();
}

uint64_t sub_1B0257114(uint64_t a1, unsigned int a2, int a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((82 * (a3 ^ 0x35A) - 766) ^ ((a3 - 580) | 0x4C0)) * (a2 < a5)) ^ a3)))();
}

uint64_t sub_1B0257154()
{
  LODWORD(STACK[0x400]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 + 1076) | 0x12) - 295) ^ 0x528) * ((v1 & 0xFFFFFFFC) == 1284426096)) ^ v0)))();
}

uint64_t sub_1B02571A0()
{
  *(_DWORD *)(v5 - 128) = (v4 - 460) ^ (1374699841
                                      * ((~((v5 - 128) | 0xB0449EB5) + ((v5 - 128) & 0xB0449EB5)) ^ 0x224F7943));
  *(void *)(v5 - 120) = v1;
  *(void *)(v5 - 112) = v3;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v4 + 569)))(v5 - 128);
  return (*(uint64_t (**)(uint64_t))(v0
                                            + 8
                                            * ((3566 * (*(_DWORD *)(v5 - 124) > (v4 ^ 0x11u) + v2 + v4 + 68)) ^ v4)))(v6);
}

uint64_t sub_1B025724C()
{
  int v6 = 535753261 * ((((v5 - 144) | 0x56A47031) - ((v5 - 144) & 0x56A47031)) ^ 0x5C507E1E);
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = v1 - v6 + 792587581 + v4 - 648;
  *(_DWORD *)(v5 - 144) = v6 + v4 + 574;
  *(void *)(v5 - 120) = v8;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 + 1029)))(v5 - 144);
  _DWORD *v10 = v9;
  *(_DWORD *)(v0 + 64) = -1373544826;
  return result;
}

uint64_t sub_1B0257320(uint64_t a1)
{
  unsigned int v5 = v2 - ((2 * v1 + 1726115104) & 0xF12F46B6) - 1408706070;
  BOOL v6 = (v5 ^ (37 * (v3 ^ 0x68E)) ^ 0x952C1A62) - 2100224 + ((2 * v5) & 0xDB777F3E ^ v3 ^ 0xD1274096) != 1838920607;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * (((2 * v6) | (16 * v6)) ^ v3)))(a1, 71, 2456046688);
}

uint64_t sub_1B02573D0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0x1E4u)))();
}

uint64_t sub_1B02574A4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((v2 + 1969331262) & 0x8A9E603D ^ 0x35) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02574E8@<X0>(int a1@<W8>)
{
  int v4 = v2 ^ 0xE;
  unsigned int v5 = (((v4 - 415) | 2) ^ 0xA1D18DF0) + a1;
  unsigned int v6 = ((v4 + 846655816) & 0xCD890F5F ^ 0x60D03957) + v1;
  int v7 = (v6 < 0xC05F5F60) ^ (v5 < 0xC05F5F60);
  BOOL v8 = v5 < v6;
  if (v7) {
    BOOL v8 = v6 < 0xC05F5F60;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((361 * v8) ^ v4)))();
}

uint64_t sub_1B0257580()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)
                                * (v3 + 1625)) ^ v3)))();
}

uint64_t sub_1B02575C4@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v17 = a2 - 2043;
  int v18 = (a2 - 2043) ^ (v13 + 2);
  int v19 = 4 * (v18 ^ 0x210);
  int v20 = 67 * v18;
  int v21 = v15 + v17 + 1824;
  BOOL v22 = a13 + 735634789 < (v16 + 1946015711);
  if (v16 + 1946015711 < (v20 ^ (a1 + 2242)) != a13 + 735634789 < (v19 + a1)) {
    BOOL v22 = v16 + 1946015711 < (v20 ^ (a1 + 2242));
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((111 * v22) ^ v21)))();
}

uint64_t sub_1B02575D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61)
{
  BOOL v67 = *v61 == 229 && LODWORD(STACK[0x618]) == -934990107 && v62 == v64 + 1;
  return (*(uint64_t (**)(void))(v63 + 8 * ((79 * (((a61 ^ v67) & 1) == 0)) ^ (LODWORD(STACK[0x3FC]) + 344))))();
}

uint64_t sub_1B025762C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * (int)(((((23 * (v22 ^ 0xF9)) ^ ((v21 | a21) == 0)) & 1)
                                     * ((v22 + 195979439) & 0xF45196EF ^ 0x5F3)) ^ v22)))();
}

uint64_t sub_1B0257688(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((2 * (v5 + 1 == v10 + 80)) | (8 * (v5 + 1 == v10 + 80)) | a5)))((__PAIR64__(v6 ^ 2u, v6 ^ a4) >> 2)+ v9- (v8 & (2 * (__PAIR64__(v6 ^ 2u, v6 ^ a4) >> 2))));
}

uint64_t sub_1B0257740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, int a17, unsigned int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093 * ((((2 * &a14) | 0xDA735848) - &a14 - 1832496164) ^ 0xDE441C70);
  a14 = 1036168092 - v22;
  a17 = v22 ^ 0x6E57E88A;
  a18 = v22 + v21 + 2138962573;
  a16 = a12;
  a19 = &STACK[0x4CAF57822185BFA1];
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v21 + 1345)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * (((a15 == v19) * ((v21 + 463909738) & 0x3FB ^ 0x94A)) ^ v21)))(v23);
}

void sub_1B025781C(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 535753261 * ((a1 & 0x658A5D69 | ~(a1 | 0x658A5D69)) ^ 0x9081ACB9);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1
        + 235795823 * ((-1614712329 - (v4 | 0x9FC171F7) + (v4 | 0x603E8E08)) ^ 0xF493C751)
        - 87;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_1F08CDB40 + (v1 ^ 0x251)) - 4;
  (*(void (**)(_DWORD *))&v3[8 * v1 + 11896])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B025796C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v9 + a4) & a6) + 1051) ^ a7) * (v8 == 0)) ^ v9)))();
}

uint64_t sub_1B02579A0()
{
  int v6 = v3 + *(unsigned __int8 *)(v4 + 6) - 288;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1137 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1B02579D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v11 = *(unsigned __int8 *)(v8 + ((v5 + 484960361) & 0xE318177D ^ 0xA7FF0BC1D42DC581) + v9)
      - *(unsigned __int8 *)(v7 + ((v5 + 484960361) & 0xE318177D ^ 0xA7FF0BC1D42DC581) + v9);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * (int)(((((2 * v11) & 0xFF69D4CC) + (v11 ^ v6) == v6)
                                                   * (a5 + ((v5 + 1344572280) | 0x8E092121) + 1065)) ^ v5)))(4294925278);
}

uint64_t sub_1B0257A68(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((STACK[0x408] == v3)
                                                                * ((v2 - 934) ^ 0x3BD ^ ((v2 - 1359) | 0x218))) ^ (v2 - 139))))(a1, a2, 1373504863);
}

uint64_t sub_1B0257AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((430 * (a7 + 1 == v9 + 24)) ^ v7)))();
}

uint64_t sub_1B0257B78(double a1, double a2, double a3, double a4, double a5, double a6, double a7, int8x16_t a8)
{
  signed int v12 = (v8 + 300) ^ 0xB9FBFC63;
  int8x16_t v13 = (int8x16_t)vld1q_dup_f32((const float *)v10);
  v14.i64[0] = 0x8000000080000000;
  v14.i64[1] = 0x8000000080000000;
  a8.i64[0] = *(void *)(v10 + 4);
  a8.i32[2] = *(_DWORD *)(v10 + 12);
  int8x16_t v15 = vextq_s8(v13, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v10 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v15, v14)), 1uLL), (int8x16_t)vdupq_n_s32(0x2B830F9Bu));
  v18.i32[0] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 4) & ((v12 + 1680194067) & 0x9BDA47FB ^ 0x3FA)));
  v18.i32[1] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v11 - 152 + 4 * (*(_DWORD *)(v10 + 12) & 1));
  v18.i32[3] = *(_DWORD *)(v11 - 152 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v10 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v10 + 1588), v18), (int8x16_t)vdupq_n_s32(0x91F5AA21)), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), (int8x16_t)vdupq_n_s32(0xAE0C3E6C))), vdupq_n_s32(0x57061F36u)));
  return (*(uint64_t (**)(void))(v9 + 8 * v12))();
}

uint64_t sub_1B0257B84(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v2 = 1759421093 * (((a1 | 0x72C27792) - (a1 & 0x72C27792)) ^ 0xC1BFC7C6);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  int v4 = *(_DWORD *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 24);
  int v7 = 1374699841 * ((&v9 + 1892788145 - 2 * ((unint64_t)&v9 & 0x70D1A7B1)) ^ 0x1D25BFB8);
  int v14 = (v2 ^ *(_DWORD *)(a1 + 16) ^ 0x5729E64E) - v7;
  uint64_t v9 = v5;
  uint64_t v11 = v6;
  int v12 = v3 - v7 - 2138962000;
  int v13 = v2 + v4 + v7 - 376971175;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08CDB40 + (v3 ^ 0x7F7DFD38))
                                                + 8 * (v3 ^ 0x7F7DF50B)
                                                - 4))(&v9);
  *(_DWORD *)(a1 + 4) = v10;
  return result;
}

uint64_t sub_1B0257CDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * (int)(((((v11 - 1758701403) & 0x68D3A5DC ^ 0xFFFFFFF6) + ((v11 - 522) | 0x8C)) * (v12 == 0)) | (v11 - 330))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1B0257D60(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1B0257D78(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, int a8, int a9)
{
  uint64_t v14 = a9 - 2147334888 + a8 + ((4 * v12) ^ 0xC40u);
  int8x16_t v15 = vrev64q_s8(*(int8x16_t *)(v10 + v14 - 15));
  int8x16_t v16 = vextq_s8(v15, v15, 8uLL);
  int8x16_t v17 = vrev64q_s8(*(int8x16_t *)(v10 + v14 - 31));
  int8x16_t v18 = vextq_s8(v17, v17, 8uLL);
  uint64_t v19 = v9 + v14;
  int8x16_t v20 = vrev64q_s8(vaddq_s8(vsubq_s8(v16, vandq_s8(vaddq_s8(v16, v16), a5)), a6));
  *(int8x16_t *)(v19 - 15) = vextq_s8(v20, v20, 8uLL);
  int8x16_t v21 = vrev64q_s8(vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a5)), a6));
  *(int8x16_t *)(v19 - 31) = vextq_s8(v21, v21, 8uLL);
  return (*(uint64_t (**)(void))(v13 + 8 * ((1153 * ((v11 & 0xFFFFFFE0) == 32)) ^ v12)))();
}

uint64_t sub_1B0257E14(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_1B0257E2C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0257EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13 = (_DWORD *)STACK[0x3C8];
  *uint64_t v13 = v9 - 1;
  uint64_t v14 = &v13[6 * (v9 - 1321678225)];
  int v15 = v14[2];
  STACK[0x3A0] = *((void *)v14 + 2);
  LODWORD(STACK[0x528]) = v14[6];
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (int)(((*(_DWORD *)(v10
                                                  + 48 * (int)(((v8 + 1546298118) & 0xA3D55E7E ^ (a8 + 422)) + v15)
                                                  + 36) == v11)
                                     * ((((v8 + 1546298118) & 0xA3D55E7E ^ 0x318) + 1669) ^ 0x298)) ^ (v8 + 1546298118) & 0xA3D55E7E)))();
}

uint64_t sub_1B0257F94(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int32x4_t a50, int32x4_t a51, int32x4_t a52, int32x4_t a53, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,int a36,int a37,int a38,int a39,int a40,unsigned __int8 a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  return sub_1B026AE28(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53);
}

uint64_t sub_1B0257FA0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((107 * ((*(_DWORD *)(v1 + v3 * (uint64_t)v2 + 40) & 8) == v0 - 1245)) ^ (v0 + 718))))();
}

uint64_t sub_1B0257FE0()
{
  int v5 = ((((v4 - 144) | 0xDB4EDC7B) + (~(v4 - 144) | 0x24B12384)) ^ 0x87801F37) * v2;
  *(void *)(v4 - 136) = v10;
  *(void *)(v4 - 128) = v3;
  *(_DWORD *)(v4 - 144) = (v7 + 572) ^ v5;
  *(_DWORD *)(v4 - 140) = v9 - v5 + ((v7 + 357) ^ 0x3D1CB08E);
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v7 + 1197)))(v4 - 144);
  *(_DWORD *)(v8 - 0x5CF1D1600198EA10) = v9;
  *(_DWORD *)(v0 + 48) = -1373544826;
  return result;
}

uint64_t sub_1B025805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(void))(v52
                              + 8 * ((216 * (a51 - 129800696 < a5 + ((v51 + 151422881) | 0xE4400424) - 423)) ^ v51)))();
}

uint64_t sub_1B02580B8@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v4)) = *(unsigned char *)(v3 + (v5 + v4));
  BOOL v7 = v5 - 1 != (a2 ^ 9) - 333 + a3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (8 * v7)) ^ a2 ^ 9)))();
}

void sub_1B02580F4()
{
}

void sub_1B0258100(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (3804331 * (a1 ^ 0xFA9EF356));
  BOOL v2 = (*(unsigned char *)(a1 + 4) - 85 * (a1 ^ 0x56)) == 66;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B025819C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t a12, unint64_t a13, unint64_t a14, unint64_t a15, uint64_t a16, unint64_t a17)
{
  int v21 = 628203409 * ((2 * ((v20 - 160) & 0x5955AA10) - (v20 - 160) + 648697320) ^ 0xA42259DB);
  STACK[0x268] = a15;
  STACK[0x250] = a14;
  STACK[0x258] = a12;
  *(_DWORD *)(v20 - 144) = v18 - v21 + 1489;
  *(_DWORD *)(v20 - 140) = v19 - v21 + ((v18 + 190) | 0x421) - 643093692;
  STACK[0x280] = a13;
  STACK[0x278] = a17;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 ^ 0x8FE)))(v20 - 160);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((919 * (*(_DWORD *)(v20 - 128) == v18 - 1373544960)) ^ v18)))(v22);
}

uint64_t sub_1B0258298()
{
  int v1 = LODWORD(STACK[0x3FC]) - 246;
  unint64_t v2 = STACK[0x5E8];
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1343));
  unint64_t v3 = STACK[0x380];
  STACK[0x628] = v2;
  LODWORD(STACK[0x634]) = 1603216237;
  STACK[0x488] = v3;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((252
                                * (((v1 - 1446175911) & 0x5632E2DF ^ 0xA370DEE2)
                                 + 1603216237
                                 + (((v1 ^ 0xF2) - 1084) & (2 * *(_DWORD *)(v2 - 0x843828D0CDF33E9)) ^ 0xC)
                                 + (*(_DWORD *)(v2 - 0x843828D0CDF33E9) & 0x3F ^ 0xFCFFFFF9) > 0xFFFFFFBF)) ^ v1)))();
}

void Ehn34khqq1jgEJw()
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = *(&off_1F08CDB40
       + ((-19 * ((qword_1E9B2FDF8 + dword_1E9B30968) ^ 0xED)) ^ byte_1B04BD820[byte_1B04C9AF0[(-19 * ((qword_1E9B2FDF8 + dword_1E9B30968) ^ 0xED))] ^ 0x3C])
       - 113);
  unsigned __int8 v1 = -19 * ((qword_1E9B2FDF8 + *v0) ^ 0xED);
  unint64_t v2 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDD38 + (*((unsigned __int8 *)off_1F08CDFA0 + v1 - 12) ^ 0xAFu)) ^ v1)
       - 73);
  unint64_t v3 = *v0 ^ (unint64_t)&v5 ^ *v2;
  void *v0 = 1469428717 * v3 + 0x13BC45BED9160A13;
  void *v2 = 1469428717 * (v3 ^ 0xEC43BA4126E9F5EDLL);
  v6[0] = 1734042137 * (v6 ^ 0x5CCEC34D) + 1695027452;
  LOBYTE(v2) = -19 * ((*(_DWORD *)v2 + *(_DWORD *)v0) ^ 0xED);
  int v4 = (char *)*(&off_1F08CDB40
               + ((-19 * (dword_1E9B30968 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (dword_1E9B30968 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x33])
               - 98)
     - 4;
  (*(void (**)(_DWORD *))&v4[8
                                      * (*((unsigned char *)off_1F08CE078
                                                          + (*((unsigned __int8 *)off_1F08CDD60
                                                             + v2
                                                             - 12) ^ 0x3Eu)
                                                          - 4) ^ v2)
                                      + 16424])(v6);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02584CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = (v14 - 1948153979) & 0x741E73E3;
  int v21 = 535753261
      * (((((v19 - 128) ^ 0x30128C00 | 0x416973FA) ^ 0xFFFFFFFE) - ((v19 - 128) ^ 0x1210290 | 0xBE968C05)) ^ 0xC4387F40);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v21 + v16 + v20 - 156505027;
  *(_DWORD *)(v19 - 116) = v21 + v14 - 411;
  (*(void (**)(uint64_t))(v15 + 8 * (v14 ^ 0xE4E)))(v19 - 128);
  *(_DWORD *)(v19 - 128) = (v20 + 647) ^ (1374699841
                                        * ((1659477659 - ((v19 - 128) | 0x62E99E9B) + ((v19 - 128) | 0x9D166164)) ^ 0xF0E2796D));
  *(void *)(v19 - 120) = a13;
  *(void *)(v19 - 112) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v20 ^ 0x98C)))(v19 - 128);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((((v20 + 1107) ^ (*(_DWORD *)(v19 - 124) > (v17 + 3105))) & 1) == 0)
                                              * ((v20 - 14591406) & 0xDEA6FF ^ 0x2F9)) | v20)))(v22);
}

uint64_t sub_1B0258640()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((110 * (STACK[0x510] == 0)) ^ (v0 - 145))))();
}

uint64_t sub_1B025867C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((16 * (v1 >= 0xC6723268)) | (32 * (v1 >= 0xC6723268))) ^ (v2 + 1174669690))))();
}

void sub_1B02586C0(uint64_t a1)
{
  int v1 = (*(_DWORD *)(a1 + 16) ^ (235795823 * ((a1 + 1866794728 - 2 * (a1 & 0x6F4506E8)) ^ 0xFBE84FB1))) + 1164;
  BOOL v2 = (**(_DWORD **)(*(void *)a1 - 0x67843F9A1244BAC3) & 2) == (((*(_DWORD *)(a1 + 16) ^ (235795823
                                                                                             * (((int)a1
                                                                                               + 1866794728
                                                                                               - 2 * (a1 & 0x6F4506E8)) ^ 0xFBE84FB1)))
                                                                    - 915633900) & 0x369376EA ^ 0x2E8);
  __asm { BRAA            X25, X17 }
}

uint64_t sub_1B0258830@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((70
                                * (((2 * (a1 - 1284426096)) & 0x17CE6FEFCLL)
                                 + ((a1 - 1284426096) ^ 0x6F7BFB3CBE737F7ELL)
                                 - 0x6F7BFB3C942FF961 == 709068317)) ^ 0x135u)))();
}

uint64_t sub_1B02588E0()
{
  unsigned int v3 = v1 - ((2 * v1 + 1726115102) & 0xECAD5932) + 700965672;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((23
                                * ((v3 ^ (v2 - 892) ^ 0x733 ^ ((v2 - 578) | 0x242) ^ 0x49B14170)
                                 - 713105948
                                 + ((2 * v3) & 0x7FCFDEBC ^ 0x6C8D5830) == 359058754)) ^ (v2 - 892))))();
}

uint64_t sub_1B025898C(int a1)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((46 * (a1 ^ 0x452)) ^ 0xFFFFFF5F) + 340 * (a1 ^ 0x449)) * (v1 < 0x20)) ^ a1)))();
}

uint64_t sub_1B02589D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unint64_t v36 = (v32 ^ HIDWORD(v33)) + HIDWORD(v35) + (*(_DWORD *)(a30 + a15) ^ v30);
  *(_DWORD *)(a30 + 4 * a18) = v36 + v30 - (v31 & (2 * v36));
  *(_DWORD *)(a30 + a15) = v30
                         + (v36 >> (((a6 + 60) ^ 0xEFu) - 105))
                         - (v31 & (2 * (v36 >> (((a6 + 60) ^ 0xEFu) - 105))));
  BOOL v38 = a27 + 138315445 < 94651918 && a27 + 138315445 >= a22;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v34 + 8 * (a6 ^ (231 * v38))))(a1, a2, a14);
}

uint64_t sub_1B0258A78(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a4 ^ 0x5C5)))();
}

uint64_t sub_1B0258AD4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, unsigned int a17)
{
  BOOL v20 = a17 > v19;
  if (v20 == a4 - 377429886 < -1445847462) {
    BOOL v20 = a4 - 377429886 < a16;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18
                                                              + 8 * ((!v20 * (((v17 - 1133) | 0x10A) ^ 0x331)) ^ v17)))(0x78C952AFF9F5365, 4288631653, 0x1FF3EA6CALL);
}

uint64_t sub_1B0258B80()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 0x1D4) + 1377 + 71 * (v0 ^ 0x1D4) - 838) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1B0258BBC@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if ((v3 + 49265 + ((v4 - 1502240126) & 0x598A5ADFu)) >> 1 < 0xF9F) {
    int v2 = a2;
  }
  *(_DWORD *)(*(void *)(result + 8) - 0x216229CD9A8FA111) = v2;
  return result;
}

void sub_1B0258BF0()
{
}

uint64_t sub_1B0258C18@<X0>(uint64_t a1@<X3>, uint64_t a2@<X5>, uint64_t a3@<X8>, int8x16_t a4@<Q2>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int8x16_t *a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v31 = (v28 + 92007456) & 0xFA8413DD;
  *(int8x16_t *)(a2 + (((v31 ^ 0x761) + 4294966083) & (a3 + a1))) = vaddq_s8(vaddq_s8(*a25, a4), vmvnq_s8(vandq_s8(vaddq_s8(*a25, *a25), v30)));
  return (*(uint64_t (**)(void))(v29 + 8 * (int)(v31 ^ (2 * (((v31 + 0x1FFFFFC13) & (a11 + a28 - 1613)) != 16)))))();
}

uint64_t sub_1B0258CBC()
{
  int v4 = (unint64_t *)((char *)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E6DDLL);
  STACK[0x408] = v1 + 0x399DE98F08C0F0A4;
  void *v4 = 0x1A1A1A1A1A1A1A1ALL;
  v4[1] = 0xE5E5E5E5E3E5E5F7;
  int v5 = 460628867 * ((2 * ((v3 - 192) & 0x3E6D31C8) - (v3 - 192) - 1047343563) ^ 0x8D044C48);
  *(_DWORD *)(v3 - 188) = v5 + 1652078569;
  *(_DWORD *)(v3 - 184) = (v0 + 1064655308) ^ v5;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0xD20)))(v3 - 192);
  LODWORD(STACK[0x400]) = 1284426432;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v0 + 759)))(336, 1925803308);
  STACK[0x440] = v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                                         + 8
                                                                                         * ((((((v0 - 863) ^ (v6 == 0)) & 1) == 0)
                                                                                           * (((v0 - 1127) | 0x450) ^ 0x54F)) ^ v0)))(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_1B0258DFC@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  *(void *)(a2 - 7 + (v3 + a1 - v6)) = *(void *)(v2 - 7 + (v3 + a1 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((3468 * (((v7 - 1294) ^ 0x8C) + v6 == v5 - (v4 & 7))) ^ v7)))();
}

uint64_t sub_1B0258E4C()
{
  int v5 = (v0 - 20) | 0x100;
  _DWORD *v2 = v2[623];
  unint64_t v6 = STACK[0x3E8];
  *(_DWORD *)(v4 - 176) = STACK[0x3E8] + v5 + 2104631030;
  *(void *)(v4 - 168) = STACK[0x3E0];
  *(void *)(v4 - 184) = (v1 - 1770738666) ^ v6;
  *(_DWORD *)(v4 - 160) = v6 + 1;
  *(_DWORD *)(v4 - 156) = (v5 + 187755731) ^ v6;
  *(_DWORD *)(v4 - 152) = v6 ^ (v5 + 187755783) ^ 0x18;
  *(_DWORD *)(v4 - 148) = v5 + 187755783 + v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 + 809)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 192)))(v7);
}

uint64_t sub_1B0258EF0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 ^ 9 ^ ((v1 + 7) | 8)) * ((a1 ^ 0x30u) > 7)) ^ v1)))();
}

uint64_t sub_1B0258F30@<X0>(int a1@<W3>, char a2@<W4>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X7>, int a6@<W8>)
{
  int v13 = v9 + a6;
  *(unsigned char *)(v7 + (v13 + 1931)) = *(unsigned char *)(a5 + (v13 + 1931)) ^ (((v13 - 117) & 0xF) * a2) ^ *(unsigned char *)((((_BYTE)v13 - 117) & 0xF) + *(void *)(v11 + 8 * (v6 - 680)) + 2) ^ *(unsigned char *)(*(void *)(v11 + 8 * (v6 ^ a1)) + (((_BYTE)v13 - 117) & 0xF) - 12) ^ *(unsigned char *)(*(void *)(v11 + 8 * (v6 ^ a3)) + ((v13 + 1931) & 0xFLL) - 9) ^ v10;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v8 == v13) * a4) ^ v6)))();
}

uint64_t sub_1B0258F38(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v32 = v29 + v28 - 669;
  *(_DWORD *)(a25 + 4 * (v32 + v30)) = v26;
  int v33 = v32 + a2;
  if (v32 + a2 < a3)
  {
    BOOL v36 = __OFSUB__(v33, v27);
    BOOL v34 = v33 == v27;
    BOOL v35 = v33 - v27 < 0;
  }
  else
  {
    BOOL v36 = 0;
    BOOL v34 = 1;
    BOOL v35 = 0;
  }
  if (v35 ^ v36 | v34) {
    int v37 = 0;
  }
  else {
    int v37 = 1;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((v37 * a4) ^ v25)))();
}

uint64_t sub_1B0258F44()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xD62)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((45 * (STACK[0x430] != 0)) | (v0 - 1150))))();
}

uint64_t sub_1B0258F80@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  unsigned int v12 = (((((v5 + a2 - v6) >> 30) ^ 1) + a2 - 4 * ((v5 + a2 - v6) >> 31)) ^ (v5 + a2 - v6))
      * a1;
  *(_DWORD *)(v11 + 4 * a3) = a3 + v7 + v12 - (((v12 + a3) << v3) & v10) - 1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a3 < 0x26F) * v4) ^ v8)))();
}

uint64_t sub_1B0258F8C()
{
  BOOL v3 = ((v1 - 1284426096 + ((v0 - 204) | 0x393) - 980) & (v0 - 276)) - LODWORD(STACK[0x398]) == -1284426096;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (8 * v3)) ^ v0)))();
}

uint64_t sub_1B0258FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6, __n128 a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,char a42,uint64_t a43,uint64_t a44,uint64_t a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54,int a55)
{
  v56.n128_u64[0] = 0xE6E6E6E6E6E6E6E6;
  v56.n128_u64[1] = 0xE6E6E6E6E6E6E6E6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, __n128, __n128, __n128))(v55 + 8 * ((2638 * (a21 + ((((a19 + 773472433) | 0x301) - 1186563291) ^ a55 & 0x3F) + ((2 * a55) & 0x72 ^ 0x12u) < 0xFFFFFFC0)) ^ (a35 + 588))))(a1, a2, a3, a4, a5, &a46, 202, &a42, a6, a7, v56);
}

uint64_t sub_1B0259090@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  int v37 = (v34 - 1323196391) & 0x4EDE5E6F;
  *(&a33 + (a8 + v33)) = *(unsigned char *)(a21 + v36 - 2012186348)
                                     - ((v37 + 124) & (2 * *(unsigned char *)(a21 + v36 - 2012186348)))
                                     - 27;
  BOOL v38 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((395 * ((a2 + a8 + 295) < 0x40)) ^ v37));
  return v38(v38, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13);
}

uint64_t sub_1B025910C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((15 * (((v7 == 63) ^ (11 * (v8 ^ (a7 + 79) ^ (a7 - 73)))) & 1)) ^ v8)))();
}

uint64_t sub_1B025914C@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((((a3 - 80) | 0x50) + 16) ^ 0x71)
                                                   + *(unsigned char *)(v4 + v3)
                                                   - **(unsigned char **)(a1 + 8 * (((a3 - 336) | 0x150) - 1184))) != 44)
                                * a2) ^ (((a3 - 336) | 0x150) - 532))))();
}

uint64_t sub_1B02591A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, uint64_t a17, unsigned int a18, unsigned int a19, unint64_t *a20)
{
  unsigned int v22 = 1759421093 * ((&a15 & 0xB88B6601 | ~(&a15 | 0xB88B6601)) ^ 0xF40929AA);
  a17 = a11;
  a20 = &STACK[0x4CAF57822185BFB1];
  a18 = v22 ^ 0xFE1BE9AC;
  a19 = v22 + v20 + 2138961799;
  a15 = 1036168092 - v22;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * ((v20 - 27) ^ 0xDAA)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((((v20 + 104) ^ (a16 == -1373544826)) & 1)
                                              * (((v20 - 27) ^ 0x3B4) - 611)) ^ (v20 - 27))))(v23);
}

uint64_t sub_1B0259290(uint64_t a1)
{
  LODWORD(STACK[0x5CC]) = v2;
  STACK[0x468] = v3;
  LODWORD(STACK[0x5B4]) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (((((68 * (((v1 - 1354) | 0x69) ^ 0x7B) - 1747576947) & 0x6829E3FC)
                                                                 + 918)
                                                                * (v2 == v5)) ^ ((v1 - 1354) | 0x69))))(a1, 249, 1373504863);
}

uint64_t sub_1B02592AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v17 = 3804331 * ((v16 - 82795860 - 2 * ((v16 - 120) & 0xFB10A324)) ^ 0x18E5072);
  *(void *)(v16 - 112) = a11;
  *(_DWORD *)(v16 - 120) = v17 + v15 + 1377;
  *(_DWORD *)(v16 - 116) = (a14 + 376469364) ^ v17;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 2122)))(v16 - 120);
  uint64_t v19 = *(_DWORD *)(v16 - 152) & 0x3F;
  *(unsigned char *)(v16 - 220 + (v19 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((859
                                              * ((v19 ^ 0xF) > ((667 * (v15 ^ 0x1F)) ^ 0x21D25581)
                                                                           + ((v15 + 1545932136) | 0x8208A063))) ^ v15)))(v18);
}

uint64_t sub_1B02593C0@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  uint64_t v11 = (unsigned int *)(v10 + 4 * v5);
  uint64_t v12 = v5 + 1;
  int v13 = *(_DWORD *)(v10 + 4 * v12);
  unsigned int v14 = v6 ^ ((v13 & 0x7FFFFFFE | v4 & 0x80000000) >> 1);
  unsigned int *v11 = v11[397] ^ a2 ^ *(_DWORD *)(v8 + 4 * (v13 & 1)) ^ (v14 + a1 - ((v9 + a4 - 1040 - 338) & (2 * v14)));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v12 == 227) * a3) ^ a4)))();
}

uint64_t sub_1B0259430(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v2 - 1729) ^ 0xD47 ^ (v2 - 420))))(a1, 549541838);
}

uint64_t sub_1B02594AC(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 1224239923 * (((a1 | 0x54F5E249) - a1 + (a1 & 0xAB0A1DB6)) ^ 0xA6461F9E);
  int v3 = *(_DWORD *)(a1 + 12) ^ v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = 1224239923
     * (((&v10 | 0xE2EFC804) - &v10 + (&v10 & 0x1D1037F8)) ^ 0x105C35D3);
  unsigned int v11 = ((*(_DWORD *)(a1 + 16) + v2) ^ 0xAE5E5D4)
      - v8
      - 757175556
      + ((2 * (*(_DWORD *)(a1 + 16) + v2)) & 0xFFFBFEDE ^ 0xEA303456);
  uint64_t v13 = v5;
  uint64_t v14 = v6;
  uint64_t v12 = v4;
  unsigned int v16 = v3 - 368399084 + v8;
  uint64_t v10 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08CDB40 + (v3 ^ 0x15F557A9)) + 8 * v3 - 2947183452))(&v10);
  *(_DWORD *)(a1 + 8) = v15;
  return result;
}

uint64_t sub_1B0259618@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W8>)
{
  BOOL v11 = a4 < a1;
  *(unsigned char *)(v10 - 220 + (v5 - 123541585)) = *(unsigned char *)(v9 + (v6 + a2))
                                                         - ((2 * *(unsigned char *)(v9 + (v6 + a2))) & 0xCA)
                                                         - 27;
  unsigned int v12 = a3 + v6 + 1;
  int v13 = v11 ^ (v12 < a1);
  BOOL v14 = v12 < a4;
  if (!v13) {
    BOOL v11 = v14;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((!v11 * v4) ^ v7)))();
}

uint64_t sub_1B02596A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7 + 8 * ((LODWORD(STACK[0x3FC]) + 474) ^ 0x1A)))(a1, a2, a3, a4, a5, a6, a7, STACK[0x250]);
}

uint64_t sub_1B02596F8()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v1 >= 0) {
    unsigned int v5 = v1;
  }
  else {
    unsigned int v5 = -v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 - 169) | 0x402) + 993 * (v0 ^ 0x46B) - 3662) * (v4 > v5)) ^ v0)))();
}

void sub_1B0259748(uint64_t a1)
{
  uint64_t v42 = *MEMORY[0x1E4F143B8];
  int v2 = 1759421093 * ((((2 * a1) | 0x1851ADD4) - a1 - 204003050) ^ 0xBF5566BE);
  int v3 = *(_DWORD *)(a1 + 8) + v2;
  int v31 = *(_DWORD *)(a1 + 12) ^ v2;
  int v4 = *(_DWORD *)(a1 + 32);
  uint64_t v20 = 1759421093 * ((((2 * a1) | 0x748E849A1851ADD4) - a1 - 0x3A47424D0C28D6EALL) ^ 0x14F9831DBF5566BELL);
  int v5 = v4 + v2;
  unsigned int v6 = 628203409
     * (((v40 | 0x809EFB7E) - v40 + (v40 & 0x7F610480)) ^ 0x216F74D);
  v40[0] = v3 + v6 + 1172345419;
  v40[2] = v6 - 290923570;
  int v26 = &STACK[0x843828D0CDF3525];
  long long v41 = &STACK[0x843828D0CDF3525];
  uint64_t v7 = (char *)*(&off_1F08CDB40 + v3 + 136) - 4;
  (*(void (**)(_DWORD *))&v7[8 * (v3 ^ 0x87B)])(v40);
  int v8 = v31;
  int v15 = v5 - 1935197249;
  int v19 = v5 + 530111987;
  int v13 = v5 + 1701103397;
  int v12 = v5 + 610156161;
  v11[1] = (char *)&v11[-219579161] + 4;
  int v14 = (v3 - 696442897) & 0x2982E6FB;
  int v21 = v14 ^ 0x6E3;
  int v33 = (v3 ^ 0x4B3) + 773937635;
  int v34 = v3 ^ 0x4B3;
  int v32 = v3 ^ 3;
  int v17 = v3 - 773472305;
  unsigned int v18 = (v3 + 1919272670) & 0x8D9A3FB5;
  uint64_t v30 = (v3 - 773472305);
  uint64_t v16 = v30;
  int v29 = v3;
  int32x4_t v24 = vdupq_n_s32(0xAE215E86);
  int32x4_t v25 = vdupq_n_s32(0x2E215E87u);
  int32x4_t v23 = vdupq_n_s32(0x2E215E97u);
  uint64_t v22 = a1;
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v27 = *(void *)&v7[8 * v3];
  uint64_t v28 = v9;
  unsigned int v10 = v8 - ((2 * v8 + 1255336596) & 0x77D21472) + 1632796547;
  char v35 = ((v10 >> v21) ^ 0xBB) - ((((v10 >> v21) ^ 0xFFFFFFBB) << (((v3 - 34) & 0xB5) + 93)) & 0xCA) - 27;
  char v36 = (BYTE2(v10) ^ 0xE9) - ((2 * (BYTE2(v10) ^ 0xE9)) & 0xCA) - 27;
  char v37 = (((unsigned __int16)(v8 - ((2 * v8 - 5484) & 0x1472) + 32643) >> 8) ^ 0xA) - ((v10 >> 7) & 0xCA) - 27;
  char v38 = (v8 - ((2 * v8 - 108) & 0x72) - 125) ^ 0xDC;
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0259A14(int8x8_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  *(int8x8_t *)(a4 + v7) = vadd_s8(*(int8x8_t *)(v6 + v7), a1);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 != v8) * v5) ^ a3)))();
}

uint64_t sub_1B0259A48(_OWORD *a1)
{
  *(_OWORD *)(v3 + ((v4 ^ 0xFFFFFEE9) & (v1 + 16))) = *a1;
  return (*(uint64_t (**)(_OWORD *))(v5 + 8 * (int)((86 * (v2 == 16)) ^ v4)))(a1 + 1);
}

uint64_t sub_1B0259A58@<X0>(int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unint64_t v25 = (a2 ^ HIDWORD(v24)) + HIDWORD(a3) + (*(_DWORD *)(a21 + a8) ^ v21);
  *(_DWORD *)(a21 + 4 * a9) = v25 + v21 - (((a1 - 481262120) & 0x1CAF7FF7 ^ (v22 + 1425)) & (2 * v25));
  *(_DWORD *)(a21 + a8) = (v25 >> ((17 * (a1 ^ 0xBE)) ^ 0x2Fu))
                        + v21
                        - (v22 & (2 * (v25 >> ((17 * (a1 ^ 0xBE)) ^ 0x2Fu))));
  BOOL v27 = a18 - 1871735615 < 1367328606 && a18 - 1871735615 >= a13;
  return (*(uint64_t (**)(void))(v23 + 8 * (a1 ^ (14 * v27))))();
}

uint64_t sub_1B0259B18(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  v22.n128_u64[0] = 0xCACACACACACACACALL;
  v22.n128_u64[1] = 0xCACACACACACACACALL;
  v23.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v23.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v21 + 8 * (((((a21 - 70) | 0x478) + ((a21 - 853635148) & 0x32E1747D) - 1510) * (a17 < 0xFFFFFFFE)) ^ a21)))(3550254202, 3152611897, 2115178074, 744713094, 1941479911, 2179789222, 1619931834, a1, a2, a3, a4, v22, v23);
}

uint64_t sub_1B0259BD4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v7 = a1;
  v6[1] = v3 + 535753261 * (((~v6 & 0xF5EFFFB2) - (~v6 | 0xF5EFFFB3)) ^ 0xFF1BF19C) + 1746;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v2 + 8 * (v3 + 1822)))(v6);
  *(_DWORD *)(v1 + 4) = v4;
  return result;
}

uint64_t sub_1B0259C30()
{
  int v5 = *(unsigned __int8 *)(v0 + v2 - 0x7F787F4811B8E217)
     - (*(unsigned char *)(v1 + v2 - 0x7F787F4811B8E217) - 106);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((951 * (((v3 ^ 0xB5FB9E9E) & (2 * v5)) + (v3 ^ 0x5AFDCE84 ^ v5) == 1526583286)) ^ v3)))();
}

uint64_t sub_1B0259C38(uint64_t a1, uint64_t a2)
{
  int v5 = v2 + 495;
  (*(void (**)(void, uint64_t, void))(v3 + 8 * (v2 + 1314)))(*(unsigned int *)STACK[0x2B8], a2, 0);
  uint64_t v6 = LODWORD(STACK[0x5B4]);
  unint64_t v7 = 1224239923
     * ((2 * ((v4 - 192) & 0x2D9C6B7C1C2A4430) - (v4 - 192) - 0x2D9C6B7C1C2A4434) ^ 0xFA3921EA1166461BLL);
  *(_DWORD *)(v4 - 168) = v7 + v5 - 1501687204;
  *(_DWORD *)(v4 - 164) = -1224239923 * ((2 * ((v4 - 192) & 0x1C2A4430) - (v4 - 192) - 472532020) ^ 0x1166461B);
  int v8 = v5 + 1739640646 + v7;
  *(_DWORD *)(v4 - 160) = v8 + 41;
  *(_DWORD *)(v4 - 156) = v8;
  *(void *)(v4 - 184) = v7 ^ 0x51DE055C;
  *(void *)(v4 - 176) = v6 ^ v7;
  *(_DWORD *)(v4 - 188) = ((v5 + 1739640646) ^ 0x46) + v7;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v5 ^ 0xD2C)))(v4 - 192);
  STACK[0x338] = 0;
  unsigned int v10 = *(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 192));
  LODWORD(STACK[0x2D0]) = 1746339940;
  return v10(v9);
}

uint64_t sub_1B0259D40()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_1B0259D60@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(a13 + 4 * (v13 + a3)) = a2;
  int v20 = v16 + v13 + 1;
  int v21 = (v18 > a1) ^ (v20 < v15 + 917);
  BOOL v22 = v20 < v17;
  if (v21) {
    BOOL v22 = v18 > a1;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((v22 | (4 * v22)) ^ v14)))();
}

uint64_t sub_1B0259DC0()
{
  int v7 = ((((v6 - 144) | 0x57D1B2BD) + (~(v6 - 144) | 0xA82E4D42)) ^ 0x744B6AAA) * v5;
  *(void *)(v6 - 136) = v0;
  *(_DWORD *)(v6 - 128) = (v1 - 584148100) ^ v7;
  *(_DWORD *)(v6 - 140) = (v3 - 1586) ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 409)))(v6 - 144);
  BOOL v9 = *(_DWORD *)(v6 - 144) == v4 + ((v3 - 1343) ^ 0x373) - 737;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((v9 | (2 * v9)) ^ (v3 - 1056))))(v8);
}

_DWORD *sub_1B0259E74@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = a2;
  return result;
}

void sub_1B0259E7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v26 - 144) = v23;
  *(void *)(v26 - 136) = a16;
  *(void *)(v26 - 120) = v25;
  *(void *)(v26 - 112) = v25;
  *(_DWORD *)(v26 - 104) = (v22 + 1336) ^ (1759421093
                                         * ((-2001794876 - ((v26 - 144) | 0x88AF08C4) + ((v26 - 144) | 0x7750F73B)) ^ 0xC42D476F));
  *(void *)(v26 - 128) = a22;
  (*(void (**)(uint64_t))(v24 + 8 * (v22 + 1456)))(v26 - 144);
  JUMPOUT(0x1B025638CLL);
}

void sub_1B0259EFC()
{
  unsigned int v5 = v3 - 2 * ((v3 + 95369912) & 0x3BE90A3F ^ v3 & 6) + 1100498161;
  unsigned char *v7 = ((v4 + 112) & 0x97 ^ HIBYTE(v5) ^ 0x3F) - ((2 * ((v4 + 112) & 0x97 ^ HIBYTE(v5) ^ 0x3F)) & 0xCA) - 27;
  v7[1] = (BYTE2(v5) ^ 0xE9) - ((2 * (BYTE2(v5) ^ 0xE9)) & 0xCA) - 27;
  v7[2] = (BYTE1(v5) ^ 0xA) - ((v5 >> 7) & 0xCA) - 27;
  v7[3] = (v3 - 2 * ((v3 - 72) & 0x3F ^ v3 & 6) - 15) ^ 0xDC;
  uint64_t v6 = v2 - ((2 * v2) & 0x21C65756906EBF36) - 0x6F1CD454B7C8A065;
  v7[4] = (HIBYTE(v6) ^ 0x90) + (~(2 * HIBYTE(v6)) | 0x35) - 26;
  v7[5] = (BYTE6(v6) ^ 0xE3) + (~(2 * (BYTE6(v6) ^ 0xE3)) | 0x35) - 26;
  v7[6] = (BYTE5(v6) ^ 0x2B) + (~(2 * (BYTE5(v6) ^ 0x2B)) | 0x35) - 26;
  v7[7] = (BYTE4(v6) ^ 0xAB) - ((2 * (BYTE4(v6) ^ 0xAB)) & 0xCA) - 27;
  v7[8] = (((v2 - ((2 * v2) & 0x906EBF36) + 1211588507) >> 24) ^ 0x48)
        - ((2 * (((v2 - ((2 * v2) & 0x906EBF36) + 1211588507) >> 24) ^ 0x48)) & 0xCA)
        - 27;
  v7[9] = (BYTE2(v6) ^ 0x37) - ((2 * (BYTE2(v6) ^ 0x37)) & 0xCA) - 27;
  v7[10] = (BYTE1(v6) ^ 0x5F) + (~(2 * (BYTE1(v6) ^ 0x5F)) | 0x35) - 26;
  v7[11] = (v2 - ((2 * v2) & 0x36) - 101) ^ 0x7E;
  *(_DWORD *)(v0 + 4) = *(_DWORD *)(v1 - 0x7761D79CB8DF4CFBLL);
}

uint64_t sub_1B025A09C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17)
{
  int v24 = 6 * (v22 ^ 0x33);
  *(_DWORD *)(a17 + 4 * (a3 + v23 + (v24 ^ a2))) = ((v19 >> (v24 ^ 0x1Au)) ^ v17)
                                                   + v18
                                                   - 2
                                                   * (((v19 >> (v24 ^ 0x1Au)) ^ v17) & (v18 + 5) ^ (v19 >> (v24 ^ 0x1Au)) & 5);
  BOOL v26 = v21 + 2106559789 > ((223 * (v24 ^ 0x53C)) ^ 0x23B8C8CD) || v21 + 2106559789 < a15;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v26 * (v24 ^ 0x522)) ^ v24 ^ 0x614)))();
}

uint64_t sub_1B025A158@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 629) | 0x1C) ^ 0x196) * (v1 == a1)) ^ v2)))();
}

uint64_t sub_1B025A194()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v2 == (((v0 - 226) | 0xE2) ^ 0x4631225A)) * (((v0 - 190) | 0x186) ^ 0x3D5)) ^ (v0 + 331))))();
}

uint64_t sub_1B025A1E0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v10 = v8 - 32;
  uint64_t v11 = v6 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 != 32) * (a3 + 18)) ^ (a6 + v7 + 1243))))();
}

uint64_t sub_1B025A1EC(char a1, char a2, char a3, char a4, unsigned __int8 a5, int a6, int8x16_t a7, int8x8_t a8, int8x8_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  char v57 = v51 - 8;
  uint64_t v58 = (a6 + v55 - 8);
  v60.val[0].i64[0] = ((_BYTE)a6 + (_BYTE)v55 - 8) & 0xF;
  v60.val[0].i64[1] = ((_BYTE)a6 + v54 - 8) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a6 + a4 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a6 + a3 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a6 + a2 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a6 + a1 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a6 + v57 + (a5 ^ 7)) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a6 + v57) & 0xF;
  *(int8x8_t *)(*(void *)(v56 - 136) + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v52 + v58), *(int8x8_t *)(v49 + (v58 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v50 + (v58 & 0xF) - 7), *(int8x8_t *)(v48 + (v58 & 0xF) - 7)))), a9), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a7), a8)));
  return (*(uint64_t (**)(void))(a48 + 8 * ((14 * (a6 != v53 + 8)) ^ *(_DWORD *)(v56 - 128))))();
}

uint64_t sub_1B025A210()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * (((v3 - 1289) ^ 0x369) - 157)) ^ v3)))();
}

uint64_t sub_1B025A250(uint64_t a1)
{
  int v3 = (*(uint64_t (**)(void))(v1 + 17208))();
  if (v3 == 16) {
    unsigned int v4 = -42029;
  }
  else {
    unsigned int v4 = -42030;
  }
  if (v3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  (*(void (**)(uint64_t))(v1 + 16784))(a1);
  return v5;
}

uint64_t sub_1B025A298(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)(((((v6 - 10048682) & 0xEDDFDDEF ^ (a5 - 747)) + v6 - 149) * (v5 != 63)) | v6)))();
}

uint64_t sub_1B025A2D8@<X0>(uint64_t a1@<X8>)
{
  int v6 = 47 * (v2 ^ 0x45E);
  *(unsigned char *)(a1 + v3 + ((v6 - 1729136004) & 0x6710815F) + v1 - 22) = v4;
  return (*(uint64_t (**)(void))(v5 + 8 * ((112 * ((unint64_t)(a1 + v3) < 0x40)) ^ v6)))();
}

uint64_t sub_1B025A330(uint64_t a1, uint64_t a2, uint64_t a3, _DWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  *a4 = 0;
  int v22 = (v18 + v21 + 1010) | 0x254;
  int v23 = v18 + v21 + 1636;
  a17 = v21
      + 1734042137 * ((2 * (&a17 & 0x3FB13888) - &a17 + 1078904692) ^ 0x1C800439)
      + 1889702590;
  uint64_t v24 = (*(uint64_t (**)(unsigned int *))(v20 + 8 * (v18 + v21 + 2163)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((3730 * (a18 == (v22 ^ (v19 - 1430)))) ^ v23)))(v24);
}

uint64_t sub_1B025A338()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * (((((v1 ^ 0x59A) + 1769) ^ (877 * (v1 ^ 0x59A))) * (v0 == 63)) ^ v1)))(229);
}

uint64_t sub_1B025A388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(_DWORD *)(v17 - 104) = (v16 + 1685) ^ (1759421093 * ((v17 - 144) ^ 0xB37DB054));
  *(void *)(v17 - 128) = v13;
  *(void *)(v17 - 120) = v12;
  *(void *)(v17 - 144) = v14;
  *(void *)(v17 - 136) = a11;
  *(void *)(v17 - 112) = v12;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1805)))(v17 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((218
                                              * ((((v11 + 1102) < 0x7FFFFFFF) ^ (93 * ((v16 + 34) ^ 0x4C))) & 1)) ^ (v16 + 802))))(v18);
}

uint64_t sub_1B025A418@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((7 * (*(_DWORD *)(*a1 + v4) == ((v3 - 683) ^ (v2 + 307) ^ v3 ^ 0xA6))) ^ v3)))();
}

uint64_t sub_1B025A458@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v3;
  unsigned int v4 = *(_DWORD *)(a1 + 4) - 152375292 - ((2 * *(_DWORD *)(a1 + 4) + 1726115104) & 0x86F372E8);
  return (*(uint64_t (**)(void))(v2
                                           + 8
                                           * ((199
                                             * (((2 * v4) & 0xF36FBF60 ^ 0x82633260) + (v4 ^ 0x3ACE66C4) - 1093664896 == 948428592)) ^ 0x660u)))(0);
}

uint64_t sub_1B025A500@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  *(_DWORD *)(v60 - 120) = a2 + 13;
  *(_DWORD *)(v60 - 116) = a2 + 14;
  v66.val[1].i64[0] = ((_BYTE)a2 + 10) & 0xF;
  v66.val[1].i64[1] = ((_BYTE)a2 + 9) & 0xF;
  v66.val[2].i64[0] = ((_BYTE)a2 + 8) & 0xF;
  v66.val[2].i64[1] = ((_BYTE)a2 + 7) & 0xF;
  v66.val[3].i64[0] = ((_BYTE)a2 + 6) & 0xF;
  v66.val[3].i64[1] = (((-63 * ((a3 - 26) ^ 0x8E)) ^ 7) + (_BYTE)a2) & 0xF;
  unsigned int v61 = a4 + v59 + a1;
  v62.i64[0] = 0x3333333333333333;
  v62.i64[1] = 0x3333333333333333;
  v66.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v59 + (_BYTE)a1) & 0xF;
  v66.val[0].i64[1] = ((_BYTE)a2 + 11) & 0xF;
  v63.i64[0] = vqtbl4q_s8(v66, (int8x16_t)xmmword_1B04C9C20).u64[0];
  v67.val[0].i64[1] = ((_BYTE)a2 + 3) & 0xF;
  v67.val[1].i64[1] = ((_BYTE)a2 + 1) & 0xF;
  v67.val[2].i64[1] = ((_BYTE)a2 - 1) & 0xF;
  v67.val[3].i64[1] = *(_DWORD *)(v60 - 120) & 0xF;
  v67.val[0].i64[0] = ((_BYTE)a2 + 4) & 0xF;
  v67.val[1].i64[0] = ((_BYTE)a2 + 2) & 0xF;
  v67.val[2].i64[0] = a2 & 0xF;
  v67.val[3].i64[0] = *(_DWORD *)(v60 - 116) & 0xF;
  v63.i64[1] = vqtbl4q_s8(v67, (int8x16_t)xmmword_1B04C9C20).u64[0];
  int8x16_t v64 = vrev64q_s8(vmulq_s8(v63, v62));
  *(int8x16_t *)(a52 - 15 + v61) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v57 + (v61 & 0xF) - 15), *(int8x16_t *)(v54 - 15 + v61)), veorq_s8(*(int8x16_t *)((v61 & 0xF) + v56 - 13), *(int8x16_t *)((v61 & 0xF) + v55 - 14))), vextq_s8(v64, v64, 8uLL));
  return (*(uint64_t (**)(void))(a54
                              + 8
                              * ((14 * (449 * ((a3 + 486) ^ 0x38E) - (v58 & 0xFFFFFFF0) != 882)) ^ (449
                                                                                                  * ((a3 + 486) ^ 0x38E)))))();
}

uint64_t sub_1B025A684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  unint64_t v12 = ((unint64_t)&a9 ^ 0x7FDEF1FF7CEDEACALL)
      - 0x9091720841A7CALL
      + ((2 * (void)&a9) & 0xFFBDE3FEF9DBD590);
  a9 = v10 - 1;
  *(unsigned char *)(a2 + a9) = (v12 ^ 0xBA) * (v12 + 17);
  uint64_t v13 = *(uint64_t (**)(void))(v11 + 8 * (v9 | (16 * (a9 == (v9 + 1454) - 2031))));
  return v13(v13);
}

void sub_1B025A708()
{
  _DWORD *v1 = v0;
}

uint64_t sub_1B025A72C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  return (*(uint64_t (**)(void))(v17
                              + 8 * ((42 * (a15 != (((v15 - 593) | 0x251) ^ (v16 + v15 - 248 - 1044)))) ^ (v15 - 575))))();
}

uint64_t sub_1B025A770(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a6 + v6 - 514 + ((v6 + 1375996359) | 0x8C29A1E3) + 566) * (v7 == v8)) ^ v6)))();
}

uint64_t sub_1B025A7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18, unint64_t *a19, unint64_t *a20,unint64_t *a21,unsigned int a22)
{
  int v25 = v24 - 549;
  a22 = (v24 + 55) ^ (1225351577 * (&a17 ^ 0x239AD816));
  a20 = &STACK[0xC9996988DE51CE];
  a21 = &STACK[0x6A4735A87A264415];
  a19 = a13;
  (*(void (**)(unsigned int *))(v23 + 8 * (v24 + 1490)))(&a17);
  int v26 = v24 + 745;
  a19 = &STACK[0x18D17CD12703C5FB];
  a20 = a13;
  a17 = v26 ^ (1374699841 * (((&a17 | 0xF86CA62A) - (&a17 & 0xF86CA62A)) ^ 0x9598BE23));
  (*(void (**)(unsigned int *))(v23 + 8 * (v25 + 1987)))(&a17);
  a19 = &STACK[0x18D17CD12703C5FF];
  a20 = a13;
  a17 = v26 ^ (1374699841 * ((((2 * &a17) | 0xEC1A9DD8) - &a17 + 166899988) ^ 0x9BF956E5));
  (*(void (**)(unsigned int *))(v23 + 8 * (v25 + 1987)))(&a17);
  a17 = v25 + 1225351577 * (((&a17 | 0x37C6CE8F) - (&a17 & 0x37C6CE8F)) ^ 0x145C1699) + 1924;
  a19 = a13;
  uint64_t v27 = (*(uint64_t (**)(unsigned int *))(v23 + 8 * (v25 + 1998)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a18 == v22) * ((v25 ^ 0x265) + 974)) ^ v25)))(v27);
}

uint64_t sub_1B025A990()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((37 * ((((((v1 - 634744504) & 0x25D569FF) + 679) ^ ((v1 - 606) | 0x45)) & v0) == 0)) ^ v1)))();
}

uint64_t sub_1B025A9E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W4>, int a5@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * ((1668 * (a5 + (v5 ^ (a3 + 1283) ^ 0xD4AC58B5) < 0x38)) ^ (a4 + v5 + 654))))(a1, a2, -3381051899);
}

uint64_t sub_1B025AA3C()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D03) - 1775046531;
  unsigned int v4 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D07) + 1438211590;
  BOOL v5 = v4 < 0xA6C1FAF0;
  BOOL v6 = v3 < v4;
  if (v3 < 0xA6C1FAF0 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * ((v2 + 984) ^ 0x818)) ^ v2)))();
}

uint64_t sub_1B025AAD0@<X0>(char a1@<W2>, int a2@<W8>)
{
  uint64_t v9 = v2 - 1;
  *(unsigned char *)(v6 + v9) = ((v3 + a1 + v4 + 11) ^ v5) * (v3 + a1 + v4 + 28);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v9 == 0) * v7) ^ a2)))();
}

uint64_t sub_1B025AAE0@<X0>(int a1@<W6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(void))(v16 + 8 * ((211 * (a16 == (((a2 ^ 0x2C6) + a1) ^ (a2 - 769)))) ^ a2)))();
}

uint64_t sub_1B025AB20()
{
  STACK[0x5A8] = STACK[0x3D8];
  return (*(uint64_t (**)(void))(v1 + 8 * ((55 * (STACK[0x590] != 0)) ^ (v0 + 1041))))();
}

uint64_t sub_1B025AB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, int a11, int a12, uint64_t a13, uint64_t a14)
{
  int v17 = 1224239923 * ((1269078856 - ((v16 - 128) | 0x4BA49B48) + ((v16 - 128) | 0xB45B64B7)) ^ 0x46E89960);
  *(_DWORD *)(v16 - 112) = (((a12 << ((v15 + 70) ^ 0xF3)) & 0x7EFBBD80)
                          + ((a12 << ((v15 - 12) ^ 0xA6)) ^ 0x3F7DDEDF)
                          - 557842637) ^ v17;
  *(_DWORD *)(v16 - 128) = v15 - v17 + 608;
  *(void *)(v16 - 120) = a14;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1729)))(v16 - 128);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8 * ((1810 * ((*a10 - 1372200253) < 0x7FFFFFFF)) ^ v15)))(v18);
}

uint64_t sub_1B025AC34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,int *a28,void *a29,int *a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  int v46 = (v44 - 1174668986) | 0x6C9;
  if (v41 >= v42) {
    int v47 = *a28 + 1;
  }
  else {
    int v47 = v45;
  }
  *a28 = v47;
  int v48 = (((v40 >> 11) ^ 0xAE0C3) + 1460018998 - ((2 * ((v40 >> 11) ^ 0xAE0C3)) & 0xC3E6C)) ^ v40;
  unsigned int v49 = (((v46 - 1658040393) & (v48 << 7) ^ v48) << 15) & 0xEFC60000 ^ (v46 - 1658040393) & (v48 << 7) ^ v48;
  uint64_t v50 = &a40 + a25 + ((v46 + 8370995) & 0xFF803F37) - 904238007;
  unsigned int v51 = 2111498075 * ((v50 ^ *(_DWORD *)(*a29 + (*a30 & 0xFFFFFFFF9387F0E4))) & 0x7FFFFFFF);
  unint64_t v52 = 2111498075 * (v51 ^ HIWORD(v51));
  char v53 = *((unsigned char *)*(&off_1F08CDB40 + (v46 ^ 0x694)) + (v52 >> 24)) ^ v49 ^ 0xBB ^ (v49 >> 18) ^ 0xBB ^ *((unsigned char *)*(&off_1F08CDB40 + (v46 ^ 0x64B)) + (v52 >> 24)) ^ *((unsigned char *)*(&off_1F08CDB40 + v46 - 1584) + (v52 >> 24)) ^ v52 ^ (-71 * BYTE3(v52));
  *uint64_t v50 = v53;
  return (*(uint64_t (**)(void))(v43 + 8 * ((392 * (a25 - (v53 != 0) == 904237698)) ^ v46)))();
}

void sub_1B025AC40()
{
}

uint64_t sub_1B025AD08(int a1)
{
  BOOL v5 = *(_DWORD *)(v4 + 48 * (a1 + v2 + ((v1 - 456474799) & 0x1B354676 ^ 0x5D3) - 945) + 36) == v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * ((v5 ^ (((v1 + 81) & 0x76) - 1)) & 1)) & 0xEF | (16 * ((v5 ^ (((v1 - 456474799) & 0x1B354676) - 1)) & 1))) ^ (v1 - 456474799) & 0x1B354676u)))();
}

void sub_1B025AD78(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(void *)(v18 - 120) = a17;
  *(void *)(v18 - 112) = a17;
  *(_DWORD *)(v18 - 104) = (a1 + 1336) ^ (((((2 * (v18 - 144)) | 0xBDB19FDC) - (v18 - 144) + 556216338) ^ 0x6DA57FBA)
                                        * v17);
  *(void *)(v18 - 144) = a14;
  *(void *)(v18 - 136) = a6;
  *(void *)(v18 - 128) = a15;
  JUMPOUT(0x1B0256374);
}

void sub_1B025ADE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v27 - 144) = v24;
  *(void *)(v27 - 136) = a20;
  *(void *)(v27 - 128) = v26;
  *(void *)(v27 - 120) = a24;
  *(_DWORD *)(v27 - 104) = (v25 + 1336) ^ (1759421093 * ((v27 - 144) ^ 0xB37DB054));
  *(void *)(v27 - 112) = a24;
  JUMPOUT(0x1B0259EE8);
}

uint64_t sub_1B025AE28@<X0>(uint64_t a1@<X8>)
{
  uint64_t v8 = (v3 - v1);
  long long v9 = *(_OWORD *)(a1 + v8 - 15);
  long long v10 = *(_OWORD *)(a1 + v8 - 31);
  uint64_t v11 = v6 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((v5 + 670) | v2) ^ 0x570) + v1 == 320) * v4) ^ v5)))();
}

uint64_t sub_1B025AE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * ((1420 * (v22 + a22 - *(_DWORD *)(a2 + 4) + 1058512890 == (v23 ^ 0x2C6) - 2026074099)) ^ v23)))();
}

uint64_t sub_1B025AEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int32x4_t a33,int32x4_t a34,int32x4_t a35,int32x4_t a36)
{
  int v44 = (const char *)(v43 - 220);
  v45.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v45.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  __n128 v46 = (__n128)vdupq_n_s32(0x2E215E87u);
  __n128 v47 = (__n128)vdupq_n_s32(0xAE215E86);
  a25 = v42 - 16;
  v48.n128_u64[0] = 0xCACACACACACACACALL;
  v48.n128_u64[1] = 0xCACACACACACACACALL;
  uint64_t v49 = (a7 - 1418661384) & 0x766163EE;
  __n128 v50 = (__n128)vdupq_n_s32(0x2E215E97u);
  HIDWORD(v104) = v49 ^ 0x3DD;
  unsigned int v51 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v37 + 8 * v36);
  unsigned int v52 = *(_DWORD *)(v43 - 144);
  HIDWORD(a23) = *(_DWORD *)(v43 - 148);
  unsigned int v53 = *(_DWORD *)(v43 - 140);
  unsigned int v54 = *(_DWORD *)(v43 - 136);
  int v55 = *(unsigned char *)(v43 - 124) ^ 0xCE;
  LODWORD(v101) = *(unsigned __int8 *)(v43 - 124) ^ 0xFFFFFFCE;
  if (v55 == 2)
  {
    int8x16x4_t v106 = vld4q_s8(v44);
    uint8x16_t v81 = (uint8x16_t)veorq_s8(v106.val[0], (int8x16_t)v45);
    uint16x8_t v82 = vmovl_u8(*(uint8x8_t *)v81.i8);
    uint16x8_t v83 = vmovl_high_u8(v81);
    uint8x16_t v84 = (uint8x16_t)veorq_s8(v106.val[1], (int8x16_t)v45);
    _Q22 = vmovl_u8(*(uint8x8_t *)v84.i8);
    _Q21 = vmovl_high_u8(v84);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v89 = (uint8x16_t)veorq_s8(v106.val[2], (int8x16_t)v45);
    uint16x8_t v90 = vmovl_high_u8(v89);
    uint16x8_t v91 = vmovl_u8(*(uint8x8_t *)v89.i8);
    v106.val[0] = veorq_s8(v106.val[3], (int8x16_t)v45);
    v106.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v106.val[0]);
    v106.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[1]);
    v106.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[1].i8);
    v106.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v106.val[0].i8);
    v106.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v106.val[0]);
    v106.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v106.val[0].i8);
    int32x4_t v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v91.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v106.val[0]);
    int32x4_t v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v91, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v106.val[3]);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v83.i8), 0x18uLL)), v106.val[1]);
    int32x4_t v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v83), 0x18uLL)), v106.val[2]);
    v106.val[0] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)v106.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[3] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[1] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v106.val[2] = veorq_s8(vandq_s8((int8x16_t)v95, (int8x16_t)v46), (int8x16_t)(*(_OWORD *)&v106.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    a35 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v106.val[1], (int32x4_t)v106.val[1])), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v106.val[2], (int32x4_t)v106.val[2])), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v106.val[0], (int32x4_t)v106.val[0])), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v106.val[3], (int32x4_t)v106.val[3])), (int32x4_t)v47);
    v96 = (_DWORD *)&a33 + v41 + 36307424;
    int v97 = *((_DWORD *)&a33 + v41 + 36307416) ^ *(v96 - 3);
    int v98 = v97 + v40 - ((2 * v97) & 0x5C42BD0C);
    int v99 = *(v96 - 16) ^ *(v96 - 14);
    HIDWORD(v100) = v99 ^ 0x2E215E86 ^ v98;
    LODWORD(v100) = v99 ^ ~v98;
    _DWORD *v96 = (v100 >> 31) + v40 - ((2 * (v100 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(uint64_t))(v37 + 8 * ((744 * (v42 == 36307361)) ^ 0x56Fu)))(a25);
  }
  else if (v55 == 1)
  {
    HIDWORD(v103) = *(_DWORD *)(v43 - 144);
    int8x16x4_t v105 = vld4q_s8(v44);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v105.val[0], (int8x16_t)v45);
    uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
    int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
    int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
    uint16x8_t v60 = vmovl_high_u8(v56);
    int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v105.val[1], (int8x16_t)v45);
    uint16x8_t v64 = vmovl_high_u8(v63);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v105.val[2], (int8x16_t)v45);
    _Q26 = (int8x16_t)vmovl_high_u8(v66);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v105.val[0] = veorq_s8(v105.val[3], (int8x16_t)v45);
    v105.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v105.val[0]);
    v105.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[1]);
    v105.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v105.val[0].i8);
    v105.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v105.val[0]);
    v105.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[0].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
    v105.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
    v105.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v105.val[1].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
    v105.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v105.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
    int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v105.val[0], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v105.val[3], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v105.val[1], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v105.val[2], (int8x16_t)v50), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a35 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[1], vaddq_s32(v77, v77)), (int32x4_t)v47);
    a36 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[2], vaddq_s32(v78, v78)), (int32x4_t)v47);
    a33 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[0], vaddq_s32(v75, v75)), (int32x4_t)v47);
    a34 = vaddq_s32(vsubq_s32((int32x4_t)v105.val[3], vaddq_s32(v76, v76)), (int32x4_t)v47);
    unint64_t v79 = (char *)*(&off_1F08CDB40 + HIDWORD(v104)) - 8;
    HIDWORD(v101) = (a7 - 846348848) ^ 0xABBB6849;
    LODWORD(v102) = (a7 - 846348848) & 0x544495FB;
    HIDWORD(v102) = a7 - 846348848;
    LODWORD(v103) = HIDWORD(a13) + 2026403945;
    LODWORD(v104) = (a7 - 1418661384) & 0x221406C;
    return (*(uint64_t (**)(void, uint64_t, void, void, uint64_t, void, void, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t (*)(__n128, __n128, __n128, __n128, __n128), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((1991 * (a25 + 1 != v42)) ^ v49)))(*(&off_1F08CDB40 + v104), a25 + 1, v52, (v39 - 2), v49, -(*((unsigned char *)*(&off_1F08CDB40 + v104) + a25 + v41) - 26), *(unsigned int *)&v79[4 * a25 + 4 * v41], v79, a9, a10, a11, a12, a13, a14, a15, a16, a17, v101, v102,
             v103,
             __PAIR64__(v54, v53),
             v51,
             a23,
             v104,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32);
  }
  else
  {
    *(_DWORD *)(v43 - 148) = 2 * (*(_DWORD *)(v43 - 148) ^ v39) + v39 - (v38 & (4 * (*(_DWORD *)(v43 - 148) ^ v39)));
    *(_DWORD *)(v43 - 144) = 2 * (v52 ^ v39) + v39 - (v38 & (4 * (v52 ^ v39)));
    *(_DWORD *)(v43 - 140) = 2 * (v53 ^ v39) + v39 - (v38 & (4 * (v53 ^ v39)));
    *(_DWORD *)(v43 - 136) = 2 * (v54 ^ v39) + v39 - (v38 & (4 * (v54 ^ v39)));
    return v51(v45, v46, v47, v48, v50);
  }
}

uint64_t sub_1B025AFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v73 = 235795823 * ((((v72 - 192) | 0x7D9F5389) - (v72 - 192) + ((v72 - 192) & 0x8260AC70)) ^ 0xE9321AD0);
  *(_DWORD *)(v72 - 168) = v73 + v69 + 492;
  *(_DWORD *)(v72 - 184) = -1886077896 - v73;
  *(void *)(v72 - 176) = a68;
  *(void *)(v72 - 192) = 0x6C39C41327E11828;
  *(void *)(v72 - 160) = a69;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v69 + 1965)))(v72 - 192);
  int32x4_t v75 = *(uint64_t (**)(uint64_t))(v71
                                          + 8
                                          * (((((v69 - 52) ^ (*(_DWORD *)(v72 - 152) == -1373544826)) & 1)
                                            * (((v69 - 169) | 0x44) + 37)) ^ v69));
  STACK[0x3D8] = *(void *)(v70 + 8 * (v69 - 25)) - 12;
  return v75(v74);
}

uint64_t sub_1B025B0BC@<X0>(int a1@<W1>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,uint64_t a45)
{
  int v49 = a1 ^ 0x5F666309;
  int v50 = v45 ^ 0x3F2A0CE1;
  *(_DWORD *)(v48 - 252) = v47;
  uint64_t v51 = v47 & 0xFFFFFFF8 ^ ((HIDWORD(a13) & 0xC2638FBE) - 2120041885);
  *(void *)(v48 - 200) = v51;
  uint64_t v52 = *(unsigned __int8 *)(a3 + v51);
  uint64_t v53 = v47 & 0xFFFFFFF3 ^ 0x81A2BFED;
  *(void *)(v48 - 168) = v53;
  LODWORD(v52) = *(unsigned __int8 *)(a17 + (v52 ^ 0x41));
  uint64_t v54 = *(unsigned __int8 *)(a3 + v53) ^ 0x60;
  uint64_t v55 = v47 & 0xFFFFFFF7 ^ 0x81A2BFED;
  *(void *)(v48 - 152) = v55;
  uint64_t v56 = v47 & 0xFFFFFFFE ^ 0x81A2BFED;
  *(void *)(v48 - 128) = v56;
  LODWORD(v54) = *(unsigned __int8 *)(a15 + v54) ^ 0x29;
  LODWORD(v55) = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a3 + v55) ^ 0xC1)) ^ 0x9D;
  LODWORD(v56) = *(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a3 + v56) ^ 0x66)) ^ 0x6C;
  uint64_t v57 = v47 & 0xFFFFFFF0 ^ 0x81A2BFEF;
  *(void *)(v48 - 136) = v57;
  uint64_t v58 = *(unsigned __int8 *)(a3 + v57) ^ 0xE9;
  uint64_t v59 = v47 & 0xFFFFFFF4 ^ 0x81A2BFEF;
  *(void *)(v48 - 160) = v59;
  uint64_t v60 = *(unsigned __int8 *)(a3 + v59);
  LODWORD(v59) = *(unsigned __int8 *)(a17 + v58) ^ 0xE7;
  LODWORD(v60) = *(unsigned __int8 *)(a17 + (v60 ^ 0xC3));
  uint64_t v61 = v47 ^ 0x81A2BFED;
  *(void *)(v48 - 176) = v61;
  int v62 = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a3 + v61) ^ 0x30));
  LODWORD(v61) = v59 | (v54 << 24);
  int v63 = (v56 << 16) | ((v62 ^ 0x19) << 24);
  LOBYTE(v56) = v60 ^ 0x2D;
  LODWORD(v60) = v60 ^ 0x2D | (v55 << 24);
  uint64_t v64 = v47 & 0xFFFFFFFD ^ 0x81A2BFEF;
  *(void *)(v48 - 144) = v64;
  unsigned int v65 = v63 & 0xFFFF00FF | (((*(unsigned char *)(a18 + (*(unsigned __int8 *)(a3 + v64) ^ 0xC0))
                                             + (*(unsigned char *)(a3 + v64) ^ 0xCF)
                                             + 78) ^ 0xF9) << 8);
  uint64_t v66 = v47 & 0xFFFFFFFB ^ 0x81A2BFED;
  *(void *)(v48 - 208) = v66;
  LODWORD(v55) = *(unsigned __int8 *)(a15 + (*(unsigned __int8 *)(a3 + v66) ^ 0xFCLL)) ^ 0xA7;
  LODWORD(v66) = v52 ^ 0x37;
  uint64_t v67 = v47 & 0xFFFFFFF6 ^ 0x81A2BFED;
  *(void *)(v48 - 216) = v67;
  LODWORD(v67) = (*(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a3 + v67) ^ 0x5DLL)) ^ 0xBF) << 16;
  uint64_t v68 = v47 & 0xFFFFFFF5 ^ 0x81A2BFEF;
  *(void *)(v48 - 192) = v68;
  LODWORD(v67) = v67 & 0xFFFF00FF | (((*(unsigned char *)(a18 + (*(unsigned __int8 *)(a3 + v68) ^ 0xD5))
                                                      + (*(unsigned char *)(a3 + v68) ^ 0xDA)
                                                      + 78) ^ 0xCF) << 8) | v60;
  uint64_t v69 = v47 & 0xFFFFFFF1 ^ 0x81A2BFEF;
  *(void *)(v48 - 184) = v69;
  LODWORD(v60) = (*(unsigned char *)(a18 + (*(unsigned __int8 *)(a3 + v69) ^ 0xE4))
                                 + (*(unsigned char *)(a3 + v69) ^ 0xEB)
                                 - 50) << 8;
  uint64_t v70 = v47 & 0xFFFFFFF2 ^ 0x81A2BFED;
  *(void *)(v48 - 240) = v70;
  uint64_t v71 = *(unsigned __int8 *)(a3 + v70);
  uint64_t v72 = v47 & 0xFFFFFFFC ^ 0x81A2BFEF;
  *(void *)(v48 - 224) = v72;
  int v73 = *(unsigned __int8 *)(a17 + (*(unsigned __int8 *)(a3 + v72) ^ 0xDCLL)) ^ 0xF3;
  LODWORD(v60) = v60 | ((*(unsigned __int8 *)(a16 + (v71 ^ 0x92)) ^ 0x82) << 16) | v61;
  uint64_t v74 = v47 & 0xFFFFFFF9 ^ 0x81A2BFEF;
  *(void *)(v48 - 248) = v74;
  LOBYTE(v53) = *(unsigned char *)(a18 + (*(unsigned __int8 *)(a3 + v74) ^ 0x4FLL)) + (*(unsigned char *)(a3 + v74) ^ 0x40);
  uint64_t v75 = v47 & 0xFFFFFFFA ^ 0x81A2BFED;
  *(void *)(v48 - 232) = v75;
  LODWORD(v53) = ((*(unsigned __int8 *)(a16 + (*(unsigned __int8 *)(a3 + v75) ^ 0xA9)) ^ 0x51) << 16) | (((v53 + 78) ^ 0xB7) << 8) | v66 | (v55 << 24);
  LODWORD(v74) = v49 ^ a43 ^ ((v73 | v65) - 2 * ((v73 | v65) & 0x4FF8F914 ^ v73 & 0x14) - 805766912);
  LODWORD(v66) = a2 ^ 0x727A1DC4 ^ a44 ^ (v53 + 2095248718 - 2 * (v53 & 0x7CE2F55E ^ v66 & 0x10));
  LODWORD(v59) = v50 ^ a40 ^ (v60 - 2 * (v60 & 0x6366929F ^ v59 & 2) - 479817059);
  unsigned int v76 = v46 ^ 0xD21F71C ^ a39 ^ (v67 - 2 * (v67 & 0x7CD37FD ^ v56 & 0x10) - 2016593939);
  int32x4_t v77 = (char *)*(&off_1F08CDB40 + *(_DWORD *)(v48 - 120) - 1911) - 8;
  uint64_t v78 = (uint64_t)*(&off_1F08CDB40 + *(_DWORD *)(v48 - 120) - 1828);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v76) ^ 0x3F));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = (v79 >> 1) ^ *(_DWORD *)&v77[4 * (BYTE2(v59) ^ 0x34)] ^ ((BYTE2(v59) ^ 0x68)
                                                                        + 62854711
                                                                        - ((2 * (WORD1(v59) ^ 0xB768)) & 0x6E));
  unint64_t v80 = (char *)*(&off_1F08CDB40 + *(_DWORD *)(v48 - 120) - 1845) - 8;
  LODWORD(v56) = *(_DWORD *)&v80[4 * (v76 ^ 0xC6)] ^ ((BYTE2(v74) ^ 0xD5)
                                                                     + 62854711
                                                                     - 2 * ((BYTE2(v74) ^ 0xD5) & 0x3F ^ WORD1(v74) & 8)) ^ ((v76 ^ 0xAB) - 570297388 - ((2 * (v76 ^ 0xAB) + 361726) & 0x402AA)) ^ *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0x89)];
  LODWORD(v60) = *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 0x8C)] ^ *(_DWORD *)&v80[4 * (v59 ^ 0xB6)] ^ ((v59 ^ 0xDB) - 570297387 + ((2 * (v59 ^ 0xDB) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ ((BYTE2(v66) ^ 0xD0) + 62854711 - ((2 * (WORD1(v66) ^ 0xC8D0)) & 0x6E));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0xC8));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v53) = ((BYTE2(v76) ^ 0xAD) + 62854711 - ((2 * (HIWORD(v76) ^ 0x3FAD)) & 0x6E)) ^ *(_DWORD *)&v80[4 * (v74 ^ 0x1C)] ^ ((v74 ^ 0x71) - 570297387 + ((2 * (v74 ^ 0x71) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v77[4 * (BYTE2(v76) ^ 0xF1)] ^ (v79 >> 1);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0x6C));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v55) = v79 >> 1;
  int v81 = v53 - 509880201 - ((2 * v53) & 0xC337B0EE);
  LODWORD(v71) = (v66 ^ 0x10)
               - 570297387
               + ((2 * (v66 ^ 0x10) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v59) ^ 0xB7));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  uint16x8_t v82 = (char *)*(&off_1F08CDB40 + (int)a13) - 8;
  LODWORD(v67) = *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0xDE)] ^ a36 ^ *(_DWORD *)&v80[4 * (v66 ^ 0x7D)] ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE));
  LODWORD(v66) = (v56 - 509880201 - ((2 * v56) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x2F)] ^ (v79 >> 1);
  LODWORD(v53) = v66 - ((2 * v66) & 0x59DA0252);
  LODWORD(v66) = *(_DWORD *)&v82[4 * (BYTE1(v76) ^ 0x29)] ^ a38 ^ v55;
  int v83 = *(_DWORD *)&v82[4 * (BYTE1(v59) ^ 0x66)];
  LODWORD(v66) = v66 ^ (v60 - 509880201 - ((2 * v60) & 0xC337B0EE));
  LODWORD(v59) = v67 ^ v71;
  LODWORD(v74) = v83 ^ a37 ^ v81;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * ((v67 ^ ~v71) >> 24));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v84 = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0x91));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v60) = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0xA3));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v85 = v60 ^ *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0xF0)] ^ ((BYTE2(v74) ^ 0xAC)
                                                        + 62854711
                                                        - ((2 * (WORD1(v74) ^ 0xA3AC)) & 0x6E));
  LODWORD(v56) = (v79 >> 1) ^ *(_DWORD *)&v77[4 * (BYTE2(v59) ^ 0x15)] ^ *(_DWORD *)&v80[4
                                                                                       * (v66 ^ 0x7B)] ^ ((BYTE2(v59) ^ 0x49) + 62854711 - ((2 * (WORD1(v59) ^ 0xFF49)) & 0x6E)) ^ ((v66 ^ 0x16) - 570297387 + ((2 * (v66 ^ 0x16) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v55) = v56 - 509880201 - ((2 * v56) & 0xC337B0EE);
  LODWORD(v53) = (v53 + 753729833) ^ a35;
  unsigned int v86 = (v85 - 509880201 - ((2 * v85) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4
                                                                     * (((unsigned __int16)(v67 ^ v71) >> 8) ^ 0x2C)];
  LODWORD(v67) = v84 ^ *(_DWORD *)&v80[4 * (v74 ^ 3)] ^ ((v74 ^ 0x6E)
                                                                        - 570297387
                                                                        + ((2 * (v74 ^ 0x6E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v77[4 * (BYTE2(v53) ^ 0x88)] ^ ((BYTE2(v53) ^ 0xD4) + 62854711 - 2 * ((BYTE2(v53) ^ 0xD4) & 0x3F ^ WORD1(v53) & 8));
  *(_DWORD *)(v48 - 256) = 62854712;
  LODWORD(v56) = *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 0x2E)] ^ ((BYTE2(v66) ^ 0x72)
                                                           + 62854712
                                                           + ~(2 * ((BYTE2(v66) ^ 0x72) & 0x3F ^ WORD1(v66) & 8)));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v53) ^ 0x42));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v56) = ((v59 ^ 0xFC)
                - 570297387
                + ((2 * (v59 ^ 0xFC) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0xBD)] ^ *(_DWORD *)&v80[4 * (v59 ^ 0x91)] ^ (v56 - 509880201 - ((2 * v56) & 0xC337B0EE)) ^ (v79 >> 1);
  LODWORD(v60) = *(_DWORD *)&v82[4 * (BYTE1(v53) ^ 0x9A)];
  LODWORD(v53) = ((v53 ^ 0x64) - 1726037377) ^ a34 ^ *(_DWORD *)&v80[4 * (v53 ^ 9)] ^ (v86 + 1155739989 - ((2 * v86) & 0x89C662AA));
  LODWORD(v59) = *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x57)] ^ HIDWORD(a31) ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE));
  LODWORD(v66) = (v56 - ((2 * v56) & 0xFD08E87A) + 2122609725) ^ a33;
  unsigned int v87 = v60 ^ HIDWORD(a33) ^ v55;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0x93));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v56) = (((v60 ^ BYTE4(a33) ^ v55) ^ 0xA1)
                - 570297387
                + ((2 * ((v60 ^ BYTE4(a33) ^ v55) ^ 0xA1) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * ((v60 ^ BYTE4(a33) ^ v55) ^ 0xCC)];
  LODWORD(v67) = *(_DWORD *)&v77[4 * (BYTE2(v53) ^ 0xDB)] ^ ((BYTE2(v53) ^ 0x87)
                                                           + 62854711
                                                           - 2 * ((BYTE2(v53) ^ 0x87) & 0x3F ^ WORD1(v53) & 8)) ^ (v79 >> 1);
  LODWORD(v56) = (v56 - 509880201 - ((2 * v56) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v53) ^ 0xDE)];
  LODWORD(v55) = ((v53 ^ 0x9E)
                - 570297387
                + ((2 * (v53 ^ 0x9E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v53 ^ 0xF3)];
  LODWORD(v71) = v56 + 62854711 - ((2 * v56) & 0x77E2C6E);
  LODWORD(v67) = (v67 - 509880201 - ((2 * v67) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v87) ^ 0x57)];
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v59) ^ 0x37));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v56) = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v53) ^ 0x3A));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v60) = ((v59 ^ 0x740CBC3A) >> 16);
  int v88 = v60 + 62854711 - (((v59 ^ 0x740CBC3A) >> 15) & 0x6E);
  LODWORD(v53) = *(_DWORD *)&v82[4 * ((unsigned __int16)(v59 ^ 0xBC3A) >> 8)] ^ BYTE2(v87) ^ *(_DWORD *)&v77[4 * (BYTE2(v87) ^ 0xF6)] ^ (v79 >> 1);
  LODWORD(v74) = ((v66 ^ 0x2D) - 1726037377) ^ HIDWORD(a32) ^ *(_DWORD *)&v80[4
                                                                                             * (v66 ^ 0x40)] ^ ((v53 ^ 0xE224CEEA) + 1155739989 + ((2 * ((v53 ^ 0xE224CEEA) & 0x44E3315D ^ v53 & 8)) ^ 0xFFFFFFEF) + 1);
  LODWORD(v59) = ((v59 ^ 0x3A) - 1726037377) ^ HIDWORD(a30) ^ *(_DWORD *)&v80[4
                                                                                             * (v59 ^ 0x57)] ^ (v67 + 1155739989 - ((2 * v67) & 0x89C662AA));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v87) ^ 0x7C));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v56) = *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 2)] ^ a31 ^ BYTE2(v66) ^ v56 ^ v71;
  unsigned int v89 = *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x94)] ^ a32 ^ v88 ^ *(_DWORD *)&v77[4 * (v60 ^ 0x5C)] ^ (v79 >> 1) ^ (v55 - 509880201 - ((2 * v55) & 0xC337B0EE));
  LODWORD(v67) = ((v56 ^ 0x9D)
                - 570297387
                + ((2 * (v56 ^ 0x9D) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v56 ^ 0xF0)];
  LODWORD(v71) = v67 - 509880201 - ((2 * v67) & 0xC337B0EE);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0x5B));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = (v79 >> 1) ^ *(_DWORD *)&v80[4 * (v59 ^ 0x1F)] ^ ((v59 ^ 0x72)
                                                                                  - 570297387
                                                                                  + ((2 * (v59 ^ 0x72)
                                                                                    + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v59) ^ 0x28));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v53) = v79 >> 1;
  LODWORD(v55) = v67 - 509880201 - ((2 * v67) & 0xC337B0EE);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v56) ^ 0xB9));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v89) ^ 0xB4));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = v67 ^ *(_DWORD *)&v80[4 * (v89 ^ 0x8B)] ^ ((v89 ^ 0xE6)
                                                                           - 570297387
                                                                           + ((2 * (v89 ^ 0xE6) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  int v90 = BYTE2(v74) ^ 0x95;
  unsigned int v91 = v90 + 62854711 - 2 * ((BYTE2(v74) ^ 0x95) & 0x3F ^ WORD1(v74) & 8);
  int v92 = v74;
  unsigned int v93 = (v74 ^ 0xF4)
      - 570297387
      + ((2 * (v74 ^ 0xF4) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  LODWORD(v74) = ((BYTE2(v59) ^ 0x14) + 62854711 - ((2 * (WORD1(v59) ^ 0x2814)) & 0x6E)) ^ a29 ^ *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0x1F)] ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE)) ^ *(_DWORD *)&v77[4 * (BYTE2(v59) ^ 0x48)];
  LODWORD(v66) = *(_DWORD *)&v82[4 * ((unsigned __int16)(v56 ^ 0xA59D) >> 8)] ^ a30 ^ ((BYTE2(v89) ^ 0x59) + 62854711 - ((2 * (HIWORD(v89) ^ 0xB459)) & 0x6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v89) ^ 5)] ^ v55;
  LODWORD(v59) = (((v56 ^ 0xFA64A59D) >> 16)
                + 62854711
                - (((v56 ^ 0xFA64A59D) >> 15) & 0x6E)) ^ HIDWORD(a29) ^ ((v79 >> 1)
                                                                                     - 509880201
                                                                                     - ((2 * (v79 >> 1)) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v59) ^ 0x12)] ^ *(_DWORD *)&v80[4 * (v92 ^ 0x99)] ^ *(_DWORD *)&v77[4 * (((v56 ^ 0xFA64A59D) >> 16) ^ 0x5C)] ^ v93;
  unsigned int v94 = *(_DWORD *)&v82[4 * (BYTE1(v89) ^ 0x34)] ^ HIDWORD(a28) ^ *(_DWORD *)&v77[4 * (v90 ^ 0x5C)] ^ v53 ^ v71 ^ v91;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v94) ^ 0xEB));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v55) = (v79 >> 1) - 509880201 - ((2 * (v79 >> 1)) & 0xC337B0EE);
  LODWORD(v67) = ((BYTE2(v59) ^ 0x81) + 62854711 - 2 * ((BYTE2(v59) ^ 0x81) & 0x3F ^ WORD1(v59) & 8)) ^ *(_DWORD *)&v77[4 * (BYTE2(v59) ^ 0xDD)];
  unsigned int v95 = ((v59 ^ 0x51)
       - 570297387
       + ((2 * (v59 ^ 0x51) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4
                                                                                                * (v59 ^ 0x3C)];
  unsigned int v96 = *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0xDB)] ^ ((BYTE2(v74) ^ 0x87)
                                                  + 62854711
                                                  - 2 * ((BYTE2(v74) ^ 0x87) & 0x3F ^ WORD1(v74) & 8));
  int v97 = *(_DWORD *)&v77[4 * (((v94 ^ 0xA87CE98B) >> 16) ^ 0x5C)] ^ ((v94 ^ 0xA87CE98B) >> 16) ^ (v95 + 62854711 - ((2 * v95) & 0x77E2C6E));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v59) ^ 0x14));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v98 = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0x9A));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = *(_DWORD *)&v80[4 * (v94 ^ 0xE6)] ^ *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0xDE)] ^ ((v94 ^ 0x8B) - 570297387 + ((2 * (v94 ^ 0x8B) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE)) ^ (v79 >> 1);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0x77));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v59) = *(_DWORD *)&v82[4 * (BYTE1(v59) ^ 0x34)] ^ a27 ^ ((BYTE2(v66) ^ 0xE9)
                                                                 + 62854711
                                                                 - ((2 * (WORD1(v66) ^ 0x9AE9)) & 0x6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 0xB5)] ^ v55 ^ ((v74 ^ 0x9E) - 570297387 + ((2 * (v74 ^ 0x9E) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v74 ^ 0xF3)];
  LODWORD(v53) = *(_DWORD *)&v82[4 * (BYTE1(v94) ^ 0xB)] ^ a26 ^ ((v66 ^ 0xA8)
                                                                - 570297387
                                                                + ((2 * (v66 ^ 0xA8) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v66 ^ 0xC5)] ^ v98 ^ (v96 - 509880201 - ((2 * v96) & 0xC337B0EE));
  LODWORD(v66) = *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x2D)] ^ HIDWORD(a27) ^ (v79 >> 1) ^ (v97
                                                                                       - 509880201
                                                                                       - ((2 * v97) & 0xC337B0EE));
  BYTE1(v55) = BYTE1(v53) ^ 0x65;
  int v99 = ((v53 ^ 0x2E0E654A) >> 16);
  LODWORD(v56) = v99 + 62854711 - (((v53 ^ 0x2E0E654A) >> 15) & 0x6E);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v53) ^ 0x6D));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v71) = v79 >> 1;
  LODWORD(v74) = (v67 + 1764875695 - ((2 * v67) & 0xD263BB5E)) ^ a28;
  LODWORD(v67) = *(_DWORD *)&v77[4 * (v99 ^ 0x5C)];
  unsigned int v100 = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0xFD));
  LODWORD(v67) = v67 ^ (v100 << 31) ^ (v100 >> 1) ^ v56;
  unsigned int v101 = ((v53 ^ 0x4A)
        - 570297387
        + ((2 * (v53 ^ 0x4A) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4
                                                                                                 * (v53 ^ 0x27)];
  LODWORD(v53) = (v67 ^ 0x63E2CBB2) - 509880201 - 2 * ((v67 ^ 0x63E2CBB2) & 0x619BD87F ^ v67 & 8);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0xAE));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = (v79 >> 1) ^ (v101 - 509880201 - ((2 * v101) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0xA4)];
  int v102 = v67 + 62854711 - ((2 * v67) & 0x77E2C6E);
  LODWORD(v67) = *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 0x3A)] ^ v71 ^ ((BYTE2(v66) ^ 0x66)
                                                                 + 62854711
                                                                 - 2 * ((BYTE2(v66) ^ 0x66) & 0x3F ^ WORD1(v66) & 8)) ^ *(_DWORD *)&v80[4 * (v74 ^ 0x4D)] ^ ((v74 ^ 0x20) - 570297387 + ((2 * (v74 ^ 0x20) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v55) = ((v66 ^ 0xB3)
                + 2059049719
                + ((2 * (v66 ^ 0xB3) + 254) & 0xEE ^ 0xFDCA7FFF)) ^ *(_DWORD *)&v82[4 * BYTE1(v55)];
  LODWORD(v55) = (v55 + 1155739989 - ((2 * v55) & 0x89C662AA)) ^ *(_DWORD *)&v80[4 * (v66 ^ 0xDE)];
  LODWORD(v74) = *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0x40)] ^ ((BYTE2(v74) ^ 0x1C)
                                                           + 62854711
                                                           - ((2 * (WORD1(v74) ^ 0xFD1C)) & 0x6E));
  LODWORD(v55) = (v74 ^ 0xD9E215AF ^ -(v74 ^ 0xD9E215AF) ^ ((v74 ^ v55 ^ 0x431D28D3) + (v55 ^ 0x6500C283) + 1))
               + (v55 ^ 0x6500C283);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * ((v59 ^ 0x3F162902) >> 24));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v74) = ((v59 ^ 0x3F162902) >> 16) ^ a25 ^ *(_DWORD *)&v77[4 * (((v59 ^ 0x3F162902) >> 16) ^ 0x5C)] ^ v102;
  LODWORD(v71) = (v79 >> 1) ^ HIDWORD(a24) ^ v55;
  unsigned int v103 = *(_DWORD *)&v82[4 * (BYTE1(v59) ^ 0xCB)] ^ HIDWORD(a25) ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE));
  LODWORD(v66) = *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x7C)] ^ HIDWORD(a26) ^ ((v59 ^ 2)
                                                                          - 570297388
                                                                          - ((2 * (v59 ^ 2) + 361726) & 0x402AA)) ^ *(_DWORD *)&v80[4 * (v59 ^ 0x6F)] ^ v53;
  LODWORD(v67) = ((BYTE2(v66) ^ 0xE9) + 62854711 - ((2 * (WORD1(v66) ^ 0xB8E9)) & 0x6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v66) ^ 0xB5)];
  LODWORD(v55) = v67 - 509880201 - ((2 * v67) & 0xC337B0EE);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0x9D));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v59) = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v103) ^ 0x61));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = *(_DWORD *)&v80[4 * (v66 ^ 0xC5)] ^ *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0x28)] ^ ((v66 ^ 0xA8) - 570297388 - ((2 * (v66 ^ 0xA8) + 361726) & 0x402AA)) ^ (v79 >> 1) ^ ((BYTE2(v74) ^ 0x74) + 62854711 - 2 * ((BYTE2(v74) ^ 0x74) & 0x3F ^ WORD1(v74) & 8));
  int v104 = v59 ^ ((BYTE2(v71) ^ 0xE6) + 62854711 - ((2 * (WORD1(v71) ^ 0xB0E6)) & 0x6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v71) ^ 0xBA)];
  LODWORD(v53) = v74;
  LODWORD(v56) = (v74 ^ 0xD9)
               - 570297387
               + ((2 * (v74 ^ 0xD9) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v66) ^ 0xB8));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v105 = ((BYTE2(v103) ^ 8) + 62854711 - ((v103 >> 15) & 0x6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v103) ^ 0x54)] ^ *(_DWORD *)&v80[4 * (v71 ^ 0x29)] ^ ((v71 ^ 0x44) - 570297387 + ((2 * (v71 ^ 0x44) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v79 >> 1);
  LODWORD(v59) = *(_DWORD *)&v82[4 * (BYTE1(v71) ^ 0xDD)] ^ HIDWORD(a23) ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v71) ^ 0xB0));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v74) = *(_DWORD *)&v82[4 * (BYTE1(v74) ^ 0xBD)] ^ a24 ^ (v105 - 509880201 - ((2 * v105) & 0xC337B0EE));
  unsigned int v106 = *(_DWORD *)&v82[4 * (BYTE1(v103) ^ 0x8F)] ^ HIDWORD(a22) ^ *(_DWORD *)&v80[4 * (v53 ^ 0xB4)] ^ v56 ^ (v79 >> 1) ^ v55;
  unsigned int v107 = ((v103 ^ 0x85)
        - 570297387
        + ((2 * (v103 ^ 0x85) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ a23 ^ *(_DWORD *)&v80[4 * (v103 ^ 0xE8)] ^ *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x2D)] ^ (v104 - 509880201 - ((2 * v104) & 0xC337B0EE));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v106) ^ 0x18));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = ((BYTE2(v107) ^ 0x66) + 62854711 - 2 * ((BYTE2(v107) ^ 0x66) & 0x3F ^ HIWORD(v107) & 8)) ^ *(_DWORD *)&v77[4 * (BYTE2(v107) ^ 0x3A)];
  LODWORD(v66) = ((v79 >> 1) + 62854711 - ((2 * (v79 >> 1)) & 0x77E2C6E)) ^ *(_DWORD *)&v77[4 * (BYTE2(v74) ^ 0x40)];
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v74) ^ 0xEF));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v108 = (v79 >> 1) ^ *(_DWORD *)&v80[4 * (v106 ^ 0x90)] ^ ((v106 ^ 0xFD)
                                                                           - 570297387
                                                                           + ((2 * (v106 ^ 0xFD) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v56) = *(_DWORD *)&v80[4 * (v59 ^ 0x27)] ^ ((v59 ^ 0x4A)
                                                                     - 570297387
                                                                     + ((2 * (v59 ^ 0x4A) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v107) ^ 0xAE));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v56) = (v79 >> 1) ^ *(_DWORD *)&v77[4 * (BYTE2(v106) ^ 0xF)] ^ (v56
                                                                        + *(_DWORD *)(v48 - 256)
                                                                        + ~((2 * v56) & 0x77E2C6E));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v59) ^ 0xDC));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v109 = v66 - 509880201 - ((2 * v66) & 0xC337B0EE);
  LODWORD(v66) = ((BYTE2(v59) ^ 0xE) + 62854711 - ((2 * (WORD1(v59) ^ 0xDC0E)) & 0x6E)) ^ a22 ^ *(_DWORD *)&v82[4 * (BYTE1(v107) ^ 0x7C)] ^ *(_DWORD *)&v77[4 * (BYTE2(v59) ^ 0x52)] ^ (v108 - 509880201 - ((2 * v108) & 0xC337B0EE));
  int v110 = v107;
  unsigned int v111 = (v107 ^ 0xB3)
       - 570297387
       + ((2 * (v107 ^ 0xB3) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF);
  unsigned int v112 = *(_DWORD *)&v82[4 * (BYTE1(v106) ^ 0x1B)] ^ HIDWORD(a21) ^ *(_DWORD *)&v80[4 * (v74 ^ 0x4D)] ^ ((v74 ^ 0x20) - 570297387 + ((2 * (v74 ^ 0x20) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ (v79 >> 1) ^ (v67 - 509880201 - ((2 * v67) & 0xC337B0EE));
  LODWORD(v67) = v111 ^ HIDWORD(a20) ^ *(_DWORD *)&v82[4 * (BYTE1(v59) ^ 0x65)] ^ *(_DWORD *)&v80[4 * (v110 ^ 0xDE)];
  LODWORD(v59) = BYTE1(v74) ^ 0xA4;
  BYTE1(v110) = BYTE1(v67) ^ BYTE1(v109);
  LODWORD(v74) = v67 ^ v109 ^ BYTE2(v74);
  LODWORD(v55) = *(_DWORD *)&v82[4 * v59] ^ a21 ^ (v56 - 509880201 - ((2 * v56) & 0xC337B0EE));
  LODWORD(v56) = (v82[4 * v59] ^ a21 ^ (v56 + 119 - ((2 * v56) & 0xEE)) ^ BYTE2(v106));
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * ((v74 ^ 0x7641388B) >> 24));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v113 = v79 >> 1;
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * ((v66 ^ 0xF7E9CFA8) >> 24));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  int v114 = v79 >> 1;
  LODWORD(v53) = (((v74 ^ 0x7641388B) >> 16)
                + 62854711
                - (((v74 ^ 0x7641388B) >> 15) & 0x6E)) ^ *(_DWORD *)&v77[4
                                                                                     * (((v74 ^ 0x7641388B) >> 16) ^ 0x5C)];
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (BYTE3(v55) ^ 0xE7));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v59) = v79 >> 1;
  LODWORD(v56) = v113 ^ *(_DWORD *)&v80[4 * (v56 ^ 0x18)] ^ (((v66 ^ 0xF7E9CFA8) >> 16)
                                                                         + 62854711
                                                                         - (((v66 ^ 0xF7E9CFA8) >> 15) & 0x6E)) ^ *(_DWORD *)&v77[4 * (((v66 ^ 0xF7E9CFA8) >> 16) ^ 0x5C)] ^ ((v56 ^ 0x75) - 570297387 + ((2 * (v56 ^ 0x75) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF));
  LODWORD(v56) = (v56 - 509880201 - ((2 * v56) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v112) ^ 0xEC)];
  LODWORD(v67) = v114 ^ *(_DWORD *)&v77[4 * (BYTE2(v112) ^ 0xA7)] ^ ((BYTE2(v112) ^ 0xFB)
                                                                   + 62854711
                                                                   - ((2 * (HIWORD(v112) ^ 0x57FB)) & 0x6E)) ^ ((v74 ^ 0x8B) - 570297387 + ((2 * (v74 ^ 0x8B) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v74 ^ 0xE6)];
  HIDWORD(v79) = *(_DWORD *)(v78 + 4 * (HIBYTE(v112) ^ 0x57));
  LODWORD(v79) = HIDWORD(v79) ^ 0xC7C59764;
  LODWORD(v67) = (v67 - 509880201 - ((2 * v67) & 0xC337B0EE)) ^ *(_DWORD *)&v82[4 * (BYTE1(v55) ^ 0x6D)];
  LODWORD(v55) = WORD1(v55);
  LODWORD(v60) = *(_DWORD *)&v77[4 * (v55 ^ 0x6D)];
  LODWORD(v55) = ((v66 ^ 0xA8)
                - 570297387
                + ((2 * (v66 ^ 0xA8) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ *(_DWORD *)&v80[4 * (v66 ^ 0xC5)] ^ ((v55 ^ 0x31) + 62854711 - 2 * ((v55 ^ 0x31) & 0x3F ^ v55 & 8));
  LODWORD(v74) = *(_DWORD *)&v82[4 * (BYTE1(v66) ^ 0x2D)];
  int v115 = HIDWORD(a12) ^ *(_DWORD *)&v82[4 * (BYTE1(v110) ^ 0xDA)] ^ ((v55 ^ v60 ^ (v79 >> 1))
                                                                   - 509880201
                                                                   - ((2 * (v55 ^ v60 ^ (v79 >> 1))) & 0xC337B0EE));
  LODWORD(v66) = (v67 + 772756375 - ((2 * v67) & 0x5C1EA72E)) ^ a20;
  unsigned int v116 = (v56 + 919410764 - ((2 * v56) & 0x6D9A3098)) ^ HIDWORD(a19);
  LODWORD(v78) = v74 ^ a19 ^ ((v112 ^ 0x2F)
                            - 570297387
                            + ((2 * (v112 ^ 0x2F) + 254) & 0xAAAAAAAA ^ 0xFFFBFFFF)) ^ v59 ^ *(_DWORD *)&v80[4 * (v112 ^ 0x42)] ^ (v53 - 509880201 - ((2 * v53) & 0xC337B0EE));
  BYTE2(v80) = BYTE2(v115) ^ 0x8C;
  LODWORD(v53) = v116 ^ 0x351D74B9;
  int v117 = *(_DWORD *)(v48 - 120);
  v118 = (char *)*(&off_1F08CDB40 + v117 - 1929) - 8;
  v119 = (char *)*(&off_1F08CDB40 + SHIDWORD(a11)) - 8;
  v120 = (char *)*(&off_1F08CDB40 + (int)a11) - 4;
  LODWORD(v56) = (*(_DWORD *)&v120[4 * (BYTE2(v66) ^ 0x9E)] + 2129186456) ^ (*(_DWORD *)&v118[4
                                                                                            * (v78 ^ 0xC9)]
                                                                           - 2100870534);
  LODWORD(v67) = (*(_DWORD *)&v120[4 * (BYTE2(v78) ^ 0x38)] + 2129186456) ^ (*(_DWORD *)&v119[4
                                                                                            * ((v115 ^ 0x898C5DC8) >> 24)]
                                                                           + 26696721) ^ (*(_DWORD *)&v118[4 * (((v67 - 105 - ((2 * v67) & 0x2E)) ^ a20) ^ 0xA2)]
                                                                                        - 2100870534);
  LODWORD(v60) = *(_DWORD *)&v118[4 * (v115 ^ 0xC8)];
  LODWORD(v118) = *(_DWORD *)&v118[4 * (v116 ^ 0xB9)];
  LODWORD(v74) = *(_DWORD *)&v119[4 * (BYTE3(v66) ^ 0xE7)];
  int v121 = *(_DWORD *)&v119[4 * (BYTE3(v78) ^ 0xB8)];
  LODWORD(v119) = *(_DWORD *)&v119[4 * (HIBYTE(v116) ^ 0x65)];
  v122 = (char *)*(&off_1F08CDB40 + (int)a12) - 12;
  int v123 = (v56 - 2114776122 - ((2 * v56) & 0x3E6278C)) ^ *(_DWORD *)&v122[4 * (BYTE1(v115) ^ 0x61)] ^ (v119 + 26696721);
  LODWORD(v56) = *(_DWORD *)&v122[4 * (BYTE1(v66) ^ 0xA0)];
  LODWORD(v119) = *(_DWORD *)&v122[4 * (BYTE1(v78) ^ 0xE9)];
  LODWORD(v82) = *(_DWORD *)&v120[4 * BYTE2(v80)];
  LODWORD(v120) = *(_DWORD *)&v120[4 * BYTE2(v53)];
  uint64_t v124 = *(_DWORD *)&v122[4 * BYTE1(v53)] ^ a14 ^ (v67
                                                               - 2114776122
                                                               - ((2 * v67) & 0x3E6278C));
  LODWORD(v66) = HIDWORD(a8) ^ HIDWORD(a19) ^ (v123 + 919410764 - ((2 * v123) & 0x6D9A3098));
  uint64_t v125 = (uint64_t)*(&off_1F08CDB40 + (int)a10);
  *(unsigned char *)(a7 + *(void *)(v48 - 248)) = *(unsigned char *)(v125 + (BYTE1(v124) ^ 0x99)) ^ 0x72;
  uint64_t v126 = (uint64_t)*(&off_1F08CDB40 + SHIDWORD(a9));
  *(unsigned char *)(a7 + *(void *)(v48 - 240)) = *(unsigned char *)(v126 + (BYTE2(v66) ^ 0xADLL)) ^ 0xC5;
  uint64_t v127 = (uint64_t)*(&off_1F08CDB40 + (int)a9);
  *(unsigned char *)(a7 + *(void *)(v48 - 200)) = *(unsigned char *)(v127 + (v124 ^ 0xFCLL)) ^ 0xE;
  unsigned int v128 = v56 ^ HIDWORD(a8) ^ (v60 - ((2 * v60 + 26117364) & 0x3E6278C) + 79320640) ^ (v121 + 26696721) ^ (v120 + 2129186456);
  *(unsigned char *)(a7 + *(void *)(v48 - 216)) = *(unsigned char *)(v126 + (BYTE2(v128) ^ 0x8CLL)) ^ 0x47;
  v129 = (char *)*(&off_1F08CDB40 + v117 - 1897) - 4;
  *(unsigned char *)(a7 + *(void *)(v48 - 208)) = (v129[BYTE3(v124) ^ 0xDELL] - 62) ^ 0x1B;
  *(unsigned char *)(a7 + *(void *)(v48 - 232)) = ((*(unsigned char *)(v126 + (BYTE2(v124) ^ 0x15))
                                            + (*(unsigned char *)(v126 + (BYTE2(v124) ^ 0x15)) ^ 0xDA)
                                            + 1) ^ 0xFE)
                                          + *(unsigned char *)(v126 + (BYTE2(v124) ^ 0x15));
  uint64_t v130 = HIDWORD(a10) ^ v119;
  uint64_t v131 = v130 ^ (v82 + 2129186456) ^ (v118 - 2100870534) ^ (v74
                                                                                        - ((2 * v74 + 53393442) & 0x3E6278C)
                                                                                        - 2088079401);
  *(unsigned char *)(a7 + *(void *)(v48 - 224)) = *(unsigned char *)(v127 + (v131 ^ 5)) ^ 0xFC;
  *(unsigned char *)(a7 + *(void *)(v48 - 168)) = (v129[BYTE3(v66) ^ 0x4ELL] - 62) ^ 0xE6;
  *(unsigned char *)(a7 + *(void *)(v48 - 152)) = (v129[HIBYTE(v128) ^ 0x9CLL] - 62) ^ 0xB8;
  uint64_t v132 = *(void *)(v48 - 176);
  *(unsigned char *)(a7 + v132) = (v129[BYTE3(v131) ^ 0x67] - 62) ^ 0x91;
  *(unsigned char *)(a7 + *(void *)(v48 - 160)) = *(unsigned char *)(v127 + (v128 ^ 0xF2)) ^ 0xF6;
  *(unsigned char *)(a7 + *(void *)(v48 - 192)) = *(unsigned char *)(v125 + (BYTE1(v128) ^ 0x1ELL)) ^ 0xD1;
  *(unsigned char *)(a7 + *(void *)(v48 - 144)) = *(unsigned char *)(v125 + (BYTE1(v131) ^ 0x33)) ^ 0xC8;
  *(unsigned char *)(a7 + *(void *)(v48 - 184)) = *(unsigned char *)(v125 + (BYTE1(v66) ^ 0xBCLL)) ^ 6;
  *(unsigned char *)(a7 + *(void *)(v48 - 136)) = *(unsigned char *)(v127 + (v66 ^ 0x9FLL)) ^ 0xE;
  *(unsigned char *)(a7 + *(void *)(v48 - 128)) = *(unsigned char *)(v126 + (BYTE2(v131) ^ 0xDLL)) ^ 0x8E;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a45 + 8 * ((29 * (((v132 - 2120040451 - 2 * ((v132 + 16) & 0x1A2BFEF ^ *(_DWORD *)(v48 - 252) & 2)) ^ 0x81A2BFED) < HIDWORD(a14))) ^ (v117 - 615))))(184, v131, 197, v132, v130, 2194096762, v124, HIDWORD(a10), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1B025B0F0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W8>)
{
  int v9 = (4 * a3) ^ 0xFB0;
  *(unsigned char *)(*(void *)(a1 + 24) + (v4 + a4)) = *(_DWORD *)(*v8 + 4 * (a2 - 1071499594 + v9)) ^ v7;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1464 * (v4 - 1 == ((v9 + 939302187) & 0xC80367F6) + v6)) ^ v9)))();
}

uint64_t sub_1B025B120@<X0>(int a1@<W5>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v8 - 220 + ((((a1 + v4 - 665) | 0xAu) ^ 0xFFFFFFC4) & (v5 + a3))) = *(unsigned char *)(v3 + v7 - 353013623)
                                                                                 + (~(2 * *(unsigned char *)(v3 + v7 - 353013623)) | 0x35)
                                                                                 - 26;
  return (*(uint64_t (**)(void))(v6 + 8 * ((a1 + v4 + 441) | (16 * ((a2 + v5 + 1) < 0x40)))))();
}

uint64_t sub_1B025B198@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v10 = (a1 + v7);
  *(unsigned char *)(a2 + v10) = *(unsigned char *)(v2 + v10) ^ *(unsigned char *)(v4 + (v10 & 0xF)) ^ *(unsigned char *)(v5 + (v10 & 0xF)) ^ *(unsigned char *)(v3 + (v10 & 0xF)) ^ (97 * (v10 & 0xF)) ^ 0xE5;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1767 * (a1 - 1 == ((257 * (v8 ^ 0x7D4)) ^ (v6 + 1542)))) ^ (v8 - 1750))))();
}

uint64_t sub_1B025B210(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((((2 * v5) ^ 0x582) + 298) | 0x8E) ^ 0x1B0) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1B025B248(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v14 = (unsigned int *)(v12 + 4 * v10);
  uint64_t v15 = v10 + 1;
  int v16 = *(_DWORD *)(v12 + 4 * v15);
  unsigned int v17 = v11 ^ ((v16 & 0x7FFFFFFE | v9 & 0x80000000) >> 1);
  *uint64_t v14 = v14[397] ^ a3 ^ *(_DWORD *)(a5 + 4 * (v16 & 1)) ^ (v17 + a2 - ((a1 + (a7 ^ (2 * v8)) - 722) & (2 * v17)));
  return (*(uint64_t (**)(void))(v13 + 8 * (((v15 == 227) * a8) ^ v8)))();
}

uint64_t sub_1B025B2B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v9 - 126) ^ 0x659) - 1226) * (v8 == a7)) ^ v9)))();
}

uint64_t sub_1B025B334(_DWORD *a1)
{
  unsigned int v1 = 1374699841 * ((-2 - ((a1 | 0xA88133EE) + (~a1 | 0x577ECC11))) ^ 0x3A8AD418);
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (int)((*a1 ^ v1) & 0xC20E8598))
                              + 8
                              * (int)((((a1[4] ^ v1 ^ 0xAE215E86) - 1 < 0x63) * (((*a1 ^ v1) + 670) ^ 0x549)) ^ *a1 ^ v1)
                              - 4))();
}

uint64_t sub_1B025B3D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4 + 8 * ((55 * (a3 <= 3)) ^ (v3 + 370))))(a1, 4188504625, a2, 3803812920, 3312658544, 1860, 1003, 1493);
}

uint64_t sub_1B025B45C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v2 ^ 0x2FB) + 1670) ^ (v2 - 1044)) * (v1 == v3)) ^ v2)))();
}

uint64_t sub_1B025B48C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int32x4_t a51,int32x4_t a52,int32x4_t a53,int32x4_t a54)
{
  HIDWORD(v116) = HIDWORD(a18) - 63387130;
  v111.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v111.i64[1] = 0xE5E5E5E5E5E5E5E5;
  int8x16_t v112 = (int8x16_t)vdupq_n_s32(0x2E215E87u);
  int32x4_t v113 = vdupq_n_s32(0xAE215E86);
  uint64_t v118 = v60 - 16;
  LODWORD(a27) = 1342177280;
  uint64_t v114 = (v59 - 2);
  int8x16_t v115 = (int8x16_t)vdupq_n_s32(0x2E215E97u);
  uint64_t v61 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * v54);
  uint64_t v62 = a42;
  HIDWORD(a26) = HIDWORD(a41);
  uint64_t v63 = a43;
  LODWORD(v116) = BYTE4(a44) ^ 0xFFFFFFCE;
  int v64 = BYTE4(a44) ^ 0xCE;
  if (v64 == 2)
  {
    uint64_t v117 = a42;
    LODWORD(a24) = a43;
    int8x16x4_t v120 = vld4q_s8((const char *)&a32 + 4);
    HIDWORD(a20) = HIDWORD(a43);
    uint8x16_t v89 = (uint8x16_t)veorq_s8(v120.val[0], v111);
    uint16x8_t v90 = vmovl_u8(*(uint8x8_t *)v89.i8);
    uint16x8_t v91 = vmovl_high_u8(v89);
    uint8x16_t v92 = (uint8x16_t)veorq_s8(v120.val[1], v111);
    _Q22 = vmovl_u8(*(uint8x8_t *)v92.i8);
    _Q21 = vmovl_high_u8(v92);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v97 = (uint8x16_t)veorq_s8(v120.val[2], v111);
    uint16x8_t v98 = vmovl_high_u8(v97);
    uint16x8_t v99 = vmovl_u8(*(uint8x8_t *)v97.i8);
    v120.val[0] = veorq_s8(v120.val[3], v111);
    v120.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v120.val[0]);
    v120.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v120.val[1]);
    v120.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v120.val[1].i8);
    v120.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v120.val[0].i8);
    v120.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v120.val[0]);
    v120.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v120.val[0].i8);
    int32x4_t v100 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v99.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v90.i8), 0x18uLL)), v120.val[0]);
    int32x4_t v101 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v99, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v90), 0x18uLL)), v120.val[3]);
    int32x4_t v102 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v98.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v91.i8), 0x18uLL)), v120.val[1]);
    int32x4_t v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v98, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v91), 0x18uLL)), v120.val[2]);
    v120.val[0] = veorq_s8(vandq_s8((int8x16_t)v100, v112), (int8x16_t)(*(_OWORD *)v120.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v120.val[3] = veorq_s8(vandq_s8((int8x16_t)v101, v112), (int8x16_t)(*(_OWORD *)&v120.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v120.val[1] = veorq_s8(vandq_s8((int8x16_t)v102, v112), (int8x16_t)(*(_OWORD *)&v120.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v120.val[2] = veorq_s8(vandq_s8((int8x16_t)v103, v112), (int8x16_t)(*(_OWORD *)&v120.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    a53 = vaddq_s32(vsubq_s32(v102, vaddq_s32((int32x4_t)v120.val[1], (int32x4_t)v120.val[1])), v113);
    a54 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v120.val[2], (int32x4_t)v120.val[2])), v113);
    a51 = vaddq_s32(vsubq_s32(v100, vaddq_s32((int32x4_t)v120.val[0], (int32x4_t)v120.val[0])), v113);
    a52 = vaddq_s32(vsubq_s32(v101, vaddq_s32((int32x4_t)v120.val[3], (int32x4_t)v120.val[3])), v113);
    int v104 = (_DWORD *)&a51 + v55 + 256920931;
    int v105 = *(v104 - 8) ^ *(v104 - 3);
    int v106 = v105 + v56 - ((2 * v105) & 0x5C42BD0C);
    int v107 = *(v104 - 16) ^ *(v104 - 14);
    uint64_t v108 = v107 ^ 0x2E215E86 ^ v106;
    HIDWORD(v109) = v107 ^ 0x2E215E86 ^ v106;
    LODWORD(v109) = v107 ^ ~v106;
    *int v104 = (v109 >> 31) + v56 - ((2 * (v109 >> 31)) & 0x5C42BD0C);
    int v110 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((62 * (v60 != 256920868)) ^ 0x1D1));
    return v110(2282780948, v114, 2005, v110, v108, v63, a7, 3980823791, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v116,
             v117,
             a24,
             v61,
             a26,
             a27,
             v118,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50);
  }
  else if (v64 == 1)
  {
    LODWORD(a24) = a43;
    int8x16x4_t v119 = vld4q_s8((const char *)&a32 + 4);
    uint8x16_t v65 = (uint8x16_t)veorq_s8(v119.val[0], v111);
    uint16x8_t v66 = vmovl_u8(*(uint8x8_t *)v65.i8);
    int8x16_t v67 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v66.i8);
    int8x16_t v68 = (int8x16_t)vmovl_high_u16(v66);
    uint16x8_t v69 = vmovl_high_u8(v65);
    int8x16_t v70 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v69.i8);
    int8x16_t v71 = (int8x16_t)vmovl_high_u16(v69);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v119.val[1], v111);
    uint16x8_t v73 = vmovl_high_u8(v72);
    uint16x8_t v74 = vmovl_u8(*(uint8x8_t *)v72.i8);
    uint8x16_t v75 = (uint8x16_t)veorq_s8(v119.val[2], v111);
    _Q26 = (int8x16_t)vmovl_high_u8(v75);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v75.i8);
    int8x16_t v78 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    int8x16_t v83 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v119.val[0] = veorq_s8(v119.val[3], v111);
    v119.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v119.val[0]);
    v119.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v119.val[1]);
    v119.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v119.val[0].i8);
    v119.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v119.val[0]);
    v119.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v119.val[0].i8), 0x18uLL), v78), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v74.i8, 8uLL), v67));
    v119.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v119.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v74, 8uLL), v68));
    v119.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v119.val[1].i8), 0x18uLL), v83), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), v70));
    v119.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v119.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v71));
    int32x4_t v84 = (int32x4_t)veorq_s8(vandq_s8(v119.val[0], v115), (int8x16_t)(*(_OWORD *)&v67 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v85 = (int32x4_t)veorq_s8(vandq_s8(v119.val[3], v115), (int8x16_t)(*(_OWORD *)&v68 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v86 = (int32x4_t)veorq_s8(vandq_s8(v119.val[1], v115), (int8x16_t)(*(_OWORD *)&v70 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v87 = (int32x4_t)veorq_s8(vandq_s8(v119.val[2], v115), (int8x16_t)(*(_OWORD *)&v71 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a53 = vaddq_s32(vsubq_s32((int32x4_t)v119.val[1], vaddq_s32(v86, v86)), v113);
    a54 = vaddq_s32(vsubq_s32((int32x4_t)v119.val[2], vaddq_s32(v87, v87)), v113);
    a51 = vaddq_s32(vsubq_s32((int32x4_t)v119.val[0], vaddq_s32(v84, v84)), v113);
    a52 = vaddq_s32(vsubq_s32((int32x4_t)v119.val[3], vaddq_s32(v85, v85)), v113);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, void, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((int)a5 - 314143006)))(3739490932, v114, 2005, *(&off_1F08CDB40 + (int)((a5 - 314143006) ^ 0x3E6)), (a5 - 314143006), HIDWORD(a42), a42 ^ v59, 256920931, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v116,
             a42,
             a24,
             v61,
             a26,
             a27,
             v60 - 16,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50);
  }
  else
  {
    HIDWORD(a41) = 2 * (HIDWORD(a41) ^ v59) + v59 - (v58 & (4 * (HIDWORD(a41) ^ v59)));
    LODWORD(a42) = 2 * (a42 ^ v59) + v59 - (v58 & (4 * (a42 ^ v59)));
    HIDWORD(a42) = 2 * (HIDWORD(a42) ^ v59) + v59 - (v58 & (4 * (HIDWORD(a42) ^ v59)));
    LODWORD(a43) = 2 * (a43 ^ v59) + v59 - (v58 & (4 * (a43 ^ v59)));
    return v61(2282780948, v114, 2005, v62, a5, v63, a7, 3980823791, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             v116,
             a23,
             a24,
             a25,
             a26,
             a27,
             v118,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34);
  }
}

void sub_1B025B4A8(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 24) != 0x7761D79CB8DF4D13
    && *(void *)(a1 + 8) != 0x102FB98998D77CDDLL
    && *(void *)(a1 + 40) != 0x27EFF0CD9F36B463;
  int v1 = *(_DWORD *)a1 - 1224239923 * ((-2 - ((~a1 | 0x50890EB9) + (a1 | 0xAF76F146))) ^ 0xA23AF36E);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B025B5D0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((*(_DWORD *)(a20 + 4 * (a1 + v21 + 1603)) == v20)
                                * (((v23 - 4) | 4) ^ 0x3E9)) ^ v23)))();
}

void sub_1B025B61C()
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v4 + v8) = ((v1 + 1) ^ v3) * (v1 + 18);
  __asm { BRAA            X0, X17 }
}

uint64_t sub_1B025BAF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, uint64_t a5@<X4>, int a6@<W5>, uint64_t a7@<X8>)
{
  BOOL v19 = a3 > 0xA06006;
  unint64_t v20 = a1
      - 0x689170CABB1BB2A6
      + ((v11 + ((v9 + v15) & v16) - 405) ^ 0x1B21A8FA)
      + v13 * (unint64_t)(*(_DWORD *)(*v12 + 4 * a4) ^ v11);
  *(_DWORD *)(a5 + 4 * v14) = v20 + v11 - ((v20 << ((v9 + 23) & v17 ^ v18)) & 0x364351F4);
  uint64_t v21 = (a2 ^ HIDWORD(v20)) + (a7 & (v20 >> 31)) + v10;
  if (v19 == a4 + 2136973306 < v7) {
    BOOL v19 = a4 + 2136973306 < a6;
  }
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * (v9 ^ ((4 * v19) | (16 * v19)))))(v21);
}

uint64_t sub_1B025BC28@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 1397079334 + v4 - 220 - 1760 + ((a1 - 1283771627) & 0x4C84CFFF)) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * ((v1 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ a1)))();
}

uint64_t sub_1B025BC94@<X0>(uint64_t a1@<X8>)
{
  int v6 = 7 * (v1 ^ 0x425);
  int v7 = v1 - 195;
  BOOL v8 = v4 - 32122991 < -1053336894;
  uint64_t v9 = 4 * (v6 - 182);
  unsigned int v10 = (*(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v9) ^ 0xE4DE5705) + 1;
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v9) = v10 + v2 - (v5 & (2 * v10));
  if (v4 - 32122991 >= -1053336894) {
    BOOL v8 = v4 - 32122991 > 1094146755;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((253 * !v8) ^ v7)))(3310070269, 3839776517, 109249910);
}

uint64_t sub_1B025BD68()
{
  unsigned int v5 = (v1 + 741284429) & 0xD3D0E5B4;
  unsigned int v6 = *(_DWORD *)(v2 + 16) - v0 - 2052113801;
  BOOL v8 = (*(unsigned char *)(v3 - 0x7761D79CB8DF4CFFLL) & 1) == 0 || v6 > 0xFFFFFFBE;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v8 * (((5 * (v5 ^ 0x1DC) + 1701594610) & 0x9A93BDFF) - 1307)) ^ v5)))();
}

uint64_t sub_1B025BE0C(uint64_t a1, int a2, int a3)
{
  int v9 = v4 + v3;
  if ((a3 + v9 + 1) > 0x40) {
    a2 = a3 + v9 + 1;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((25
                                * (((v7 + 1498314822) & 0x185EF ^ 0x4FDBF230) - v9 >= v6 + v5 + (v7 ^ 0x4FDBF07A) + a2)) ^ v7)))();
}

void sub_1B025BE84(_DWORD *a1, int a2)
{
  int v9 = (v5 - 1402469611) | 8;
  *((unsigned char *)a1 + v4 + 4) = v8;
  int v10 = v7 + v3;
  *a1 = v7 + v3 + 1041861450;
  unsigned int v11 = a1 + 1;
  *((unsigned char *)v11 + (a2 + v3)) = v6;
  *((unsigned char *)v11 + (v2 + v3 - 2)) = -106;
  *((unsigned char *)v11 + (v10 - 43950353)) = -92;
  *((unsigned char *)v11 + v10 + ((v9 + 1402469603) ^ 0xAEF6A381)) = 103;
  JUMPOUT(0x1B0269E6CLL);
}

uint64_t sub_1B025BF0C()
{
  unsigned int v4 = v1 - 14;
  if (v4 <= 0x40) {
    unsigned int v4 = 64;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((218 * (-v2 - v0 + v4 + 14 < 0xF)) ^ 0x34Cu)))();
}

void sub_1B025BF78(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1372200252;
}

uint64_t sub_1B025BF88(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v11 = *(unsigned __int8 *)(v7 + (a2 + a6)) | ((((v10 - 114) | 0x646) ^ 0x71369657) + (a3 << 8));
  return (*(uint64_t (**)(uint64_t, void, void))(v8 + 8 * ((676 * (v9 - 1 == a7 + 1623)) ^ v10)))(a1, (a2 + 1), (v11 ^ 0xCFEEEFFB) + 2090850677 + ((2 * v11) & 0x9FDDDFF6));
}

uint64_t sub_1B025C008@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)((((v3 + 1344634787) & 0xAFDA79FF ^ 0x150)
                                     * (*(_DWORD *)(v4 + 48 * (v2 + a1) + 36) == a2)) ^ v3)))();
}

uint64_t sub_1B025C06C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v10 = 4 * (v6 + v3);
  int v11 = (*(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + v10) ^ v4)
      - (*(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v10) ^ v4);
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v10) = v11
                                                            + v4
                                                            - ((v11 << ((26 * ((v8 - 59) ^ 0x37)) ^ 0x2F)) & v7);
  BOOL v12 = v6 - 748435184 < (int)(v2 + 377834560);
  if (v2 > 0x697AB3BF != v6 - 748435184 < -1769649088) {
    BOOL v12 = v2 > 0x697AB3BF;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((101 * v12) ^ (v8 - 827) ^ 0x3B2)))();
}

unsigned int *sub_1B025C1A0@<X0>(unsigned int *result@<X0>, int a2@<W8>)
{
  *uint64_t result = ((*(_DWORD *)(*(void *)(v2 - 0x67843F9A1244BAC3) + 4 * v4) ^ 0x1B21A8FAu) >> v3) & 1 | a2;
  return result;
}

uint64_t sub_1B025C1D8(double a1, int8x16_t a2)
{
  unsigned int v4 = (LODWORD(STACK[0x3FC]) + 785875599) & 0xD1287AAE;
  int8x16_t v5 = (int8x16_t)vld1q_dup_f32((const float *)v2);
  v6.i64[0] = 0x8000000080000000;
  v6.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v2 + 4);
  a2.i32[2] = *(_DWORD *)(v2 + 12);
  int8x16_t v7 = vextq_s8(v5, a2, 0xCuLL);
  int8x16_t v8 = a2;
  v8.i32[3] = *(_DWORD *)(v2 + 16);
  int32x4_t v9 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v8, *(int8x16_t *)&STACK[0x320]), vandq_s8(v7, v6)), 1uLL), *(int8x16_t *)&STACK[0x310]);
  v10.i32[0] = *((_DWORD *)&STACK[0x1918] + (*(unsigned int *)(v2 + 4) & ((v4 - 282) ^ 0x175)));
  v10.i32[1] = *((_DWORD *)&STACK[0x1918] + (*(_DWORD *)(v2 + 8) & 1));
  v10.i32[2] = *((_DWORD *)&STACK[0x1918] + (*(_DWORD *)(v2 + 12) & 1));
  v10.i32[3] = *((_DWORD *)&STACK[0x1918] + (v8.i8[12] & 1));
  *(int8x16_t *)uint64_t v2 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v2 + 1588), v10), *(int8x16_t *)&STACK[0x2E0]), (int8x16_t)vaddq_s32(vsubq_s32(v9, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v9, v9), *(int8x16_t *)&STACK[0x300])), *(int32x4_t *)&STACK[0x2F0]));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t *))(v3 + 8 * (int)(v4 ^ 0x19)))(2920037996, 1460018998, 907099620, 373, &STACK[0x1918]);
}

uint64_t sub_1B025C1E0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((785 * ((v1 - 368391659) & 0x15F5352F ^ 0x521) - 1522) ^ v0) > 7) | v1)))();
}

uint64_t sub_1B025C22C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,_DWORD *a27,_DWORD *a28)
{
  *a27 = 24759839;
  uint64_t v32 = (*a28 + 723385280);
  uint64_t v33 = 235795823 * ((v31 - 144) ^ 0x8B0BAFE94AD4959);
  *(_DWORD *)(v31 - 104) = (v28 - 827113830) & 0xBAFF7BD8 ^ v33;
  *(_DWORD *)(v31 - 100) = v28 - 827113830 + v33;
  *(_DWORD *)(v31 - 128) = v33 + v28 - 1015666717;
  *(void *)(v31 - 136) = v32 ^ v33;
  *(void *)(v31 - 120) = v33 + 2240972268;
  *(_DWORD *)(v31 - 112) = v33 + 1;
  *(_DWORD *)(v31 - 108) = (v28 - 827113939) ^ v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v29 + 8 * (v30 + v28 + 1372)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * *(int *)(v31 - 144)))(v34);
}

uint64_t sub_1B025C318()
{
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v2 + 738)))(v1);
  LODWORD(STACK[0x5CC]) = v0;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((STACK[0x580] != 0) * (((v2 - 1267) ^ 0x6D2) - 1469)) ^ (v2 + 527))))(v4);
}

uint64_t sub_1B025C388@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((7 * (((((LODWORD(STACK[0x3FC]) - 910) | 0x15) ^ 0xD6) & a1) == 0)) ^ (LODWORD(STACK[0x3FC]) - 1222))))();
}

void sub_1B025C3C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30)
{
  LODWORD(STACK[0x520]) ^= a30;
  JUMPOUT(0x1B025B758);
}

uint64_t sub_1B025C3E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((((v6 + v8 + 778457624 + 163) | a5) - 95) ^ (v8 + 778457624) & v6) * (v5 > 1)) ^ v8)))();
}

uint64_t sub_1B025C3F0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  if (a3) {
    BOOL v12 = a10 == v10 + ((a1 - 223) ^ 0x3D7) - 727;
  }
  else {
    BOOL v12 = 1;
  }
  int v14 = !v12 && a4 != 0;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v14 * (((a1 - 223) | 0x680) ^ 0x7B8)) ^ a1)))();
}

uint64_t sub_1B025C44C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1004 * ((v2 + 1388 + a1 - 1756634936) < 0x38)) ^ (v2 + 472))))();
}

uint64_t sub_1B025C498@<X0>(int a1@<W8>)
{
  *(void *)(v1 - 0x31FD77B69BC3E185) = (*v3 + a1) + *(void *)(v4 - 0x7761D79CB8DF4D13) + 8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((375 * (*v6 == v5)) ^ v2 ^ 0x153)))();
}

uint64_t sub_1B025C4FC()
{
  int v2 = v0 ^ 0x273;
  unsigned __int8 v3 = (v0 ^ 0x73) - 52;
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * (v0 ^ 0xD0E)))(1576, 2940923044);
  STACK[0x458] = v4;
  return (*(uint64_t (**)(void))(v1 + 8 * ((26 * (((v4 == 0) ^ v3) & 1)) ^ v2)))();
}

uint64_t sub_1B025C57C@<X0>(uint64_t a1@<X8>)
{
  BOOL v5 = v3 - a1 - 0x843828D0CDF342DLL + (unint64_t)(((2 * (v2 + 221)) ^ 0xC50u) + 50331659 + v1 - 279) < 0x10;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((16 * (((v2 + 123) ^ v5) & 1)) & 0xBF | ((((v2 + 123) ^ v5) & 1) << 6)) ^ (v2 + 221))))();
}

uint64_t sub_1B025C5F4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v4 - 785726711) > 7) * ((((a4 ^ 0x6E7) - 670) | 1) ^ 0x204)) ^ a4 ^ 0x6E7)))();
}

uint64_t sub_1B025C64C@<X0>(uint64_t a1@<X8>)
{
  int v9 = STACK[0x4A0];
  unsigned int v10 = 1755732067 * (v1 ^ 0xDEC6BDDB);
  *(void *)(v8 - 192) = v6 + 0x3AC75C5FABFFD32DLL;
  *(void *)(v8 - 184) = a1;
  STACK[0x338] = v2;
  *(void *)(v8 - 160) = v2;
  *(void *)(v8 - 144) = v6 + 0x1B326768DCF9E3AELL;
  *(_DWORD *)(v8 - 176) = v10 + 680 * (v5 ^ v3) + 854622387 * v9 - 1873543765;
  *(_DWORD *)(v8 - 172) = v10 + v5 - 2024873194;
  *(_DWORD *)(v8 - 168) = (575096879 * v4 + 1470712469) ^ v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v5 ^ 0x8C1)))(v8 - 192);
  int v12 = *(_DWORD *)(v8 - 152);
  LODWORD(STACK[0x5B4]) = v12;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * ((1999 * (v12 == -1373544826)) ^ v5)))(v11);
}

uint64_t sub_1B025C740@<X0>(int a1@<W8>)
{
  int v6 = STACK[0x528];
  uint64_t v7 = (_DWORD *)STACK[0x3C8];
  unint64_t v8 = STACK[0x3C8] + 24 * (v1 - 1321678225 + ((a1 - 1045826904) & 0x3E560DD9u) - 1359);
  *(_DWORD *)(v8 + 8) = v4;
  *(_DWORD *)(v8 + 12) = v3;
  *(void *)(v8 + 16) = STACK[0x3A0];
  *(_DWORD *)(v8 + 24) = v6;
  _DWORD *v7 = v1 + 1;
  BOOL v10 = v2 + 1743106478 > 1717150907 || v2 + 1743106478 < SLODWORD(STACK[0x378]);
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a1 - 35476763) & 0x21D537E ^ 0x67) * v10) ^ a1)))();
}

uint64_t sub_1B025C7EC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7, int a8)
{
  uint64_t v13 = v8 + 1;
  BOOL v15 = v10 == (((v9 + 113) | a1) ^ ((v9 + 41) | a6) ^ a7) || v13 == v11 + 200;
  return (*(uint64_t (**)(void))(v12 + 8 * ((v15 * a8) ^ v9)))();
}

void sub_1B025C830()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 16) == 0x4CAF57822185BF99;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 24) + 1374699841 * ((~v0 & 0x2CB30A96 | v0 & 0xD34CF569) ^ 0x4147129F);
  __asm { BRAA            X8, X17 }
}

_DWORD *sub_1B025C944(_DWORD *result)
{
  *uint64_t result = 584148097;
  return result;
}

void sub_1B025C954(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x67843F9A1244BAC3) = (v2 + 978157314) ^ ((v3 - 621) | 0x25A) ^ 0x216CD523;
  *(_DWORD *)(v1 - 0x67843F9A1244BAC7) = a1 + 1;
}

uint64_t sub_1B025C9B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((62 * ((((unint64_t)(a13 + v13 - a1) < 0x10) ^ (v14 - 1)) & 1)) ^ v14)))();
}

uint64_t sub_1B025CA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  return (*(uint64_t (**)(uint64_t))(v33
                                            + 8
                                            * ((((a33 - 1098794476) < 0xFFFFFFFB)
                                              * (((v34 - 31) | 0x19C) ^ 0x1B6)) ^ (v34 + 1105))))(a1);
}

uint64_t sub_1B025CAA4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((124 * (v2 + v1 + (v0 ^ 0x183u) + 437 < 4)) ^ v0)))();
}

uint64_t sub_1B025CAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  uint64_t v51 = (_DWORD *)(a27 + 24 * v43);
  *uint64_t v51 = v47;
  v51[1] = v45;
  *(void *)(v48 + 24 * v43 + 16) = v50;
  v51[4] = a32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((1067 * (*(_DWORD *)(a4 + 48 * v46 + 32) + 1967413501 < (((v42 ^ (v44 + 214)) - v44 + 1634) ^ 0x80000661))) ^ v42)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42);
}

uint64_t sub_1B025CB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  uint64_t v24 = *(uint64_t (**)(uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 - 1131) ^ (658 * ((a22 & 0x20000000) == 0))));
  return v24(a1, v24, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1B025CB98()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((v0 == 0x57FADEEBDD29AE6) * ((v1 + 26812047) & 0xFE66DFE3 ^ 0x39D)) ^ v1)))();
}

uint64_t sub_1B025CBE8@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(v6 + v5) = *(unsigned char *)(v9 + (v4 + a1))
                      - (v7 & (2 * *(unsigned char *)(v9 + (v4 + a1))))
                      - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v5 == 63) * a2) ^ (a3 + a4 + 199))))();
}

void sub_1B025CC30(uint64_t a1, uint64_t a2, unsigned char *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned char *a23,uint64_t a24,uint64_t a25,unsigned char *a26,uint64_t a27,unsigned char *a28,unsigned char *a29,unsigned char *a30,unsigned char *a31,unsigned char *a32,unsigned char *a33,unsigned char *a34)
{
  uint64_t v43 = ((a7 ^ 0x32C05921B005B848) + v41 - 2 * ((a7 ^ 0x32C05921B005B848) & (v41 + 32) ^ a7 & 0x20)) ^ a6;
  uint64_t v44 = (((v36 << ((v39 - 80) ^ 0xC4u)) | (v34 - 79274182))
       + 0x6DB7B20BBF96EA95
       - 2
       * (((v36 << ((v39 - 80) ^ 0xC4u)) | (v34 - 79274182)) & 0x6DB7B20BBF96EAB7 ^ (v34 - 79274182) & 0x22)) ^ v37;
  unint64_t v45 = v44 ^ 0xA173397C065C8DEALL;
  uint64_t v46 = v44 ^ 0x5E8CC683F9A37215;
  uint64_t v47 = ((v44 ^ 0x5E8CC683F9A37215)
       + 0x1EC5A4A56706F2AALL
       - ((2 * (v44 ^ 0x5E8CC683F9A37215)) & 0x3D8B494ACE0DE554)) ^ v38;
  uint64_t v48 = v47 ^ 0x629A61E2FE92CDE4;
  unint64_t v49 = v43 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v50 = (v47 ^ 0x629A61E2FE92CDE4) & v45 ^ v43 ^ 0x8ABB7B075CE8A96ELL;
  unint64_t v51 = v35 ^ 0xBF323BF9DB38FEFALL;
  unint64_t v52 = (v47 ^ 0x9D659E1D016D321BLL) & (v35 ^ 0xBF323BF9DB38FEFALL) ^ v46 ^ v50;
  *((void *)&v53 + 1) = v52 ^ 0xABEF87C8808CCB5;
  *(void *)&long long v53 = v52 ^ 0x8000000000000000;
  uint64_t v54 = v52 ^ __ROR8__(v52, 39) ^ (v53 >> 61);
  uint64_t v55 = v46 & (v43 ^ 0x754484F8A3175691);
  uint64_t v56 = v50 ^ 0xF38BFF733C051F6;
  unint64_t v57 = a7 ^ 0x32C05921B005B848 ^ v35 ^ 0xBF323BF9DB38FEFALL;
  unint64_t v58 = v55 ^ v57;
  uint64_t v59 = (v55 ^ v57) & 0x200000000;
  BOOL v60 = (v56 & v59) == 0;
  uint64_t v61 = v59 | 0x5E403E4D98A0DFB4;
  if (!v60) {
    uint64_t v61 = 0xBC807C9B3141BF68 - v61;
  }
  unint64_t v62 = ((v56 + v61 - 0x5E403E4D98A0DFB4) ^ (0x5E403E4D98A0DFB4 - (v56 + v61)) ^ ((v58 & 0xFFFFFFFDFFFFFFFFLL)
                                                                                    - ((v56 + v61 - 0x5E403E4D98A0DFB4) ^ v58 & 0xFFFFFFFDFFFFFFFFLL)))
      + (v58 & 0xFFFFFFFDFFFFFFFFLL);
  unint64_t v63 = v62 - ((2 * v62) & 0xF9ADD5D921835D00) - 0x32915136F3E5180;
  *((void *)&v64 + 1) = v63 ^ 0x1AE80;
  *(void *)&long long v64 = v63 ^ 0xFCD6EAEC90C00000;
  uint64_t v65 = ((v64 >> 19) - ((2 * (v64 >> 19)) & 0xF9ADD5D921835D00) - 0x32915136F3E5180) ^ v63;
  uint64_t v66 = (v58 << 23) ^ (v58 >> 7) ^ ((v58 >> 41) | (v58 << 57)) ^ 0x1EC655AF97FB0312;
  unint64_t v67 = v58 ^ 0xCE3FEF428C6AADCELL ^ (v66 - ((2 * v66) & 0xF20D916BB84ADA78) + 0x7906C8B5DC256D3CLL);
  unint64_t v68 = v67 ^ (v63 << 36) ^ (v65 & 0x88A7E47BC54E7E29 ^ ((v63 >> 28) ^ 0xFCD6EAEC9) & 0xBC54E7E29 | v65 & 0x77581B843AB181D6 ^ ((v63 >> 28) ^ 0xFCD6EAEC9) & 0x43AB181D6);
  uint64_t v69 = v48 ^ v57 & (v35 ^ 0x40CDC40624C70105);
  unint64_t v70 = v49 & ~v57 ^ v51 ^ v69;
  unint64_t v71 = ((v70 >> 10) ^ (v70 >> 17) | (v70 << 54)) ^ 0xF5EC3F377C10F093;
  unint64_t v72 = v70 ^ 0x8CC2F1154917B5F3 ^ (v71 - ((2 * v71) & 0x7ABA2642C505A448) + 0x3D5D13216282D224);
  unint64_t v73 = v72 & 0x4C1D4E44A4B3031DLL ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0x4C1D000000000000 | v72 & 0xB3E2B1BB5B4CFCE2 ^ ((v70 << 47) ^ 0xB3EB800000000000) & 0xB3E2800000000000;
  uint64_t v74 = v73 - 2 * (v73 & 0x5C37298372F631AELL ^ v72 & 0x20) + 0x5C37298372F6318ELL;
  unint64_t v75 = v74 ^ (v67 - ((2 * v67) & 0xB86E5306E5EC631CLL) + 0x5C37298372F6318ELL);
  uint64_t v76 = v68 ^ 0xC1AE80000000000;
  *((void *)&v64 + 1) = ~v69;
  *(void *)&long long v64 = v69 ^ 0x92CFC162FD513142;
  unint64_t v77 = v69 ^ 0xDC6E8A9B512F3AC0 ^ (((v69 << 58) ^ 0xC00000000000000)
                                    - ((2 * ((v69 << 58) ^ 0xC00000000000000)) & 0x9FFFFFFFFFFFFFFFLL)
                                    + 0x4EA14BF9AC7E0B83);
  uint64_t v78 = ((v69 ^ 0x92CFC162FD513166) >> (v58 & 6 ^ 2) >> (v58 & 6 ^ 4)) ^ (v64 >> 1) ^ v54 ^ 0xC4D4B7916925957CLL ^ (v77 - ((2 * v77) & 0x6EF4BCE914704872) - 0x4885A18B75C7DBC7);
  unint64_t v79 = (v74 ^ 0xA3C8D67C8D09CE71) & v67 ^ v78;
  unint64_t v80 = v79 ^ v74 ^ (((v68 ^ 0xC1AE80000000000) & ~v75)
                   - ((2 * ((v68 ^ 0xC1AE80000000000) & ~v75)) & 0xB86E5306E5EC631CLL)
                   + 0x5C37298372F6318ELL);
  unint64_t v81 = ((v80 >> 10) & 0x2000000000000 ^ 0xFFFFFCDEFBFFBD7DLL) + 2 * ((v80 >> 10) & 0x2000000000000);
  unint64_t v82 = (v68 ^ 0xF3E517FFFFFFFFFFLL) & (v54 ^ 0x73AEE9E5E31DB145) ^ v75;
  unint64_t v83 = ((v82 >> 41) ^ (v82 >> 7) | (v82 << 57)) ^ (v82 << 23) ^ 0xF774B04353CE1CF4;
  uint64_t v84 = v83 - ((2 * v83) & 0x6F16C3181610451ALL) - 0x48749E73F4F7DD73;
  unint64_t v85 = v81 + 0x67E8D3FD3637F6BBLL;
  if (((v81 + 0x32104004283) & (v80 ^ 0x28E000000000000)) != 0) {
    unint64_t v85 = 0x67E8CDBB2E3771B5 - v81;
  }
  unint64_t v86 = (v80 >> 10) & 0xFFFDFFFFFFFFFFFFLL ^ 0xA3E966F75234 ^ ((v80 ^ 0x28FA59BDD48D0B6) - 0x67E8D0DC3237B438 + v85);
  uint64_t v87 = ((v86 >> 38) & 0x2A35FE4) + (v86 >> 39) - 2 * ((v86 >> 38) & 0x2A35FE4) + 0x61376A34D751AFF2;
  *((void *)&v88 + 1) = v80 ^ 0xD0B6;
  *(void *)&long long v88 = v80 ^ 0x28FA59BDD480000;
  uint64_t v89 = (((v87 << 39) ^ (v80 << 54)) & 0xFFFFFF8000000000 | ((v87 ^ (v86 << 25)) >> 25)) ^ (v88 >> 17);
  unint64_t v90 = v76 ^ v78 & (v54 ^ 0x8C51161A1CE24EBALL);
  unint64_t v91 = (((v74 ^ 0x5C37298372F6318ELL) & ~v78)
       - ((2 * ((v74 ^ 0x5C37298372F6318ELL) & ~v78)) & 0x6EF4BCE914704872)
       - 0x4885A18B75C7DBC7) ^ v54 ^ 0xC4D4B7916925957CLL ^ v90;
  unint64_t v92 = (8 * v91) ^ (v91 >> 39) ^ 0xBA3E0AB73A03F932 ^ ((*(unsigned char *)(v40
                                                                                     + (((v91 >> 57) ^ 0x2B) & 0x70 ^ 0xFE)) ^ ((((v91 >> 57) ^ 0x2B) & 0x70 ^ 0xDE) + (((v91 >> 57) ^ 0x2B) & 0x70 ^ 0x4B)) ^ 0xA1)
                                                                         - 122);
  unint64_t v93 = (v92 - ((2 * v92) & 0xC6CFDCA813A16390) - 0x1C9811ABF62F4E38) ^ v91;
  unint64_t v94 = (v93 ^ 0xB4202F02EE851F1ELL)
      + ((v91 << 25) ^ 0xADCEAB5DAC000000)
      - 2 * ((v93 ^ 0xB4202F02EE851F1ELL) & ((v91 << 25) ^ 0xADCEAB5DAC000000));
  unint64_t v95 = v84 ^ v82;
  unint64_t v96 = v82 ^ v90;
  *(void *)&long long v88 = __ROR8__(__ROR8__(v96 ^ 0x787EEEF1A7EE72F1, 16) ^ 0x1712D402E105A6CBLL, 48);
  unint64_t v97 = v96 ^ 0xAC7C0FF4012565E3 ^ ((v96 ^ 0xAC7C0FF4012565E3) >> 19) ^ ((unint64_t)v88 >> 28) ^ ((void)v88 << 36) ^ ((void)v88 << 45) ^ v95;
  *((void *)&v88 + 1) = v97 ^ 0x1C8;
  *(void *)&long long v88 = v97 ^ 0x2DB35D748A885600;
  uint64_t v98 = v94 - 2 * (v94 & 0x16CD819CC9B85F4 ^ v93 & 0x40) - 0x7E9327E633647A4CLL;
  unint64_t v99 = v89 ^ 0x8557F9309BB51A6BLL;
  unint64_t v100 = v89 ^ 0x8557F9309BB51A6BLL ^ v95;
  unint64_t v101 = v100 ^ 0x2DB35D748A8857C8 ^ (v98 ^ 0x816CD819CC9B85B4) & ((((unint64_t)(v88 >> 9) ^ 0x284B28057C49B8D1) >> (v69 & 0x37 ^ 3) >> (v69 & 0x37 ^ 0x34)) ^ (((unint64_t)(v88 >> 9) ^ 0x284B28057C49B8D1) << 9) ^ 0x69AFF5076C8E5DAFLL);
  *((void *)&v88 + 1) = v101 ^ 0x118501E2B14;
  *(void *)&long long v88 = v101 ^ 0x26974A0000000000;
  uint64_t v102 = v101 ^ 0x21BCE6A3A42CEDA8 ^ (((v88 >> 41) ^ (v101 << 57) ^ 0x2800000000000000)
                                      - 2 * (((v88 >> 41) ^ (v101 << 57)) & 0x72BADBBF432C6BELL ^ (v88 >> 41) & 2)
                                      + 0x72BADBBF432C6BCLL);
  uint64_t v103 = v102 + ((v101 >> 7) ^ 0x4D2E9630A03C56) - 2 * (v102 & ((v101 >> 7) ^ 0x4D2E9630A03C56));
  unint64_t v104 = (v79 >> 1) ^ (v79 >> 6) ^ (v79 << 58) ^ 0xDE1FAE11AA0A9F1DLL;
  uint64_t v105 = v79 ^ 0x63DBD0D498974E6ELL ^ (v104 - ((2 * v104) & 0x193D4E9663911CA8) + 0xC9EA74B31C88E54);
  unint64_t v106 = v105 & 0xF47FF077890F9720 ^ (v79 << 63) | v105 & 0xB800F8876F068DFLL;
  uint64_t v107 = (v100 ^ 0x2DB35D748A8857C8) & (v89 ^ 0x7AA806CF644AE594);
  unint64_t v108 = ((v100 ^ 0xD24CA28B7577A837) & (v97 ^ 0x2DB35D748A8857C8))
       - ((2 * ((v100 ^ 0xD24CA28B7577A837) & (v97 ^ 0x2DB35D748A8857C8))) & 0xBD3617C5B1C3A084);
  uint64_t v109 = v98 ^ (v106 - 2 * (v106 & 0x16CD819CC9B85BFLL ^ v105 & 0xB) - 0x7E9327E633647A4CLL);
  unint64_t v110 = v107 ^ v109;
  uint64_t v111 = v110 ^ v99 ^ (v108 + 0x5E9B0BE2D8E1D042);
  *((void *)&v88 + 1) = v111 ^ 0x374;
  *(void *)&long long v88 = v111 ^ 0x2DEBA78A88D11800;
  uint64_t v112 = v111 ^ 0x5E9B0BE2D8E1D042 ^ ((v111 ^ 0x5E9B0BE2D8E1D042uLL) >> 17) ^ (v88 >> 10) ^ ((v111 ^ 0x5E9B0BE2D8E1D042) << 47);
  unint64_t v113 = v97 ^ 0xE3CF220AE2FEDEB8 ^ (((v98 ^ 0x7E9327E633647A4BLL) & v106)
                                     - ((2 * ((v98 ^ 0x7E9327E633647A4BLL) & v106)) & 0x9CF8FEFCD0ED12E0)
                                     - 0x3183808197897690);
  unint64_t v114 = ((v113 ^ v99 & ~v109) - ((2 * (v113 ^ v99 & ~v109)) & 0x2D9B03399370B68) - 0x7E9327E633647A4CLL) ^ v98;
  *((void *)&v88 + 1) = v114 ^ 0x38FE43D2BCLL;
  *(void *)&long long v88 = v114 ^ 0x3278F80000000000;
  uint64_t v115 = v103 + (v112 ^ 0x16EB95D00604E32ELL) - 2 * (v103 & (v112 ^ 0x16EB95D00604E32ELL));
  unint64_t v116 = __ROR8__(v114, 61) ^ (v114 << 25) ^ __ROR8__((v88 >> 38) ^ (v114 >> 39 << 26) ^ 0xC258A8B62E885BC3, 26);
  *((void *)&v88 + 1) = v110 ^ 0x548B80C;
  *(void *)&long long v88 = v110 ^ 0x7955EAEC48000000;
  unint64_t v117 = ((v110 & 0x3F) << 31) ^ 0xE04699B10F1F629ALL ^ (v88 >> 27);
  unint64_t v118 = (v110 >> 6) ^ (v110 >> 1) ^ (((v117 << 27) ^ (v110 << 63)) & 0xFFFFFFFFF8000000 | (v117 >> 37));
  unint64_t v119 = v116 ^ v118;
  unint64_t v120 = v116 ^ v118 ^ 0xC51AEF5B5CC303B1;
  unint64_t v121 = v120 ^ v115 & (v112 ^ 0xE9146A2FF9FB1CD1);
  unint64_t v122 = (v121 >> 1) ^ (v121 >> 6);
  unint64_t v123 = (v122 | (v121 << 63)) ^ (v121 << 58) ^ 0x82A267617DDD3C0DLL;
  uint64_t v124 = (v123 - 2 * (v123 & 0x7EBC29819D2C087ALL ^ v122 & 0x30) - 0x143D67E62D3F7B6) ^ v121;
  uint64_t v125 = v124 ^ 0x2D6637B2FD938C70;
  unint64_t v126 = (v118 ^ 0x853759C940934A2BLL) + (v120 | v116 ^ 0xBFD2496DE3AFB665) + 1;
  unint64_t v127 = v113 ^ v101;
  uint64_t v128 = (v127 >> 19) ^ (v127 << 36) ^ (v127 << 45) ^ 0x2A792D60982B22B5;
  uint64_t v129 = (v127 >> 28) ^ 0x6E04C1591;
  unint64_t v130 = v127 ^ 0x26C2CAED819D93A9 ^ (v128 - ((2 * v128) & 0x918C1769286C2B46) + 0x48C60BB4943615A3);
  unint64_t v131 = (v130 & 0x26452CB7C950B7B6 ^ v129 & 0x7C950B7B6 | v130 & 0xD9BAD34836AF4849 ^ v129 & 0x836AF4849) ^ v103;
  unint64_t v132 = v126 & 1;
  unint64_t v133 = (v126 & 0xFFFFFFFFFFFFFFFELL) - ((2 * v126) & 0xCF01D65F04156390) + 0x6780EB2F820AB1C8;
  if ((v132 & v131) != 0) {
    uint64_t v134 = v131 - v132 - ((2 * (v131 - v132)) & 0xCF01D65F04156390) + 0x6780EB2F820AB1C8;
  }
  else {
    uint64_t v134 = v131 ^ 0x6780EB2F820AB1C8 ^ v132;
  }
  unint64_t v135 = v134 ^ v133;
  uint64_t v136 = v116 ^ 0x402DB6921C50499ALL;
  unint64_t v137 = (v119 ^ 0x3AE510A4A33CFC4ELL) & (v112 ^ 0x16EB95D00604E32ELL) ^ v136 ^ v134 ^ v133;
  unint64_t v138 = ((8 * v137) ^ 0x12BB25DAC3BED128) & (v137 ^ 0x425764BB5877DA20) ^ __ROR8__(v137, 39) ^ (v137 ^ 0xBACDD3CE8F7A987ALL ^ (-(uint64_t)((v137 >> 61) ^ 2) - 0x765488A28F2BDA1) | (8 * v137) ^ 0x12BB25DAC3BED128);
  unint64_t v139 = v138 ^ 0xD7E1EF54E2AA4150 ^ (v125
                                      - 2 * ((v124 ^ 0x2D6637B2FD938C70) & 0x215100E0A82EEF9DLL ^ v124 & 4)
                                      - 0x5EAEFF1F57D11067);
  unint64_t v140 = v139 & 0xA9AD36174A77719DLL | (v138 ^ 0xD7E1EF54E2AA4150 ^ (v125
                                                                     - 2 * (v125 & 0x215100E0A82EEF9FLL ^ v124 & 6)
                                                                     + 0x215100E0A82EEF99)) & 0x5652C9E8B5888E62;
  unint64_t v141 = v140 - 2 * (v140 & 0x20E79BEA82685F7BLL ^ v139 & 0x10);
  unint64_t v142 = v136 & ~v131 ^ v115;
  unint64_t v143 = ((v142 + (v142 ^ 0x8F38572C0C9BC202) + 1) ^ 0xFFFFFFFFFFFFFFFELL) + v142;
  unint64_t v144 = v143 - 0x59F2A5370C103C39 + (~(2 * v143) | 0xB3E54A6E18207873);
  uint64_t v145 = v144 & 0x10000000000000 | 0x70EBFD95D6695370;
  if (((v144 >> 7) & v144 & 0x10000000000000) != 0) {
    uint64_t v145 = 0xE1D7FB2BACD2A6E0 - v145;
  }
  unint64_t v146 = v144 & 0xFFEFFFFFFFFFFFFFLL ^ (v144 >> 41) ^ (v144 << 23) ^ (v144 << 57) ^ (((v144 >> 7) ^ 0x14C1AB591E7DF87)
                                                                                   - 0x70EBFD95D6695370
                                                                                   + v145) ^ 0x4E74AD2910BCC56BLL;
  unint64_t v147 = v121 ^ v112 ^ ((v131 & ~v115) - ((2 * (v131 & ~v115)) & 0x97F0F6C0B590A44) - 0x7B407849FA537ADELL);
  unint64_t v148 = (v147 & 0x1000000000 | (v147 << 47)) ^ v147 & 0xFFFFFFEFFFFFFFFFLL ^ ((v147 >> 10) ^ (v147 >> 17) | (v147 << 54));
  *((void *)&v149 + 1) = v148 ^ 0x28800E8B16;
  *(void *)&long long v149 = v148 ^ 0x73200B0000000000;
  unint64_t v150 = v141 + 0x20E79BEA82685F6BLL;
  uint64_t v151 = v148 ^ 0x6D05C65A90D9DE49;
  uint64_t v152 = (v146 - ((2 * v146) & 0x3C4B9AE421AEAABELL) + 0x1E25CD7210D7555FLL) ^ v148 ^ 0x6D05C65A90D9DE49;
  uint64_t v153 = (v141 + 0x20E79BEA82685F6BLL) ^ v152 & (__ROR8__((v149 >> 38) ^ 0xE2AAF8192B2B27F8, 26) ^ 0x353601C75541F9B5);
  unint64_t v154 = ((v153 ^ 0xB2DC9F1EA9685FD0) + 0x6DC4FB0BD4FFFF45) ^ ((v153 ^ 0xDF1864157D97A094) + 1);
  uint64_t v155 = v153 ^ 0x60AF3E63C9FE1A68;
  unint64_t v156 = (v154 - ((2 * v154) & 0x80914B12972C8A06) + 0x4048A5894B964503) ^ v153 ^ 0x60AF3E63C9FE1A68;
  unint64_t v157 = v156 - ((2 * v156 - 0x247609E856000178) & 0xA5AFDCF64A7B9102) + 0x409CE986FA3DC7C5;
  *((void *)&v149 + 1) = (v156 - ((2 * v156 - 1442840952) & 0x4A7B9102) - 96614459) ^ 1u;
  *(void *)&long long v149 = v157 ^ 0xD2D7EE7B253DC880;
  uint64_t v158 = ((v149 >> 6) ^ (v157 >> 1) ^ ((v156 << 63) | 0x696BF73D929EE440))
       - 0x2D281184DAC23780
       - 2
       * (((v149 >> 6) ^ (v157 >> 1) ^ ((v156 << 63) | 0x696BF73D929EE440)) & 0x52D7EE7B253DC8A3 ^ ((v149 >> 6) ^ (v157 >> 1)) & 0x22);
  unint64_t v159 = (((2 * v150) ^ 0xBE30C82AFB2F4129) + (v150 ^ 0x20E79BEA82685F6BLL)) & (v148 ^ 0x73200B28800E8B16);
  unint64_t v160 = (v135 - ((2 * v135) & 0x6DB45E14F3AD28CALL) + 0x36DA2F0A79D69465) ^ v142;
  uint64_t v161 = ((v160 ^ 0x36DA2F0A79D69465) << 45) ^ ((v160 ^ 0x36DA2F0A79D69465) << 36) ^ v146 ^ __ROR8__(((v160 << 34) & 0xC000000000000000 | ((v160 ^ 0x36DA2F0A79D69465) >> 30)) ^ __ROR8__(v160 ^ 0x37EE2224DF3B75EALL ^ (((v160 >> 19) ^ 0x1425911DF1E7) - ((2 * ((v160 >> 19) ^ 0x1425911DF1E7)) & 0x1596A00A280ALL) - 0x693D5534AFFAEBFBLL), 2) ^ 0xA6115EFD9A53B36ELL, 62);
  unint64_t v162 = (v150 ^ 0x20E79BEA82685F6BLL) & (v138 ^ 0x894F104BB57B5136) ^ v161 ^ 0xE87B635F1624B3E6;
  unint64_t v163 = v162 ^ v138 ^ 0xD7E1EF54E2AA4150 ^ (v159 - ((2 * v159) & 0x42A201C1505DDF32) - 0x5EAEFF1F57D11067);
  *((void *)&v149 + 1) = v163 ^ 0x5BE354A5BB0B2;
  *(void *)&long long v149 = v163 ^ 0x6000000000000000;
  uint64_t v164 = (v158 + 1) ^ v157;
  uint64_t v165 = v163 ^ __ROR8__(v163, 39) ^ (v149 >> 61);
  unint64_t v166 = ((v161 ^ 0x3D9656FDEA6A2FLL ^ -(v161 ^ 0x3D9656FDEA6A2FLL) ^ ((v161 ^ 0xE87B635F1624B3E6)
                                                                     + 0x17B90AF614312637))
        + 0x17B90AF614312636) & (v138 ^ 0x76B0EFB44A84AEC9) ^ v152;
  unint64_t v167 = v166 ^ 0x2DB5B6AF87F64351 ^ ((v166 ^ 0x2DB5B6AF87F64351) >> 7) ^ ((v166 ^ 0x2DB5B6AF87F64351) << 23) ^ (((v166 ^ 0x2DB5B6AF87F64351) >> 41) | ((v166 ^ 0x2DB5B6AF87F64351) << 57));
  unint64_t v168 = (((v161 ^ 0xE87B635F1624B3E6) & ~v152)
        + 0x1E25CD7210D7555FLL
        + (~(2 * ((v161 ^ 0xE87B635F1624B3E6) & ~v152)) | 0xC3B4651BDE515541)
        + 1) ^ v151;
  unint64_t v169 = (v168 - ((2 * v168) & 0x80914B12972C8A06) + 0x4048A5894B964503) ^ v155;
  unint64_t v170 = v169 ^ (v169 << 54) ^ (v169 << 47) ^ (v169 >> 10) ^ (v169 >> 17);
  *(void *)&long long v149 = __ROR8__(__ROR8__(v162, 61) ^ 0x500CB82D79BEE91BLL, 3);
  unint64_t v171 = (((v166 ^ (unint64_t)v149) >> 19) ^ ((v166 ^ (unint64_t)v149) >> 28) | ((v166 ^ (unint64_t)v149) << 45)) ^ 0x21278C61855392E3;
  unint64_t v172 = v166 ^ v149 ^ ((v166 ^ (unint64_t)v149) << 36) ^ v167 ^ (v171
                                                                       - ((2 * v171) & 0xA5837C4598A999CCLL)
                                                                       - 0x2D3E41DD33AB331ALL);
  unint64_t v173 = v172 ^ 0xF5EC99A47815C5DALL;
  uint64_t v174 = v170 ^ 0x435E5D47FAAE2BFLL;
  unint64_t v175 = v170 ^ 0x435E5D47FAAE2BFLL ^ (v167 - ((2 * v167) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL);
  unint64_t v176 = (v172 ^ 0xA13665B87EA3A25) & (v165 ^ 0xA9109542E9BBBCELL) ^ v175;
  unint64_t v177 = v164 & (v165 ^ 0xF56EF6ABD1644431) ^ v172 ^ 0xF5EC99A47815C5DALL;
  *((void *)&v149 + 1) = v177 ^ v176 ^ 0x62F93;
  *(void *)&long long v149 = v177 ^ v176 ^ 0x69309AC4CA80000;
  uint64_t v178 = v177 ^ v176 ^ 0x78EEF9D17364E4DFLL ^ (((v149 >> 19) ^ ((v177 ^ v176) << 36) ^ 0xCAE2F93000000000)
                                             - 2
                                             * (((v149 >> 19) ^ ((v177 ^ v176) << 36) ^ 0xCAE2F93000000000) & 0x7E7DF07D3FCACB7ELL ^ (v149 >> 19) & 0x32)
                                             + 0x7E7DF07D3FCACB4CLL);
  uint64_t v179 = (v178 ^ -v178 ^ ((((v177 ^ v176) >> 28) ^ 0x69309AC4) - (v178 ^ ((v177 ^ v176) >> 28) ^ 0x69309AC4)))
       + (((v177 ^ v176) >> 28) ^ 0x69309AC4);
  unint64_t v180 = v179 + v41 - (a5 & (2 * v179));
  LOBYTE(v179) = *(unsigned char *)(a21 + (v180 ^ 0x99));
  *a28 = BYTE1(v180) ^ 0x92;
  a3[5] = ((v179 ^ 0x94) >> 6) | (4 * (v179 ^ 0x94));
  uint64_t v181 = (v180 >> 12) & 0xF0 | (v180 >> 20) & 0xF;
  LOBYTE(v179) = ((v180 >> 12) & 0xF0 | (v180 >> 20) & 0xF) ^ 0xED;
  *a29 = (*(unsigned char *)(v40 + (v181 ^ 0xED)) ^ 0xA1)
       + (v181 ^ 0x58)
       + (v181 ^ 0xCD)
       - 2 * (((v181 ^ 0x58) + (v181 ^ 0xCD)) & (*(unsigned char *)(v40 + (v181 ^ 0xED)) ^ 0xA1))
       - 122;
  LOBYTE(v181) = *(unsigned char *)(a21 + (BYTE3(v180) ^ 0x6DLL)) ^ 0x94;
  *a30 = (v181 >> 6) | (4 * v181);
  v165 ^= 0x6FDEE5B424470515uLL;
  unint64_t v182 = (v164 - ((2 * v164) & 0xCA9FD9C015B97DB6) + 0x654FECE00ADCBEDBLL) ^ v165;
  unint64_t v183 = (((v170 ^ 0xDD29049383F4B42DLL) & ~v182 ^ v177)
        - ((2 * ((v170 ^ 0xDD29049383F4B42DLL) & ~v182 ^ v177)) & 0xCA9FD9C015B97DB6)
        + 0x654FECE00ADCBEDBLL) ^ v165;
  *(void *)&long long v149 = __ROR8__((v183 >> 13) & 0x7000000000000 ^ __ROR8__(v183 ^ 0x8FFCFFC229DFFE59 ^ (((8 * v183) ^ (v183 << 25) ^ 0xBF0681A6CFCC6AD0)- 2* (((8 * v183) ^ (v183 << 25) ^ 0xBF0681A6CFCC6AD0) & 0x6DFFF195A6A67328 ^ (8 * v183) & 0x28)- 0x12000E6A59598CFDLL), 16) ^ 0x59AF12027FFB7224, 48);
  uint64_t v184 = (v149 ^ -(uint64_t)v149 ^ (((v183 >> 39) ^ 0xC4061C) - (v149 ^ (v183 >> 39) ^ 0xC4061C)))
       + ((v183 >> 39) ^ 0xC4061C);
  LODWORD(v162) = *(unsigned __int8 *)(a13
                                     + ((((v180 >> 31) & 0xB8 ^ 0x88) + (BYTE4(v180) ^ 0x1A)) ^ 0x77));
  DWORD1(v149) = (v162 >> 6) ^ 0x7F ^ -((v162 >> 6) ^ 0x7F) ^ (((v162 >> 6) | (8 * v162))
                                                                                         - 127);
  LODWORD(v149) = (DWORD1(v149) + 4 * v162) << 24;
  a3[1] = v184 ^ 0xAC;
  a23[6] = (BYTE6(v180) ^ 0xBA) - ((2 * (BYTE6(v180) ^ 0xBA)) & 0xAC) + 86;
  a3[4] = BYTE2(v184) ^ 0x24;
  *a31 = (unint64_t)v149 >> 26;
  unint64_t v185 = v182 ^ (v170 ^ 0x22D6FB6C7C0B4BD2) & v167;
  unint64_t v186 = (v185 >> 1) ^ (v185 >> 6) ^ ((v185 << 58) ^ 0xB800000000000000) & 0xE7FFFFFFFFFFFFFFLL ^ (((v185 << 58) ^ 0xB800000000000000) & 0x1800000000000000 ^ v185 & 0x183B3BDBC4516A26 | v185 & 0xE7C4C4243BAE95D9 ^ (v185 << 63));
  a23[12] = (BYTE3(v184) ^ 0x72) - 2 * ((BYTE3(v184) ^ 0x72) & 0x5E ^ BYTE3(v184) & 8) + 86;
  *(unsigned char *)(a24 + 29) = HIBYTE(v180) ^ 0x32;
  a23[13] = (BYTE5(v180) ^ 0x13) - ((2 * (BYTE5(v180) ^ 0x13)) & 0xAC) + 86;
  a19[6] = (v184 ^ 0x12027FFB722459ACuLL) >> (v179 & 8) >> (~(_BYTE)v179 & 8);
  LODWORD(v179) = *(unsigned __int8 *)(a13 + (((BYTE4(v184) ^ 0xFB) - 36) ^ 0x77));
  a19[4] = BYTE6(v184) ^ 2;
  *a3 = HIBYTE(v184) ^ 0x12;
  a19[2] = ((unsigned __int16)((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 8) ^ 5;
  *a33 = BYTE5(v184) ^ 0x7F;
  LODWORD(v181) = (((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 16);
  a3[2] = (v185 >> 1) ^ (v185 >> 6) ^ v185 ^ 0xDB;
  *a19 = ((((v179 >> 6) | (4 * v179)) ^ 0x7F) >> 2) | ((((v179 >> 6) | (4 * v179)) ^ 0x7F) << 6);
  LOBYTE(v179) = *(unsigned char *)(a12
                          + (((v181 ^ 0x76) + (v181 ^ 0xFFFFFFAA) + 1) ^ 0xFFFFFFFE)
                          + (v181 ^ 0x76));
  *a32 = (((v185 >> 1) ^ (v185 >> 6) ^ v185) >> 24) ^ 0x87;
  unint64_t v187 = ((v185 ^ v173 & ~v175) - ((2 * (v185 ^ v173 & ~v175)) & 0xB239C28FF8BCAD24) - 0x26E31EB803A1A96ELL) ^ v174;
  unint64_t v188 = v187
       - ((2 * v187) & 0x9E2B77E5823BC0A6)
       + 0x4F15BBF2C11DE053
       - ((2 * (v187 - ((2 * v187) & 0x9E2B77E5823BC0A6) + 0x4F15BBF2C11DE053)) & 0xD353878DB8FE41B0)
       + 0x69A9C3C6DC7F20D8;
  a3[3] = BYTE6(v186) ^ 0x5D;
  LOBYTE(v179) = (v179 ^ 0xF2 ^ (16 * v179) & 0x40) & 7 ^ 0x35 ^ ((unint64_t)((v179 ^ 0xF2 ^ (16 * v179) & 0x40) >> 3) << ((v184 ^ 0xAC) & (v184 ^ 0x50)) << ((v184 ^ 0xAC) & (v184 ^ 0x50) ^ 3));
  unint64_t v189 = v188 ^ (v188 << 47) ^ (v188 >> 10) ^ (v188 << 54);
  unint64_t v190 = v189 ^ (v188 >> 17);
  a3[11] = v190 ^ 0x2F;
  *(unsigned char *)(a24 + 28) = BYTE5(v186) ^ 0x22;
  a3[13] = ((v179 >> 3) | (32 * v179)) ^ 0xA6;
  *a26 = BYTE2(v190) ^ 0x2B;
  unint64_t v191 = v176 ^ (v176 << 23) ^ ((v176 >> 7) ^ (v176 >> 41) | (v176 << 57));
  uint64_t v192 = (v190 >> 20) & 0xF0 | (v190 >> 28);
  a23[8] = (HIBYTE(v186) ^ 0xA1) - ((2 * HIBYTE(v186)) & 0xAC) + 86;
  a23[17] = (BYTE4(v186) ^ 0x3C) + (~(2 * (BYTE4(v186) ^ 0x3C)) | 0x53) + 87;
  a23[11] = (BYTE1(v190) ^ 0x51) - ((2 * (BYTE1(v190) ^ 0x51)) & 0xAC) + 86;
  LOBYTE(v190) = *(unsigned char *)(v40 + (v192 ^ 0x32));
  *(unsigned char *)a24 = BYTE6(v189) ^ 0xDF;
  char v193 = v190 ^ ((v192 ^ 0x12) + (v192 ^ 0x87)) ^ 0xA1;
  *a34 = BYTE5(v190) ^ 0x9D;
  *(unsigned char *)(a24 + 15) = v42 ^ BYTE3(v191);
  a23[19] = v191 ^ 0xC4;
  a19[5] = BYTE1(v191) ^ 0x3D;
  a3[8] = BYTE2(v191) ^ 3;
  a23[18] = v193 - 2 * ((v193 + 6) & 0x57 ^ v193 & 1) - 36;
  a3[6] = BYTE4(v190) ^ 0x62;
  a19[7] = HIBYTE(v189) ^ 0xCF;
  unsigned __int8 v194 = *(unsigned char *)(a21 + (BYTE4(v191) ^ 0x19)) ^ 0x94;
  *(unsigned char *)(a24 + 14) = BYTE5(v191) ^ 0x49;
  a19[3] = HIBYTE(v191) ^ 0xBE;
  a19[1] = BYTE6(v191) ^ 0x75;
  *(unsigned char *)(a24 + 16) = (v194 >> 6) | (4 * v194);
  *(_DWORD *)(a24 + 4) = a15 - 2138037661;
  JUMPOUT(0x1B025EE38);
}

uint64_t sub_1B025EE9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned __int8 a26)
{
  return (*(uint64_t (**)(void))(v26
                              + 8
                              * (((16 * (((v27 > 0xC67234D7) ^ a26) & 1)) & 0xDF | (32 * (((v27 > 0xC67234D7) ^ a26) & 1))) ^ (v28 + 1174669690))))();
}

uint64_t sub_1B025EEF8(char a1, int a2, char a3, int a4, int8x16_t a5, int8x8_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  char v57 = v50 - 8;
  uint64_t v58 = (a4 + a2 - 8);
  v60.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)a2 - 8) & 0xF;
  v60.val[0].i64[1] = ((_BYTE)a4 + v57) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a4 + v54 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a4 + v53 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a4 + a3 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a4 + a1 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a4 + v57 + (v55 ^ 0xC)) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a4 + v51 - 8) & 0xF;
  *(int8x8_t *)(a10 + v58) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v47 + (v58 & 0xF) - 7), *(int8x8_t *)(a10 + v58)), veor_s8(*(int8x8_t *)((v58 & 0xF) + v49 - 5), *(int8x8_t *)((v58 & 0xF) + v48 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a5), a6)));
  return (*(uint64_t (**)(void))(a47 + 8 * (((a4 != v52 + 8) * v56) ^ a8)))();
}

uint64_t sub_1B025EF1C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((825
                                * (((v1 + (((v3 - 615) | 0x112) ^ 0x7E9) - 1663) & (2
                                                                                  * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ ((v3 - 615) | 0x112))))();
}

uint64_t sub_1B025EF78@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v4 + v6));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v5) ^ a1)))();
}

uint64_t sub_1B025EF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a14 = &STACK[0x2F7E69BD89C710D];
  a16 = 501 - 460628867 * (((&a14 | 0x98AB1C2F) - (&a14 & 0x98AB1C2F)) ^ 0xD43D9E52);
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 17104))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1268 * (a15 == ((v18 - 396) ^ 0x27C))) ^ v16)))(v19);
}

uint64_t sub_1B025F028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 535753261 * ((~((v19 - 136) | 0x43BBA8D6) + ((v19 - 136) & 0x43BBA8D6)) ^ 0xB6B05906);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v20 + (v16 ^ 0x2B0) + v14 + 1558070844;
  *(_DWORD *)(v19 - 124) = v20 + v16 + 943;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x884)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = ((v16 ^ 0x2B0) + 490) ^ (1374699841
                                                  * ((486019166 - ((v19 - 136) | 0x1CF8105E) + ((v19 - 136) | 0xE307EFA1)) ^ 0x8EF3F7A8));
  *(void *)(v19 - 128) = v17;
  *(void *)(v19 - 120) = a14;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * ((v16 ^ 0x2B0) + 1519)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v19 - 132) <= 25 * (v16 ^ 0xD0u) + 645999113)
                                              * ((v16 ^ 0x2B0) - 348)) ^ v16 ^ 0x2B0)))(v21);
}

uint64_t sub_1B025F164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = (v17 + 704) ^ (1374699841
                                        * ((2 * ((v18 - 136) & 0x4A0D4328) - (v18 - 136) - 1242383148) ^ 0xD806A4DD));
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1733)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) == v15 + 2) * (2 * (v17 + 383) - 1470)) | v17)))(v19);
}

uint64_t sub_1B025F200()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v0 + 8 * (v3 + 1838)))(((v3 + 1944921513) & 0x8C12DFFF ^ 0xB3713143 ^ ((v3 - 296) | 0x102)) + *(_DWORD *)(v2 + 24 * v1 + 16), 2970849626) != 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (v4 | (8 * v4) | v3)))();
}

uint64_t sub_1B025F284(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, void))(v2
                                                    + 8
                                                    * ((14
                                                      * (((v1 + 92) ^ 0xAF ^ (((v1 - 1956) | 0x201)
                                                                                             + *(_DWORD *)(v3 - 0x7761D79CB8DF4D07)
                                                                                             - 1359519531 == 0)) & 1)) ^ v1)))(a1, *(void *)(v3 - 0x7761D79CB8DF4D13));
}

uint64_t sub_1B025F2FC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1083
                                * (**(_DWORD **)(v2 + 8 * (v1 ^ 0x3DD)) == ((v1 + 1258527437) & 0xB4FC65FF) - 1223)) ^ v1)))();
}

uint64_t sub_1B025F358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v29 - 112) = v25;
  *(void *)(v29 - 104) = a25;
  *(_DWORD *)(v29 - 120) = (v26 + 146) ^ (((((v29 - 120) | 0x33721CEE) - (v29 - 120) + ((v29 - 120) & 0xCC8DE310)) ^ 0x5E8604E7)
                                        * v28);
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (int)(v26 + 1175)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8 * ((52 * (*(_DWORD *)(v29 - 116) - 645999915 < v26 - 37941721)) ^ v26)))(v30);
}

uint64_t sub_1B025F3F8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((*(void *)(v2 + 8) == 0x950CE2110AB3F3FLL)
                                     * (a2 ^ 0x6FC ^ (a2 + 1516272499) & 0xA59F7DF1)) ^ a2)))();
}

uint64_t sub_1B025F450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v37 = (*(_DWORD *)(v36 + v31) ^ v27) + HIDWORD(v35);
  *(_DWORD *)(v36 + 4 * a3) = v37 + v27 - ((v37 << (v34 - 67)) & (v28 + v34 - 958 - 390));
  *(_DWORD *)(a27 + v31) = HIDWORD(v37) | v27;
  BOOL v39 = v30 + 644991003 > 601327475 || v30 + 644991003 < v29;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v34 - 721) ^ (v39 * v32))))();
}

void sub_1B025F4D0()
{
  int v2 = (v7 - 1922018004) & 0x76D6CFE9;
  uint64_t v3 = *v8;
  if (((unint64_t)*v8 & 3) == ((v7 + 71771552) ^ v2 ^ 0x19ALL))
  {
    BOOL v4 = *(&off_1F08CDB40 + v7 + 71769796);
    if (!*v4)
    {
      int v5 = v2 - 1429;
      void *v4 = v3;
      *(_DWORD *)*(&off_1F08CDB40 + (v2 ^ 0x6C1u)) = 255;
      *v3 |= ~v3[*v3 & 0x3ELL] << 16;
      v3[4] |= ~v3[v3[4] & 0x3ELL] << ((((v7 + 44) & 0xE9) + 107) ^ 0x24);
      v3[8] |= ~v3[v3[8] & 0x3ELL] << 16;
      v3[12] |= ~v3[v3[12] & 0x3ELL] << 16;
      v3[16] |= ~v3[v3[16] & 0x3ELL] << 16;
      v3[20] |= ~v3[v3[20] & 0x3ELL] << 16;
      v3[24] |= ~v3[v3[24] & 0x3ELL] << 16;
      v3[28] |= ~v3[v3[28] & 0x3ELL] << 16;
      v3[32] |= ~v3[v3[32] & 0x3ELL] << 16;
      v3[36] |= ~v3[v3[36] & 0x3ELL] << 16;
      v3[40] |= ~v3[v3[40] & 0x3ELL] << 16;
      v3[44] |= ~v3[v3[44] & 0x3ELL] << 16;
      v3[48] |= ~v3[v3[48] & 0x3ELL] << 16;
      v3[52] |= ~v3[v3[52] & 0x3ELL] << 16;
      v3[56] |= ~v3[v3[56] & 0x3ELL] << 16;
      v3[60] |= ~v3[v3[60] & 0x3ELL] << 16;
      (*(void (**)(uint64_t *, void, uint64_t))(v0 + 8 * (v2 ^ 0xE68u)))(&v9, 0, 1024);
      __asm { BRAA            X12, X17 }
    }
  }
  _DWORD *v6 = 1373504825;
}

uint64_t sub_1B025F814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(a6 + 1) = *(unsigned char *)(a8 + (v9 - 158929245));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((2300 * ((v9 & ((v8 - 1496599054) & 0x59344934 ^ 0xFFFFFFEC)) == 158929244)) ^ v8)))();
}

uint64_t sub_1B025F88C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((v2 - 861803743) & 0x335E176F ^ 0x457) * (a1 != 0x689170CABB1BB2A6)) ^ v2)))();
}

uint64_t sub_1B025F8E8@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v5 + v3)) = *(unsigned char *)(v2 + (v5 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 1 != a2) | (8 * (v5 - 1 != a2))) ^ v4)))();
}

uint64_t sub_1B025F914(uint64_t a1, int a2, int a3)
{
  BOOL v6 = a2 - 863443013 > 34 * (a3 ^ 0x5C2) + 1833582302 || a2 - 863443013 < v4;
  return (*(uint64_t (**)(void))(v3 + 8 * ((718 * v6) ^ a3)))();
}

uint64_t sub_1B025F974()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v2 - 151162646) & 0x59EAEFFB) + ((v2 - 389) ^ (v4 + 2275))) * (v0 - v1 == 644837419)) ^ v2)))();
}

uint64_t sub_1B025F9D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int32x4_t a61,int32x4_t a62,int32x4_t a63)
{
  int v78 = a52 ^ 0xCE;
  if (v78 == 1)
  {
    LOBYTE(a47) = ((8 * BYTE4(a48)) ^ 0x78) - ((2 * ((8 * BYTE4(a48)) ^ 0x78)) & 0xC0) - 27;
    BYTE1(a47) = ((v73 + 90) ^ (HIDWORD(a48) >> 5)) - (a7 & (2 * ((v73 + 90) ^ (HIDWORD(a48) >> 5)))) - 27;
    int v81 = v73 + 865;
    BYTE2(a47) = ((HIDWORD(a48) >> 13) ^ 0x79)
               - 2 * (((HIDWORD(a48) >> 13) ^ 0x79) & 0xE7 ^ (HIDWORD(a48) >> 13) & 2)
               - 27;
    BYTE3(a47) = ((HIDWORD(a48) >> 21) ^ 0x71) - (a7 & (2 * ((HIDWORD(a48) >> 21) ^ 0x71))) - 27;
    HIDWORD(v84) = a48 ^ 0x12;
    LODWORD(v84) = HIDWORD(a48) ^ 0xC0000000;
    BYTE4(a47) = (v84 >> 29) - (a7 & (2 * (v84 >> 29))) - 27;
    BYTE5(a47) = ((a48 >> 5) ^ 0x7F) - (a7 & (2 * ((a48 >> 5) ^ 0x7F))) - 27;
    BYTE6(a47) = ((a48 >> 13) ^ 0xC0) - (a7 & (2 * ((a48 >> 13) ^ 0xC0))) - 27;
    unsigned int v83 = ((a48 >> 21) ^ 0xFFFFFF94) + (~(2 * ((a48 >> 21) ^ 0xFFFFFF94)) | 0x35) - 26;
    uint64_t v80 = a31;
  }
  else
  {
    int v79 = v73;
    uint64_t v80 = a31;
    if (v78 != 2) {
      goto LABEL_6;
    }
    int v81 = v73 + 865;
    HIDWORD(v82) = a48 ^ 0x12;
    LODWORD(v82) = HIDWORD(a48) ^ 0xC0000000;
    LOBYTE(a47) = v73
                + 97
                + ((a48 >> 21) ^ 0x94)
                - 2 * (((a48 >> 21) ^ 0x94) & 0xE7 ^ (a48 >> 21) & 2)
                + 116;
    BYTE1(a47) = ((a48 >> 13) ^ 0xC0)
               + ~(2 * (((a48 >> 13) ^ 0xC0) & 0x6D ^ (a48 >> 13) & 8))
               - 26;
    BYTE2(a47) = ((a48 >> 5) ^ 0x7F) - (a7 & (2 * ((a48 >> 5) ^ 0x7F))) - 27;
    BYTE3(a47) = (v82 >> 29) - (a7 & (2 * (v82 >> 29))) - 27;
    BYTE4(a47) = ((HIDWORD(a48) >> 21) ^ 0x71)
               - 2 * (((HIDWORD(a48) >> 21) ^ 0x71) & 0xE7 ^ (HIDWORD(a48) >> 21) & 2)
               - 27;
    BYTE5(a47) = ((HIDWORD(a48) >> 13) ^ 0x79) - (a7 & (2 * ((HIDWORD(a48) >> 13) ^ 0x79))) - 27;
    BYTE6(a47) = ((HIDWORD(a48) >> 5) ^ 0x6A) - (a7 & (2 * ((HIDWORD(a48) >> 5) ^ 0x6A))) - 27;
    unsigned int v83 = ((8 * HIDWORD(a48)) ^ 0x78) - (((8 * HIDWORD(a48)) ^ 0x78u) >> 5 << 6) - 27;
  }
  int v79 = v81 - 865;
  HIBYTE(a47) = v83;
LABEL_6:
  unint64_t v85 = *(uint64_t (**)(uint64_t))(v65 + 8 * (v79 + 19));
  uint64_t v86 = HIDWORD(a49);
  int v87 = a52 ^ 0xCE;
  if (v87 == 2)
  {
    int8x16x4_t v142 = vld4q_s8((const char *)&a40);
    uint8x16_t v120 = (uint8x16_t)veorq_s8(v142.val[0], v74);
    uint16x8_t v121 = vmovl_u8(*(uint8x8_t *)v120.i8);
    uint16x8_t v122 = vmovl_high_u8(v120);
    uint8x16_t v123 = (uint8x16_t)veorq_s8(v142.val[1], v74);
    _Q17 = vmovl_u8(*(uint8x8_t *)v123.i8);
    _Q16 = vmovl_high_u8(v123);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    uint8x16_t v128 = (uint8x16_t)veorq_s8(v142.val[2], v74);
    uint16x8_t v129 = vmovl_high_u8(v128);
    uint16x8_t v130 = vmovl_u8(*(uint8x8_t *)v128.i8);
    v142.val[0] = veorq_s8(v142.val[3], v74);
    v142.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v142.val[0]);
    v142.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v142.val[1]);
    v142.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v142.val[1].i8);
    v142.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v142.val[0].i8);
    v142.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v142.val[0]);
    v142.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v142.val[0].i8);
    int32x4_t v131 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v130.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v121.i8), 0x18uLL)), v142.val[0]);
    int32x4_t v132 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v130, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v121), 0x18uLL)), v142.val[3]);
    int32x4_t v133 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v129.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v122.i8), 0x18uLL)), v142.val[1]);
    int32x4_t v134 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v129, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v122), 0x18uLL)), v142.val[2]);
    v142.val[0] = veorq_s8(vandq_s8((int8x16_t)v131, v75), (int8x16_t)(*(_OWORD *)v142.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v142.val[3] = veorq_s8(vandq_s8((int8x16_t)v132, v75), (int8x16_t)(*(_OWORD *)&v142.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v142.val[1] = veorq_s8(vandq_s8((int8x16_t)v133, v75), (int8x16_t)(*(_OWORD *)&v142.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v142.val[2] = veorq_s8(vandq_s8((int8x16_t)v134, v75), (int8x16_t)(*(_OWORD *)&v142.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    a63 = vaddq_s32(vsubq_s32(v133, vaddq_s32((int32x4_t)v142.val[1], (int32x4_t)v142.val[1])), v76);
    a64 = vaddq_s32(vsubq_s32(v134, vaddq_s32((int32x4_t)v142.val[2], (int32x4_t)v142.val[2])), v76);
    a61 = vaddq_s32(vsubq_s32(v131, vaddq_s32((int32x4_t)v142.val[0], (int32x4_t)v142.val[0])), v76);
    a62 = vaddq_s32(vsubq_s32(v132, vaddq_s32((int32x4_t)v142.val[3], (int32x4_t)v142.val[3])), v76);
    unint64_t v135 = (_DWORD *)(v64 + 4 * (v68 + 1950094482));
    int v136 = *(v135 - 8) ^ *(v135 - 3);
    int v137 = v136 + v69 - ((2 * v136) & 0x5C42BD0C);
    int v138 = *(v135 - 16) ^ *(v135 - 14);
    HIDWORD(v139) = v138 ^ HIDWORD(a35) ^ v137;
    LODWORD(v139) = v138 ^ ~v137;
    *unint64_t v135 = (v139 >> 31) + v69 - ((2 * (v139 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(uint64_t))(v65 + 8 * (int)((335 * (v72 == 1950094419)) ^ a36)))(v86);
  }
  else if (v87 == 1)
  {
    uint64_t v140 = *(void *)(v65 + 8 * (v79 + 19));
    int8x16x4_t v141 = vld4q_s8((const char *)&a40);
    uint8x16_t v88 = (uint8x16_t)veorq_s8(v141.val[0], v74);
    uint16x8_t v89 = vmovl_u8(*(uint8x8_t *)v88.i8);
    int8x16_t v90 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v89.i8);
    int8x16_t v91 = (int8x16_t)vmovl_high_u16(v89);
    uint16x8_t v92 = vmovl_high_u8(v88);
    int8x16_t v93 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v92.i8);
    int8x16_t v94 = (int8x16_t)vmovl_high_u16(v92);
    uint8x16_t v95 = (uint8x16_t)veorq_s8(v141.val[1], v74);
    uint16x8_t v96 = vmovl_high_u8(v95);
    uint16x8_t v97 = vmovl_u8(*(uint8x8_t *)v95.i8);
    uint8x16_t v98 = (uint8x16_t)veorq_s8(v141.val[2], v74);
    _Q21 = (int8x16_t)vmovl_high_u8(v98);
    _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v98.i8);
    int8x16_t v101 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
    __asm { SHLL2           V20.4S, V20.8H, #0x10 }
    int8x16_t v106 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    v141.val[0] = veorq_s8(v141.val[3], v74);
    v141.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v141.val[0]);
    v141.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v141.val[1]);
    v141.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v141.val[0].i8);
    v141.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v141.val[0]);
    v141.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v141.val[0].i8), 0x18uLL), v101), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v97.i8, 8uLL), v90));
    v141.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v141.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v97, 8uLL), v91));
    v141.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v141.val[1].i8), 0x18uLL), v106), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v96.i8, 8uLL), v93));
    v141.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v141.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v96, 8uLL), v94));
    int32x4_t v107 = (int32x4_t)veorq_s8(vandq_s8(v141.val[0], v77), (int8x16_t)(*(_OWORD *)&v90 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v108 = (int32x4_t)veorq_s8(vandq_s8(v141.val[3], v77), (int8x16_t)(*(_OWORD *)&v91 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v109 = (int32x4_t)veorq_s8(vandq_s8(v141.val[1], v77), (int8x16_t)(*(_OWORD *)&v93 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v110 = (int32x4_t)veorq_s8(vandq_s8(v141.val[2], v77), (int8x16_t)(*(_OWORD *)&v94 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a63 = vaddq_s32(vsubq_s32((int32x4_t)v141.val[1], vaddq_s32(v109, v109)), v76);
    a64 = vaddq_s32(vsubq_s32((int32x4_t)v141.val[2], vaddq_s32(v110, v110)), v76);
    a61 = vaddq_s32(vsubq_s32((int32x4_t)v141.val[0], vaddq_s32(v107, v107)), v76);
    a62 = vaddq_s32(vsubq_s32((int32x4_t)v141.val[3], vaddq_s32(v108, v108)), v76);
    uint64_t v111 = v72 - 16;
    uint64_t v112 = (v67 - 628) | 0x286u;
    unint64_t v113 = (char *)*(&off_1F08CDB40 + v67 - 598) - 12;
    unint64_t v114 = (char *)*(&off_1F08CDB40 + (int)a35) - 8;
    int v115 = (a49 ^ v66)
         + v70
         + ((HIDWORD(a50) ^ v66) & (HIDWORD(a49) ^ 0xADD28C95) | (v112 ^ (v66 - 430) ^ a50) & (HIDWORD(a49) ^ v66))
         + *(_DWORD *)&v114[4 * v111 + 4 * v68]
         + (*(_DWORD *)(v64 + 4 * (v113[v111 + v68] - 68)) ^ v69);
    uint64_t v116 = (uint64_t)*(&off_1F08CDB40 + v67 - 632);
    unsigned int v117 = (v115 + v66 - (v71 & (2 * v115))) ^ v66;
    int v118 = ((v117 << (*(unsigned char *)(v116 + v111 + v68) - 26)) | (v117 >> (26 - *(unsigned char *)(v116 + v111 + v68))))
         + (HIDWORD(a49) ^ v66);
    LODWORD(a32) = a52 ^ 0xFFFFFFCE;
    return (*(uint64_t (**)(void, char *, char *, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v65 + 8 * v67))(HIDWORD(a49), v113, v114, v116, v118 + v66 - (v71 & (2 * v118)), v112, v72 - 15, *(void *)(v65 + 8 * v67), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             v80,
             a32,
             v140,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57,
             a58,
             a59,
             a60);
  }
  else
  {
    LODWORD(a49) = 2 * (a49 ^ v66) + v66 - (v71 & (4 * (a49 ^ v66)));
    HIDWORD(a49) = 2 * (HIDWORD(a49) ^ v66) + v66 - (v71 & (4 * (HIDWORD(a49) ^ v66)));
    LODWORD(a50) = 2 * (a50 ^ v66) + v66 - (v71 & (4 * (a50 ^ v66)));
    HIDWORD(a50) = 2 * (HIDWORD(a50) ^ v66) + v66 - (v71 & (4 * (HIDWORD(a50) ^ v66)));
    return v85(v86);
  }
}

uint64_t sub_1B025FBF8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1753
                                * (*(_DWORD *)(a1 + 4
                                                  * (((23 * (v2 ^ 0x660)) ^ 0x2D6 ^ (v3 + 668)) + v5)) == v1)) ^ (v2 - 960))))();
}

void sub_1B025FC48()
{
}

uint64_t sub_1B025FDE8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((117 * (*(unsigned char *)(a1 + v2) == 94)) ^ v1)))();
}

uint64_t sub_1B025FE30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v27 - 104) = (v25 + 973) ^ (1734042137
                                        * ((2 * ((v27 - 120) & 0x65AB1798) - (v27 - 120) - 1705711513) ^ 0xC69A2B2A));
  *(void *)(v27 - 120) = a25;
  *(void *)(v27 - 112) = a21;
  (*(void (**)(uint64_t))(v26 + 8 * (v25 + 1640)))(v27 - 120);
  *(void *)(v27 - 112) = a23;
  *(void *)(v27 - 104) = a25;
  *(_DWORD *)(v27 - 120) = (v25 + 685) ^ (1374699841
                                        * ((1825418699 - ((v27 - 120) | 0x6CCDADCB) + ((v27 - 120) | 0x93325234)) ^ 0xFEC64A3D));
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v25 + 1714)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v27 - 116) > 0x26812D29u)
                                              * ((v25 + 190) ^ 0x3DE ^ (140 * (v25 ^ 0x17F)))) ^ v25)))(v28);
}

uint64_t sub_1B025FF74()
{
  return 4294925278;
}

uint64_t sub_1B025FF7C(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((47 * (a4 + a3 + 545783810 < ((a2 - 1090) ^ (a2 - 1082)))) ^ a2)))();
}

uint64_t sub_1B025FFCC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  HIDWORD(v18) = a1 ^ a7;
  LODWORD(v18) = (275 * (v7 ^ 0x204)) ^ a1 ^ 0x55555555;
  int v19 = (v18 >> 27)
      + (a2 ^ v10)
      + (*(_DWORD *)(v8 + 4 * (a5 + v15)) ^ v11)
      + ((v13 ^ v10 | v17 ^ v10) & (v9 ^ v10) | (v13 ^ v10) & (v17 ^ v10));
  return (*(uint64_t (**)(void, uint64_t))(v14 + 8 * (v7 | (32 * (a5 + 1 == v16 + 44)))))(v19 - ((2 * v19 + 506952120) & v12) - 515297210, v13);
}

uint64_t sub_1B0260090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = (v16 - 1965393939) & 0x7525836F;
  int v20 = 535753261
      * (((((v18 - 136) ^ 0x25058434 | 0xCA7A79C2) ^ 0xFFFFFFFE) - ((v18 - 136) ^ 0xA006080 | 0x3585863D)) ^ 0xDA0E1564);
  *(void *)(v18 - 136) = v17;
  *(_DWORD *)(v18 - 128) = v20 + v14 + v19 + 850856627;
  *(_DWORD *)(v18 - 124) = v20 + v16 - 335;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 646)))(v18 - 136);
  *(void *)(v18 - 128) = a12;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = (v19 + 735) ^ (1374699841
                                        * ((2 * (((v18 - 136) ^ 0x16C7926F) & 0x37D42D5D)
                                          - ((v18 - 136) ^ 0x16C7926F)
                                          + 1210831522) ^ 0x331858C4));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v19 + 1764)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) > 0x26812D29u)
                                              * (((v19 - 610295155) & 0x24605EAF) - 626)) ^ v19)))(v21);
}

uint64_t sub_1B02601F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < a5 - 1884) * (((a5 - 1876) | 0x80) ^ 0x45)) ^ a5)))();
}

uint64_t sub_1B0260248(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, char a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  if (a16 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
  }
                                                                + 8
                                                                * ((225
                                                                  * (a36 == ((a4 - 422543519) & 0x4FA8BEF3 ^ 0x4EC91566))) ^ (a4 + a5))))(a1, 913915477, -3381051899);
  if (a16 != 1) {
    JUMPOUT(0x1B02603E8);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
                                                              + 8
                                                              * ((1102
                                                                * ((((a4 + 913915572) ^ (a36 == 1321801015)) & 1) == 0)) ^ (a4 + 913915572))))(a1, a2, -3381051899);
}

uint64_t sub_1B0260418@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v4 + v3) = *(unsigned char *)(v6 + (a2 + v7))
                      - (v9 & (2 * *(unsigned char *)(v6 + (a2 + v7))))
                      - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v3 != 63) * v5) ^ (a1 + v2 + 131))))();
}

uint64_t sub_1B0260460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46)
{
  int v48 = HIDWORD(a11) + a46 - (((HIDWORD(a11) << ((v46 + 18) ^ 0x19)) + 244002942) & 0x2B8E84E6) - 1123232474;
  unsigned int v49 = ((2 * v48) & 0xB4DFFE7E ^ 0x208E8466) + (v48 ^ 0xCFA8BD4C);
  BOOL v51 = ((v49 + ((v46 + 18) ^ 0x5F5) - 1004) & ((v46 + 18) ^ 0x617)) == 0 && v49 != -630194369;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * ((v46 + 18) ^ (32 * v51))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

void sub_1B026051C(_DWORD *a1@<X8>)
{
  int v3 = *(_DWORD *)(v1 + 16) ^ v2;
  unsigned char *v4 = (HIBYTE(v3) ^ 0xD7) - ((2 * (HIBYTE(v3) ^ 0xD7)) & 0xCA) - 27;
  v4[1] = (BYTE2(v3) ^ 0x3D) - ((2 * (BYTE2(v3) ^ 0x3D)) & 0xCA) - 27;
  _DWORD v4[2] = (BYTE1(v3) ^ 0xC) - 2 * ((BYTE1(v3) ^ 0xC) & 0xE7 ^ BYTE1(v3) & 2) - 27;
  v4[3] = v3 ^ 0x15;
  *(_DWORD *)(v1 + 12) = *a1;
}

uint64_t sub_1B02605C4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((216 * ((v0 & 0x1F ^ 0xF) == (((v1 - 1568) | 0x280) ^ 0x2B8))) ^ v1)))();
}

void sub_1B0260604()
{
}

uint64_t sub_1B0260610(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  int v33 = a2 + v30;
  *(_DWORD *)(a27 + 4 * (v33 + v31)) = v27;
  BOOL v35 = v33 + a3 > a4 || v33 + a3 <= v29;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v35 | (2 * v35)) ^ (v28 + 564))))();
}

uint64_t sub_1B026061C@<X0>(int a1@<W8>)
{
  BOOL v4 = v1[7] == 0xDE78D69D6C1C02DLL || (v1[3] | v1[6]) == 0;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((25 * ((a1 - 42) ^ 0xDB)) ^ v4) & 1)
                                     * ((a1 + 1941569956) & 0x8C45FE5B ^ 0x5EB)) ^ (a1 - 1066))))();
}

uint64_t sub_1B026069C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21,int a22,uint64_t a23,uint64_t a24,int a25)
{
  int v27 = (a25 ^ a8) - (a21 & (2 * (a25 ^ a8))) + 1602200845;
  return (*(uint64_t (**)(void))(v25
                              + 8
                              * ((175
                                * ((((a22 & 0x53060F6F) - 301165) & (2 * v27) ^ 0xBEFB421A)
                                 + (v27 ^ 0x208216E2)
                                 - 205853192 == a5)) ^ (v26 + 257))))();
}

uint64_t sub_1B0260748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a9, int32x4_t a10, int32x4_t a11, int32x4_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return sub_1B025AEC8(a1, a2, a3, a4, a5, a6, a7, a8, a13, a14, a15, a16, a17, a18, a19, v36, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a9,
           a10,
           a11,
           a12);
}

uint64_t sub_1B0260750@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint8x8_t a3@<D0>)
{
  a3.i32[0] = *(_DWORD *)(a2 + a1 + 1);
  return sub_1B0260778((v3 ^ 0x791u) - 1479, 0, a2 - 3, 426, COERCE_DOUBLE(vmovn_s16((int16x8_t)vmovl_u8(a3))));
}

uint64_t sub_1B0260778(int a1, int a2, uint64_t a3, int a4, float a5)
{
  *(float *)(a3 + (v5 + v8 - a2 + 187)) = a5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 + a2 - 183 == v7) * a4) ^ v6)))();
}

uint64_t sub_1B02607AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067 * ((&a11 & 0x7E1935 | ~(&a11 | 0x7E1935)) ^ 0x21475B11);
  a13 = (v17 + 114) ^ v19;
  a15 = v19 ^ 0x7E8A3AB2;
  a11 = &STACK[0x18DA4F3048EDB6D0];
  a12 = v18;
  a14 = &STACK[0x5248BA885C210B10];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 713)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((3565 * (*(_DWORD *)(v18 - 0x7761D79CB8DF4CFBLL) == v15 + v17 - 915 - 557)) ^ v17)))(v20);
}

uint64_t sub_1B0260890@<X0>(int a1@<W2>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v12 = a3 + 1;
  *(unsigned char *)(v9 + (v12 + v7)) = *(unsigned char *)(a2 + v10 + v6)
                                            - ((*(unsigned char *)(a2 + v10 + v6) << ((v4 & v5) - 42)) & v8)
                                            - 27;
  return (*(uint64_t (**)(void))(v11 + 8 * ((480 * ((a1 + v12 + 1) < 0x40)) ^ v3)))();
}

uint64_t sub_1B0260898(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 < 0x20) ^ (a4 - 1)) & 1) * ((277 * (a4 ^ 0x1B6)) ^ 0x27F)) ^ a4)))();
}

uint64_t sub_1B02608DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  *(unsigned char *)(v13 + (a6 - 18198468)) = *(unsigned char *)(v11 + ((a6 - 18198468) & 0xFLL)) ^ *(unsigned char *)(v7 + (a6 - 18198468)) ^ *(unsigned char *)((((_BYTE)a6 + 60) & 0xF) + v10 + 2) ^ *(unsigned char *)((((_BYTE)a6 + 60) & 0xF) + v9 + 1) ^ (((a6 + 60) & 0xF) * (a7 - 18));
  return (*(uint64_t (**)(void))(v12 + 8 * ((255 * (a6 - 1 != v8)) ^ (a7 + 552))))();
}

void sub_1B026094C()
{
  *(_DWORD *)(v0 + 12) = -1373544826;
}

uint64_t sub_1B0260998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((49 * (a7 + 1 == v8 + 32)) ^ a5)))();
}

uint64_t sub_1B0260A60()
{
  *(_DWORD *)(*v2 + 4 * (v4 + v0)) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((14 * (v4 + v0 > 0)) ^ v3)))();
}

uint64_t sub_1B0260AA0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 565) ^ v2 ^ 0x250) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_1B0260AD8@<X0>(uint64_t a1@<X4>, int a2@<W5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((1181 * (a3 + 1 == v4 + 16)) ^ a2)))(a1);
}

uint64_t sub_1B0260BB0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((v1 != v2 - 1913) * ((v2 - 1498) ^ 0x168)) ^ v2)))();
}

uint64_t sub_1B0260BDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10, _DWORD *a11)
{
  *a10 = a1;
  *a11 = v12;
  return (*(uint64_t (**)(void))(v13 + 8
                                    * ((87 * (((a9 == 0) ^ (((v11 + 66) & 0xD7) + 8)) & 1)) ^ v11)))();
}

_DWORD *sub_1B0260C3C@<X0>(_DWORD *result@<X0>, int a2@<W8>)
{
  *uint64_t result = v3 - 1405785566 + (a2 << (((v2 - 39) | 8) - 72));
  return result;
}

uint64_t sub_1B0260C68@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0xA28D1518;
  *(unsigned char *)(a1 + (v3 - 299 + v6 - 1218717820)) = *(unsigned char *)(v1
                                                                         + (v3 - 299 + v6 - 1218717820));
  if (v8 == v6 + 349094967 < v2) {
    BOOL v8 = v6 + 349094967 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1898 * v8) ^ v3)))();
}

uint64_t sub_1B0260CD8@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((486 * (a2 == v4)) ^ (v2 + a1 - 271))))();
}

uint64_t sub_1B0260D04@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v30 = a1 ^ (v27 - 725);
  _DWORD *v28 = v28[623];
  *(void *)(v29 - 136) = (v24 - 857349981) ^ v25;
  int v31 = v25 ^ (v30 + 102165556);
  *(_DWORD *)(v29 - 128) = v25 + v30 - 1015666717;
  *(_DWORD *)(v29 - 104) = v31 ^ 0x3A;
  *(_DWORD *)(v29 - 100) = v30 + 102165556 + v25;
  *(void *)(v29 - 120) = a24;
  *(_DWORD *)(v29 - 112) = v25 + 1;
  *(_DWORD *)(v29 - 108) = v31 ^ 0x41;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v30 ^ (v27 - 2121))))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v29 - 144)))(v32);
}

uint64_t sub_1B0260DA8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v7 = a3 + ((v4 + 1469578481) & 0xFBFFFFF1) + *(unsigned __int8 *)(a2 + 6) - 186;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1306 * ((v6 & (2 * v7)) + (v7 ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1B0260E00@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((8 * ((a1 ^ (v1 - 1284426161 < ((a1 + 291) ^ 0xFFFFFA35))) & 1)) & 0xEF | (16 * ((a1 ^ (v1 - 1284426161 < ((a1 + 291) ^ 0xFFFFFA35))) & 1)) | a1)))();
}

uint64_t sub_1B0260E4C()
{
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((249 * (v0 < (v1 ^ (v1 + 656)) + 580817192)) ^ (v3 + v1 + 343))))();
}

void sub_1B0260E8C()
{
  int v6 = 1734042137 * (((v5 - 144) & 0x80439F6D | ~((v5 - 144) | 0x80439F6D)) ^ 0x2372A3DF);
  *(_DWORD *)(v5 - 144) = ((v4 ^ 0x736) + 464) ^ v6;
  *(_DWORD *)(v5 - 140) = v0 - v6 + ((4 * (v4 ^ 0x736)) ^ 0x25B1B169);
  *(void *)(v5 - 136) = v3;
  *(void *)(v5 - 128) = v2;
  (*(void (**)(uint64_t))(v1 + 8 * ((v4 ^ 0x736) + 1089)))(v5 - 144);
  JUMPOUT(0x1B02572CCLL);
}

uint64_t sub_1B0260F0C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,char a36)
{
  uint64_t v41 = &a34 + v36;
  uint64_t v59 = &a32 + v36;
  uint64_t v58 = &a36 + v36;
  char v57 = &a30 + v36;
  int v56 = &a26 + v36;
  unsigned __int8 v55 = &a28 + v36;
  char v54 = &a24 + v36;
  char v42 = &a20 + v36;
  int v43 = v37 + 410;
  uint64_t v44 = *a1;
  uint64_t v61 = v39;
  uint64_t v62 = a1[5];
  uint64_t v45 = a1[3];
  uint64_t v46 = *(void *)(v45 - 0x571561323F81230ALL);
  int v47 = v37 + 1038;
  *(_DWORD *)(v40 - 104) = (v37 + 1038) ^ (1759421093 * ((v40 - 440558450 - 2 * ((v40 - 144) & 0xE5BD9D1E)) ^ 0x56C02D4A));
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v46;
  int v48 = (v37 + 410) ^ 0x6FA;
  int v49 = (v37 - 180) | 0x29;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = a2;
  *(void *)(v40 - 112) = &a34 + v36;
  uint64_t v60 = 8 * (v37 + 1158);
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 112) = v42;
  *(void *)(v40 - 144) = v44;
  *(void *)(v40 - 136) = v41;
  *(void *)(v40 - 128) = v45;
  *(_DWORD *)(v40 - 120) = v43
                         + 535753261 * ((((2 * (v40 - 144)) | 0x70DF0EA6) - (v40 - 144) - 946833235) ^ 0x329B897C)
                         - 10;
  (*(void (**)(uint64_t))(v38 + 8 * (v43 + 835)))(v40 - 144);
  *(void *)(v40 - 120) = v41;
  *(void *)(v40 - 112) = v59;
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((v40 - 144) ^ 0xB37DB054));
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v59;
  *(void *)(v40 - 112) = v58;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093
                                * ((((v40 - 144) | 0xFED2E386) - (v40 - 144) + ((v40 - 144) & 0x12D1C78)) ^ 0x4DAF53D2));
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 144) = v45;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093
                                * ((1192167507 - ((v40 - 144) | 0x470F0853) + ((v40 - 144) | 0xB8F0F7AC)) ^ 0xB8D47F8));
  *(void *)(v40 - 120) = v58;
  *(void *)(v40 - 112) = v57;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 144) = v45;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 128) = v44;
  *(void *)(v40 - 120) = v57;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((v40 - 144) | 0x738EEFBD) + (~(v40 - 144) | 0x8C711042)) ^ 0xC0F35FE8));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 112) = v56;
  uint64_t v53 = 8 * (v43 ^ 0xD74);
  (*(void (**)(uint64_t))(v38 + v53))(v40 - 144);
  *(void *)(v40 - 120) = v56;
  *(void *)(v40 - 112) = v55;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((v40 - 144) | 0xEC5B9577) + (~(v40 - 144) | 0x13A46A88)) ^ 0x5F262522));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(void *)(v40 - 120) = v55;
  *(void *)(v40 - 112) = v54;
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((((2 * (v40 - 144)) | 0xAC7F21A) - (v40 - 144) - 90437901) ^ 0xB61E4959));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v60))(v40 - 144);
  *(_DWORD *)(v40 - 104) = v47 ^ (1759421093 * ((v40 + 1718522719 - 2 * ((v40 - 144) & 0x666E93EF)) ^ 0xD51323BB));
  *(void *)(v40 - 144) = v45;
  *(void *)(v40 - 136) = v42;
  *(void *)(v40 - 120) = v54;
  *(void *)(v40 - 112) = v42;
  *(void *)(v40 - 128) = v44;
  (*(void (**)(uint64_t))(v38 + v53))(v40 - 144);
  uint64_t v50 = *(void *)(v45 - 0x571561323F812312);
  *(_DWORD *)(v40 - 128) = (v43 - 4) ^ (1734042137
                                      * ((((v40 - 144) | 0x81FFDE0) - ((v40 - 144) & 0x81FFDE0)) ^ 0x54D13EAD));
  *(void *)(v40 - 144) = v50;
  *(void *)(v40 - 136) = v61;
  (*(void (**)(uint64_t))(v38 + 8 * (v43 ^ 0x2AB)))(v40 - 144);
  *(void *)(v40 - 136) = v62;
  *(_DWORD *)(v40 - 140) = v43 + 460628867 * ((v40 - 144) ^ 0x4C96827D) - 1025;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v43 ^ 0xDDE)))(v40 - 144);
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * ((46 * (v49 + (v48 ^ 0xDD2E9BE1) + *(_DWORD *)(v40 - 144) > 0x7FFFFFFE)) ^ v43)))(v51);
}

uint64_t sub_1B026142C@<X0>(int a1@<W1>, int a2@<W7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (((((a2 - 148) | 0x408) + ((a2 - 2062101510) & 0x3AE92F79) - 2056) * (a1 == v3)) ^ a2)))();
}

uint64_t sub_1B0261474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * (((a23 == 845113444) * (((v23 - 220584677) & 0xD25D8FF) + 1261)) ^ v23)))();
}

uint64_t sub_1B02614C4(uint64_t a1, uint64_t a2)
{
  unsigned int v9 = v5 + v4 + v6;
  uint64_t v10 = a2 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v2 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 & 0xFFFFFFE0) == 32) * (v7 + 865)) ^ (v7 + 1397))))();
}

uint64_t sub_1B0261518()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1988 * (v0 < ((v1 + 905) ^ 0x726u) + 2147482854)) ^ (v1 + 293))))();
}

uint64_t sub_1B0261568(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1936 * (v4 == ((a4 - 1779146635) & 0x6A0B9EDF ^ 0x29D))) ^ a4)))();
}

uint64_t sub_1B02615AC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((1473 * ((v1 ^ 0x325F6854) == (a1 ^ (v3 + 134)) + (a1 ^ 0x983C6883) + v2)) ^ a1)))();
}

uint64_t sub_1B02615FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((339 * (a8 + 1 == v10 + 32)) ^ v8)))();
}

uint64_t sub_1B02616D0@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1063));
  return v3(v1);
}

uint64_t sub_1B0261700@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X7>, int a8@<W8>)
{
  *(unsigned char *)(a6 + (a8 - 853605376)) = *(unsigned char *)(a5 + a7 - 158929246);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                + 8
                                                                                * (int)((((a8 - 853605375) < 0x40)
                                                                                       * (((((v8 - 18) | 8) + 1030547169) & 0xC293183C)
                                                                                        - 6)) ^ ((v8 - 18) | 8))))(a1, a2, a3, a4, a5 + 1);
}

uint64_t sub_1B0261774@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,uint64_t a22,char a23)
{
  uint64_t v26 = *v24;
  *(_DWORD *)(v23 - 0xDE78D69D6C1C02DLL) = 0;
  return (*(uint64_t (**)(char *, char *, char *))(v25
                                                           + 8
                                                           * (((v26 == 0x67843F9A1244BACBLL) * ((a1 + 487) ^ 0x7C2)) ^ a1)))(&a20, &a23, &a13);
}

uint64_t sub_1B0261810()
{
  unsigned int v5 = 1178560073 * ((v7 + 1082006361 - 2 * (v7 & 0x407E1B59)) ^ 0x72681B19);
  v7[0] = v3;
  v7[1] = 0x31FD77B69BC3E185;
  int v8 = v5 ^ 0x294A23BB;
  int v9 = v5 + (v0 ^ v1) - 897;
  unsigned int v10 = -955300587 - v5;
  uint64_t result = (*(uint64_t (**)(void *))(v4 + 8 * (v0 ^ v1 ^ 0xDB3)))(v7);
  *(_DWORD *)(v2 + 4) = *(_DWORD *)(v3 - 0x7761D79CB8DF4CFBLL);
  return result;
}

void sub_1B02618A4()
{
}

void sub_1B0261CF0()
{
}

uint64_t sub_1B0261DD0(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((123 * (a3 + a1 + ((v3 + 1579) ^ 0x89408A49 ^ (v3 + 1588059218) & 0xA158276F) < 8)) ^ v3)))();
}

uint64_t sub_1B0261E68@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x1C4)))();
}

uint64_t sub_1B0261EBC@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v55 = *(_DWORD *)(&a39 + ((v53 + v51) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v53 + v51 + 1)) = (BYTE2(v55) ^ 0x2D) - ((2 * (BYTE2(v55) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v53 + v51)) = (HIBYTE(v55) ^ 0x52) - ((v52 + 15) & (2 * (HIBYTE(v55) ^ 0x52))) - 27;
  *(unsigned char *)(a1 + (v53 + v51 + 2)) = (BYTE1(v55) ^ 0x73) - ((2 * (BYTE1(v55) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v53 + v51 + 3)) = v55 ^ 0x8F;
  BOOL v56 = v53 + 1693402170 < (a51 + 1862017596);
  if (v53 + 1693402170 < a2 != a51 + 1862017596 < a2) {
    BOOL v56 = a51 + 1862017596 < a2;
  }
  return (*(uint64_t (**)(void))(v54 + 8 * ((3761 * v56) ^ v52)))();
}

uint64_t sub_1B0261F94@<X0>(int a1@<W4>, int a2@<W8>, int8x16_t a3@<Q2>, int8x16_t a4@<Q3>)
{
  int8x16_t *v5 = vaddq_s8(vsubq_s8(*(int8x16_t *)(v6 + (a2 + v7)), vandq_s8(vaddq_s8(*(int8x16_t *)(v6 + (a2 + v7)), *(int8x16_t *)(v6 + (a2 + v7))), a4)), a3);
  return (*(uint64_t (**)(void))(v8 + 8 * (a1 + v4 + 254)))();
}

uint64_t sub_1B0261FE4(uint64_t a1, uint64_t a2, int a3)
{
  int v8 = *(unsigned __int8 *)(a2 + 1) + ((v3 + v5 - 142) ^ (a3 - 254));
  return (*(uint64_t (**)(void))(v4 + 8 * ((1195 * ((v7 & (2 * v8)) + (v8 ^ v6) == v6)) ^ v5)))();
}

uint64_t sub_1B0262030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v26 = 423 * (v18 ^ 0x49E);
  int v27 = ((((v25 - 144) | 0xE1017CD9) - (v25 - 144) + ((v25 - 144) & 0x1EFE8320)) ^ 0xBDCFBF94) * v19;
  *(_DWORD *)(v25 - 136) = v18 - v27 + 630;
  *(_DWORD *)(v25 - 116) = v21 - v27 + (v26 ^ 0xD3277DA4);
  *(void *)(v25 - 128) = v24;
  *(void *)(v25 - 144) = v20;
  (*(void (**)(uint64_t))(v22 + 8 * (v18 ^ 0xC14)))(v25 - 144);
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = a16;
  *(_DWORD *)(v25 - 128) = (v26 - 101) ^ (235795823
                                        * (((v25 - 144) & 0xEA18056 | ~((v25 - 144) | 0xEA18056)) ^ 0x65F336F0));
  (*(void (**)(uint64_t))(v22 + 8 * (v26 + 1312)))(v25 - 144);
  *(_DWORD *)(v25 - 120) = v26
                         + 1374699841 * ((((2 * (v25 - 144)) | 0x1FE71C14) - (v25 - 144) + 1879863798) ^ 0xE2079603)
                         + 257;
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 112) = a16;
  *(void *)(v25 - 104) = a17;
  *(void *)(v25 - 136) = a18;
  *(void *)(v25 - 128) = a14;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v26 ^ 0xBF9)))(v25 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((((a15 == 0) ^ (v26 + 1)) & 1)
                                              * ((11 * (v26 ^ 0x326)) ^ 0x4B0)) ^ v26)))(v28);
}

uint64_t sub_1B02620BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  unsigned int v24 = ((2 * (&a14 & 0x4F910590) - &a14 + 812579432) ^ 0x6CA03925) * v23;
  LODWORD(a16) = (v20 - ((v20 << ((81 * (v21 ^ 0x7B) + 97) ^ (v21 + 29))) & 0xAE7A19E0) - 683864848) ^ v24;
  LODWORD(a15) = v21 - v24 + 66;
  a14 = a10;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 + 1527)))(&a14);
  a15 = v19;
  a16 = a10;
  LODWORD(a14) = v21 + 1178560073 * (&a14 ^ 0x32160040) + 1011;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 + 1606)))(&a14);
  unsigned int v25 = 628203409 * ((&a14 + 1529925748 - 2 * (&a14 & 0x5B30D074)) ^ 0xD9B8DC47);
  LODWORD(a14) = v21 - v25 + 776;
  a15 = v17;
  LODWORD(a16) = (v18 ^ 0x7E56EDCD) + ((2 * v18) & 0xFCADDB9A) - 67512453 + v25;
  a17 = a10;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v21 + 1513)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((165 * (HIDWORD(a14) == -1373544826)) ^ v21)))(v26);
}

uint64_t sub_1B026225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,unsigned int a22)
{
  unsigned int v24 = v23 - 1731440224 + a20;
  BOOL v25 = v24 < 0xADD6E28A;
  BOOL v26 = v24 > a22;
  if (a22 < 0xADD6E28A != v25) {
    BOOL v27 = v25;
  }
  else {
    BOOL v27 = v26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8 * ((v27 * a19) ^ (a6 + a7 + 808))))(a1, 3941953673);
}

void sub_1B02622EC()
{
}

uint64_t sub_1B0262300(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 350) ^ 0xF7) * (v4 > 0x1F)) ^ a4)))();
}

uint64_t sub_1B026232C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  _DWORD *v5 = v5[623];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((461 * (v4 + ((a2 - 484) ^ (v2 + 656)) - v2 + 67 == 299839176)) ^ (a2 - 484))))(a1, 1460018998);
}

uint64_t sub_1B0262388(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 - v7)) = *(void *)(a3 + (v6 - v7));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a5 + v7 != a2) * a6) ^ v8)))();
}

uint64_t sub_1B02623B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(unsigned char *)(*v21 + (v18 + a6)) = 101;
  BOOL v22 = v18 - 1773944972 < (a18 - 1405106839);
  if ((a18 - 1405106839) < 0x1456CDCD != (v18 - 1773944972) < 0x1456CDCD) {
    BOOL v22 = (a18 - 1405106839) < 0x1456CDCD;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * (((v19 - 244) * v22) ^ v19)))();
}

void sub_1B0262428()
{
  _DWORD *v0 = 1373504850;
}

uint64_t sub_1B026243C(uint64_t a1, int a2)
{
  *(void *)(a1 - 7 + (v4 + v3 - v6)) = *(void *)(v2 - 7 + (v4 + v3 - v6));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1418 * ((((a2 + 88) | 0x248) ^ 0x340) + v6 == v7 - (v5 & 7))) ^ a2)))();
}

void sub_1B0262498(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + 4 * (v6 + v4)) = v2
                                                                        - (((v2 << (((v3 - 115) | 0x24) + 93))
                                                                          + 116381130) & v5)
                                                                        + 1050252255;
  *(_DWORD *)(a1 - 0x67843F9A1244BAC7) = (((v6 + 1 + v4) * (v1 - 1678393466)) ^ 0xFFFA9DBD)
                                         + 1372553087
                                         + ((2 * (v6 + 1 + v4) * (v1 - 1678393466)) & 0xFFF53B7A);
}

uint64_t sub_1B02624F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int8x16_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int32x4_t a25)
{
  int8x16x4_t v54 = vld4q_s8(a6);
  uint8x16_t v30 = (uint8x16_t)veorq_s8(v54.val[0], v29);
  uint16x8_t v31 = vmovl_u8(*(uint8x8_t *)v30.i8);
  int8x16_t v32 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v31.i8);
  int8x16_t v33 = (int8x16_t)vmovl_high_u16(v31);
  uint16x8_t v34 = vmovl_high_u8(v30);
  int8x16_t v35 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v34.i8);
  int8x16_t v36 = (int8x16_t)vmovl_high_u16(v34);
  uint8x16_t v37 = (uint8x16_t)veorq_s8(v54.val[1], v29);
  uint16x8_t v38 = vmovl_high_u8(v37);
  uint16x8_t v39 = vmovl_u8(*(uint8x8_t *)v37.i8);
  uint8x16_t v40 = (uint8x16_t)veorq_s8(v54.val[2], v29);
  _Q21 = (int8x16_t)vmovl_high_u8(v40);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v40.i8);
  int8x16_t v43 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v48 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v54.val[0] = veorq_s8(v54.val[3], v29);
  v54.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v54.val[0]);
  v54.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v54.val[1]);
  v54.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v54.val[0].i8);
  v54.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v54.val[0]);
  v54.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v54.val[0].i8), 0x18uLL), v43), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v39.i8, 8uLL), v32));
  v54.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v54.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v39, 8uLL), v33));
  v54.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v54.val[1].i8), 0x18uLL), v48), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v38.i8, 8uLL), v35));
  v54.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v54.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v38, 8uLL), v36));
  int32x4_t v49 = (int32x4_t)veorq_s8(vandq_s8(v54.val[0], a17), (int8x16_t)(*(_OWORD *)&v32 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v50 = (int32x4_t)veorq_s8(vandq_s8(v54.val[3], a17), (int8x16_t)(*(_OWORD *)&v33 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v51 = (int32x4_t)veorq_s8(vandq_s8(v54.val[1], a17), (int8x16_t)(*(_OWORD *)&v35 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v52 = (int32x4_t)veorq_s8(vandq_s8(v54.val[2], a17), (int8x16_t)(*(_OWORD *)&v36 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  v27[2] = vaddq_s32(vsubq_s32((int32x4_t)v54.val[1], vaddq_s32(v51, v51)), a25);
  v27[3] = vaddq_s32(vsubq_s32((int32x4_t)v54.val[2], vaddq_s32(v52, v52)), a25);
  *BOOL v27 = vaddq_s32(vsubq_s32((int32x4_t)v54.val[0], vaddq_s32(v49, v49)), a25);
  v27[1] = vaddq_s32(vsubq_s32((int32x4_t)v54.val[3], vaddq_s32(v50, v50)), a25);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((1397 * (v28 == 768623616)) ^ ((a20 & 0x5B8F35BF) + 702))))(v25);
}

uint64_t sub_1B0262634(uint64_t a1)
{
  BOOL v5 = ((v4 - v3) & 0x1F) != 1;
  return (*(uint64_t (**)(uint64_t, void))(v2 + 8 * (v1 ^ ((4 * v5) | (8 * v5)))))(a1, (v1 ^ 0x7A4u) + 682);
}

uint64_t sub_1B0262698@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((a1 ^ 0x40A ^ (v1 == 0)) & 1) == 0) ^ a1 ^ 0x40A)))();
}

uint64_t sub_1B02626C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((((v5 - 692) ^ 0x596)
                                                                          + ((v5 - 692) | 0x2B4)
                                                                          - 2001)
                                                                         * (v3 == 1899470963)) ^ (v5 - 1430))))(a1, a2, a3, 1310800152);
}

void sub_1B0262714()
{
}

void sub_1B0262B58()
{
}

uint64_t sub_1B0262C30@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (a2 + v2 + 341 >= ((v5 - 1948489645) & 0x7423979Fu) + 2147483496) {
    int v6 = -1550566792 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 12) = 54151989;
  return result;
}

uint64_t sub_1B0262C88(uint64_t result)
{
  *(_DWORD *)(result + 4) = v2 - v1 + 1291998337;
  return result;
}

uint64_t sub_1B0262CA0(char a1, int a2, int a3, void *a4, int a5, int a6, int a7)
{
  int v13 = v9 + a6;
  unsigned int v14 = *(_DWORD *)(*a4 + 4 * (v13 + v10)) ^ v8;
  *(_DWORD *)(*a4 + 4 * (v7 + v11 + 1)) = v8 + ((v14 >> a1) | a5 ^ v8) - (a2 & (2 * ((v14 >> a1) | a5 ^ v8)));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v13 + v10 > 0) * a7) ^ a3)))();
}

uint64_t sub_1B0262CA8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W7>, uint64_t a4@<X8>)
{
  HIDWORD(v8) = a3 ^ 2;
  LODWORD(v8) = a3 ^ a2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3821 * (a4 + 1 == v7 + 60)) ^ a1)))((v8 >> 2)
                                                                                            + v6 - (v5 & (2 * (v8 >> 2))));
}

void sub_1B0262D74(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = 1373504947;
}

uint64_t sub_1B0262DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>)
{
  *(unsigned char *)(a2 + (v7 + a3 + 54)) = *(unsigned char *)(a1 + ((v5 + 4294967232) & (v6 + 3196172763)));
  return (*(uint64_t (**)(void))(v9 + 8 * (v3 ^ (774 * ((v4 & 0xFFFFFFFC) == v8)))))();
}

uint64_t sub_1B0262E0C(char a1, char a2, char a3, uint64_t a4, int a5, int8x16_t a6, int8x8_t a7, int8x8_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61)
{
  int v70 = a11 - 8;
  uint64_t v71 = (a5 + v70);
  v73.val[0].i64[0] = ((_BYTE)a5 + (_BYTE)v70) & 0xF;
  v73.val[0].i64[1] = (v68 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[0] = (a3 + (_BYTE)v70) & 0xF;
  v73.val[1].i64[1] = (v67 + (_BYTE)v70) & 0xF;
  v73.val[2].i64[0] = (v66 + (_BYTE)v70) & 0xF;
  v73.val[2].i64[1] = (a2 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[0] = (v64 + (_BYTE)v70) & 0xF;
  v73.val[3].i64[1] = (a1 + (_BYTE)v70) & 0xF;
  *(int8x8_t *)(a4 + v71) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a4 + v71), *(int8x8_t *)(v62 + (v71 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v61 + (v71 & 0xF) - 7), *(int8x8_t *)(v63 + (v71 & 0xF) - 7)))), a8), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v73, a6), a7)));
  return (*(uint64_t (**)(void))(a61 + 8 * (((v65 == v70) * v69) ^ a10)))();
}

uint64_t sub_1B0262E14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v6 + v8) = v9;
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((unint64_t)(v6 + 1 + v8) < 0x40)
                                     * (((v7 + 1334918868) & 0xB06EBEEF) + 1069)) ^ (v7 + 1334918868) & 0xB06EBEEF)))();
}

uint64_t sub_1B0262E60(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v6 + v8) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((unint64_t)(v6 + v8 + v5 - 62) < 0x38) * v7) ^ v4)))();
}

uint64_t sub_1B0262E90(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  unsigned int v29 = (a4 ^ 0x6A) + a24 + 918096561;
  int v30 = (a28 + 640286815 < (((a4 ^ 0x436) + 1619931834) & 0x9F71C9CA ^ 0x3A85D75E)) ^ (v29 < 0x3A85D65C);
  BOOL v31 = v29 < a28 + 640286815;
  if (v30) {
    BOOL v31 = a28 + 640286815 < (((a4 ^ 0x436) + 1619931834) & 0x9F71C9CA ^ 0x3A85D75E);
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((116 * v31) ^ ((a4 ^ 0x436) - 320))))();
}

void sub_1B0262F6C(uint64_t a1, int a2)
{
  _DWORD *v2 = a2;
}

uint64_t sub_1B0262F74()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * (int)((((((v2 + v1 - 1841020831) < 8) ^ ((v0 ^ 0x9C) - 1)) & 1)
                                                   * (((v0 ^ 0x19C) + 1604675653) & 0xA05A96EE ^ 0x54F)) ^ v0 ^ 0x19C)))(v3);
}

uint64_t sub_1B0262FEC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31)
{
  BOOL v33 = a2 + v31 + a31 - 1626 - 426 < (a2 + v31 + a31 - 277 - 1838);
  return (*(uint64_t (**)(void))(v32 + 8 * ((v33 | (8 * v33)) ^ a31)))();
}

void sub_1B0263034()
{
}

uint64_t sub_1B0263094()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 | (16
                                     * (((v1 << ((v0 + 124) ^ 7)) & 0xBEEFFFFC ^ 0xA0679790)
                                      + (v1 ^ 0x2FC43436)
                                      + ((v0 + 311421163) & 0xED70158F)
                                      + 1975383173 == 1429600648)))))();
}

uint64_t sub_1B0263114(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v5 + 1));
  return (*(uint64_t (**)(uint64_t, void, void))(v2 + 8
                                                                 * (int)(((8 * (v6 >> 7)) | (32 * (v6 >> 7))) ^ v4)))(a1, (v3 - 1284426094), ((2 * v6) & 0xEC) + (v4 ^ 0x36A ^ v6 ^ 0xFFBEEC53) + ((v4 - 172004176) & 0xA409757 ^ 0x4CCFDDAD));
}

uint64_t sub_1B02631CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((472 * (a1 + 1 != v3 + 4)) ^ v1)))();
}

uint64_t sub_1B0263290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v25 = ((&a17 & 0xF0CC7DD5 | ~(&a17 | 0xF0CC7DD5)) ^ 0x53FD4167) * v19;
  LODWORD(a19) = (v21 - ((2 * v21) & 0xAE7A19E0) + (((v24 + 953) | 4) ^ 0xD73D0A64)) ^ v25;
  LODWORD(a18) = v24 - v25 - 25;
  a17 = a12;
  (*(void (**)(uint64_t *))(v23 + 8 * (v24 + 1436)))(&a17);
  LODWORD(a17) = v24 + 1178560073 * (&a17 ^ 0x32160040) + 920;
  a18 = v20;
  a19 = a12;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v23 + 8 * (v24 + 1515)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1942 * (HIDWORD(a17) == v22)) ^ v24)))(v26);
}

uint64_t sub_1B0263380(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unsigned int a31,unsigned int a32,unsigned int a33,uint64_t a34,int a35)
{
  unsigned int v37 = ((v36 + 436) ^ 0xAB9751FB) + a35;
  BOOL v38 = v37 < a31;
  BOOL v39 = v37 > a33;
  if (a33 < a32 != v38) {
    BOOL v40 = v38;
  }
  else {
    BOOL v40 = v39;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((23 * !v40) ^ (v36 + 1004))))();
}

uint64_t sub_1B026338C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  *(_DWORD *)(a16 + 4 * (v19 - 1735915887)) = v16;
  BOOL v22 = v19 - 696982420 < -1108550182 || v19 - 696982420 >= v18;
  return (*(uint64_t (**)(void))(v20 + 8 * ((v22 * (((v17 - 957098005) & 0x390C27FF) - 540)) ^ v17)))();
}

uint64_t sub_1B02633F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * ((705
                                                                                  * (v6 > (int)(((v5 + 1538559729) & 0xA44B6BFF)
                                                                                              - 217))) ^ v5)))(a1, a2, a3, a4, a5);
}

void sub_1B0263468()
{
}

uint64_t sub_1B026347C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((9 * (a1 ^ 0x88)) ^ (a1 - 104)) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1B02634B0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((19
                                     * (((((v1 + 1994336146) & 0x8920D3DF) - 1600490958) & 0x5F658EFF ^ 0xFFFFFD81) + v0 < 23 * ((v1 + 1994336146) & 0x8920D3DF ^ 0x1D5) + 2147482934)) ^ (v1 + 1994336146) & 0x8920D3DF)))();
}

uint64_t sub_1B0263538@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  BOOL v17 = v14 != 1927359580 || a14 != ((a1 - 67305608) & 0x54EB6711) - 893619869;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v17 * ((a1 ^ 0x77D) - 1958)) ^ a1)))();
}

uint64_t sub_1B026359C(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((((v3 + v7 - 544441935 + 178) | 0x22u) + v4) ^ *(_DWORD *)(*v5 + 4 * a2)) > (*(_DWORD *)(*v6 + 4 * a2) ^ (v4 + 1066)))
                                * (((v7 - 544441935) & v3) - 826)) ^ v7)))();
}

uint64_t sub_1B0263604(int a1, double a2)
{
  *(double *)(v3 + v6) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v4 == v6) ^ v5) & 1) * a1) ^ v2)))();
}

uint64_t sub_1B0263630()
{
  *(_DWORD *)(v6 - 136) = (v4 + 418) ^ (((v6 - 136) ^ 0x6DF41809) * v3);
  *(void *)(v6 - 128) = v0;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v4 + 1447)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v6 - 132) > v2 + 71 * (v4 ^ 0x281u) - 639)
                                              * ((v4 ^ 0x281) + 1991)) ^ v4)))(v7);
}

uint64_t sub_1B02636BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((55 * (((v0 == 0x3F54DF1F) ^ (v1 + 109)) & 1)) ^ v1)))();
}

uint64_t sub_1B0263714(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8 * (((32 * (a10 + 4 < a10)) | ((a10 + 4 < a10) << 7)) ^ v11 ^ 0x19D)))(a1);
}

uint64_t sub_1B026378C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  unsigned int v33 = 628203409 * ((&a24 & 0x8C7A82BE | ~(&a24 | 0x8C7A82BE)) ^ 0xF10D7172);
  unsigned int v34 = *(_DWORD *)(a2 + 4) - v33 + ((35 * (v31 ^ 0x19D)) ^ 0xD9AB305C);
  a30 = *(void *)(a2 + 8);
  a31 = a15;
  a28 = a17;
  a26 = v31 - v33 + 1213;
  a27 = v34;
  a24 = a16;
  a25 = a14;
  int v38 = v31;
  (*(void (**)(uint64_t *))(v32 + 8 * (v31 + 1758)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * ((1071 * (a29 == -1373544826)) ^ v38)))(a1, a2, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

uint64_t sub_1B02638B8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v9 = a1 + 1;
  unsigned char *v2 = ((v3 + v9) ^ v5) * (v4 + v9);
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v8 ^ (v9 == 91)) & 1) * v6) ^ v1)))();
}

uint64_t sub_1B02638C0@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a1 + ((v2 - a1 - 202214291) | 0xC0D8CA2) - 620) * (v3 == a2)) ^ v2)))();
}

void sub_1B0263904()
{
}

uint64_t sub_1B0263914@<X0>(char a1@<W3>, uint64_t a2@<X5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  int v37 = *((_DWORD *)&a20 + ((v35 + a3) >> (v33 ^ (a1 + 80) ^ (a1 + 2))) + 18);
  *(unsigned char *)(a2 + (v35 + a3)) = v37 ^ 0x8F;
  *(unsigned char *)(a2 + (v35 + a3 + 1)) = (BYTE1(v37) ^ 0x73) - ((2 * (BYTE1(v37) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v35 + a3 + 2)) = (BYTE2(v37) ^ 0x2D) - ((2 * (BYTE2(v37) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v35 + a3 + 3)) = (HIBYTE(v37) ^ 0x52) - ((2 * (HIBYTE(v37) ^ 0x52)) & 0xCA) - 27;
  BOOL v38 = v35 + 1618067848 < (a32 + 1424192426);
  if (v35 + 1618067848 < v32 != a32 + 1424192426 < v32) {
    BOOL v38 = a32 + 1424192426 < v32;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((v38 * v34) | v33)))();
}

uint64_t sub_1B02639F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, const char *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int8x16_t a21,uint64_t a22,uint64_t a23,int32x4_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28)
{
  int8x16x4_t v60 = vld4q_s8(a6);
  uint8x16_t v35 = (uint8x16_t)veorq_s8(v60.val[0], v34);
  uint16x8_t v36 = vmovl_u8(*(uint8x8_t *)v35.i8);
  uint16x8_t v37 = vmovl_high_u8(v35);
  uint8x16_t v38 = (uint8x16_t)veorq_s8(v60.val[1], v34);
  _Q17 = vmovl_u8(*(uint8x8_t *)v38.i8);
  _Q16 = vmovl_high_u8(v38);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint8x16_t v47 = (uint8x16_t)veorq_s8(v60.val[2], v34);
  uint16x8_t v48 = vmovl_high_u8(v47);
  uint16x8_t v49 = vmovl_u8(*(uint8x8_t *)v47.i8);
  v60.val[0] = veorq_s8(v60.val[3], v34);
  v60.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v60.val[0]);
  v60.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v60.val[1]);
  v60.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.val[1].i8);
  v60.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v60.val[0].i8);
  v60.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v60.val[0]);
  v60.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.val[0].i8);
  int32x4_t v50 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v49.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v36.i8), 0x18uLL)), v60.val[0]);
  int32x4_t v51 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q19, (int8x16_t)vshll_high_n_u16(v49, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v36), 0x18uLL)), v60.val[3]);
  int32x4_t v52 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v48.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v37.i8), 0x18uLL)), v60.val[1]);
  int32x4_t v53 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q18, (int8x16_t)vshll_high_n_u16(v48, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v37), 0x18uLL)), v60.val[2]);
  v60.val[0] = veorq_s8(vandq_s8((int8x16_t)v50, a21), (int8x16_t)(*(_OWORD *)v60.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v60.val[3] = veorq_s8(vandq_s8((int8x16_t)v51, a21), (int8x16_t)(*(_OWORD *)&v60.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v60.val[1] = veorq_s8(vandq_s8((int8x16_t)v52, a21), (int8x16_t)(*(_OWORD *)&v60.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v60.val[2] = veorq_s8(vandq_s8((int8x16_t)v53, a21), (int8x16_t)(*(_OWORD *)&v60.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
  v31[2] = vaddq_s32(vsubq_s32(v52, vaddq_s32((int32x4_t)v60.val[1], (int32x4_t)v60.val[1])), a24);
  v31[3] = vaddq_s32(vsubq_s32(v53, vaddq_s32((int32x4_t)v60.val[2], (int32x4_t)v60.val[2])), a24);
  *int v31 = vaddq_s32(vsubq_s32(v50, vaddq_s32((int32x4_t)v60.val[0], (int32x4_t)v60.val[0])), a24);
  v31[1] = vaddq_s32(vsubq_s32(v51, vaddq_s32((int32x4_t)v60.val[3], (int32x4_t)v60.val[3])), a24);
  int8x16x4_t v54 = &v31[4].i32[v33 + v32];
  int v55 = *(v54 - 8) ^ *(v54 - 3);
  int v56 = v55 + v30 - ((v55 << ((18 * ((a28 + 69) ^ 0x83)) ^ 0x7F)) & v28);
  int v57 = *(v54 - 16) ^ *(v54 - 14);
  HIDWORD(v58) = v57 ^ 0x2E215E86 ^ v56;
  LODWORD(v58) = v57 ^ ~v56;
  __int32 *v54 = (v58 >> 31) + v30 - (v28 & (2 * (v58 >> 31)));
  return (*(uint64_t (**)(void))(v29 + 8 * ((1083 * (v33 + 17 == v33 + 80)) ^ (9 * ((a28 + 837) ^ 0x383) + 266))))();
}

uint64_t sub_1B0263B30()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((854
                                * (((v1 + ((v3 - 366) | 0x2C3) - 747) & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)) ^ v3)))();
}

void sub_1B0263B8C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
}

uint64_t sub_1B0263B94(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((63
                                * (*(_DWORD *)(*(void *)(a1 + 8) + v3) != 38 * ((v4 + 316356896) & 0xED24C5FC ^ 0x1B1)
                                                                          + v2)) ^ v4)))();
}

uint64_t sub_1B0263BEC(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x51089CEA51089CEALL;
  *(void *)(result + 16) = 0xFA8CD10D108F0A73;
  *(_DWORD *)(result + 24) = -1373544826;
  *(void *)(v2 - 0x2F7E69BD89C7105) = result + 0x7761D79CB8DF4D13;
  *((_DWORD *)v1 + 2) = -1373544826;
  return result;
}

uint64_t sub_1B0263C60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v15;
  *(void *)(v17 - 120) = a13;
  *(_DWORD *)(v17 - 112) = v14
                         + 1759421093 * ((~((v17 - 128) | 0x92D7BE90) + ((v17 - 128) & 0x92D7BE90)) ^ 0xDE55F13B)
                         + 559;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 ^ 0xD88)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((v16 != (v14 ^ 0x3DD) + 1797234320) | (16
                                                                                     * (v16 != (v14 ^ 0x3DD)
                                                                                             + 1797234320))) ^ v14)))(v18);
}

uint64_t sub_1B0263D04()
{
  BOOL v4 = v1 - 1320402170 < (int)(v2 + 744738012);
  if (v2 > 0x539C3323 != v1 - 1320402170 < -1402745636) {
    BOOL v4 = v2 > 0x539C3323;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((253 * ((v4 ^ (13 * ((v0 - 89) ^ 0xD1) + 1)) & 1)) ^ v0)))();
}

uint64_t sub_1B0263D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * ((86
                                                                                           * (a7
                                                                                            - v9
                                                                                            + (unint64_t)((a8 + 958565308) & 0xC6DD77B8)
                                                                                            - 2455 < 0x20)) ^ a8)))(a1, a2, a3, a4, a5, a4);
}

uint64_t sub_1B0263DE8(int a1, uint64_t a2, int a3, int a4, int a5)
{
  *(_DWORD *)(a2 + (v7 - a4 + a1)) = *(_DWORD *)(v5 + (v7 - a4 + a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a4 + 4 == v6) * a5) ^ a3)))();
}

uint64_t sub_1B0263E18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = v6 + v10;
  *(unsigned char *)(a6 + v12) = v9;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v12 + 1) < 0x38) * v8) ^ (59 * (v7 ^ 0xB9)))))();
}

uint64_t sub_1B0263E5C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (a4 ^ (2 * ((unint64_t)(v4 - a1) < 0x20)))))();
}

uint64_t sub_1B0263E80()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((14
                                * ((((7 * (v3 ^ 0x1BF)) ^ (v1 + 235)) & (2 * (*(unsigned __int8 *)(v2 + 8) - 4)))
                                 + ((*(unsigned __int8 *)(v2 + 8) - 4) ^ v0) == v0 + (v3 ^ 0x1BF) + 1622 - 1663)) ^ v3)))();
}

uint64_t sub_1B0263EE4(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((60 * (((v5 + 907586432) & 0xC9E756EE) - 2147334888 + a3 + a2 + 13 < 8)) ^ (v5 + 416))))(v3);
}

uint64_t sub_1B0263F60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(&a33 + v33 - 1076023950) = -27;
  return (*(uint64_t (**)(void))(v35 + 8 * ((26 * ((unint64_t)(v33 - 1076023949) > 0x3F)) | (a5 + v34 + 202))))();
}

uint64_t sub_1B0263FA8()
{
  return 4294925278;
}

uint64_t sub_1B0263FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                        + 8
                                                                                        * (((v8 >= (((a8 - 244) | 0x2D0) ^ 0x3CEu))
                                                                                          * ((a8 + 393) ^ 0x385)) ^ a8)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_1B0263FF0(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((((((a4 ^ 0x36F) + 1740) ^ 0x3D0) + 25 * (a4 ^ 0x36F)) * (v4 == a2)) ^ a4 ^ 0xF3)))();
}

void sub_1B0264044()
{
}

uint64_t sub_1B0264058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v34 = v25 - 66;
  int v35 = 460628867 * ((v33 - 1318213208 - 2 * ((v33 - 144) & 0xB16DAA38)) ^ 0xFDFB2845);
  *(void *)(v33 - 144) = v24;
  uint64_t v36 = v26;
  *(void *)(v33 - 120) = v26;
  *(_DWORD *)(v33 - 128) = v27 + v35 + ((v25 - 66) ^ 0x92A4ED3);
  *(_DWORD *)(v33 - 136) = v35 + v25 - 188;
  (*(void (**)(uint64_t))(v28 + 8 * (v25 + 1808)))(v33 - 144);
  *(void *)(v33 - 144) = a23;
  *(void *)(v33 - 136) = a24;
  *(_DWORD *)(v33 - 128) = (v34 + 472) ^ (((-243003403 - ((v33 - 144) | 0xF1840FF5) + ((v33 - 144) | 0xE7BF00A)) ^ 0x9AD6B953)
                                        * v30);
  uint64_t v40 = 8 * (v34 + 1885);
  (*(void (**)(uint64_t))(v28 + v40))(v33 - 144);
  *(void *)(v33 - 136) = v32;
  *(void *)(v33 - 128) = v36;
  *(void *)(v33 - 112) = a23;
  *(_DWORD *)(v33 - 120) = v34
                         + 1455
                         + 1224239923 * ((((2 * (v33 - 144)) | 0x8E0681A8) - (v33 - 144) + 956088108) ^ 0x35B0BD03);
  *(void *)(v33 - 144) = a24;
  uint64_t v39 = 8 * (v34 ^ 0x96A);
  (*(void (**)(uint64_t))(v28 + v39))(v33 - 144);
  *(void *)(v33 - 128) = a23;
  *(void *)(v33 - 120) = v29;
  *(void *)(v33 - 112) = v32;
  *(_DWORD *)(v33 - 104) = (v34 + 1713) ^ (1759421093
                                         * ((2 * ((v33 - 144) & 0x2B596A10) - (v33 - 144) + 1420203497) ^ 0xE7DB25BD));
  *(void *)(v33 - 144) = a24;
  *(void *)(v33 - 136) = v32;
  (*(void (**)(uint64_t))(v28 + 8 * (v34 ^ 0x92B)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = (v34 + 129) ^ (3804331
                                        * (((v33 - 144) & 0xB2991CB8 | ~((v33 - 144) | 0xB2991CB8)) ^ 0xB7F81011));
  *(void *)(v33 - 120) = a24;
  *(void *)(v33 - 112) = v32;
  *(void *)(v33 - 144) = a23;
  *(void *)(v33 - 136) = v32;
  *(void *)(v33 - 104) = a16;
  (*(void (**)(uint64_t))(v28 + 8 * (v34 + 1907)))(v33 - 144);
  *(_DWORD *)(v33 - 128) = (v34 + 472) ^ (235795823 * ((v33 - 323564042 - 2 * ((v33 - 144) & 0xECB6CE86)) ^ 0x781B87DF));
  *(void *)(v33 - 144) = a19;
  *(void *)(v33 - 136) = a24;
  (*(void (**)(uint64_t))(v28 + v40))(v33 - 144);
  *(void *)(v33 - 112) = a19;
  *(_DWORD *)(v33 - 120) = v34 + 1455 + 1224239923 * ((v33 - 1979322361 - 2 * ((v33 - 144) & 0x8A05F097)) ^ 0x78B60D40);
  *(void *)(v33 - 136) = v31;
  *(void *)(v33 - 128) = v36;
  *(void *)(v33 - 144) = a24;
  (*(void (**)(uint64_t))(v28 + v39))(v33 - 144);
  *(void *)(v33 - 120) = v29;
  *(void *)(v33 - 112) = v31;
  *(void *)(v33 - 144) = a24;
  *(void *)(v33 - 136) = v31;
  *(_DWORD *)(v33 - 104) = (v34 + 1713) ^ (1759421093
                                         * ((((v33 - 144) | 0x87326FB7) - ((v33 - 144) & 0x87326FB7)) ^ 0x344FDFE3));
  *(void *)(v33 - 128) = a19;
  (*(void (**)(uint64_t))(v28 + 8 * (v34 ^ 0x92B)))(v33 - 144);
  *(void *)(v33 - 112) = v31;
  *(void *)(v33 - 104) = a17;
  *(_DWORD *)(v33 - 128) = (v34 + 129) ^ (3804331 * ((v33 - 144) ^ 0xFA9EF356));
  *(void *)(v33 - 144) = a19;
  *(void *)(v33 - 136) = v31;
  *(void *)(v33 - 120) = a24;
  (*(void (**)(uint64_t))(v28 + 8 * (v34 + 1907)))(v33 - 144);
  *(void *)(v33 - 144) = v32;
  *(void *)(v33 - 136) = v31;
  *(_DWORD *)(v33 - 128) = v34 + 1759421093 * ((v33 - 144) ^ 0xB37DB054) + 1797;
  (*(void (**)(uint64_t))(v28 + 8 * (v34 ^ 0x97E)))(v33 - 144);
  *(_DWORD *)(v33 - 144) = v34 + 535753261 * ((v33 - 445287334 - 2 * ((v33 - 144) & 0xE57574EA)) ^ 0xEF817AC5) + 1062;
  *(void *)(v33 - 136) = v31;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v34 + 1913)))(v33 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((*(_DWORD *)(v33 - 128) < ((v34 - 686641950) & 0x28ED575F ^ 0x640A4529u))
                                              * (v34 - 212)) ^ v34)))(v37);
}

uint64_t sub_1B026415C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  BOOL v8 = a6 < 0x54CA2F02;
  if (v8 == (v6 + 1204532593) < 0x54CA2F02) {
    BOOL v8 = v6 + 1204532593 < a6;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((!v8 * (a1 ^ 0x244)) ^ a1)))();
}

uint64_t sub_1B02641D4@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1303 * (a2 == v4 + ((7 * (a1 ^ (a1 - 35)) + 2127456005) & 0x81319ADF) - 730)) ^ (v2 + a1 + 320))))();
}

uint64_t sub_1B0264234(int a1, unint64_t a2, unsigned int a3, int a4, int a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  BOOL v42 = v28 > v39;
  int v43 = a4 + a5;
  int v44 = a4 + 1;
  uint64_t v45 = 4 * (v44 + a5);
  unint64_t v46 = (*(_DWORD *)(a27 + v45) ^ v27) + (v30 ^ HIDWORD(v33));
  unint64_t v47 = HIDWORD(v40)
      + v36 * (unint64_t)(*(_DWORD *)(*v34 + v45) ^ v27)
      + ((v46 + a1 - ((v46 << (((v32 + 123) | v37) ^ v38)) & a3)) ^ a2);
  *(_DWORD *)(a27 + 4 * v43) = v47 + v27 - (v29 & (2 * v47));
  if (v42 == v44 + v31 < v41) {
    BOOL v42 = v44 + v31 < a8;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((!v42 * a7) ^ v32)))();
}

void sub_1B02642E4()
{
}

uint64_t sub_1B026451C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  unsigned int v42 = 323 * ((a6 - 68748850) & 0xCD9FC7FF ^ (a4 + 2));
  int v37 = 3804331 * ((((2 * (v36 - 128)) | 0xAC7E5376) - (v36 - 128) - 1446980027) ^ 0xACA1DAED);
  *(void *)(v36 - 120) = a10;
  *(_DWORD *)(v36 - 128) = v37 + a6 + 1359;
  *(_DWORD *)(v36 - 124) = (a13 + 376469364) ^ v37;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a6 ^ 0x848)))(v36 - 128);
  uint64_t v39 = a35 & 0x3F;
  *(&a26 + (v39 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * (int)((((v39 ^ 0xF) > 0x37) * (v42 - 554)) ^ a6)))(v38);
}

uint64_t sub_1B026463C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((v1 == 1284426096) | 0x1EAu)))();
}

uint64_t sub_1B0264684@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41)
{
  int v44 = 3 * (v41 ^ 0x284);
  *(&a41 + (v44 ^ (a1 + 1677)) + v42) = a34;
  *(&a41 + a2 + ((v44 - 381) ^ 0xE3607785)) = a35;
  return (*(uint64_t (**)(void))(v43 + 8 * (v44 ^ 0x38A)))();
}

uint64_t sub_1B0264728(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)((((((a8 - 215) | 0x780) ^ 0xFFFFF9C2) + ((a8 - 66) | 0x110)) * (v8 == a4)) ^ a8)))();
}

uint64_t sub_1B0264768()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1490
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 5) ^ v0) == v0
                                                                              + (v2 ^ 0x69)
                                                                              + ((v2 + 683794921) & 0xD73E1EBF)
                                                                              - 830)) ^ v2)))();
}

uint64_t sub_1B02647C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55,int a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  *(_DWORD *)(v68 - 120) = a61 ^ 0x659D6CCE;
  *(_DWORD *)(v68 - 132) = a63 ^ 0xF627E161;
  *(_DWORD *)(v68 - 124) = a64 ^ 0x8B487518;
  *(_DWORD *)(v68 - 128) = a62 ^ 0x4EAD3BEE;
  uint64_t v70 = v66 & 0xFFFFFFF2 ^ 0xF4FAD41D;
  *(void *)(v68 - 168) = v70;
  int v71 = *(_DWORD *)(v68 - 116);
  unsigned __int8 v72 = *(unsigned char *)(a48 + (((*(unsigned char *)(v68 - 116) - 122) ^ *(unsigned char *)(v69 + v70)) ^ 0x38u)) + 89;
  uint64_t v73 = v66 & 0xFFFFFFFE ^ 0xF4FAD415;
  *(void *)(v68 - 144) = v73;
  uint64_t v74 = *(unsigned __int8 *)(v69 + v73) ^ 0x57;
  uint64_t v75 = v66 & 0xFFFFFFF5 ^ 0xF4FAD41F;
  *(void *)(v68 - 152) = v75;
  int v76 = ((*(unsigned char *)(a48 + v74) + 89) ^ 0xF6) << 16;
  int v77 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v69 + v75) ^ 0xB6));
  uint64_t v78 = v66 & 0xFFFFFFFB ^ 0xF4FAD415;
  *(void *)(v68 - 176) = v78;
  uint64_t v79 = v66 & 0xFFFFFFF8 ^ 0xF4FAD417;
  LODWORD(v74) = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v69 + v78) ^ 0x9ALL)) ^ (*(unsigned __int8 *)(v69 + v78)
                                                                                         + (~(2
                                                                                            * *(unsigned __int8 *)(v69 + v78)) | 0xBF)
                                                                                         + 33);
  uint64_t v80 = *(unsigned __int8 *)(v69 + v79) ^ 0xD6;
  uint64_t v81 = v66 & 0xFFFFFFFD ^ 0xF4FAD417;
  *(void *)(v68 - 216) = v79;
  *(void *)(v68 - 208) = v81;
  LODWORD(v74) = *(unsigned __int8 *)(a49 + v80) ^ 0x51 | ((v74 ^ 0xFFFFFFCF) << 24);
  LODWORD(v80) = *(unsigned __int8 *)(a47 + *(unsigned __int8 *)(v69 + v81)) ^ 8;
  uint64_t v82 = v66 & 0xFFFFFFFC ^ 0xF4FAD417;
  *(void *)(v68 - 184) = v82;
  int v83 = v76 | (v80 << 8);
  LODWORD(v80) = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v69 + v82) ^ 0x74));
  uint64_t v84 = v66 & 0xFFFFFFF3 ^ 0xF4FAD41D;
  *(void *)(v68 - 160) = v84;
  int v85 = v83 | v80 ^ 0x93;
  LODWORD(v80) = *(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v69 + v84) ^ 0x6ELL)) ^ (*(unsigned __int8 *)(v69 + v84)
                                                                                         - ((2
                                                                                           * *(unsigned __int8 *)(v69 + v84)) & 0x40)
                                                                                         + 32) ^ 0x51;
  uint64_t v86 = v66 ^ 0xF4FAD415;
  *(void *)(v68 - 200) = v86;
  int v87 = ((v72 ^ 2) << 16) | (v80 << 24);
  uint64_t v88 = *(unsigned __int8 *)(v69 + v86);
  LODWORD(v86) = *(unsigned __int8 *)(a50 + (v88 ^ 0x15));
  uint64_t v89 = v66 & 0xFFFFFFF7 ^ 0xF4FAD41D;
  *(void *)(v68 - 248) = v89;
  LODWORD(v79) = v85 | ((v86 ^ (v88 - ((2 * v88) & 0x40) + 32) ^ 0xAE) << 24);
  unsigned int v90 = ((v77 ^ 0x1A) << 8) | ((*(unsigned __int8 *)(a50 + (*(unsigned __int8 *)(v69 + v89) ^ 0x46)) ^ (*(unsigned __int8 *)(v69 + v89) + (~(2 * *(unsigned __int8 *)(v69 + v89)) | 0xBF) + 33) ^ 0xFFFFFFE7) << 24);
  uint64_t v91 = v66 & 0xFFFFFFF1 ^ 0xF4FAD41F;
  *(void *)(v68 - 192) = v91;
  int v92 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v69 + v91) ^ 0xD5)) ^ 0x80;
  uint64_t v93 = v66 & 0xFFFFFFFA ^ 0xF4FAD415;
  *(void *)(v68 - 224) = v93;
  int v94 = v87 | (v92 << 8);
  uint64_t v95 = v66 & 0xFFFFFFF4 ^ 0xF4FAD41F;
  *(void *)(v68 - 240) = v95;
  LOBYTE(v92) = (*(unsigned char *)(a48 + (*(unsigned __int8 *)(v69 + v93) ^ 0x9DLL)) + 89) ^ 0xF7;
  LODWORD(v86) = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v69 + v95) ^ 0xC2)) ^ 0xB6 | v90;
  uint64_t v96 = v66 & 0xFFFFFFF6 ^ 0xF4FAD41D;
  *(void *)(v68 - 256) = v96;
  uint64_t v253 = v66 & 0xFFFFFFF9 ^ 0xF4FAD417;
  LODWORD(v86) = v86 & 0xFF00FFFF | (((*(unsigned char *)(a48 + (*(unsigned __int8 *)(v69 + v96) ^ 0x3ELL)) + 89) ^ 0xDF) << 16);
  int v97 = *(unsigned __int8 *)(a47 + (*(unsigned __int8 *)(v69 + v253) ^ 0xA4));
  uint64_t v98 = v66 & 0xFFFFFFF0 ^ 0xF4FAD41F;
  *(void *)(v68 - 232) = v98;
  int v252 = v74 & 0xFF00FFFF | (v92 << 16) | ((v97 ^ 0xD0) << 8);
  int v99 = ((unsigned __int16)((v74 | (((unsigned __int16)v97 ^ 0xD0) << 8)) ^ a52) >> 8) ^ 0x4C;
  uint64_t v100 = *(void *)(v65 + 8 * a29);
  unsigned int v101 = *(_DWORD *)(v100 + 4 * (v99 ^ 0x6Du)) ^ (v99
                                                  + v64
                                                  - ((2 * (((v252 ^ a52) >> 8) ^ 0xB71C4C)) & 0x1F6));
  int v102 = v101 + 1808134091 - (v67 & (2 * v101));
  uint64_t v103 = *(void *)(v65 + 8 * (v71 - 944)) - 8;
  BYTE2(v90) = BYTE2(v79) ^ BYTE6(a52);
  LODWORD(v79) = v79 ^ HIDWORD(a52) ^ 0x730032AA;
  LODWORD(v93) = v102 ^ *(_DWORD *)(v103 + 4 * v79);
  int v251 = *(unsigned __int8 *)(a49 + (*(unsigned __int8 *)(v69 + v98) ^ 0x47)) ^ 0x93 | v94;
  unsigned int v104 = ((((unsigned __int16)(a51 ^ v251) >> 8) ^ 0x58)
        + v64
        + 1
        + ~(2 * (((unsigned __int16)(a51 ^ v251) >> 8) ^ 0x58 ^ ((a51 ^ v251) >> 8) & 4))) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(a51 ^ v251) >> 8) ^ 0x35u));
  int v105 = v93 + 711475531 - ((2 * v93) & 0x54D08296);
  uint64_t v106 = *(void *)(v65 + 8 * (v71 - 913)) - 4;
  int v107 = *(_DWORD *)(v106 + 4 * (((v86 ^ HIDWORD(a51)) >> 16) ^ 0x68u));
  HIDWORD(v109) = v107 ^ 0x463;
  LODWORD(v109) = v107 ^ 0xC790D000;
  int v108 = v109 >> 12;
  int v110 = *(_DWORD *)(v106 + 4 * BYTE2(v90));
  HIDWORD(v109) = v110 ^ 0x463;
  LODWORD(v109) = v110 ^ 0xC790D000;
  uint64_t v111 = (char *)*(&off_1F08CDB40 + HIDWORD(a28)) - 4;
  int v112 = *(_DWORD *)&v111[4 * (((v252 ^ a52) >> 24) ^ 0xB7)] ^ (v109 >> 12);
  int v113 = *(_DWORD *)(v106 + 4 * (((a51 ^ v251) >> 16) ^ 0xF4u));
  HIDWORD(v109) = v113 ^ 0x463;
  LODWORD(v109) = v113 ^ 0xC790D000;
  int v114 = (v104 + 711475531 - ((2 * v104) & 0x54D08296)) ^ v112;
  int v115 = *(_DWORD *)(v103 + 4 * ((v252 ^ a52) ^ 0xFBu)) ^ ((unsigned __int16)(v86 ^ WORD2(a51)) >> 8) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v86 ^ WORD2(a51)) >> 8) ^ 0x23u)) ^ 0x63F7517E ^ (v109 >> 12);
  int v116 = v115 + 711475531 - ((2 * v115) & 0x54D08296);
  int v117 = *(_DWORD *)(v106 + 4 * (((v252 ^ a52) >> 16) ^ 0x1Cu));
  HIDWORD(v109) = v117 ^ 0x463;
  LODWORD(v109) = v117 ^ 0xC790D000;
  int v118 = *(_DWORD *)&v111[4 * (((v86 ^ HIDWORD(a51)) >> 24) ^ 0xF6)] ^ (BYTE1(v79)
                                                                                    + v64
                                                                                    - ((v79 >> 7) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v79) ^ 0x6Du)) ^ ((v109 >> 12) + 711475531 - ((2 * (v109 >> 12)) & 0x54D08296));
  int v119 = HIDWORD(a46) ^ v108 ^ *(_DWORD *)&v111[4 * (((a51 ^ v251) >> 24) ^ 0x21)] ^ v105;
  unsigned int v120 = a46 ^ *(_DWORD *)(v103 + 4 * ((a51 ^ v251) ^ 0xFAu)) ^ (v118
                                                                                  + 1808134091
                                                                                  - (v67 & (2 * v118)));
  unsigned int v121 = HIDWORD(a45) ^ *(_DWORD *)(v103 + 4 * ((v86 ^ BYTE4(a51)) ^ 0x5Fu)) ^ (v114
                                                                                                 + 1808134091
                                                                                                 - (v67 & (2 * v114)));
  unsigned int v122 = v119 ^ 0xF9388C2F;
  int v123 = *(_DWORD *)(v106 + 4 * ((v119 ^ 0xF9388C2F) >> 16));
  HIDWORD(v109) = v123 ^ 0x463;
  LODWORD(v109) = v123 ^ 0xC790D000;
  int v124 = v109 >> 12;
  int v125 = *(_DWORD *)(v106 + 4 * (BYTE2(v120) ^ 0xC2u));
  HIDWORD(v109) = v125 ^ 0x463;
  LODWORD(v109) = v125 ^ 0xC790D000;
  int v126 = v109 >> 12;
  unsigned int v127 = HIDWORD(a29) ^ *(_DWORD *)&v111[4 * BYTE3(v79)] ^ v116;
  LODWORD(v86) = *(_DWORD *)(v106 + 4 * (BYTE2(v121) ^ 0x66u));
  HIDWORD(v109) = v86 ^ 0x463;
  LODWORD(v109) = v86 ^ 0xC790D000;
  LODWORD(v86) = (v109 >> 12) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v127) ^ 5u)) ^ ((BYTE1(v127) ^ 0x68)
                                                                              + v64
                                                                              - 2
                                                                              * (BYTE1(v127) ^ 0x68 ^ (v127 >> 8) & 4));
  int v128 = (v124 + 1808134091 - (v67 & (2 * v124))) ^ *(_DWORD *)(v103 + 4 * (v121 ^ 0xB6u));
  LODWORD(v86) = (v86 + 1808134091 - (v67 & (2 * v86))) ^ *(_DWORD *)(v103 + 4 * (v119 ^ 0x61u));
  unsigned int v129 = (((unsigned __int16)(v119 ^ 0x8C2F) >> 8) + v64 - (((v119 ^ 0xF9388C2F) >> 7) & 0x1F6)) ^ 0xD678EAEF ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v119 ^ 0x8C2F) >> 8) ^ 0x6Du));
  unsigned int v130 = *(_DWORD *)&v111[4 * (HIBYTE(v121) ^ 0x43)] ^ 0x88721AF5;
  int v131 = v129 + v130 - 2 * (v129 & v130);
  int v132 = *(_DWORD *)(v106 + 4 * (BYTE2(v127) ^ 0xBDu));
  HIDWORD(v109) = v132 ^ 0x463;
  LODWORD(v109) = v132 ^ 0xC790D000;
  int v133 = *(_DWORD *)&v111[4 * HIBYTE(v122)] ^ (v126 + 711475531 - ((2 * v126) & 0x54D08296));
  int v134 = *(_DWORD *)&v111[4 * (HIBYTE(v127) ^ 0x42)];
  int v135 = (v133 + 1808134091 - (v67 & (2 * v133))) ^ *(_DWORD *)(v103 + 4 * (v127 ^ 0xABu));
  unsigned int v136 = v134 ^ a56 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v120) ^ 0xEu)) ^ ((BYTE1(v120) ^ 0x63)
                                                                      + v64
                                                                      - ((2 * ((v120 >> 8) ^ 0xE3C263)) & 0x1F6)) ^ (v128 + 711475531 - ((2 * v128) & 0x54D08296));
  LOBYTE(v79) = BYTE1(v121) ^ 0x54;
  unsigned int v137 = a45 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v121) ^ 0x39u)) ^ (v135 + v64 + 1 + ~((2 * v135) & 0x10657DF6));
  unsigned int v138 = a44 ^ *(_DWORD *)(v103 + 4 * (v120 ^ 0xADu)) ^ ((v131 ^ (v109 >> 12))
                                                                          + 1808134091
                                                                          - (v67 & (2 * (v131 ^ (v109 >> 12)))));
  int v139 = *(_DWORD *)(v106 + 4 * (BYTE2(v138) ^ 0x79u));
  int v140 = HIDWORD(a44) ^ *(_DWORD *)&v111[4 * (HIBYTE(v120) ^ 0xE3)] ^ (v86 + 711475531 - ((2 * v86) & 0x54D08296));
  HIDWORD(v109) = v139 ^ 0x463;
  LODWORD(v109) = v139 ^ 0xC790D000;
  BYTE1(v132) = BYTE1(v140) ^ 0x68;
  int v141 = ((v109 >> 12) + 711475531 - ((2 * (v109 >> 12)) & 0x54D08296)) ^ *(_DWORD *)&v111[4
                                                                                         * ((v140 ^ 0x2261685Eu) >> 24)];
  int v142 = ((BYTE1(v138) ^ 0xD0) + v64 - ((2 * ((v138 >> 8) ^ 0x679D0)) & 0x1F6)) ^ *(_DWORD *)(v100
                                                                                            + 4
                                                                                            * (BYTE1(v138) ^ 0xBDu));
  int v143 = (v142 + 1808134091 - (v67 & (2 * v142))) ^ *(_DWORD *)(v103 + 4 * (v136 ^ 0x76u));
  LODWORD(v86) = ((BYTE1(v137) ^ 0xEC) + v64 - ((2 * ((v137 >> 8) ^ 0xE5FEC)) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v137) ^ 0x81u));
  int v144 = *(_DWORD *)(v106 + 4 * (BYTE2(v137) ^ 0x5Fu));
  HIDWORD(v109) = v144 ^ 0x463;
  LODWORD(v109) = v144 ^ 0xC790D000;
  int v145 = v109 >> 12;
  HIDWORD(v109) = *(_DWORD *)(v103 + 4 * (v140 ^ 0x5Eu)) ^ 0x82D2C843;
  LODWORD(v109) = HIDWORD(v109);
  LODWORD(v86) = (v109 >> 28) ^ __ROR4__(*(_DWORD *)&v111[4 * (HIBYTE(v138) ^ 6)] ^ 0x7462B151 ^ (v86+ 711475531- ((2 * v86) & 0x54D08296)), 28);
  int v146 = (v145 + 711475531 - ((2 * v145) & 0x54D08296)) ^ *(_DWORD *)&v111[4 * (HIBYTE(v136) ^ 0xD2)];
  int v147 = *(_DWORD *)(v106 + 4 * (BYTE2(v140) ^ 0x1Bu));
  int v148 = (v146 + 1808134091 - (v67 & (2 * v146))) ^ *(_DWORD *)(v103 + 4 * (v138 ^ 0x4Cu));
  HIDWORD(v109) = v147 ^ 0x463;
  LODWORD(v109) = v147 ^ 0xC790D000;
  int v149 = v109 >> 12;
  int v150 = v141 + 1808134091 - (v67 & (2 * v141));
  int v151 = BYTE1(v136) ^ 0xC0;
  int v152 = v151 + v64 - ((2 * ((v136 >> 8) ^ 0xD2CCC0)) & 0x1F6);
  int v153 = *(_DWORD *)(v106 + 4 * (BYTE2(v136) ^ 0xCCu));
  HIDWORD(v109) = v153 ^ 0x463;
  LODWORD(v109) = v153 ^ 0xC790D000;
  int v154 = HIDWORD(a43) ^ (v109 >> 12) ^ __ROR4__(v86 ^ 0x78071371, 4);
  unsigned int v155 = a43 ^ *(_DWORD *)&v111[4 * (HIBYTE(v137) ^ 0xE)] ^ v149 ^ (v143 + 711475531 - ((2 * v143) & 0x54D08296));
  int v156 = BYTE1(v132);
  unsigned int v157 = HIDWORD(a42) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v132) ^ 0x6Du)) ^ (v148 + v64 - ((2 * v148) & 0x10657DF6));
  LODWORD(v79) = a42 ^ v152 ^ *(_DWORD *)(v103 + 4 * ((v137 ^ v79) ^ 0xCAu)) ^ *(_DWORD *)(v100 + 4 * (v151 ^ 0x6Du)) ^ v150;
  unsigned int v158 = v156 ^ 0x4552953C ^ v157;
  int v159 = *(_DWORD *)(v106 + 4 * BYTE2(v158));
  HIDWORD(v109) = v159 ^ 0x463;
  LODWORD(v109) = v159 ^ 0xC790D000;
  int v160 = v109 >> 12;
  BYTE1(v159) = BYTE1(v154) ^ 0xE7;
  int v161 = *(_DWORD *)(v106 + 4 * ((v154 ^ 0x99FEE750) >> 16));
  HIDWORD(v109) = v161 ^ 0x463;
  LODWORD(v109) = v161 ^ 0xC790D000;
  int v162 = BYTE1(v155) ^ 0x29;
  int v163 = v162 + v64 - ((2 * ((v155 >> 8) ^ 0xA73B29)) & 0x1F6);
  LODWORD(v98) = (BYTE1(v158) + v64 - ((v158 >> 7) & 0x1F6)) ^ *(_DWORD *)(v103 + 4 * (v155 ^ 0x72u)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v158) ^ 0x6Du)) ^ ((v109 >> 12) + 1808134091 - (v67 & (2 * (v109 >> 12))));
  int v164 = *(_DWORD *)(v106 + 4 * (BYTE2(v79) ^ 2u));
  HIDWORD(v109) = v164 ^ 0x463;
  LODWORD(v109) = v164 ^ 0xC790D000;
  int v165 = *(_DWORD *)&v111[4 * (HIBYTE(v155) ^ 0xA7)] ^ (v109 >> 12);
  int v166 = *(_DWORD *)(v106 + 4 * (BYTE2(v155) ^ 0x3Bu));
  HIDWORD(v109) = v166 ^ 0x463;
  LODWORD(v109) = v166 ^ 0xC790D000;
  int v167 = *(_DWORD *)(v103 + 4 * v158) ^ v165 ^ 0x41ADAE80;
  LODWORD(v86) = HIDWORD(a41) ^ ((BYTE1(v79) ^ 0xD9) + v64 - ((2 * ((v79 >> 8) ^ 0x9802D9)) & 0x1F6)) ^ *(_DWORD *)(v103 + 4 * (v154 ^ 0x1Eu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v79) ^ 0xB4u)) ^ (v109 >> 12) ^ *(_DWORD *)&v111[4 * (HIBYTE(v157) ^ 0x61)];
  unsigned int v168 = a41 ^ *(_DWORD *)&v111[4 * (BYTE3(v79) ^ 0x98)] ^ (v98 + 711475531 - ((2 * v98) & 0x54D08296));
  unsigned int v169 = HIDWORD(a40) ^ v163 ^ *(_DWORD *)(v103 + 4 * (v79 ^ 0x3Du)) ^ *(_DWORD *)&v111[4 * ((v154 ^ 0x99FEE750) >> 24)] ^ *(_DWORD *)(v100 + 4 * (v162 ^ 0x6Du)) ^ v160;
  unsigned int v170 = a40 ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v154 ^ 0xE750) >> 8) ^ 0x6Du)) ^ (v167 + v64 - ((2 * v167) & 0x10657DF6));
  LODWORD(v98) = *(_DWORD *)(v106 + 4 * (BYTE2(v86) ^ 0xF1u));
  HIDWORD(v109) = v98 ^ 0x463;
  LODWORD(v109) = v98 ^ 0xC790D000;
  LODWORD(v98) = v109 >> 12;
  int v171 = *(_DWORD *)(v106 + 4 * (BYTE2(v169) ^ 0x45u));
  HIDWORD(v109) = v171 ^ 0x463;
  LODWORD(v109) = v171 ^ 0xC790D000;
  int v172 = BYTE1(v169) ^ 0x51;
  int v173 = v172 + v64 - ((2 * ((v169 >> 8) ^ 0x944551)) & 0x1F6);
  int v174 = *(_DWORD *)(v103 + 4 * ((v170 ^ BYTE1(v159)) ^ 0x41u)) ^ (((unsigned __int16)(v86 ^ 0xCEE5) >> 8)
                                                                                    + v64
                                                                                    - (((v86 ^ 0xE18BCEE5) >> 7) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v86 ^ 0xCEE5) >> 8) ^ 0x6Du)) ^ ((v109 >> 12) + 1808134091 - (v67 & (2 * (v109 >> 12))));
  int v175 = v174 + 711475531 - ((2 * v174) & 0x54D08296);
  int v176 = *(_DWORD *)(v106 + 4 * (BYTE2(v170) ^ 0x81u));
  HIDWORD(v109) = v176 ^ 0x463;
  LODWORD(v109) = v176 ^ 0xC790D000;
  int v177 = ((v109 >> 12) + 711475531 - ((2 * (v109 >> 12)) & 0x54D08296)) ^ *(_DWORD *)&v111[4
                                                                                         * ((v86 ^ 0xE18BCEE5) >> 24)];
  int v178 = (v177 + 1808134091 - (v67 & (2 * v177))) ^ *(_DWORD *)(v103 + 4 * (v169 ^ 0x85u));
  unsigned int v179 = *(_DWORD *)(v106 + 4 * (BYTE2(v168) ^ 0xC6u));
  LODWORD(v98) = ((BYTE1(v170) ^ 0xA0) + v64 - 2 * (BYTE1(v170) ^ 0xA0 ^ (v170 >> 8) & 4)) ^ (v98
                                                                                            + 1808134091
                                                                                            - (v67 & (2 * v98))) ^ *(_DWORD *)(v103 + 4 * (v168 ^ 0xFCu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v170) ^ 0xCDu));
  LODWORD(v109) = __ROR4__((v179 >> 12) ^ 0x261A42F, 17) ^ 0xEE910136;
  HIDWORD(v109) = v109;
  int v180 = (v109 >> 15) + (v179 << 20);
  LODWORD(v79) = HIDWORD(a39) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v168) ^ 0x75u)) ^ (v178 + v64 - ((2 * v178) & 0x10657DF6));
  unsigned int v181 = a39 ^ *(_DWORD *)&v111[4 * (HIBYTE(v169) ^ 0x94)] ^ (v98 + 711475531 - ((2 * v98) & 0x54D08296));
  int v182 = HIDWORD(a38) ^ *(_DWORD *)&v111[4 * (HIBYTE(v168) ^ 0x5A)] ^ v175;
  unsigned int v183 = a38 ^ v173 ^ *(_DWORD *)(v103 + 4 * (v86 ^ 0xE5u)) ^ *(_DWORD *)&v111[4
                                                                                                * (HIBYTE(v170) ^ 0x68)] ^ *(_DWORD *)(v100 + 4 * (v172 ^ 0x6Du)) ^ v180;
  LODWORD(v98) = ((BYTE1(v79) ^ 0x9D) + v64 - ((2 * ((v79 >> 8) ^ 0xC2489D)) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v79) ^ 0xF0u));
  unsigned int v184 = *(_DWORD *)(v106 + 4 * (BYTE2(v181) ^ 0x8Fu));
  LODWORD(v98) = *(_DWORD *)(v103 + 4 * (v183 ^ 0xAu)) ^ (v184 << 20) ^ (v184 >> 12) ^ 0x463C790D ^ (v98 + 1808134091 - (v67 & (2 * v98)));
  int v185 = *(_DWORD *)(v106 + 4 * ((v182 ^ 0xCFB8D782) >> 16));
  HIDWORD(v109) = v185 ^ 0x463;
  LODWORD(v109) = v185 ^ 0xC790D000;
  int v186 = ((v109 >> 12) + 1808134091 - (v67 & (2 * (v109 >> 12)))) ^ *(_DWORD *)(v103
                                                                              + 4
                                                                              * ((v79 ^ BYTE1(v168)) ^ 0x3Fu));
  int v187 = v98 + 711475531 - ((2 * v98) & 0x54D08296);
  LODWORD(v98) = v186 + 711475531 - ((2 * v186) & 0x54D08296);
  int v188 = *(_DWORD *)(v106 + 4 * (BYTE2(v79) ^ 0x48u));
  HIDWORD(v109) = v188 ^ 0x463;
  LODWORD(v109) = v188 ^ 0xC790D000;
  LODWORD(v86) = BYTE1(v181) ^ 0xD9;
  int v189 = v86 + v64 - ((2 * ((v181 >> 8) ^ 0xC78FD9)) & 0x1F6);
  int v190 = ((BYTE1(v183) ^ 0xCE) + v64 - ((2 * ((v183 >> 8) ^ 0x2116CE)) & 0x1F6)) ^ *(_DWORD *)(v103
                                                                                             + 4
                                                                                             * ((BYTE4(a38) ^ v111[4 * (HIBYTE(v168) ^ 0x5A)] ^ v175) ^ 0xCCu)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v183) ^ 0xA3u)) ^ ((v109 >> 12) + 1808134091 - (v67 & (2 * (v109 >> 12))));
  int v191 = *(_DWORD *)(v106 + 4 * (BYTE2(v183) ^ 0x16u));
  HIDWORD(v109) = v191 ^ 0x463;
  LODWORD(v109) = v191 ^ 0xC790D000;
  LODWORD(v79) = HIDWORD(a37) ^ (((unsigned __int16)(v182 ^ 0xD782) >> 8)
                               + v64
                               - (((v182 ^ 0xCFB8D782) >> 7) & 0x1F6)) ^ *(_DWORD *)(v103
                                                                                   + 4
                                                                                   * (v181 ^ 0x50u)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v182 ^ 0xD782) >> 8) ^ 0x6Du)) ^ *(_DWORD *)&v111[4 * (BYTE3(v79) ^ 0xC2)] ^ (v109 >> 12);
  unsigned int v192 = a37 ^ *(_DWORD *)&v111[4 * (HIBYTE(v181) ^ 0xC7)] ^ (v190 + 711475531 - ((2 * v190) & 0x54D08296));
  unsigned int v193 = HIDWORD(a36) ^ *(_DWORD *)&v111[4 * ((v182 ^ 0xCFB8D782) >> 24)] ^ v187;
  unsigned int v194 = a36 ^ v189 ^ *(_DWORD *)(v100 + 4 * (v86 ^ 0x6D)) ^ *(_DWORD *)&v111[4 * (HIBYTE(v183) ^ 0x21)] ^ v98;
  LODWORD(v86) = *(_DWORD *)(v106 + 4 * (BYTE2(v192) ^ 0xE6u));
  HIDWORD(v109) = v86 ^ 0x463;
  LODWORD(v109) = v86 ^ 0xC790D000;
  LODWORD(v86) = v109 >> 12;
  unsigned int v195 = (((unsigned __int16)(v194 ^ 0xCCA2) >> 8) + v64 - (((v194 ^ 0x33C8CCA2) >> 7) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v194 ^ 0xCCA2) >> 8) ^ 0x6Du));
  int v196 = *(_DWORD *)(v106 + 4 * (BYTE2(v193) ^ 0x1Cu));
  HIDWORD(v109) = v196 ^ 0x463;
  LODWORD(v109) = v196 ^ 0xC790D000;
  LODWORD(v98) = (v109 >> 12) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v192) ^ 0xD9u)) ^ ((BYTE1(v192) ^ 0xB4)
                                                                                 + v64
                                                                                 - ((2 * ((v192 >> 8) ^ 0x4FE6B4)) & 0x1F6));
  LODWORD(v98) = (v98 + 1808134091 - (v67 & (2 * v98))) ^ *(_DWORD *)(v103 + 4 * (v79 ^ 0x6Au));
  int v197 = (v195 + 1808134091 - (v67 & (2 * v195))) ^ *(_DWORD *)(v103 + 4 * (v193 ^ 0x3Au));
  int v198 = *(_DWORD *)(v103 + 4 * (v194 ^ 0xA2u)) ^ (((unsigned __int16)(v79 ^ 0xBA6A) >> 8)
                                                                    + v64
                                                                    - (((v79 ^ 0x589EBA6A) >> 7) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (((unsigned __int16)(v79 ^ 0xBA6A) >> 8) ^ 0x6Du)) ^ (v86 + 1808134091 - (v67 & (2 * v86)));
  LODWORD(v86) = *(_DWORD *)(v103 + 4 * (v192 ^ 0x96u));
  HIDWORD(v109) = v86 ^ 0xBC5EFCB;
  LODWORD(v109) = v86 ^ 0x60000000;
  HIDWORD(v109) = (v109 >> 29) ^ 0x6615DA09;
  LODWORD(v109) = HIDWORD(v109);
  LODWORD(v86) = (v109 >> 3) + v64 - ((2 * (v109 >> 3)) & 0x10657DF6);
  int v199 = *(_DWORD *)(v106 + 4 * ((v79 ^ 0x589EBA6A) >> 16));
  HIDWORD(v109) = v199 ^ 0x463;
  LODWORD(v109) = v199 ^ 0xC790D000;
  int v200 = v109 >> 12;
  int v201 = *(_DWORD *)(v106 + 4 * ((v194 ^ 0x33C8CCA2) >> 16));
  HIDWORD(v109) = v201 ^ 0x463;
  LODWORD(v109) = v201 ^ 0xC790D000;
  unsigned int v202 = HIDWORD(a35) ^ *(_DWORD *)&v111[4 * (HIBYTE(v194) ^ 0x17)] ^ (v98 + 711475531 - ((2 * v98) & 0x54D08296));
  int v203 = BYTE1(v193);
  LODWORD(v98) = v86 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v193) ^ 0xD1u)) ^ (v109 >> 12);
  LODWORD(v79) = *(_DWORD *)&v111[4 * (BYTE3(v79) ^ 0x7C)] ^ a55 ^ (v98 + 711475531 - ((2 * v98) & 0x54D08296));
  unsigned int v204 = a35 ^ *(_DWORD *)&v111[4 * (HIBYTE(v192) ^ 0x4F)] ^ v200 ^ (v197 + 711475531 - ((2 * v197) & 0x54D08296));
  unsigned int v205 = HIDWORD(a34) ^ *(_DWORD *)&v111[4 * (HIBYTE(v193) ^ 0x1B)] ^ (v198 + 711475531 - ((2 * v198) & 0x54D08296));
  LODWORD(v98) = *(_DWORD *)(v106 + 4 * (BYTE2(v205) ^ 0x7Eu));
  HIDWORD(v109) = v98 ^ 0x463;
  LODWORD(v109) = v98 ^ 0xC790D000;
  int v206 = v109 >> 12;
  LODWORD(v98) = *(_DWORD *)(v106 + 4 * (BYTE2(v204) ^ 1u));
  HIDWORD(v109) = v98 ^ 0x463;
  LODWORD(v109) = v98 ^ 0xC790D000;
  LODWORD(v98) = ((v109 >> 12) + 1808134091 - (v67 & (2 * (v109 >> 12)))) ^ *(_DWORD *)(v103
                                                                                      + 4
                                                                                      * (v202 ^ 0xC6u));
  int v207 = ((BYTE1(v202) ^ 0x71) + v64 - ((2 * ((v202 >> 8) ^ 0xF25B71)) & 0x1F6)) ^ *(_DWORD *)(v100
                                                                                             + 4
                                                                                             * (BYTE1(v202) ^ 0x1Cu));
  int v208 = *(_DWORD *)(v106 + 4 * (BYTE2(v202) ^ 0x5Bu));
  HIDWORD(v109) = v208 ^ 0x463;
  LODWORD(v109) = v208 ^ 0xC790D000;
  int v209 = v109 >> 12;
  int v210 = (v207 + 711475531 - ((2 * v207) & 0x54D08296)) ^ *(_DWORD *)&v111[4 * (HIBYTE(v204) ^ 0x1F)];
  unsigned int v211 = v203 ^ 0x73F4E0AF ^ v79;
  int v212 = *(_DWORD *)(v106 + 4 * BYTE2(v211));
  HIDWORD(v109) = v212 ^ 0x463;
  LODWORD(v109) = v212 ^ 0xC790D000;
  LODWORD(v86) = v109 >> 12;
  HIDWORD(v109) = v206 ^ ((BYTE1(v204) ^ 0x81) + v64 - 2 * (BYTE1(v204) ^ 0x81 ^ (v204 >> 8) & 4)) ^ 0xD678EAEF ^ *(_DWORD *)(v100 + 4 * (BYTE1(v204) ^ 0xECu));
  LODWORD(v109) = HIDWORD(v109);
  LODWORD(v109) = (v109 >> 11) ^ __ROR4__(*(_DWORD *)&v111[4 * (HIBYTE(v202) ^ 0xF2)] ^ 0x88721AF5, 11) ^ 0xD490839A;
  HIDWORD(v109) = v109;
  unsigned int v213 = a34 ^ *(_DWORD *)(v103 + 4 * (v204 ^ 0xB8u)) ^ ((BYTE1(v205) ^ 0xAA)
                                                                          + v64
                                                                          + 1
                                                                          + ~(2 * (BYTE1(v205) ^ 0xAA ^ (v205 >> 8) & 4))) ^ *(_DWORD *)&v111[4 * (BYTE3(v79) ^ 0x57)] ^ v209 ^ *(_DWORD *)(v100 + 4 * (BYTE1(v205) ^ 0xC7u));
  unsigned int v214 = HIDWORD(a33) ^ *(_DWORD *)&v111[4 * (HIBYTE(v205) ^ 0x96)] ^ (BYTE1(v211) + v64 - ((v211 >> 7) & 0x1F6)) ^ *(_DWORD *)(v100 + 4 * (BYTE1(v211) ^ 0x6Du)) ^ (v98 + 711475531 - ((2 * v98) & 0x54D08296));
  LODWORD(v98) = a33 ^ *(_DWORD *)(v103 + 4 * (v205 ^ 0x88u)) ^ v86 ^ (v210
                                                                                        + 1808134091
                                                                                        - (v67 & (2 * v210)));
  unsigned int v215 = HIDWORD(a32) ^ *(_DWORD *)(v103 + 4 * v211) ^ ((v109 >> 21)
                                                                         + 1808134091
                                                                         - (v67 & (2 * (v109 >> 21))));
  LODWORD(v79) = *(_DWORD *)(v106 + 4 * (BYTE2(v213) ^ 0x46u));
  HIDWORD(v109) = v79 ^ 0x463;
  LODWORD(v109) = v79 ^ 0xC790D000;
  LODWORD(v79) = v109 >> 12;
  int v216 = *(_DWORD *)(v100 + 4 * (BYTE1(v214) ^ 0x96u)) ^ ((BYTE1(v214) ^ 0xFB)
                                                          + v64
                                                          - ((2 * ((v214 >> 8) ^ 0x3EA2FB)) & 0x1F6));
  int v217 = (v216 + 1808134091 - (v67 & (2 * v216))) ^ *(_DWORD *)(v103 + 4 * (v98 ^ 0x75u));
  int v218 = *(_DWORD *)(v106 + 4 * (BYTE2(v214) ^ 0xA2u));
  HIDWORD(v109) = v218 ^ 0x463;
  LODWORD(v109) = v218 ^ 0xC790D000;
  int v219 = (((unsigned __int16)(v98 ^ 0xF075) >> 8)
        + v64
        - (((v98 ^ 0xB54AF075) >> 7) & 0x1F6)) ^ (v109 >> 12) ^ *(_DWORD *)(v100
                                                                                        + 4
                                                                                        * (((unsigned __int16)(v98 ^ 0xF075) >> 8) ^ 0x6Du));
  int v220 = (v219 + 711475531 - ((2 * v219) & 0x54D08296)) ^ *(_DWORD *)&v111[4 * (HIBYTE(v215) ^ 0xED)];
  LODWORD(v86) = *(_DWORD *)&v111[4 * (HIBYTE(v214) ^ 0x3E)];
  int v221 = *(_DWORD *)&v111[4 * (HIBYTE(v213) ^ 0x86)];
  v215 ^= 0xC9AF1D8F;
  int v222 = *(_DWORD *)(v103 + 4 * v215);
  int v223 = *(_DWORD *)(v103 + 4 * (v214 ^ 0x9Au));
  LODWORD(v103) = *(_DWORD *)(v103 + 4 * (v213 ^ 0xEFu));
  int v224 = BYTE1(v215);
  int v225 = BYTE1(v215) + v64 - ((v215 >> 7) & 0x1F6);
  unsigned int v226 = *(_DWORD *)(v106 + 4 * BYTE2(v215));
  int v227 = *(_DWORD *)(v106 + 4 * (BYTE2(v98) ^ 0x4Au));
  HIDWORD(v109) = v227 ^ 0x463;
  LODWORD(v109) = v227 ^ 0xC790D000;
  int v228 = (v213 >> 8) ^ 0x86466E;
  int v229 = *(_DWORD *)(v100 + 4 * (v228 ^ 0x6Du));
  LODWORD(v100) = a32 ^ v223 ^ v79 ^ *(_DWORD *)&v111[4 * (BYTE3(v98) ^ 0x91)] ^ v225 ^ *(_DWORD *)(v100
                                                                                                  + 4 * (v224 ^ 0x6Du));
  unsigned int v230 = HIDWORD(a31) ^ (v228 + v64 - ((2 * v228) & 0x1F6)) ^ v86 ^ v229 ^ v222 ^ (v109 >> 12);
  LODWORD(v106) = a31 ^ v103 ^ (v220 + 1808134091 - (v67 & (2 * v220)));
  LODWORD(v98) = HIDWORD(a30) ^ v221 ^ (v226 >> 12) ^ (v226 << 20);
  v231 = (char *)*(&off_1F08CDB40 + a28) - 12;
  v232 = (char *)*(&off_1F08CDB40 + HIDWORD(a27)) - 4;
  LODWORD(v103) = *(_DWORD *)&v232[4 * (BYTE1(v100) ^ 0xDF)];
  unsigned int v233 = v98 ^ (v217 + 711475531 - ((2 * v217) & 0x54D08296));
  LODWORD(v98) = *(_DWORD *)&v231[4 * (v106 ^ 7)] ^ *(_DWORD *)&v232[4 * (BYTE1(v233) ^ 0x5A)] ^ 0x1819B9BB;
  uint64_t v234 = *(unsigned int *)&v232[4 * ((unsigned __int16)(v106 ^ 0x6F07) >> 8)];
  uint64_t v235 = *(unsigned int *)&v232[4 * (BYTE1(v230) ^ 0x13)];
  v236 = (char *)*(&off_1F08CDB40 + HIDWORD(a26)) - 8;
  int v237 = *(_DWORD *)&v236[4 * (BYTE3(v106) ^ 0xEF)];
  LODWORD(v86) = *(_DWORD *)&v236[4 * (HIBYTE(v230) ^ 0x89)];
  int v238 = *(_DWORD *)&v236[4 * (HIBYTE(v233) ^ 0xDB)];
  LODWORD(v236) = *(_DWORD *)&v236[4 * (BYTE3(v100) ^ 0x70)];
  v239 = (char *)*(&off_1F08CDB40 + a27) - 8;
  int v240 = *(_DWORD *)&v239[4 * (BYTE2(v233) ^ 0x80)];
  int v241 = *(_DWORD *)&v239[4 * (BYTE2(v106) ^ 0x2A)];
  LODWORD(v106) = *(_DWORD *)&v239[4 * (BYTE2(v230) ^ 0x9D)];
  LODWORD(v98) = v86 ^ (v98 + 568772136 - ((2 * v98) & 0x43CD8C50));
  LODWORD(v111) = *(_DWORD *)&v231[4 * (v100 ^ 0x5C)];
  LODWORD(v98) = *(_DWORD *)&v239[4 * (BYTE2(v100) ^ 0x26)] ^ (v98 + 1379586126 - ((2 * v98) & 0xA475A09C));
  int v242 = *(_DWORD *)&v231[4 * (v230 ^ 0x62)];
  int v243 = *(_DWORD *)&v231[4 * (v233 ^ 0xD6)];
  LODWORD(v231) = *(_DWORD *)(v68 - 132) ^ a53 ^ (v98 - ((2 * v98) & 0x9AFD019C) + 1300136142);
  uint64_t v244 = (uint64_t)*(&off_1F08CDB40 + a26);
  *(unsigned char *)(a57 + *(void *)(v68 - 248)) = *(unsigned char *)(v244 + ((v231 >> 24) ^ 0xD7)) ^ 0x3E;
  LODWORD(v98) = ((v234 ^ v240 ^ 0x3A9DDA60)
                + 568772136
                - 2 * ((v234 ^ v240 ^ 0x3A9DDA60) & 0x21E6C62E ^ (v234 ^ v240) & 6)) ^ v236;
  LODWORD(v98) = (v98 + 1891546005 - ((2 * v98) & 0xE17D672A)) ^ v242;
  LODWORD(v98) = *(_DWORD *)(v68 - 128) ^ HIDWORD(a53) ^ (v98 - ((2 * v98) & 0x6FE349E4) - 1208900366);
  v245 = (char *)*(&off_1F08CDB40 + HIDWORD(a25)) - 4;
  *(unsigned char *)(a57 + *(void *)(v68 - 216)) = (v245[v98 ^ 0xC7] + 112) ^ 0x5F;
  v246 = (char *)*(&off_1F08CDB40 + a25) - 8;
  LODWORD(v236) = v246[BYTE1(v98) ^ 0x13];
  HIDWORD(v109) = v236 ^ 0x2D;
  LODWORD(v109) = v236 << 24;
  *(unsigned char *)(a57 + v253) = (v109 >> 30) ^ 0x40;
  LODWORD(v236) = ((v111 ^ 0x228463DB ^ v241)
                 + 568772136
                 - ((2 * (v111 ^ 0x228463DB ^ v241)) & 0x43CD8C50)) ^ v238;
  LODWORD(v236) = (v236 - ((2 * v236) & 0xD14E145C) + 1755777582) ^ v235;
  LODWORD(v86) = *(_DWORD *)(v68 - 124) ^ HIDWORD(a54) ^ (v236 - ((2 * v236) & 0xFEBD79C0) - 10568480);
  LODWORD(v236) = v246[BYTE1(v86)];
  HIDWORD(v109) = v236 ^ 0x2D;
  LODWORD(v109) = v236 << 24;
  int v247 = v237 ^ v103;
  *(unsigned char *)(a57 + *(void *)(v68 - 208)) = (v109 >> 30) ^ 0x7E;
  v248 = (char *)*(&off_1F08CDB40 + HIDWORD(a24)) - 4;
  *(unsigned char *)(a57 + *(void *)(v68 - 256)) = v248[BYTE2(v231) ^ 0xFBLL] ^ 0xC7;
  LODWORD(v236) = ((v247 ^ 0x4941CC06) + 1379586126 - 2 * ((v247 ^ 0x4941CC06) & 0x523AD05E ^ v247 & 0x10)) ^ v106;
  LODWORD(v236) = (v236 + 1891546005 - ((2 * v236) & 0xE17D672A)) ^ v243;
  LODWORD(v236) = *(_DWORD *)(v68 - 120) ^ a54 ^ (v236 - ((2 * v236) & 0x7D5E6FC4) - 1095813150);
  *(unsigned char *)(a57 + *(void *)(v68 - 168)) = v248[BYTE2(v236) ^ 0xB8] ^ 0x14;
  *(unsigned char *)(a57 + *(void *)(v68 - 240)) = (v245[v231 ^ 0x1BLL] + 112) ^ 0x7D;
  *(unsigned char *)(a57 + *(void *)(v68 - 224)) = v248[BYTE2(v98) ^ 3] ^ 0x6A;
  *(unsigned char *)(a57 + *(void *)(v68 - 176)) = *(unsigned char *)(v244 + (BYTE3(v98) ^ 0x6DLL)) ^ 0xC6;
  LODWORD(v98) = v246[BYTE1(v231) ^ 0x92];
  HIDWORD(v109) = v98 ^ 0x2D;
  LODWORD(v109) = v98 << 24;
  *(unsigned char *)(a57 + *(void *)(v68 - 152)) = (v109 >> 30) ^ 0xD2;
  uint64_t v249 = *(void *)(v68 - 200);
  *(unsigned char *)(a57 + v249) = *(unsigned char *)(v244 + (BYTE3(v86) ^ 0x53)) ^ 0x2A;
  *(unsigned char *)(a57 + *(void *)(v68 - 184)) = (v245[v86 ^ 0x95] + 112) ^ 0xAF;
  *(unsigned char *)(a57 + *(void *)(v68 - 232)) = (v245[v236 ^ 0x64] + 112) ^ 0x27;
  *(unsigned char *)(a57 + *(void *)(v68 - 160)) = *(unsigned char *)(v244 + ((v236 >> 24) ^ 0x6ELL)) ^ 0xBC;
  LODWORD(v98) = v246[BYTE1(v236) ^ 0x1FLL];
  HIDWORD(v109) = v98 ^ 0x2D;
  LODWORD(v109) = v98 << 24;
  *(unsigned char *)(a57 + *(void *)(v68 - 192)) = (v109 >> 30) ^ 0x58;
  *(unsigned char *)(a57 + *(void *)(v68 - 144)) = v248[BYTE2(v86) ^ 0xC8] ^ 0x45;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a59 + 8 * ((1096 * (((v249 - 184888283 - 2 * ((v249 + 16) & 0x74FAD41D ^ v66 & 8)) ^ 0xF4FAD415) < a30)) ^ (*(_DWORD *)(v68 - 116) - 583))))(19, v235, 42, 568772136, 45, 3783092010, 1891546005, v234, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54);
}

uint64_t sub_1B026481C@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v5 = (((((a2 + 1947429836) & 0x94EC65AE) + 536873573) | 0xD7002420) + 919828612) & 0xD22C57FF;
  int v6 = **(unsigned __int8 **)(v4 + 80) - (*((unsigned __int8 *)*(&off_1F08CDB40 + (a2 ^ (a1 + 7))) - 2) ^ 0xE5);
  BOOL v8 = (v6 ^ 0xEF9B7F7D) + ((2 * v6) & 0xDF36FEFA) + 527229912 != v3 || v5 == 0x4A6;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)((3252 * v8) ^ v5)))(v4 + 80);
}

uint64_t sub_1B02648B4()
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((39
                                              * (v1 + v0 + 338837507 < ((146 * (v3 ^ 0x24E) + 1898542513) & 0x8ED6857D ^ 0x17D))) ^ v3)))(v2);
}

uint64_t sub_1B0264924()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v0 ^ 0x259 ^ (((v1 - 1262286146) & 0x81B635FE) - 645)) > 7)
                                     * (281 * ((v1 - 1262286146) & 0x81B635FE ^ 0x4EC) - 535)) ^ (v1 - 1262286146) & 0x81B635FE)))();
}

uint64_t sub_1B0264980(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)(((((v8 + 1576629962) & 0xF2EEE7FD ^ (v12 - 230)) + ((v8 - 2120) | 0x86))
                                     * (*(_DWORD *)(v11 + 48 * (v9 + a8) + 36) == v9)) | v8)))();
}

uint64_t sub_1B02649E4()
{
  int v8 = (void *)(v6 - 0x67843F9A1244BAC3);
  BOOL v9 = v1 + 40963502 < -2106520016;
  unsigned int v10 = ((2 * (*(_DWORD *)(*v8 + 4 * (v0 + 130)) ^ v3)) << (v2 ^ 0x1F)) | ((*(_DWORD *)(*v8 + 4 * (v0 + 129)) ^ v3) >> v2);
  *(_DWORD *)void *v8 = v10 + ((v5 + 51) ^ (v3 + 268)) - (v4 & (2 * v10));
  if (v1 + 40963502 >= -2106520016) {
    BOOL v9 = v1 + 40963502 > 40963633;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1271 * v9) ^ (v5 - 255))))();
}

uint64_t sub_1B0264ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  int v23 = ((v20 + 684) ^ 0x596C891) + v21;
  int v24 = (a20 > 0x39590137) ^ (v23 < 69 * (v20 ^ 0x207) - 962134880);
  BOOL v25 = v23 < (int)(a20 + 1185349320);
  if (v24) {
    BOOL v25 = a20 > 0x39590137;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * ((1307 * v25) ^ v20)))();
}

uint64_t sub_1B0264B40@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  BOOL v7 = a2 < v2;
  if (v7 == a1 + v4 < v2) {
    BOOL v7 = a2 > a1 + v4;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * (((((4 * v3) ^ v6) - 1352) * v7) ^ v3)))();
}

uint64_t sub_1B0264BD8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (a3 ^ ((v3 - v5 == -2051424976) | (32 * (v3 - v5 == -2051424976))))))();
}

uint64_t sub_1B0264C48(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (v9 | (8
                                     * (((a8 + (v9 ^ 0x211) - 178) ^ 0x6556F5BCu) + v8 < ((8 * (v9 ^ 0x211)) ^ (a1 + 880))
                                                                                       + v8)))))();
}

uint64_t sub_1B0264C9C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 == 24) * ((a3 - 1309) ^ 0xD47)) ^ a3)))();
}

uint64_t sub_1B0264CCC@<X0>(uint64_t a1@<X8>)
{
  int v5 = (((v3 - 489) | 0x400) + 2144799759) & (v4 + 1132741596);
  unsigned int v6 = 535753261 * (((~v8 & 0x516F954C) - (~v8 | 0x516F954D)) ^ 0x5B9B9B62);
  v8[0] = v3 - v6 + 209;
  v8[1] = v1 + v6 - v5 - 1582454275;
  uint64_t v9 = v2;
  return (*(uint64_t (**)(_DWORD *))(a1 + 8 * (v3 ^ 0x96D)))(v8);
}

uint64_t sub_1B0264D68(uint64_t a1, int a2, int a3)
{
  unsigned int v6 = v3 - 1464369795 + (a2 ^ a3) - 1032;
  BOOL v7 = v5 + 977124861 > v6;
  if ((v5 + 977124861) < 0xCEF179E5 != v6 < 0xCEF179E5) {
    BOOL v7 = (v5 + 977124861) < 0xCEF179E5;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((100 * !v7) ^ a2)))();
}

uint64_t sub_1B0264DDC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v21 = (((((a9 + 1947429836) & 0x94EC65AE) + 536873573) | 0xD7002420) + 919828612) & 0xD22C57FF;
  int v22 = *(unsigned __int8 *)(*a1 + v17 + 0x3E76A940CF826F04)
      - (*((unsigned __int8 *)*(&off_1F08CDB40 + v12 + a9 - 255) + v17 + 0x3E76A940CF826F04) ^ v13);
  BOOL v24 = (v22 ^ v19) + (v15 & (2 * v22)) + v14 != v18 || v21 + a6 + 0x3E76A940C7A3D88FLL == 0x3E76A940CF826F04;
  return (*(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 8 * (int)((v24 * v20) ^ v21)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12);
}

uint64_t sub_1B0264E10(uint64_t a1, uint64_t a2, int a3)
{
  v9.i64[0] = 0xCACACACACACACACALL;
  v9.i64[1] = 0xCACACACACACACACALL;
  v10.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v10.i64[1] = 0xE5E5E5E5E5E5E5E5;
  uint64_t v11 = v6 + (((a3 ^ 0x56C) - 601) ^ v4);
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v7 + v11 - 15));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  int8x16_t v14 = vrev64q_s8(*(int8x16_t *)(v7 + v11 - 31));
  int8x16_t v15 = vextq_s8(v14, v14, 8uLL);
  uint64_t v16 = v3 + v11;
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v9)), v10));
  *(int8x16_t *)(v16 - 15) = vextq_s8(v17, v17, 8uLL);
  int8x16_t v18 = vrev64q_s8(vaddq_s8(vsubq_s8(v15, vandq_s8(vaddq_s8(v15, v15), v9)), v10));
  *(int8x16_t *)(v16 - 31) = vextq_s8(v18, v18, 8uLL);
  return (*(uint64_t (**)(void))(v8 + 8 * ((396 * ((v5 & 0xFFFFFFE0) == 32)) | ((a3 ^ 0x56C) - 356))))();
}

uint64_t sub_1B0264EB8@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  *(unsigned char *)(a1 + v3 + v4) = v5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v3 + 1 + v4) < 0x40) * v2) ^ a2)))();
}

uint64_t sub_1B0264EE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v39 = v35 + 1;
  *(unsigned char *)(a4 + (v39 + v37)) = *(unsigned char *)(a34 + a35 - 218003857)
                                             - (a7 & (2 * *(unsigned char *)(a34 + a35 - 218003857)))
                                             - 27;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1458 * ((v37 + v39 + 1) < 0x40)) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B0264EEC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x950CE2110AB3F3FLL) = 1;
  return sub_1B0264F04();
}

uint64_t sub_1B0264F04(uint64_t result)
{
  uint64_t v3 = *(void *)(v1 + 32);
  *(void *)(*(void *)(v1 + 24) - 0x567D362CA97960D8) = result;
  *(_DWORD *)(v3 - 0x7F632B302E08524DLL) = v2;
  *(_DWORD *)uint64_t v1 = -1373544826;
  return result;
}

void sub_1B0264F78()
{
}

uint64_t sub_1B0264FF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  BOOL v15 = a12 < 0x8C856A39;
  if (v15 == v12 + 1038825440 < ((v13 - 727454495) & 0x2B5C0FBF ^ 0x8C856A0B)) {
    BOOL v15 = v12 + 1038825440 < a12;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * (v13 ^ (8 * !v15))))();
}

uint64_t sub_1B026508C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17)
{
  unsigned int v18 = a7 - 2108778312 + ((a5 + a4 + 945) | 0x6C);
  BOOL v19 = v18 < 0x9B1223C9;
  BOOL v20 = v18 > a17;
  if (a17 < 0x9B1223C9 != v19) {
    BOOL v21 = v19;
  }
  else {
    BOOL v21 = v20;
  }
  return (*(uint64_t (**)(void))(v17 + 8 * ((v21 * ((a5 + a4 + 49) ^ 0x9B)) ^ (a5 + a4 + 120))))();
}

uint64_t sub_1B0265094(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,unsigned int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  int v33 = *(_DWORD *)(a2 + 4);
  uint64_t v34 = *(void *)(a2 + 8);
  unsigned int v35 = 628203409 * (((&a24 | 0xD4CD0C0A) - (&a24 & 0xD4CD0C0A)) ^ 0x56450039);
  a28 = a17;
  a26 = v31 - v35 + 893;
  a27 = v33 - v35 + (((v31 - 502) | 0x11) ^ 0xD9AB305C);
  a30 = v34;
  a31 = a15;
  a24 = a16;
  a25 = a14;
  uint64_t v37 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v31 + 1438)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * (((a29 == -1373544826) | (32 * (a29 == -1373544826))) ^ v31)))(v37, a2, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

uint64_t sub_1B02651A0@<X0>(int a1@<W5>, int a2@<W8>)
{
  *(unsigned char *)(v5 + a1 + v4 + ((v6 + 1739829825) & 0x984C4B71)) = *(unsigned char *)(v3
                                                                         + a1
                                                                         + v4
                                                                         + ((v6 + 1739829825) & 0x984C4B71));
  return (*(uint64_t (**)(void))(v2 + 8 * ((207 * (a1 - 1 != a2)) ^ (v6 - 77))))();
}

uint64_t sub_1B02651F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(void *)(v25 - 120) = v22;
  *(void *)(v25 - 112) = a21;
  *(_DWORD *)(v25 - 104) = v21
                         + 1759421093 * (((~(v25 - 120) & 0xE915FA78) - (~(v25 - 120) | 0xE915FA79)) ^ 0x5A684A2D)
                         + 1188;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v21 ^ 0xB1D)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((v24 == (v21 ^ 0x5F2A513)) * ((v21 - 659) ^ 0x700)) ^ v21)))(v26);
}

void sub_1B0265298()
{
}

uint64_t sub_1B02652A4(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  BOOL v55 = v52 != a2 + ((v51 - 142) | 0x108) - 1374 || a51 != a3;
  return (*(uint64_t (**)(void))(v53 + 8 * ((v55 * (a5 + ((v51 - 142) ^ a28) - 373)) ^ (v51 - 954))))();
}

uint64_t sub_1B02652F8()
{
  uint64_t v4 = *(void *)(v6 + 8);
  *(_DWORD *)(v3 - 112) = (v0 - 374) ^ (1734042137 * ((v3 - 128) ^ 0x5CCEC34D));
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x125)))(v3 - 128);
}

uint64_t sub_1B0265398@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,unsigned int a33)
{
  unsigned int v39 = ((*v37 & 0x7FFFFFFE | v37[623] & 0x80000000) >> ((a3 + 23) & 0x67 ^ (v33 - 1))) ^ v34;
  v37[623] = v37[396] ^ a2 ^ *(_DWORD *)(v38 - 152 + 4 * (*v37 & 1)) ^ (v39 + a1 - (v36 & (2 * v39)));
  return (*(uint64_t (**)(void))(v35 + 8 * ((1841 * (a33 > 0x26F)) ^ a3)))();
}

uint64_t sub_1B0265424()
{
  return v0();
}

uint64_t sub_1B026542C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57)
{
  if (a33 == 2) {
    return (*(uint64_t (**)(uint64_t))(v57
  }
                                              + 8 * (((a57 == 1321801015) * ((v58 + 1660) ^ 0x6E3)) ^ (v58 + 1899))))(a14);
  if (a33 != 1) {
    JUMPOUT(0x1B0265564);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v57
                                                              + 8 * ((v58 + 1658) ^ (2 * (a57 == (v58 ^ 0x4EC91508))))))(a1, a2, a14);
}

uint64_t sub_1B026559C(uint64_t a1, int a2, uint64_t a3, int a4)
{
  BOOL v7 = v4 > 0x23E8B5F9;
  if (v7 == a2 + 473530960 < -602453498) {
    BOOL v7 = a2 + 473530960 < v6;
  }
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * (((a4 + 567) * v7) ^ a4)))(a1);
}

uint64_t sub_1B0265608@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if (((905 * (v5 ^ 0x591)) ^ (a2 + 1196)) + v2 >= 0x7FFFFFFF) {
    int v6 = -1550566792 - v4;
  }
  else {
    int v6 = v4;
  }
  _DWORD *v3 = v6;
  *(_DWORD *)(result + 24) = 1234927729;
  return result;
}

uint64_t sub_1B026564C@<X0>(uint64_t a1@<X1>, int a2@<W5>, uint64_t a3@<X8>)
{
  HIDWORD(v9) = v4 ^ 2;
  LODWORD(v9) = v4 ^ (v7 - 2);
  return (*(uint64_t (**)(void, uint64_t, uint64_t))(v5 + 8 * ((3398 * (a3 + 1 == v8 + 20)) ^ a2)))((v9 >> 2) + v7 - (v6 & (2 * (v9 >> 2))), a1, v3);
}

uint64_t sub_1B0265724(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 & 0x18) == (a3 ^ 0x555) - 1865) * (((a3 ^ 0x133) - 355) ^ 0x490)) ^ a3 ^ 0x133)))();
}

uint64_t sub_1B0265768(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v7 = (a4 - 681) | 8;
  BOOL v8 = v4 < ((v7 - 194675818) ^ (v6 + 126) ^ (6 * (v7 ^ 0x2B3u)));
  return (*(uint64_t (**)(void))(v5 + 8 * (v8 | (16 * v8) | v7)))();
}

uint64_t sub_1B02657BC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v9 = a3 + v6 + v7 + v8 + 155343132 - 1638518935;
  unsigned int v10 = v4 + 214954298;
  int v11 = (v10 < 0x3309EB53) ^ (v9 < 0x3309EB53);
  BOOL v12 = v9 > v10;
  if (v11) {
    BOOL v12 = v9 < 0x3309EB53;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((97 * v12) ^ (a4 - 1053))))();
}

uint64_t sub_1B026583C@<X0>(int8x16_t *a1@<X0>, int a2@<W8>, int8x16_t a3@<Q0>, int8x16_t a4@<Q1>)
{
  *(int8x16_t *)(v6 + (a2 + 16)) = vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), a3)), a4);
  return (*(uint64_t (**)(int8x16_t *))(v8 + 8 * (((v5 == 16) * ((v4 + 4) ^ v7)) ^ v4)))(a1 + 1);
}

uint64_t sub_1B0265848@<X0>(int a1@<W8>)
{
  int v6 = 59 * (v4 ^ 0x179);
  *(_DWORD *)(*(void *)(v3 - 0x67843F9A1244BAC3) + 4 * (a1 + v2 + 342)) = v5;
  int v7 = v2 + v6 - 176;
  int v8 = v6 ^ 0xE;
  *(_DWORD *)(v3 - 0x67843F9A1244BAC7) = v7;
  int v9 = (v6 ^ 0xE ^ (a1 + 269)) + v7;
  if (v9 < 0) {
    int v9 = -v9;
  }
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((772
                                * ((int)((v9 ^ 0x73FBFF3E)
                                       - 573694466
                                       + ((2 * v9) & 0xE7F7FE7C)
                                       + a1
                                       + ((4 * v8) ^ 0x258)
                                       + ((v8 - 1903052482) & 0x716E46B3)) >= 0)) ^ v8)))();
}

uint64_t sub_1B0265938@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  a4 = (v9 - 528) ^ (1374699841 * (((&a4 | 0x498218C7) - (&a4 & 0x498218C7)) ^ 0x247600CE));
  a6 = a1;
  a7 = a3;
  uint64_t v10 = (*(uint64_t (**)(unsigned int *))(v8 + 8 * (v9 ^ 0xFA5)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8 * (((a5 != v7 + v9 - 1715 - 285) * (((v9 - 1719) | 4) ^ 0x12F)) ^ v9)))(v10);
}

uint64_t sub_1B02659DC(uint64_t a1)
{
  int v1 = 1734042137 * ((((2 * a1) | 0x8ED2A308) - a1 + 949399164) ^ 0x9BA792C9);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = *(_DWORD *)(a1 + 4) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (v5) {
    unsigned int v8 = v7;
  }
  else {
    unsigned int v8 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + v2 - 1456)
                              + 8
                              * ((214
                                * (((v2 - 93) ^ ((v3 - 1739280847) < 4 * (unint64_t)v8)) & 1)) ^ v2)
                              - 4))();
}

uint64_t sub_1B0265AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * (int)(((454
                                                                                       * (((v6 - 423) | 0x782) ^ 0x7D1)
                                                                                       - 1348)
                                                                                      * ((v5 >> 3) & 1)) ^ v6)))(a1, a2, a3, a4, (v4 - a4));
}

uint64_t sub_1B0265AEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  int v60 = STACK[0x4A8];
  LODWORD(STACK[0x5DC]) = LODWORD(STACK[0x4A8]) + 64;
  unsigned int v61 = LODWORD(STACK[0x634]) - 475207161;
  BOOL v62 = v60 + 615398715 > v61;
  if (v60 + 615398715 < (a59 + 1128008121) != v61 < (((a59 - 931) | 0x30) ^ 0x433C0D54u)) {
    BOOL v62 = v60 + 615398715 < (a59 + 1128008121);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8
                                                                                               * ((31 * v62) ^ a59)))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_1B0265BA0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((LODWORD(STACK[0x3FC]) - 639) ^ (4
                                                                * (((v0 > 0xD5E073EE) ^ (5 * LOBYTE(STACK[0x3B4]) - 64)) & 1)))))();
}

uint64_t sub_1B0265BEC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 1359518955;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v5 + v10);
  if (v12 == 229) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 101)
  {
    int v13 = -1373544826;
    uint64_t v14 = *(void *)(v3 + 8);
    int v15 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(void *)uint64_t result = v5;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 24) {
      int v16 = -91434738;
    }
    else {
      int v16 = -91434737;
    }
    *(_DWORD *)(result + 16) = 277809779;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = -1373544826;
    *(void *)(v14 - 0x3DC5316605FC20BALL) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 0xF0F)))();
    int v13 = 1373504863;
  }
  *(_DWORD *)uint64_t v3 = v13;
  return result;
}

uint64_t sub_1B0265CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v23
                              + 8 * ((((a21 - 463788147) < 0x10) * (v21 - v22 + 436)) ^ (v21 + v24))))();
}

uint64_t sub_1B0265D14()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0xFDE)))(v0 ^ (v2 + 344) ^ ((v1 - 1640) | 0x40u), 2064759104) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * (((v1 - 1786) | 0x251) - 667)) ^ v1)))();
}

uint64_t sub_1B0265D78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  *(_DWORD *)(v36 - 136) = v32 - ((((v36 - 144) | 0x1DB24E5C) - ((v36 - 144) & 0x1DB24E5C)) ^ 0xE72CBD0A) * v33 - 1196;
  *(void *)(v36 - 128) = v35;
  *(void *)(v36 - 144) = v34;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 + 798)))(v36 - 144);
  *(void *)(v36 - 120) = a31;
  *(void *)(v36 - 112) = v34;
  *(void *)(v36 - 144) = a24;
  *(void *)(v36 - 136) = v34;
  *(_DWORD *)(v36 - 104) = (v32 + 623) ^ (1759421093 * ((v36 + 1631053602 - 2 * ((v36 - 144) & 0x6137E7B2)) ^ 0xD24A57E6));
  *(void *)(v36 - 128) = v35;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD69)))(v36 - 144);
  *(void *)(v36 - 120) = v34;
  *(void *)(v36 - 112) = v34;
  *(void *)(v36 - 144) = a24;
  *(void *)(v36 - 136) = a18;
  *(void *)(v36 - 128) = v35;
  *(_DWORD *)(v36 - 104) = (v32 + 623) ^ (1759421093
                                        * ((2 * ((v36 - 144) & 0x65B19EF8) - (v36 - 144) + 441344258) ^ 0xA933D156));
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD69)))(v36 - 144);
  *(void *)(v36 - 144) = a23;
  *(_DWORD *)(v36 - 136) = v32
                         + 1755732067 * ((v36 + 2048135898 - 2 * ((v36 - 144) & 0x7A14136A)) ^ 0xA4D2AEB1)
                         - 1882358827;
  *(void *)(v36 - 128) = v34;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 ^ 0xD3A)))(v36 - 144);
  *(_DWORD *)(v36 - 136) = v32
                         - 3804331 * ((2 * ((v36 - 144) & 0x2EAC1DC0) - (v36 - 144) - 783031752) ^ 0x2BCD116E)
                         - 1196;
  *(void *)(v36 - 144) = v34;
  *(void *)(v36 - 128) = a25;
  (*(void (**)(uint64_t))(v31 + 8 * (v32 + 798)))(v36 - 144);
  *(_DWORD *)(v36 - 128) = (v32 - 9) ^ (1734042137
                                      * ((((v36 - 144) | 0xAD709DC5) + (~(v36 - 144) | 0x528F623A)) ^ 0xF1BE5E89));
  *(void *)(v36 - 144) = v34;
  *(void *)(v36 - 136) = a25;
  uint64_t v37 = (*(uint64_t (**)(uint64_t))(v31 + 8 * (v32 ^ 0x2B6)))(v36 - 144);
  return (*(uint64_t (**)(uint64_t))(v31
                                            + 8
                                            * (((((((2 * v32) ^ 0xEAA) - 1410122829) & 0x540CC44C) - 1022) * (a22 != 0)) ^ (v32 + 722))))(v37);
}

uint64_t sub_1B0265DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * (int)(((((((v5 - 380707167) & 0x16B11F6A) + 812) | 0x108) != 1375)
                                                   * (a5 + ((((v5 - 380707167) & 0x16B11F6A) + 812) ^ 0xED4688B9) - 373)) ^ (v5 - 380707167) & 0x16B11F6A)))(4114897149);
}

uint64_t sub_1B0265EA0@<X0>(unsigned int a1@<W5>, uint64_t a2@<X6>, char a3@<W8>)
{
  unsigned int v9 = v4 ^ 0x4E;
  unsigned int v10 = (unsigned char *)(a2 + (v5 - 693154930));
  unsigned int v11 = 2111498075
      * ((*(_DWORD *)(*(void *)STACK[0x3D8] + (*(unsigned int *)STACK[0x3D0] & (v9 ^ 0x2EE30A69))) ^ v10) & ((v9 - 893) ^ 0x7FFFFFBF));
  unint64_t v12 = 2111498075 * (v11 ^ HIWORD(v11));
  LOBYTE(v12) = *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 & 0xA9A9D081)) + (v12 >> 24)) ^ ((v3 ^ a1) >> a3) ^ *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 - 854)) + (v12 >> 24) - 5) ^ *(unsigned char *)(*(void *)(v6 + 8 * (int)(v9 ^ 0x322)) + (v12 >> 24) - 3) ^ v12 ^ (127 * BYTE3(v12));
  unsigned char *v10 = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * (int)((123 * (v5 - (v12 != 0) == v7)) ^ v9)))();
}

uint64_t sub_1B0265EB0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X7>, int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,int a53,int a54,int a55,unsigned int a56,int a57,int a58,int a59,unsigned __int8 a60)
{
  unsigned __int8 v72 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * a7);
  uint64_t v65 = a56;
  int v66 = a60 ^ 0xCE;
  if (v66 == 2)
  {
    BOOL v71 = (unint64_t)&a43 + 4 < a28 && v62 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t))(v60
                                                      + 8
                                                      * ((((v71 ^ (v61 + 70)) & 1)
                                                        * ((v61 + 826) ^ 0x36C)) ^ (v61 + 1194))))(a56, 36533098);
  }
  else if (v66 == 1)
  {
    BOOL v68 = (unint64_t)&a43 + 4 < a28 && v62 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, char *))(v60
                                                                                         + 8
                                                                                         * (((((HIDWORD(a23) ^ v68) & 1) == 0)
                                                                                           * (HIDWORD(a36) - 673)) ^ (v61 + 1875))))(a56, a1, a2, a3, a4, (char *)&a43 + 4);
  }
  else
  {
    a54 = 2 * (a54 ^ v64) + v64 - (v63 & (4 * (a54 ^ v64)));
    a55 = 2 * (a55 ^ v64) + v64 - (v63 & (4 * (a55 ^ v64)));
    a56 = 2 * (a56 ^ v64) + v64 - (v63 & (4 * (a56 ^ v64)));
    a57 = v64 + 2 * (a57 ^ v64) - (v63 & (4 * (a57 ^ v64)));
    HIDWORD(a31) = a60 ^ 0xFFFFFFCE;
    return v72(v65, a1, a2, a3, a4, v72, a5, a6, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             v72,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45);
  }
}

void sub_1B026608C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1B0266114(uint64_t a1@<X8>)
{
  int v7 = ((((v6 - 144) | 0x6AE408BC) - (v6 - 144) + ((v6 - 144) & 0x951BF740)) ^ 0x362ACBF1) * v2;
  *(_DWORD *)(v6 - 116) = v4 - v7 - 359492785 + v1 - 66;
  *(void *)(v6 - 144) = v3;
  *(_DWORD *)(v6 - 136) = v1 - v7 + 1471;
  *(void *)(v6 - 128) = a1;
  (*(void (**)(uint64_t))(v5 + 8 * (v1 ^ 0x9DBu)))(v6 - 144);
  JUMPOUT(0x1B0266194);
}

uint64_t sub_1B02665B8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v3 + 790 + ((v3 - 1137) | 2) - 1902) * (a2 == 0)) ^ (v3 - 165))))();
}

uint64_t sub_1B02665EC()
{
  uint64_t v6 = *(void *)(v9 + 8);
  int v7 = 460628867 * ((2 * ((v5 - 144) & 0x14EB5CC0) - (v5 - 144) - 350969028) ^ 0xA7822141);
  *(_DWORD *)(v5 - 128) = v7 + v0 - 372;
  *(void *)(v5 - 136) = v10;
  *(_DWORD *)(v5 - 144) = 774089200 - v7;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC35)))(v5 - 144);
  *(void *)(v5 - 144) = v3;
  *(void *)(v5 - 136) = v10;
  *(void *)(v5 - 128) = v2;
  *(void *)(v5 - 120) = v1;
  *(_DWORD *)(v5 - 104) = (v0 + 883) ^ (1759421093
                                      * ((((v5 - 144) | 0x5E818490) - ((v5 - 144) & 0x5E818490)) ^ 0xEDFC34C4));
  *(void *)(v5 - 112) = v1;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 + 1003)))(v5 - 144);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v6;
  *(_DWORD *)(v5 - 128) = (v0 + 251) ^ (1734042137
                                      * ((((v5 - 144) ^ 0x5ADF16E7)
                                        + 1656396633
                                        - 2 * (((v5 - 144) ^ 0x5ADF16E7) & 0x62BA9B59)) ^ 0x64AB4EF3));
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 ^ 0x3AA)))(v5 - 144);
}

uint64_t sub_1B026676C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v34 = v30 + 1186562376;
  if ((v30 + 1186562376) <= 0x40) {
    int v34 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                + 8
                                                                                * ((((v29 ^ 0x66) - 1169)
                                                                                  * ((-v32
                                                                                                  - 1186563990
                                                                                                  - v31
                                                                                                  + v34
                                                                                                  + 1614) < 0xF)) ^ v29)))(-1318728281, a29, 4294966083, 3334056263, 53);
}

void sub_1B0266808()
{
}

uint64_t sub_1B0266814(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((669 * ((v5 & 0x18) == ((a5 - 701) ^ 0x1B0))) ^ a5)))();
}

uint64_t sub_1B0266858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, unint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  int v37 = a9 + 1;
  *(unsigned char *)(a4 + (v37 + a2)) = *(unsigned char *)(v35 + ((v34 - 605) ^ a6) + a34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((((a3 + v37 + 53) < 0x40) * (int)a1) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B0266860@<X0>(int a1@<W8>)
{
  unsigned int v6 = (v8 ^ 0x32160040) * a1;
  int v11 = v1 - v6;
  v8[0] = v4;
  v8[1] = 0x31FD77B69BC3E185;
  int v9 = v6 ^ 0x294A23BB;
  int v10 = v6 + v2 + 368;
  uint64_t result = (*(uint64_t (**)(void *))(v5 + 8 * (v2 + 1956)))(v8);
  *(_DWORD *)(v3 + 4) = *(_DWORD *)(v4 - 0x7761D79CB8DF4CFBLL);
  return result;
}

uint64_t sub_1B02668C0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W3>, int a4@<W6>, uint64_t a5@<X8>)
{
  *(unsigned char *)(v5 + (a4 - 948428593)) = *(unsigned char *)(a5 + (a4 - 948428593));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * (((a4 - 1 != v6) * ((a3 ^ 0xC1) - 176)) ^ a3 ^ 0xC1)))(a1, a2, (a3 ^ 0xC1u) + 855);
}

uint64_t sub_1B0266904(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((1753
                                * (*(_DWORD *)(a16
                                             + 4 * (((23 * (v17 ^ 0x660)) ^ 0x2D6 ^ (v18 + 668)) + v20)) == v16)) ^ (v17 - 960))))();
}

uint64_t sub_1B0266958(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __n128 a6)
{
  *(_DWORD *)(v8 - 120) = v6 + 6;
  *(_DWORD *)(v8 - 128) = v6 - 1;
  v9.n128_u64[0] = ((_BYTE)v6 + 5) & 0xF;
  v9.n128_u64[1] = ((_BYTE)v6 + 4) & 0xF;
  v10.n128_u64[0] = ((_BYTE)v6 + 3) & 0xF;
  v10.n128_u64[1] = ((_BYTE)v6 + 2) & 0xF;
  v11.n128_u64[0] = ((_BYTE)v6 + 1) & 0xF;
  v11.n128_u64[1] = v6 & 0xF;
  v12.n128_u64[0] = 0x6161616161616161;
  v12.n128_u64[1] = 0x6161616161616161;
  v13.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v13.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  return sub_1B0266A50(a1, a2, a3, a4, a5, v7 & 0xFFFFFFF0, a6, v9, v10, v11, (__n128)xmmword_1B04C9C20, v12, v13);
}

uint64_t sub_1B0266A50(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15)
{
  uint64_t v30 = (v19 + v18 - a15);
  uint64_t v31 = ((_BYTE)v19 + (_BYTE)v18 - (_BYTE)a15) & 0xF;
  uint64_t v32 = v21;
  v33.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v33.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v26, a5).u64[0];
  int8x16_t v34 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v20 + v30), *(int8x16_t *)(v16 + (v30 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v17 + (v30 & 0xF) - 15), *(int8x16_t *)(v15 + (v30 & 0xF) - 15))));
  int8x16_t v35 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v34, v34, 8uLL), a7), vmulq_s8(v33, a6)));
  *(int8x16_t *)(v23 + v30) = vextq_s8(v35, v35, 8uLL);
  return (*(uint64_t (**)(void))(v25 + 8 * (((a15 + v22 - 683 == a13) * v24) ^ a14)))();
}

uint64_t sub_1B0266ADC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((7 * (v0 != ((v1 + 557) | 0x84u) + 0x51B1E41BDC880F77)) ^ v1)))();
}

uint64_t sub_1B0266B20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((123 * (v2 + a1 + (v1 ^ 0x77Cu) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1B0266B60(uint64_t a1, uint64_t a2, int a3)
{
  int v4 = STACK[0x3FC];
  STACK[0x468] -= 1616;
  LODWORD(STACK[0x5CC]) = a3 + 82;
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x580] != 0) * (((v4 - 1267) ^ 0x6D2) - 1469)) ^ (v4 + 527))))();
}

void sub_1B0266BB0()
{
}

uint64_t sub_1B0266C04()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1895
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 3) - 134)))
                                 + ((v2 + 169) ^ (v0 - 539) ^ (*(unsigned __int8 *)(v3 + 3) - 134)) == v0)) ^ v2)))();
}

uint64_t sub_1B0266C44@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v3)) = *(unsigned char *)(v2 + (v6 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((8 * (v6 - 1 == v4)) | (32 * (v6 - 1 == v4))) ^ v5)))(0);
}

uint64_t sub_1B0266C78()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1348
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v3 + 7) - 1) ^ (v0 + ((v2 + 143) | 0x1A) - 543)) == v0)) ^ v2)))();
}

void sub_1B0266CC0()
{
}

uint64_t sub_1B0266CD0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((((v0 - 1102148613) < 2) ^ (v1 - 1)) & 1)
                                * (((v1 - 1710) | 0x600) + 2173)) ^ v1)))();
}

uint64_t sub_1B0266D10(uint64_t a1)
{
  unint64_t v3 = STACK[0x578];
  BOOL v4 = LODWORD(STACK[0x474]) == 0;
  STACK[0x4D0] = LODWORD(STACK[0x474]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * ((v4 ^ (v1 - 9)) & 1 | (32 * ((v4 ^ (v1 - 9)) & 1)) | v1)))(a1, v3);
}

uint64_t sub_1B0266D50()
{
  int v4 = (v1 ^ 0x340) + v2 + 644990708;
  BOOL v6 = v4 <= 601327475 && v4 >= v0 - 1546156268 + v1 - 518;
  return (*(uint64_t (**)(void))(v3 + 8 * ((21 * v6) ^ v1)))();
}

uint64_t sub_1B0266DA8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((61
                                * (((v1 << (3 * (v0 ^ 0x5D) + 62)) & 0xE27FDFF6 ^ 0x822C4204)
                                 + ((5 * (v0 ^ 0x60B) + 946456970) ^ v1)
                                 - 1881817560 != 18198051)) ^ v0)))();
}

void sub_1B0266E2C()
{
}

void sub_1B0266E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *int8x16_t v35 = -687464650;
  (*(void (**)(uint64_t))(v34 + 8 * ((v33 - 126) ^ 0x848)))(a33);
  JUMPOUT(0x1B0266EA0);
}

uint64_t sub_1B0266FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  if (a14 < 0xB3C7DED3 != (a13 + 1697492154) < 0xB3C7DED3) {
    BOOL v16 = (a13 + 1697492154) < 0xB3C7DED3;
  }
  else {
    BOOL v16 = a13 + 1697492154 > a14;
  }
  return (*(uint64_t (**)(void))(v14
                              + 8 * (((((v15 - 1) ^ v16) & 1) * ((v15 + 897) ^ 0x3A5)) ^ (v15 + 588))))();
}

uint64_t sub_1B026706C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = (a3 + a1 + a2);
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = ((a4 + 231) ^ 0x7DD) & v9;
  unint64_t v12 = v5 + v11 - v9;
  unint64_t v13 = v11 + v5 + 1;
  unint64_t v14 = v11 + v7 - v9 + 2;
  unint64_t v15 = v11 + v7 + 3;
  uint64_t v16 = v11 + v6;
  unint64_t v17 = v16 - v9 + 4;
  unint64_t v18 = v16 + 5;
  BOOL v20 = v13 > a5 && v12 < v10;
  if (v15 > a5 && v14 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * (a4 | (4 * v23))))();
}

uint64_t sub_1B02670F4(uint64_t a1, uint64_t a2, unsigned int *a3)
{
  *(void *)(v8 - 152) = 0x5FFB05C8C6F3B517;
  unint64_t v9 = 1224239923 * ((~((v8 - 144) | v6) + ((v8 - 144) & v6)) ^ 0x911661D9A965DBABLL);
  unint64_t v10 = *a3 ^ v9;
  *(void *)(v8 - 136) = v9 ^ v7;
  *(void *)(v8 - 128) = v10;
  *(_DWORD *)(v8 - 120) = v9 + v3 - 327017655;
  *(_DWORD *)(v8 - 116) = -1224239923 * ((~((v8 - 144) | v6) + ((v8 - 144) & v6)) ^ 0xA965DBAB);
  int v11 = v3 - 2131395791 + v9;
  *(_DWORD *)(v8 - 112) = v11 + 63;
  *(_DWORD *)(v8 - 108) = v11;
  *(_DWORD *)(v8 - 140) = ((v3 - 2131395791) ^ 0x3D) + v9;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ (v4 - 2116))))(v8 - 144);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v8 - 144)))(v12);
}

void sub_1B02671D0()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1336));
  JUMPOUT(0x1B02582B4);
}

uint64_t sub_1B02671F0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((701 * (*(_DWORD *)(v1 - 0x7761D79CB8DF4CFBLL) == ((v2 - 18) ^ 0xAE215AD8))) ^ v2)))();
}

void sub_1B0267238(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 36) ^ (235795823
                             * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B0267384@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4)
{
  BOOL v16 = v14 > v8;
  uint64_t v17 = 4 * (v11 + v9);
  int v18 = v4 + v12 + (*(_DWORD *)(*(void *)(a4 - 0x67843F9A1244BAC3) + v17) ^ v13);
  *(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v17) = v18 + v13 - (v10 & (2 * v18));
  int v19 = v11 + 1 + v5;
  LODWORD(v17) = v16 ^ (v19 < v6);
  BOOL v20 = v19 < v7;
  if (!v17) {
    BOOL v16 = v20;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((1678 * v16) ^ a1 ^ 0xB)))();
}

uint64_t sub_1B0267468@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = -27;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((1050 * ((unint64_t)(a2 + a1 + 1) < 0x38)) ^ (v19 - 1979929764) & 0x760356DFu)))();
}

uint64_t sub_1B02674C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, int a7@<W8>)
{
  *(_DWORD *)(*v9 + 4 * (((a6 + 777) ^ (a7 + 80)) + v8)) = v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                       + 8
                                                                       * (((((a6 - 65) | a5) + 2813) * (v10 == 0)) ^ (a6 + 777))))(a1, a2, a3, a4);
}

void sub_1B026751C()
{
}

uint64_t sub_1B0267658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * ((1421 * (a23 == (((v23 - 502) | 0x11) ^ 0x325F6821))) ^ v23)))();
}

uint64_t sub_1B026769C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((a1 - 383) ^ (448 * (v2 > 1)))))();
}

uint64_t sub_1B02677E8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((((a1 - 743) ^ (v2 == v1)) & 1) == 0) * (((a1 + 316) | 0x100) ^ 0x4E1)) ^ a1)))();
}

uint64_t sub_1B0267834@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  int v11 = v3 - 1375989922;
  int v12 = 19 * (v4 ^ 0x678);
  uint64_t v13 = 4 * (v7 + v5);
  int v14 = v8
      - 595061477
      + (*(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v13) ^ v9)
      + (*(_DWORD *)(*(void *)(a3 - 0x67843F9A1244BAC3) + v13) ^ v9);
  *(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + v13) = v14 + v9 - ((v14 << (((v12 + 27) & 0xE2) + 95)) & v6);
  BOOL v16 = v7 + 853837193 > 771493725 || v7 + 853837193 < v11;
  return (*(uint64_t (**)(void))(v10 + 8 * ((850 * v16) ^ v12)))();
}

uint64_t sub_1B026796C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40,uint64_t a41,int a42,char a43)
{
  uint64_t v47 = *a13;
  *(void *)(v46 - 184) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v46 - 176) = 0xE5E5E5E5E5E5E5E5;
  int v48 = 235795823 * ((v46 - 168) ^ 0x94AD4959);
  *(_DWORD *)(v46 - 160) = v48 + 1488611281;
  *(void *)(v46 - 168) = &a43;
  *(_DWORD *)(v46 - 132) = (v45 + 1975) ^ v48;
  *(void *)(v46 - 152) = &a40;
  *(void *)(v46 - 144) = v47;
  *(void *)(v46 - 128) = v46 + 0x3AC75C5FABFFD261;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v45 ^ 0x8B7)))(v46 - 168);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * (((*(_DWORD *)(v46 - 136) == v44 + v45 - 27) * ((v45 + 1236) ^ 0x27F)) ^ v45)))(v49);
}

uint64_t sub_1B0267A58()
{
  return (*(uint64_t (**)(void))(v1 + 8 * v0))();
}

uint64_t sub_1B0267AEC()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                      + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0)
                                     * (((v3 + 2061882985) & 0x851A2E7F) - 1591)) ^ v3)))();
}

uint64_t sub_1B0267B44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47)
{
  unint64_t v48 = STACK[0x5E8];
  STACK[0x588] = *(void *)(v47 + 8 * (LODWORD(STACK[0x3FC]) - 1329));
  STACK[0x508] = v48;
  STACK[0x5F0] = STACK[0x3C8];
  unsigned int v49 = *(_DWORD *)(v48 - 0x843828D0CDF33E9) & 0x3F ^ ((((a47 & 0x51683597) + 299) | 0x410) - 1345);
  *(unsigned char *)(v48 - 0x843828D0CDF342DLL + v49) = 101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 8 * (((v49 > 0x37) * (((a47 & 0x51683597) - 1544227363) & 0x5C0B0FDF ^ 0x192)) ^ a47 & 0x51683597)))(a1, 705, 1373504863, a4, a5, a6, 1547877644, 595);
}

uint64_t sub_1B0267B60(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((15
                                * (((v3 + 81) ^ 0xE8536C3A) + (v2 & 0x7FD93FCE) - 675285281 + (v5 ^ 0x3FEC98BB ^ a2) < ((2 * v3) ^ 0x7FFFF69Bu))) ^ v3)))();
}

uint64_t sub_1B0267BE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v13 = *(unsigned __int8 *)(v8 + (v11 + v10 + 2));
  return (*(uint64_t (**)(uint64_t, void, void))(v9
                                                            + 8
                                                            * ((234
                                                              * (a8 + 2147067901 != ((v12 - 882) | 0x253) + 707297053)) ^ v12)))(a1, (a5 + v10 + 1), (v13 ^ 0x5FFEEF7D) - 326116877 + (((v12 + 736436065) & 0xD41AD9AB ^ 0x79) & (2 * v13)));
}

uint64_t sub_1B0267C84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W8>)
{
  _DWORD *v7 = v7[623];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((v4
                                                                          + v6
                                                                          + (((a4 ^ 0x3E5) - 1987477688) | 0x30727C23) == 1078720519)
                                                                         * ((a4 ^ 0x3E5) + 194)) ^ a4 ^ 0x3E5)))(a1, a2, a3, 1460018998);
}

void sub_1B0267CF0()
{
}

uint64_t sub_1B0267D00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  LODWORD(STACK[0x620]) = a16;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18
                                                              + 8
                                                              * (((STACK[0x408] == v17)
                                                                * ((v16 - 934) ^ 0x3BD ^ ((v16 - 1359) | 0x218))) ^ (v16 - 139))))(a1, a2, 1373504863);
}

uint64_t sub_1B0267D64@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((243 * (v1 == 1284426096)) ^ 0x46Bu)))();
}

uint64_t sub_1B0267D90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((979 * (((((v6 + 1494421154) & 0xA6ECF15F) - 326) & a5) == v6 - 348)) ^ v6)))((v6 + 1285));
}

uint64_t sub_1B0267DDC(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(void *)(a5 + (v7 + v6)) = *(void *)(a3 + (v7 + v6));
  return (*(uint64_t (**)(void))(v5 + 8 * (((a2 == 0) | (8 * (a2 == 0))) ^ a1)))();
}

uint64_t sub_1B0267E0C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a2 + a8 - 16 >= (((a5 ^ 0x514) + 1088) ^ 0xFFFFFBB5)) * ((182 * (a5 ^ 0x514)) ^ 0x3BF)) ^ a5)))();
}

uint64_t sub_1B0267E58(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 604952962;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1888 * (*(_DWORD *)(a2 + 4) == ((v2 + 1824539168) & 0x933FBEDF ^ 0x4C8ECB66))) ^ v2)))();
}

void sub_1B0267EC4()
{
}

uint64_t sub_1B0267EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((37 * (v8 != (((v7 - 1564) | 0x550) ^ 0x552) * a7 + 1284424252)) ^ v7)))();
}

void sub_1B0267F44()
{
}

void sub_1B0267FF4()
{
}

uint64_t sub_1B0268010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,char a43)
{
  int v46 = 3804331 * ((((2 * (v45 - 152)) | 0x254F8DF4) - (v45 - 152) + 1834498310) ^ 0x683935AC);
  *(void *)(v45 - 144) = a16;
  *(_DWORD *)(v45 - 152) = v46 + v43 + 1375;
  *(_DWORD *)(v45 - 148) = (a19 - 17819612) ^ v46;
  (*(void (**)(uint64_t))(v44 + 8 * (v43 + 2120)))(v45 - 152);
  uint64_t v47 = a43 & 0x3F;
  *(&a34 + (v47 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v44 + 8 * ((728 * ((v47 ^ 0xF) > 0x37)) ^ v43)))(2282780948);
}

uint64_t sub_1B026812C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v11 = (char *)&STACK[0x670] + v9 + ((16 * v8) ^ 0xD324A27F925647D3);
  STACK[0x5E0] = (unint64_t)v11;
  STACK[0x3C8] = (unint64_t)(v11 + 228);
  LODWORD(STACK[0x454]) = 713989200;
  STACK[0x468] = v9 + (v8 - 70) - 1482;
  STACK[0x4B0] = 0;
  LODWORD(STACK[0x4F4]) = 1284426096;
  STACK[0x3D0] = (unint64_t)v11;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v10 + 8 * ((v8 - 230) ^ (16 * (v11 == (char *)-248)))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B0268138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((a5 + 1 == v7 + 48) ^ v5)))();
}

uint64_t sub_1B02681F8()
{
  int v6 = 460628867 * ((((v5 - 144) | 0x70A3BF97) - (v5 - 144) + ((v5 - 144) & 0x8F5C4068)) ^ 0x3C353DEA);
  *(_DWORD *)(v5 - 128) = v6 + v2 - 217;
  *(void *)(v5 - 136) = v9;
  *(_DWORD *)(v5 - 144) = 774089200 - v6;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 + 1222)))(v5 - 144);
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 112) = v4;
  *(void *)(v5 - 136) = v9;
  *(void *)(v5 - 128) = v3;
  *(_DWORD *)(v5 - 104) = (v2 + 1038) ^ (1759421093
                                       * ((((v5 - 144) | 0x1491497) + (~(v5 - 144) | 0xFEB6EB68)) ^ 0xB234A4C2));
  *(void *)(v5 - 144) = v0;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0xB8E)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = (v2 + 406) ^ (1734042137 * ((v5 - 144) ^ 0x5CCEC34D));
  *(void *)(v5 - 144) = v4;
  *(void *)(v5 - 136) = v8;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 + 1073)))(v5 - 144);
}

uint64_t sub_1B0268358(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v32 = (v27 - 295336722) & 0x119A7F5F;
  int v33 = ((((v31 - 144) ^ 0x767B6BD9) - 2094765727 - 2 * (((v31 - 144) ^ 0x767B6BD9) & 0x83246961)) ^ 0xD6C5DAAE) * v29;
  *(void *)(v31 - 136) = a25;
  *(_DWORD *)(v31 - 128) = ((v32 ^ (v30 + 742)) + v25) ^ v33;
  *(_DWORD *)(v31 - 140) = (v32 - 1152) ^ v33;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v32 + 843)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v26
                                            + 8
                                            * (((*(_DWORD *)(v31 - 144) == v28 + ((v32 - 1183) | 0x20A) - 650)
                                              * (v32 ^ 0x52D)) ^ v32)))(v34);
}

uint64_t sub_1B0268428@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  unsigned int v10 = (((((v2 + v5 - v3) >> 30) ^ 1) + v5 - 4 * ((v2 + v5 - v3) >> 31)) ^ (v2 + v5 - v3))
      * (((v7 - 1128) | v6) ^ a1);
  *(_DWORD *)(v8 + 4 * a2) = a2 + v5 + v10 - (v4 & (2 * (v10 + a2)));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 > 0x26E) | (4 * (a2 > 0x26E))) ^ v7)))();
}

uint64_t sub_1B0268434(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unsigned int v76 = (((v73 | 0xE497B9B3) - v73 + (v73 & 0x1B684648)) ^ 0x703AF0EA) * v69;
  *(_DWORD *)(v75 - 168) = v76 + v70 + 492;
  *(void *)(v75 - 160) = a69;
  *(void *)(v75 - 176) = a68;
  *(void *)(v75 - 192) = v72;
  *(_DWORD *)(v75 - 184) = -1886077894 - v76;
  uint64_t v77 = (*(uint64_t (**)(uint64_t))(v74 + 8 * (v70 + 1965)))(v75 - 192);
  return (*(uint64_t (**)(uint64_t))(v74
                                            + 8
                                            * (((((v70 - 100) ^ (*(_DWORD *)(v75 - 152) == v71)) & 1)
                                              * ((v70 - 101) ^ 0x3D)) ^ v70)))(v77);
}

uint64_t sub_1B0268534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((((v6 + 171) | 0xA6) - 1147)
                                                                                  * (v5 == 0)) ^ v6)))(a1, a2, a3, a4, a5);
}

uint64_t sub_1B0268570()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((1323 * (*(unsigned __int8 *)(v1 + 1) == (((v2 + 115) | 0x70) ^ 0x75))) ^ v2)))();
}

void sub_1B02685B0()
{
}

uint64_t sub_1B02685BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v6 - 1397079334 + v9 - 220 - 1) = -27;
  return (*(uint64_t (**)(void))(v8 + 8 * ((1417 * ((unint64_t)(v6 - 1397079334) < 0x40)) ^ (a6 + v7 - 229))))();
}

uint64_t sub_1B0268608(int a1, int a2, int a3, unsigned int a4)
{
  unsigned int v8 = (a3 + 1091022934) & 0xBEF84BDF;
  int v9 = v5 + v4;
  unsigned int v10 = v9 + 1651848091 + ((v8 - 1777818468) | 0x482505C4);
  if (v10 <= 0x40) {
    unsigned int v10 = a4;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((23 * (v7 - v9 < v7 + a1 + a2 + 263 * (v8 ^ 0x385) + v10 - 526)) ^ v8)))();
}

uint64_t sub_1B026869C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v1 | (8
                                     * (a1 + v2 - 1900015611 >= ((v1 + 1928025716) & 0x8D14A7D9)
                                                              + ((v1 - 638) ^ 0xFFFFFEB2))))))();
}

uint64_t sub_1B0268720@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  *(&a21 + a4 + a1) = -27;
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((((unint64_t)(a4 + 1 + a1) > 0x3F) * (a3 + (v21 ^ (a2 + 466)) + 19)) ^ v21)))();
}

uint64_t sub_1B0268764(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  *(void *)(a1 - 7 + (v6 + v5 - v9)) = *(void *)(v4 - 7 + (v6 + v5 - v9));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((203 * (((3 * (a4 ^ 0x81) + 1250) ^ 0x543) + v9 != v8 - ((3 * (a4 ^ 0x81) - 98) & v7))) ^ (3 * (a4 ^ 0x81)))))();
}

uint64_t sub_1B02687C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((1111 * (a3 + 1 == v7 + 44)) ^ v3)))(v4, v5);
}

uint64_t sub_1B0268890()
{
  return 4294925278;
}

uint64_t sub_1B0268898@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7)
{
  unsigned int v10 = 1178560073 * ((&a3 & 0x4D8B99B8 | ~(&a3 | 0x4D8B99B8)) ^ 0x80626607);
  a3 = v7;
  a4 = a1;
  a5 = v10 ^ 0x294A23C7;
  a6 = v10 + v9 - 875;
  a7 = -418429675 - v10;
  uint64_t v11 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v9 + 713)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * (((*(_DWORD *)(v7 - 0x7761D79CB8DF4CFBLL) == ((5 * (v9 ^ 0x522)) ^ 0xAE215FFA))
                                              * (v9 - 864)) ^ v9)))(v11);
}

void sub_1B0268964()
{
  unint64_t v0 = STACK[0x3D0];
  unint64_t v1 = STACK[0x280];
  STACK[0x3A0] = STACK[0x280] + 2353;
  STACK[0x398] = v0 + 49;
  STACK[0x390] = v1 + 2333;
  STACK[0x388] = v0 + 29;
  STACK[0x380] = v1 + 2313;
  STACK[0x378] = v0 + 9;
  JUMPOUT(0x1B0267A74);
}

void sub_1B02689F8()
{
}

void sub_1B0268A1C(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 32) - 0x4CAF57822185BF99) = a1;
  JUMPOUT(0x1B0268A3CLL);
}

void sub_1B0268A7C()
{
  unsigned int v4 = 628203409 * ((((2 * v1) | 0x9A16942A) - v1 - 1292585493) ^ 0xCF834626);
  *(void *)(v3 - 176) = STACK[0x5E8];
  *(_DWORD *)(v3 - 184) = v4 - 290923570;
  *(_DWORD *)(v3 - 192) = v4 + v0 + 1172345424;
  (*(void (**)(uint64_t))(v2 + 8 * (v0 ^ 0x860)))(v3 - 192);
  STACK[0x4C0] = *(void *)(v2 + 8 * v0);
  JUMPOUT(0x1B0277568);
}

uint64_t sub_1B0268AFC@<X0>(int a1@<W4>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((*(unsigned char *)(v5 + 1 + v6) - *(unsigned char *)(v4 + 1)) != 27)
                                * ((a4 + a1) & a2 ^ a3)) ^ (a4 - 607))))();
}

uint64_t sub_1B0268B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((2 * (v4 < 0xDCFE8190)) | (4 * (v4 < 0xDCFE8190))) ^ (v5 + 1174669493))))(a1, a2, a3, 1460018998);
}

uint64_t sub_1B0268B50@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, int a7@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * (((a7 + 1018) * (v8 == v7)) ^ a7)))(2282780948, a1, a2, a3, a4, a5, a6, 3980823791);
}

uint64_t sub_1B0268B88@<X0>(void *a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  *a1 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v3 + a3 + 1067) ^ (29 * (a2 == 0)))))();
}

uint64_t *sub_1B0268BB4@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W2>, _DWORD *a4@<X8>)
{
  uint64_t v7 = result[6];
  uint64_t v9 = *result;
  uint64_t v8 = result[1];
  *a4 = v5;
  *(_DWORD *)(v9 - 0x39E8CCF6252BBBF8) = v6;
  *(_DWORD *)(v7 - 0x35AD11BEDFA3F43ALL) = a3;
  *(void *)(v8 - 0x76DC35A7F08F6A42) = v4 + (a2 - 1210380922);
  *((_DWORD *)result + 8) = -1373544826;
  return result;
}

uint64_t sub_1B0268C20@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, unsigned int a7)
{
  unsigned int v11 = 1178560073 * (((&a3 | 0x843CFE6E) - (&a3 & 0x843CFE6E)) ^ 0xB62AFE2E);
  a7 = -955300587 - v11;
  a5 = ((((v10 + 420) | 0x43) ^ 0xAEF95D10) + v9) ^ v11;
  a6 = v11 + v10 + 135;
  a3 = v7;
  a4 = a1;
  uint64_t v12 = (*(uint64_t (**)(uint64_t *))(v8 + 8 * (v10 ^ 0x94B)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((1495 * (*(_DWORD *)(v7 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v10)))(v12);
}

void sub_1B0268CEC()
{
}

uint64_t sub_1B0268DD0(uint64_t a1, int a2)
{
  int v9 = (a2 - 773) | 0x300;
  uint64_t v10 = (v4 + v5 + v6 + v9 - v7);
  *(int8x8_t *)(a1 - 7 + v10) = vadd_s8(*(int8x8_t *)(v2 - 7 + v10), (int8x8_t)0x9494949494949494);
  return (*(uint64_t (**)(void))(v8 + 8 * ((13 * (((v9 ^ 0xFFFFF8BC) & v3) != v7 + 8)) ^ v9)))();
}

uint64_t sub_1B0268E44()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((38
                                * (((3 * ((v0 - 1383120170) & 0x5270BFBE ^ 0x629) - 1166) & *(_DWORD *)(v1 - 0x7761D79CB8DF4CFFLL)) != 0)) ^ v0)))();
}

uint64_t sub_1B0268EA0(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((7 * (a2 + a1 + 1195538728 + ((271 * (v2 ^ 0x749) + 483) | 0x44u) - 1092 > 7)) ^ v2)))();
}

void sub_1B0268F28(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1759421093 * ((-870162447 - (a1 | 0xCC225FF1) + (a1 | 0x33DDA00E)) ^ 0x80A0105A);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0269008()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v0 ^ (706 * ((v2 + v1 - 2) < 0x7FFFFFFF)))))();
}

uint64_t sub_1B026907C@<X0>(int a1@<W8>)
{
  unsigned int v6 = (((v8 | 0xEF29C4DE) - (v8 & 0xEF29C4DE)) ^ 0xE5DDCAF1) * v2;
  uint64_t v9 = v3;
  v8[0] = v4 - v6 + 396;
  v8[1] = v6 - a1 - ((v4 + 2144800481) & (1133978962 - v5)) + 565648056;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v4 ^ 0x9A8)))(v8);
}

void sub_1B0269108()
{
}

uint64_t sub_1B0269114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  *(_DWORD *)(STACK[0x250] + 360) = 1102148614;
  uint64_t v56 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v54 + 8 * (v49 + 834)))(v51, 2, &STACK[0x5F8], STACK[0x538], (v50 - 1284426096), a6, &STACK[0x580], &STACK[0x470]);
  int v58 = ((2 * v56) & 0xBBFFFFD2) + (v56 ^ 0x5DFFFFE9);
  if (v58 == 1845493740)
  {
    LODWORD(STACK[0x5CC]) = 1373504958;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v54
                                                                                  + 8
                                                                                  * (((STACK[0x580] != 0)
                                                                                    * (((LODWORD(STACK[0x3FC]) - 1267) ^ 0x6D2)
                                                                                     - 1469)) ^ (LODWORD(STACK[0x3FC])
                                                                                               + 527))))(v56, STACK[0x580], 1373504863, v57);
  }
  else if (v58 == 1577058281)
  {
    int v59 = (LODWORD(STACK[0x3FC]) - 1348) | 0x3B1;
    STACK[0x380] = STACK[0x580];
    LODWORD(STACK[0x378]) = STACK[0x470];
    STACK[0x290] = STACK[0x280] + 2304;
    uint64_t v60 = 3 * (v59 ^ 0x2ECu);
    LODWORD(STACK[0x450]) = 70636633;
    int v61 = (char *)&STACK[0x670] + v52 - 0x2CDB5D806DA9E60DLL;
    STACK[0x220] = (unint64_t)&STACK[0x670] + v52 - 0x2CDB5D806DA9DC8DLL;
    STACK[0x278] = v52 + 4144;
    STACK[0x468] = v52 + 4144;
    *((void *)v61 + 304) = 0x6370646600;
    v61[2440] = 1;
    STACK[0x388] = (unint64_t)&STACK[0x670]
                 + v52
                 + ((v60 ^ 0x3D0) & (16 * ((void)&STACK[0x670] + v52 - 0x2CDB5D806DA9D5DDLL) + 16))
                 - 0x2CDB5D806DA9D5CDLL;
    STACK[0x3A0] = (unint64_t)&STACK[0x670] + v52 - 0x2CDB5D806DA9DC84;
    unint64_t v62 = *(uint64_t (**)(__n128))(v54
                                           + 8 * (int)((((v60 ^ 0x3D3) == 32) * (v60 ^ 0x42F)) ^ v60));
    STACK[0x3D8] = *(void *)(v53 + 8 * ((int)v60 - 892));
    STACK[0x3D0] = *(void *)(v53 + 8 * ((int)v60 - 1003));
    return v62((__n128)0);
  }
  else
  {
    int v64 = STACK[0x3FC];
    int v65 = 1374699841 * ((2 * ((v55 - 192) & 0xA20CFF0) - (v55 - 192) + 1977561096) ^ 0x182B2801);
    *(_DWORD *)(v55 - 192) = (LODWORD(STACK[0x3FC]) - 627) ^ v65;
    *(_DWORD *)(v55 - 176) = (v58 - ((2 * v58 + 1140850734) & 0x5C42BD0C) + 1344364189) ^ v65;
    *(void *)(v55 - 184) = a49;
    uint64_t v66 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v64 ^ 0xDC9)))(v55 - 192);
    return (*(uint64_t (**)(uint64_t))(v54
                                              + 8
                                              * (((STACK[0x580] != 0) * (((v64 - 1267) ^ 0x6D2) - 1469)) ^ (v64 + 527))))(v66);
  }
}

uint64_t sub_1B026944C()
{
  return sub_1B0269454();
}

uint64_t sub_1B0269454@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)(v4 + (v3 ^ a1) - v5) = *(void *)(a3 + (v3 ^ a1) - v5 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 328) * a2) ^ (v3 - 92))))();
}

uint64_t sub_1B0269490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  unsigned int v39 = (a27 & 0xDFFFFFFF ^ 0x8E215E86) - 1142355399 - ((2 * (a27 & 0xDFFFFFFF ^ 0x8E215E86)) & 0x37D21472);
  int v27 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * (v36 - 1060));
  unsigned int v28 = v38 - 2115178074;
  uint64_t v29 = *v37;
  *(unsigned char *)(*v37 + v28 + 1) = (v32 ^ BYTE2(v39)) - (v31 & (2 * (v32 ^ BYTE2(v39)))) - 27;
  *(unsigned char *)(v29 + v28) = (HIBYTE(v39) ^ 0xBB) - (v31 & (2 * (HIBYTE(v39) ^ 0xBB))) - 27;
  *(unsigned char *)(v29 + v28 + 2) = (v34 ^ BYTE1(v39)) - (v31 & (v39 >> 7)) - 27;
  *(unsigned char *)(v29 + v28 + 3) = ((a27 ^ 0x86) + 57 - ((2 * (a27 ^ 0x86)) & 0x72)) ^ v33;
  return v27(3550254202, 3152611897, 2115178074, 744713094, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1B0269628@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  if (!a1) {
    return (*(uint64_t (**)(void))(v57 + 8 * ((436 * ((a14 - 463788147) < 0x10)) ^ (v61 + 1357408016))))();
  }
  if (a1 != 3) {
    return (*(uint64_t (**)(void))(v57
  }
                                + 8
                                * ((1078
                                  * (*(_DWORD *)(v59 + 48 * v58 + 36)
                                   + 220123653
                                   + 2 * ((v56 + 67) ^ 0x50E86710u)
                                   + 280 < v62)) ^ (v61 + 1357408016))))();
  STACK[0x200] = a10 + (v60 + 1800160278);
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 48 * v58 + 8))(a4, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v57 + 8 * ((1746 * (v63 - 1373544826 + (~(2 * v63) | 0xA3BD42F3) == -1373544827)) ^ (v56 + v61))))(v63, v64, v65, v66, 2921422470, v67, 3230439687, 2367607715, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56);
}

uint64_t sub_1B02697B4()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((853
                                * ((((181 * (v1 ^ 0x175)) ^ v3) & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ v1)))();
}

uint64_t sub_1B02697FC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, int a3@<W8>)
{
  int v7 = *(unsigned __int8 *)(a2 + a1 + v6 + 3) ^ 0xE5;
  int v8 = ((*(unsigned __int8 *)(a2 + a1 + v6) ^ 0xE5) << 24) | ((*(unsigned __int8 *)(a2 + a1 + v6 + 1) ^ 0xE5) << 16) | ((*(unsigned __int8 *)(a1 + v6 + a2 + (a3 - 826) - 61) ^ 0xE5) << 8) | v7;
  *(_DWORD *)(v5 + ((a1 + v6) & 0xFFFFFFFFFFFFFFFCLL)) = v8 + v4 - 2 * (v8 & 0x2E215E87 ^ v7 & 1);
  return (*(uint64_t (**)(void))(v3 + 8 * ((253 * ((unint64_t)(a1 + 4 + v6) > 0x3F)) ^ a3)))();
}

void sub_1B0269898(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 1178560073 * ((2 * (a1 & 0xF0D1717) - a1 - 252516120) ^ 0xC2E4E8A8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0269980@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(void *)(a1 - 7 + (a3 + a2 - v4)) = *(void *)(v6 - 7 + (a3 + a2 - v4));
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((2944 * (v4 + ((v5 + 1816310812) & 0x93BD4AF0) - 664 == (v3 & 0xFFFFFFF8))) ^ v5)))();
}

uint64_t sub_1B02699E0(uint64_t a1)
{
  LODWORD(STACK[0x5CC]) = v2;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((((v1 - 477) ^ 0x3A6) * v3) ^ (v1 + 512))))(a1, 249);
}

uint64_t sub_1B0269A14(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  *(void *)(a1 + (a2 - v8)) = *(void *)(v11 + (a2 - v8));
  return (*(uint64_t (**)(void))(v12 + 8 * (((a3 + v8 == v10) * a8) ^ v9)))();
}

uint64_t sub_1B0269A40()
{
  unsigned int v6 = v2 + ((v3 - 1201002) & 0xDE3FFFEF ^ 0x9E8F4C65);
  if (v6 <= 0x40) {
    unsigned int v6 = 64;
  }
  BOOL v7 = v5 - v0 - v1 + v6 < 0xF;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v7 | (4 * v7)) ^ (v3 + 1520))))();
}

uint64_t sub_1B0269ABC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,unsigned __int8 a26,int a27,unsigned __int8 a28,int a29,int a30,int a31,unsigned __int8 a32,int a33,int a34,char a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v72 = a36 + 1715;
  LODWORD(STACK[0x350]) = (BYTE4(a23) | ((a30 ^ 0xC) << 24) | ((a28 ^ 0xEF) << 8) | ((a32 ^ 0x92) << 16)) ^ 0x9C045E9D;
  LODWORD(STACK[0x28C]) = a29 ^ 0x2754616F;
  LODWORD(STACK[0x380]) = (a27 | (a31 << 8) | ((a33 ^ 0xC2) << 16) | (a25 << ((a36 - 77) ^ 0x93))) ^ 0xD5DAF903;
  LODWORD(STACK[0x390]) = ((((a34 ^ 0x5B) << 16) + ((a24 ^ v67) << 24)) | a26 | ((a35 ^ v71) << 8)) ^ 0x93D686E3;
  LODWORD(STACK[0x3D8]) = a36 + 1715;
  unint64_t v73 = v68 & 0xFFFFFFF1 ^ 0x8C42E14F;
  STACK[0x398] = v73;
  int v74 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v73) ^ 0xD9));
  LODWORD(v333) = v72 ^ 0x753;
  unint64_t v75 = v68 & ((v72 ^ 0x753) - 221) ^ 0x8C42E147;
  STACK[0x2C0] = v75;
  uint64_t v76 = *(unsigned __int8 *)(a18 + v75);
  int v77 = v68;
  unsigned int v78 = (((v74 << (v72 + 121)) ^ 0xFFFFFFE0) - ((2 * ((v74 << (v72 + 121)) ^ 0xFFFFFFE0)) & 0x40) - 82) ^ v74;
  LOBYTE(v74) = *(unsigned char *)(a21 + (v76 ^ v71));
  char v79 = v76 ^ 0xB7;
  unint64_t v80 = v68 & 0xFFFFFFF0 ^ 0x8C42E14F;
  STACK[0x3A0] = v80;
  int v81 = *(unsigned __int8 *)(a18 + v80);
  unsigned __int8 v82 = (v74 + v79 - 93) ^ v69;
  if ((v81 & 0x20) != 0) {
    int v83 = -32;
  }
  else {
    int v83 = 32;
  }
  int v337 = *(unsigned __int8 *)(a22 + ((v83 + v81) ^ 0xDDLL)) + ((v83 + v81) ^ 0x31);
  unint64_t v84 = v68 & 0xFFFFFFF9 ^ 0x8C42E147;
  STACK[0x388] = v84;
  int v85 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v84) ^ 0x51));
  unint64_t v86 = v68 & 0xFFFFFFF3 ^ 0x8C42E14F;
  STACK[0x340] = v86;
  HIDWORD(v87) = v85 ^ (((16 * v85) ^ 0xFFFFFFE0) + (~(2 * ((16 * v85) ^ 0xFFFFFFE0)) | 0xFFFFFFBF) - 81) ^ 0x3F;
  LODWORD(v87) = BYTE4(v87) & 0xF8;
  unint64_t v88 = v68 ^ 0x8C42E147;
  STACK[0x278] = v88;
  unint64_t v89 = ((v87 >> 3) | ((unint64_t)v82 << 13)) ^ 0x58F620A6;
  int v90 = (v89 >> 21) | (v89 << 11);
  int v335 = *(unsigned __int8 *)(a21
                            + (*(unsigned __int8 *)(a18 + v86) ^ 0xF7)
                            - 2 * ((*(unsigned __int8 *)(a18 + v86) ^ 0xF7) & 0xAEu)
                            + 174)
       - (*(unsigned __int8 *)(a18 + v86) ^ 0xF7);
  uint64_t v91 = *(unsigned __int8 *)(a18 + v88);
  unint64_t v92 = v68 & 0xFFFFFFFC ^ 0x8C42E147;
  STACK[0x348] = v92;
  uint64_t v93 = *(unsigned __int8 *)(a18 + v92);
  int v94 = *(unsigned __int8 *)(a21 + (v91 ^ 0xD8)) + (v91 ^ 0x76) - 2 * (v91 ^ 0x76);
  int v95 = *(unsigned __int8 *)(a22 + (v93 ^ 0x57));
  unint64_t v96 = v77 & 0xFFFFFFF7 ^ 0x8C42E14F;
  STACK[0x378] = v96;
  int v97 = (v93 ^ 0xFFFFFFBB) + v95;
  LOBYTE(v85) = (*(unsigned char *)(a18 + v96) ^ 0xA7) + *(unsigned char *)(a21 + (*(unsigned __int8 *)(a18 + v96) ^ 0xF6));
  char v98 = v85 - ((2 * v85 + 70) & 0x4E);
  unint64_t v99 = v77 & 0xFFFFFFF8 ^ 0x8C42E147;
  STACK[0x2C8] = v99;
  LOBYTE(v93) = (*(unsigned char *)(a18 + v99) ^ 0xE9) + *(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v99) ^ 5)) - 104;
  unint64_t v100 = v77 & 0xFFFFFFF2 ^ 0x8C42E14F;
  STACK[0x248] = v100;
  int v101 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v100) ^ 0x12));
  uint64_t v339 = v77 & 0xFFFFFFFA ^ 0x8C42E147;
  char v102 = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v339) ^ 0x9CLL));
  unsigned int v103 = v101 ^ ((((v101 ^ 0xC7) >> 3) & 4 ^ v101 & 0xA4 | ((v101 ^ 0xC7) >> 3) & 0xFB ^ (v101 ^ 0xFFFFFFC7) & 0x5A) >> 1);
  int v104 = ((v102 ^ 0xC7) >> 4) ^ ((v102 ^ 0xC7) >> 1);
  unint64_t v105 = v77 & 0xFFFFFFF6 ^ 0x8C42E14F;
  STACK[0x240] = v105;
  int v106 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v105) ^ 0x76));
  int v107 = v93 | ((v102 ^ v71 ^ (v104 - ((2 * v104) & 8) - 124)) << 16);
  int v108 = (v106 ^ 0xC7) >> 3;
  char v109 = -103 - ((v106 & 8 | (16 * ((v106 & 8) != 0))) ^ 0x4F);
  if (((((v106 & 8 | (16 * (((v106 & 8) >> 3) & 1))) ^ 0x4F) + 17) & v108) == 0) {
    char v109 = ((v106 & 8 | (16 * ((v106 & 8) != 0))) ^ 0x4F) - 5;
  }
  int v110 = v77;
  unint64_t v111 = v77 & 0xFFFFFFF5 ^ 0x8C42E14F;
  STACK[0x220] = v111;
  uint64_t v340 = v77 & 0xFFFFFFF4 ^ 0x8C42E14F;
  int v112 = v106 ^ ((((v108 + v109 - 74) ^ (v106 ^ 0xC7) & 0xF7) & 0xFE) >> 1);
  v342[0] = v77;
  uint64_t v341 = v77 & 0xFFFFFFFE ^ 0x8C42E147;
  unsigned int v113 = *(unsigned char *)(a19 + (*(unsigned __int8 *)(a18 + v341) ^ 0xCFLL)) ^ 0xC7;
  unsigned int v114 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a18 + v341) ^ 0xCFLL)) ^ 0xFFFFFFC7 ^ (v113 >> 4) ^ (v113 >> 1);
  char v115 = *(unsigned char *)(a20 + (*(unsigned __int8 *)(a18 + v111) ^ 0xFBLL));
  uint64_t v116 = (uint64_t)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x7E4));
  unint64_t v332 = __PAIR64__(v78, v103);
  int v117 = *(_DWORD *)(v116 + 4 * (v103 ^ 0xF0));
  uint64_t v118 = (uint64_t)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x79C));
  HIDWORD(v330) = (v115 ^ (16 * v115)) ^ 0xF7;
  int v119 = *(_DWORD *)(v118 + 4 * ((v115 ^ (16 * v115)) ^ 0x78u));
  HIDWORD(v120) = v119 ^ 0x4F44;
  LODWORD(v120) = v119 ^ 0xE9580000;
  LODWORD(v330) = v94 - 94;
  unsigned int v121 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x736)) - 4;
  int v122 = (v120 >> 16) ^ *(_DWORD *)&v121[4 * ((v94 - 94) ^ 0xF9)] ^ (16 * (v117 ^ 0x4CF32167)
                                                                                    + 1831686593
                                                                                    - ((32 * (v117 ^ 0x4CF32167)) & 0xDA5AA380));
  HIDWORD(v329) = v107 ^ v90;
  unsigned int v123 = v107 ^ v90 ^ 0xDD03A24B;
  int v124 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x71A)) - 4;
  unsigned int v125 = *(_DWORD *)&v124[4 * (v123 ^ 0x33)] ^ v117 ^ (v122 - 365221057 - ((2 * v122) & 0xD476567E));
  int v126 = *(_DWORD *)(v118 + 4 * (v78 ^ 0x71u));
  HIDWORD(v120) = v126 ^ 0x4F44;
  LODWORD(v120) = v126 ^ 0xE9580000;
  unint64_t v331 = __PAIR64__(v112, v114);
  int v127 = *(_DWORD *)(v116 + 4 * (v114 ^ 0xBFu)) ^ 0x4CF32167;
  int v128 = (v120 >> 16) ^ (16 * v127 + 1831686593 - ((32 * v127) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * HIBYTE(v123)];
  HIDWORD(v328) = (*(unsigned char *)(a22 + (*(unsigned __int8 *)(a18 + v340) ^ 0x12))
                                  + (*(unsigned char *)(a18 + v340) ^ 0xFE)
                                  - 104);
  unsigned int v129 = *(_DWORD *)&v124[4 * (HIDWORD(v328) ^ 0xB9)] ^ v127 ^ (v128 - 365221057 - ((2 * v128) & 0xD476567E));
  uint64_t v338 = v110 & 0xFFFFFFFD ^ 0x8C42E147;
  int v130 = *(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a18 + v338) ^ 0x26)) ^ 0x16;
  int v131 = v130 ^ (16 * v130);
  int v132 = *(_DWORD *)(v116 + 4 * BYTE2(v123)) ^ 0x4CF32167;
  LODWORD(v329) = v131;
  int v133 = *(_DWORD *)(v118 + 4 * (v131 ^ 0xFBu));
  HIDWORD(v120) = v133 ^ 0x4F44;
  LODWORD(v120) = v133 ^ 0xE9580000;
  HIDWORD(v327) = (v98 - 54);
  int v134 = (v120 >> 16) ^ *(_DWORD *)&v121[4 * (HIDWORD(v327) ^ 0x40)] ^ (16 * v132
                                                                      + 1831686593
                                                                      - ((32 * v132) & 0xDA5AA380));
  LODWORD(v328) = v337 - 104;
  unsigned int v135 = *(_DWORD *)&v124[4 * ((v337 - 104) ^ 0xEB)] ^ v132 ^ (v134
                                                                              - 365221057
                                                                              - ((2 * v134) & 0xD476567E));
  int v136 = *(_DWORD *)(v118 + 4 * (BYTE1(v90) ^ 0x31u));
  HIDWORD(v120) = v136 ^ 0x4F44;
  LODWORD(v120) = v136 ^ 0xE9580000;
  int v137 = *(_DWORD *)(v116 + 4 * (v112 ^ 0xBBu)) ^ 0x4CF32167;
  LODWORD(v327) = v335 - 94;
  int v138 = (v120 >> 16) ^ *(_DWORD *)&v121[4 * ((v335 - 94) ^ 0xF7)] ^ (16 * v137
                                                                                     + 1831686593
                                                                                     - ((32 * v137) & 0xDA5AA380));
  HIDWORD(a23) = v97 - 104;
  unsigned int v139 = *(_DWORD *)&v124[4 * ((v97 - 104) ^ 0x33)] ^ v137 ^ (v138
                                                                             - 365221057
                                                                             - ((2 * v138) & 0xD476567E));
  int v140 = *(_DWORD *)(v118 + 4 * (BYTE1(v135) ^ 0xF4u));
  HIDWORD(v120) = v140 ^ 0x4F44;
  LODWORD(v120) = v140 ^ 0xE9580000;
  int v141 = *(_DWORD *)(v116 + 4 * (BYTE2(v139) ^ 0xBBu)) ^ 0x4CF32167;
  unsigned __int8 v142 = BYTE1(v129) ^ 0xAD;
  int v143 = *(_DWORD *)(v116 + 4 * (BYTE2(v125) ^ 0x1Fu));
  unsigned int v144 = v141 ^ *(_DWORD *)&v121[4 * (HIBYTE(v125) ^ 0x1B)] ^ *(_DWORD *)&v124[4 * (v129 ^ 0xDB)] ^ (16 * v141 + 1831686593 - ((32 * v141) & 0xDA5AA380)) ^ (v120 >> 16);
  int v145 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v139 ^ 0x22E) >> 8));
  HIDWORD(v120) = v145 ^ 0x4F44;
  LODWORD(v120) = v145 ^ 0xE9580000;
  int v146 = (16 * (v143 ^ 0x4CF32167) + 1831686593 - ((32 * (v143 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v129 ^ 0xF15ADDB) >> 24)] ^ (v120 >> 16);
  unsigned int v147 = *(_DWORD *)&v124[4 * (v135 ^ 0x80)] ^ v143 ^ (v146 - 365221057 - ((2 * v146) & 0xD476567E));
  int v148 = *(_DWORD *)(v116 + 4 * (BYTE2(v129) ^ 0xD6u)) ^ 0x4CF32167;
  int v149 = *(_DWORD *)(v118 + 4 * (BYTE1(v125) ^ 0xC7u));
  unsigned int v150 = (16 * v148 + 1831686593 - ((32 * v148) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v135) ^ 0x19)];
  HIDWORD(v120) = v149 ^ 0x4F44;
  LODWORD(v120) = v149 ^ 0xE9580000;
  unsigned int v151 = *(_DWORD *)&v124[4 * (v139 ^ 0x2E)] ^ v148 ^ (v120 >> 16) ^ (v150
                                                                                     - 365221057
                                                                                     - ((2 * v150) & 0xD476567E));
  int v152 = *(_DWORD *)(v116 + 4 * (BYTE2(v135) ^ 0x32u));
  int v153 = *(_DWORD *)(v118 + 4 * v142);
  HIDWORD(v120) = v153 ^ 0x4F44;
  LODWORD(v120) = v153 ^ 0xE9580000;
  int v154 = (v120 >> 16) ^ *(_DWORD *)&v121[4 * (HIBYTE(v139) ^ 0xBD)] ^ (16 * (v152 ^ 0x4CF32167)
                                                                     + 1831686593
                                                                     - ((32 * (v152 ^ 0x4CF32167)) & 0xDA5AA380));
  unsigned int v155 = v152 ^ *(_DWORD *)&v124[4 * (v125 ^ 0xC7)] ^ 0x3D3AF7A3 ^ (v154
                                                                                   - 365221057
                                                                                   - ((2 * v154) & 0xD476567E));
  unsigned int v156 = v155 - ((2 * v155) & 0x5F186BF6);
  LOBYTE(v154) = v156 + 123;
  unsigned int v157 = v156 - 917452165 - ((2 * v156 + 1595436022) & 0x33892900);
  int v158 = *(_DWORD *)(v116 + 4 * (BYTE2(v157) ^ 7u));
  BYTE2(v153) = BYTE2(v151) ^ 0xEB;
  int v159 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v151 ^ 0xDFF9) >> 8));
  unsigned int v160 = (16 * (v158 ^ 0x4CF32167) + 1831686593 - ((32 * (v158 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v144) ^ 0x7C)] ^ (((v159 ^ 0xE9584F44) >> (v144 & 0x10 ^ 0x10) >> (v144 & 0x10)) + ((v159 << 16) ^ 0x4F440000));
  unsigned int v161 = *(_DWORD *)&v124[4 * (v147 ^ 0xBE)] ^ v158 ^ (v160 - 365221057 - ((2 * v160) & 0xD476567E));
  v144 ^= 0x9561FF1F;
  int v162 = *(_DWORD *)(v116 + 4 * BYTE2(v144)) ^ 0x4CF32167;
  int v163 = *(_DWORD *)(v118 + 4 * (BYTE1(v157) ^ 7u));
  HIDWORD(v120) = v163 ^ 0x4F44;
  LODWORD(v120) = v163 ^ 0xE9580000;
  int v164 = (16 * v162 + 1831686593 - ((32 * v162) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v147) ^ 7)] ^ (v120 >> 16);
  unsigned int v165 = *(_DWORD *)&v124[4 * (v151 ^ 0xF9)] ^ v162 ^ (v164 - 365221057 - ((2 * v164) & 0xD476567E));
  int v166 = *(_DWORD *)&v121[4 * (HIBYTE(v151) ^ 5)];
  HIDWORD(v120) = v166 ^ 0xC1C1C1C1;
  LODWORD(v120) = v166 ^ 0x6D2D5000;
  int v167 = *(_DWORD *)(v116 + 4 * (BYTE2(v147) ^ 0xC6u)) ^ 0x4CF32167;
  unsigned int v168 = (((v120 >> 10) ^ 0x25EB099C) << 10) ^ (16 * v167) ^ (((v120 >> 10) ^ 0x25EB099C) >> 22);
  int v169 = *(_DWORD *)(v118 + 4 * BYTE1(v144));
  HIDWORD(v120) = v169 ^ 0x4F44;
  LODWORD(v120) = v169 ^ 0xE9580000;
  int v170 = *(_DWORD *)&v124[4 * (v154 ^ 0xB3)] ^ v167 ^ (v120 >> 16) ^ (v168
                                                                                     - 365221057
                                                                                     - ((2 * v168) & 0xD476567E));
  int v171 = *(_DWORD *)(v118 + 4 * (BYTE1(v147) ^ 0xECu));
  HIDWORD(v120) = v171 ^ 0x4F44;
  LODWORD(v120) = v171 ^ 0xE9580000;
  int v172 = *(_DWORD *)(v116 + 4 * BYTE2(v153)) ^ 0x4CF32167;
  int v173 = (v120 >> 16) ^ (16 * v172 + 1831686593 - ((32 * v172) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4
                                                                                               * (HIBYTE(v157) ^ 0x70)];
  unsigned int v174 = *(_DWORD *)&v124[4 * (v144 ^ 0x33)] ^ v172 ^ (v173 - 365221057 - ((2 * v173) & 0xD476567E));
  int v175 = *(_DWORD *)(v116 + 4 * (BYTE2(v174) ^ 0x62u)) ^ 0x4CF32167;
  unsigned int v176 = (16 * v175 + 1831686593 - ((32 * v175) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v161) ^ 0x91)];
  unsigned __int8 v177 = BYTE2(v170) ^ 0xF7;
  int v178 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v170 ^ 0xE4A6) >> 8));
  HIDWORD(v120) = v178 ^ 0x4F44;
  LODWORD(v120) = v178 ^ 0xE9580000;
  unsigned int v179 = *(_DWORD *)&v124[4 * (v165 ^ 0x68)] ^ v175 ^ (v120 >> 16) ^ (v176
                                                                                     - 365221057
                                                                                     - ((2 * v176) & 0xD476567E));
  int v180 = *(_DWORD *)(v116 + 4 * (BYTE2(v161) ^ 0xA8u)) ^ 0x4CF32167;
  int v181 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v174 ^ 0x2957) >> 8));
  HIDWORD(v120) = v181 ^ 0x4F44;
  LODWORD(v120) = v181 ^ 0xE9580000;
  int v182 = (16 * v180 + 1831686593 - ((32 * v180) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v165) ^ 0xCE)] ^ (v120 >> 16);
  unsigned int v183 = *(_DWORD *)&v124[4 * (v170 ^ 0x15)] ^ v180 ^ (v182 - 365221057 - ((2 * v182) & 0xD476567E));
  int v184 = *(_DWORD *)(v116 + 4 * (BYTE2(v165) ^ 0x60u)) ^ 0x4CF32167;
  int v185 = *(_DWORD *)(v118 + 4 * (BYTE1(v161) ^ 0xBAu));
  HIDWORD(v120) = v185 ^ 0x4F44;
  LODWORD(v120) = v185 ^ 0xE9580000;
  int v186 = (16 * v184 + 1831686593 - ((32 * v184) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v170 ^ 0xF1F7E4A6) >> 24)] ^ (v120 >> 16);
  unsigned int v187 = *(_DWORD *)&v124[4 * (v174 ^ 0x57)] ^ v184 ^ (v186 - 365221057 - ((2 * v186) & 0xD476567E));
  int v188 = BYTE1(v165) ^ 0xC;
  if ((v165 & 0x1000) != 0) {
    int v189 = -16;
  }
  else {
    int v189 = 16;
  }
  int v190 = *(_DWORD *)(v116 + 4 * v177) ^ 0x4CF32167;
  unsigned int v191 = *(_DWORD *)(v118 + 4 * ((v188 + v189) ^ 0x83u));
  unsigned int v192 = *(_DWORD *)&v121[4 * (HIBYTE(v174) ^ 0xA1)] ^ HIWORD(v191) ^ (v191 << 16) ^ (16 * v190
                                                                                    + 1831686593
                                                                                    - ((32 * v190) & 0xDA5AA380)) ^ 0x4F44E958;
  unsigned int v193 = *(_DWORD *)&v124[4 * (v161 ^ 4)] ^ v190 ^ (v192 - 365221057 - ((2 * v192) & 0xD476567E));
  unsigned int v194 = v193 ^ 0xEFBC3B44;
  int v195 = *(_DWORD *)(v116 + 4 * ((v193 ^ 0xEFBC3B44) >> 16)) ^ 0x4CF32167;
  int v196 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v187 ^ 0x8D48) >> 8));
  HIDWORD(v197) = v196 ^ 0x4F44;
  LODWORD(v197) = v196 ^ 0xE9580000;
  int v198 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * (HIBYTE(v179) ^ 0xCC)] ^ (16 * v195
                                                                     + 1831686593
                                                                     - ((32 * v195) & 0xDA5AA380));
  unsigned int v199 = *(_DWORD *)&v124[4 * (v183 ^ 0xA9)] ^ v195 ^ (v198 - 365221057 - ((2 * v198) & 0xD476567E));
  LOWORD(v198) = v179 ^ 0xD583;
  int v200 = *(_DWORD *)(v116 + 4 * (((v179 ^ 0x255FD583) >> 16) ^ 0xC3u)) ^ 0x4CF32167;
  int v201 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v193 ^ 0x3B44) >> 8));
  HIDWORD(v197) = v201 ^ 0x4F44;
  LODWORD(v197) = v201 ^ 0xE9580000;
  int v202 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * HIBYTE(v183)] ^ (16 * v200 + 1831686593 - ((32 * v200) & 0xDA5AA380));
  unsigned int v203 = *(_DWORD *)&v124[4 * (v187 ^ 0x48)] ^ v200 ^ (v202 - 365221057 - ((2 * v202) & 0xD476567E));
  int v204 = *(_DWORD *)(v116 + 4 * ((v183 ^ 0xE93411A9) >> 16)) ^ 0x4CF32167;
  int v205 = *(_DWORD *)(v118 + 4 * BYTE1(v198));
  HIDWORD(v197) = v205 ^ 0x4F44;
  LODWORD(v197) = v205 ^ 0xE9580000;
  int v206 = (16 * v204 + 1831686593 - ((32 * v204) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v187 ^ 0x807D8D48) >> 24)] ^ (v197 >> 16);
  unsigned int v207 = *(_DWORD *)&v124[4 * (v193 ^ 0x77)] ^ v204 ^ (v206 - 365221057 - ((2 * v206) & 0xD476567E));
  int v208 = *(_DWORD *)(v116 + 4 * (BYTE2(v187) ^ 0xBEu)) ^ 0x4CF32167;
  int v209 = *(_DWORD *)(v118 + 4 * (BYTE1(v183) ^ 0x82u));
  HIDWORD(v197) = v209 ^ 0x4F44;
  LODWORD(v197) = v209 ^ 0xE9580000;
  int v210 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * HIBYTE(v194)] ^ (16 * v208 + 1831686593 - ((32 * v208) & 0xDA5AA380));
  unsigned int v211 = *(_DWORD *)&v124[4 * v198] ^ v208 ^ (v210 - 365221057 - ((2 * v210) & 0xD476567E));
  int v212 = *(_DWORD *)(v116 + 4 * ((v211 ^ 0x950DA39D) >> 16)) ^ 0x4CF32167;
  unsigned int v213 = (16 * v212 + 1831686593 - ((32 * v212) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v199 ^ 0x11521BCA) >> 24)];
  int v214 = *(_DWORD *)(v118 + 4 * (BYTE1(v207) ^ 0x89u));
  HIDWORD(v197) = v214 ^ 0x4F44;
  LODWORD(v197) = v214 ^ 0xE9580000;
  unsigned int v215 = v213 - 365221057 - ((2 * v213) & 0xD476567E);
  BYTE1(v213) = BYTE1(v203) ^ 0xD1;
  int v216 = *(_DWORD *)&v124[4 * (v203 ^ 0x88)] ^ v212 ^ (v197 >> 16) ^ 0x71C9D6C4 ^ v215;
  int v217 = *(_DWORD *)(v116 + 4 * ((v199 ^ 0x11521BCA) >> 16));
  int v218 = *(_DWORD *)(v118 + 4 * (BYTE1(v211) ^ 0x30u));
  HIDWORD(v197) = v218 ^ 0x4F44;
  LODWORD(v197) = v218 ^ 0xE9580000;
  int v219 = v216 - ((2 * v216) & 0xB9B85FFE);
  int v220 = (16 * (v217 ^ 0x4CF32167) + 1831686593 - ((32 * (v217 ^ 0x4CF32167)) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v203) ^ 0xDF)] ^ (v197 >> 16);
  v207 ^= 0x7A851A70u;
  unsigned int v221 = *(_DWORD *)&v124[4 * (v207 ^ 0x33)] ^ v217 ^ (v220 - 365221057 - ((2 * v220) & 0xD476567E));
  int v222 = *(_DWORD *)(v116 + 4 * (BYTE2(v203) ^ 0xA7u)) ^ 0x4CF32167;
  int v223 = *(_DWORD *)(v118 + 4 * (BYTE1(v199) ^ 0x88u));
  HIDWORD(v197) = v223 ^ 0x4F44;
  LODWORD(v197) = v223 ^ 0xE9580000;
  int v224 = (16 * v222 + 1831686593 - ((32 * v222) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4
                                                                                * (HIBYTE(v207) ^ -HIBYTE(v207) ^ ((HIBYTE(v207) ^ 0xFFFFFF16) + 234))
                                                                                + 932] ^ (v197 >> 16);
  unsigned int v225 = *(_DWORD *)&v124[4 * (v211 ^ 0x9D)] ^ v222 ^ (v224 - 365221057 - ((2 * v224) & 0xD476567E));
  int v226 = *(_DWORD *)(v116 + 4 * BYTE2(v207));
  int v227 = *(_DWORD *)(v118 + 4 * BYTE1(v213));
  HIDWORD(v197) = v227 ^ 0x4F44;
  LODWORD(v197) = v227 ^ 0xE9580000;
  int v228 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * (HIBYTE(v211) ^ 0x7C)] ^ (16 * (v226 ^ 0x4CF32167)
                                                                     + 1831686593
                                                                     - ((32 * (v226 ^ 0x4CF32167)) & 0xDA5AA380));
  unsigned int v229 = *(_DWORD *)&v124[4 * (v199 ^ 0xF9)] ^ v226 ^ (v228 - 365221057 - ((2 * v228) & 0xD476567E));
  int v230 = HIBYTE(v229) ^ 0x59;
  int v231 = *(_DWORD *)(v116 + 4 * (BYTE2(v229) ^ 0x74u));
  int v232 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v225 ^ 0xDE69) >> 8));
  HIDWORD(v197) = v232 ^ 0x4F44;
  LODWORD(v197) = v232 ^ 0xE9580000;
  int v233 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * (((v219 - 589549569) >> 24) ^ 0xB5)] ^ (16
                                                                                                 * (v231 ^ 0x4CF32167)
                                                                                                 + 1831686593
                                                                                                 - ((32 * (v231 ^ 0x4CF32167)) & 0xDA5AA380));
  int v234 = *(_DWORD *)(v118 + 4 * (BYTE1(v229) ^ 0x1Eu));
  HIDWORD(v197) = v234 ^ 0x4F44;
  LODWORD(v197) = v234 ^ 0xE9580000;
  unsigned int v235 = *(_DWORD *)&v124[4 * (v221 ^ 0xB4)] ^ v231 ^ (v233 - 365221057 - ((2 * v233) & 0xD476567E));
  int v236 = *(_DWORD *)(v116 + 4 * (((v219 - 589549569) >> 16) ^ 0xB6u)) ^ 0x4CF32167;
  unsigned int v237 = v236 ^ *(_DWORD *)&v121[4 * (HIBYTE(v221) ^ 0x91)] ^ *(_DWORD *)&v124[4 * (v225 ^ 0x69)] ^ ((v197 >> 16) - 365221057 - ((2 * (v197 >> 16)) & 0xD476567E)) ^ (16 * v236 + 1831686593 - ((32 * v236) & 0xDA5AA380));
  int v238 = *(_DWORD *)(v116 + 4 * (BYTE2(v221) ^ 9u)) ^ 0x4CF32167;
  int v239 = *(_DWORD *)(v118 + 4 * (((unsigned __int16)(v219 + 12287) >> 8) ^ 0x44u));
  HIDWORD(v197) = v239 ^ 0x4F44;
  LODWORD(v197) = v239 ^ 0xE9580000;
  int v240 = (16 * v238 + 1831686593 - ((32 * v238) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v225 ^ 0x5FEEDE69) >> 24)] ^ (v197 >> 16);
  int v241 = *(_DWORD *)&v124[4 * (((v229 ^ 0x28) + (v229 ^ 0xFFFFFFE4) + 1) ^ 0xFFFFFFFE)
                        + 4 * (v229 ^ 0x28)] ^ v238;
  int v242 = *(_DWORD *)(v116 + 4 * (BYTE2(v225) ^ 0x2Du)) ^ 0x4CF32167;
  int v243 = *(_DWORD *)(v118 + 4 * (BYTE1(v221) ^ 0xFEu));
  HIDWORD(v197) = v243 ^ 0x4F44;
  LODWORD(v197) = v243 ^ 0xE9580000;
  int v244 = (v197 >> 16) ^ (16 * v242 + 1831686593 - ((32 * v242) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4
                                                                                               * (v230 & 0x90 ^ 0x86 ^ (~(2 * (v230 | 0x90)) + (v230 | 0x90)))];
  unsigned int v245 = *(_DWORD *)&v124[4 * (-(char)v219 ^ 0x5B)] ^ v242 ^ (v244
                                                                             - 365221057
                                                                             - ((2 * v244) & 0xD476567E));
  LOBYTE(v242) = v245 ^ 0xB7;
  unsigned int v246 = v241 ^ (v240 - 365221057 - ((2 * v240) & 0xD476567E));
  int v247 = *(_DWORD *)(v116 + 4 * ((v245 ^ 0x59A5F4B7) >> 16)) ^ 0x4CF32167;
  int v248 = *(_DWORD *)(v118 + 4 * ((unsigned __int16)(v246 ^ 0x872B) >> 8));
  HIDWORD(v197) = v248 ^ 0x4F44;
  LODWORD(v197) = v248 ^ 0xE9580000;
  int v249 = (16 * v247 + 1831686593 - ((32 * v247) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v235) ^ 0x9E)] ^ (v197 >> 16);
  int v250 = *(_DWORD *)(v118 + 4 * (BYTE1(v245) ^ 0x67u));
  unsigned int v251 = *(_DWORD *)&v124[4 * (v237 ^ 0xEE)] ^ v247 ^ (v249 - 365221057 - ((2 * v249) & 0xD476567E));
  HIDWORD(v197) = v250 ^ 0x4F44;
  LODWORD(v197) = v250 ^ 0xE9580000;
  int v252 = *(_DWORD *)(v116 + 4 * (BYTE2(v235) ^ 0xD6u)) ^ 0x4CF32167;
  int v253 = *(_DWORD *)(v118 + 4 * (BYTE1(v235) ^ 0x9Au));
  int v254 = v252 ^ *(_DWORD *)&v121[4 * (HIBYTE(v237) ^ 0xD6)] ^ *(_DWORD *)&v124[4 * (v246 ^ 0x18)] ^ (16 * v252 + 1831686593 - ((32 * v252) & 0xDA5AA380)) ^ ((v197 >> 16) - 365221057 - ((2 * (v197 >> 16)) & 0xD476567E));
  HIDWORD(v197) = v253 ^ 0x4F44;
  LODWORD(v197) = v253 ^ 0xE9580000;
  int v255 = *(_DWORD *)(v116 + 4 * (BYTE2(v237) ^ 0x56u)) ^ 0x4CF32167;
  int v256 = *(_DWORD *)&v121[4 * ((v246 ^ 0x911B872B) >> 24)] ^ v255 ^ 0x6D41727E ^ (16 * v255
                                                                                + 1831686593
                                                                                - ((32 * v255) & 0xDA5AA380)) ^ (v197 >> 16);
  int v257 = *(_DWORD *)(v116 + 4 * (BYTE2(v246) ^ 0xD8u)) ^ 0x4CF32167;
  int v258 = *(_DWORD *)(v118 + 4 * (BYTE1(v237) ^ 0xE4u));
  HIDWORD(v197) = v258 ^ 0x4F44;
  LODWORD(v197) = v258 ^ 0xE9580000;
  int v259 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * (HIBYTE(v245) ^ 0xB0)] ^ (16 * v257
                                                                     + 1831686593
                                                                     - ((32 * v257) & 0xDA5AA380));
  unsigned int v260 = *(_DWORD *)&v124[4 * (v235 ^ 0xC1)] ^ v257 ^ (v259 - 365221057 - ((2 * v259) & 0xD476567E));
  HIDWORD(v197) = *(_DWORD *)&v124[4 * v242] ^ 0xF6B38F85;
  LODWORD(v197) = HIDWORD(v197);
  int v261 = *(_DWORD *)(v116 + 4 * (BYTE2(v260) ^ 0x72u)) ^ 0x4CF32167;
  LODWORD(v197) = (v197 >> 21) ^ __ROR4__(v256, 21) ^ 0x549BF9D9;
  HIDWORD(v197) = v197;
  int v262 = v197 >> 11;
  int v263 = *(_DWORD *)(v118 + 4 * (BYTE1(v262) ^ 0xA0u));
  HIDWORD(v197) = v263 ^ 0x4F44;
  LODWORD(v197) = v263 ^ 0xE9580000;
  int v264 = (v197 >> 16) ^ *(_DWORD *)&v121[4 * ((v251 ^ 0xD4B73D47) >> 24)] ^ (16 * v261
                                                                           + 1831686593
                                                                           - ((32 * v261) & 0xDA5AA380));
  unsigned int v265 = *(_DWORD *)&v124[4 * (v254 ^ 0xEA)] ^ v261 ^ (v264 - 365221057 - ((2 * v264) & 0xD476567E));
  int v266 = *(_DWORD *)(v116 + 4 * (BYTE2(v251) ^ 0x74u)) ^ 0x4CF32167;
  int v267 = *(_DWORD *)(v118 + 4 * (BYTE1(v260) ^ 0x66u));
  HIDWORD(v197) = v267 ^ 0x4F44;
  LODWORD(v197) = v267 ^ 0xE9580000;
  int v268 = v254 ^ 0x177CD9D9;
  int v269 = *(_DWORD *)&v121[4 * ((v254 ^ 0x177CD9D9u) >> 24)] ^ 0x6D41727E ^ v266 ^ (v197 >> 16) ^ (16 * v266
                                                                                                + 1831686593
                                                                                                - ((32 * v266) & 0xDA5AA380));
  int v270 = *(_DWORD *)&v124[4 * (v262 ^ 0xEF)];
  int v271 = v269 & 0x200 | 0x71429417;
  if ((v269 & 0x200 & (v270 ^ 0xEA3B2B3F)) != 0) {
    int v271 = -494589906 - v271;
  }
  unsigned int v272 = ((v270 ^ 0xF6B38F85) - 1900188695 + v271) ^ v269 & 0xFFFFFDFF;
  int v273 = *(_DWORD *)(v116 + 4 * BYTE2(v268)) ^ 0x4CF32167;
  int v274 = *(_DWORD *)(v118 + 4 * (BYTE1(v251) ^ 0xAEu));
  unsigned int v275 = (16 * v273 + 1831686593 - ((32 * v273) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * ((v262 ^ 0x1EA133EFu) >> 24)];
  HIDWORD(v276) = v274 ^ 0x4F44;
  LODWORD(v276) = v274 ^ 0xE9580000;
  unsigned int v277 = *(_DWORD *)&v124[4 * (v260 ^ 0xD)] ^ v273 ^ (v276 >> 16) ^ (v275
                                                                                    - 365221057
                                                                                    - ((2 * v275) & 0xD476567E));
  int v278 = *(_DWORD *)(v116 + 4 * (BYTE2(v262) ^ 0x62u)) ^ 0x4CF32167;
  int v279 = *(_DWORD *)(v118 + 4 * BYTE1(v268));
  HIDWORD(v276) = v279 ^ 0x4F44;
  LODWORD(v276) = v279 ^ 0xE9580000;
  int v280 = (16 * v278 + 1831686593 - ((32 * v278) & 0xDA5AA380)) ^ *(_DWORD *)&v121[4 * (HIBYTE(v260) ^ 0x32)] ^ (v276 >> 16);
  unsigned int v281 = *(_DWORD *)&v124[4 * (v251 ^ 0x74)] ^ v278 ^ (v280 - 365221057 - ((2 * v280) & 0xD476567E));
  uint64_t v282 = (uint64_t)*(&off_1F08CDB40 + LODWORD(STACK[0x3D8]) - 1761);
  unsigned __int8 v283 = v272 ^ 0x9F;
  v284 = (char *)*(&off_1F08CDB40 + LODWORD(STACK[0x3D8]) - 1929) - 4;
  unsigned int v285 = *(_DWORD *)&v284[4 * (BYTE2(v265) ^ 0x99)] ^ 0x1A0994BC;
  v286 = (char *)*(&off_1F08CDB40 + LODWORD(STACK[0x3D8]) - 1918) - 8;
  unsigned int v287 = ((v277 ^ 0x7B)
        + 1626187369
        + ((2 * (((v277 ^ 0x7B) + 112) & 0xFFFFFFFB ^ (v277 ^ 0xBC37B | 0x7FFFFFFC))) ^ 0xC1E02007)) ^ v285 ^ ((((v272 ^ 0xF137909F) >> 24) ^ 0x9FD52929) - 704447877 + *(_DWORD *)(v282 + 4 * (((v272 ^ 0xF137909F) >> 24) ^ 0xB4))) ^ (v285 >> 2) ^ *(_DWORD *)&v286[4 * (v277 ^ 0x79)] ^ (v285 >> 4);
  v288 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x70C)) - 8;
  unsigned int v289 = *(_DWORD *)&v288[4 * ((unsigned __int16)(v281 ^ 0x7C9C) >> 8)] ^ 0xF68CA1B0;
  int v290 = v289 ^ (1515496080 * v289);
  int v291 = *(_DWORD *)(v282 + 4 * (((v265 ^ 0x6792B6A6) >> 24) ^ 0xB4));
  LODWORD(v334) = *(_DWORD *)(v282 + 4 * (HIBYTE(v277) ^ 0xB4));
  HIDWORD(v334) = (v281 ^ 0x250E7C9C) >> 24;
  HIDWORD(v336) = *(_DWORD *)(v282 + 4 * (HIDWORD(v334) ^ 0xB4u));
  int v292 = *(_DWORD *)&v284[4 * (BYTE2(v281) ^ 5)];
  int v293 = *(_DWORD *)&v284[4 * ((v272 ^ 0xF137909F) >> 16)];
  LODWORD(v336) = *(_DWORD *)&v284[4 * ((v277 ^ 0xBC37B) >> 16)];
  int v294 = *(_DWORD *)&v288[4 * ((unsigned __int16)(v277 ^ 0xC37B) >> 8)];
  HIDWORD(v333) = *(_DWORD *)&v288[4 * ((unsigned __int16)(v265 ^ 0xB6A6) >> 8)];
  int v295 = *(_DWORD *)&v288[4 * (BYTE1(v272) ^ 0x5E)];
  LODWORD(v288) = *(_DWORD *)&v286[4 * (v272 ^ 0x9D)];
  int v296 = *(_DWORD *)&v286[4 * (v281 ^ 0x9E)];
  int v297 = *(_DWORD *)&v286[4 * (v265 ^ 0xA4)];
  unsigned int v298 = ((v287 ^ v290) + 550835652 - ((2 * (v287 ^ v290)) & 0x41AA2BD8) + 40) ^ LODWORD(STACK[0x28C]);
  uint64_t v299 = (uint64_t)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x780));
  *(unsigned char *)(a17 + v339) = *(unsigned char *)(v299 + (((v298 ^ 0x5244C6B3) >> 16) ^ 0x5ELL)) ^ ((v298 ^ 0x5244C6B3) >> 16) ^ 0x8A ^ ((((v298 ^ 0x5244C6B3) >> 16) ^ 0x8A) - ((2 * (((v298 ^ 0x5244C6B3) >> 16) ^ 0x8A) - 18) & 0x99) + 67) ^ 0xB9;
  unsigned int v300 = v292 ^ 0x1A0994BC ^ ((((v265 ^ 0x6792B6A6) >> 24) ^ 0x9FD52929) - 704447877 + v291) ^ ((v292 ^ 0x1A0994BCu) >> 2) ^ ((v292 ^ 0x1A0994BCu) >> 4) ^ v294 ^ 0xF68CA1B0 ^ v288 ^ (1515496080 * (v294 ^ 0xF68CA1B0)) ^ (~((2 * v283 - 102555424) & 0xC1E023F0) + v283 + 1626187369);
  unsigned int v301 = (v300 + 75795782 - ((2 * v300) & 0x9091BFA) + 183) ^ LODWORD(STACK[0x350]);
  unsigned int v302 = v301 ^ 0x22A932A6;
  uint64_t v303 = (BYTE1(v302) | 0x88) ^ (v302 >> 8) & 0x88;
  v304 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x782)) - 4;
  *(unsigned char *)(a17 + v338) = (((unsigned __int16)(v301 ^ 0x32A6) >> 8) | 0x88) ^ ((unsigned __int16)(v301 ^ 0x32A6) >> 8) & 0x88 ^ 0x35 ^ ((v304[v303 ^ 0x14] ^ 0x8D) - ((2 * v304[v303 ^ 0x14]) & 0x20) - 112);
  v305 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x790)) - 12;
  LODWORD(v303) = v305[HIBYTE(v298) ^ 0xEFLL];
  HIDWORD(v276) = v303 ^ 0xD;
  LODWORD(v276) = ~v303 << 24;
  *(unsigned char *)(a17 + STACK[0x2C0]) = (v276 >> 29) ^ 0x83;
  int v306 = v293 ^ 0x1A0994BC ^ ((HIBYTE(v277) ^ 0x9FD52929) - 704447877 + v334) ^ ((v293 ^ 0x1A0994BCu) >> 2) ^ ((v293 ^ 0x1A0994BCu) >> 4);
  int v307 = v306 & 0x1000000 | 0xEED0C61;
  if ((v306 & 0x1000000 & ~v296) != 0) {
    int v307 = 500832450 - v307;
  }
  unsigned int v308 = v306 & 0xFEFFFFFF ^ (1515496080 * (HIDWORD(v333) ^ 0xF68CA1B0)) ^ ((((v281 ^ 0x9C)
                                                                            + 1626187369
                                                                            + ((2
                                                                              * (((v281 ^ 0x9C) + 112) & 0xFFFFFFFB ^ (v281 | 0x7FFFFFFC))) ^ 0xC1E02007)) ^ v296)
                                                                          - 250416225
                                                                          + v307);
  unsigned int v309 = HIDWORD(v333) ^ 0xF68CA1B0 ^ LODWORD(STACK[0x380]) ^ (v308 - 66792516 - ((2 * v308) & 0xF809A778));
  v310 = (char *)*(&off_1F08CDB40 + (LODWORD(STACK[0x3D8]) ^ 0x726)) - 12;
  *(unsigned char *)(a17 + v340) = v310[BYTE4(v333) ^ 0xB0u ^ LOBYTE(STACK[0x380]) ^ (v308
                                                                                             - 68
                                                                                             - ((2 * v308) & 0x78)) ^ 0x28] ^ 0x3D;
  int v311 = v305[HIBYTE(v301) ^ 0xF9];
  HIDWORD(v312) = v311 ^ 0xD;
  LODWORD(v312) = ~v311 << 24;
  unint64_t v313 = STACK[0x278];
  *(unsigned char *)(a17 + STACK[0x278]) = (v312 >> 29) ^ 0xFB;
  *(unsigned char *)(a17 + v341) = BYTE2(v302) ^ 0x61 ^ ((BYTE2(v302) ^ 0x61) - ((2 * (BYTE2(v302) ^ 0x61) - 18) & 0x98) + 67) ^ 0xB8 ^ *(unsigned char *)(v299 + (BYTE2(v302) ^ 0xB5));
  unsigned int v314 = (HIDWORD(v334) ^ 0x9FD52929) - 704447877 + HIDWORD(v336);
  int v315 = v336 ^ 0x1A0994BC ^ ((v336 ^ 0x1A0994BC) >> 4) ^ ((v336 ^ 0x1A0994BC) >> 2);
  int v316 = v315 & 0x80000 | 0x36261C02;
  if ((v315 & 0x80000 & v314) != 0) {
    int v316 = 1816934404 - v316;
  }
  unsigned int v317 = v315 & 0xFFF7FFFF ^ (1515496080 * (v295 ^ 0xF68CA1B0)) ^ (v314 - 908467202 + v316);
  unsigned int v318 = v297 ^ ((v265 ^ 0xA6) + 2096205936) ^ (v317 - ((2 * v317) & 0xC7F82BF0) - 470018568);
  unsigned int v319 = v295 ^ LODWORD(STACK[0x390]) ^ (v318 - 2142818494 - ((2 * v318) & 0x8E5EE4) + 48);
  *(unsigned char *)(a17 + STACK[0x248]) = *(unsigned char *)(v299 + (BYTE2(v319) ^ 0x17) + ((v319 >> 15) & 0x1A8 ^ 0xFFFFFFD7) + 213) ^ BYTE2(v319) ^ ((BYTE2(v319) ^ 0x17) + (~(2 * (BYTE2(v319) ^ 0x17) - 18) | 0x67) + 68) ^ 0x91;
  int v320 = v305[HIBYTE(v319) ^ 0xCLL];
  HIDWORD(v321) = v320 ^ 0xD;
  LODWORD(v321) = ~v320 << 24;
  *(unsigned char *)(a17 + STACK[0x340]) = (v321 >> 29) ^ 0x50;
  *(unsigned char *)(a17 + STACK[0x240]) = ((v309 ^ 0xCFDDD967) >> 16) ^ 0x94 ^ ((((v309 ^ 0xCFDDD967) >> 16) ^ 0x94)
                                                                       - ((2 * (((v309 ^ 0xCFDDD967) >> 16) ^ 0x94) - 18) & 0x98)
                                                                       + 67) ^ *(unsigned char *)(v299
                                                                                        + (((v309 ^ 0xCFDDD967) >> 16) ^ 0x40)) ^ 0xC;
  unsigned int v322 = (((v319 ^ 0xA9B9339F) >> 4) & 0xF0 | ((unsigned __int16)(v319 ^ 0x339F) >> 12)) ^ 0xE6;
  *(unsigned char *)(a17 + STACK[0x398]) = v304[((v322 >> 4) & 0xFFFFFF0F | (16 * (v322 & 0xF))) ^ 0xAELL] ^ (((v322 >> 4) & 0xF | (16 * (v322 & 0xF))) + (~(2 * ((v322 >> 4) & 0xF | (16 * (v322 & 0xF)))) | 0xE5) - 114) ^ 0x2B;
  *(unsigned char *)(a17 + STACK[0x220]) = (((unsigned __int16)(v309 ^ 0xD967) >> 8)
                                  + (~((v309 ^ 0xCFDDD967) >> 7) | 0xE5)
                                  - 114) ^ 0xDB ^ v304[((unsigned __int16)(v309 ^ 0xD967) >> 8) ^ 0xA0];
  *(unsigned char *)(a17 + STACK[0x388]) = (((unsigned __int16)(v298 ^ 0xC6B3) >> 8) - (((v298 ^ 0x5244C6B3) >> 7) & 0x1A) - 115) ^ v304[((unsigned __int16)(v298 ^ 0xC6B3) >> 8) ^ 0x75] ^ 0x80;
  *(unsigned char *)(a17 + STACK[0x348]) = v310[v301 ^ 0x95] ^ 0x90;
  *(unsigned char *)(a17 + STACK[0x2C8]) = v310[v298 ^ 0x7FLL] ^ 1;
  int v323 = STACK[0x3D8];
  *(unsigned char *)(a17 + STACK[0x3A0]) = v310[v319 ^ 0x30] ^ 0xAE;
  int v324 = v305[HIBYTE(v309) ^ 0x49];
  HIDWORD(v321) = v324 ^ 0xD;
  LODWORD(v321) = ~v324 << 24;
  *(unsigned char *)(a17 + STACK[0x378]) = (v321 >> 29) ^ 0x2E;
  BOOL v325 = ((v313 - 1941773993 - 2 * ((v313 + 16) & 0xC42E14F ^ v342[0] & 8)) ^ 0x8C42E140) > 0x14F;
  return (*(uint64_t (**)(char *, void, uint64_t, uint64_t, char *, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v70 + 8 * (((2 * v325) | (16 * v325)) ^ v323)))(v310, ~(2 * (HIWORD(v319) ^ 0x17) - 18) | 0x67, 4136411568, 1626187369, v304, 152, 13, v313, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           v327,
           v328,
           v329,
           v330,
           v331,
           v332,
           v333,
           v334,
           v336,
           v338,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           v339,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58,
           a59,
           a60,
           a61,
           a62,
           a63,
           a64,
           a65,
           a66,
           a67);
}

uint64_t sub_1B0269BA8@<X0>(int a1@<W8>)
{
  v8.i64[0] = 0xCACACACACACACACALL;
  v8.i64[1] = 0xCACACACACACACACALL;
  v9.i64[0] = 0xE6E6E6E6E6E6E6E6;
  v9.i64[1] = 0xE6E6E6E6E6E6E6E6;
  *(int8x16_t *)(v3 + (v1 + a1)) = vaddq_s8(vaddq_s8(*v7, v9), vmvnq_s8(vandq_s8(vaddq_s8(*v7, *v7), v8)));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((30
                                * ((((((v4 - 14) ^ 0x1FFFFFA19) & (v5 + v2 - 902)) == 16) ^ (-65 * ((v4 - 14) ^ 0xEA))) & 1)) ^ (v4 - 14))))();
}

void sub_1B0269C38()
{
  LODWORD(STACK[0x4A8]) = v0;
  STACK[0x5B8] = *(void *)(v2 + 8 * v1);
  JUMPOUT(0x1B0255D84);
}

uint64_t sub_1B0269C64@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((1462 * (((v2 + 1719695118) & 0xAC38FD46) + a2 - 1076024274 < 0x38)) ^ (v2 + a1))))();
}

uint64_t sub_1B0269CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v17 - 120) = (v16 + 609) ^ (1734042137
                                        * ((2 * ((v17 - 136) & 0x7099D5F8) - (v17 - 136) - 1889129977) ^ 0xD3A8E94A));
  *(void *)(v17 - 136) = a14;
  *(void *)(v17 - 128) = a13;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1276)))(v17 - 136);
  int v18 = 535753261 * ((2 * ((v17 - 136) & 0x59E62C60) - (v17 - 136) + 639226782) ^ 0x2CEDDDB1);
  *(void *)(v17 - 136) = v14;
  *(_DWORD *)(v17 - 128) = v18 + 1640731306;
  *(_DWORD *)(v17 - 124) = v18 + v16 + 438;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1419)))(v17 - 136);
  *(_DWORD *)(v17 - 136) = (v16 + 321) ^ (1374699841 * ((v17 - 136) ^ 0x6DF41809));
  *(void *)(v17 - 128) = v14;
  *(void *)(v17 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1350)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v17 - 132) > 0x26812D29u) * ((v16 - 97) ^ 0x29E)) ^ (v16 - 414))))(v19);
}

uint64_t sub_1B0269CB8(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1E9B2FDF8 - qword_1E9B30978) ^ (unint64_t)&v7;
  qword_1E9B30978 = 1469428717 * (v2 + 0x13BC45BED9160A13);
  qword_1E9B2FDF8 = 1469428717 * (v2 ^ 0xEC43BA4126E9F5EDLL);
  int v3 = *(_DWORD *)(a2 + 4);
  int v4 = (char *)*(&off_1F08CDB40
               + ((-19 * ((qword_1E9B2FDF8 - 19 * (v2 + 19)) ^ 0xED)) ^ byte_1B04BD720[byte_1B04C99F0[(-19 * ((qword_1E9B2FDF8 - 19 * (v2 + 19)) ^ 0xED))] ^ 0xC3])
               - 88)
     - 4;
  if (v3 == 1284426099) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1284426106)
  {
    int v5 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X3, X17 }
  }
  return 4294925278;
}

uint64_t sub_1B0269E78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((v4 + v6 + 307) ^ ((2 * (a4 == 0)) | (4 * (a4 == 0))))))();
}

uint64_t sub_1B0269EA0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1745
                                * ((((v2 - 1017698103) & 0x3CA8D7DF ^ (v1 - 533)) & (2
                                                                                   * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ (v0 + ((v2 + 724) | 0x235) - 1663)) == v0)) ^ v2)))();
}

uint64_t sub_1B0269F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * (int)(((*(_DWORD *)(v23 + 72) == a7 + 309) * (a21 & 0xC96C35EB ^ 0x112)) ^ (v21 + a3 + 373))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_1B0269F5C()
{
}

uint64_t sub_1B0269FA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  *(unsigned char *)(a2 + (a3 + 55)) = *(unsigned char *)(a1 + ((v11 + 4294967232) & (v12 + 2)));
  int v15 = 3804331 * ((((2 * (v14 - 168)) | 0x6F9E3C84) - (v14 - 168) + 1211163070) ^ 0x4D51ED14);
  *(void *)(v14 - 160) = a11;
  *(_DWORD *)(v14 - 168) = v15 + v11 + 1342;
  *(_DWORD *)(v14 - 164) = v15 ^ 0x4B7EE199;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (int)(v11 ^ 0x859)))(v14 - 168);
  return a10(v16);
}

uint64_t sub_1B026A038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 628203409 * ((2 * ((v19 - 152) & 0x70BF9FC0) - (v19 - 152) - 1891606465) ^ 0xDC86C0C);
  *(void *)(v19 - 152) = a13;
  *(void *)(v19 - 144) = a11;
  *(void *)(v19 - 112) = v18;
  *(void *)(v19 - 104) = a12;
  *(_DWORD *)(v19 - 136) = v15 - v20 + 371;
  *(_DWORD *)(v19 - 132) = v14 - v20 - 643092311;
  *(void *)(v19 - 128) = a14;
  (*(void (**)(uint64_t))(v17 + 8 * (v15 ^ 0xC9C)))(v19 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17
                                                              + 8
                                                              * (int)(((*(_DWORD *)(v19 - 120) == v16)
                                                                     * ((((v15 - 1409857276) & 0x5408B7B7) - 314144514) ^ ((v15 + 1212414854) | 0xA5028C85))) ^ v15)))(4114897149, 180070146, 129800696);
}

uint64_t sub_1B026A15C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(*(void *)(v2 + 8 * (155 * (v1 ^ 0x7BF) - 468))
                              - 4
                              + 8
                              * (((a1 + 155 * (v1 ^ 0x7BFu) - 1135927872 < 0x7FFFFFFF)
                                * (((155 * (v1 ^ 0x7BF)) ^ 0x5D7) - 1957)) ^ (155 * (v1 ^ 0x7BF)))))();
}

uint64_t sub_1B026A1B8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  HIDWORD(v19) = a1 ^ a7;
  LODWORD(v19) = a1 ^ 0x55555555;
  int v20 = (v19 >> 27)
      + (a8 ^ v11)
      + (((v18 ^ v10) + v11 - (v13 & (2 * (v18 ^ v10)))) ^ v14)
      + (*(_DWORD *)(v8 + 4 * (v16 + a4 + 259 * (v9 ^ 0x470u)) - 2072) ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * ((176 * (a4 + 1 == v17 + 24)) ^ v9)))(v20
                                                                                             - ((2 * v20 - 575416510) & v13) - 1056481525);
}

void sub_1B026A284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unint64_t *a34,unint64_t a35,int a36,int a37,unint64_t a38,char *a39,unint64_t *a40,uint64_t a41,int a42,int a43,unint64_t *a44,uint64_t a45,uint64_t a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,unint64_t *a55,int a56,int a57,int a58,int a59,unint64_t *a60,int32x4_t a61,int32x4_t a62,uint64_t a63)
{
  STACK[0x338] = 0;
  a34 = &STACK[0xDE78D69D6C1C591];
  STACK[0x370] = (unint64_t)&STACK[0x35FF68D50C8F45BB];
  STACK[0x368] = (unint64_t)&STACK[0x39E8CCF6252BC0C4];
  STACK[0x360] = (unint64_t)&STACK[0x35AD11BEDFA3F866];
  STACK[0x358] = (unint64_t)&STACK[0x76DC35A7F08F6FB2];
  a77 = &STACK[0x330904BA72E943D0];
  a76 = &STACK[0x56530F603BC308C8];
  a75 = &STACK[0x330904BA72E94450];
  a74 = &STACK[0x56530F603BC309A8];
  a44 = &STACK[0x5CF1D1600198EE64];
  a60 = &STACK[0xDE78D69D6C1C4C1];
  STACK[0x270] = (unint64_t)&STACK[0x330904BA72E943B8];
  STACK[0x268] = (unint64_t)&STACK[0x56530F603BC308F4];
  a55 = &STACK[0x216229CD9A8FA6DD];
  STACK[0x218] = (unint64_t)&STACK[0x216229CD9A8FA6C5];
  STACK[0x238] = (unint64_t)&STACK[0x102FB98998D780FD];
  STACK[0x230] = (unint64_t)&STACK[0x27EFF0CD9F36B903];
  a40 = &STACK[0x18D17CD12703CAFF];
  int v84 = *(_DWORD *)(v81 + 28);
  int v85 = *(_DWORD *)(v81 + 32);
  STACK[0x208] = v81;
  a35 = ((unint64_t)&STACK[0x498] ^ 0xEBE8DEF97FAEEFB6)
      + 0x561F6FE6CFF3FF4CLL
      + ((2 * (void)&STACK[0x498]) & 0xD7D1BDF2FF5DDF60);
  a38 = ((unint64_t)&STACK[0x5D0] ^ 0xBF7ED3EF7DFBFF7ELL)
      + 0x59E7BD9BAFC53AE8
      + ((2 * (void)&STACK[0x5D0]) & 0x7EFDA7DEFBF7FEF0);
  a48 = 2 * (v85 + v79);
  LODWORD(STACK[0x288]) = ((v85 + v79) ^ 0xCCF05EF9) + 1587003127 + (a48 & 0xF7FD977E ^ 0x661D020C);
  unint64_t v86 = ((unint64_t)&STACK[0x478] ^ 0x9655BDBCEFFDDFB6)
      + 0x6BBEF673D7A26A4ALL
      + ((2 * (void)&STACK[0x478]) & 0x2CAB7B79DFFBBF60);
  a66 = ((unint64_t)&STACK[0x5A0] ^ 0x7FA7FEFED33B55FFLL)
      - 0x1301C4218FFFFLL
      + ((2 * (void)&STACK[0x5A0]) & 0xFF4FFDFDA676ABF0);
  int v87 = 562 * (v82 ^ 0x552);
  *(int32x4_t *)&STACK[0x320] = vdupq_n_s32(0x7FFFFFFEu);
  a59 = (v82 - 2139099761) & 0x7F800DED;
  LODWORD(STACK[0x334]) = (v82 + 643302905) & 0xD9A7F6FE;
  a61 = vdupq_n_s32(0xAE215E86);
  a62 = vdupq_n_s32(0x2E215E97u);
  STACK[0x2A0] = (unint64_t)&STACK[0x43C] % ((v80 - 2145297183) & 0x7FDE9FDD ^ 0xF9uLL) + 16;
  a49 = v85 + v79;
  LODWORD(STACK[0x228]) = (v85 + v79) ^ 0x370E9546;
  a73 = (char *)&a9 - 0x2CDB5D806DA9DF5DLL;
  a79 = (char *)&a9 - 0x2CDB5D806DA9DF36;
  a39 = (char *)&a9 - 0x2CDB5D806DA9E00BLL;
  LODWORD(STACK[0x29C]) = v82 ^ 0xD0E;
  LODWORD(STACK[0x298]) = v82 ^ 0xDD7;
  STACK[0x3F0] = 1759421093
               * ((-2 - ((~v83 | 0x5289147DE7DBE16FLL) + (v83 | 0xAD76EB8218241E90))) ^ 0x7C37D52D54A6513BLL);
  LODWORD(STACK[0x3C4]) = v87;
  LODWORD(STACK[0x3C0]) = v87 ^ 0x3D2;
  uint64_t v88 = 235795823 * (v83 ^ 0x8B0BAFE94AD4959);
  STACK[0x3E8] = v88;
  STACK[0x3E0] = v88 + 3367993564;
  LODWORD(STACK[0x3BC]) = v82 - 197893457;
  LODWORD(STACK[0x3B8]) = v82 + 632555110;
  LODWORD(STACK[0x3B4]) = v82 ^ 0x5C1;
  LODWORD(STACK[0x3B0]) = v82 - 1323836213;
  LODWORD(STACK[0x3AC]) = v82 - 1537364177;
  *(int32x4_t *)&STACK[0x300] = vdupq_n_s32(0xAE0C3E6C);
  *(int32x4_t *)&STACK[0x310] = vdupq_n_s32(0x2B830F9Bu);
  *(int32x4_t *)&STACK[0x2E0] = vdupq_n_s32(0x36113DE4u);
  *(int32x4_t *)&STACK[0x2F0] = vdupq_n_s32(0x57061F36u);
  STACK[0x2D8] = v83 | 0x40C4F3B8249A0ADCLL;
  a70 = v82 + 103690383;
  a65 = 85 * (v82 ^ 0x55B);
  a54 = v82 + 478081546;
  a53 = v82 - 1702595193;
  a52 = v82 - 1041721046;
  a51 = v82 + 2057982218;
  a50 = v82 - 1365785299;
  a58 = v82 ^ 0x45C;
  a57 = v82 + 1032423919;
  a67 = (v82 - 1075947970) & 0x4021A473;
  a68 = (v82 - 1075947970);
  LODWORD(STACK[0x2D4]) = v82 + 1552164447;
  a37 = v84 - v79;
  LODWORD(STACK[0x22C]) = v84 - v79 + 866030275;
  LODWORD(STACK[0x214]) = v82 ^ 0x5C5;
  STACK[0x200] = v86;
  a78 = v86 + 17;
  LODWORD(STACK[0x2B0]) = 1868785827;
  LODWORD(STACK[0x3FC]) = v82;
  a43 = v82 ^ 0xDC9;
  a42 = 2037425540;
  LODWORD(STACK[0x2B4]) = 1050041142;
  LODWORD(STACK[0x2D0]) = 1746339940;
  JUMPOUT(0x1B026A928);
}

void sub_1B026A9A8()
{
  LODWORD(STACK[0x618]) = v0;
  JUMPOUT(0x1B0267A74);
}

uint64_t sub_1B026A9CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                                                + 8
                                                                                                * ((v6 - 311) | (2 * ((v5 & 8) != (((v6 - 1203) | 0x405) ^ 0x445))))))(a1, a2, a3, a4, a5, (a4 - a5), (v6 - 758));
}

uint64_t sub_1B026AA08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46,int a47)
{
  int v51 = STACK[0x2B4];
  if (LODWORD(STACK[0x2B4]) == 1318476601) {
    return (*(uint64_t (**)(void))(v49
  }
                                + 8
                                * ((58
                                  * (((LODWORD(STACK[0x2B0]) - 1868785827 < (LODWORD(STACK[0x3FC]) - 1357)) ^ (3 * LOBYTE(STACK[0x214]))) & 1)) ^ (LODWORD(STACK[0x3FC]) - 78))))();
  if (v51 == 1050041142)
  {
    int v57 = STACK[0x3FC];
    (*(void (**)(void, unint64_t, void))(v49 + 8 * (LODWORD(STACK[0x3FC]) + 819)))(*(unsigned int *)STACK[0x2B8], STACK[0x338], (LODWORD(STACK[0x2D0]) - 1746339940));
    unint64_t v58 = STACK[0x578];
    int v59 = 3804331 * ((((v50 - 192) | 0x1F3E4AD9) - (v50 - 192) + ((v50 - 192) & 0xE0C1B520)) ^ 0xE5A0B98F);
    int v60 = *(_DWORD *)(v48 + 52) - v59 + 964717148;
    *(_DWORD *)(v50 - 184) = (LODWORD(STACK[0x474]) ^ ((v57 ^ 0x2EE) + 1005054508))
                           - v59
                           + ((2 * LODWORD(STACK[0x474])) & 0x77CFE3D4)
                           - 570429792;
    *(_DWORD *)(v50 - 168) = v60;
    *(_DWORD *)(v50 - 164) = v57 - v59 - 1297;
    *(void *)(v50 - 192) = v47;
    *(_DWORD *)(v50 - 160) = ((a47 & 0x7FFFFFFF ^ 0xC1F52239) - 847417416 + (a46 & 0xEDF76EFE ^ 0x6C152A8C)) ^ v59;
    *(void *)(v50 - 152) = &STACK[0x650];
    *(void *)(v50 - 176) = v58;
    uint64_t v61 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v57 ^ 0xDFA)))(v50 - 192);
    int v62 = *(_DWORD *)(v50 - 180);
    LODWORD(STACK[0x5B4]) = v62;
    return (*(uint64_t (**)(uint64_t))(v49 + 8 * ((163 * (v62 == -1373544826)) ^ (v57 - 495))))(v61);
  }
  else
  {
    int v52 = STACK[0x3FC];
    int v53 = 37 * (LODWORD(STACK[0x3FC]) ^ 0x553);
    LODWORD(STACK[0x2B4]) = v51;
    int v54 = v51 - (((v51 << ((37 * (v52 ^ 0x53)) ^ 0x6E)) + 47401364) & 0x5C42BD0C) + 1871381328;
    int v55 = 1374699841 * ((((v50 - 192) | 0xCEF6BA01) - (v50 - 192) + ((v50 - 192) & 0x310945F8)) ^ 0xA302A208);
    *(_DWORD *)(v50 - 176) = v54 ^ v55;
    *(_DWORD *)(v50 - 192) = (v52 - 627) ^ v55;
    *(void *)(v50 - 184) = STACK[0x218];
    uint64_t v56 = (*(uint64_t (**)(uint64_t))(v49 + 8 * (v52 + 841)))(v50 - 192);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49
                                                                + 8
                                                                * (((((68 * (v53 ^ 0x7B) - 1747576947) & 0x6829E3FC)
                                                                   + 918)
                                                                  * (LODWORD(STACK[0x5B4]) == -1373544826)) ^ v53)))(v56, 249, 1373504863);
  }
}

uint64_t sub_1B026ACE4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v0 == 0) ^ v1) & 1) * (((v1 - 1476) | 0x284) ^ 0x2A8)) ^ v1)))();
}

uint64_t sub_1B026AD24@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v4)) = *(unsigned char *)(v3 + (v7 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v7 - 1 != v5) * v6) | v2)))(0);
}

uint64_t sub_1B026AD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((21 * (a8 + 1 != v10 + 16)) | v8)))();
}

uint64_t sub_1B026AE28(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,unsigned int a35,int a36,int a37,int a38,int a39,int a40,unsigned __int8 a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int32x4_t a50,int32x4_t a51,int32x4_t a52,int32x4_t a53)
{
  int v107 = (a4 - 572150427) & 0x5893949E;
  __n128 v108 = (__n128)vdupq_n_s32(0x2E215E87u);
  __n128 v109 = (__n128)vdupq_n_s32(0xAE215E86);
  v110.n128_u64[0] = 0xE5E5E5E5E5E5E5E5;
  v110.n128_u64[1] = 0xE5E5E5E5E5E5E5E5;
  v111.n128_u64[0] = 0xCACACACACACACACALL;
  v111.n128_u64[1] = 0xCACACACACACACACALL;
  __n128 v112 = (__n128)vdupq_n_s32(0x2E215E97u);
  int v53 = *(uint64_t (**)(__n128, __n128, __n128, __n128, __n128))(v104 + 8 * v100);
  uint64_t v54 = a35;
  int v55 = a41 ^ 0xCE;
  if (v55 == 2)
  {
    int8x16x4_t v114 = vld4q_s8(&a25);
    uint8x16_t v80 = (uint8x16_t)veorq_s8(v114.val[0], (int8x16_t)v110);
    uint16x8_t v81 = vmovl_u8(*(uint8x8_t *)v80.i8);
    uint16x8_t v82 = vmovl_high_u8(v80);
    uint8x16_t v83 = (uint8x16_t)veorq_s8(v114.val[1], (int8x16_t)v110);
    _Q22 = vmovl_u8(*(uint8x8_t *)v83.i8);
    _Q21 = vmovl_high_u8(v83);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v88 = (uint8x16_t)veorq_s8(v114.val[2], (int8x16_t)v110);
    uint16x8_t v89 = vmovl_high_u8(v88);
    uint16x8_t v90 = vmovl_u8(*(uint8x8_t *)v88.i8);
    v114.val[0] = veorq_s8(v114.val[3], (int8x16_t)v110);
    v114.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v114.val[0]);
    v114.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[1]);
    v114.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v114.val[1].i8);
    v114.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v114.val[0].i8);
    v114.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v114.val[0]);
    v114.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v114.val[0].i8);
    int32x4_t v91 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v90.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v81.i8), 0x18uLL)), v114.val[0]);
    int32x4_t v92 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v90, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v81), 0x18uLL)), v114.val[3]);
    int32x4_t v93 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v89.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v82.i8), 0x18uLL)), v114.val[1]);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v89, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v82), 0x18uLL)), v114.val[2]);
    v114.val[0] = veorq_s8(vandq_s8((int8x16_t)v91, (int8x16_t)v108), (int8x16_t)(*(_OWORD *)v114.val & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v114.val[3] = veorq_s8(vandq_s8((int8x16_t)v92, (int8x16_t)v108), (int8x16_t)(*(_OWORD *)&v114.val[3] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v114.val[1] = veorq_s8(vandq_s8((int8x16_t)v93, (int8x16_t)v108), (int8x16_t)(*(_OWORD *)&v114.val[1] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    v114.val[2] = veorq_s8(vandq_s8((int8x16_t)v94, (int8x16_t)v108), (int8x16_t)(*(_OWORD *)&v114.val[2] & __PAIR128__(0xFFFFFF01FFFFFF01, 0xFFFFFF01FFFFFF01)));
    a52 = vaddq_s32(vsubq_s32(v93, vaddq_s32((int32x4_t)v114.val[1], (int32x4_t)v114.val[1])), (int32x4_t)v109);
    a53 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v114.val[2], (int32x4_t)v114.val[2])), (int32x4_t)v109);
    a50 = vaddq_s32(vsubq_s32(v91, vaddq_s32((int32x4_t)v114.val[0], (int32x4_t)v114.val[0])), (int32x4_t)v109);
    a51 = vaddq_s32(vsubq_s32(v92, vaddq_s32((int32x4_t)v114.val[3], (int32x4_t)v114.val[3])), (int32x4_t)v109);
    int v95 = (_DWORD *)&a50 + v105 + 177557651;
    int v96 = *(v95 - 8) ^ *(v95 - 3);
    int v97 = v96 + v102 - ((v107 + 1547876620) & (2 * v96));
    int v98 = *(v95 - 16) ^ *(v95 - 14);
    HIDWORD(v99) = v98 ^ 0x2E215E86 ^ v97;
    LODWORD(v99) = v98 ^ ~v97;
    *int v95 = (v99 >> 31) + v102 - ((2 * (v99 >> 31)) & 0x5C42BD0C);
    return (*(uint64_t (**)(uint64_t))(v104
                                              + 8
                                              * (((v106 == 177557588) | (16 * (v106 == 177557588))) ^ v107)))(v54);
  }
  else if (v55 == 1)
  {
    int8x16x4_t v113 = vld4q_s8(&a25);
    uint8x16_t v56 = (uint8x16_t)veorq_s8(v113.val[0], (int8x16_t)v110);
    uint16x8_t v57 = vmovl_u8(*(uint8x8_t *)v56.i8);
    int8x16_t v58 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v57.i8);
    int8x16_t v59 = (int8x16_t)vmovl_high_u16(v57);
    uint16x8_t v60 = vmovl_high_u8(v56);
    int8x16_t v61 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8);
    int8x16_t v62 = (int8x16_t)vmovl_high_u16(v60);
    uint8x16_t v63 = (uint8x16_t)veorq_s8(v113.val[1], (int8x16_t)v110);
    uint16x8_t v64 = vmovl_high_u8(v63);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v63.i8);
    uint8x16_t v66 = (uint8x16_t)veorq_s8(v113.val[2], (int8x16_t)v110);
    _Q26 = (int8x16_t)vmovl_high_u8(v66);
    _Q25 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v66.i8);
    int8x16_t v69 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q25.i8, 0x10uLL);
    __asm { SHLL2           V25.4S, V25.8H, #0x10 }
    int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q26.i8, 0x10uLL);
    __asm { SHLL2           V26.4S, V26.8H, #0x10 }
    v113.val[0] = veorq_s8(v113.val[3], (int8x16_t)v110);
    v113.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v113.val[0]);
    v113.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[1]);
    v113.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v113.val[0].i8);
    v113.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v113.val[0]);
    v113.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v113.val[0].i8), 0x18uLL), v69), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), v58));
    v113.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v113.val[3], 0x18uLL), _Q25), vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v59));
    v113.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v113.val[1].i8), 0x18uLL), v74), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v64.i8, 8uLL), v61));
    v113.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v113.val[2], 0x18uLL), _Q26), vorrq_s8((int8x16_t)vshll_high_n_u16(v64, 8uLL), v62));
    int32x4_t v75 = (int32x4_t)veorq_s8(vandq_s8(v113.val[0], (int8x16_t)v112), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v76 = (int32x4_t)veorq_s8(vandq_s8(v113.val[3], (int8x16_t)v112), (int8x16_t)(*(_OWORD *)&v59 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v77 = (int32x4_t)veorq_s8(vandq_s8(v113.val[1], (int8x16_t)v112), (int8x16_t)(*(_OWORD *)&v61 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    int32x4_t v78 = (int32x4_t)veorq_s8(vandq_s8(v113.val[2], (int8x16_t)v112), (int8x16_t)(*(_OWORD *)&v62 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
    a52 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[1], vaddq_s32(v77, v77)), (int32x4_t)v109);
    a53 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[2], vaddq_s32(v78, v78)), (int32x4_t)v109);
    a50 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[0], vaddq_s32(v75, v75)), (int32x4_t)v109);
    a51 = vaddq_s32(vsubq_s32((int32x4_t)v113.val[3], vaddq_s32(v76, v76)), (int32x4_t)v109);
    return (*(uint64_t (**)(__n128))(v104 + 8 * (int)((a4 + 1715739123) & 0xD03525D7)))(v108);
  }
  else
  {
    a35 = 2 * (a35 ^ v101) + v101 - (v103 & (4 * (a35 ^ v101)));
    a36 = 2 * (a36 ^ v101) + v101 - (v103 & (4 * (a36 ^ v101)));
    a37 = 2 * (a37 ^ v101) + v101 - (v103 & (4 * (a37 ^ v101)));
    a38 = 2 * (a38 ^ v101) + v101 - (v103 & (4 * (a38 ^ v101)));
    return v53(v108, v109, v110, v111, v112);
  }
}

uint64_t sub_1B026AECC@<X0>(uint64_t a1@<X3>, char a2@<W8>)
{
  *(void *)(a1 + v3 + ((166 * (v2 ^ 0x6EDu)) ^ (unint64_t)(v4 + 392))) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((460 * ((a2 & 0x38) == 8)) ^ v2)))();
}

uint64_t sub_1B026AF18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v6
                                                                      + 8
                                                                      * (((((a5 - 1458928467) & 0x56F575B6) - 385)
                                                                        * (v5 > 0xF)) ^ a5)))(a1, a2, a3, 0);
}

uint64_t sub_1B026AF54()
{
  STACK[0x350] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((727 * (v0 == (((LODWORD(STACK[0x3FC]) - 109) | 8) ^ (v3 - 1049)))) ^ (LODWORD(STACK[0x3FC]) - 1282))))();
}

uint64_t sub_1B026AF90(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 32) = a4;
  return result;
}

uint64_t sub_1B026AF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((13 * (v5 + 1 != v6 + 48)) ^ v3)))(a1, a3, v7);
}

uint64_t sub_1B026B084(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v39 = (v32 - 1723263750) | 0x20B2E463;
  *int v37 = v37[623];
  unint64_t v40 = 1759421093 * ((0x816621BACCE92126 - (v36 | 0x816621BACCE92126) + a32) ^ 0x50271F15806B6E8DLL);
  *(void *)(v38 - 120) = (v35 + 1) ^ v40;
  *(_DWORD *)(v38 - 112) = ((v39 - 924210008) ^ 0x33) - v40;
  *(_DWORD *)(v38 - 104) = ((v39 - 924210008) ^ 0x63) - v40;
  *(_DWORD *)(v38 - 128) = -1098935330 - v40 + v39;
  *(_DWORD *)(v38 - 124) = v39 - 924210008 - v40;
  *(_DWORD *)(v38 - 144) = v40;
  *(void *)(v38 - 136) = 3 - v40;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v39 ^ (v33 - 1910))))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v34 + 8 * *(int *)(v38 - 108)))(v41);
}

uint64_t sub_1B026B174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == (v5 ^ 0x2DA) - 1224) * (3 * (v5 ^ 0x682) + 49)) ^ v5)))();
}

uint64_t sub_1B026B244(uint64_t result)
{
  unint64_t v1 = 1224239923
     * ((-2 - ((~result | 0xA9794F52C0023E71) + (result | 0x5686B0AD3FFDC18ELL))) ^ 0x8123FA3B32B1C3A6);
  uint64_t v2 = *(void *)(result + 8);
  uint64_t v3 = *(void *)(result + 16);
  unint64_t v4 = v2 ^ v1;
  BOOL v5 = v3 == v2;
  BOOL v6 = (v3 ^ v1) > v4;
  if ((*(_DWORD *)(result + 28) + v1)) {
    BOOL v5 = v6;
  }
  BOOL v7 = !v5;
  uint64_t v8 = 32;
  if (!v7) {
    uint64_t v8 = 36;
  }
  *(_DWORD *)uint64_t result = (*(_DWORD *)(result + v8) - v1) ^ (*(_DWORD *)(result + 4) - v1);
  return result;
}

void sub_1B026B2F0(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 + 1734042137 * (((a1 ^ 0xA2C4A338 | 0x16634A81) - ((a1 ^ 0xA2C4A338) & 0x16634A81)) ^ 0xE8692AF4);
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v3 = (char *)*(&off_1F08CDB40 + (v1 ^ 0x4AE)) - 4;
  (*(void (**)(char *, uint64_t (*)()))&v3[8 * (v1 ^ 0xC5E)])((char *)*(&off_1F08CDB40 + v1 - 1054) - 4, sub_1B0284D04);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B026B3BC(uint64_t a1)
{
  int v1 = 3804331 * (((a1 ^ 0x9A32C815 | 0x394EC663) - ((a1 ^ 0x9A32C815) & 0x394EC663)) ^ 0x59E2FD20);
  int v2 = *(_DWORD *)a1 - v1;
  uint64_t v3 = *(void *)(a1 + 8);
  unsigned int v4 = (*(_DWORD *)(a1 + 4) ^ v1) - 1266606485;
  unsigned int v5 = v4
     + (*(_DWORD *)(v3 - 0x843828D0CDF33E9) ^ 0xCE2F2D4F)
     - ((2 * (v4 + (*(_DWORD *)(v3 - 0x843828D0CDF33E9) ^ 0xCE2F2D4F))) & 0x9C5E5A9E)
     - 835769009;
  *(_DWORD *)(v3 - 0x843828D0CDF33E9) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (v2 ^ 0x5E5))
                              + 8 * ((856 * ((v5 ^ 0xCE2F2D4F) < v4)) ^ v2)
                              - 4))();
}

uint64_t sub_1B026B490(uint64_t a1, int a2, uint64_t a3, int8x16_t *a4, int a5)
{
  int8x16_t v11 = *(int8x16_t *)(v7 + v6 + (((v5 - 480) | a5) ^ (a2 - 79)));
  *a4 = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v9)), v10);
  return (*(uint64_t (**)(void))(v8 + 8 * v5))();
}

uint64_t sub_1B026B4E8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((477 * (v1 == 1284426096)) ^ 0xF9u)))();
}

uint64_t sub_1B026B524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_1B025F450(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

uint64_t sub_1B026B52C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(_DWORD *)(v30 - 120) = v25
                         + 611
                         + 535753261 * ((2 * ((v30 - 144) & 0x5FD672B8) - (v30 - 144) + 539594051) ^ 0x2ADD836C);
  *(void *)(v30 - 112) = a24;
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = a21;
  *(void *)(v30 - 144) = v28;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA70)))(v30 - 144);
  *(void *)(v30 - 144) = v28;
  *(void *)(v30 - 136) = a24;
  *(void *)(v30 - 128) = a21;
  *(_DWORD *)(v30 - 120) = v25
                         + 611
                         + 535753261 * ((2 * ((v30 - 144) & 0x98E9AE0) - (v30 - 144) + 1987142940) ^ 0x7C856B33);
  *(void *)(v30 - 112) = a24;
  (*(void (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA70)))(v30 - 144);
  int v31 = ((v30 + 250314850 - 2 * ((v30 - 144) & 0xEEB80F2)) ^ 0x2D7158E4) * v29;
  *(void *)(v30 - 136) = a25;
  *(_DWORD *)(v30 - 140) = (v25 - 578) ^ v31;
  *(_DWORD *)(v30 - 128) = (v26 - 584148099) ^ v31;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v25 ^ 0xA8B)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * ((19
                                              * (((v25 - 10) ^ (*(_DWORD *)(v30 - 144) == ((v25 + 1001407662) & 0xC44FBAFA ^ 0xB87C5416))) & 1)) ^ v25)))(v32);
}

void sub_1B026B6E0()
{
}

void sub_1B026B73C()
{
}

uint64_t sub_1B026B748(void *a1, int a2, uint64_t a3, int a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v33 = (*(_DWORD *)(a25 + 4 * (v25 + 1 + v28)) ^ v26)
      + HIDWORD(v29)
      + v32 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (v25 + 1 + v28)) ^ v26);
  *(_DWORD *)(a25 + 4 * (v25 + v28)) = v26 + v31 - 1223 + v33 - (v27 & (2 * v33)) - 169;
  BOOL v35 = v25 + a4 < a5 && v25 + a4 >= a2;
  return (*(uint64_t (**)(void))(v30 + 8 * (((2 * v35) | (8 * v35)) ^ v31)))();
}

void CFUnnB0JdUjJ5CNJMkDS()
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v0 = *(&off_1F08CDB40
       + ((-19 * (dword_1E9B2FD98 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (dword_1E9B2FD98 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x3E])
       - 40);
  int v1 = (char *)off_1F08CDDD8 - 12;
  int v2 = (char *)off_1F08CDCA0 - 4;
  uint64_t v3 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDCA0
                           + (*((unsigned __int8 *)off_1F08CDDD8
                              + (-19 * ((qword_1E9B2FDF8 + *v0) ^ 0xED))
                              - 12) ^ 0xD1u)
                           - 4) ^ (-19 * ((qword_1E9B2FDF8 + *v0) ^ 0xED)))
       - 165);
  unint64_t v4 = (unint64_t)&v6[*v3 - *v0];
  void *v0 = 1469428717 * (v4 + 0x13BC45BED9160A13);
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  v7[0] = 1734042137 * ((-520473560 - (v7 | 0xE0FA3428) + (v7 | 0x1F05CBD7)) ^ 0x43CB089A)
        + 1695027452;
  LOBYTE(v3) = -19 * ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0xED);
  int v5 = (char *)*(&off_1F08CDB40
               + ((-19 * ((qword_1E9B2FDF8 + dword_1E9B2FD98) ^ 0xED)) ^ byte_1B04BD720[byte_1B04C99F0[(-19 * ((qword_1E9B2FDF8 + dword_1E9B2FD98) ^ 0xED))] ^ 0xD1])
               - 103)
     - 4;
  (*(void (**)(_DWORD *))&v5[8
                                      * (v3 ^ v2[v1[v3] ^ 0xC3])
                                      + 15768])(v7);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B026B9EC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((v0 + 675942036) & 0xB5F06F) + 352) ^ 0x67B) * (v1 == v2)) ^ v0)))();
}

void sub_1B026BA2C()
{
}

uint64_t sub_1B026BAC0@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v11 = v8 + 1;
  BOOL v12 = v3 < v7;
  *(_DWORD *)(*v6 + 4 * (v11 + v4)) = *(_DWORD *)(*v6 + 4 * (v2 + v11));
  if (v12 == v11 + v9 < ((v5 + 17) ^ a2)) {
    BOOL v12 = v11 + v9 < v3;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((!v12 * a1) ^ v5)))();
}

uint64_t sub_1B026BAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, char a18)
{
  if (a18 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18
  }
                                                                         + 8
                                                                         * ((1131
                                                                           * ((((a7 + a6) ^ (*(_DWORD *)(v19 - 128) == 1321801015)) & 1) == 0)) ^ (a7 + a6))))(a1, a2, a3, a10);
  if (a18 != 1) {
    JUMPOUT(0x1B026BC24);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v18
                                                     + 8
                                                     * (((8 * (*(_DWORD *)(v19 - 128) != 1321801015)) | (32 * (*(_DWORD *)(v19 - 128) != 1321801015))) ^ (a7 + a6))))(a1, a10);
}

uint64_t sub_1B026BC5C()
{
  STACK[0x338] = 0;
  int v2 = STACK[0x3FC];
  int v3 = *(_DWORD *)(v0 + 56);
  *(_DWORD *)(v0 + 56) = v3 + 1;
  int v4 = *(uint64_t (**)(void))(v1 + 8 * ((1747 * (v3 - 490784372 < 3 * (v2 ^ 0x575u) - 117)) ^ (v2 - 1249)));
  LODWORD(STACK[0x2D0]) = 1746339940;
  return v4();
}

void sub_1B026BCBC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 20) - 235795823 * (((a1 | 0xEB3D4C35) - (a1 | 0x14C2B3CA) + 348304330) ^ 0x7F90056C);
  __asm { BRAA            X9, X17 }
}

void sub_1B026BDF8()
{
}

uint64_t sub_1B026BFA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_DWORD *a34)
{
  uint64_t v39 = (*(uint64_t (**)(uint64_t, void))(v35 + 8 * (v34 | 0x806)))(a19, 0);
  int v40 = a34[4] + 1460018998 - (v36 & (2 * a34[4]));
  a34[1] = a34[6] + 1460018998 - (((v34 ^ 0xB9FBFCFA) - 200261111) & (2 * a34[6]));
  a34[2] = v40;
  int v41 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 + 2030)))(v39);
  a34[3] = v41 + 1460018998 - (v36 & (2 * v41));
  int v42 = (*(uint64_t (**)(void))(v35 + 8 * (v34 ^ 0x81E)))();
  *a34 = v42 + 1460018998 - (v36 & (2 * v42));
  unint64_t v43 = 1759421093
      * ((2 * ((v38 - 144) & 0x4E1191D0B57F5BF0) - (v38 - 144) - 0x4E1191D0B57F5BF4) ^ 0x9F50AF7FF9FD1458);
  int v44 = (((*v37 >> 30) ^ 1) + 1460018998 + 2 * (((*v37 >> 30) ^ 1 | 0x7FFFFFF6) ^ (*v37 >> 30)) + 18) ^ *v37;
  unsigned int v45 = (*a34 ^ 0x57061F36) + ((1664525 * v44 + 1460018998 - ((3329050 * v44) & 0xAE0C3E6C)) ^ v37[1]);
  v37[1] = v45 + 1460018998 - ((2 * v45) & 0xAE0C3E6C);
  *(_DWORD *)(v38 - 144) = 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458);
  *(_DWORD *)(v38 - 112) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861090;
  *(_DWORD *)(v38 - 104) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861072;
  *(void *)(v38 - 136) = 3329372778u - v43;
  *(void *)(v38 - 120) = v43 ^ 0xC6723268;
  *(_DWORD *)(v38 - 128) = -1098935330
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + (v34 ^ 0xB9FBFCFA);
  *(_DWORD *)(v38 - 124) = (v34 ^ 0xB9FBFCFA)
                         - 1759421093 * ((2 * ((v38 - 144) & 0xB57F5BF0) - (v38 - 144) + 1249944588) ^ 0xF9FD1458)
                         + 43861114;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ 0x817)))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v38 - 108)))(v46);
}

void sub_1B026C274()
{
}

uint64_t sub_1B026C27C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  uint64_t v42 = *(void *)(v39 + 24);
  *(int8x16_t *)(v41 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(v39 + 40) - 0x3AC75C5FABFFD319), (int8x16_t)xmmword_1B04C9C10);
  if (a9) {
    BOOL v43 = v42 == 0x1B326768DCF9E3AALL;
  }
  else {
    BOOL v43 = 1;
  }
  int v44 = !v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * (v44 ^ v38)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38);
}

uint64_t sub_1B026C2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v13 = (a11 ^ 0xF47BFFDB) + 2142562560 + ((a11 << ((v12 ^ 0x65) - 68)) & 0xE8F7FFB6) + 149 * (v12 ^ 0x325) - 1949363142 < 0x7FFFFFFE;
  return (*(uint64_t (**)(void))(v11 + 8 * ((2 * v13) | (4 * v13) | v12)))();
}

uint64_t sub_1B026C370()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((15 * (v1 ^ 0x33F) + ((v1 - 417) ^ 0xFFFFFB54)) * (v0 == 0x49562106)) | v1)))();
}

uint64_t sub_1B026C3D0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((77
                                * ((a1 ^ (v2 + 214) ^ (v4 - 1142) ^ (((v4 - 1142) ^ (v2 + 214)) - 237807668)) == v1 - 1223307022)) ^ (v4 - 1142))))();
}

uint64_t sub_1B026C428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * ((484 * (((((2 * (v17 ^ 0x711)) ^ 0xB3713747) + v19) & 0xFFFFFFFC) - a17 != -1284426096)) ^ v17 ^ 0x711)))();
}

uint64_t sub_1B026C478(uint64_t a1)
{
  uint64_t v18 = *MEMORY[0x1E4F143B8];
  int v2 = 1755732067 * (a1 ^ 0xDEC6BDDB);
  int v3 = *(_DWORD *)(a1 + 20) - v2;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 32);
  int v8 = -664392069 * (*(_DWORD *)(a1 + 16) - v2) + 788557571;
  unsigned int v9 = 235795823 * (((&v11 | 0x91AE193F) + (~&v11 | 0x6E51E6C0)) ^ 0x5035067);
  int v16 = v9 ^ (v3 + 2024875085);
  uint64_t v17 = v5;
  unsigned int v12 = v9 + (v8 ^ 0x5FFA77F1) + ((2 * v8) & 0xBFF4EFE2) - 121638960;
  uint64_t v13 = v6;
  uint64_t v14 = v4;
  uint64_t v11 = v7;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08CDB40 + (int)(v3 ^ 0x874EE31D))
                                                + 8 * (int)(v3 ^ 0x874EEB29)
                                                - 4))(&v11);
  *(_DWORD *)(a1 + 40) = v15;
  return result;
}

uint64_t sub_1B026C5D4(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  unsigned int v24 = v16 - 16;
  uint64_t v25 = v24 & 0xF;
  v27.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v27.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v20, a5).u64[0];
  int8x16_t v28 = vrev64q_s8(vmulq_s8(v27, a6));
  *(int8x16_t *)(a12 + v24) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 + v25 - 15), *(int8x16_t *)(a12 + v24)), veorq_s8(*(int8x16_t *)(v25 + v15 - 13), *(int8x16_t *)(v25 + v14 - 11))), vextq_s8(v28, v28, 8uLL));
  return (*(uint64_t (**)(void))(v19 + 8 * (((v17 == 16) * v18) ^ a11)))();
}

void ysE4jN2LzGiDiW(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B026C674()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != ((v1 + 1628817779) & 0x9EEA3539 ^ (v2 - 240))) * (v1 - 602)) ^ v1)))();
}

uint64_t sub_1B026C6C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  return (*(uint64_t (**)(uint64_t))(v7
                                            + 8
                                            * ((1329 * (v5 == ((a5 + (v6 ^ 0xAC) + 77) ^ 0xF3))) ^ v6)))(4294925278);
}

uint64_t sub_1B026C700()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(unsigned char *)(v0 + (v1 - 1284426097)) == 101)
                                * (((v2 - 615) | 0x140) - 959)) ^ v2)))();
}

uint64_t sub_1B026C740()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(void *)(v0 - 0x7761D79CB8DF4D13) == 0) * ((v2 + 114) ^ v2 ^ 0x432 ^ 0x4A4)) | v2)))();
}

uint64_t sub_1B026C79C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  int v17 = v15 + a2;
  if ((v15 + a2) <= 0x40) {
    int v17 = 64;
  }
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((507 * (a1 - v13 - v14 + v17 + 1258 < ((a13 + 1819572371) & 0x938B87F3) - 1907)) ^ a13)))();
}

uint64_t sub_1B026C824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v16 - 120) = (v14 + 309) ^ (1734042137 * ((v16 - 136) ^ 0x5CCEC34D));
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v14 + 976)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((463
                                              * (a10 < (int)((((v14 - 1042) | 0x410) ^ 0xFFFFF90B) + ((v14 - 461) | 0xA1)))) ^ v14)))(v17);
}

uint64_t sub_1B026C8C4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (v1 | (8 * (v0 == (v1 ^ 0x2A1 ^ (v1 + 2012962495) & 0x88049FDE))))))();
}

uint64_t sub_1B026C91C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a2 - 3 + (v5 + v3 + a1 - 484)) = *(_DWORD *)(v2 - 3 + (v5 + v3 + a1 - 484));
  return (*(uint64_t (**)(void))(v6 + 8 * ((830 * (v4 == 4)) ^ (a1 - 477))))();
}

uint64_t sub_1B026C968@<X0>(int a1@<W8>)
{
  unsigned int v5 = (v1 + 2047009748) & 0x85FD1FBF;
  *(_DWORD *)(*(void *)(v3 + 96) + 1428) = 604952974;
  int v6 = a1 + 3;
  int v7 = 628203409 * (((v4 - 120) & 0x866D5C19 | ~((v4 - 120) | 0x866D5C19)) ^ 0xFB1AAFD5);
  *(_DWORD *)(v4 - 120) = v7 + v5 + 1172344232;
  *(_DWORD *)(v4 - 112) = v7 + v6 - 1873283900;
  *(void *)(v4 - 104) = v4 + 0x843828D0CDF3351;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (int)(v5 + 952)))(v4 - 120);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2
                                                     + 8
                                                     * (int)((117
                                                            * (*(_DWORD *)v3
                                                             + 194279200
                                                             + ((2 * (*(_DWORD *)(v4 - 152) & 0x3F)) ^ 0x1E)
                                                             + (*(_DWORD *)(v4 - 152) & 0x3F ^ 0xBF5D1E70) < ((v5 - 1106) | 0x100) - 417)) ^ v5)))(v8, 3941953673);
}

uint64_t sub_1B026C99C@<X0>(int a1@<W8>)
{
  int v6 = 601 * (v3 ^ 0x5B8);
  *(_DWORD *)(*(void *)(v5 - 0x67843F9A1244BAC3) + 4 * ((v6 ^ 0x6A93750F) + a1 + v1)) = *(_DWORD *)(*(void *)(v5 - 0x67843F9A1244BAC3) + 4 * (v1 + v2));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((559
                                                       * ((v6 ^ 0x1B1 ^ (v2 + 770)) + v1 < 0x7FFFFFFF)) ^ v6)))(433, 0x7FFFFFFFLL);
}

uint64_t sub_1B026CA1C()
{
  BOOL v4 = v0 == ((v1 + 990) ^ (v3 - 688));
  return (*(uint64_t (**)(void))(v2 + 8 * ((v4 | (4 * v4)) ^ v1)))();
}

uint64_t sub_1B026CA48@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  unsigned int v50 = (v47 ^ 0x366 ^ (a2 + 15)) + v48;
  int v51 = *(_DWORD *)(&a34 + (v50 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v50) = v51 ^ 0x8F;
  unsigned int v52 = v48 + a2;
  *(unsigned char *)(a1 + v52) = (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + v52 + 1) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + v52 + 2) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  BOOL v53 = v48 - 936006667 < (a46 - 1894219465);
  if (v48 - 936006667 < v46 != a46 - 1894219465 < v46) {
    BOOL v53 = a46 - 1894219465 < v46;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((1429 * v53) ^ v47)))();
}

void sub_1B026CB28()
{
}

void sub_1B026CB34(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((-969832657 - (a1 | 0xC631872F) + (a1 | 0x39CE78D0)) ^ 0xAD633189);
  uint64_t v2 = (char *)*(&off_1F08CDB40 + v1 - 184) - 4;
  uint64_t v3 = *(void *)(a1 + 8);
  (*(void (**)(char *, uint64_t (*)()))&v2[8 * (v1 ^ 0x938)])((char *)*(&off_1F08CDB40 + (v1 ^ 0x148)) - 4, sub_1B0284D04);
  __asm { BRAA            X9, X17 }
}

void sub_1B026CC04()
{
}

uint64_t sub_1B026CC28()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((STACK[0x408] == 0x399DE98F08C0F0A4)
                                              * ((v0 - 934) ^ 0x3BD ^ ((v0 - 1359) | 0x218))) ^ (v0 - 139))))(v2);
}

void sub_1B026CC9C()
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  int v0 = (uint64_t *)*(&off_1F08CDB40
                  + (*((unsigned char *)off_1F08CDFB8
                                      + (*((unsigned __int8 *)off_1F08CDD90
                                         + (-19 * ((qword_1E9B2FDF8 - dword_1E9B30958) ^ 0xED))
                                         - 4) ^ 0xA3u)) ^ (-19 * ((qword_1E9B2FDF8 - dword_1E9B30958) ^ 0xED)))
                  - 20);
  uint64_t v1 = (char *)off_1F08CDDD8 - 12;
  uint64_t v2 = (char *)off_1F08CDCA0 - 4;
  uint64_t v3 = (unint64_t *)*(&off_1F08CDB40
                           + (*((unsigned char *)off_1F08CDCA0
                                               + (*((unsigned __int8 *)off_1F08CDDD8
                                                  + (-19 * ((qword_1E9B2FDF8 - *v0) ^ 0xED))
                                                  - 12) ^ 0xD1u)
                                               - 4) ^ (-19 * ((qword_1E9B2FDF8 - *v0) ^ 0xED)))
                           - 165);
  unint64_t v4 = (unint64_t)&v11[*v0 + *v3];
  uint64_t v5 = 1469428717 * v4 + 0x13BC45BED9160A13;
  unint64_t v6 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  uint64_t *v0 = v5;
  unint64_t *v3 = v6;
  LOBYTE(v6) = -19 * ((v6 - *(_DWORD *)v0) ^ 0xED);
  int v7 = (unsigned __int8 *)off_1F08CDCC0;
  uint64_t v8 = (char *)off_1F08CDDB8 - 4;
  *(_DWORD *)*(&off_1F08CDB40
             + (*((unsigned char *)off_1F08CDDB8
                                 + (*((unsigned __int8 *)off_1F08CDCC0 + v6) ^ 0xD1u)
                                 - 4) ^ v6)
             - 120) = -1373544826;
  unsigned int v9 = (char *)*(&off_1F08CDB40
               + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B30958) ^ 0xED)) ^ byte_1B04BD820[byte_1B04C9AF0[(-19 * ((qword_1E9B2FDF8 - dword_1E9B30958) ^ 0xED))] ^ 0x3C])
               - 16)
     - 4;
  uint64_t v10 = (*(uint64_t (**)(uint64_t, uint64_t))&v9[8
                                                       * ((-19
                                                                          * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED)) ^ v8[v7[(-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED))] ^ 0xD1])
                                                       + 15256])(512, 1509315540);
  *(void *)*(&off_1F08CDB40
             + ((-19 * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v3)) ^ v2[v1[(-19 * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v3))] ^ 0xD1])
             - 86) = v10;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B026CEE4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v51 = *((_DWORD *)&a33 + ((v49 + v46) >> ((v47 + 0x80) ^ (a4 - 2))) + 18);
  *(unsigned char *)(a7 + (v49 + v46 + 1)) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46)) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46 + 2)) = (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a7 + (v49 + v46 + 3)) = v51 ^ 0x8F;
  BOOL v52 = v49 + 1829489089 < (a45 + 2042502612);
  if (v49 + 1829489089 < v45 != a45 + 2042502612 < v45) {
    BOOL v52 = a45 + 2042502612 < v45;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((v52 * v48) ^ v47)))();
}

uint64_t sub_1B026CFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8 * (int)(((v12 - 562 + ((v12 + 1085387858) & 0xBF4E4F6D) + 945) * (a12 > a11)) ^ v12)))();
}

void sub_1B026D040()
{
}

uint64_t sub_1B026D0F4(uint64_t a1, int a2)
{
  *(void *)(v6 + v4 - 0x843828D62D41556 + ((v2 + 1352623773) & v5)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v3 & 0xFFFFFFFFFFFFFFF8) == 8) * a2) | v2)))();
}

uint64_t sub_1B026D150@<X0>(int a1@<W5>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v12 = 4 * (v10 + v7);
  unsigned int v13 = v3 + 1110271258 + ((v5 + 808) ^ 0xE4DE520B ^ *(_DWORD *)(*(void *)(a3 - 0x67843F9A1244BAC3) + v12));
  *(_DWORD *)(*(void *)(a2 - 0x67843F9A1244BAC3) + v12) = v13 + v8 - (v11 & (2 * v13));
  int v14 = v4 + v10 + 487;
  BOOL v16 = v14 <= a1 + 1290 && v14 >= v6;
  return (*(uint64_t (**)(void))(v9 + 8 * ((28 * v16) ^ v5)))();
}

uint64_t sub_1B026D22C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((((v1 + 2082308602) & 0x83E27B6F) - 676) * (v0 == 64)) ^ v1)))();
}

uint64_t sub_1B026D26C@<X0>(_DWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, int a10)
{
  *a1 = 0;
  int v14 = a2 ^ v10;
  int v15 = v11 + a2 + 1552;
  a9 = a2
     + 1734042137 * ((2 * (&a9 & 0x45E37E58) - &a9 + 974946727) ^ 0x66D242EA)
     - 910888342;
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v13 + 8 * (v11 + a2 + 2179)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((122 * (((v14 ^ (a10 == v12)) & 1) == 0)) ^ v15)))(v16);
}

void sub_1B026D314()
{
}

uint64_t sub_1B026D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((v13 + 775 + (v13 ^ 0x77C) - 2139) * ((a12 - 152591868) < 0x7FFFFFFF)) ^ v13)))();
}

uint64_t sub_1B026D390@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2003 * (*(_DWORD *)(a1 + 48 * v2 + 36) + 1967413501 < (a2 ^ 0x80000756 ^ (a2 + 307)))) ^ a2)))();
}

uint64_t sub_1B026D3F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t))(v5
                                                                      + 8
                                                                      * ((35
                                                                        * (((v7 + 17) ^ (a5 < v6 + ((v7 - 60323294) & 0x2CF8FDC9) - 1600)) & 1)) ^ v7)))((v7 - 645665263) & 0x3C16F3, a2, a3, a4);
}

uint64_t sub_1B026D454()
{
  LODWORD(STACK[0x5B4]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((STACK[0x338] == 0) ^ (((v0 - 95) | 0x40) + 45)) & 1)
                                     * (((((v0 + 1185) | 0x40) + 1103635055) & 0xBE37DBED) - 725)) ^ (((v0 + 1185) | 0x40) - 1235))))();
}

uint64_t sub_1B026D464@<X0>(int a1@<W8>)
{
  int v7 = (a1 << (((v5 + 53) | v6) ^ 0xE8)) ^ v4;
  BOOL v8 = ((v7 + v2 - (v4 & (2 * v7))) ^ v2) <= v1;
  return (*(uint64_t (**)(void))(v3 + 8 * (((2 * v8) | (4 * v8)) ^ v5)))();
}

uint64_t sub_1B026D4AC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = v10 + a8 + 1694769959;
  unsigned int v12 = v8 + 2108472054 + 955 * (((a2 - 84) | 0x51) ^ 0x655);
  BOOL v13 = v11 < 0xA3E6BC85;
  BOOL v14 = v11 > v12;
  if (v13 != v12 < 0xA3E6BC85) {
    BOOL v14 = v13;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * (((8 * !v14) | (32 * !v14)) ^ a2)))();
}

uint64_t sub_1B026D538@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  BOOL v9 = a2 + 820605999 < (a7 + 345936113);
  if (a7 + 345936113 < (v7 ^ 0x440u) + 1236073188 != (a2 + 820605999) < 0x49ACFB12) {
    BOOL v9 = a7 + 345936113 < (v7 ^ 0x440u) + 1236073188;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((29 * !v9) ^ v7)))(a1, 3514796083);
}

uint64_t sub_1B026D5B8@<X0>(char a1@<W1>, uint64_t a2@<X8>)
{
  int v5 = v3 + 795;
  char v6 = (unsigned char *)STACK[0x5F0];
  unsigned int v7 = *(_DWORD *)(a2 - 0x843828D0CDF33E5);
  unsigned char *v6 = v7 ^ 0x8F;
  int v8 = (v7 >> (((v5 + 122) | 0x40) - 72)) ^ 0x73;
  v6[1] = v8 - ((2 * v8) & 0xCA) - 27;
  _DWORD v6[2] = (BYTE2(v7) ^ 0x2D) - ((2 * (BYTE2(v7) ^ 0x2D)) & 0xCA) - 27;
  v6[3] = (a1 ^ HIBYTE(v7)) - ((2 * (a1 ^ HIBYTE(v7))) & 0xCA) - 27;
  unsigned int v9 = *v2 + 716923627;
  BOOL v10 = v9 < 0x79847822;
  BOOL v11 = v9 > 0x79847826;
  if (v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((3252 * v11) ^ v5)))();
}

uint64_t sub_1B026D6C8@<X0>(int a1@<W8>)
{
  int v2 = (int *)STACK[0x530];
  int v3 = (unint64_t *)STACK[0x5C0];
  STACK[0x348] = STACK[0x2C8];
  int v4 = *v2;
  STACK[0x3A0] = *v3;
  STACK[0x390] = *(void *)(v1 + 8 * a1);
  STACK[0x468] = STACK[0x340];
  LODWORD(STACK[0x4CC]) = 845113428;
  LODWORD(STACK[0x42C]) = 1284426096;
  STACK[0x570] = 0;
  LODWORD(STACK[0x528]) = -1800160278;
  *(_DWORD *)STACK[0x3C8] = 1321678224;
  LODWORD(STACK[0x388]) = -482234224;
  LODWORD(STACK[0x3D0]) = 1771295399;
  LODWORD(STACK[0x3D8]) = -904602861;
  LODWORD(STACK[0x378]) = ((((a1 - 1) | 0xB0) + 189) ^ 0xD0681915) + 368151641;
  LODWORD(STACK[0x380]) = 1606878714;
  int v5 = *(uint64_t (**)(void))(v1 + 8576);
  LODWORD(STACK[0x398]) = v4;
  return v5();
}

uint64_t sub_1B026D6DC(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1396 * (*(_DWORD *)(*v4 + 4 * a2) == v3 + v5 + 1188 - 1427)) ^ v5)))();
}

void sub_1B026D710()
{
}

uint64_t sub_1B026D71C(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8)
{
  HIDWORD(v19) = a1 ^ a7;
  LODWORD(v19) = a1 ^ 0x55555555;
  int v20 = (v19 >> 27)
      + (v9 ^ 0x123 ^ (v11 - 763) ^ a4)
      + (((v18 ^ v10) + v11 - (v13 & (2 * (v18 ^ v10)))) ^ v14)
      + (*(_DWORD *)(v8 + 4 * (a8 + v16)) ^ v12);
  return (*(uint64_t (**)(void))(v15 + 8 * ((1423 * (a8 + 1 == v17 + 64)) ^ v9)))(v20
                                                                                              - 2
                                                                                              * ((v20 + 1247986134) & (v11 + 1) ^ v20 & 1u) + 479212864);
}

void sub_1B026D7E8()
{
}

uint64_t sub_1B026D7F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, uint64_t a7, unsigned int a8)
{
  int v18 = (v13 ^ a4) * a5;
  unint64_t v19 = (*(_DWORD *)(v9 + 4 * v16) ^ v10) + a1 + ((v18 + a6) & a8 ^ 0x976E8F3544E44F4CLL);
  *(_DWORD *)(v9 + 4 * v16) = v19 + v10 - ((2 * v19) & 0x364351F4);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v11 ^ HIDWORD(v19)) + (v12 & (v19 >> 31)) + v14 == v17) * v15) ^ v18)))();
}

uint64_t sub_1B026D800@<X0>(int a1@<W0>, int a2@<W1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((34 * ((v3 + 1181) ^ a1)) ^ (((v3 + 1181) ^ a2) + 1560)) * (a3 == 19)) ^ (v3 + 1181))))();
}

uint64_t sub_1B026D840(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((42
                                                                                           * (v4 == v3 - 1469 + ((v3 - 1269049306) & 0x4BA427F7) - 1478)) ^ v3)))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_1B026D8AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v27 - 120) = (v24 + 495) ^ ((((v26 | (v27 - 120)) - ((v27 - 120) & v26)) ^ 0x14D554D2) * v25);
  *(void *)(v27 - 112) = v21;
  *(void *)(v27 - 104) = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1524)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((118
                                              * (((v24 + 18) ^ (*(_DWORD *)(v27 - 116) > ((v24 - 946197058) & 0x3865D39E ^ (v22 + 640)))) & 1)) ^ v24)))(v28);
}

uint64_t sub_1B026D954@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1953 * (a9 == (((v16 - 944) | 0x226) ^ 0x266))) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, *(void *)(a1 + 16), a11, a12, a13, a14, a15, a16);
}

void sub_1B026D9A8()
{
  if (v0 == 294122701) {
    int v1 = -1373544826;
  }
  else {
    int v1 = 1373504862;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

uint64_t sub_1B026DA0C(unint64_t a1)
{
  STACK[0x468] = v3 - 176;
  STACK[0x568] = a1;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v1 | 0x436) + 493894077) & 0xE28FC5F5 ^ 0x58C) * (v2 > a1)) ^ (v1 | 0x436))))();
}

uint64_t sub_1B026DAC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = v26 - 539;
  *(void *)(v29 - 112) = a23;
  *(void *)(v29 - 104) = a25;
  *(_DWORD *)(v29 - 120) = (v30 + 685) ^ (((~((v29 - 120) | 0xA4080441) + ((v29 - 120) & 0xA4080441)) ^ 0x3603E3B7) * v28);
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v30 + 1714)))(v29 - 120);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((*(_DWORD *)(v29 - 116) > (((v30 - 381) | 0x118) ^ v25))
                                              * ((v30 + 190) ^ 0x2C6)) ^ v30)))(v31);
}

uint64_t sub_1B026DACC()
{
  uint64_t v4 = v0;
  unint64_t v5 = v2 + ((v1 + 695) ^ 0xA33u) + v0 - 564;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((29 * (((v1 + 695) ^ 0x55F4D176) - v4 + v5 > 7)) ^ (v1 + 695))))();
}

uint64_t sub_1B026DB48@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v1 - 533426946) & 0x1FCB75D4 ^ 0xFFFFF985) + ((v1 + 399) | 0x10))
                                     * (*(_DWORD *)(a1 + 1424) == 568327263)) ^ v1)))();
}

uint64_t sub_1B026DB9C@<X0>(uint64_t a1@<X8>)
{
  int v5 = v3 + 1646;
  unsigned int v9 = (v3 + 930) ^ (1734042137
                   * (((&v7 | 0x8A5BE56D) - &v7 + (&v7 & 0x75A41A90)) ^ 0xD6952620));
  uint64_t v7 = a1;
  uint64_t v8 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(v1 + 8 * (v3 ^ 0x64D)))(&v7);
  _DWORD *v4 = (v5 ^ 0xA394326E) - *v4;
  return result;
}

uint64_t sub_1B026DC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  uint64_t v52 = *(void *)(a1 + 24);
  *(int8x16_t *)(v50 - 112) = veorq_s8(*(int8x16_t *)(*(void *)(a1 + 16) - 0x3F0B617C4F927BF5), (int8x16_t)xmmword_1B04C9C30);
  if (v51) {
    BOOL v53 = v52 == 0x1B326768DCF9E3AALL;
  }
  else {
    BOOL v53 = 1;
  }
  int v54 = !v53;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((212 * v54) ^ a5)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1B026DC94(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v4 == (((a2 + v3 - 95) ^ a2) + 23)) * (((a2 + v3 + 417) & a3) + 222)) ^ v3)))();
}

void sub_1B026DCC8()
{
}

uint64_t sub_1B026DCE8(uint64_t a1, int a2, unsigned __int8 a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((((unint64_t)(v3 - a1) < 0x20) ^ a3) & 1) * ((a2 + 632) ^ 0x77F)) ^ a2)))();
}

uint64_t sub_1B026DD20@<X0>(int a1@<W8>)
{
  *v1 ^= v3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((a1 + 1965672939) & 0x8AD637D6 ^ 0x3F2) * (v2 != 62153878)) ^ (a1 + 1965672939) & 0x8AD637D6)))();
}

uint64_t sub_1B026DD54@<X0>(uint64_t a1@<X8>)
{
  int v5 = v2 + 1815;
  unsigned int v6 = (v1 - 303564317) & 0x8C2BBFFF;
  *(_DWORD *)(*(void *)(v3 + 96) + 528) = 950047466;
  *(_DWORD *)(*(void *)(v3 + 96) + 532) = 1372200252;
  *(void *)(*(void *)(v3 + 96) + 536) = *(void *)(v3 + 96) + 544;
  uint64_t v7 = *(void *)(v3 + 96) + 0x67843F9A1244BCDBLL;
  unsigned int v8 = 1734042137 * (((&v11 | 0x9DCB4523) - (&v11 & 0x9DCB4523)) ^ 0xC105866E);
  uint64_t v13 = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  int v15 = v5 - v8 - 929929536;
  uint64_t v11 = v7;
  int v12 = v1 - v8 + 310;
  (*(void (**)(uint64_t *))(a1 + 8 * (v1 ^ 0xD54u)))(&v11);
  int v9 = v14;
  *(void *)(*(void *)(v3 + 96) + 512) = *(void *)(v4 + 8) + (*(_DWORD *)(v4 + 4) - v5);
  return v6 + v9 + 708886480;
}

uint64_t sub_1B026DD5C@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v15 + 8 * (v14 ^ (126 * (a9 == 0)))))((a9 == 0) << 7, a2, a3, a4, a5, a6, a7, a8, a10, *a1, a12, a13, a14);
}

void sub_1B026DDC4()
{
}

uint64_t sub_1B026DDCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  BOOL v13 = v10 < v8;
  int v14 = v7 + 1;
  *(unsigned char *)(*v12 + (v14 + a6)) = -27;
  if (v13 == v14 + v6 < v8) {
    BOOL v13 = v14 + v6 < v10;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * ((8 * v9) ^ 0x81E)) ^ v9)))();
}

uint64_t sub_1B026DE30()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((((((v2 - 1372200252) * (v1 - 1372200252) < 0) ^ (v3 - 1)) & 1)
                                * ((53 * (v3 ^ 0x3BE)) ^ 0x61B)) ^ v3)))();
}

uint64_t sub_1B026DE88@<X0>(int a1@<W3>, int a2@<W8>, __n128 a3@<Q0>)
{
  *(__n128 *)(v5 + v4) = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (v3 ^ (8 * (a1 & ~(a2 ^ (v4 == 1500)))))))();
}

uint64_t sub_1B026DEB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a13;
  *(_DWORD *)(v18 - 136) = (v16 - 623) ^ (((((v18 - 136) | 0x74A96C87) - ((v18 - 136) & 0x74A96C87)) ^ 0x195D748E) * v13);
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xEB6)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((398
                                              * ((((v16 ^ 0x69) + 39) ^ (*(_DWORD *)(v18 - 132) > v14)) & 1)) ^ v16)))(v19);
}

uint64_t sub_1B026DF58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1171 * (v4 + 1 == v6 + 64)) ^ a4)))();
}

uint64_t sub_1B026E018@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, int a6, int a7)
{
  unsigned int v13 = ((((2 * &a3) | 0x81A77FC4) - &a3 - 1087619042) ^ 0x72C5BFA2) * a1;
  a5 = (((2 * (v12 - 1938056290)) & 0xDBD67FF6) + ((v11 - 303349912) ^ (v12 - 1938056290)) + 996074432) ^ v13;
  a6 = v13 + v11 + 368;
  a3 = v9;
  a4 = v8;
  a7 = v7 - v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t *))(v10 + 8 * (v11 + 1956)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((1841 * (*(_DWORD *)(v9 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v11)))(v14);
}

uint64_t sub_1B026E0EC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 ^ (979
                                     * ((v1 - 568327263 + ~(v0 + LODWORD(STACK[0x390]) - 604952942)) > 2)))))();
}

uint64_t sub_1B026E18C()
{
  return ((uint64_t (*)(void))STACK[0x588])();
}

uint64_t sub_1B026E1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((71 * (v7 + 1 != v8 + 32)) ^ a6)))();
}

uint64_t sub_1B026E2A4@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((2913 * (a2 == ((a1 + v2) ^ (v4 - 283) ^ (a1 + v2 - 165)))) ^ (a1 + v2 + 450))))();
}

void sub_1B026E2E4()
{
}

uint64_t sub_1B026E328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((975 * ((a8 + 1 + v9) < 0x30)) ^ v8)))();
}

uint64_t sub_1B026E3FC@<X0>(int a1@<W2>, int a2@<W8>)
{
  uint64_t v11 = *(void *)(v9 - 0x67843F9A1244BAC3);
  unsigned int v12 = (*(_DWORD *)(v11 + 4 * (v10 - 1)) ^ v5) >> v3;
  uint64_t result = (v2 - 130);
  int v14 = v12 + v5 - (v6 & (2 * v12));
  uint64_t v15 = 4 * (int)result;
  *(_DWORD *)(v11 + v15) = v14;
  int v16 = v2 + a2 + v4 - (*(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + v15) == v5);
  if (*v7 + ((a1 + 1612670177) & 0x9FE09AEB ^ v8) >= 0x7FFFFFFF) {
    int v16 = -1550566792 - v16;
  }
  int *v7 = v16;
  return result;
}

uint64_t sub_1B026E4D0()
{
  int v4 = v0 - 20 + v2 + 2031870518;
  BOOL v6 = v4 > ((2 * v0) ^ 0x3C3D64B8) || v4 < v3 - 1136826547;
  return (*(uint64_t (**)(void))(v1 + 8 * ((532 * v6) ^ v0)))();
}

uint64_t sub_1B026E528()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((621 * ((((v2 + 150) ^ 0x586) & v1) == v2 - 1288)) ^ v2)))();
}

void sub_1B026E564()
{
}

uint64_t sub_1B026E66C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + a1 + ((v1 - 602) | 0x260u) - 1770 < 0x7FFFFF7D)
                                * ((v1 - 899982949) & 0x35A4A5ED ^ 0x5DE)) ^ v1)))();
}

uint64_t sub_1B026E6CC@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((772 * (v3 + v4 - 165 + a2 + ((4 * a1) ^ 0x258) + ((a1 - 1903052482) & 0x716E46B3) >= 0)) ^ a1)))();
}

void sub_1B026E720()
{
}

void sub_1B026EB80()
{
}

void sub_1B026EC48()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1B026EC58);
}

uint64_t sub_1B026ED08@<X0>(uint64_t a1@<X1>, unint64_t a2@<X2>, int a3@<W3>, int a4@<W7>, unint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v36 = v32 + a3;
  int v37 = v32 + 1;
  uint64_t v38 = 4 * (v37 + a3);
  unint64_t v39 = (*(_DWORD *)(a22 + v38) ^ v23) + (a1 ^ HIDWORD(v31));
  unint64_t v40 = (a5 >> (((v22 + v25) & v26) + 127))
      + v29 * (unint64_t)(*(_DWORD *)(*v33 + v38) ^ v23)
      + ((v39 + v27 - (a4 & (2 * v39))) ^ a2);
  *(_DWORD *)(a22 + 4 * v36) = v40 + v23 - (v24 & (2 * v40));
  BOOL v42 = v37 + v28 <= v35 && v37 + v28 >= v34;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v42 | (32 * v42)) ^ v22)))();
}

uint64_t sub_1B026ED98()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v1 + 1255504445) & 0xB52A87D3 ^ 0x537)
                                     * ((v0 - 1102148614) < 0xFFFFFFFE)) ^ v1)))();
}

uint64_t sub_1B026EDE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(*v11 + (v12 + a6)) = *(unsigned char *)(*v11 + (v9 + v13));
  return (*(uint64_t (**)(void))(v10 + 8 * ((114 * ((v7 ^ (v6 == 226063316)) & 1)) ^ v8)))();
}

uint64_t sub_1B026EE40@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v11 = v8 > 0x7B04751C;
  *(unsigned char *)(a2 + (a1 - 471039382)) = *(unsigned char *)(v2 + (a1 - 471039382)) ^ *(unsigned char *)(v4 + (((_BYTE)a1 + 106) & 0xF)) ^ *(unsigned char *)(v5 + (((_BYTE)a1 + 106) & 0xF)) ^ *(unsigned char *)(v3 + ((a1 - 471039382) & 0xFLL)) ^ (97 * ((a1 + 106) & 0xF)) ^ 0xE5;
  unsigned int v12 = a1 + 1760038222;
  uint64_t v13 = (a1 + 1);
  int v14 = v11 ^ (v12 < ((v7 + 2078986540) & 0x84152EBE) + v6);
  BOOL v15 = v12 < v9;
  if (!v14) {
    BOOL v11 = v15;
  }
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((243 * v11) ^ v7)))(v13);
}

uint64_t sub_1B026EEF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v12
                         + 1759421093 * ((~((v16 - 136) | 0x7D6057C6) + ((v16 - 136) & 0x7D6057C6)) ^ 0x31E2186D)
                         + 1431;
  *(void *)(v16 - 136) = v15;
  *(void *)(v16 - 128) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 ^ 0xA10)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * ((247 * (((v14 == 789874348) ^ (v12 + 66)) & 1)) ^ v12)))(v17);
}

uint64_t sub_1B026EFA8()
{
  int v2 = STACK[0x4F4];
  unint64_t v3 = STACK[0x4B0];
  STACK[0x5D0] = (LODWORD(STACK[0x4F4]) - 1284426096);
  return (*(uint64_t (**)(unint64_t))(v1 + 8 * (((v2 == 1284426096) * (v0 ^ 0x556)) | (v0 - 1055))))(v3);
}

uint64_t sub_1B026F000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((497 * (a7 + 1 != v8 + 32)) ^ a6)))();
}

uint64_t sub_1B026F0E0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x7761D79CB8DF4D03) + 2073477588;
  unsigned int v4 = *(_DWORD *)(v2 - 0x7761D79CB8DF4D07) + 991768405;
  BOOL v5 = v3 < 0x8C25CC3F;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < 0x8C25CC3F) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a1 + 8 * ((v6 | (8 * v6)) ^ v1)))();
}

uint64_t sub_1B026F164(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,int a26,int a27)
{
  uint64_t v29 = (((v27 ^ (a8 - 1458) ^ a18) + a27) ^ 0xDC7BD5FD)
      + 937426944
      + ((2 * ((v27 ^ (a8 - 1458) ^ a18) + a27)) & 0xB8F7ABFA);
  uint64_t v30 = (((a25 ^ a8) + a26) ^ 0x57C95AFF)
      - 1380453028
      + ((2 * ((a25 ^ a8) + a26)) & 0xAF92B5FE);
  BOOL v31 = HIDWORD(a18) < 0xE503F0D6;
  unsigned int v32 = a18 - 1618 + v30 - 545087365;
  int v33 = v31 ^ (v32 < 0xE503F0D6);
  BOOL v34 = v32 < HIDWORD(a18);
  if (!v33) {
    BOOL v31 = v34;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (int)((v31 * (a18 - 1392)) ^ a18)))(v29, v30, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t sub_1B026F23C(char a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(unsigned char *)(a4 + v4 + v8) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1485 * (v4 + 1 + v8 < ((((v5 + 110) ^ v7) * v6) ^ 0x7FuLL))) ^ (v5 + 110))))();
}

uint64_t sub_1B026F27C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v1 == (((v0 - 1503) | 0x364) ^ 0x294A20CF)) * ((v0 ^ 0x7EC) + 392)) ^ v0)))();
}

uint64_t sub_1B026F2BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (125 * ((unint64_t)(v2 - a1) < 0x20)))))();
}

uint64_t sub_1B026F2FC@<X0>(uint64_t a1@<X8>)
{
  int v8 = v3
     + 460628867 * ((&v5 - 1469165069 - 2 * ((unint64_t)&v5 & 0xA86E51F3)) ^ 0xE4F8D38E)
     + 1277;
  uint64_t v6 = v1;
  uint64_t v7 = v2;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x82A)))(&v5);
}

uint64_t sub_1B026F360()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 >= (STACK[0x3B8] & 0xDA4BF65B ^ 0xC8BF82CE)) * ((STACK[0x3BC] & 0xBCB9A12) - 336)) ^ (v1 - 1243))))();
}

void sub_1B026F3B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * (((a1 | 0x882D0BB0) - a1 + (a1 & 0x77D2F44F)) ^ 0x82D9059F);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B026F458(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1B026F470()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(_DWORD *)(v1 - 0x7761D79CB8DF4D03) == v0 + 277808837) * ((v0 ^ 0x185) - 532)) ^ v0)))();
}

uint64_t sub_1B026F4B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (((((8 * v26) ^ 0x758) + 1198) * ((v28 + v27 + 15) < 4)) ^ v26)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B026F4F4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((51 * (STACK[0x4F8] == 0)) ^ (v0 - 1147))))();
}

uint64_t sub_1B026F52C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((59 * (*(_DWORD *)(v1 + 1424) == ((170 * (((v0 - 908) | 0x47) ^ 0xDF)) ^ 0x21DFF90F))) ^ v0)))();
}

void sub_1B026F57C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

void sub_1B026F61C(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x67843F9A1244BAC7) = (((v3 + v2) * (v1 - 1678393466)) ^ 0x5BCEBD3C)
                                         - 168075264
                                         + ((2 * (v3 + v2) * (v1 - 1678393466)) & 0xB79D7A78);
}

void sub_1B026F6A8()
{
  *(_DWORD *)(v0 - 0x7761D79CB8DF4CFBLL) = 1373504850;
  JUMPOUT(0x1B0275D8CLL);
}

uint64_t sub_1B026F6C8()
{
  BOOL v5 = v2 + 1047343068 <= 871503511 && v2 + 1047343068 >= v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v5 * (((v0 - 1315) | 1) - 128)) ^ v0)))();
}

uint64_t sub_1B026F724(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v24 = (v20 + 721018517) & 0xD50626AA;
  char v25 = v21 + ((v20 - 107) & 0xAA) + 76;
  BOOL v27 = v19 == 463788147 || a19 - v23 != 1210380922;
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((v27 ^ (v25 + 1)) & 1 | v24)))();
}

uint64_t sub_1B026F790(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5
                                           + 8
                                           * ((878
                                             * (((((a2 + 914) | 0x24C) ^ 0x6D7) & v3) == ((a2 - 1980890498) & 0x7611FFFC ^ 0x36C))) ^ a2)))((v2 - v4));
}

uint64_t sub_1B026F7EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (int)((154
                                                                              * (((v4 == (v5 & 0xFD07F77F) + 1739278948) ^ ((v5 & 0x7F) + 64)) & 1)) ^ v5 & 0xFD07F77F)))(a1, a2, a3, 1556690660);
}

uint64_t sub_1B026F838(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((205 * ((a4 + 1 + v4) < 0x40)) ^ a1)))();
}

uint64_t sub_1B026F914()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 > ((v3 + v1 - 669) | 0x210u) + 580817815) * ((v3 + v1 - 669) ^ 0x79)) ^ (v3 + v1 + 343))))();
}

void sub_1B026F964()
{
}

uint64_t sub_1B026F994(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((210 * (((v3 == v4) ^ (-125 * ((a3 + 99) ^ 0x60))) & 1)) ^ (a3 + 1891))))();
}

uint64_t sub_1B026F9D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, unsigned int a16)
{
  a14 = &STACK[0x2F7E69BD89C711D];
  a16 = 501 - 460628867 * ((((2 * &a14) | 0x98B0CA2E) - &a14 - 1280861463) ^ 0xCEE76A);
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v18 + 17104))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1573 * (a15 == ((v17 - 241) ^ 0x313))) ^ v16)))(v19);
}

uint64_t sub_1B026FA6C(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((45 * ((v1 - 213328467) < 0x28)) ^ (2 * (a1 ^ 0x82)))))();
}

void sub_1B026FB48()
{
}

uint64_t sub_1B026FB74(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((90 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x12Au)))();
}

uint64_t sub_1B026FBA0()
{
  unsigned int v3 = v1 - ((2 * v1 + 190739824) & 0xEC72B624) + 2078840266;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((30
                                * (((2 * v3) & 0xD79B7FFA ^ 0xC4123465 ^ ((v2 - 291) | 5))
                                 + ((v2 + 502587788) ^ v3)
                                 + 1073670359 == 734832852)) ^ v2)))();
}

void sub_1B026FC38(uint64_t a1, uint64_t a2)
{
  uint64_t v12 = *MEMORY[0x1E4F143B8];
  unsigned int v3 = *(&off_1F08CDB40
       + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B2FE00) ^ 0xED)) ^ byte_1B04C0580[byte_1B04BD620[(-19 * ((qword_1E9B2FDF8 - dword_1E9B2FE00) ^ 0xED))] ^ 0xA3])
       + 96);
  unsigned __int8 v4 = -19 * ((qword_1E9B2FDF8 + *v3) ^ 0xED);
  uint64_t v5 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDCA0 + (*((unsigned __int8 *)off_1F08CDDD8 + v4 - 12) ^ 0xC3u) - 4) ^ v4)
       - 150);
  uint64_t v6 = *v5 - *v3 - (void)&v8;
  void *v3 = 1469428717 * (v6 + 0x13BC45BED9160A13);
  void *v5 = 1469428717 * (v6 ^ 0xEC43BA4126E9F5EDLL);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 628203409 * ((v10 - 918820755 - 2 * (v10 & 0xC93BE86D)) ^ 0x4BB3E45E);
  v10[2] = v6 - 290923570;
  v10[0] = v6 + 1172345435;
  BOOL v11 = &STACK[0x843828D0CDF34A9];
  LODWORD(v5) = 1469428717 * ((*(_DWORD *)v5 - *(_DWORD *)v3) ^ 0x26E9F5ED);
  uint64_t v7 = (char *)*(&off_1F08CDB40
               + ((-19 * ((qword_1E9B2FDF8 + dword_1E9B2FE00) ^ 0xED)) ^ byte_1B04C5E00[byte_1B04C0680[(-19 * ((qword_1E9B2FDF8 + dword_1E9B2FE00) ^ 0xED))] ^ 0xA3])
               - 1)
     - 4;
  (*(void (**)(_DWORD *))&v7[8
                                      * (*((unsigned char *)off_1F08CDD38
                                                          + (*((unsigned __int8 *)off_1F08CDFA0
                                                             + v5
                                                             - 12) ^ 0xCEu)) ^ v5)
                                      + 16712])(v10);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1B026FF2C(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8 * ((1929 * ((v3 & (2 * v6)) + (((v4 - 521) | 0x109) ^ (v2 - 283) ^ v6) == v2)) ^ v4)))();
}

uint64_t sub_1B026FF78@<X0>(int a1@<W1>, uint64_t a2@<X3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,arg34_1B026FF78 a34)
{
  *(_OWORD *)(a2 + (a3 + a1)) = *(_OWORD *)&a34.arr[4];
  return (*(uint64_t (**)(void))(v36 + 8 * (((((v35 + 1) & 0x1FFFFFFF0) == 16) * (v34 + 459)) ^ v34)))();
}

uint64_t sub_1B026FFBC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W3>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v9 = v7 & 7;
  int v10 = v8 + v7;
  *(void *)(a5 - 7 + v10 + a2 - a4 + (a1 ^ 0x4EE)) = *(void *)(v6
                                                                               - 7
                                                                               + v10
                                                                               + a2
                                                                               - a4
                                                                               + (a1 ^ 0x4EE));
  return (*(uint64_t (**)(uint64_t, void))(v5
                                                    + 8
                                                    * (int)(((v10 + a3 - a4 - v9 == 8) | (8 * (v10 + a3 - a4 - v9 == 8))) ^ a1)))(a1, (v10 + a3 - a4 - v9 - 16));
}

uint64_t sub_1B0270020(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                                           + 8 * ((((a8 + v9) ^ (v9 + 1438) ^ (3 * (a8 ^ 0x48D))) * (a5 == a6)) ^ a8)))(0);
}

uint64_t sub_1B027005C()
{
  unsigned int v3 = LODWORD(STACK[0x528]) + ((v0 - 40) ^ 0x3F7149BD);
  int v4 = (v1 - 2020196116 < (v0 - 735772059)) ^ (v3 < 0xD4250A5C);
  BOOL v5 = v3 < v1 - 2020196116;
  if (v4) {
    BOOL v5 = v1 - 2020196116 < (v0 - 735772059);
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((4038 * !v5) ^ v0)))();
}

uint64_t sub_1B02700D4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((((v3 ^ 0x3D1) - v2 + 1282) ^ (v1 + 2074)) * (v4 == 0)) ^ v3)))(0);
}

uint64_t sub_1B027010C@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X6>, unsigned int a7@<W8>, int8x16_t a8@<Q0>, int8x8_t a9@<D1>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59)
{
  int v68 = a5 - 8;
  uint64_t v69 = (a4 + v68);
  v71.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v68) & 0xF;
  v71.val[0].i64[1] = (v67 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[0] = (a2 + (_BYTE)v68) & 0xF;
  v71.val[1].i64[1] = (v66 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[0] = (v65 + (_BYTE)v68) & 0xF;
  v71.val[2].i64[1] = (a1 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[0] = (v62 + (_BYTE)v68) & 0xF;
  v71.val[3].i64[1] = (v63 + (_BYTE)v68) & 0xF;
  *(int8x8_t *)(a6 + v69) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v61 + (v69 & 0xF) - 7), *(int8x8_t *)(a3 + v69)), veor_s8(*(int8x8_t *)((v69 & 0xF) + v60 - 5), *(int8x8_t *)((v69 & 0xF) + v59 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v71, a8), a9)));
  return (*(uint64_t (**)(void))(a59 + 8 * ((1329 * (v64 == v68)) ^ a7)))();
}

uint64_t sub_1B0270114@<X0>(int a1@<W8>)
{
  int v3 = a1 - 52;
  BOOL v4 = *v1 != (v3 ^ 0x94) - 1044;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v4) | (16 * v4)) ^ v3)))();
}

uint64_t sub_1B02703B0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45)
{
  unsigned int v50 = v48 + a5 + ((v45 + 120) ^ 0x3CD);
  if (v50 <= 0x40) {
    unsigned int v50 = 64;
  }
  int v51 = a1 - v46 - v47 + v50 < 0xF;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *))(v49 + 8 * ((8 * v51) | (v51 << 6) | v45)))(1866, 3814750137, 3814750085, &a45);
}

uint64_t sub_1B027042C()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((((v2 ^ 0x75C) + v2 - 299) * (v1 == 251658240)) ^ v2)))();
}

uint64_t sub_1B027045C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,__int16 a44,char a45,char a46,int a47)
{
  if (a22 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((1563
                                                                           * (a47 != ((3 * (a8 ^ (a8 + 219))) ^ 0x4EC91658))) ^ (a5 + a8 + 440))))(a1, a2, a3, 3980823791);
  if (a22 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47
  }
                                                                         + 8
                                                                         * ((53 * (a47 == 1321801015)) ^ (a5 - 314143086))))(a1, a15, a3, 3980823791);
  unint64_t v49 = ((unint64_t)&a29 ^ 0x57EBFFD9FCFAF65FLL)
      + ((2 * (void)&a29) & 0xAFD7FFB3F9F5ECB0)
      - 0x406A221000282F5FLL;
  a46 = (v49 ^ 0xBA) * (v49 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v47 + 6384))(a1, a15, a3, 3980823791);
}

void sub_1B027062C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v25 - 120) = v24;
  *(void *)(v25 - 112) = v24;
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = a15;
  *(void *)(v25 - 128) = a22;
  *(_DWORD *)(v25 - 104) = ((v22 & 0x75B2E3FB) + 1007) ^ (1759421093
                                                        * ((((v25 - 144) | 0xF0E7B2DF)
                                                          - (v25
                                                           - 144)
                                                          + ((v25 - 144) & 0xF184D20)) ^ 0x439A028B));
  JUMPOUT(0x1B0259EECLL);
}

uint64_t sub_1B02706BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  return (*(uint64_t (**)(void))(v36
                              + 8
                              * (((v35 + a35 + (v37 ^ 0x37u) + 35 < 0xFFFFFFFB) * ((v37 ^ 0xF9) - 185)) ^ (v37 + 1869))))();
}

uint64_t sub_1B027070C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * ((v3 ^ 0x7E9) - 343)) ^ v3)))();
}

uint64_t sub_1B0270754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v14 = v12 ^ (v12 - 1089);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8 * (v12 ^ (v12 - 2086))))(a11, 2965982036);
  int v15 = (*(uint64_t (**)(void))(v11 + 8 * (v12 ^ (v12 - 1919))))();
  unsigned int v16 = v15 + (v14 ^ 0x57061B77) - ((2 * v15) & 0xAE0C3E6C);
  *uint64_t v13 = v16;
  int v17 = (((v16 >> ((((v12 ^ (v12 - 65)) - 1) | 3) - 37)) ^ 1)
       + 1460018998
       - ((2 * (v16 >> ((((v12 ^ (v12 - 65)) - 1) | 3) - 37))) & 4)) ^ v16;
  v13[1] = 1812433253 * v17 - ((2 - 670100790 * v17) & 0xAE0C3E6C) + 1460018999;
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * v14))(1812433253);
}

uint64_t sub_1B0270858(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((191 * ((((a6 - 985) ^ (v7 + a3 - 1072164702 < ((a6 - 985) ^ 0x10Fu) - 395)) & 1) == 0)) ^ a6)))();
}

void sub_1B02708C4()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1323));
  JUMPOUT(0x1B02582B4);
}

uint64_t sub_1B0270908()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((STACK[0x3B0] & 0x4EE81FF6 ^ 0x2D0) * (v0 <= 0xC8BF80DF)) ^ (v1 - 1243))))();
}

uint64_t sub_1B027094C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (v0 < 0x996F20F8)) ^ 0x31D)))();
}

uint64_t sub_1B02709A8()
{
  return sub_1B026CA1C();
}

uint64_t sub_1B02709D8@<X0>(int a1@<W8>)
{
  int v4 = a1 - 108;
  uint64_t v5 = (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0xCE2)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((*v2 == 0) * (v4 ^ 0xA0 ^ (v4 + 160) ^ 0x3D)) ^ v4)))(v5);
}

uint64_t sub_1B0270A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = 535753261 * ((((v19 - 136) | 0xE290E452) - ((v19 - 136) & 0xE290E452)) ^ 0xE864EA7D);
  *(void *)(v19 - 136) = v14;
  *(_DWORD *)(v19 - 128) = v20 + v15 - 130679437;
  *(_DWORD *)(v19 - 124) = v20 + v18 + 438;
  (*(void (**)(uint64_t))(v17 + 8 * (v18 + 1419)))(v19 - 136);
  *(void *)(v19 - 128) = a11;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = (v18 + 321) ^ (1374699841
                                        * (((((v19 - 136) | 0x21165438) ^ 0xFFFFFFFE) - (~(v19 - 136) | 0xDEE9ABC7)) ^ 0xB31DB3CE));
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v17 + 8 * (v18 + 1350)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((473
                                              * (*(_DWORD *)(v19 - 132) > v16 + ((v18 + 2067659446) & 0x84C20675) - 1045)) ^ (v18 + 456))))(v21);
}

uint64_t sub_1B0270B54@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  uint64_t v7 = v2 + v5;
  *(unsigned char *)(a1 + v7) = v4;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v3) ^ a2)))();
}

uint64_t sub_1B0270B88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v38 = v34 + v36;
  unsigned int v39 = v34 + v36 + 1186562376;
  if (v39 <= 0x40) {
    unsigned int v39 = 64;
  }
  BOOL v40 = __CFADD__(v38 + (v35 ^ 0x46B985FE), v33 - 1186563990 + a33 + ((v35 + 1463833269) & 0xA8BFAEDF) + v39);
  return (*(uint64_t (**)(void))(v37 + 8 * ((v40 | (4 * v40)) ^ v35)))();
}

uint64_t sub_1B0270C10()
{
  *(void *)(v3 + v0 - 0x843828D62D411D9 + ((v2 + 39220095) & 0xFDA98DBB)) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1130 * ((v1 & 0x38) == 8)) ^ v2)))();
}

uint64_t sub_1B0270C78(uint64_t a1)
{
  BOOL v4 = ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1800160278))
       - ((*(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 + 1800160278)) << (((v3 - 94) ^ 0x69) - 61)) & 0xA8)
       + 845113428) & 0x1F) == 11;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 | (2 * v4)) ^ v3)))();
}

uint64_t sub_1B0270CE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,int a23)
{
  BOOL v27 = a22 - v24 == 1210380922 && a23 == a7 + 319;
  return (*(uint64_t (**)(void))(v25 + 8 * ((v27 * ((v23 - 485) ^ 0x4DD)) ^ v23)))();
}

uint64_t sub_1B0270D28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49)
{
  int v50 = a24 - (((a5 ^ 0x1A472E59) + 2 * a24) & 0x3533B704) - 943886057;
  BOOL v52 = (((((_BYTE)v50 << (a5 ^ 0x72)) & 0x7E ^ 4)
        + (v50 ^ 0x3D)
        + (a5 ^ 0x90)
        - 24
        + 54) & 0xF) != 0
     || ((v50 << (a5 ^ 0x72)) & 0xCDFEDD7E ^ 0x5329504) + (v50 ^ 0xFC66B53D) == -419467585;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * (int)((v52 * (((a5 ^ 0x490) - 312) ^ 0xB6)) ^ a5 ^ 0x490)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49);
}

uint64_t sub_1B0270DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  if (v5 == a5) {
    int v6 = 1373504856;
  }
  else {
    int v6 = v5;
  }
  return v6 ^ a5;
}

uint64_t sub_1B0270E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                                        + 8
                                                                                        * ((924
                                                                                          * (*(_DWORD *)(v7 - 128) == *(_DWORD *)(v7 - 136))) ^ v5)))(a1, a2, a3, a4, a5, v5 + 1499);
}

uint64_t sub_1B0270E64@<X0>(int a1@<W8>)
{
  int *v7 = v10 ^ v1;
  int v5 = a1 ^ v2;
  uint64_t v13 = v9;
  unsigned int v12 = 535753261 * ((2 * (v11 & 0x412B78B8) - v11 + 1054115655) ^ 0x34208968)
      + 928801026
      + a1
      + 2025;
  (*(void (**)(unsigned char *))(v3 + 8 * (a1 ^ (v2 - 1886))))(v11);
  uint64_t v13 = v8;
  unsigned int v12 = v5 + 535753261 * ((2 * (v11 & 0x4AF28A8) - v11 - 78588075) ^ 0xF1A4D97A) + 1622;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 ^ 0x9A2)))(v11);
  return v4 ^ 0xAE215E86;
}

uint64_t sub_1B0270F98(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F08CE000
                                            - 4
                                            + 8 * ((1246 * (*(_DWORD *)(a2 + 4) == 1284426109)) ^ 0x340u)))(4294925278);
}

void sub_1B0270FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  (*(void (**)(uint64_t, uint64_t))(v22 + 8 * (v23 - 1174666844)))(a21, 2965982036);
  int v26 = (*(uint64_t (**)(void))(v22 + 8 * (v23 - 1174666803)))();
  _DWORD *v25 = v26 + 1460018998 - ((v26 << ((v21 + 127) & 0xDF ^ 0xC3)) & v24);
  JUMPOUT(0x1B0271078);
}

void sub_1B0271130(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0271210()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((v0 - 1318728218 >= v0
                                                    - 1318728297
                                                    + ((((v2 - 12) | 0x800) - 590161428) & 0x232D1E1Fu))
                                * (((((v2 - 12) | 0x800) - 1724) | 0x680) - 1931)) ^ ((v2 - 12) | 0x800))))();
}

uint64_t sub_1B0271280(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  *(unsigned char *)(a4 + v8) = *(unsigned char *)(v10 + (v7 + a2))
                      - (a7 & (2 * *(unsigned char *)(v10 + (v7 + a2))))
                      - 27;
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 != 63) * a3) ^ v9)))();
}

uint64_t sub_1B02712CC@<X0>(char a1@<W1>, char a2@<W3>, uint64_t a3@<X5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  unsigned int v38 = *(_DWORD *)(&a21 + ((v36 + v33) & 0xFFFFFFFC) + 72);
  int v39 = (v38 >> ((v34 - a1) ^ (a2 - 16))) ^ 0x2D;
  *(unsigned char *)(a3 + (v36 + v33 + 1)) = v39 - ((2 * v39) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33)) = (HIBYTE(v38) ^ 0x52) - ((2 * (HIBYTE(v38) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33 + 2)) = (BYTE1(v38) ^ 0x73) - ((2 * (BYTE1(v38) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a3 + (v36 + v33 + 3)) = v38 ^ 0x8F;
  BOOL v40 = v36 + 2108414039 < (a33 - 1915079222);
  if (v36 + 2108414039 < a4 != a33 - 1915079222 < a4) {
    BOOL v40 = a33 - 1915079222 < a4;
  }
  return (*(uint64_t (**)(void))(v37 + 8 * ((!v40 * v35) ^ v34)))();
}

uint64_t sub_1B02713AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B02713CC(v5 & 0xFFFFFFE0, a2, 0, a4, (v4 - 948428593), 1446, 93);
}

uint64_t sub_1B02713CC@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W4>, int a4@<W5>, int a5@<W6>, uint64_t a6@<X8>)
{
  uint64_t v9 = (a3 - a2);
  long long v10 = *(_OWORD *)(a6 + v9 - 15);
  long long v11 = *(_OWORD *)(a6 + v9 - 31);
  uint64_t v12 = v6 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v7 + 1095) ^ a4) + a2 == a1) * a5) ^ v7)))();
}

uint64_t sub_1B0271410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                + 8
                                                                                * (((((v31 + 402) ^ 0x4AE)
                                                                                   + (v31 ^ 0x493))
                                                                                  * (v29 == v30)) ^ v31)))(-1318728281, a29, 4294966083, 3334056263, 53);
}

uint64_t sub_1B027146C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F08CE000
                                            - 4
                                            + 8 * ((1812 * (*(_DWORD *)(a2 + 4) == 1284426109)) ^ 0x160u)))(4294925278);
}

uint64_t sub_1B02714B0(uint64_t a1, int a2)
{
  *(void *)(v5 + (v3 & v6)) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 == 0) * a2) | v2)))();
}

uint64_t sub_1B02714DC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((STACK[0x2D4] & 0xA37BD456 ^ 0x81A) * (v1 == v3)) ^ (v0 - 1324))))();
}

uint64_t sub_1B0271514()
{
  *(_DWORD *)(v3 - 192) = v1
                        + 460628867 * ((-863243537 - (v0 | 0xCC8BF2EF) + (v0 | 0x33740D10)) ^ 0x7FE28F6D)
                        - 231790342;
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 654)))(v3 - 192);
  uint64_t v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 590)))(336, 1777295586);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                                                  + 8 * (((v4 == 0) * (v1 ^ 0x7B2 ^ v1 ^ 0x7BA ^ 0xD)) | v1)))(v4, v5, 1373504863, v6, v7, v8, v9);
}

uint64_t sub_1B02715EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 < ((2 * a5) ^ 0xCEu)) * (((a5 + 435) | 0x84) ^ 0x228)) ^ a5)))();
}

uint64_t sub_1B0271634()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((47 * (((v0 == v1) ^ ((v2 - 72) ^ (v2 + 101))) & 1)) ^ (v2 + 614))))();
}

uint64_t sub_1B027166C(int a1, int a2)
{
  unsigned int v5 = a1 + v2 + 50331659;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = a1 + v2 + 50331659;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + v6 <= ((v3 - 1479) ^ (v5 - 1))) * ((v3 ^ 0xF) - 484)) ^ v3)))();
}

uint64_t sub_1B02716C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v45 = (_DWORD *)(a28 + 24 * (a9 - 129800697));
  LODWORD(a33) = v45[4];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * ((35 * (((*v45 + (int)a1) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1B0271768@<X0>(uint64_t a1@<X8>)
{
  unsigned int v4 = (v3 + 319885368) & 0xECEEEDB9;
  unsigned int v7 = v4
     - 535753261 * ((((&v6 | 0xF3AC9EC6) ^ 0xFFFFFFFE) - (~&v6 | 0xC536139)) ^ 0x6A76F16)
     + 663;
  uint64_t v6 = v2;
  uint64_t v8 = a1;
  uint64_t v9 = v2;
  return (*(uint64_t (**)(uint64_t *))(v1 + 8 * (int)(v4 + 1751)))(&v6);
}

uint64_t sub_1B02717E4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((v2 + 306) | 2) + ((v2 + 60) ^ 0xFFFFFC10)) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_1B0271820@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, unint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int8x16_t *a35)
{
  *(int8x16_t *)(a3 + (((a8 + a2) & a4 ^ a5) & (v35 + v37))) = vaddq_s8(vsubq_s8(*a35, vandq_s8(vaddq_s8(*a35, *a35), v39)), v40);
  uint64_t v41 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * ((1833 * (((v36 + 1) & 0x1FFFFFFF0) == 16)) ^ a8));
  return v41(v41, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B0271890(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (int)((((a6 + 593185905) & 0xDCA4B57F ^ (a6 + 1437018844) & 0xAA58D7FF ^ 0x347)
                                     * (v6 == a4)) ^ (a6 - 471))))();
}

uint64_t sub_1B02718F4@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,int a46)
{
  int v50 = *(_DWORD *)(&a34 + ((v48 + v46) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v48 + v46)) = (HIBYTE(v50) ^ 0x52) - ((v47 + 84) & (2 * (HIBYTE(v50) ^ 0x52))) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 1)) = (BYTE2(v50) ^ 0x2D) - ((2 * (BYTE2(v50) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 2)) = (BYTE1(v50) ^ 0x73) - ((2 * (BYTE1(v50) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v48 + v46 + 3)) = v50 ^ 0x8F;
  BOOL v51 = v48 + 1183505713 < (a46 + 1474566681);
  if (v48 + 1183505713 < a2 != a46 + 1474566681 < a2) {
    BOOL v51 = a46 + 1474566681 < a2;
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((v51 | (8 * v51)) ^ v47)))();
}

uint64_t sub_1B02719C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v24
                                                     + 8
                                                     * ((v23 - 518093089) & 0x1EE175B9 | (2 * (a23 > 1)) | (4 * (a23 > 1)))))(910381556, 126653738);
}

uint64_t sub_1B0271BC4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v11 = *(unsigned __int8 *)(v7 + v9 - 0x3E76A940CF826F04)
      - (*(unsigned __int8 *)(v8 + v9 - 0x3E76A940CF826F04) ^ 0xE5);
  return (*(uint64_t (**)(void))(v10 + 8 * (((((2 * v11) & 0xDF36FEFA) + (v11 ^ a6) == a6) * ((a1 ^ v6) - 517)) ^ a1)))();
}

uint64_t sub_1B0271C2C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int32x4_t a5, int32x4_t a6, int32x4_t a7, int32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,char a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,unsigned int a38,unsigned int a39,int a40,int a41,int a42,int a43,int a44,unsigned __int8 a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  int v53 = a45 ^ 0xCE;
  if (v53 == 1)
  {
    BYTE4(a36) = ((8 * a38) ^ 0x78) + ((a4 - 61) & 0xEB ^ 0x4E) - ((2 * ((8 * a38) ^ 0x78)) & 0xC0);
    BYTE5(a36) = ((a38 >> 5) ^ 0x6A) - ((2 * ((a38 >> 5) ^ 0x6A)) & 0xCA) - 27;
    BYTE6(a36) = ((a38 >> 13) ^ 0x79) - 2 * (((a38 >> 13) ^ 0x79) & 0xE7 ^ (a38 >> 13) & 2) - 27;
    HIBYTE(a36) = ((a38 >> 21) ^ 0x71) - 2 * (((a38 >> 21) ^ 0x71) & 0xE7 ^ (a38 >> 21) & 2) - 27;
    HIDWORD(v57) = HIDWORD(a37) ^ 0x12;
    LODWORD(v57) = a38 ^ 0xC0000000;
    LOBYTE(a37) = (v57 >> 29) - ((2 * (v57 >> 29)) & 0xCA) - 27;
    BYTE1(a37) = ((HIDWORD(a37) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a37) >> 5) ^ 0x7F)) & 0xCA) - 27;
    BYTE2(a37) = ((HIDWORD(a37) >> 13) ^ 0xC0) + (~(2 * ((HIDWORD(a37) >> 13) ^ 0xC0)) | 0x35) - 26;
    unsigned int v56 = ((HIDWORD(a37) >> 21) ^ 0xFFFFFF94)
        - 2 * (((HIDWORD(a37) >> 21) ^ 0xFFFFFF94) & 0x67 ^ (HIDWORD(a37) >> 21) & 2)
        - 27;
    uint64_t v54 = a12;
    goto LABEL_5;
  }
  uint64_t v54 = a12;
  if (v53 == 2)
  {
    BYTE4(a36) = ((HIDWORD(a37) >> 21) ^ 0x94)
               - 2 * (((HIDWORD(a37) >> 21) ^ 0x94) & 0xE7 ^ ((57 * (a4 ^ (a4 + 3))) ^ 0x29) & (HIDWORD(a37) >> 21))
               - 27;
    BYTE5(a36) = ((HIDWORD(a37) >> 13) ^ 0xC0) - ((2 * ((HIDWORD(a37) >> 13) ^ 0xC0)) & 0xCA) - 27;
    BYTE6(a36) = ((HIDWORD(a37) >> 5) ^ 0x7F) - ((2 * ((HIDWORD(a37) >> 5) ^ 0x7F)) & 0xCA) - 27;
    HIDWORD(v55) = HIDWORD(a37) ^ 0x12;
    LODWORD(v55) = a38 ^ 0xC0000000;
    HIBYTE(a36) = (v55 >> 29) - ((2 * (v55 >> 29)) & 0xCA) - 27;
    LOBYTE(a37) = ((a38 >> 21) ^ 0x71) - 2 * (((a38 >> 21) ^ 0x71) & 0x6D ^ (a38 >> 21) & 8) - 27;
    BYTE1(a37) = ((a38 >> 13) ^ 0x79) - ((2 * ((a38 >> 13) ^ 0x79)) & 0xCA) - 27;
    BYTE2(a37) = ((a38 >> 5) ^ 0x6A) - ((2 * ((a38 >> 5) ^ 0x6A)) & 0xCA) - 27;
    LOBYTE(v56) = ((8 * a38) ^ 0x78) + (~(2 * ((8 * a38) ^ 0x78)) | 0x3F) - 26;
LABEL_5:
    BYTE3(a37) = v56;
  }
  return sub_1B026AE28(a1, a2, a3, a4, 913915477, a10, v54, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a5,
           a6,
           a7,
           a8);
}

uint64_t sub_1B0271EA4@<X0>(unsigned int a1@<W2>, int a2@<W8>)
{
  unsigned int v9 = v7 + 1;
  BOOL v10 = v5 < a1;
  *(unsigned char *)(v6 + (v2 + 1)) = *(unsigned char *)(v4 + (a2 + 1));
  if (v10 == v9 < ((v3 + 413) ^ (a1 - 920))) {
    BOOL v10 = v9 < v5;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((30 * !v10) ^ v3)))();
}

uint64_t sub_1B0271EB4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == (((v4 + 922759040) | 0xC0000420) ^ a4))
                                * (v5 + a3 + v4 - 139 - 361)) ^ v4)))();
}

uint64_t sub_1B0271F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x3D8] = v69;
  int v73 = 235795823 * (((v72 - 192) & 0xED1918E5 | ~((v72 - 192) | 0xED1918E5)) ^ 0x864BAE43);
  *(void *)(v72 - 192) = 0x6C39C41327E11828;
  *(_DWORD *)(v72 - 168) = v73 + v70 + 492;
  *(void *)(v72 - 160) = a69;
  *(void *)(v72 - 176) = a68;
  *(_DWORD *)(v72 - 184) = -1886077894 - v73;
  uint64_t v74 = (*(uint64_t (**)(uint64_t))(v71 + 8 * (v70 ^ 0x8D3)))(v72 - 192);
  return (*(uint64_t (**)(uint64_t))(v71
                                            + 8
                                            * ((115 * (*(_DWORD *)(v72 - 152) != ((v70 - 101) ^ 0xAE215EC8))) ^ v70)))(v74);
}

uint64_t sub_1B0271FEC(uint64_t result)
{
  unint64_t v1 = 1759421093 * ((result - 2 * (result & 0xCE10C030FCF42454) - 0x31EF3FCF030BDBACLL) ^ 0xE0AE01604F899400);
  unint64_t v2 = *(void *)(result + 24) ^ v1;
  unint64_t v3 = *(void *)(result + 8) + v1;
  BOOL v4 = (uint64_t)v3 < (uint64_t)v2;
  BOOL v5 = v3 < v2;
  int v6 = v4;
  if ((*(_DWORD *)result - v1)) {
    int v7 = v6;
  }
  else {
    int v7 = v5;
  }
  BOOL v8 = v7 == 0;
  uint64_t v9 = 32;
  if (!v8) {
    uint64_t v9 = 20;
  }
  *(_DWORD *)(result + 36) = (*(_DWORD *)(result + v9) + v1) ^ (*(_DWORD *)(result + 40) + v1);
  return result;
}

void sub_1B0272080(uint64_t a1)
{
  __asm { BRAA            X13, X17 }
}

void sub_1B02721B8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x1B02682E0);
}

void sub_1B02721D0(uint64_t a1@<X8>)
{
  *(_DWORD *)(v4 - 144) = v3;
  *(void *)(v4 - 120) = v1 - 7;
  *(void *)(v4 - 136) = a1 - 7;
  *(_DWORD *)(v4 - 152) = (v2 ^ 0xFFFFFC26) & v3;
  *(_DWORD *)(v4 - 128) = v2 ^ 0xE;
  JUMPOUT(0x1B0272258);
}

uint64_t sub_1B0272338()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 ^ 0xF99)))(v0 ^ v1, 921157844) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (((((687 * (v2 ^ 0x7C4) - 1532) | 0x408) - 1537) * v4) ^ v2)))();
}

uint64_t sub_1B027239C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((108 * (v1 < 0x83)) ^ (v0 - 1417))))();
}

uint64_t sub_1B02723C0@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  unint64_t v7 = v2 + v4;
  *(unsigned char *)(v7 + a2 - 1) = v5;
  return (*(uint64_t (**)(void))(v6 + 8
                                   * (((v7 < (unint64_t)(v3 + 796) - 1304) * a1) ^ (v3 - 461))))();
}

uint64_t sub_1B02723F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, unint64_t *a16, unint64_t *a17)
{
  a14 = (v17 + 1248) ^ (1374699841
                      * ((&a14 - 397078248 - 2 * (&a14 & 0xE8551118)) ^ 0x85A10911));
  a16 = &STACK[0x18D17CD12703C5EB];
  a17 = a11;
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 1941)))(&a14);
  a14 = (v17 + 1248) ^ (1374699841
                      * ((&a14 + 536729857 - 2 * (&a14 & 0x1FFDD901)) ^ 0x7209C108));
  a16 = &STACK[0x18D17CD12703C5EF];
  a17 = a11;
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 1941)))(&a14);
  a14 = v17 + 1225351577 * (((&a14 | 0xCDD97601) - (&a14 & 0xCDD97601)) ^ 0xEE43AE17) + 1878;
  a16 = a11;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v18 + 8 * (v17 + 1952)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * (((a15 == -1373544826) * (((v17 - 218) | 0x718) ^ 0xE)) ^ v17)))(v19);
}

void sub_1B0272570(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  unint64_t v64 = STACK[0x5E0] + 0x843828D0CDF34ADLL;
  STACK[0x5E8] = v64;
  unsigned int v65 = 628203409 * ((2 * ((v61 ^ 0xFE0FC357) & 0x4A6DD617) - (v61 ^ 0xFE0FC357) + 898771432) ^ 0x4915E68C);
  *(_DWORD *)(v63 - 184) = v65 - 290923570;
  *(_DWORD *)(v63 - 192) = a60 + 1172345424 + v65 + 9;
  *(void *)(v63 - 176) = v64;
  unint64_t v66 = v60;
  (*(void (**)(uint64_t))(v62 + 8 * (a60 | 0x869)))(v63 - 192);
  STACK[0x4C0] = *(void *)(v62 + 8 * a60);
  STACK[0x3D8] = v66;
  JUMPOUT(0x1B0277570);
}

uint64_t sub_1B0272650@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  unint64_t v7 = (__n128 *)(v5 + v2);
  v7[73] = a2;
  v7[74] = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v2 == 224) ^ v3) & 1) * v4) ^ a1)))();
}

uint64_t sub_1B0272688(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((121 * ((a4 + 1 + v7) > 0x4F)) ^ v6)))(v5, a5);
}

uint64_t sub_1B027275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  unsigned int v18 = v14 + ((9 * ((v16 + 451) ^ 0x8D7)) ^ 0xB0240F84);
  if (v18 <= 0x40) {
    unsigned int v18 = 64;
  }
  uint64_t v19 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((15 * (((-45 * ((v16 - 61) ^ 7)) ^ (1339814031 - v13 - v15 + v18 + 1894 < 0xF)) & 1)) | (v16 + 451)));
  return v19(v19, 64, 2955151370, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1B0272800(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((98 * (a7 + 1 == v9 + 64)) ^ v7)))();
}

uint64_t sub_1B02728BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((v1 - 1102148613 >= (a1 - 445))
                                     * (((a1 + 64912862) & 0xFC2184FB) - 1072)) ^ a1)))();
}

uint64_t sub_1B0272908(int a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * (*(_DWORD *)(v3 + 48 * (v1 + a1)) != v4 + 1206528366)) | v4)))();
}

uint64_t sub_1B0272954()
{
  BOOL v4 = v0 < 0x312BB8B7;
  if (v4 == v1 - 0x7F787F47E08D2960 < (((37 * (v2 ^ 0x519) - 64) | 0x40u) ^ 0x312BB9C5uLL)) {
    BOOL v4 = v1 - 0x7F787F47E08D2960 < v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((56 * !v4) ^ v2)))();
}

uint64_t sub_1B02729D0@<X0>(uint64_t a1@<X3>, int a2@<W5>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,unint64_t a26,int a27)
{
  LODWORD(STACK[0x2D8]) = a3;
  LODWORD(STACK[0x2DC]) = a25;
  STACK[0x2E0] = a26;
  LODWORD(STACK[0x2E8]) = a27 - a2 + 890137121;
  STACK[0x2F0] = v31 + a2 + 1800159890 + ((v30 - 689) | 0x84u);
  int v32 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v27 + 8))(a12, a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v29
                                                              + 8
                                                              * ((1052
                                                                * (v32
                                                                 + ((v30 - 689) ^ (v28 + 256))
                                                                 - ((2 * v32) & 0x5C42BD0C) == v28)) ^ v30)))(4114897149, 180070146, 129800696);
}

void sub_1B0272AB0()
{
}

uint64_t sub_1B0272AB8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                      + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0)
                                     * (((v3 + 1798279904) & 0x94D06B96) + 1041)) ^ v3)))();
}

uint64_t sub_1B0272B10@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 - 1076023950;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 + 16 * ((unint64_t)(v5 - v3 + 1076023950) > 7))))();
}

uint64_t sub_1B0272B7C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((195 * (((v1 - 670) ^ 0xFFFFFD41) + v0 > 0x9B)) ^ v1)))();
}

uint64_t sub_1B0272BB4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((830
                                * (((((v3 + 51612834) | 0x50847041) - 364424723) & (2
                                                                                  * (*(unsigned __int8 *)(a2 + 5) - 242)))
                                 + ((*(unsigned __int8 *)(a2 + 5) - 242) ^ v4) == v4)) ^ v3)))();
}

uint64_t sub_1B0272C10(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((535 * (a4 + 1 == v5 + 32)) ^ a1)))();
}

uint64_t sub_1B0272CDC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((STACK[0x580] != 0) * (((v0 - 1267) ^ 0x6D2) - 1469)) ^ (v0 + 527))))();
}

uint64_t sub_1B0272D10(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((v6 - 171762935) & 0xA3CE23A ^ (a5 + (v6 ^ (a4 + 790)) + 823)) * (v7 == v5)) ^ v6)))();
}

uint64_t sub_1B0272D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  *(unsigned char *)(v11 + v12 + v13 + 277) = *(unsigned char *)(a11 + v12 + v13 + 277) ^ 0xE5;
  return (*(uint64_t (**)(void))(v15 + 8 * ((47 * (((v16 - 959) ^ v12) + v13 < (a10 ^ v14))) ^ v16)))();
}

void sub_1B0272DB0()
{
}

uint64_t sub_1B0272E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((317 * (v7 + 1 == v6 + 24)) ^ a5)))();
}

uint64_t sub_1B0272ED4()
{
  STACK[0x350] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((LODWORD(STACK[0x3FC]) + 455) * (v0 == v3)) ^ (LODWORD(STACK[0x3FC]) - 1282))))();
}

uint64_t sub_1B0272F00()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0xB3E)))();
  LODWORD(STACK[0x620]) = v1;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((((v0 ^ 0x65C) + v0 + 580 - 1303) * (v1 == -1373544826)) ^ v0)))(v3);
}

void sub_1B0272F54()
{
  _DWORD *v0 = 1373504947;
}

void sub_1B0272F68(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = 1224239923 * (((a1 | 0x53DFEB40) - (a1 & 0x53DFEB40)) ^ 0xA16C1697);
  int v2 = *(_DWORD *)a1 ^ v1;
  int v3 = (*(unsigned char *)(a1 + 32) ^ v1);
  uint64_t v4 = (char *)*(&off_1F08CDB40 + (v2 ^ 0x45F)) - 4;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * v2 + 7432])(*(&off_1F08CDB40 + (v2 ^ 0x4E5)), sub_1B0297198);
  uint64_t v5 = *(void *)((char *)*(&off_1F08CDB40 + (v2 ^ 0x4BC)) - 4);
  int v6 = v2 + 235795823 * ((&v6 + 707848054 - 2 * ((unint64_t)&v6 & 0x2A30E776)) ^ 0xBE9DAE2F) - 887;
  uint64_t v7 = v5;
  (*(void (**)(int *))&v4[8 * v2 + 7544])(&v6);
  __asm { BRAA            X8, X17 }
}

void sub_1B02730B8()
{
}

uint64_t sub_1B027322C@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((108 * (a1 < 0x83)) ^ (v1 - 1417))))();
}

void sub_1B027326C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 3804331 * ((a1 & 0x618DD5DA | ~(a1 | 0x618DD5DA)) ^ 0x64ECD973);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0273320(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == v3) ^ (13 * (a3 ^ 0xCD))) & 1)
                                * (((a3 - 962143839) & 0x39591FD7) - 306)) ^ a3)))();
}

uint64_t sub_1B02733FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, int a14, uint64_t a15, int a16)
{
  char v24 = *(unsigned char *)(v16 + 28) - v23;
  unsigned int v25 = (((&a11 | 0xB8431E8) - (&a11 | 0xF47BCE17) - 193212905) ^ 0xB8F981BC) * v20;
  a14 = v22 + v25 + v19 + 1239 - 400160217;
  a12 = &STACK[0x3DC5316605FC20C2];
  a16 = v19 - v25 + 1568;
  a15 = v21;
  a13 = ((v24 ^ 0x93) + ((2 * v24) & 0xB2 ^ 0x90) - 65) ^ ((((&a11 | 0xE8)
                                                           - (&a11 | 0x17)
                                                           + 23) ^ 0xBC)
                                                         * v20);
  uint64_t v26 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 1893)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1420 * (a11 == v17)) ^ v19)))(v26);
}

uint64_t sub_1B02734E8(double a1)
{
  *(double *)(v3 + v5) = a1;
  return (*(uint64_t (**)(void))(v6 + 8 * ((28 * ((v1 ^ (v4 == v5)) & 1)) ^ v2)))();
}

uint64_t sub_1B0273518(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  return sub_1B025AEC8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1B027352C@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  uint64_t v7 = (v3 + a1);
  long long v8 = *(_OWORD *)(v2 + v7 - 15);
  long long v9 = *(_OWORD *)(v2 + v7 - 31);
  uint64_t v10 = a2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((95 * (((v5 + 307) ^ 0x6A3) == (v4 & 0xFFFFFFE0))) ^ (v5 - 535))))();
}

uint64_t sub_1B0273588(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((11
                                * ((a3 ^ 0x86 ^ (a7 - 21) ^ (a15
                                                                                             + a8
                                                                                             - (unint64_t)(v15 + a2) < ((a7 + (a3 ^ 0x286u) - 821) ^ 0xDE2DADF7uLL))) & 1)) ^ a3 ^ 0x286u)))();
}

uint64_t sub_1B02735EC(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v3 - 7 + (v6 + v5 + v8 - v9)) = *(void *)(a2 - 7 + (v6 + v5 + v8 - v9));
  return (*(uint64_t (**)(void))(v10
                                           + 8
                                           * (((2 * ((((a3 + 392) ^ (((a3 - 562) & v4) - v9 == 8)) & 1) == 0)) & 0xF7 | (8 * (((a3 - 120) ^ ~(((a3 - 562) & v4) - v9 == 8)) & 1))) ^ (a3 - 10))))(v7 - ((a3 - 562) & v4));
}

void sub_1B0273654()
{
}

uint64_t sub_1B027366C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  *(void *)(v31 - 136) = v30;
  *(void *)(v31 - 128) = v26;
  *(void *)(v31 - 144) = v29;
  *(_DWORD *)(v31 - 120) = v25
                         + 535753261 * ((((v31 - 144) | 0x2DE115EC) - ((v31 - 144) & 0x2DE115EC)) ^ 0x27151BC3)
                         + 539;
  *(void *)(v31 - 112) = v30;
  (*(void (**)(uint64_t))(v28 + 8 * (v25 + 1384)))(v31 - 144);
  int v32 = 1225351577 * ((((v31 - 144) | 0x1068A157) + (~(v31 - 144) | 0xEF975EA8)) ^ 0x33F27940);
  *(void *)(v31 - 136) = a25;
  *(_DWORD *)(v31 - 128) = (v27 - 584148098) ^ v32;
  *(_DWORD *)(v31 - 140) = (v25 - 650) ^ v32;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v25 ^ 0xB43)))(v31 - 144);
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((*(_DWORD *)(v31 - 144) == (v25 ^ 0xB87C55B5))
                                              * (((v25 - 535) | 0x80) - 152)) ^ v25)))(v33);
}

void sub_1B027378C()
{
}

uint64_t sub_1B0273794@<X0>(int a1@<W1>, int a2@<W5>, uint64_t a3@<X7>, int a4@<W8>)
{
  *(unsigned char *)(a3 + v6) = *(unsigned char *)(v8 + (v5 + a1))
                      - (v9 & (2 * *(unsigned char *)(v8 + (v5 + a1))))
                      - 27;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 == 63) * a4) ^ (a2 + v4 + 143))))();
}

uint64_t sub_1B02737E0()
{
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((((v2 - 817149711) & 0x30B4B4FC) + (v2 ^ 0x26D)) * (v0 == v1)) ^ v2)))(1866);
}

uint64_t sub_1B0273844(uint64_t a1)
{
  int v1 = 535753261 * ((((2 * a1) | 0x48BC2786) - a1 - 610145219) ^ 0x2EAA1DEC);
  int v2 = *(_DWORD *)a1 - v1;
  int v3 = *(_DWORD *)(a1 + 16) + v1;
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (v2 ^ 0x62E))
                              + 8
                              * ((82
                                * (((v2 - 1) ^ ((v3 - 1899470963) < 4
                                                                                                 * (unint64_t)v7)) & 1)) ^ v2)
                              - 4))();
}

uint64_t sub_1B0273918()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)(*v2 + 4 * v4) == v0 + 1863) * (((v3 - 1723) | 0x459) ^ 0xAFE)) ^ v3)))();
}

uint64_t sub_1B0273954()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1729 * ((v0 ^ v3) < (((v1 + 825) | 0x40) ^ 0x751u))) ^ v1)))();
}

void sub_1B0273998(_DWORD *a1)
{
  *((unsigned char *)a1 + v2 + 4) = -68;
  sub_1B025BE84(a1, v1 + 1);
}

uint64_t sub_1B02739C4@<X0>(int a1@<W8>)
{
  unsigned int v3 = (unsigned char *)STACK[0x440];
  v1[12] = -((-256 << (((a1 + 63) & 0xFD) + 116)) & 0xCA) - 27;
  v1[13] = -27;
  v1[14] = -27;
  v1[15] = -28;
  v3[16] ^= *v1 ^ 0xE5;
  v3[17] ^= v1[1] ^ 0xE5;
  v3[18] ^= v1[2] ^ 0xE5;
  v3[19] ^= v1[3] ^ 0xE5;
  v3[20] ^= v1[4] ^ 0xE5;
  v3[21] ^= v1[5] ^ 0xE5;
  v3[22] ^= v1[6] ^ 0xE5;
  v3[23] ^= v1[7] ^ 0xE5;
  v3[24] ^= v1[8] ^ 0xE5;
  v3[25] ^= v1[9] ^ 0xE5;
  v3[26] ^= v1[10] ^ 0xE5;
  v3[27] ^= v1[11] ^ 0xE5;
  v3[28] ^= v1[12] ^ 0xE5;
  v3[29] ^= v1[13] ^ 0xE5;
  v3[30] ^= v1[14] ^ 0xE5;
  v3[31] ^= v1[15] ^ 0xE5;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 8 * ((a1 + 11) ^ 0x80)))(3010541200, 1360, 1814, 4294967273, 10, 220, 922, 1285);
}

uint64_t sub_1B0273BE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v28 - 120) = (v23 + 843) ^ (((2 * (((v28 - 120) ^ 0x83A470D) & 0x166438A5)
                                          - ((v28 - 120) ^ 0x83A470D)
                                          - 375666854) ^ 0x8C55985E)
                                        * v27);
  *(void *)(v28 - 112) = v24;
  *(void *)(v28 - 104) = a23;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v23 ^ 0x8F0)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((49
                                              * (*(_DWORD *)(v28 - 116) == ((v23 + 21947128) & 0xFEB11FEF ^ (v26 + 451)))) ^ v23)))(v29);
}

void sub_1B0273CA0()
{
}

uint64_t sub_1B0273CAC@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  uint64_t v7 = v4 + a1;
  *(unsigned char *)(a2 + v7) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v7 + 1) < 0x38) * v5) ^ v2)))();
}

uint64_t sub_1B0273CE0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v4 ^ 0x2737DFFB) - 87394384 + (v2 & 0x4E6FBFF6) - 570578860 <= a2 - 1885)
                                * (((a2 - 1852) | 0x210) ^ 0x20A)) ^ a2)))();
}

void sub_1B0273D78()
{
}

uint64_t sub_1B0273D80(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)((((v1 ^ 0xF0B3CBC8) == ((a1 + 1020498302) & 0xC32C6F3B ^ 0x61B))
                                                   * (((a1 + 1867240005) & 0x90B42E5F) - 1291)) ^ a1)))(471039382);
}

uint64_t sub_1B0273DFC@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v3 - 0x67843F9A1244BAC7);
  int v5 = v4 - 1372200252;
  if (v4 - 1372200252 < 0) {
    int v5 = 1372200252 - v4;
  }
  *(_DWORD *)(v2 - 0x67843F9A1244BAC7) = v4;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((61
                                * ((v5 ^ (677 * (v1 ^ 0x548) - 541591663))
                                 + ((((v1 ^ 0x307) - 898204078) & 0x35897FF2 ^ 0xBF6FFD24) & (2 * v5))
                                 + 2103087015 == 1561496706)) ^ v1 ^ 0x307)))();
}

uint64_t sub_1B0273EB4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v3 + 8 * (a3 - 265)))(a1, 40, 229, 910381710, 65);
}

uint64_t sub_1B0273F00(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 3;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1B0273F20(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 16);
  __int16 v2 = *(_DWORD *)(result + 8) - -24687 * (((result | 0xEC2B) - (result & 0xEC2B)) ^ 0xE018);
  unsigned int v3 = (((2 * (v2 & 0x1FF ^ 0x1A4)) | 0x6C6A4E9C) - (v2 & 0x1FF ^ 0x1A4) - 909453134) ^ 0x943D2306;
  *(_DWORD *)(v1 - 0x843828D0CDF33CDLL) = (v3 - ((2 * v3) & 0xBEFE99B8) - 545305380) ^ 0xEEDBA632;
  *(void *)(v1 - 0x843828D0CDF33EDLL) = 0xCE2F2D4FD2980FF2;
  *(_DWORD *)(v1 - 0x843828D0CDF33D1) = 1321801015;
  int v4 = v2 ^ 0xCC;
  if (v4 == 1)
  {
    int v5 = 1321801031;
    goto LABEL_5;
  }
  if (v4 == 2)
  {
    *(_DWORD *)(v1 - 0x843828D0CDF33D5) = -1845521766;
    int v5 = 1321801035;
LABEL_5:
    *(void *)(v1 - 0x843828D0CDF33E5) = 0xBDE0D8E33568506BLL;
    *(void *)(v1 - 0x843828D0CDF33DDLL) = 0x421F271CCA97AF94;
    *(_DWORD *)(v1 - 0x843828D0CDF33D1) = v5;
  }
  *(_DWORD *)(result + 4) = 1071257447;
  return result;
}

void sub_1B02740AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  *(_DWORD *)(v9 - 120) = v8;
  *(_DWORD *)(v9 - 128) = v7;
  *(_DWORD *)(v9 - 136) = ((a7 - 194901397) & 0xB9DF55F ^ 0xFFFFFAE5) & v7;
  JUMPOUT(0x1B0274138);
}

uint64_t sub_1B0274204()
{
  BOOL v3 = v2 - 431651006 != ((7 * (v1 ^ 0x4E)) ^ 0x59C9EDAF);
  return (*(uint64_t (**)(void))(v0 + 8 * ((v3 | (4 * v3)) ^ v1)))();
}

uint64_t sub_1B0274254()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v0 == (((v1 ^ 0x6B) + 69) ^ v3)) * v2) ^ v1 ^ 0x6B)))();
}

void sub_1B0274280(uint64_t a1, int a2)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x5248BA885C210B04) = a2;
  _DWORD *v2 = v3;
  JUMPOUT(0x1B0272F60);
}

uint64_t sub_1B02742A0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v5 - 1511330940) & 0x5A1513EF ^ ((v5 + 1385) | 0xA) ^ 0x62A) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1B02742EC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((230 * (a8 + ((23 * (a7 ^ 0x524)) ^ (a2 + 1305)) < (a7 ^ 0x524u) - 93)) ^ a7)))();
}

void sub_1B0274334(uint64_t a1)
{
  int v1 = 1734042137 * (a1 ^ 0x5CCEC34D);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02743AC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v0 | (1968 * (v1 == v3)))))();
}

uint64_t sub_1B02743D0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  LODWORD(STACK[0x5B4]) = v2 + 10;
  unint64_t v4 = STACK[0x578];
  BOOL v5 = LODWORD(STACK[0x474]) == 0;
  STACK[0x4D0] = LODWORD(STACK[0x474]);
  return (*(uint64_t (**)(uint64_t, unint64_t))(v3
                                                              + 8
                                                              * ((v5 ^ (a2 + 111)) & 1 | (32 * ((v5 ^ (a2 + 111)) & 1)) | (a2 - 136))))(a1, v4);
}

uint64_t sub_1B0274418@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x5CC]) == (((a1 - 77) | 0x208) ^ (v2 - 488))) * ((a1 + 18) ^ 0xEE)) ^ a1)))();
}

uint64_t sub_1B0274458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  HIDWORD(a10) = a5;
  return sub_1B0274528(0x689170CABB1BB2A6, 0xE9F7F0EEFFBFBBEFLL, a3, 0, a5, (a3 + 2136973305), ((a7 + 228) ^ 0x9FEB7E5E) + a5, a2 - 0x67843F9A1244BAC3, a9, a10, a2, v10);
}

uint64_t sub_1B0274528(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v11 = v9 + a4 > 535525989 || v9 + a4 < a7;
  return (*(uint64_t (**)(void))(v7 + 8 * ((73 * v11) ^ v8)))();
}

uint64_t sub_1B027457C()
{
  return sub_1B02745CC((v0 - 1773207761), 1773206227, 223152103, 2865249692, 431);
}

uint64_t sub_1B02745CC@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v21 = v16 > v19;
  *(_DWORD *)(a14 + 4 * (v14 + a4)) = *(_DWORD *)(*v18 + 4 * (v14 + a4));
  if (v21 == v14 + a1 < a2) {
    BOOL v21 = v14 + a1 < v17;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((v21 * a3) ^ (v15 - 980))))();
}

uint64_t sub_1B0274630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v25 = ((&a14 + 832624133 - 2 * (&a14 & 0x31A0D605)) ^ 0x6D6E1548) * v24;
  a14 = a12;
  LODWORD(a15) = v23 - v25 - 85;
  a16 = v25 ^ (v20 - ((2 * v20) & 0xAE7A19E0) - 683864848);
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 ^ 0xB60)))(&a14);
  unsigned int v26 = 628203409 * (((~&a14 & 0xC0F0C382) - (~&a14 | 0xC0F0C383)) ^ 0x4278CFB0);
  a16 = (v19 ^ 0x7ED3DFED) + ((v19 << (v23 ^ 0x12)) & 0xFDA7BFDA) - 75700901 + v26;
  a15 = v18;
  a17 = a12;
  LODWORD(a14) = v23 + 625 - v26;
  (*(void (**)(uint64_t *))(v22 + 8 * (v23 + 1362)))(&a14);
  unsigned int v27 = 628203409
      * (((&a14 | 0x394CF50C) - &a14 + (&a14 & 0xC6B30AF0)) ^ 0xBBC4F93F);
  a17 = a12;
  a16 = (v17 ^ 0x7E56F5D8) + ((2 * v17) & 0xFCADEBB0) - 67514512 + v27;
  a15 = a9;
  LODWORD(a14) = v23 + 625 - v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v23 + 1362)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((87 * (HIDWORD(a14) == v21)) ^ v23)))(v28);
}

uint64_t sub_1B0274810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  unsigned int v20 = (a17 ^ v18) - (((a17 ^ v18) << (((v17 - 91) & 0xBF) + 68)) & 0x86F372E8) + 1132050804;
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((209
                                * (((2 * v20) & 0xF36FBF60 ^ (((v17 - 530845339) & 0x1FA40FD7) - 2107428917))
                                 + (v20 ^ 0x3ACE66C4)
                                 - 1093664896 == 948428592)) ^ v17)))();
}

uint64_t sub_1B02748CC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 >> v4) & 1) == 0) * v3) ^ v2)))();
}

uint64_t sub_1B02748F4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30
                                * (((v1 - 1102148613 < ((v0 - 425) ^ 0x6Du)) ^ (37 * ((v0 - 22) ^ 1))) & 1)) ^ (v0 + 234))))();
}

uint64_t sub_1B0274950@<X0>(int a1@<W8>)
{
  *(void *)(v4 - 220 + v1 + 1) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((28
                                * ((((v2 ^ 0x1A) - 110) ^ ((((v2 ^ 0x1A) - 1265) & a1) == 8)) & 1)) ^ v2 ^ 0x1A)))();
}

uint64_t sub_1B02749B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((v7 == 1) * a6) ^ v6)))();
}

uint64_t sub_1B02749B8@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, unsigned int a6@<W5>, void *a7@<X6>, int a8@<W7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v40 = 4 * (a4 + 1 + a5);
  unint64_t v41 = (*(_DWORD *)(a28 + v40) ^ v28) + (a2 ^ HIDWORD(v33)) + a6 * (unint64_t)(*(_DWORD *)(*a7 + v40) ^ v28);
  unint64_t v42 = HIDWORD(v39)
      + v36 * (unint64_t)(*(_DWORD *)(*v34 + v40) ^ v28)
      + ((v41 + v38 - (((a9 ^ v29) * v31 + v32) & (2 * v41))) ^ v37);
  *(_DWORD *)(a28 + 4 * (a4 + a5)) = v42 + v28 - (a1 & (2 * v42));
  BOOL v44 = a4 + a8 > v30 || a4 + a8 < a3;
  return (*(uint64_t (**)(void))(v35 + 8 * (((2 * v44) | (4 * v44)) ^ a9)))();
}

void sub_1B0274A5C()
{
}

uint64_t sub_1B0274A68@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 - 0x67843F9A1244BAC3) + 4
                                                                                      * (v2 + v5 - 1)) != v3)
                                * (((2 * (v1 ^ 0x3FA)) ^ 0x1D) - 446)) ^ (2 * (v1 ^ 0x3FA)))))();
}

uint64_t sub_1B0274AC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v16 = ((2
        * ((a13 ^ (v13 + (v14 ^ 0xE8C) - 1665)) - ((2 * (a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))) & 0x86F372E8) + 1132050804)) & 0xF36FBF60 ^ 0x82633260)
      + ((v14 - 36) ^ 0x3ACE612D ^ ((a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))
                                  - ((2 * (a13 ^ (v13 + (v14 ^ 0xE8C) - 1665))) & 0x86F372E8)
                                  + 1132050804))
      - 1093664896 != 948428592;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v16 | (v16 << 6)) ^ v14)))();
}

void sub_1B0274B58(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 - 535753261 * ((a1 + 317168069 - 2 * (a1 & 0x12E799C5)) ^ 0x181397EA);
  uint64_t v2 = *(void *)(a1 + 8);
  v4[0] = v1 + 235795823 * (((~v4 & 0x980B8B58) - (~v4 | 0x980B8B59)) ^ 0xCA6C200) - 709;
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_1F08CDB40 + v1 - 1183) - 4;
  (*(void (**)(_DWORD *))&v3[8 * (v1 ^ 0xDAF)])(v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0274C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8 * ((61 * (v6 - 1397079335 < ((a6 + v7 - 523) | 0x600u) - 1671)) ^ (a6 + v7 + 969))))();
}

uint64_t sub_1B0274CA8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 ^ 0x78C ^ (a2 - 633333131) & 0x25BFDFFC) * (v2 == v3)) ^ a2)))();
}

void sub_1B0274CF8(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x35FF68D50C8F4093) - 865915663;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 + 987557569;
  BOOL v4 = v2 < 0x6116E8DA;
  BOOL v5 = v2 > v3;
  if (v3 < 0x6116E8DA != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0274DEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v7
                                                                      + 8
                                                                      * (((((11 * (a6 ^ 0x7F8)) ^ 0x49C) - 1333)
                                                                        * (v6 < 0x10)) ^ a6 ^ 0x432)))(a1, a2, a3, 0);
}

uint64_t sub_1B0274E30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((((a10 - 1098794476) < 0xFFFFFFFB)
                                              * (((v11 - 31) | 0x19C) ^ 0x1B6)) ^ (v11 + 1105))))(a1);
}

uint64_t sub_1B0274E88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = v5 - (((v5 << ((68 * (v4 ^ 0x53)) ^ 0xCD)) + 1726115104) & 0x86F372E8) - 152375292;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((1022
                                                                                  * (((2 * v7) & 0xF36FBF60 ^ 0x82633260)
                                                                                   + (v7 ^ 0x3ACE66C4)
                                                                                   - 1093664896 == 948428592)) ^ (v4 + 171))))(a1, a2, 1373504863, a4, 948428592);
}

uint64_t sub_1B0274F54@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W6>, uint64_t a4@<X8>)
{
  int v12 = v8 + v6;
  int v13 = *(_DWORD *)(a4 + 4 * (v8 + v6 - 8)) ^ *(_DWORD *)(a4 + 4 * (v8 + v6 - 3));
  int v14 = v13 + v11 - (a3 & (2 * v13));
  int v15 = *(_DWORD *)(a4 + 4 * (v12 - 16)) ^ *(_DWORD *)(a4 + 4 * (v12 + ((v4 + v7) & a1) - 553));
  HIDWORD(v16) = v15 ^ v14 ^ v9;
  LODWORD(v16) = v15 ^ ~v14;
  *(_DWORD *)(a4 + 4 * (v5 + v8)) = (v16 >> 31) + v11 - (a3 & (2 * (v16 >> 31)));
  return (*(uint64_t (**)(void))(v10 + 8 * ((((v5 + 1 + v8) > 0x4F) * a2) ^ v4)))();
}

uint64_t sub_1B0274FE4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * (((v0 == v1) ^ ((v2 + 89) ^ (v2 - 50))) & 1)) ^ v2)))();
}

uint64_t sub_1B0275028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((494 * (a5 + 1 == v7 + 16)) ^ v5)))();
}

uint64_t sub_1B0275118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((((v8 ^ 0x30u) >= ((v9 - 604) ^ 0xB0u))
                                     * ((v9 - 272175909) & 0xFD7F9CFF ^ (a8 - 53))) ^ v9)))();
}

uint64_t sub_1B0275168()
{
  return sub_1B0275170();
}

uint64_t sub_1B0275170@<X0>(int a1@<W0>, int a2@<W3>, int a3@<W4>, int a4@<W8>, int8x16_t a5@<Q0>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(v10 + (v6 + a1 + v7));
  *(int8x16_t *)(v8 + v7) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 != 48) * a2) ^ (a3 + a4 - 48))))();
}

void sub_1B02751B8()
{
}

void sub_1B02751C0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, uint64_t a5, uint64_t a6)
{
  a5 = v6;
  a6 = v7;
  a3 = v7;
  a4 = v8 - 535753261 * ((&a3 & 0x2344C342 | ~(&a3 | 0x2344C342)) ^ 0xD64F3292) + 920;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 ^ 0x8D8)))(&a3);
  JUMPOUT(0x1B0275220);
}

uint64_t sub_1B0275248(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F08CE000 + 8 * ((107 * (*(_DWORD *)(a2 + 4) == 1284426097)) ^ 0x528u) - 4))();
}

uint64_t sub_1B0275284()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 1048)) - 4) == 0)
                                * ((541 * (v1 ^ 0x434)) ^ 0x436)) ^ v1)))();
}

uint64_t sub_1B02752C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  uint64_t v15 = (a6 + v9);
  *(unsigned char *)(v14 + v15) ^= *(unsigned char *)(v11 + (v15 & 0xF)) ^ *(unsigned char *)(v10 + (v15 & 0xF)) ^ *(unsigned char *)(v12 + (v15 & 0xF)) ^ (5 * (v15 & 0xF)) ^ 0xE5;
  return (*(uint64_t (**)(void))(v13 + 8 * ((1940 * (a6 - 1 == v8)) ^ (a8 - 545))))();
}

void sub_1B0275324()
{
}

uint64_t sub_1B0275388(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((125 * ((((v1 ^ 0xFFFFFC4E) + v1 + 396) & (a1 + v3 - (v2 & 3) + 638)) > a1 + v3 + 641)) ^ v1)))();
}

uint64_t sub_1B02753D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v17 - 128) = v16;
  *(void *)(v17 - 120) = a13;
  *(_DWORD *)(v17 - 136) = (v15 + 461) ^ (((((2 * (v17 - 136)) | 0x313D44FC) - (v17 - 136) - 413049470) ^ 0x756ABA77)
                                        * v13);
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 + 1490)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((60 * (*(_DWORD *)(v17 - 132) - 645999914 < (v15 ^ 0xF1C487B8))) ^ v15)))(v18);
}

uint64_t sub_1B0275488@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, int a4@<W6>, _DWORD **a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v27 = v16 > v18;
  uint64_t v28 = 4 * (int)(v24 + ((v26 + v19) & v20 ^ (a2 + 1481)));
  unsigned int v29 = (v14 ^ 0x974770DA) + (v25 ^ v15) * (**a5 ^ v15) + (*(_DWORD *)(a14 + v28) ^ v15);
  *(_DWORD *)(a14 + v28) = (v29 + a1 - (v21 & (2 * v29))) ^ v22;
  if (v27 == a3 + 1 < a6) {
    BOOL v27 = a3 + 1 < a4;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((!v27 * v17) ^ v26)))();
}

void sub_1B027553C(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02755A0@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((a3 == ((v3 - 270) ^ (a1 + 108))) * (a2 + ((v3 - 3151787) & 0xED769FEF) - 361)) ^ v3)))();
}

uint64_t sub_1B02755F0@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,int a45)
{
  unint64_t v48 = STACK[0x5F0];
  uint64_t v49 = (v46 + 105647720);
  int v50 = *(_DWORD *)(a1 - 0x843828D0CDF33E5 + v49);
  *(unsigned char *)(v48 + v49) = ((a45 - 125) ^ HIBYTE(v50) ^ 2) - ((2 * ((a45 - 125) ^ HIBYTE(v50))) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647721)) = (BYTE2(v50) ^ 0x2D) - ((2 * (BYTE2(v50) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647722)) = (BYTE1(v50) ^ 0x73) - ((2 * (BYTE1(v50) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(v48 + (v46 + 105647723)) = v50 ^ 0x8F;
  LODWORD(v49) = *v45 + 1005959301;
  BOOL v51 = v49 < 0x8ABECDBC;
  BOOL v52 = v49 > 0x8ABECDC0;
  if (v51) {
    BOOL v52 = v51;
  }
  return (*(uint64_t (**)(void))(v47 + 8 * (v52 | (a45 - 1))))();
}

uint64_t sub_1B02756DC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((22 * (v5 - v3 < (unint64_t)(((a3 - 1094) | 0x46u) - 209) - 341)) ^ a3)))(v4);
}

uint64_t sub_1B0275718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  *(_DWORD *)(v18 - 136) = (v16 + 826) ^ (1374699841
                                        * ((2 * ((v18 - 136) & 0x2F83ECE8) - (v18 - 136) + 1350308629) ^ 0x3D880B1C));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0x8DF)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((504 * (*(_DWORD *)(v18 - 132) == v14 + 288 * (v16 ^ 0xF2) - 574)) ^ v16)))(v19);
}

void sub_1B02757C4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02758E4@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x28C]) = v2 + 130;
  unint64_t v6 = STACK[0x3C8];
  *(_DWORD *)(v6 + 392) = a1;
  *(_DWORD *)(v6 + 396) = STACK[0x42C];
  *(void *)(v6 + 400) = STACK[0x570];
  *(_DWORD *)(v6 + 408) = ((v2 + 344) ^ 0x350E6C07) - v4 + LODWORD(STACK[0x528]);
  *(void *)(v6 + 416) = STACK[0x3A0] + (v4 + 1800160278);
  int v7 = (*(uint64_t (**)(unint64_t, unint64_t))(v1 + 48 * v3 + 8))(STACK[0x348], STACK[0x248]);
  return (*(uint64_t (**)(__n128))(v5
                                           + 8
                                           * (((v7 - 1373544826 - ((2 * v7) & 0x5C42BD0C) == -1373544826)
                                             * (LODWORD(STACK[0x28C]) ^ 0x770)) ^ v2)))((__n128)0);
}

uint64_t sub_1B02759BC@<X0>(int a1@<W8>)
{
  STACK[0x3D8] = v2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 == v1 + ((a1 - 632879372) ^ 0xDA4707F5) - 78)
                                * ((a1 - 632879372) & 0x25B8F8F7 ^ 0x648)) ^ (a1 - 7))))();
}

void sub_1B0275A38()
{
}

void sub_1B0275A44()
{
}

uint64_t sub_1B0275A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v13 = a11 + 4198659 < ((v12 - 55) ^ v12 ^ 0xB65 ^ 0x7FFFF552u);
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * v13) | (4 * v13)) ^ v12)))();
}

void sub_1B0275AB4(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (v2 + a1 + 1)) == v3;
  _DWORD *v6 = (((v5 + 201) | 0x9D) ^ 0x79773F3D) - 1678393466 * (a1 - v7) + (v2 + a1 - v7 + 2) * v1;
}

uint64_t sub_1B0275B04@<X0>(int a1@<W4>, int a2@<W8>)
{
  *(unsigned char *)(v5 + (v8 + v4 + a1)) = *(unsigned char *)(v3 + (v8 + v4 + a1));
  return (*(uint64_t (**)(void))(v2 + 8 * (((v8 - 1 != a2) * v7) ^ v6)))();
}

uint64_t sub_1B0275B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16, unint64_t *a17, unint64_t *a18, unint64_t *a19, unsigned int a20)
{
  a17 = a12;
  a18 = &STACK[0xC9996988DE51B2];
  a19 = &STACK[0x6A4735A87A26440D];
  a20 = (v20 - 883) ^ (1225351577
                     * ((((&a15 | 0x2B2818A2) ^ 0xFFFFFFFE) - (~&a15 | 0xD4D7E75D)) ^ 0xF74D3F4B));
  (*(void (**)(unsigned int *))(v21 + 8 * (v20 ^ 0xE28)))(&a15);
  a17 = &STACK[0x18D17CD12703C5F7];
  a18 = a12;
  a15 = (v20 - 193) ^ (1374699841
                     * ((2 * (&a15 & 0x69BA0620) - &a15 - 1773798946) ^ 0xFBB1E1D7));
  (*(void (**)(unsigned int *))(v21 + 8 * (v20 + 500)))(&a15);
  a15 = v20 + 1225351577 * (&a15 ^ 0x239AD816) + 437;
  a17 = a12;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * (v20 + 511)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((344 * (a16 == ((v20 - 104) ^ 0xAE21589F))) | v20)))(v22);
}

uint64_t sub_1B0275CB4@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v7 = a3 + v5;
  *(unsigned char *)(a2 + v7) = a1;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((v7 + (unint64_t)(((v3 - 677) | 0x488) ^ 0x4B5u) - 62 < 0x38) * v4) ^ ((v3 - 677) | 0x488))))();
}

uint64_t sub_1B0275CF8(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  *a3 = 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v4 + v6 + 307) ^ ((2 * (a4 == 0)) | (4 * (a4 == 0))))))();
}

uint64_t sub_1B0275D24(uint64_t a1)
{
  return sub_1B0275D2C(a1, *v1);
}

uint64_t sub_1B0275D2C(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0xAAD)))(*v6, a2, (v2 ^ 0x84u) - 1359519636 + *(_DWORD *)(v3 - 0x7761D79CB8DF4D0BLL));
  *int v9 = v8;
  *(_DWORD *)(v3 - 0x7761D79CB8DF4D0BLL) = v7;
  _DWORD *v5 = v7;
  return result;
}

void sub_1B0275DAC()
{
  _DWORD *v0 = -1123209429;
}

uint64_t sub_1B0275DB8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * ((((((v4 & 0x18) == 0) ^ a4 ^ 0x11) & 1)
                                             * (((a4 - 28) | 0xA0) ^ 0x4D)) ^ a4)))((v5 - v6));
}

void sub_1B0275DFC()
{
}

uint64_t sub_1B0275E08@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v31 = 4 * (v25 - 108174678);
  unsigned int v32 = *(_DWORD *)(v29 + 4 * (v25 - 108174679));
  int v33 = (a1 + ((v32 >> 30) ^ 1) + 2 * (((v32 >> 30) ^ 1 | 0x7FFFFFFE) ^ (v32 >> 30)) + 2) ^ v32;
  int v34 = ((a1 + 1566083941 * v33 - ((-1162799414 * v33) & 0xAE0C3E6C)) ^ *(_DWORD *)(v29 + v31)) - v25;
  *(_DWORD *)(v29 + v31) = v34 - ((2 * v34 + 216349356) & 0xAE0C3E6C) + 1568193676;
  unint64_t v35 = 1759421093 * ((0x79B31E4EFDD16787 - (v28 | 0x79B31E4EFDD16787) + a25) ^ 0xA8F220E1B153282CLL);
  *(_DWORD *)(v30 - 144) = v35;
  *(void *)(v30 - 136) = (v25 + 472643171) - v35;
  *(_DWORD *)(v30 - 128) = -1098935330 - v35 + a2;
  *(_DWORD *)(v30 - 124) = a2 - 1340386951 - v35;
  *(_DWORD *)(v30 - 112) = ((a2 - 1340386951) ^ 6) - v35;
  *(_DWORD *)(v30 - 104) = ((a2 - 1340386951) ^ 0x78) - v35;
  *(void *)(v30 - 120) = v35 ^ 0x229E93B8;
  uint64_t v36 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v27 + a2 + 1393)))(v30 - 144);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * *(int *)(v30 - 108)))(v36);
}

uint64_t sub_1B0275F6C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ 0x59Fu) - 1372201613 + *(_DWORD *)(a1 + 532) < 0x7FFFFFFF) * ((v1 ^ 0x73) + 504)) ^ v1)))();
}

uint64_t sub_1B0275FBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v18 - 120) = v17
                         + 535753261 * ((~((v18 - 144) | 0xFD65ADB9) + ((v18 - 144) & 0xFD65ADB9)) ^ 0x86E5C69)
                         + 1069;
  *(void *)(v18 - 112) = v13;
  *(void *)(v18 - 136) = v13;
  *(void *)(v18 - 128) = v15;
  *(void *)(v18 - 144) = v14;
  (*(void (**)(uint64_t))(v16 + 8 * (v17 ^ 0x986)))(v18 - 144);
  int v19 = 1225351577 * ((v18 + 1601168125 - 2 * ((v18 - 144) & 0x5F6FE38D)) ^ 0x7CF53B9B);
  *(void *)(v18 - 136) = a12;
  *(_DWORD *)(v18 - 140) = (v17 - 120) ^ v19;
  *(_DWORD *)(v18 - 128) = (v17 + 824 + v12 - 584149201) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1875)))(v18 - 144);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((58 * (*(_DWORD *)(v18 - 144) == -1199810916)) ^ v17)))(v20);
}

uint64_t sub_1B02760F0()
{
  *(_DWORD *)(*(void *)(v4 - 0x67843F9A1244BAC3) + 4 * (v0 + v1 + 1)) = 455190778;
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * ((((v0 + v1) < 0x7FFFFFFF) * (v2 ^ 0x757)) ^ (v2 + 155))))((v0 - 1));
}

uint64_t sub_1B027619C@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (v4 + a1 + 811)) = *(unsigned char *)(v5 + (v4 + a1 + 811))
                                                 - ((*(unsigned char *)(v5 + (v4 + a1 + 811)) << ((a2 ^ 0xF1) + 125)) & 0xCA)
                                                 - 27;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1051 * (a1 - 1 == a3)) ^ a2)))();
}

uint64_t sub_1B02761EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x4E0] = v63;
  STACK[0x460] = v65;
  STACK[0x520] = *(void *)(v66 + 8 * v64);
  unint64_t v67 = STACK[0x380];
  STACK[0x468] = ((v64 + 1210) ^ 0x48ALL) + STACK[0x278];
  STACK[0x4E8] = v67;
  if (v67) {
    BOOL v68 = a63 == 0;
  }
  else {
    BOOL v68 = 1;
  }
  int v69 = v68;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v66
                                                                                         + 8
                                                                                         * ((v69 * (v64 + 422)) ^ (v64 + 1210))))(1219, 1189, 1373504863, a4, a5, 2682113404);
}

uint64_t sub_1B02762C0(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (a1 ^ (4
                                     * (v2 + v1 + (((a1 - 1410) | 0x120) ^ 0x864821E0) >= ((a1 - 658816563) & 0x2744BA6B ^ 0x243u))))))();
}

uint64_t sub_1B0276328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18)
{
  unsigned int v24 = (((&a15 ^ 0x227EE9EA) & 0x95A0AE03 | ~(&a15 ^ 0x227EE9EA | 0x95A0AE03)) ^ 0x14EF7B5B)
      * v23;
  LODWORD(a16) = v21 - v24 - 859;
  a17 = (v20 - ((v20 << (v21 - 24)) & 0xAE7A19E0) - 683864848) ^ v24;
  a15 = a11;
  (*(void (**)(uint64_t *))(v22 + 8 * (v21 ^ 0xE6A)))(&a15);
  unsigned int v25 = 628203409 * ((((2 * &a15) | 0xF1DB8CC) - &a15 + 2020680602) ^ 0x506D055);
  a16 = v18;
  a18 = a11;
  LODWORD(a15) = v21 - v25 - 149;
  a17 = (v19 ^ 0x7ADDFFFE) + ((v19 << (((v21 + 39) | 0xA) - 73)) & 0xF5BBFFFC) + v25 - 9255606;
  uint64_t v26 = (*(uint64_t (**)(uint64_t *))(v22 + 8 * (v21 + 588)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((52 * (HIDWORD(a15) == -1373544826)) ^ v21)))(v26);
}

uint64_t sub_1B0276490()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v2 - 652) ^ 0x15B ^ ((v2 - 652) | v3) ^ 0x53)
                                * ((v1 + v0 - 2042093488) < 8)) ^ v2)))();
}

uint64_t sub_1B02764EC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((*(void *)(qword_1F08CDC30 - 4) == 0) * (a1 ^ 0xF7)) ^ v1)))();
}

uint64_t sub_1B027652C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  STACK[0x278] = a7;
  int v39 = (LODWORD(STACK[0x3FC]) - 2018854263) & 0x78554576;
  unint64_t v40 = STACK[0x458];
  unint64_t v41 = STACK[0x430];
  unint64_t v42 = STACK[0x350];
  STACK[0x3D8] = (unint64_t)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E67DLL;
  STACK[0x3D0] = a38 + v42;
  int v43 = 91 * (v39 ^ 0x557);
  int v44 = v39 - 544;
  if (v40) {
    BOOL v45 = v41 == 0;
  }
  else {
    BOOL v45 = 1;
  }
  int v46 = v45;
  return (*(uint64_t (**)(void))(v38 + 8 * ((v46 * (v43 - 538)) ^ v44)))();
}

uint64_t sub_1B02765D8@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v1 + 1428);
  if (v4 == 604952962 || v4 == 604952958) {
    return (*(uint64_t (**)(void))(v3
  }
                                + 8
                                * ((1932 * (*(_DWORD *)(a1 + 476) == LODWORD(STACK[0x3FC]) + 141254224)) ^ (LODWORD(STACK[0x3FC]) - 1153))))();
  STACK[0x468] = STACK[0x278];
  return v2();
}

void sub_1B02766D0()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1353));
  JUMPOUT(0x1B02582B4);
}

uint64_t sub_1B02766FC@<X0>(int a1@<W8>)
{
  STACK[0x390] = v3;
  LODWORD(STACK[0x43C]) = a1;
  uint64_t v5 = (*(uint64_t (**)(unint64_t, void))(v4 + 8 * (v2 ^ 0xB6D)))(STACK[0x388], 0);
  unsigned int v6 = v1[4] + 1460018998 - ((2 * v1[4]) & 0xAE0C3E6C);
  v1[1] = ((v2 - 754) | 0x450) + 1460018998 + v1[6] - ((2 * v1[6]) & 0xAE0C3E6C) - 1360;
  v1[2] = v6;
  int v7 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v2 + 1173)))(v5);
  v1[3] = v7 + 1460018998 - ((2 * v7) & 0xAE0C3E6C);
  int v8 = (*(uint64_t (**)(void))(v4 + 8 * (v2 + 1173)))();
  _DWORD *v1 = v8 + 1460018998 - ((2 * v8) & 0xAE0C3E6C);
  return sub_1B02767D4();
}

uint64_t sub_1B02767D4()
{
  uint64_t v9 = 4 * (v4 - 1364770032);
  int v10 = (((*(_DWORD *)(v5 + 4 * (v4 - 1364770033)) >> 30) ^ 1)
       + v1
       - 4 * (*(_DWORD *)(v5 + 4 * (v4 - 1364770033)) >> 31)) ^ *(_DWORD *)(v5
                                                                                          + 4
                                                                                          * (v4 - 1364770033));
  int v11 = (*(_DWORD *)(v2 + 4 * (v3 - 843764935)) ^ v1)
      + v3
      - 843764935
      + ((v1 + 1664525 * v10 - ((3329050 * v10) & v0)) ^ *(_DWORD *)(v5 + v9));
  *(_DWORD *)(v5 + v9) = v11 + v1 - (v0 & (2 * v11));
  unint64_t v12 = STACK[0x3F0];
  *(void *)(v8 - 168) = STACK[0x3F0] ^ 0x7B9DCDD1;
  *(void *)(v8 - 184) = (v4 + 709169378) - v12;
  *(_DWORD *)(v8 - 192) = v12;
  int v13 = v6 + 1473596429 - v12;
  *(_DWORD *)(v8 - 160) = ((v6 + 1473596429) ^ 0x15) - v12;
  *(_DWORD *)(v8 - 152) = v13 - 83;
  *(_DWORD *)(v8 - 176) = 2021362417 - v12 + v6;
  *(_DWORD *)(v8 - 172) = v13;
  uint64_t v14 = (*(uint64_t (**)(uint64_t))(v7 + 8 * (v6 + 830)))(v8 - 192);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * *(int *)(v8 - 156)))(v14);
}

uint64_t sub_1B02768E8@<X0>(int a1@<W0>, unsigned int a2@<W8>)
{
  return sub_1B0264B40(a1, a2);
}

void sub_1B0276C7C(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v1 = 3804331 * ((a1 & 0x499EDE0F | ~(a1 | 0x499EDE0F)) ^ 0x4CFFD2A6);
  int v2 = *(_DWORD *)(a1 + 32) + v1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  int v5 = *(_DWORD *)(a1 + 68) - v1;
  int v11 = 950047403;
  int v12 = 1372200252;
  int v13 = &v8;
  uint64_t v9 = 0x51CA1D3C38A0932CLL;
  int v10 = &v14;
  if (v3 | v4) {
    BOOL v6 = v5 == 1106882886;
  }
  else {
    BOOL v6 = 1;
  }
  char v7 = v6;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B0276DD8(_DWORD *a1)
{
  *((unsigned char *)a1 + v1 + ((v2 - 1444348490) & 0x76BFFFEAu) - 1633758198) = 103;
  *a1 = v1;
  return 0;
}

uint64_t sub_1B0276E64(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((200 * (((v4 == 867756946) ^ (a3 + 125)) & 1)) ^ a3)))();
}

uint64_t sub_1B0276ED8(uint64_t a1, uint64_t a2)
{
  unsigned int v6 = **(unsigned __int8 **)(a2 + 8) + ((v4 + 772643872) & 0xD1F25F7F ^ 0xFFFFFDC9);
  return (*(uint64_t (**)(void))(v5 + 8 * ((267 * ((v3 & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_1B0276F30@<X0>(uint64_t a1@<X8>)
{
  int v7 = (*(unsigned __int8 *)(a1 + 1128) ^ v2) - *(unsigned __int8 *)(v4 + 1148);
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8
                                            * ((1772
                                              * ((v7 ^ v3) + 2061418368 + ((v7 << ((v1 + 118) ^ 0x51)) & v5) != 1784331903)) ^ v1)))(368044921);
}

void sub_1B0276FA8()
{
}

uint64_t sub_1B0276FB0@<X0>(int a1@<W8>)
{
  uint64_t v9 = *(unsigned int **)(v7 + 8 * (a1 ^ 0x4BB));
  uint64_t v10 = *(void *)(v7 + 8 * (a1 ^ 0x4F4));
  uint64_t v11 = *v9;
  int v12 = *(unsigned char **)(v10 - 4);
  v23[0] = *v12 - 43;
  v23[1] = v12[1] - 43;
  v23[2] = v12[2] - 43;
  v23[3] = v12[3] - 43;
  v23[4] = v12[4] - 43;
  v23[5] = v12[5] - 43;
  v23[6] = v12[6] - 43;
  v23[7] = v12[7] - 43;
  v23[8] = v12[8] - 43;
  v23[9] = v12[9] - 43;
  v23[10] = v12[10] - 43;
  v23[11] = v12[11] - 43;
  v23[12] = v12[12] - 43;
  v23[13] = v12[13] - 43;
  v23[14] = v12[14] - 43;
  v23[15] = v12[15] - 43;
  v23[16] = v12[16] - 43;
  v23[17] = v12[17] - 43;
  v23[18] = v12[18] - 43;
  v23[19] = v12[19] - 43;
  v23[20] = v12[20] - 43;
  v23[21] = v12[21] - 43;
  int v13 = *(unsigned char **)(v10 - 4);
  v23[22] = v13[22] - 43;
  v23[23] = v13[23] - 43;
  v23[24] = v13[24] - 43;
  v23[25] = v13[25] - 43;
  v23[26] = v13[26] - 43;
  v23[27] = v13[27] - 43;
  unsigned char v23[28] = v13[28] - 43;
  v23[29] = v13[29] - 43;
  int v14 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (a1 + 939)))(v11, v23, v2);
  unsigned int v15 = ((2 * v14) & 0xB3DBFBFE) + (v14 ^ 0xD9EDFDFF);
  if (v15 != -638714369)
  {
    if (v15 == -638713267)
    {
      uint64_t v16 = *v9;
      int v17 = **(unsigned char ***)(v7 + 8 * (v4 ^ 0x4EE));
      v22[0] = *v17 - 77;
      v22[1] = v17[1] - 77;
      v22[2] = v17[2] - 77;
      v22[3] = v17[3] - 77;
      v22[4] = v17[4] - 77;
      v22[5] = v17[5] - 77;
      v22[6] = v17[6] - 77;
      v22[7] = v17[7] - 77;
      v22[8] = v17[8] - 77;
      v22[9] = v17[9] - 77;
      v22[10] = v17[10] - 77;
      v22[11] = v17[11] - 77;
      v22[12] = v17[12] - 77;
      v22[13] = v17[13] - 77;
      v22[14] = v17[14] - 77;
      v22[15] = v17[15] - 77;
      v22[16] = v17[16] - 77;
      v22[17] = v17[17] - 77;
      v22[18] = v17[18] - 77;
      v22[19] = v17[19] - 77;
      int v18 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (v4 ^ 0xCB5)))(v16, v22, v2);
      unsigned int v19 = (2 * v18) & 0xB5F7DEFE;
      unsigned int v15 = (v18 ^ 0xDAFBEF7F) + 2112749055;
    }
    else
    {
      unsigned int v19 = 2130440063;
    }
    __asm { BRAA            X8, X17 }
  }
  *(_DWORD *)(v8 + 348) |= (v4 - 117) ^ 0x458;
  *(_DWORD *)(v8 + 48) = 490784367;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, _DWORD *))(v5 + 8 * (v4 ^ 0xC60)))(*v2, v8 + 336, v8 + 340, v8 + 344, v3);
  uint64_t v21 = *(void *)(v1 + 24);
  *(_DWORD *)(*(void *)(v1 + 8) - 0x1401A874B35F4D7BLL) = *v2;
  *(_DWORD *)(v21 - 0xD547898781B11C0) = *v3;
  *(_DWORD *)(v1 + 16) = -1373544826;
  return result;
}

uint64_t sub_1B0277360(int8x8_t a1, int8x8_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v12 = v7 - 8 + (v6 ^ (v5 + 329));
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v9 + v12));
  *(int8x8_t *)(a4 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), a1)), a2));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 == -8) * v10) ^ a5)))();
}

uint64_t sub_1B027736C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  STACK[0x4B0] = a1;
  LODWORD(STACK[0x4F4]) = v36;
  unint64_t v38 = STACK[0x440];
  STACK[0x498] = 335;
  *(unsigned char *)(v38 + 335) = ((a35 - 2) ^ 0xBA) * (a35 + 15);
  return (*(uint64_t (**)(void))(v37
                              + 8
                              * (((8 * (STACK[0x498] != 0)) | (16 * (STACK[0x498] != 0))) ^ (4 * ((v35 - 295) ^ 0x4FB)))))();
}

uint64_t sub_1B027740C()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v0 + 738)))();
  LODWORD(STACK[0x5CC]) = v1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8 * ((((v0 - 477) ^ 0x3A6) * v2) ^ (v0 + 512))))(v4, 249, 1373504863);
}

uint64_t sub_1B0277458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v10 = *v9 - 1061210124;
  int v11 = (v7 - 1061210124 < -1836493520) ^ (v10 < ((a7 - 316) | 0x122) - 1836494346);
  BOOL v12 = v7 - 1061210124 > v10;
  if (v11) {
    BOOL v13 = v7 - 1061210124 < -1836493520;
  }
  else {
    BOOL v13 = v12;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * v13) | (32 * v13)) ^ a7)))();
}

uint64_t sub_1B02774C4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (a1 + v7)) = *(_DWORD *)(*v4 + 4 * (a1 + v7));
  return (*(uint64_t (**)(void))(a2 + 8 * (((v6 + a1 != v2) * v8) ^ v5)))();
}

void sub_1B02774CC()
{
  unint64_t v3 = STACK[0x5E8];
  unsigned int v4 = 628203409 * ((((2 * v1) | 0xBDDF856C) - v1 + 554712394) ^ 0x5C67CE85);
  *(_DWORD *)(v2 - 192) = v0 + 1172345424 + v4 + 8;
  *(_DWORD *)(v2 - 184) = v4 - 290923570;
  *(void *)(v2 - 176) = v3;
  JUMPOUT(0x1B027753CLL);
}

uint64_t sub_1B027760C()
{
  STACK[0x468] = STACK[0x350];
  return ((uint64_t (*)(void))STACK[0x390])();
}

void sub_1B0277624()
{
}

uint64_t sub_1B0277630(uint64_t a1, uint64_t a2)
{
  unsigned int v4 = (v2 + 445878254) & 0xE56C69DF;
  uint64_t v5 = (*(uint64_t (**)(void, uint64_t, void))(v3 + 8 * (v2 + 500)))(*(unsigned int *)STACK[0x2B8], a2, LODWORD(STACK[0x470]));
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((LODWORD(STACK[0x5CC]) == (((v4 - 77) | 0x208) ^ 0xAE215C9E))
                                                   * ((v4 + 18) ^ 0xEE)) ^ v4)))(v5);
}

void sub_1B02776B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 40) ^ (1759421093 * ((-746607788 - (a1 | 0xD37FAB54) + (a1 | 0x2C8054AB)) ^ 0x9FFDE4FF));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02777E0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 - 1582647308)) = *(unsigned char *)(v3 + (v4 - 1582647308)) - 108;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1567 * ((a2 ^ 0x607) + v4 - 1996 == a3)) ^ a2)))();
}

uint64_t sub_1B0277828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(_OWORD *)(a4 + v7) = *v5;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 == 0) * v6) ^ v4)))();
}

void sub_1B0277854()
{
}

uint64_t sub_1B0277860()
{
  int v4 = *(_DWORD *)(v1 + 52) + 1335741915;
  int v5 = 1759421093 * ((((2 * (v3 - 192)) | 0xD19EEED6) - (v3 - 192) - 1758426987) ^ 0xDBB2C73F);
  *(void *)(v3 - 192) = v1 + 0x1B326768DCF9E3CELL;
  int v6 = LODWORD(STACK[0x288]) ^ v5;
  *(_DWORD *)(v3 - 184) = v0 - v5 - 95;
  *(_DWORD *)(v3 - 180) = v6;
  int v7 = LODWORD(STACK[0x2D0]) - v5 - 1089889616;
  *(void *)(v3 - 152) = STACK[0x338];
  *(_DWORD *)(v3 - 160) = v7;
  *(_DWORD *)(v3 - 168) = v4 ^ v5;
  *(void *)(v3 - 176) = &STACK[0x660];
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 2124)))(v3 - 192);
  int v9 = *(_DWORD *)(v3 - 164);
  LODWORD(STACK[0x5B4]) = v9;
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((1321 * (v9 == ((16 * v0) ^ 0x5CF) - 1373545657)) ^ v0)))(v8);
}

uint64_t sub_1B027796C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v29 = v22 + 1;
  int v30 = (*v26 - 575680361) * (v27 ^ 0x1B21A955 ^ *(_DWORD *)(a18 + 4 * (v29 - 414666719)));
  int v31 = 1225351577 * ((v23 + v25 - 2 * (v23 & v25)) ^ 0x7986CD05);
  *(void *)(v28 - 120) = a13;
  *(void *)(v28 - 112) = a14;
  *(_DWORD *)(v28 - 104) = v31 + v29 + 957533533;
  *(_DWORD *)(v28 - 128) = (v30 ^ 0xF4FFFED2) - v31 + ((2 * v30) & 0xE9FFFDA4) + 2144733696;
  *(_DWORD *)(v28 - 124) = v31 + v24 - 196;
  uint64_t v32 = (*(uint64_t (**)(uint64_t))(v20 + 8 * v19))(v28 - 128);
  BOOL v34 = v29 - 1570050566 > 992099799 || v29 - 1570050566 < v18;
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((v34 * v21) ^ v24)))(v32);
}

uint64_t sub_1B0277974@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (int)(v4 + 218)))(**(unsigned int **)(v2 + 8 * (int)(v4 - 1793)), va, (((a1 - 540034060) << ((v4 + 67) & 0x9F ^ 0x8E)) & 0xAEB3A000)+ ((((v4 - 837429437) ^ 0xCE15DCD7) + 1465506759) ^ (a1 - 540034060) & 0xFFFFF000)- 1465507327, 1) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((27 * v5) ^ v4)))();
}

void sub_1B0277A20()
{
}

uint64_t sub_1B0277A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((1892
                                * (((v22 - 14) ^ 0x68071083) + a22 - *(_DWORD *)(a2 + 4) == ((49 * (v22 ^ 0x2DF)) ^ 0xB02C043C))) ^ v22)))();
}

uint64_t sub_1B0277A84@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((469 * (v2 != ((a1 + 1751565868) & 0x979939BF ^ (v1 - 173)))) ^ a1)))();
}

uint64_t sub_1B0277ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v20 = a18 - 1372200252;
  if (a18 - 1372200252 < 0) {
    int v20 = 1372200252 - a18;
  }
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((1016
                                * ((int)((v20 ^ 0x75DB7DFC) + ((v20 << (v18 + 12)) & 0xEBB6FBF8) - 1977318909) > v18 - 758)) ^ (v18 + 571))))();
}

uint64_t sub_1B0277B60(double a1, __n128 a2, __n128 a3, __n128 a4, __n128 a5, __n128 a6, __n128 a7, __n128 a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, uint64_t a16)
{
  uint64_t v27 = v22 - 16 + ((a14 + 229) ^ (v16 + 1203));
  uint64_t v28 = ((_BYTE)v22 - 16 + ((a14 - 27) ^ (v16 - 77))) & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), v24).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)a5.n128_u64, v24).u64[0];
  int8x16_t v31 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a15 + v27), *(int8x16_t *)(v18 + (v27 & 0xF) - 15)), veorq_s8(*(int8x16_t *)(v17 + (v27 & 0xF) - 15), *(int8x16_t *)(v19 + (v27 & 0xF) - 15))));
  int8x16_t v32 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v31, v31, 8uLL), v26), vmulq_s8(v30, v25)));
  *(int8x16_t *)(a15 + v27) = vextq_s8(v32, v32, 8uLL);
  return (*(uint64_t (**)(void))(v23 + 8 * (((v20 == 16) * v21) ^ a14)))();
}

uint64_t sub_1B0277B6C@<X0>(int a1@<W8>)
{
  int *v7 = (v2 + (a1 ^ 0x308) - 727) ^ v10;
  int v5 = a1 ^ 0x74B;
  uint64_t v13 = v9;
  unsigned int v12 = (a1 ^ 0x308)
      + ((((2 * v11) | 0xE8105D64) - v11 + 200790350) ^ 0xFEFC209D) * v4
      + 1304;
  (*(void (**)(unsigned char *))(v3 + 8 * (a1 ^ 0x9E4)))(v11);
  unsigned int v12 = v5 + ((v11 + 749825941 - 2 * ((unint64_t)v11 & 0x2CB16F95)) ^ 0x264561BA) * v4 + 347;
  uint64_t v13 = v8;
  (*(void (**)(unsigned char *))(v3 + 8 * (v5 + 423)))(v11);
  return v1 ^ v2;
}

uint64_t sub_1B0277C80(int a1)
{
  int v1 = *(uint64_t (**)(void))(v11 + 8 * (v12 - 1052));
  unsigned int v2 = v5 + a1;
  uint64_t v3 = *v13;
  *(unsigned char *)(*v13 + v2 + 1) = (v8 ^ BYTE2(v6)) - (v7 & (2 * (v8 ^ BYTE2(v6)))) - 27;
  *(unsigned char *)(v3 + v2) = (HIBYTE(v6) ^ 0xBB) - (v7 & (2 * (HIBYTE(v6) ^ 0xBB))) - 27;
  *(unsigned char *)(v3 + v2 + 2) = (v10 ^ BYTE1(v6)) - (v7 & (v6 >> 7)) - 27;
  *(unsigned char *)(v3 + (v5 + a1 + 3)) = v6 ^ v9;
  return v1();
}

uint64_t sub_1B0277C90@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W6>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,char a30)
{
  BOOL v36 = v31 < a3;
  *(&a30 + (a1 + a5 + 294)) = *(unsigned char *)(v35 + (v30 + a2))
                                          - ((2 * *(unsigned char *)(v35 + (v30 + a2))) & 0xCA)
                                          - 27;
  unsigned int v37 = a4 + v30 + 1;
  int v38 = v36 ^ (v37 < a3);
  BOOL v39 = v37 < v31;
  if (!v38) {
    BOOL v36 = v39;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((!v36 * v32) ^ v33)))();
}

uint64_t sub_1B0277D9C()
{
  BOOL v2 = ((LODWORD(STACK[0x42C]) - 1284426096) ^ 0x6F9DB6D6BF7FEF9FLL)
     - 0x6F9DB6D68E5436E8
     + (((unint64_t)(LODWORD(STACK[0x42C]) - 1284426096) << ((v0 + 99) ^ 0x73)) & (v0 ^ 0x17EFFDA31)) == 824948919;
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((4 * v2) | (32 * v2)) ^ v0)))();
}

uint64_t sub_1B0277E34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((LODWORD(STACK[0x3A0]) - 588221694 != ((v7 - 210) ^ 0xFF4CBF)) * a7) ^ (v7 + 1057))))();
}

void sub_1B0277E7C()
{
}

uint64_t sub_1B0277EC4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((2 * (((v0 - 819) | 0x41) ^ 0x1D0)) ^ 0x5BA) * (v1 == 1321678224)) ^ v0)))();
}

uint64_t sub_1B0277F0C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1016 * (v1 - 1 > v2)) ^ v0)))();
}

uint64_t sub_1B0277F3C@<X0>(int a1@<W8>)
{
  _DWORD *v1 = STACK[0x490];
  v1[85] = STACK[0x450];
  v1[86] = STACK[0x484];
  v1[87] = STACK[0x414];
  v1[88] = STACK[0x59C];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((STACK[0x580] != 0) * (((((a1 - 1683870514) & 0x645DD7D4) - 1267) ^ 0x6D2) - 1469)) ^ (((a1 - 1683870514) & 0x645DD7D4) + 527))))();
}

uint64_t sub_1B0277FB0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(a5 + (a7 + v9)) = *(void *)(a4 + (a7 + v9));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 == 0) * a3) ^ a8)))();
}

uint64_t sub_1B0277FE0@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x43C]) = 0;
  int v6 = LODWORD(STACK[0x43C])++;
  _DWORD *v3 = v6 + 24759839;
  unint64_t v7 = 235795823 * ((0xBF3B0C47DB65F523 - (v2 | 0xBF3B0C47DB65F523) + STACK[0x2D8]) ^ 0x48744946B0374385);
  *(void *)(v5 - 184) = (*v1 - 2064070796) ^ v7;
  *(void *)(v5 - 168) = v7 + 3748483488u;
  int v8 = v7 ^ (a1 - 169753647);
  *(_DWORD *)(v5 - 176) = v7 + a1 + 2104631030;
  *(_DWORD *)(v5 - 152) = v8 ^ 0x11;
  *(_DWORD *)(v5 - 148) = a1 - 169753647 + v7;
  *(_DWORD *)(v5 - 160) = v7 + 1;
  *(_DWORD *)(v5 - 156) = v8 ^ 0x49;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a1 + 809)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v5 - 192)))(v9);
}

uint64_t sub_1B0277FE8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(*a6 + 4 * (a2 + v8 + 1 + 1317)) != v6)
                                * (((22 * (v9 ^ 0x51F) - 519868207) & 0x1EFC8E6F) - 619)) | v9)))();
}

void sub_1B0277FF4(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((2 * (a1 & 0x5E99CC2A) - a1 - 1587137579) ^ 0xAB923DFA);
  if (*(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v3 = 1372200252 - *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7);
  }
  uint64_t v2 = *(void *)(a1 + 16);
  if (*(_DWORD *)(v2 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v4 = *(_DWORD *)(v2 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v4 = 1372200252 - *(_DWORD *)(v2 - 0x67843F9A1244BAC7);
  }
  uint64_t v8 = *(void *)a1;
  unsigned int v7 = v1 + 535753261 * (((~&v7 & 0xF9B5D77A) - (~&v7 | 0xF9B5D77B)) ^ 0xF341D954) + 248;
  uint64_t v5 = (char *)*(&off_1F08CDB40 + (v1 ^ 0x4A7)) - 4;
  (*(void (**)(unsigned int *))&v5[8 * (v1 ^ 0xCB5)])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B027818C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15, uint64_t a16, int a17, unsigned int a18, unint64_t *a19)
{
  unsigned int v22 = 1759421093 * ((2 * (&a14 & 0x7DEFB770) - &a14 + 34621583) ^ 0xB16DF8DB);
  a19 = &STACK[0x4CAF57822185BFA9];
  a16 = a10;
  a14 = 1036168093 - v22;
  a17 = v22 ^ 0x6E57E88A;
  a18 = v22 + v19 + 2138962793;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v21 + 8 * (v19 ^ 0xA63u)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (((((v19 - 92) ^ (a15 == v20)) & 1) * ((v19 - 343) ^ 0xAB)) ^ v19)))(v23);
}

void sub_1B0278288()
{
}

void sub_1B02783C8()
{
}

uint64_t sub_1B027848C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27,uint64_t a28,int a29,uint64_t a30,uint64_t a31)
{
  unsigned int v34 = 628203409 * (((&a24 | 0x561E2EB9) - (&a24 & 0x561E2EB9)) ^ 0xD496228A);
  a28 = a17;
  a30 = a23;
  a26 = v31 - v34 + 907;
  a27 = -643092388 - v34 + (v31 ^ 0x239) + a22 - 168;
  a31 = a15;
  a24 = a16;
  a25 = a14;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v32 + 8 * (v31 + 1452)))(&a24);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v32
                                                                                                  + 8 * (((a29 != -1373544826) * ((v31 - 800833234) & 0x2FBBBEDF ^ 0x2CC)) ^ v31)))(v35, v33, 4143985707, 3146710353, 1435407688, 132026824, 1284425797);
}

void sub_1B02785B4()
{
}

uint64_t sub_1B0278648()
{
  *(void *)(v1 + 8 + (((v0 - 1314) | 0x204u) ^ (unint64_t)(v3 - 420))) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((340 * (v2 == 8)) ^ v0)))();
}

void sub_1B0278654()
{
  LODWORD(STACK[0x400]) = 1284426096;
  JUMPOUT(0x1B0277390);
}

void sub_1B027866C()
{
}

uint64_t sub_1B0278770()
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ v0)))();
}

uint64_t sub_1B0278794@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v6 = v3 + (a2 + 1055) - 1361;
  STACK[0x5D0] = v6;
  *(unsigned char *)(a1 + v6) = ((v2 - 102) ^ v4) * (v2 - 85);
  return (*(uint64_t (**)(void))(v5 + 8 * (((2 * (STACK[0x5D0] == 0)) | (4 * (STACK[0x5D0] == 0))) ^ a2)))();
}

uint64_t sub_1B02787E0()
{
  int v4 = 628203409 * ((v3 - 192) ^ 0x82880C33);
  *(_DWORD *)(v3 - 176) = v1 - v4 + 1253;
  *(_DWORD *)(v3 - 172) = v0 - v4 - 643092311;
  unint64_t v5 = STACK[0x360];
  unint64_t v6 = STACK[0x358];
  *(void *)(v3 - 192) = STACK[0x368];
  *(void *)(v3 - 184) = v6;
  *(void *)(v3 - 152) = STACK[0x3A0];
  *(void *)(v3 - 144) = v5;
  *(void *)(v3 - 168) = STACK[0x370];
  (*(void (**)(uint64_t))(v2 + 8 * (v1 + 1798)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128))(v2 + 8 * (((*(_DWORD *)(v3 - 160) == -1373544826) * (((v1 ^ 0x437) + 11) ^ 0x697)) ^ v1)))(160, 19, 1373504863, 1, 44, 90, 1232, 2173439218, (__n128)0);
}

uint64_t sub_1B02788BC(double a1)
{
  *(double *)(v2 + v4) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((30 * (v3 != v4)) ^ v1)))();
}

uint64_t sub_1B02788E4(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_1B02788FC(void *a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  unint64_t v35 = ((v33 + 422) ^ (v27 + 1220) ^ *(_DWORD *)(a27 + 4 * (v31 + 1 + v29)))
      + HIDWORD(v32)
      + v34 * (unint64_t)(*(_DWORD *)(*a1 + 4 * (v31 + 1 + v29)) ^ v27);
  *(_DWORD *)(a27 + 4 * (v31 + v29)) = v35 + v27 - (v28 & (2 * v35));
  BOOL v37 = v31 + a6 > a7 || v31 + a6 < a2;
  return (*(uint64_t (**)(void))(v30 + 8 * ((v37 * a8) ^ v33)))();
}

void sub_1B0278970()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)(v0 + 16) ^ (3804331 * (v0 ^ 0xFA9EF356));
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B0278AB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  unsigned int v31 = v26 + v27 + 1078493763;
  if (v31 <= 0x40) {
    int v32 = 64;
  }
  else {
    int v32 = v31;
  }
  BOOL v33 = __CFADD__(v31 - 1, a1 - 1078495680 + v29 + ((v28 - 1916) | 0x63) + v32 + 1690);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((v33 * (((2 * v28) ^ 0xD12) - 743)) | v28)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B0278B3C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((437 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x6C2)))();
}

uint64_t sub_1B0278B8C()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8 * ((v0 - 1185) ^ 0xAC2)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v1 + 8 * ((391 * ((v2 ^ (v0 - 74)) & 1)) ^ (v0 - 1185))))();
}

void sub_1B0278BF0()
{
}

uint64_t sub_1B0278C08()
{
  return (*(uint64_t (**)(unint64_t))(v0 + 8 * (LODWORD(STACK[0x3FC]) + 614)))(STACK[0x3C8]);
}

uint64_t sub_1B0278C5C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 != v2 + (v1 ^ 0x18D) - 72613831) * (v1 - 1213)) ^ v1)))();
}

uint64_t sub_1B0278C94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((15 * (v8 == ((((v9 ^ a8) + 1) | 8) + 94))) | v9 ^ a8)))();
}

uint64_t sub_1B0278CC4@<X0>(int a1@<W2>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ (201 * ((unint64_t)(a3 - a2 - 1452) > 0x1F)))))();
}

void sub_1B0278CFC()
{
}

uint64_t sub_1B0278D04@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  int v56 = *(_DWORD *)(&a39 + (v53 ^ v52 ^ a2) + v54 + 72);
  *(unsigned char *)(a1 + (v53 ^ v52 ^ a2) + v54) = v56 ^ 0x8F;
  int v57 = a2 + v54;
  *(unsigned char *)(a1 + (v57 + 34)) = (BYTE1(v56) ^ 0x73) - ((2 * (BYTE1(v56) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v57 + 35)) = (BYTE2(v56) ^ 0x2D) - ((2 * (BYTE2(v56) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a1 + (v57 + 36)) = (HIBYTE(v56) ^ 0x52) - ((2 * (HIBYTE(v56) ^ 0x52)) & 0xCA) - 27;
  BOOL v58 = v54 + 374188180 < (a51 - 751752151);
  if (v54 + 374188180 < v51 != a51 - 751752151 < v51) {
    BOOL v58 = a51 - 751752151 < v51;
  }
  return (*(uint64_t (**)(void))(v55 + 8 * (v53 ^ (2 * !v58))))();
}

uint64_t sub_1B0278DD8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (v2 < 0x4DCEC6D6)) ^ (v0 - 1174668212))))();
}

uint64_t sub_1B0278E34(int a1)
{
  *(_DWORD *)(*v3 + 4 * (a1 + v1 + 1)) = v2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 + v1 < v6) * v5) ^ v4)))((a1 - 1));
}

uint64_t sub_1B0278E64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  LODWORD(STACK[0x450]) = 70636353;
  LODWORD(STACK[0x494]) = 128;
  int v56 = 3804331 * (((v55 - 192) & 0x436B6990 | ~((v55 - 192) | 0x436B6990)) ^ 0x460A6539);
  *(void *)(v55 - 176) = v53;
  *(void *)(v55 - 168) = a43;
  *(void *)(v55 - 144) = 0;
  *(void *)(v55 - 136) = a52;
  *(_DWORD *)(v55 - 160) = v52 - v56 + 1215;
  *(_DWORD *)(v55 - 124) = v56 + 1106883014;
  *(void *)(v55 - 192) = v53 + 0x67843F9A1244BE6BLL;
  *(void *)(v55 - 184) = 0;
  *(void *)(v55 - 152) = v53 + 0x67843F9A1244BD5BLL;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v52 ^ 0x92C)))(v55 - 192);
  return (*(uint64_t (**)(uint64_t))(v54
                                            + 8
                                            * (int)(((*(_DWORD *)(v55 - 128) == -1373544826)
                                                   * ((v52 + 2120928760) & 0x819535FC ^ (v52 - 155990397) & 0x94C3AFF ^ 0x40B)) ^ v52)))(v57);
}

uint64_t sub_1B0278F94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v20 = v18 - 1541;
  int v21 = 535753261 * ((((v19 - 136) | 0xE24C4B28) - ((v19 - 136) & 0xE24C4B28)) ^ 0xE8B84507);
  *(_DWORD *)(v19 - 128) = v21 + 1640731306;
  *(_DWORD *)(v19 - 124) = v21 + v20 + 607;
  *(void *)(v19 - 136) = v17;
  (*(void (**)(uint64_t))(v16 + 8 * (v20 + 1588)))(v19 - 136);
  *(_DWORD *)(v19 - 120) = (v20 + 778) ^ (1734042137
                                        * ((((v19 - 136) | 0x40015D88) - ((v19 - 136) & 0x40015D88)) ^ 0x1CCF9EC5));
  *(void *)(v19 - 136) = a14;
  *(void *)(v19 - 128) = a13;
  (*(void (**)(uint64_t))(v16 + 8 * (v20 + 1445)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = (v20 + 490) ^ (((~((v19 - 136) | 0x864C299C) + ((v19 - 136) & 0x864C299C)) ^ 0x1447CE6A) * v14);
  *(void *)(v19 - 128) = v17;
  *(void *)(v19 - 120) = a14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v20 + 1519)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((((v20 + 89) ^ (*(_DWORD *)(v19 - 132) > v15)) & 1)
                                              * (((v20 + 1113) ^ 0x5B9) - 572)) ^ v20)))(v22);
}

uint64_t sub_1B02790F4@<X0>(uint64_t a1@<X4>, unsigned int a2@<W8>)
{
  uint64_t v4 = a2;
  unint64_t v5 = (((v2 - 1634) | 2u) ^ (unint64_t)(a1 - 162)) + a2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((77 * (((125 * (v2 ^ 6)) ^ (v5 - v4 + 726900810 < 8)) & 1)) ^ v2)))();
}

uint64_t sub_1B0279164()
{
  int v3 = v1 - (((v1 << (((v2 + 112) | 0x82) ^ 0xCA)) + 1726115104) & 0x514E7D16) + 1545106715;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((56
                                * (((2 * v3) & 0xFCFE9A36 ^ 0x504E1816) + ((v2 + 297) ^ 0xD6D87B92 ^ v3) - 539624720 == 1582647307)) ^ v2)))();
}

uint64_t sub_1B0279208(int8x16_t a1, int8x16_t a2, double a3, double a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int32x4_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13, int a14)
{
  a2.i64[0] = *(void *)(v16 + 4);
  a2.i32[2] = *(_DWORD *)(v16 + 12);
  int8x16_t v21 = vextq_s8(a1, a2, 0xCuLL);
  int8x16_t v22 = a2;
  v22.i32[3] = *(_DWORD *)(v16 + 16);
  int32x4_t v23 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v22, a5), vandq_s8(v21, v19)), 1uLL), a6);
  v24.i32[0] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 4) & 1));
  v24.i32[1] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 8) & (((v14 + a12) & a13) - 895)));
  v24.i32[2] = *(_DWORD *)(v18 + 4 * (*(_DWORD *)(v16 + 12) & 1));
  v24.i32[3] = *(_DWORD *)(v18 + 4 * (v22.i8[12] & 1));
  *(int8x16_t *)uint64_t v16 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v16 - 908), v24), v20), (int8x16_t)vaddq_s32(vsubq_s32(v23, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v23, v23), a7)), a8));
  return (*(uint64_t (**)(void))(v17 + 8 * (((v15 == 4) * a14) ^ v14)))();
}

uint64_t sub_1B0279214()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1410 * (v1 + v3 + (v0 ^ 0x337u) + 905 - 1088 < 0x7FFFFFFF)) ^ v0)))();
}

uint64_t sub_1B0279250()
{
  return sub_1B027925C();
}

uint64_t sub_1B027925C(int8x16_t a1, double a2, double a3, int8x16_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12)
{
  int8x16_t v18 = *(int8x16_t *)(v17 + (v12 + a6 + v13));
  *(int8x16_t *)(a12 + v13) = vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a4)), a1);
  return (*(uint64_t (**)(void))(v16 + 8 * (((v13 == 48) * v15) ^ (a10 + v14 - 517))))();
}

void sub_1B027930C()
{
}

void sub_1B0279378()
{
}

uint64_t sub_1B0279380(_DWORD *a1)
{
  unsigned int v1 = 460628867 * ((2 * (a1 & 0x1FF5D3B4) - a1 - 536204213) ^ 0xAC9CAE36);
  unsigned int v2 = a1[4] - v1;
  unsigned int v3 = v1 + *a1;
  unsigned int v5 = v3 - 774089199;
  BOOL v4 = (int)(v3 - 774089199) < 0;
  LODWORD(v6) = 774089199 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (int)(v2 - 579))
                              + 8 * (int)(((v6 == ((2 * v6) & 0x749AFE04)) * ((v2 + 19) ^ 0x2DB)) ^ v2)
                              - 4))();
}

uint64_t sub_1B027943C@<X0>(int a1@<W0>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v9 = v4 & 7;
  int v10 = v5 + v4;
  *(void *)(v3 - 7 + (v10 + v6 - a1)) = *(void *)(a3 - 7 + (v10 + v6 - a1));
  return (*(uint64_t (**)(void))(v8 + 8 * (((v10 + v7 - a1 - v9 == 8) * (a2 ^ 0x5B3)) ^ a2)))();
}

void sub_1B02794A4()
{
}

void sub_1B02794B8()
{
  _DWORD *v0 = 1373504863;
  JUMPOUT(0x1B02794C4);
}

uint64_t sub_1B0279500@<X0>(unsigned int a1@<W0>, uint64_t a2@<X1>, unint64_t a3@<X2>, int a4@<W3>, void *a5@<X6>, int a6@<W7>, unint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  uint64_t v39 = 4 * (v35 + 1 + a4);
  unint64_t v40 = (*(_DWORD *)(a24 + v39) ^ v24) + (a2 ^ HIDWORD(v34)) + a1 * (unint64_t)(*(_DWORD *)(*a5 + v39) ^ v24);
  unint64_t v41 = HIDWORD(a7)
      + v31 * (unint64_t)(*(_DWORD *)(*v36 + v39) ^ v24)
      + ((v40 + v29 - ((((v38 ^ v33) * v28) ^ v30) & (2 * v40))) ^ a3);
  *(_DWORD *)(a24 + 4 * (v35 + a4)) = v41 + v24 - (v25 & (2 * v41));
  BOOL v43 = v35 + v26 > a6 || v35 + v26 < v37;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v43 * v27) ^ v38)))();
}

uint64_t sub_1B02795A0()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((500
                                * (((v3 - 102) ^ ((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                                                 + ((*(unsigned __int8 *)(v2 + 5) - 13) ^ (v0 + ((v3 - 728955884) & 0x2B72FF7F) - 1663)) == v0)) & 1)) ^ v3)))();
}

void sub_1B0279610()
{
}

uint64_t sub_1B0279678(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * (*(_DWORD *)(*v4 + 4 * a2) != v3 + ((v5 - 24) | 0x26) - 191)) ^ v5)))();
}

uint64_t sub_1B02796BC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v13 = (v10 + v6 - v8 + 75);
  int8x8_t v14 = vrev64_s8(*(int8x8_t *)(v5 - 7 + v13));
  *(int8x8_t *)(v4 - 7 + v13) = vrev64_s8(vadd_s8(vsub_s8(v14, vand_s8(vadd_s8(v14, v14), v11)), v12));
  return (*(uint64_t (**)(void))(v9 + 8 * ((1720 * ((a4 ^ 0x364) + v8 == (v7 & 0xFFFFFFF8))) ^ a4)))(v6 - (v7 & 0xFFFFFFF8));
}

uint64_t sub_1B0279724@<X0>(int a1@<W0>, unsigned int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(v4 + a1 + v9 + ((v6 - 1733) | a2)) = *(unsigned char *)(v5 + a1 + v9 + ((v6 - 1733) | a2))
                                                - (v7 & (2 * *(unsigned char *)(v5 + a1 + v9 + ((v6 - 1733) | a2))))
                                                - 27;
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 - 1 == a4) * a3) ^ v6)))();
}

uint64_t sub_1B0279768(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = v4 + 50331659;
  if (v7 <= 0x40) {
    unsigned int v7 = 64;
  }
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)(((a3 - v3 - a1 + v7 >= (v5 ^ 0x75Au) - 1466)
                                     * (((v5 + 1780464443) & 0x95E047F7) - 1093)) ^ v5)))();
}

uint64_t sub_1B0279838(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((15 * (a2 + v2 + ((v3 + 1763163494) & 0x96E8454D ^ 0x86482519) < 3 * (v3 ^ 0xF0) - 1831)) ^ v3)))();
}

void sub_1B02798A4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1B0279918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v16 - 112) = a12;
  *(_DWORD *)(v16 - 120) = v15
                         + 1220
                         + 535753261 * ((((2 * (v16 - 120)) | 0xDEE4908E) - (v16 - 120) - 1869760583) ^ 0x65864668);
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8F9)))(v16 - 120);
  *(_DWORD *)(v16 - 120) = v15 + 1220 + 535753261 * ((v16 - 106022399 - 2 * ((v16 - 120) & 0xF9AE3A79)) ^ 0xF35A3456);
  *(void *)(v16 - 112) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x8F9)))(v16 - 120);
  *(_DWORD *)(v16 - 104) = (v15 + 1239) ^ (1734042137
                                         * ((((v16 - 120) | 0xCBD4BC66) - (v16 - 120) + ((v16 - 120) & 0x342B4398)) ^ 0x971A7F2B));
  *(void *)(v16 - 120) = v13;
  *(void *)(v16 - 112) = a13;
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x796)))(v16 - 120);
  JUMPOUT(0x1B0279A60);
}

uint64_t sub_1B0279A9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  uint64_t v15 = v14 + a3 + v13 - a7 + ((a8 + 1315) ^ (v10 + 1644));
  *(void *)(v11 - 7 + v15) = *(void *)(v9 - 7 + v15);
  return (*(uint64_t (**)(void))(v8 + 8 * ((1480 * (a7 - (v12 & 0xFFFFFFF8) == -8)) ^ a8)))();
}

void sub_1B0279AFC()
{
  *(_DWORD *)(v2 - 128) = v0;
  *(_DWORD *)(v2 - 120) = (v1 + 618974189) & 0xDB1B37F7;
  JUMPOUT(0x1B027A97CLL);
}

uint64_t sub_1B027C984(int a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  unsigned int v9 = ((*v7 & 0x7FFFFFFE | v7[623] & 0x80000000) >> ((v5 - 104) ^ 0x51)) ^ v6;
  v7[623] = v7[396] ^ a3 ^ *(_DWORD *)(a5 + 4 * (*v7 & 1)) ^ (v9 + a2 - (a1 & (2 * v9)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1678 * (LODWORD(STACK[0x43C]) > 0x26F)) ^ v5)))();
}

uint64_t sub_1B027C9FC()
{
  uint64_t v4 = v0;
  unint64_t v5 = ((97 * (v1 ^ 0x18D)) ^ (unint64_t)(v2 + 410)) + v0;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((35 * (v5 - v4 + 1381440370 >= (((v1 + 278) | 0x50F) ^ 0x7A7uLL))) ^ v1)))();
}

uint64_t sub_1B027CA6C@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((v2 + a2 + 1067) ^ (29 * (a1 == 0)))))();
}

uint64_t sub_1B027CB8C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((1322 * ((a7 + 1 + v7) < 0x20)) ^ a3)))();
}

uint64_t sub_1B027CC74()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((*(void *)(v1 + 32) == 0x330904BA72E93EC0) | v0)))();
}

uint64_t sub_1B027CCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x510] = 0;
  LODWORD(STACK[0x51C]) = 1284426096;
  STACK[0x590] = 0;
  LODWORD(STACK[0x5FC]) = 1284426096;
  return (*(uint64_t (**)(void))(v65
                              + 8
                              * ((55
                                * ((((10 * (v64 ^ 0x35)) ^ 0x3E) & 0xFE) != ((((5 * (v64 ^ 0x35) - 3) | 9) ^ 0x1E) + *(unsigned char *)(a64 - 0x18CFECAB777DA4F8) - *(unsigned char *)*(&off_1F08CDB40 + v64 - 218)))) ^ (5 * (v64 ^ 0x135)))))();
}

uint64_t sub_1B027CD6C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0 ^ (164
                                     * (((v1 << (((v0 + 60) | 0x60) ^ 0xEF)) & 0xFE8963B2 ^ 0x7E892232)
                                      + (v1 ^ 0x40106EC6)
                                      - 470061313 == 1665147096)))))();
}

void sub_1B027CDE4()
{
}

uint64_t sub_1B027CDF0()
{
  uint64_t v7 = 4 * (v2 - 1364770032);
  unsigned int v8 = *(_DWORD *)(v3 + 4 * (v2 - 1364770033));
  int v9 = (((v1 + 11) ^ (v8 >> 30)) - 4 * (v8 >> 31) - 10) ^ v8;
  int v10 = ((v1 + 1566083941 * v9 - ((-1162799414 * v9) & v0)) ^ *(_DWORD *)(v3 + v7)) - v2;
  *(_DWORD *)(v3 + v7) = v10 - ((2 * v10 - 1565427232) & v0) - 1470178266;
  uint64_t v11 = 1759421093 * ((v6 + 0x3CEE76D65605BD6 - 2 * ((v6 - 192) & 0x3CEE76D65605C96)) ^ 0x2D70263DD61DECC2);
  *(_DWORD *)(v6 - 176) = 2021362417 - v11 + v4;
  *(_DWORD *)(v6 - 172) = v4 - v11 + 519879878;
  *(void *)(v6 - 184) = (v2 - 2071481200) - v11;
  *(_DWORD *)(v6 - 192) = v11;
  *(_DWORD *)(v6 - 160) = v4 - v11 + 519880083;
  *(_DWORD *)(v6 - 152) = v4 - v11 + 519879958;
  *(void *)(v6 - 168) = v11 ^ 0xD5E0717FLL;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v4 ^ 0xDDE)))(v6 - 192);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v6 - 156)))(v12);
}

void sub_1B027CF3C()
{
}

uint64_t sub_1B027D098@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1916032015);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v6 + 2) ^ *(unsigned char *)((v8 & 0xF) + v5 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((221 * (a1 - 1 == v3)) ^ (a2 - 1925))))();
}

uint64_t sub_1B027D104(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * (((((((a3 - 626) | 0x24) - 336) | 0x1A0) - 421)
                                              * ((unint64_t)(a2 - v6 - v4) > 0x1F)) ^ ((a3 - 626) | 0x24))))(v3);
}

uint64_t sub_1B027D14C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v10 = a4 + v5 + v8 + 668;
  uint64_t v11 = v4 + v10;
  long long v12 = *(_OWORD *)(v11 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((27 * ((((v6 & 0xFFFFFFE0) == 32) ^ ((v7 ^ 0x5C) + 1)) & 1)) ^ (v7 + 1689052243))))();
}

void sub_1B027D1C8()
{
  LODWORD(STACK[0x378]) = 0;
  STACK[0x380] = 0;
  JUMPOUT(0x1B02691F0);
}

uint64_t sub_1B027D214(int a1, int a2, int a3, uint64_t a4, int a5)
{
  int v10 = a5 + 1520;
  uint64_t v11 = (a5 + 551);
  uint64_t v12 = (a2 + a1 + a3);
  unint64_t v13 = v9 + v12 + ((a5 + 750) ^ 0x50DLL);
  uint64_t v14 = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3) & 0xF;
  uint64_t v15 = v14 - v12;
  unint64_t v16 = v6 + v15;
  uint64_t v17 = (v11 ^ 0x444) + v14;
  unint64_t v18 = v6 + v17;
  unint64_t v19 = v5 + v15;
  unint64_t v20 = v5 + v17;
  unint64_t v21 = v7 + v15;
  unint64_t v22 = v7 + v17;
  BOOL v24 = v18 > v9 && v16 < v13;
  if (v20 > v9 && v19 < v13) {
    BOOL v24 = 1;
  }
  int v27 = v22 > v9 && v21 < v13 || v24;
  return (*(uint64_t (**)(void))(v8 + 8 * ((76 * v27) ^ v10)))();
}

uint64_t sub_1B027D2A4()
{
  LODWORD(STACK[0x5CC]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((*(_DWORD *)(STACK[0x250] + 360) - 1102148614) > 0xFFFFFFFD)
                                * ((5 * (v0 ^ 0x305)) ^ 0x515)) ^ v0)))();
}

void sub_1B027D2F0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 175)))();
  JUMPOUT(0x1B027D30CLL);
}

uint64_t sub_1B027D324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((99
                                * (((a7 + (a6 ^ 0x77F) - 1616) & (a6 ^ 0x15A) ^ 0xAA2EDD76)
                                 + (v8 & (2 * (a7 + (a6 ^ 0x77F) - 1616)))
                                 + 1439769225 < 4)) ^ a6)))();
}

uint64_t sub_1B027D388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23,uint64_t a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int a58,int a59)
{
  return (*(uint64_t (**)(void))(v59
                              + 8
                              * (a59 ^ (47
                                      * (((2 * (a25 - ((2 * a23) & 0xCE3B8CD6) + 339827712)) & 0x717B0DAE ^ 0x403B0C86)
                                       + ((a25 - ((2 * a23) & 0xCE3B8CD6) + 339827712) ^ 0xDFA040BC)
                                       + 2138537477 != 942998748)))))();
}

uint64_t sub_1B027D458()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((46 * (((((v3 ^ 0x2BB) + 139) ^ ((v2 + v0 + 2) < 0x7FFFFFFF)) & 1) == 0)) ^ (v3 + 956))))();
}

uint64_t sub_1B027D4AC()
{
  int v6 = v0 + 1;
  int v7 = (v0 - 650028457) & 0x26BEA17F;
  unint64_t v8 = STACK[0x420];
  int v9 = STACK[0x4A0];
  unsigned int v10 = ((LODWORD(STACK[0x4A0]) << (v7 ^ 0x6E)) + 802287416) & 0xEA303576;
  int v11 = 1224239923 * ((-1065362320 - ((v5 - 192) | 0xC07FDC70) + ((v5 - 192) | 0x3F80238F)) ^ 0xCD33DE58);
  *(void *)(v5 - 168) = STACK[0x338];
  *(void *)(v5 - 160) = v1;
  *(void *)(v5 - 192) = v8;
  *(_DWORD *)(v5 - 152) = v2 - v11 + 640618308;
  *(_DWORD *)(v5 - 180) = (v6 + 368399000) ^ v11;
  *(_DWORD *)(v5 - 176) = v9 - v11 - v10 + 218174039;
  *(void *)(v5 - 144) = v3;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v6 + 1033)))(v5 - 192);
  int v13 = *(_DWORD *)(v5 - 184);
  LODWORD(STACK[0x5B4]) = v13;
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((2000
                                              * (v13 == (v7 ^ 0xFD)
                                                      - 1373544826
                                                      + ((v7 - 860865180) & 0x334FC77C)
                                                      - 1506)) ^ v7)))(v12);
}

uint64_t sub_1B027D5F4()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((v2 ^ 0x1B7) * (v0 == v1)) ^ v2)))(2282780948);
}

void sub_1B027D638()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1B027D650);
}

uint64_t sub_1B027D704@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((a1 == v1) ^ (11 * (v2 ^ 0x6E))) & 1) * ((v2 - 941) ^ 0x2FC)) ^ v2)))();
}

uint64_t sub_1B027D74C(uint64_t a1)
{
  BOOL v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 + 487)))(a1, 4182676990) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 * (((v1 ^ 0xD7) - 336) ^ 0x559)) ^ v1)))();
}

void sub_1B027D798()
{
}

uint64_t sub_1B027D7A0(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((v1 != v2) * ((v3 ^ 0x4D7) - 1653)) ^ v3)))(a1, 71, 2456046688, 1838920607);
}

uint64_t sub_1B027D7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  return (*(uint64_t (**)(void))(v22
                                           + 8
                                           * ((69
                                             * (((a20 - 1284426096) ^ 0xDFDFFCFA72EFEB3FLL)
                                              + 0x2020030594EEA67FLL
                                              + (((unint64_t)(a20 - 1284426096) << (v20 ^ 0xBEu)) & 0xE5DFD67E) != v21)) ^ v20)))(v20 ^ 0x495u);
}

uint64_t sub_1B027D898@<X0>(int a1@<W3>, int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X8>)
{
  *(unsigned char *)(v7 + (v5 - 951018786)) = *(unsigned char *)(v4 + a4 + a3);
  return (*(uint64_t (**)(void))(v8 + 8 * ((v5 - 951018785 < (((v6 ^ 1) + a1) & a2 ^ 0x78u)) | v6 ^ 1)))();
}

uint64_t sub_1B027D8E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned int a9, unsigned int a10, uint64_t a11, int a12)
{
  int v18 = (*(_DWORD *)(a1 + 16) ^ v16) + *(_DWORD *)(v12 - 0x7761D79CB8DF4D03) - 692724659;
  unsigned int v19 = 3804331
      * (((&a9 | 0x8C86442E) - &a9 + (&a9 & 0x7379BBD0)) ^ 0x7618B778);
  a11 = v12;
  a12 = v19 + v17 + 227;
  a9 = v19 + 1177624764;
  a10 = v19 + 262228376 + v18;
  uint64_t v20 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v17 + 1662)))(&a9);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((*v14 == v13) * (v17 + 918)) ^ v17)))(v20);
}

uint64_t sub_1B027D9BC@<X0>(int a1@<W8>)
{
  unint64_t v4 = 1178560073
     * (((~(v3 - 168) | 0x312ACB43FB8FA2DCLL) + ((v3 - 168) | 0xCED534BC04705D23)) ^ 0xF36C37FC36665D62);
  *(void *)(v3 - 152) = v1 - v4;
  *(_DWORD *)(v3 - 132) = (a1 + 298737814) & 0x3FCEF196 ^ v4;
  *(void *)(v3 - 168) = v4 ^ 0x7EC20828;
  *(_DWORD *)(v3 - 160) = ((a1 + 298737814) ^ 0x1B) + v4;
  *(_DWORD *)(v3 - 156) = -1178560073 * (((~(v3 - 168) | 0xFB8FA2DC) + ((v3 - 168) | 0x4705D23)) ^ 0x36665D62);
  *(_DWORD *)(v3 - 144) = (a1 - 504207093) ^ v4;
  *(_DWORD *)(v3 - 136) = (a1 + 298737814) ^ v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2142)))(v3 - 168);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 140)))(v5);
}

uint64_t sub_1B027DAA8()
{
  int v3 = v0 & 0x7535773F;
  int v4 = v0 & 0x7535773F ^ 0x418;
  int v5 = ((v0 & 0x7535773F) - 1130534458) & 0x436297FF;
  BOOL v7 = v1[1] == 0x5CF1D1600198EA10 || (*v1 | v1[5]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v7 * ((v5 ^ 0xFFFFFED5) + 29 * v4)) ^ v3)))();
}

uint64_t sub_1B027DB28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((15
                                * ((unint64_t)(&a25 + a13 + v25 + ((v26 + 2080448194) & 0x27DF ^ 0xFFFFF824)) < ((v26 + 88246924) & 0x5CB ^ 0x19BuLL))) ^ v26)))();
}

uint64_t sub_1B027DB94()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((43 * (((((v3 - 1823194586) & 0x6CABBFC7) + v0) ^ v2) >= 0)) ^ (v3 - 1823194586) & 0x6CABBFC7u)))();
}

void sub_1B027DBF0()
{
}

void sub_1B027DC24()
{
}

uint64_t sub_1B027DC94(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((393
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(a2 + 2) - 38) ^ (v4 + v3 - 142)) == v4)) ^ v3)))();
}

uint64_t sub_1B027DCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((v24 - 117) ^ (a22 - v22 - a4 - 0x1E6EF7153090DC2 < (unint64_t)(v24 - 29) - 1711)) & 1 | v24)))(v23);
}

uint64_t sub_1B027DD24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  int v47 = 235795823 * ((2 * ((v46 - 192) & 0x8EBAC30) - (v46 - 192) - 149662769) ^ 0x63B91A96);
  *(_DWORD *)(v46 - 176) = 713989200 - v47;
  *(_DWORD *)(v46 - 172) = v47 + v44 + 62;
  unint64_t v48 = STACK[0x3D0];
  *(void *)(v46 - 160) = 0;
  *(void *)(v46 - 152) = v48;
  *(void *)(v46 - 136) = a44;
  *(void *)(v46 - 192) = 0;
  *(void *)(v46 - 184) = a42;
  *(void *)(v46 - 168) = a16;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (v44 + 911)))(v46 - 192);
  int v50 = *(_DWORD *)(v46 - 144);
  LODWORD(STACK[0x624]) = v50;
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * (((v50 == -1373544826) * (v44 - 1068)) ^ v44)))(v49);
}

uint64_t sub_1B027DDE8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v3 + v1 + 3 * (v0 ^ 0x378u) - 1310 < 0x7FFFFFFF) * ((65 * (v0 ^ 0x2C7)) ^ 0x289)) ^ v0)))();
}

uint64_t sub_1B027DE38()
{
  int v4 = v2 + 1111084722 + ((v0 + 1412049100) & 0xABD5D3FF);
  int v6 = v4 > 89871324 || v4 < v3 - 2057613408 + 31 * (v0 ^ 0x50D);
  return (*(uint64_t (**)(void))(v1 + 8 * (((8 * v6) | (v6 << 6)) ^ v0)))();
}

uint64_t sub_1B027DEAC@<X0>(int a1@<W8>)
{
  if ((a1 - 845113408) <= 0x18 && ((1 << (a1 - 64)) & 0x1000581) != 0) {
    return sub_1B027DEE0();
  }
  else {
    return v1 ^ 0x51DE0558u;
  }
}

uint64_t sub_1B027DEE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((71
                                * ((v5 & 0xFFFFFFFFFFFFFFFLL) != ((v6 - v7 + 945) ^ 0xFFFFFFFFFFFFFD67)
                                                               + (v6 ^ (v7 + 214)))) ^ (a5 + v6 + 615))))();
}

uint64_t sub_1B027DF38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,int a42)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v42 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = a19 - 1;
  int v45 = 628203409 * ((2 * ((v44 - 152) & 0x2C413658) - (v44 - 152) - 742471261) ^ 0x5136C590);
  *(void *)(v44 - 136) = &STACK[0x843828D0CDF34E9];
  *(_DWORD *)(v44 - 152) = v45 + 1172345435;
  *(_DWORD *)(v44 - 144) = v45 - 290923570;
  uint64_t v46 = (*(uint64_t (**)(uint64_t))(v43 + 17240))(v44 - 152);
  return (*(uint64_t (**)(uint64_t))(v43
                                            + 8
                                            * ((127
                                              * (a19
                                               + 1670725209
                                               + ((2 * a42) & 0x6C ^ 0xC)
                                               + (a42 & 0x3F ^ 0x4FDBF7F9u) < 0xFFFFFFC0)) ^ 0x63Du)))(v46);
}

uint64_t sub_1B027E110@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 8) + a4 + a5 + ((a2 - 1109940395) & (v7 + 1479))) = ((a3 ^ v8) >> v9)
                                                                                              - ((2 * ((a3 ^ v8) >> v9)) & 0xCA)
                                                                                              - 27;
  return (*(uint64_t (**)(void))(v5 + 8 * ((977 * (((a2 - 1109940395) ^ v7) + a4 == v6 + 1899)) ^ a2)))();
}

void sub_1B027E180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
  int v37 = ((((2 * (v36 - 144)) | 0x9025B290) - (v36 - 144) - 1209194824) ^ 0x4845B35) * v34;
  *(_DWORD *)(v36 - 128) = v37 + v35 - 831;
  *(_DWORD *)(v36 - 144) = 774154736 - v37;
  *(void *)(v36 - 136) = &a32 + v33;
  (*(void (**)(uint64_t))(v32 + 8 * (v35 + 608)))(v36 - 144);
  JUMPOUT(0x1B0257CE0);
}

uint64_t sub_1B027E218@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v10 = a1 + a3 + v7 + ((a2 + 884) | 0x40u) - 765 - 1093 + v9;
  uint64_t v11 = ((_BYTE)a1 + (_BYTE)a3 + (_BYTE)v7 + ((a2 + 116) | 0x40) + 3 - 69) & 0xF;
  unint64_t v12 = v11 + v6 - v10;
  uint64_t v13 = (v11 | v5) - v10;
  uint64_t v14 = (v11 | v4) - v10;
  BOOL v16 = (unint64_t)(v3 - v9) >= 0x10 && v12 >= 0x10 && (unint64_t)(v13 + 2) >= 0x10;
  unint64_t v17 = v14 + 1;
  int v19 = !v16 || v17 < 0x10;
  return (*(uint64_t (**)(void))(v8 + 8 * ((47 * v19) ^ a2)))();
}

uint64_t sub_1B027E294@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 ^ 0x70;
  unsigned int v12 = 1755732067
      * (((&a4 ^ 0xE69D8F21 | 0x727E95CD)
        - (&a4 ^ 0xE69D8F21)
        + ((&a4 ^ 0xE69D8F21) & 0x8D816A30)) ^ 0x4A25A737);
  a6 = ((a1 ^ 0x70) + 692) ^ v12;
  a7 = &STACK[0x5248BA885C210B08];
  a8 = v12 ^ 0x7DEEE1E2;
  a4 = &STACK[0x18DA4F3048EDB6D8];
  a5 = v10;
  uint64_t v13 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 ^ 0x70) + 1291)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x7761D79CB8DF4CFBLL) == v8)
                                              * (((v11 - 886) | 0x4D1) ^ (v11 - 636776384) & 0x25F46F4F ^ 0x29F)) ^ v11)))(v13);
}

uint64_t sub_1B027E3AC@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W6>, uint64_t a4@<X8>)
{
  unsigned int v7 = a2 + v5 + ((a3 + 328411377) & 0xEC6CD53D) + (a1 ^ v4) + 575;
  unsigned int v8 = ((((a3 - 967863869) & 0x39B068FF) - 1411418542) & (2 * v7)) + (v7 ^ 0x55EFBB77) - 1337376072;
  unsigned int v9 = v6 - 1255120571;
  int v10 = (v9 < 0x638FE2F) ^ (v8 < 0x638FE2F);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0x638FE2F;
  }
  return (*(uint64_t (**)(void))(a4 + 8 * ((56 * v11) ^ a3)))();
}

void sub_1B027E46C()
{
}

uint64_t sub_1B027E478(uint64_t a1, uint64_t a2, char a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((788
                                * ((((*(unsigned __int8 *)(a2 + 8) - 1) << ((v4 - 29) ^ a3)) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 8) - 1) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1B027E4D4@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((a2 + 1 == v3 + 44) | (2 * (a2 + 1 == v3 + 44))) ^ a1)))();
}

uint64_t sub_1B027E594@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X3>, unsigned int a5@<W4>, int a6@<W5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v13 = a5 < a1;
  *(unsigned char *)(a4 + (v9 + v11)) = *(unsigned char *)(a8 + (v10 + a2))
                                            - (a7 & (2 * *(unsigned char *)(a8 + (v10 + a2))))
                                            - 27;
  unsigned int v14 = ((a9 - 419) | 2) + a3 + v10;
  int v15 = v13 ^ (v14 < a1);
  BOOL v16 = v14 < a5;
  if (!v15) {
    BOOL v13 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a6) ^ a9)))();
}

uint64_t sub_1B027E604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, int a19)
{
  a17 = &STACK[0x2F7E69BD89C711D];
  a19 = v19
      - 460628867 * ((&a17 - 828698224 - 2 * ((unint64_t)&a17 & 0xCE9B1190)) ^ 0x820D93ED)
      - 1153;
  uint64_t v23 = (*(uint64_t (**)(unint64_t **))(v21 + 8 * (v19 ^ 0xE2C)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8 * (((a18 != v20) * ((v22 + (v19 ^ 0x4A1) - 727) ^ (v22 + 158))) ^ v19)))(v23);
}

uint64_t sub_1B027E6B0@<X0>(uint64_t a1@<X8>, int a2, int a3)
{
  *(_DWORD *)(a1 - 0x56530F603BC303ACLL) = a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((*(void *)(v4 + 32) == 0x330904BA72E93EC0) | (v3 + 1474))))();
}

uint64_t sub_1B027E700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  uint64_t v50 = (v48 + v45);
  int v51 = *(_DWORD *)(&a33 + v50 + 72);
  *(unsigned char *)(a2 + v50) = v51 ^ 0x8F;
  *(unsigned char *)(a2 + (v50 + 1)) = v47 - 107 + (BYTE1(v51) ^ 0x73) - ((2 * (BYTE1(v51) ^ 0x73)) & 0xCA) - 10;
  *(unsigned char *)(a2 + (v50 + 2)) = (BYTE2(v51) ^ 0x2D) - ((2 * (BYTE2(v51) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v50 + 3)) = (HIBYTE(v51) ^ 0x52) - ((2 * (HIBYTE(v51) ^ 0x52)) & 0xCA) - 27;
  if (v48 + 2132746472 < v46 != a45 + 1885258533 < v46) {
    BOOL v52 = a45 + 1885258533 < v46;
  }
  else {
    BOOL v52 = v48 + 2132746472 < (a45 + 1885258533);
  }
  return (*(uint64_t (**)(void))(v49 + 8 * ((53 * !v52) ^ v47)))();
}

uint64_t sub_1B027E7EC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1974 * (v1 <= v0 + 623)) ^ (LODWORD(STACK[0x3FC]) - 382))))();
}

void sub_1B027E82C()
{
}

uint64_t sub_1B027E84C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8
                                                     * (int)(((((v2 ^ 0x21D) + 2027898454) & 0x8720B7B4) + 1099) ^ v2 ^ 0x21D)))(a1, 1071499190);
}

void sub_1B027E8D0()
{
  v0[31] = 0x51CA1D3C38A092EALL;
  v0[32] = v0 + 33;
  v0[65] = 0x51CA1D3C38A092EALL;
  v0[66] = v0 + 67;
  STACK[0x390] = (unint64_t)v0 + 0x67843F9A1244BCD3;
  v0[99] = 0x51CA1D3C38A092EALL;
  v0[100] = v0 + 101;
  STACK[0x398] = (unint64_t)v0 + 0x67843F9A1244BDE3;
  v0[133] = 0x51CA1D3C38A092EALL;
  v0[134] = v0 + 135;
  STACK[0x3A0] = (unint64_t)v0 + 0x67843F9A1244BEF3;
  v0[167] = 0x51CA1D3C38A092EALL;
  v0[168] = v0 + 169;
  STACK[0x3D8] = (unint64_t)v0 + 0x67843F9A1244C003;
  unint64_t v6 = STACK[0x4B0] + 4;
  int v7 = v1 << ((16 * (v3 ^ 0xD2)) ^ 0x51);
  *(void *)(v5 - 168) = (char *)v0 + 0x67843F9A1244BBC3;
  int v8 = 460628867 * ((v5 - 742779128 - 2 * ((v5 - 192) & 0xD3BA17C8)) ^ 0x9F2C95B5);
  int v9 = v3 - 320;
  *(_DWORD *)(v5 - 184) = v3 - 320 + v8;
  *(_DWORD *)(v5 - 176) = v8 + (v1 ^ 0x51DAB138) + 868023252 + (v7 & 0xFFF7DF7C ^ 0x5C429D0C);
  *(void *)(v5 - 192) = v6;
  uint64_t v10 = 8 * (v3 + 1676);
  STACK[0x388] = v10;
  (*(void (**)(uint64_t))(v4 + v10))(v5 - 192);
  uint64_t v11 = v6 + v2;
  int v12 = 460628867 * ((((2 * (v5 - 192)) | 0xF786B5D8) - (v5 - 192) + 71083284) ^ 0xB755D891);
  *(void *)(v5 - 192) = v11;
  *(void *)(v5 - 168) = STACK[0x390];
  *(_DWORD *)(v5 - 176) = v12 + (v1 ^ 0xD1DAB178) - 1279460460 + (v7 & 0xFFF7DFFC ^ 0x5C429D0C);
  *(_DWORD *)(v5 - 184) = v3 - 320 + v12;
  uint64_t v13 = 8 * (v3 ^ 0x9B4);
  STACK[0x390] = v13;
  (*(void (**)(uint64_t))(v4 + v13))(v5 - 192);
  uint64_t v14 = v11 + v2;
  int v15 = 460628867 * ((((v5 - 192) | 0xEF072E79) - ((v5 - 192) & 0xEF072E79)) ^ 0xA391AC04);
  *(void *)(v5 - 192) = v14;
  *(void *)(v5 - 168) = STACK[0x398];
  *(_DWORD *)(v5 - 176) = v15 + (v1 ^ 0x919FA170) - 201725028 + (v7 & 0x7F7DFFEC ^ 0x5C40BD0C);
  *(_DWORD *)(v5 - 184) = v3 - 320 + v15;
  unint64_t v16 = STACK[0x388];
  (*(void (**)(uint64_t))(v4 + STACK[0x388]))(v5 - 192);
  uint64_t v17 = v14 + v2;
  int v18 = 460628867 * (((v5 - 192) & 0xE3F88CC4 | ~((v5 - 192) | 0xE3F88CC4)) ^ 0x5091F146);
  *(void *)(v5 - 192) = v17;
  *(void *)(v5 - 168) = STACK[0x3A0];
  *(_DWORD *)(v5 - 176) = v18 + (v1 ^ 0x1999A110) + 2080369660 + (v7 & 0x6F71FF2C ^ 0x4C40BD0C);
  *(_DWORD *)(v5 - 184) = v9 + v18;
  (*(void (**)(uint64_t))(v4 + v16))(v5 - 192);
  int v19 = 460628867 * ((((v5 - 192) | 0x6C255846) - ((v5 - 192) & 0x6C255846)) ^ 0x20B3DA3B);
  *(void *)(v5 - 192) = v17 + v2;
  *(void *)(v5 - 168) = STACK[0x3D8];
  *(_DWORD *)(v5 - 176) = v19 + (v1 ^ 0x55DFA155) + 934931391 + (v7 & 0xF7FDFFA6 ^ 0x5440BD04);
  *(_DWORD *)(v5 - 184) = v9 + v19;
  (*(void (**)(uint64_t))(v4 + STACK[0x390]))(v5 - 192);
  JUMPOUT(0x1B026EFBCLL);
}

uint64_t sub_1B027ED04(_DWORD *a1)
{
  unsigned int v2 = *a1 - 1734042137 * ((a1 & 0x8260E9F2 | ~(a1 | 0x8260E9F2)) ^ 0x2151D540);
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_1F08CDB40 + (int)(v2 ^ 0x65081064))
                                                         + 8 * (int)(v2 ^ 0x65081894)
                                                         - 4))((char *)*(&off_1F08CDB40 + (int)(v2 - 1695027416)) - 8, sub_1B026CC9C);
  int v4 = *(_DWORD *)*(&off_1F08CDB40 + (int)(v2 ^ 0x6508108F));
  if (result) {
    int v4 = 1373504568;
  }
  a1[1] = v4;
  return result;
}

uint64_t sub_1B027EDDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((a6 + ((v8 - 769654073) | 0xC0DA441) - 230) * (v6 == v7)) ^ v8)))();
}

void sub_1B027EE18(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_1F08CDB40
                + ((-19 * (dword_1E9B2FDB0 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (dword_1E9B2FDB0 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0xCB])
                - 12);
  uint64_t v3 = *(void *)(v2 - 4);
  int v4 = (unint64_t *)*(&off_1F08CDB40
                           + ((-19 * (v3 ^ qword_1E9B2FDF8 ^ 0xED)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * (v3 ^ qword_1E9B2FDF8 ^ 0xED))] ^ 0xCB])
                           - 58);
  unint64_t v5 = (unint64_t)&v9[*v4 ^ v3];
  uint64_t v6 = 1469428717 * v5 + 0x13BC45BED9160A13;
  unint64_t v7 = 1469428717 * (v5 ^ 0xEC43BA4126E9F5EDLL);
  *(void *)(v2 - 4) = v6;
  unint64_t *v4 = v7;
  LODWORD(v4) = 1469428717 * ((v7 - *(_DWORD *)(v2 - 4)) ^ 0x26E9F5ED);
  int v8 = (char *)*(&off_1F08CDB40
               + ((-19 * (dword_1E9B2FDB0 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C5D00[byte_1B04C0480[(-19 * (dword_1E9B2FDB0 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x1E])
               + 148)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (*((unsigned char *)off_1F08CE078
                                                                       + (*((unsigned __int8 *)off_1F08CDD60
                                                                          + v4
                                                                          - 12) ^ 0x33u)
                                                                       - 4) ^ v4)
                                                   + 15216])((char *)*(&off_1F08CDB40+ (*((unsigned char *)off_1F08CDD10+ (*((unsigned __int8 *)off_1F08CDB78 + v4) ^ 0x3Du)- 8) ^ v4)- 47)- 4, sub_1B0284D04);
  __asm { BRAA            X10, X17 }
}

void sub_1B027EFF4()
{
}

uint64_t sub_1B027F014@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25)
{
  int v29 = v25 + 240;
  int v30 = (v25 + 240) ^ 0x4824F6D0;
  unsigned int v31 = (v26 + v25 + 240 - 1194) ^ 0xEAFA1517;
  BOOL v33 = a25 - v27 != v30 || a1 == v31;
  return (*(uint64_t (**)(void))(v28 + 8 * ((78 * v33) ^ v29)))();
}

void sub_1B027F074(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B027F0DC@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (a3 - 853605374)) = *(unsigned char *)(a2 + (v5 - 158929244));
  return (*(uint64_t (**)(void))(v7 + 8 * (v3 ^ (4 * (v6 + v4 + 18 < ((2 * v3) ^ 0x1D6u))))))();
}

uint64_t sub_1B027F138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  STACK[0x278] = a7;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((1759 * (v7 == v9 + LODWORD(STACK[0x3FC]) - 1104 - 256)) ^ (LODWORD(STACK[0x3FC]) - 1013))))();
}

uint64_t sub_1B027F170()
{
  unsigned int v5 = ((v2 + 51) ^ 0x214)
     + (((v4 - v3) >> 4) & 0xFFFFEFE ^ 0xBFEB880)
     + (((v4 - v3) >> 5) ^ 0xFA00A33F)
     - 1033265096;
  int v6 = (v1 > 0x3D965F60) ^ (v5 < ((7 * ((v2 + 51) ^ 0x214)) ^ 0xC269A6C7));
  BOOL v7 = v5 < v1 - 1033264993;
  if (v6) {
    BOOL v7 = v1 > 0x3D965F60;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((1083 * v7) ^ (v2 + 51))))();
}

uint64_t sub_1B027F220@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 + v5 + a2 - 1) = v6;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + v5 < (unint64_t)(v3 - 1304)) * a1) ^ v2)))();
}

uint64_t sub_1B027F250()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((952
                                * ((((v1 & 0x2638E773) - 1080) & v0) == ((((v1 & 0x2638E773) - 768) | 0x400) ^ 0x550))) ^ v1 & 0x2638E773u)))();
}

uint64_t sub_1B027F29C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 8 * ((1013 * (((4 * (a9 ^ 0x75B)) ^ (v24 - 1252) ^ (4 * (a9 ^ 0x75B) + 1130876293)) == -1373544826)) ^ (4 * (a9 ^ 0x75B)))))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24);
}

void sub_1B027F300(uint64_t a1)
{
  int v1 = 1224239923 * (((a1 | 0xC16B5AED) - (a1 & 0xC16B5AED)) ^ 0x33D8A73A);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1B027F3CC()
{
  return sub_1B027F3D4((v0 + 64));
}

uint64_t sub_1B027F3D4@<X0>(uint64_t a1@<X5>, int a2@<W8>)
{
  int8x16_t v10 = *(int8x16_t *)(v6 + (v5 + v2 + v3 + 16));
  *(int8x16_t *)(a1 + v3) = vaddq_s8(vsubq_s8(v10, vandq_s8(vaddq_s8(v10, v10), v9)), v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v3 == 48) * v4) ^ (a2 + 808))))();
}

uint64_t sub_1B027F41C(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 + 510)))(a1, 0);
  if (result == 16)
  {
    int v3 = 1733248770;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 ^ 0xEF4)))(a1);
    goto LABEL_8;
  }
  if (result)
  {
    int v3 = -17347737;
    goto LABEL_7;
  }
  void *v4 = a1;
  int v3 = 469093697;
LABEL_8:
  *(_DWORD *)(v1 + 12) = 1275523731 * v3 + 2051912109;
  return result;
}

uint64_t sub_1B027F4B4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((17 * ((v1 + 7) ^ 0x6CF) - 787) ^ (v1 - 773)) * (v0 > 0x1F)) ^ (v1 + 7))))();
}

uint64_t sub_1B027F4F0@<X0>(int a1@<W2>, unsigned int a2@<W3>, int a3@<W4>, int a4@<W5>, char a5@<W6>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v15 = (v10 + a1) & a2;
  uint64_t v16 = (v11 + a4);
  *(unsigned char *)(a6 + v16 + 4) = ((v16 & 0xF) * a5) ^ *(unsigned char *)(v12 + v16) ^ *(unsigned char *)(v7 + (v16 & 0xF)) ^ *(unsigned char *)(a7 + (v16 & 0xF)) ^ *(unsigned char *)((v16 & 0xF) + v8 + v15 - 1359) ^ v13;
  return (*(uint64_t (**)(void))(v14
                              + 8 * (int)(((v11 - 1 == (v15 ^ a3 ^ v9)) * (v15 - 896)) ^ (v15 + 423))))();
}

void sub_1B027F570()
{
  *(_DWORD *)(v2 - 192) = 1225351577 * ((v2 - 1120227382 - 2 * ((v2 - 192) & 0xBD3AB08A)) ^ 0x9EA0689C)
                        + 426522076
                        + v0
                        + 795;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x8C2)))(v2 - 192);
  LODWORD(STACK[0x2B0]) += v0 ^ 0x93;
  *(_DWORD *)(v2 - 192) = (v0 + 1077) ^ (1224239923
                                       * ((-2 - ((~(v2 - 192) | 0x2566DBC3) + ((v2 - 192) | 0xDA99243C))) ^ 0xD7D52614));
  *(unsigned char *)(v2 - 160) = (51 * ((-2 - ((~(v2 + 64) | 0xC3) + ((v2 + 64) | 0x3C))) ^ 0x14)) ^ 0x55;
  *(void *)(v2 - 168) = STACK[0x258];
  *(void *)(v2 - 184) = STACK[0x260];
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x8EC)))(v2 - 192);
  LODWORD(STACK[0x5B4]) = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x2B4]) = 1318476601;
  JUMPOUT(0x1B027F694);
}

void sub_1B027F6E0()
{
}

uint64_t sub_1B027F6E8(uint64_t result)
{
  uint64_t v1 = 1178560073 * (((result | 0x39CAC1B204E59057) - (result & 0x39CAC1B204E59057)) ^ 0x473C2F236F39017);
  unint64_t v2 = *(void *)(result + 16) + v1;
  unint64_t v3 = *(void *)result ^ v1;
  BOOL v4 = v2 == v3;
  BOOL v5 = v2 >= v3;
  int v6 = !v4;
  if (((*(_DWORD *)(result + 12) + v1) & 1) == 0) {
    BOOL v5 = v6;
  }
  BOOL v4 = !v5;
  uint64_t v7 = 36;
  if (!v4) {
    uint64_t v7 = 32;
  }
  *(_DWORD *)(result + 28) = *(_DWORD *)(result + v7) ^ v1 ^ (*(_DWORD *)(result + 8) - v1);
  return result;
}

void sub_1B027F778(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 28) + 3804331 * ((((2 * a1) | 0x5B2BA828) - a1 - 764793876) ^ 0xD70B2742);
  unsigned int v2 = 628203409 * ((v5 & 0x191DCCAC | ~(v5 | 0x191DCCAC)) ^ 0x646A3F60);
  v5[0] = v1 + v2 + 1172345372;
  v5[2] = v2 - 290923570;
  int v6 = &STACK[0x843828D0CDF3549];
  unint64_t v3 = (char *)*(&off_1F08CDB40 + v1 + 89) - 4;
  (*(void (**)(_DWORD *))&v3[8 * v1 + 16736])(v5);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1B027FA70@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 + 942)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1102148612;
  *(_DWORD *)(v1 + 56) = 490784367;
  return result;
}

uint64_t sub_1B027FACC(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 24) = a4;
  return result;
}

void sub_1B027FAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  *(void *)(v14 - 120) = v11;
  *(void *)(v14 - 112) = a11;
  *(_DWORD *)(v14 - 104) = (v13 + 1074) ^ (1734042137
                                         * ((((v14 - 120) | 0x9B585179) + (~(v14 - 120) | 0x64A7AE86)) ^ 0xC7969235));
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0x6FD)))(v14 - 120);
  JUMPOUT(0x1B027FB38);
}

uint64_t sub_1B027FB74()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((v3 + 1968713411) ^ 0x92EDE7E2 ^ (v1 + 2259) ^ (v3 + 1968713411) & 0x8AA7CE76)
                                     * (v2 > 0x1F)) ^ v3)))();
}

uint64_t sub_1B027FBC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v16 - 128) = a14;
  *(void *)(v16 - 120) = &STACK[0x67843F9A1244BAFB];
  *(_DWORD *)(v16 - 112) = (v15 + 935) ^ (1734042137
                                        * ((((v16 - 128) | 0x72BE3ED3) - ((v16 - 128) & 0x72BE3ED3)) ^ 0x2E70FD9E));
  (*(void (**)(uint64_t))(v14 + 8 * (v15 ^ 0x646)))(v16 - 128);
  *(void *)(v16 - 112) = a14;
  *(void *)(v16 - 120) = a13;
  *(_DWORD *)(v16 - 128) = (v15 + 647) ^ (1374699841
                                        * ((8117679 - ((v16 - 128) | 0x7BDDAF) + ((v16 - 128) | 0xFF842250)) ^ 0x92703A59));
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v15 ^ 0x98C)))(v16 - 128);
  BOOL v18 = *(_DWORD *)(v16 - 124) <= ((v15 - 271) | 0x261u) + 645999156;
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * (((4 * v18) | (8 * v18)) ^ v15)))(v17);
}

uint64_t sub_1B027FD14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,unint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,unsigned int a50)
{
  int v53 = 3804331 * ((2 * ((v52 - 168) & 0x6A05AD98) - (v52 - 168) - 1778757019) ^ 0x6F64A133);
  *(_DWORD *)(v52 - 168) = v53 + v50 + 1355;
  *(_DWORD *)(v52 - 164) = v53 ^ a12;
  STACK[0x320] = a28;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v50 + 2100)))(v52 - 168);
  uint64_t v55 = a50 & (v50 ^ 0xDLL);
  *(&a41 + (v55 ^ 0xF)) = 101;
  return (*(uint64_t (**)(uint64_t))(v51 + 8 * ((425 * ((v55 ^ 0xF) > 0x37)) ^ v50)))(v54);
}

uint64_t sub_1B027FE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v18 = v15 + a9;
  if (v18 >= 0) {
    unsigned int v19 = v18;
  }
  else {
    unsigned int v19 = -v18;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * (int)((((674 * (v16 ^ 0x516) + 51) ^ (v16 + 630763570) & 0xDA674FFD) * (v19 > 0x82)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1B027FE80()
{
  int v4 = v1 + 152230860;
  BOOL v5 = v4 < ((v2 + 1014089749) & 0x438E375F) - 623053391;
  BOOL v6 = v3 + 152230860 < v4;
  if (v3 + 152230860 < -623052536 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((!v6 * (v2 - 987)) ^ v2)))();
}

uint64_t sub_1B027FF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (int)(((*(_DWORD *)(v12 + 72) == ((((v10 + 1603055971) & 0xA0734DF7) + 1946170123) | 0x8300002B) + a5) * ((((v10 + 1603055971) & 0xA0734DF7) + 504) ^ 0x42)) ^ (v10 + 1603055971) & 0xA0734DF7)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1B027FF70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,uint64_t a22,int a23)
{
  unsigned int v31 = &a23 + 6 * v24;
  v31[2] = v25;
  v31[3] = v29;
  *((void *)v31 + 2) = a18;
  v31[6] = a20;
  a23 = v23 + a9 - 133;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((1007 * ((a9 ^ 0x118u) + *(_DWORD *)(v28 + 48 * v27 + 32) + 220123653 < v30)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13);
}

uint64_t sub_1B027FFE8(unsigned int a1)
{
  int v6 = (v2 - 1233) | 0x234;
  BOOL v7 = v1 < a1;
  unsigned int v8 = v4 + v5 + 1077;
  int v9 = v7 ^ (v8 < ((4 * v6) ^ 0xCE0u) + v4);
  BOOL v10 = v8 < v1;
  if (!v9) {
    BOOL v7 = v10;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((121 * v7) ^ v6)))();
}

void sub_1B0280460(uint64_t a1@<X1>, int a2@<W8>)
{
  int v4 = a2 + 816;
  (*(void (**)(void, uint64_t, void))(v2 + 8 * (a2 + 2054)))(*(unsigned int *)STACK[0x2B8], a1, ((a2 + 816) ^ 0x97E8F431) + LODWORD(STACK[0x2D0]));
  *(_DWORD *)(v3 - 192) = 1225351577
                        * ((((v3 - 192) | 0x3CD09B98) - (v3 - 192) + ((v3 - 192) & 0xC32F6460)) ^ 0x1F4A438E)
                        + 426522076
                        + v4;
  (*(void (**)(uint64_t))(v2 + 8 * (v4 ^ 0xBFD)))(v3 - 192);
  JUMPOUT(0x1B02804FCLL);
}

uint64_t sub_1B0280544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 ^ a7) ^ (((v8 + 1165) ^ a8) + v10 == 32)) & 1 ^ v8)))();
}

uint64_t sub_1B0280578(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((110
                                * ((((unint64_t)(v2 - a1) < 0x20) ^ ((a2 ^ 0x72) + 99)) & 1)) ^ a2)))();
}

void sub_1B02805B4(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = (((v6 + 144997783) & 0xF75B847F) - 550033997) & (1014742052 - v7);
  unsigned int v9 = 1178560073 * ((((2 * &a2) | 0x86FADB5C) - &a2 - 1132293550) ^ 0x716B6DEE);
  a4 = v9 - v4 - v8 + 232354547;
  a3 = v5;
  a2 = v6 - v9 + 657;
  (*(void (**)(int *))(a1 + 8 * (v6 + 1653)))(&a2);
  JUMPOUT(0x1B028065CLL);
}

void sub_1B0280684(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,int a63)
{
  STACK[0x3D8] = v63;
  *(_DWORD *)(STACK[0x648] + (((a63 & 0xF9D1CBEF ^ 0xF348DC57) + LODWORD(STACK[0x54C])) & 0xFFFFFFFC)) = v64;
  JUMPOUT(0x1B0255EFCLL);
}

void sub_1B02806CC()
{
}

uint64_t sub_1B0280744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a10 - 0x571561323F812302) = -1678725293 - v14;
  int v20 = 460628867 * ((v19 + 584760077 - 2 * ((v19 - 136) & 0x22DABB95)) ^ 0x6E4C39E8);
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 120) = v20 + v16 - 470;
  *(_DWORD *)(v19 - 136) = 774089200 - v20;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xCCB)))(v19 - 136);
  int v21 = 535753261 * (((~(v19 - 136) & 0x71E37D66) - (~(v19 - 136) | 0x71E37D67)) ^ 0x7B177348);
  *(void *)(v19 - 136) = v18;
  *(_DWORD *)(v19 - 128) = v21
                         + ((v17 << 6) & 0xE3D7A5C0)
                         + 1876934588
                         + ((v17 << (55 * (v16 ^ 0xA2) - 16)) ^ 0xF1EBD2ED);
  *(_DWORD *)(v19 - 124) = v21 + v16 - 18;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 963)))(v19 - 136);
  *(void *)(v19 - 128) = &STACK[0x67843F9A1244BAFB];
  *(void *)(v19 - 136) = a14;
  *(_DWORD *)(v19 - 120) = (v16 + 153) ^ (1734042137
                                        * ((((2 * (v19 - 136)) | 0x1BEBF396) - (v19 - 136) + 1913259573) ^ 0xD13B3A86));
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0x354)))(v19 - 136);
  *(void *)(v19 - 128) = v18;
  *(void *)(v19 - 120) = a14;
  *(_DWORD *)(v19 - 136) = (v16 - 135) ^ (1374699841
                                        * (((((v19 - 136) ^ 0x60944128 | 0xF4B9EC4) ^ 0xFFFFFFFE)
                                          - ((v19 - 136) ^ 0x5099404 | 0xF0B4613B)) ^ 0xF79632DA));
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xC9E)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((473 * (*(_DWORD *)(v19 - 132) > 0x26812D29u)) ^ v16)))(v22);
}

uint64_t sub_1B02809B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v6 = v4 > ((3 * (v5 ^ (v5 + 107))) ^ 0xDCFE8394);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v3
                                                                       + 8
                                                                       * (((2 * v6) | (4 * v6)) ^ (v5 + 1174669493))))(a1, a2, a3, 1460018998);
}

uint64_t sub_1B0280A0C()
{
  *(void *)(v5 - 136) = v0;
  *(void *)(v5 - 128) = v4;
  *(_DWORD *)(v5 - 120) = v2 + 1759421093 * ((v5 - 136) ^ 0xB37DB054) + 1465;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xA32)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((v3 == v2 + 1771410138) * (((2 * v2) ^ 0x5D0) + 1127)) ^ v2)))(v6);
}

void sub_1B0280A94()
{
}

uint64_t sub_1B0280B20(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((((a3 + 1015033599) & 0xC37FCAF9) - 234) * (v3 != v4)) | a3)))();
}

uint64_t sub_1B0280B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * ((1465 * (((67 * (v10 ^ 0x19C) - v12) ^ 0xFEC93996) == -1373544826)) ^ (67 * (v10 ^ 0x19C)))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t sub_1B0280BD0(uint64_t a1, int a2)
{
  BOOL v5 = v2 < 0x7DE91BE;
  if (v5 == v3 - 0x3E76A940C7A3DD45 < (unint64_t)((a2 - 397099732) & 0x17AB463E) + 132025236) {
    BOOL v5 = v3 - 0x3E76A940C7A3DD45 < v2;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v5 * (((a2 + 671720619) & 0xD7F65EBF) - 1509)) ^ a2)))();
}

void sub_1B0280C6C()
{
  if (v1 >= v0) {
    int v3 = *v2 + 1;
  }
  else {
    int v3 = 1517586988;
  }
  int *v2 = v3;
  JUMPOUT(0x1B028C23CLL);
}

uint64_t sub_1B0280C7C@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 ^ 0x30u) < (v3 ^ 0x53Bu)) * (a1 + a2 + v3 - 1331 - 535)) ^ v3)))();
}

uint64_t sub_1B0280CB4()
{
  return (*(uint64_t (**)(void))(v3 + 8
                                   * (((((v0 == v1) ^ (v2 + 1)) & 1) * ((v2 - 616) ^ 0x510)) | v2)))();
}

uint64_t sub_1B0280CF0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 738)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x458] != 0)) ^ (v0 + 279))))();
}

uint64_t sub_1B0280D34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,_DWORD *a34)
{
  unsigned int v40 = (v34 + 419103165) | 0xA100F863;
  uint64_t v41 = (*(uint64_t (**)(uint64_t, void))(v36 + 8 * (v34 ^ 0xADC)))(a10, 0);
  unsigned int v42 = LODWORD(STACK[0x538]) + 1460018998 - ((2 * LODWORD(STACK[0x538])) & 0xAE0C3E6C);
  LODWORD(STACK[0x528]) = LODWORD(STACK[0x530])
                        + 1460018998
                        - ((LODWORD(STACK[0x530]) << (((v34 - 67) | 0x63) ^ (v35 - 1))) & 0xAE0C3E6C);
  LODWORD(STACK[0x524]) = v42;
  int v43 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v34 + 1604)))(v41);
  LODWORD(STACK[0x52C]) = v43 + 1460018998 - ((2 * v43) & 0xAE0C3E6C);
  int v44 = (*(uint64_t (**)(void))(v36 + 8 * (v34 ^ 0xAC4)))();
  LODWORD(STACK[0x520]) = v44 + 1460018998 - ((2 * v44) & 0xAE0C3E6C);
  int v45 = (((*v38 >> 30) ^ 1) + 1460018998 + 2 * (((*v38 >> 30) ^ 1 | 0x7FFFFFF6) ^ (*v38 >> 30)) + 18) ^ *v38;
  unsigned int v46 = (*a34 ^ 0x57061F36) + ((1664525 * v45 + 1460018998 - ((3329050 * v45) & 0xAE0C3E6C)) ^ v38[1]);
  v38[1] = v46 + 1460018998 - ((2 * v46) & 0xAE0C3E6C);
  unint64_t v47 = 1759421093 * ((0x1CEA727676AB61F3 - (v37 | 0x1CEA727676AB61F3) + a33) ^ 0xCDAB4CD93A292E58);
  *(void *)(v39 - 136) = 1305396952 - v47;
  *(_DWORD *)(v39 - 144) = v47;
  int v48 = v40 - 1086025580 - v47;
  *(_DWORD *)(v39 - 112) = ((v40 - 1086025580) & 0x795C8CBE) - v47;
  *(_DWORD *)(v39 - 104) = v48 - 85;
  *(void *)(v39 - 120) = v47 ^ 0x4DCEC6D6;
  *(_DWORD *)(v39 - 128) = -1098935330 - v47 + v40;
  *(_DWORD *)(v39 - 124) = v48;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (int)(v40 + 1174670379)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v39 - 108)))(v49);
}

uint64_t sub_1B0280F90@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(*(void *)(result + 8) - 0x216229CD9A8FA111) = (a2 ^ 0x51DEA179)
                                                              - ((v2 + 2 * (a2 ^ 0x51DEA179) + 2147397047) & 0x5C42BD0C)
                                                              - 1373587425;
  return result;
}

uint64_t sub_1B0280FCC@<X0>(int a1@<W1>, unsigned int a2@<W2>, int a3@<W4>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,char a21)
{
  BOOL v29 = v21 < v22;
  *(&a21 + (v25 + a1)) = *(unsigned char *)(v26 + (a4 + v27))
                                     - ((*(unsigned __int8 *)(v26 + (a4 + v27)) << ((v23 - 64) ^ 0x2F)) & 0xCA)
                                     - 27;
  unsigned int v30 = a4 + 1 + a3;
  int v31 = v29 ^ (v30 < a2);
  BOOL v32 = v30 < v21;
  if (!v31) {
    BOOL v29 = v32;
  }
  return (*(uint64_t (**)(void))(v28 + 8 * ((!v29 * v24) ^ v23)))();
}

void sub_1B0281048()
{
}

uint64_t sub_1B028105C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((a11 - 1430261158 + v12 + 87 + 1221) < 0x7FFFFFFF) * (v12 - 285)) ^ v12)))();
}

uint64_t sub_1B02810A0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 ^ 0x6AE) + 1665) ^ (211 * (v1 ^ 0x6AE)))
                                * ((v0 + v2 - 1841020831) > 7)) | v1)))();
}

void sub_1B02810EC()
{
}

void sub_1B0281104()
{
  STACK[0x600] -= 32;
  JUMPOUT(0x1B0281150);
}

void sub_1B02811C4()
{
}

void sub_1B02811F4()
{
}

uint64_t sub_1B02811FC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v0 - 45) ^ ((*(unsigned char *)(v2 - 0x7761D79CB8DF4CFFLL) & 1) == 0)) & 1)
                                     * ((v0 + 534191578) & 0xE028E7F5 ^ 0x7DC)) ^ v0)))();
}

uint64_t sub_1B0281258()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v2 - 20) ^ (*(void *)(v0 + 8) == 0x31FD77B69BC3E185)) & 1)
                                * ((v2 + 333) ^ 0x3C4)) ^ (v2 + 333))))();
}

uint64_t sub_1B02812B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v5 = (v4 - 1444) | 0x120;
  *(unsigned char *)(a1 + (v3 - 1085811802) + 4) = (**(unsigned char **)(a2 + 8) ^ 0xF7)
                                                       + ((2 * **(unsigned char **)(a2 + 8)) & 0xEF)
                                                       + 112;
  unsigned int v6 = *(_DWORD *)(a2 + 4) - 1114302783;
  BOOL v7 = (v5 ^ 0xDBu) + 170122803 < v6;
  if (v6 < 0xA23E031) {
    BOOL v7 = 1;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((1179 * v7) ^ v5)))();
}

uint64_t sub_1B0281368@<X0>(unsigned int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, int a9@<W8>)
{
  BOOL v14 = a3 < a1;
  char v15 = *(unsigned char *)(a8 + (v12 + v9 + 16));
  *(unsigned char *)(a6 + (a9 + v11)) = ((v10 + a4) & a5) + v15 - (a7 & (2 * v15)) - 77;
  unsigned int v16 = v9 + 1 + a2;
  int v17 = v14 ^ (v16 < a1);
  BOOL v18 = v16 < a3;
  if (!v17) {
    BOOL v14 = v18;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * (v10 ^ (8 * !v14))))();
}

uint64_t sub_1B02813D8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8 * ((55 * (a7 + ((a5 + 965688793) & 0xC670C44D ^ (a3 + 1077)) > 0xFFFFFFEF)) ^ a5)))();
}

void sub_1B0281420()
{
}

uint64_t sub_1B028142C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((*(_DWORD *)(a18 + 4 * (a1 + v20 + 969)) == v18)
                                * (((v19 - 944) | 0xA9) - 318)) ^ (v19 - 775))))();
}

uint64_t sub_1B0281474(uint64_t a1, uint64_t a2, int a3, int a4)
{
  *(unsigned char *)(*(void *)(v7 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v7 + 72) == (((v4 + 922757761) | 0xC0000420) ^ a4))
                                * (v5 + a3 + v4 - 1279 - 139 - 361)) ^ (v4 - 1279))))();
}

uint64_t sub_1B02814CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17)
{
  int v23 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * (v22 ^ ((v19 > 1) * v18)));
  return v23(*(_DWORD *)(*a17 + 4 * (v20 - 1091580574)) ^ v17, a2, a3, a4, v23, a6, a7, 1620552182, a9, a10, a11, a12, a13, a14);
}

void sub_1B02814E0(unint64_t a1, unint64_t a2, char a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,int a21,uint64_t a22,unsigned char *a23,unsigned char *a24,_DWORD *a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  a23[3] = (HIBYTE(v34) ^ 0x6E) - 2 * ((HIBYTE(v34) ^ 0x6E) & 0x57 ^ HIBYTE(v34) & 1) + 86;
  a19[9] = BYTE5(v31) ^ (a26 + 16) ^ 0xE5;
  a19[15] = BYTE1(v34) ^ 0x9E;
  a24[8] = v34 ^ 0x58;
  a23[9] = (BYTE2(v34) ^ 0x82) - 2 * ((BYTE2(v34) ^ 0x82) & 0x57 ^ BYTE2(v34) & 1) + 86;
  a24[26] = BYTE4(v31) ^ 0x20;
  if ((v30 ^ 0xC42312DC2814049uLL) >= 0x8134422366A90F03) {
    a3 = (v30 ^ 0x49) - ((2 * (v30 ^ 0x49) - 6) & 0x88) - 63;
  }
  char v36 = a3 ^ 0xC4;
  if ((v30 ^ 0xC42312DC2814049uLL) >= 0x8134422366A90F03) {
    char v37 = 3;
  }
  else {
    char v37 = 0;
  }
  char v38 = v36 + v37;
  char v39 = *(unsigned char *)(a30 + 531 + (BYTE6(v31) ^ 0xDLL));
  a19[7] = HIBYTE(v31) ^ 0x5C;
  a24[27] = BYTE1(v30) ^ 0x40;
  a23[10] = (~(14 * (v39 ^ 0x9C)) | 0x53) - (v39 ^ 0x9C) + 8 * (v39 ^ 0x9C) + 87;
  a19[10] = v38;
  HIDWORD(v40) = *(unsigned __int8 *)(a30 + (((BYTE2(v30) ^ 0x81) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v40) = (HIDWORD(v40) << 26) ^ (HIDWORD(v40) << 24);
  a24[10] = BYTE4(v30) ^ 0x2D;
  a23[14] = (BYTE3(v30) ^ 0xC2) - ((2 * (BYTE3(v30) ^ 0xC2)) & 0xAC) + 86;
  a23[20] = (v40 >> 25) ^ 0x4A;
  a23[4] = (BYTE6(v30) ^ 0x42) - ((2 * (BYTE6(v30) ^ 0x42)) & 0xAC) + 86;
  a23[16] = (BYTE5(v30) ^ 0x31) + (~(2 * (BYTE5(v30) ^ 0x31)) | 0x53) + 87;
  unsigned int v41 = *(unsigned __int8 *)(a30 + (((HIBYTE(v30) ^ 0xC) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[20] = a2 ^ 0x42;
  HIDWORD(v40) = v41;
  LODWORD(v40) = (v41 << 26) ^ (v41 << 24);
  a23[15] = (v40 >> 25) ^ 0x4A;
  unsigned int v42 = *(unsigned __int8 *)(a15 + (((a2 >> 1) & 0x80 | ((unsigned __int16)a2 >> 9)) ^ 0xE1));
  a24[17] = BYTE3(a2) ^ 0x48;
  a19[14] = BYTE4(a2) ^ 0xCC;
  *a23 = BYTE5(a2) - ((2 * BYTE5(a2)) & 0xAC) - 42;
  a24[21] = HIBYTE(a2) ^ 0x1F;
  a24[13] = BYTE2(a2) ^ 0x50;
  a24[3] = (v42 ^ 0x8A ^ (v42 >> 2) & 0x17) + 32;
  a19[12] = BYTE6(a2) ^ 6;
  char v43 = *(unsigned char *)(a30 + 531 + (a1 ^ 0x35) + 2 * (a1 & 0xD5 ^ 0x15) - 4 * (a1 & 0xD5 ^ 0x15) + 213) ^ 0x9C;
  a24[11] = BYTE2(a1) ^ 0xB6;
  a23[5] = 7 * v43 - ((14 * v43) & 0xAC) + 86;
  a23[2] = (BYTE3(a1) ^ 0xE4) - ((2 * (BYTE3(a1) ^ 0xE4)) & 0xAC) + 86;
  a24[25] = BYTE1(a1) ^ 0x76;
  unsigned int v44 = *(unsigned __int8 *)(a15 + (((a1 >> 25) & 0x80 | (a1 >> 33) & 0x7F) ^ 0xB1));
  a24[22] = BYTE5(a1) ^ 0xD3;
  a24[18] = HIBYTE(a1) ^ 0x50;
  a24[2] = BYTE1(v33) ^ 0x56;
  a23[1] = v33 ^ 6;
  a24[30] = BYTE3(v32) ^ 0x5F;
  a24[9] = BYTE2(v33) ^ 0xBE;
  a24[19] = (v44 ^ 0x8A ^ (v44 >> 2) & 0x17) + 32;
  a23[7] = (BYTE6(a1) ^ 0x2B) + (~(2 * (BYTE6(a1) ^ 0x2B)) | 0x53) + 87;
  unsigned int v45 = *(unsigned __int8 *)(a30 + (((BYTE4(v32) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[24] = BYTE6(v32) ^ 0x81;
  a24[12] = BYTE5(v32) ^ 0xFD;
  HIDWORD(v40) = v45;
  LODWORD(v40) = (v45 << 26) ^ (v45 << 24);
  a24[1] = HIBYTE(v32) ^ 0x9D;
  a24[23] = (v40 >> 25) ^ 0x1C;
  *a25 = a21 - 1978387646;
  JUMPOUT(0x1B0281924);
}

uint64_t sub_1B0281960()
{
  BOOL v5 = v1 == 1321678224 || LODWORD(STACK[0x528]) - v2 != v0 + 1210380421 + ((v0 - 22119195) & 0x15182EF);
  return (*(uint64_t (**)(void))(v3 + 8 * ((2000 * v5) ^ (v0 + 711))))();
}

uint64_t sub_1B02819C8@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  unsigned int v9 = ((2 * (a6 + 1603)) & 0xFFF55B46) + ((a6 + 1603) ^ 0x7FFAADA3) - 2147134883;
  int v10 = ((*(unsigned __int8 *)(v8 + v9) ^ a2) << 24) | ((*(unsigned __int8 *)(v8 + v9 + 1) ^ a2) << 16) | ((*(unsigned __int8 *)(v8 + v9 + 2) ^ a2) << 8);
  int v11 = *(unsigned __int8 *)(v8 + v9 + 3) ^ a2;
  return (*(uint64_t (**)(uint64_t, void))(a7
                                                    + 8
                                                    * (((((((a3 - 422984778) & 0x1936369D) + 1073741676) & a4) == 0)
                                                      * ((a3 - 103) ^ 0x5D5)) ^ a3)))(a1, (v10 | v11) + v7 - 2 * ((v10 | v11) & a5 ^ v11 & 1u));
}

uint64_t sub_1B0281A90@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60)
{
  int v67 = ((((2 * v64) | 0x2B2F5662) - v64 + 1785222351) ^ 0x13AE268) * v60;
  *(void *)(v66 - 176) = a59;
  *(void *)(v66 - 192) = v63;
  *(_DWORD *)(v66 - 168) = v67 + v61 + 593;
  *(_DWORD *)(v66 - 184) = a1 - v67;
  *(void *)(v66 - 160) = a60;
  (*(void (**)(uint64_t))(v65 + 8 * (v61 + 2066)))(v66 - 192);
  int v68 = *(_DWORD *)(v66 - 152);
  STACK[0x5A8] = STACK[0x3D8];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, __n128))(v65 + 8 * (int)(((v68 == v62) * (((8 * v61) ^ 0xFFFFF9E0) + ((8 * v61) ^ 0x720))) ^ v61)))(1219, 1189, 1373504863, 1, 44, 2682113404, STACK[0x278], 2173439218, (__n128)0);
}

uint64_t sub_1B0281B84(int a1)
{
  int v5 = ((((v1 ^ 0x177) * v2 - 1040) | a1) ^ 0x4BA0E9E1) + v3;
  BOOL v7 = v5 > 1242880782 || v5 < SLODWORD(STACK[0x3D8]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1188 * v7) ^ v1)))();
}

void sub_1B0281BD8()
{
}

uint64_t sub_1B0281BE4(uint64_t a1, uint64_t a2)
{
  BOOL v9 = (v7 & (2 * (*(unsigned __int8 *)(a2 + 9) - 1))) + (v5 ^ (v6 - 142) ^ (*(unsigned __int8 *)(a2 + 9) - 1)) == v6
    && v2 + (v5 ^ (v3 + 142)) + 1806685755 < 0xC9;
  return (*(uint64_t (**)(void))(v4 + 8 * ((941 * v9) ^ v5)))();
}

uint64_t sub_1B0281C44@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((415 * (a2 + 1 != v3 + 48)) ^ a1)))();
}

uint64_t sub_1B0281D20@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v2 - 1473952188) & 0x57DABE6F ^ 0xFFFFFD6A) + ((v2 + 734) | 0x100))
                                     * (a1 - v1 == -344826002)) ^ v2)))();
}

uint64_t sub_1B0281D84()
{
  STACK[0x468] = v1 - 112;
  return v0();
}

uint64_t sub_1B0281D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  int v12 = *(_DWORD *)(v11 - 220 + ((v9 + v7) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v9 + v7)) = v12 ^ 0x8F;
  *(unsigned char *)(a2 + (v9 + v7 + 1)) = ((v8 - a6 - 116) ^ BYTE1(v12))
                                               - ((2 * ((v8 - a6 - 116) ^ BYTE1(v12))) & 0xCA)
                                               - 27;
  *(unsigned char *)(a2 + (v9 + v7 + 2)) = (BYTE2(v12) ^ 0x2D) - ((2 * (BYTE2(v12) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a2 + (v9 + v7 + 3)) = (HIBYTE(v12) ^ 0x52) - ((2 * (HIBYTE(v12) ^ 0x52)) & 0xCA) - 27;
  unsigned int v13 = *(_DWORD *)(v11 - 128) - 1985218026;
  BOOL v14 = v13 < v6;
  BOOL v15 = v9 + 1941107158 < v13;
  if (v9 + 1941107158 < v6 != v14) {
    BOOL v15 = v14;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (((8 * v15) | (32 * v15)) ^ v8)))();
}

void sub_1B0281E74()
{
}

uint64_t sub_1B0282034@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((61 * (v1 - a1 >= ((272 * (((v2 - 210) | 4) ^ 0x448u)) ^ 0x570uLL))) ^ v2)))();
}

uint64_t sub_1B028207C@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  uint64_t v12 = (v6 + v8);
  *(unsigned char *)(a1 + v12 + 36) = *(unsigned char *)(v10 + v12) ^ ((v12 & 0xF) * v9) ^ *(unsigned char *)(v2 + (v12 & 0xF)) ^ *(unsigned char *)((v12 & 0xF) + v3 + 1) ^ (v5 - 58) ^ *(unsigned char *)(a2 + (v12 & 0xF));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v6 - 1 != v4) * v7) ^ (v5 + 1803))))();
}

uint64_t sub_1B02820EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a8 - 842) | a5) + 2813) * (v9 == 0)) ^ a8)))();
}

uint64_t sub_1B0282120(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(v4 + 72) == a3 + 1284424883) * (((a3 - 97) ^ 0x1ED) - 1115)) ^ (a3 - 97))))();
}

uint64_t sub_1B028218C()
{
  BOOL v9 = v3 > 0x6177BBE7;
  *(unsigned char *)(v8 + (v5 - 703318618)) = *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 393))
                                                             + (((_BYTE)v5 - 90) & 0xF)
                                                             - 4) ^ *(unsigned char *)(v0 + (v5 - 703318618)) ^ (23 * ((v5 - 90) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 - 308)) + (((_BYTE)v5 - 90) & 0xF)) ^ *(unsigned char *)(*(void *)(v6 + 8 * (v2 ^ 0x1FF)) + ((v5 - 703318618) & 0xFLL) - 3);
  if (v9 == v5 + 1956411839 < ((5 * (v2 ^ 0xD6)) ^ v1)) {
    BOOL v9 = v5 + 1956411839 < v4;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((1840 * v9) ^ v2)))();
}

uint64_t sub_1B0282304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, int a12, int a13, unsigned int a14)
{
  unsigned int v17 = 1178560073 * (&a10 ^ 0x32160040);
  a10 = v15;
  a11 = &STACK[0x31FD77B69BC3E185];
  a13 = v17 + v14 + 58;
  a14 = -945054523 - v17;
  a12 = v17 ^ 0x294A23BF;
  uint64_t v18 = (*(uint64_t (**)(uint64_t *))(v16 + 8 * (v14 ^ 0x9FEu)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (int)(((*(_DWORD *)(v15 - 0x7761D79CB8DF4CFBLL) == -1373544826)
                                                   * (((v14 + 245) ^ 0xFFFFFFE2) + v14 + 245)) ^ v14)))(v18);
}

uint64_t sub_1B02823C8(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * (int)(((((v3 + 1595619375) & 0xA0E4C3DB) + 1540)
                                                                     * (v2 == -1373544826)) ^ (v3 - 1013))))(a1, a2, 1373504863);
}

void sub_1B0282414()
{
  LODWORD(STACK[0x404]) = v0;
  LODWORD(STACK[0x4A4]) = v1;
  LODWORD(STACK[0x418]) = v2;
  LODWORD(STACK[0x504]) = v3;
  LODWORD(STACK[0x54C]) = v4 + 64;
  JUMPOUT(0x1B0255F5CLL);
}

uint64_t sub_1B0282458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((((v13 + 597) | 0x58) - 1088) * (a11 == v11 - 4)) ^ v13)))();
}

uint64_t sub_1B028248C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, int a4, unint64_t *a5, char a6, unsigned int a7, unint64_t *a8, unint64_t *a9, int a10, uint64_t a11)
{
  int v14 = v11 ^ 0x53A;
  uint64_t v15 = *v12;
  unsigned int v16 = 1374699841 * ((-2 - ((~&a4 | 0x67E19C01) + (&a4 | 0x981E63FE))) ^ 0xA158408);
  a7 = ((((v14 + 1005827921) ^ 0x3BF3BC69) - 83636177) ^ a1)
     - v16
     - 1619132439
     + ((a1 << ((v14 + 81) ^ 0xF7)) & 0xEB2EDDEE ^ 0x9285862);
  a6 = 65 * ((-2 - ((~&a4 | 1) + (&a4 | 0xFE))) ^ 8) - 49;
  a10 = v14 - v16 - 1691;
  a5 = &STACK[0x950CE2110AB3F42];
  a11 = v15;
  a8 = &STACK[0x567D362CA97960E0];
  a9 = &STACK[0x7F632B302E085251];
  uint64_t v17 = (*(uint64_t (**)(int *))(v13 + 8 * (v14 + 231)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((4020 * (a4 == -1373544826)) ^ v14)))(v17);
}

void sub_1B02825EC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0282634(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((v5 + 558877469) & 0xDEB033F5) + 128) ^ ((v5 - 350) | 0x480)) * (v4 == a4)) ^ v5)))();
}

void sub_1B028267C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  *(_DWORD *)(v18 - 104) = (a1 + 1336) ^ (((v18 - 1701629415 - 2 * ((v18 - 144) & 0x9A9332A9)) ^ 0x29EE82FD) * v17);
  *(void *)(v18 - 120) = a17;
  *(void *)(v18 - 112) = a17;
  *(void *)(v18 - 136) = a5;
  *(void *)(v18 - 128) = a15;
  *(void *)(v18 - 144) = a14;
  JUMPOUT(0x1B0256374);
}

uint64_t sub_1B02826E8()
{
  return sub_1B0282710();
}

uint64_t sub_1B0282710@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  int v9 = (*(unsigned __int8 *)(v4 + a2) ^ v7) - (*(unsigned char *)(v2 + a2) + ((v3 - 62) | 0x40) - 102);
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a1 & (2 * v9)) + (v9 ^ v5) == v5) * v6) ^ v3)))();
}

uint64_t sub_1B028275C(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = v4 == ((((a3 - 1013391561) ^ 0xC398E700) + 354497804) ^ (a3 - 1013391561) & 0x3C671FFB);
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v5) | (16 * v5)) ^ a3)))();
}

uint64_t sub_1B02827C8()
{
  if ((v0 - 845113408) > 0x18 || ((1 << (v0 - 64)) & 0x1000581) == 0) {
    JUMPOUT(0x1B0270DF0);
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((896 * ((v3 & 0xFFFFFFFFFFFFFFFuLL) - 1 < ((v4 + v1 + 569) ^ 0x2BDuLL))) ^ (v4 + v1 + 255))))();
}

uint64_t sub_1B028283C(uint64_t a1, int a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((13
                                * ((a3 ^ (a2 + v3 + 63 < v3
                                                                        + 214418082
                                                                        + ((a3 + 1409887215) | 0x8A248045))) & 1)) ^ a3)))();
}

uint64_t sub_1B02828E8()
{
  int v2 = v0 - 216;
  STACK[0x468] = STACK[0x468] + ((v2 + 834603819) & 0xCE40F7DB) - 1376;
  return (*(uint64_t (**)(void))(v1 + 8 * (((v2 ^ 0x719) + 109) ^ v2)))();
}

uint64_t sub_1B0282934()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((LODWORD(STACK[0x3FC]) - 639) | (4
                                                                * (v0 >= (((LODWORD(STACK[0x3FC]) ^ 0x684) - 255) ^ 0xD5E073AA))))))();
}

uint64_t sub_1B028296C(uint64_t a1, double a2)
{
  *(double *)(v5 + a1) = a2;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((v2 == a1) * v6) ^ v3)))(a1 + v4);
}

uint64_t sub_1B0282994()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((44
                                * ((((863 * (v2 ^ 0x800)) ^ (v1 + v0 + (((v2 ^ 0x800) + 458) ^ 0x8180B329) < 8)) & 1) == 0)) | v2)))();
}

void sub_1B02829F8()
{
}

uint64_t sub_1B0282A00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v74 = STACK[0x240];
  *(void *)(v74 + 1560) = *(void *)STACK[0x558];
  *(_DWORD *)(v74 + 1552) = *(_DWORD *)STACK[0x540];
  *(void *)(*(void *)(a70 + 96) + 488) = *(void *)(a70 + 8);
  int v75 = 35 * (v72 ^ 0x561);
  *(_DWORD *)(*(void *)(a70 + 96) + 480) = *(_DWORD *)a70;
  *(unsigned char *)(a72 + STACK[0x278]) = ((((v75 - 20) & 0x7C) - 98) ^ STACK[0x200]) * a71;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v73 + 8 * v75))(1219, 1189, a3, a4, a5, 2682113404);
}

uint64_t sub_1B0282AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1010 * (((v15 == 0) ^ v16) & 1)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a2, a10, a11, a12, a13, a14, a15, v18 + 0x345B219028409FF8);
}

uint64_t sub_1B0282BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  char v14 = *(unsigned char *)(v12 + (v10 ^ (4 * v9)) + v11 + v7);
  *(unsigned char *)(a6 + v8) = v14 - (a7 & (2 * v14)) - 27;
  return (*(uint64_t (**)(void))(v13 + 8 * ((2 * (v8 != 63)) | (16 * (v8 != 63)) | v9)))();
}

void sub_1B0282C18()
{
  *(_DWORD *)(v2 - 120) = v0;
  *(_DWORD *)(v2 - 116) = v1;
  *(_DWORD *)(v2 - 124) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x1B0282C84);
}

void sub_1B0282D54(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v2 = *(void *)a1;
  int v3 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86);
  if (*(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v4 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v4 = 1372200252 - *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7);
  }
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v1 - 0x67843F9A1244BAC7) - 1372200252 >= 0) {
    unsigned int v5 = *(_DWORD *)(v1 - 0x67843F9A1244BAC7) - 1372200252;
  }
  else {
    unsigned int v5 = 1372200252 - *(_DWORD *)(v1 - 0x67843F9A1244BAC7);
  }
  unsigned int v8 = v3 + 535753261 * ((((2 * &v8) | 0xAFB699A2) - &v8 - 1473989841) ^ 0x5D2F42FE) - 109;
  uint64_t v9 = v2;
  int v6 = (char *)*(&off_1F08CDB40 + v3 - 1292) - 4;
  (*(void (**)(unsigned int *))&v6[8 * v3 + 5936])(&v8);
  if (v4 >= v5) {
    unsigned int v7 = v5;
  }
  else {
    unsigned int v7 = v4;
  }
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1B0282F0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a5 - 244) | 0x604) - 1223) ^ a5 ^ 0x724)
                                * (*(_DWORD *)(v6 - 144) == *(_DWORD *)(v6 - 152))) ^ a5)))();
}

uint64_t sub_1B0282F50(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((91 * (((v3 == v4) ^ (7 * (a3 ^ 1))) & 1)) ^ a3)))();
}

uint64_t sub_1B0282F88()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((114 * (v0 != v1 + 226062238)) ^ v1)))();
}

void sub_1B0282FC0()
{
}

uint64_t sub_1B0283038(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((28
                                * (((v4 < ((38 * (a4 ^ 0x328)) ^ 0x12Au)) ^ (117 * (a4 ^ 0x2A))) & 1)) ^ a4)))();
}

uint64_t sub_1B028308C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 + 1) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v28
                              + 8
                              * ((61
                                * (((((((v27 - 597) | 0x240) ^ 0x26C) & v25) == 8) ^ (((v27 - 85) | 0x40) - 1)) & 1)) ^ ((v27 - 597) | 0x240))))();
}

uint64_t sub_1B028310C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((111 * (((((a4 - 639) ^ 0x235) - 645) & v4) == 0)) ^ a4)))();
}

uint64_t sub_1B0283140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19
                                                                                         + 8
                                                                                         * (((*(_DWORD *)(a19 - 0x7761D79CB8DF4CFBLL) == (v20 ^ 0x415) - 1373544930)
                                                                                           * ((((v20 ^ 0x415)
                                                                                              - 1521085165) & 0x5AA9EEFD)
                                                                                            + 698)) ^ v20 ^ 0x415)))(a1, a2, a3, a4, a5, a6);
}

void sub_1B02831B0()
{
}

uint64_t sub_1B02831B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v30 = a5 + v27 + v26;
  int v31 = v30 + 1762;
  if ((v30 + 1762) <= 0x40) {
    int v31 = 64;
  }
  BOOL v32 = !__CFADD__(v30 + 1761, v28 + v31);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((((v25 - 762) ^ 0x208) * v32) ^ v25)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

uint64_t sub_1B0283214@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(v6 + (v2 + v4) + 20) = *(unsigned char *)(a1 + (v2 + v4));
  return (*(uint64_t (**)(void))(v7 + 8 * (((((a2 - 3) | 3) + 19) * (((a2 + 1289) ^ v3) + v2 == v5)) ^ (a2 + 1903))))();
}

uint64_t sub_1B0283260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  unint64_t v38 = STACK[0x280] + 2048;
  LODWORD(STACK[0x5F8]) = 2;
  STACK[0x580] = 0;
  LODWORD(STACK[0x470]) = 0;
  LODWORD(STACK[0x490]) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * ((((a8 + 477) ^ 0x5A6) * ((v36 & 2) == 0)) ^ a8)))(a1, a2, a3, a4, a5, v38, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1B02832B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((LODWORD(STACK[0x3A0]) - 588221694 != ((2 * (v7 ^ 0x340) - 1267) ^ 0xFF4CBF)) * a7) ^ (2 * (v7 ^ 0x340)))))();
}

void sub_1B0283304(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1B0283348()
{
}

uint64_t sub_1B02833C8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 - 1099) | 0x89) ^ ((v1 + 482) | 2) ^ 0xBDD) * (v0 == 0)) ^ v1)))();
}

uint64_t sub_1B0283404(uint64_t a1, uint64_t a2, int a3, int a4)
{
  unsigned int v10 = v5 + v4 + a4;
  if (v10 <= 0x40) {
    int v11 = 64;
  }
  else {
    int v11 = v10;
  }
  BOOL v12 = v7 + a3 + v8 + v6 - 664 + v11 <= ((v10 - 1) ^ v6 ^ 0xFFFFF87D);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v12 | (32 * v12)) ^ v6)))();
}

uint64_t sub_1B0283468()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 != v1 + v0 + 569949521) * (v0 ^ 0x817)) ^ v0)))();
}

uint64_t sub_1B02834B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v4 = ((v1 - 377125033) & 0x167A77DF) - a1 - 406;
  int8x16_t v5 = vrev64q_s8(*(int8x16_t *)(v2 + v4 - 15));
  int8x16_t v6 = vextq_s8(v5, v5, 8uLL);
  int8x16_t v7 = vrev64q_s8(*(int8x16_t *)(v2 + v4 - 31));
  int8x16_t v8 = vextq_s8(v7, v7, 8uLL);
  unint64_t v9 = STACK[0x290] + v4;
  v10.i64[0] = 0xCACACACACACACACALL;
  v10.i64[1] = 0xCACACACACACACACALL;
  v11.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v11.i64[1] = 0xE5E5E5E5E5E5E5E5;
  int8x16_t v12 = vrev64q_s8(vaddq_s8(vsubq_s8(v6, vandq_s8(vaddq_s8(v6, v6), v10)), v11));
  *(int8x16_t *)(v9 - 15) = vextq_s8(v12, v12, 8uLL);
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v8, vandq_s8(vaddq_s8(v8, v8), v10)), v11));
  *(int8x16_t *)(v9 - 31) = vextq_s8(v13, v13, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((1801 * (a1 == 96)) ^ v1)))();
}

uint64_t sub_1B0283558()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((882
                                * ((((((v0 ^ 0x754) + 654) | 0x150) ^ 0xFFFFFAA0) & *(_DWORD *)STACK[0x3C8]) == (v0 ^ 0x2E8) + 1321676994)) ^ v0 ^ 0x754)))();
}

uint64_t sub_1B02835BC@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((193 * (v2 ^ 0x13D)) ^ a1) + v2 - v4 + 489) * (a2 == 24)) ^ v2)))();
}

void sub_1B02835FC()
{
  uint64_t v4 = 4 * (v2 - 843764934);
  unsigned int v5 = 2111498075
     * ((*(_DWORD *)(*(void *)STACK[0x3D8] + (*(_DWORD *)STACK[0x3D0] & 0x5E35821C)) ^ (v3 + v4)) & 0x7FFFFFFF);
  int v6 = v5 ^ HIWORD(v5);
  uint64_t v7 = 4 * ((2111498075 * v6) >> ((v0 - 62) ^ 0xCC));
  *(_DWORD *)(v1 + v4) ^= *(_DWORD *)(v3 + v4) ^ *(_DWORD *)((char *)*(&off_1F08CDB40 + (v0 ^ 0x262u)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_1F08CDB40 + (v0 ^ 0x255u)) + v7 - 4) ^ *(_DWORD *)((char *)*(&off_1F08CDB40 + (v0 ^ 0x23Au)) + v7 - 12) ^ (-413466624 * v6) ^ (2111498075 * v6) ^ (-2081955537 * ((2111498075 * v6) >> ((v0 - 62) ^ 0xCC)));
  JUMPOUT(0x1B02836E8);
}

uint64_t sub_1B0283738()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((210
                                * (*(unsigned char *)((v2 | ((unint64_t)(v2 < ((v1 - 178) ^ (v0 + 141))) << 32))
                                            + v4
                                            - 1938056291) != 0)) ^ v1)))();
}

void sub_1B028378C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, char a17)
{
  a16 = (v17 - 19) ^ (3804331
                    * (((&a16 | 0xB301206E) - &a16 + (&a16 & 0x4CFEDF90)) ^ 0x499FD338));
  a17 = 67 - -85 * (((&a16 | 0x6E) - &a16 + (&a16 & 0x90)) ^ 0x38);
  (*(void (**)(unsigned int *))(v18 + 8 * (v17 + 980)))(&a16);
  JUMPOUT(0x1B025F300);
}

void sub_1B0283800(uint64_t a1)
{
  int v1 = 235795823 * (((a1 | 0xDF39865F) - a1 + (a1 & 0x20C679A0)) ^ 0x4B94CF06);
  int v2 = *(_DWORD *)(a1 + 24) - v1;
  int v3 = *(_DWORD *)(a1 + 8) + v1;
  BOOL v5 = (v3 & 0x30000000) != 0x20000000 && (v3 & 0x3F000000) != 251658240;
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1B02838E0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W2>, int a4@<W8>)
{
  return sub_1B027E110(a1, 17 * (a3 ^ 0x5CDu), *(_DWORD *)(*v5 + 4 * (a2 - 549541838)), v4, a4);
}

uint64_t sub_1B0283918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(*(void *)(v9 - 0x67843F9A1244BAC3) + 4 * (v5 + v7 + v6 + 263 - 822)) = a5;
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * (v7 + v5 >= 0)) ^ v6)))();
}

uint64_t sub_1B0283968()
{
  *(_DWORD *)(v5 - 120) = v0 + 1759421093 * ((((v5 - 136) | 0xF2355271) - ((v5 - 136) & 0xF2355271)) ^ 0x4148E225) + 255;
  *(void *)(v5 - 136) = v4;
  *(void *)(v5 - 128) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 344)))(v5 - 136);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v3 == ((v0 + 682571495) & 0xD750C2F1) + 82659646)
                                              * (((v0 - 1767) | 0xC0) ^ 0x66)) ^ v0)))(v6);
}

uint64_t sub_1B0283A20(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * (((((v3 ^ 0x3EA) + 48) ^ 0x675) * (v1 == v2)) ^ v3)))(a1, 71, 2456046688, 1838920607);
}

void sub_1B0283A64()
{
}

uint64_t sub_1B0283A6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,void *a25,unint64_t a26,uint64_t a27,int *a28)
{
  if (v29 >= v32) {
    int v33 = a24 + 71769678 + *a28;
  }
  else {
    int v33 = 1517586988;
  }
  *a28 = v33;
  int v34 = (((v28 >> 11) ^ 0xAE0C3) + 1460018998 - ((2 * ((v28 >> 11) ^ 0xAE0C3)) & 0xC3E6C)) ^ v28;
  unsigned int v35 = (((v34 << 7) & 0x9D2C5680 ^ v34) << 15) & 0xEFC60000 ^ (v34 << 7) & 0x9D2C5680 ^ v34;
  *(_DWORD *)(*a25 + a26) ^= v35 ^ (v35 >> 18);
  return (*(uint64_t (**)(void))(v30 + 8 * ((v31 - 1174667999) ^ (46 * (a26 > 0x1FB)))))();
}

uint64_t sub_1B0283A78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2
                                                                       + 8
                                                                       * ((((LODWORD(STACK[0x3FC]) ^ 0x6866A87F) == 1751559487)
                                                                         * (LODWORD(STACK[0x3FC]) - 896)) ^ (LODWORD(STACK[0x3FC]) + 423))))(a1, a2, 2083246018, 2211722588);
}

uint64_t sub_1B0283AE8(uint64_t a1, uint64_t a2, int a3)
{
  STACK[0x338] = v4;
  LODWORD(STACK[0x5B4]) = a3 + 10;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((STACK[0x338] == 0) ^ ((v3 ^ 0x3F) + 45)) & 1)
                                     * ((((v3 ^ 0x53F) + 1103635055) & 0xBE37DBED) - 725)) ^ ((v3 ^ 0x53F) - 1235))))();
}

uint64_t sub_1B0283B00()
{
  int v2 = STACK[0x3FC];
  LODWORD(STACK[0x5B4]) = v0 + 95;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((STACK[0x338] == 0) ^ (v2 + 45)) & 1)
                                     * (((v2 + 1103635055) & 0xBE37DBED) - 725)) ^ (v2 - 1235))))();
}

void sub_1B0283B18()
{
}

void sub_1B0283B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  int v12 = (v11 - 83) ^ a9[3] ^ 0x3F;
  int v13 = ((*a9 ^ 0xE5) << 24) | ((a9[1] ^ 0xE5) << 16) | ((a9[2] ^ 0xE5) << 8) | v12;
  *(_DWORD *)(*(void *)(v9 + 8) - 0x18D17CD12703C5D3) = v13 + v10 - 2 * (v13 & 0x2E215E87 ^ v12 & 1);
  JUMPOUT(0x1B0262D80);
}

uint64_t sub_1B0283BF4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2311 * (((v1 + 1054) ^ a1) + v2 + ((v1 + 56728793) & 0xFC9E637D) < 0x7FFFFFFF)) ^ v1)))();
}

uint64_t sub_1B0283C44()
{
  unsigned int v5 = *(unsigned __int8 *)(v3 + 5) + ((v2 - 256) ^ 0xFFFFFEEC);
  return (*(uint64_t (**)(void))(v4 + 8 * ((489 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

void sub_1B0283C84(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x843828D0CDF33EDLL) = (*(_DWORD *)(a1 - 0x843828D0CDF33EDLL) ^ 0xD2980FF2)
                                        - 761786382
                                        - ((2 * (*(_DWORD *)(a1 - 0x843828D0CDF33EDLL) ^ 0xD2980FF2) + 2) & 0xA5301FE4)
                                        + 1;
}

void sub_1B0283CCC()
{
}

void sub_1B0283CDC()
{
  *(_DWORD *)(v1 - 116) = v0;
  *(_DWORD *)(v1 - 120) = v0 & 0xFFFFFFF8;
  JUMPOUT(0x1B0283D48);
}

uint64_t sub_1B0283E18(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return sub_1B0283E70(0xDBFFFD1FFCBA957FLL, 0x1F9752AFELL, 0x75B1E6FBDFCD7F9CLL, (a4 + 1444), 25);
}

uint64_t sub_1B0283E70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  uint64_t v18 = 4 * (v12 + v14 + v6 - 332);
  int v19 = v5 + v15 + (*(_DWORD *)(*v8 + v18) ^ v16);
  *(_DWORD *)(*v10 + v18) = v19 + v16 - (v13 & (2 * v19));
  int v20 = v14 + 1 + v7;
  BOOL v22 = v20 > a4 || v20 < v9;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v22 * a5) | v11)))();
}

uint64_t sub_1B0283EE0()
{
  BOOL v3 = (v0 & 0x18) == (v1 ^ 0x317) - 1360;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((4 * ((v3 ^ (61 * (v1 ^ 0x48))) & 1)) & 0xEF | (16
                                                                                                 * ((v3 ^ (61 * (v1 ^ 0x648))) & 1))) ^ v1)))();
}

void sub_1B0283F2C()
{
}

void sub_1B0283F3C()
{
  int v5 = 535753261 * ((~((v4 - 120) | 0x58DFF578) + ((v4 - 120) & 0x58DFF578)) ^ 0xADD404A8);
  *(void *)(v4 - 120) = v0;
  *(_DWORD *)(v4 - 112) = v5 + (v2 ^ 0x2E5) + v3 + 998569068;
  *(_DWORD *)(v4 - 108) = v5 + v2 + 263;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0xBEC)))(v4 - 120);
  JUMPOUT(0x1B0283FC0);
}

uint64_t sub_1B0284060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  BOOL v36 = a20 > v29;
  unint64_t v37 = (*(_DWORD *)(v35 + a7) ^ v25) + HIDWORD(v31);
  *(_DWORD *)(v35 + 4 * a3) = v37 + ((v34 - 358) ^ a6 ^ (v25 + 839)) - (v27 & (2 * v37));
  *(_DWORD *)(a25 + a7) = HIDWORD(v37) | v25;
  LODWORD(v37) = v26 + v32 + 922;
  int v38 = v36 ^ ((int)v37 < a8);
  BOOL v39 = (int)v37 < v28;
  if (!v38) {
    BOOL v36 = v39;
  }
  return (*(uint64_t (**)(void))(v33 + 8 * (v34 ^ (v36 * v30))))();
}

uint64_t sub_1B02840E0(_DWORD *a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F08CE000
                              - 4
                              + 8 * ((37 * ((*a1 + *(_DWORD *)(a2 + 4) + 1924729399) > 0xC8)) | 0x1DAu)))();
}

void sub_1B0284128()
{
  *(_DWORD *)(v1 - 128) = v0 + 9;
  JUMPOUT(0x1B0284214);
}

uint64_t sub_1B0284288@<X0>(int a1@<W7>, int a2@<W8>)
{
  int v6 = (v5 - 155) ^ 0x741;
  int v7 = v3 + a2;
  int v8 = v3 + 1;
  *(_DWORD *)(*(void *)(v4 - 0x67843F9A1244BAC3) + 4 * (v7 + v6)) = a1;
  int v9 = v6 - 280;
  *(_DWORD *)(v4 - 0x67843F9A1244BAC7) = v8;
  int v10 = ((v6 - 280) ^ (a2 + 286)) + v8;
  if (v10 < 0) {
    int v10 = -v10;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((a2 + v9 + 104 + (v10 ^ 0xDFCF3DFD) + 1912266559 + ((2 * v10) & 0xBF9E7BFA) + 175) >> 31)
                                     * (v9 - 31)) ^ v9)))();
}

uint64_t sub_1B0284350()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((238 * (STACK[0x458] != 0)) ^ (v0 + 279))))();
}

void sub_1B0284384(int a1@<W8>)
{
  uint64_t v4 = *(void *)(v2 + 8 * ((a1 - 688) ^ 0x9D));
  uint64_t v5 = *(void *)(v2 + 8 * ((a1 - 688) ^ 0x7C));
  uint64_t v6 = *(void *)(v2 + 8 * ((a1 - 688) ^ 0x80)) - 4;
  char v7 = *(unsigned char *)(v6 + (v1[14] ^ (((a1 + 7) & 0xFB) - 5)));
  char v8 = *(unsigned char *)(v6 + (v1[10] ^ 0xCBLL));
  uint64_t v9 = *(void *)(v2 + 8 * (a1 - 742)) - 12;
  unsigned int v10 = *(unsigned __int8 *)(v9 + (v1[1] ^ 0x1ALL));
  int v11 = (v10 >> 1) ^ (((((v10 ^ 0x12) + (v10 & 0xD5 ^ 0xEF) + 1) ^ v10 & 0xDF) & 0xF0) >> 4) ^ 0x6F;
  int v12 = ((v1[3] ^ 0xB8) + *(unsigned char *)(v4 + (v1[3] ^ 0x54)) - 104) | ((v10 ^ 0x17 ^ (v11 + (~(2 * v11) | 0x73) - 57)) << 16);
  int v13 = (((*(unsigned __int8 *)(v5 + (v1[8] ^ 0x65)) + (v1[8] ^ 0x34) - 93) ^ 0xF5) << 24) | (((v8 ^ (16 * v8)) ^ 0xF1) << 8) | ((v1[11] ^ 0x3E) + *(unsigned char *)(v4 + (v1[11] ^ 0xD2)) - 104);
  LOBYTE(v10) = *(unsigned char *)(v6 + (v1[6] ^ 0x2ELL));
  unsigned int v14 = *(unsigned char *)(v9 + (v1[13] ^ 0x5BLL)) ^ 0xC7;
  int v15 = ((v1[7] ^ 0x90) + *(unsigned char *)(v4 + (v1[7] ^ 0x7CLL)) - 104) | ((((v1[4] ^ 0x13)
                                                                                       + *(unsigned __int8 *)(v5 + (v1[4] ^ 0x42))
                                                                                       - 93) ^ v3) << 24) | (((v10 ^ (16 * v10)) ^ 0xED) << 8);
  unsigned int v16 = *(unsigned __int8 *)(v9 + (v1[13] ^ 0x5BLL)) ^ 0xFFFFFFC7 ^ (v14 >> 4) ^ (v14 >> 1);
  int v17 = (((v7 ^ (16 * v7)) ^ 0x3D) << 8) | ((v16 - ((2 * v16) & 0x2E) + 23) << 16);
  int v18 = v12 | (((*(unsigned __int8 *)(v5 + (*v1 ^ 0x81)) + (*v1 ^ 0xD0) - 93) ^ 0x3C) << 24);
  LOBYTE(v12) = *(unsigned char *)(v9 + (v1[5] ^ 0xEDLL));
  int v19 = ((v12 ^ 0xC7) >> 4) ^ ((v12 ^ 0xC7) >> 1);
  unsigned int v20 = v13 & 0xFF00FFFF | (((*(unsigned char *)(v9 + (v1[9] ^ 0x38)) ^ ((*(unsigned char *)(v9 + (v1[9] ^ 0x38)) ^ 0xC7) >> 4) ^ ((*(unsigned char *)(v9 + (v1[9] ^ 0x38)) ^ 0xC7) >> 1)) ^ 0x6C) << 16);
  unsigned int v21 = v18 & 0xFFFF00FF | (((*(unsigned char *)(v6 + (v1[2] ^ 0x22)) ^ (16
                                                                                  * *(unsigned char *)(v6 + (v1[2] ^ 0x22)))) ^ 0xC3) << 8);
  LODWORD(STACK[0x390]) = (v17 & 0xFFFFFF00 | ((((v1[12] ^ 0x13) + *(unsigned __int8 *)(v5 + (v1[12] ^ 0x42)) - 93) ^ v3) << 24) | (*(unsigned char *)(v4 + (v1[15] ^ 0x38)) + (v1[15] ^ 0xD4) - 104)) ^ 0x80472F42;
  LODWORD(STACK[0x350]) = v21 ^ 0x4848D46;
  LODWORD(STACK[0x28C]) = (v15 & 0xFF00FFFF | ((v12 ^ 0x6C ^ (v19
                                                                                              - ((2 * v19) & 8)
                                                                                              - 124)) << 16)) ^ 0x20D515C4;
  LODWORD(STACK[0x380]) = v20 ^ 0xFC04D3FA;
  JUMPOUT(0x1B028A340);
}

uint64_t sub_1B028438C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 1554) | v1) + 291) * LODWORD(STACK[0x388])) ^ ((v0 - 1554) | v1))))();
}

void sub_1B02843F4()
{
}

void sub_1B0284410(unint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x278] = a1;
  *(void *)(v67 + 1516) = v64;
  *(void *)(v67 + 1524) = v64;
  *(_DWORD *)(v67 + 1532) = v65;
  *(void *)(v66 + 96) = v67;
  STACK[0x240] = v67;
  *(_DWORD *)(v67 + 476) = 141255584;
  unint64_t v68 = STACK[0x468];
  int v69 = (char *)&a3 + STACK[0x468] - 0x2CDB5D806DA9DF9DLL;
  STACK[0x350] = STACK[0x468];
  STACK[0x340] = (a2 + 139) + v68 + 251;
  STACK[0x3A0] = STACK[0x4E8];
  STACK[0x3C8] = (unint64_t)v69;
  STACK[0x248] = (unint64_t)(v69 + 392);
  a64 = v66;
  STACK[0x348] = v66;
  JUMPOUT(0x1B028449CLL);
}

uint64_t sub_1B02845A4@<X0>(unsigned int a1@<W8>)
{
  uint64_t v4 = a1;
  unint64_t v5 = v2 + a1 + (v1 ^ 0x5C8u) - 179;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((242 * (v5 - v4 + 1756633532 < (unint64_t)(v1 + 134) - 1530)) ^ v1)))();
}

void sub_1B0284608(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a6 = v8 + 460628867 * (((&a3 | 0x9DF19759) + (~&a3 | 0x620E68A6)) ^ 0xD1671525) + 1020;
  a3 = v7;
  a4 = a1;
  a5 = v7;
  (*(void (**)(uint64_t *))(v6 + 8 * (v8 + 1765)))(&a3);
  JUMPOUT(0x1B0284664);
}

uint64_t sub_1B0284690(uint64_t a1)
{
  int v1 = 1225351577 * ((-1431559688 - (a1 ^ 0x637B64C4 | 0xAAAC21F8) + (a1 ^ 0x637B64C4 | 0x5553DE07)) ^ 0x15B262D5);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 16) ^ v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  unsigned int v6 = v4 - 1372200252;
  BOOL v5 = v4 - 1372200252 < 0;
  unsigned int v7 = 1372200252 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08CDB40 + (v2 ^ 7))
                              + 8 * ((1430 * (v3 >> 5 < v7)) ^ v2)
                              - 4))();
}

uint64_t sub_1B02847C0(uint64_t result)
{
  uint64_t v1 = 235795823 * ((((2 * result) | 0xAE1C50A9AAB8544) - result - 0x570E2854D55C2A2) ^ 0xDC0587BD9F88BFBLL);
  int v2 = *(_DWORD *)(result + 44) - v1;
  unint64_t v3 = *(void *)(result + 24) - v1;
  unint64_t v4 = *(void *)(result + 8) ^ v1;
  int v5 = *(_DWORD *)(result + 40) ^ v1;
  int v6 = *(_DWORD *)(result + 32) - v1;
  int v7 = *(_DWORD *)(result + 36) ^ v1;
  BOOL v8 = v3 > v4;
  BOOL v9 = v3 == v4;
  int v10 = v8;
  if (v6) {
    BOOL v9 = v10;
  }
  if (!v9) {
    int v2 = v5;
  }
  *(_DWORD *)uint64_t result = v7 ^ v2;
  return result;
}

void sub_1B028485C(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

void sub_1B0284910()
{
}

void sub_1B0284A18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v15 - 120) = v12;
  *(void *)(v15 - 112) = a12;
  *(_DWORD *)(v15 - 104) = (v14 + 924) ^ (1734042137
                                        * ((((2 * (v15 - 120)) | 0x4A156C80) - (v15 - 120) + 1526024640) ^ 0xF9C4750D));
  (*(void (**)(uint64_t))(v13 + 8 * (v14 + 1591)))(v15 - 120);
  JUMPOUT(0x1B0284A78);
}

uint64_t sub_1B0284AB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, int32x4_t a33, int32x4_t a34, int32x4_t a35, int32x4_t a36, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16,uint64_t a17,uint64_t a18,uint64_t a19,uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v37 = *(unsigned __int8 *)(v36 - 124) ^ 0xCE;
  if (v37 == 1)
  {
    unsigned int v43 = *(_DWORD *)(v36 - 156);
    unsigned int v42 = *(_DWORD *)(v36 - 152);
    *(unsigned char *)(v36 - 164) = (a7 ^ (a7 + 43)) + ((8 * v42) ^ 0x78) - ((2 * ((8 * v42) ^ 0x78)) & 0xC0) - 16;
    *(unsigned char *)(v36 - 163) = ((v42 >> 5) ^ 0x6A) - ((2 * ((v42 >> 5) ^ 0x6A)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 162) = ((v42 >> 13) ^ 0x79) + ~(2 * (((v42 >> 13) ^ 0x79) & 0xE7 ^ (v42 >> 13) & 2)) - 26;
    *(unsigned char *)(v36 - 161) = ((v42 >> 21) ^ 0x71) - ((2 * ((v42 >> 21) ^ 0x71)) & 0xCA) - 27;
    HIDWORD(v44) = v43 ^ 0x12;
    LODWORD(v44) = v42 ^ 0xC0000000;
    *(unsigned char *)(v36 - 160) = (v44 >> 29) - ((2 * (v44 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 159) = ((v43 >> 5) ^ 0x7F) - ((2 * ((v43 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 158) = ((v43 >> 13) ^ 0xC0) - 2 * (((v43 >> 13) ^ 0xC0) & 0xE7 ^ (v43 >> 13) & 2) - 27;
    unsigned int v41 = ((v43 >> 21) ^ 0xFFFFFF94) + ~(2 * (((v43 >> 21) ^ 0xFFFFFF94) & 0x67 ^ (v43 >> 21) & 2)) - 26;
    goto LABEL_5;
  }
  if (v37 == 2)
  {
    unsigned int v38 = *(_DWORD *)(v36 - 156);
    unsigned int v39 = *(_DWORD *)(v36 - 152);
    HIDWORD(v40) = v38 ^ 0x12;
    LODWORD(v40) = v39 ^ 0xC0000000;
    *(unsigned char *)(v36 - 164) = ((v38 >> 21) ^ 0x94) - ((2 * ((v38 >> 21) ^ 0x94)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 163) = ((v38 >> 13) ^ 0xC0) - ((2 * ((v38 >> 13) ^ 0xC0)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 162) = ((v38 >> 5) ^ 0x7F) - ((2 * ((v38 >> 5) ^ 0x7F)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 161) = (v40 >> 29) - ((2 * (v40 >> 29)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 160) = ((v39 >> 21) ^ 0x71) - 2 * (((v39 >> 21) ^ 0x71) & 0xE7 ^ (v39 >> 21) & 2) - 27;
    *(unsigned char *)(v36 - 159) = ((v39 >> 13) ^ 0x79) - ((2 * ((v39 >> 13) ^ 0x79)) & 0xCA) - 27;
    *(unsigned char *)(v36 - 158) = ((v39 >> 5) ^ 0x6A) + (~(2 * ((v39 >> 5) ^ 0x6A)) | 0x35) - 26;
    unsigned int v41 = ((8 * v39) ^ 0x78) - (((8 * v39) ^ 0x78) >> 5 << 6) - 27;
LABEL_5:
    *(unsigned char *)(v36 - 157) = v41;
  }
  return sub_1B025AEC8(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

uint64_t sub_1B0284D04()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F08CDB40
                + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B2FDA8) ^ 0xED)) ^ byte_1B04C5D00[byte_1B04C0480[(-19 * ((qword_1E9B2FDF8 - dword_1E9B2FDA8) ^ 0xED))] ^ 0xD1])
                - 51);
  uint64_t v1 = *(void *)(v0 - 4);
  int v2 = (unint64_t *)*(&off_1F08CDB40
                           + ((-19 * ((qword_1E9B2FDF8 - v1) ^ 0xED)) ^ byte_1B04C0380[byte_1B04BD520[(-19 * ((qword_1E9B2FDF8 - v1) ^ 0xED))] ^ 0x33])
                           - 160);
  unint64_t v3 = (unint64_t)&v7[v1 + *v2];
  unint64_t v4 = (1469428717 * v3) ^ 0xEC43BA4126E9F5EDLL;
  unint64_t v5 = 1469428717 * (v3 ^ 0xEC43BA4126E9F5EDLL);
  *(void *)(v0 - 4) = v4;
  unint64_t *v2 = v5;
  LOBYTE(v5) = -19 * (*(_DWORD *)(v0 - 4) ^ 0xED ^ v5);
  BOOL v8 = (char *)*(&off_1F08CDB40
               + (*((unsigned char *)off_1F08CE078
                                   + (*((unsigned __int8 *)off_1F08CDD60 + v5 - 12) ^ 0x69u)
                                   - 4) ^ v5)
               - 56)
     - 4;
  unsigned int v9 = 1734 - 535753261 * (((&v8 | 0x1C15E18E) - (&v8 & 0x1C15E18E)) ^ 0x16E1EFA1);
  LOBYTE(v0) = -19 * (*(_DWORD *)(v0 - 4) ^ 0xED ^ *(_DWORD *)v2);
  return (*(uint64_t (**)(char **))((char *)*(&off_1F08CDB40
                                                      + ((-19
                                                                                       * (dword_1E9B2FDA8 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04BD720[byte_1B04C99F0[(-19 * (dword_1E9B2FDA8 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x7E])
                                                      + 76)
                                            + 8
                                            * (*((unsigned char *)off_1F08CDD38
                                                                              + (*((unsigned __int8 *)off_1F08CDFA0
                                                                                 + v0
                                                                                 - 12) ^ 0xFAu)) ^ v0)
                                            + 15740))(&v8);
}

uint64_t sub_1B0284F44(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((*(_DWORD *)(v3 + 4 * v4) == a2) * ((3 * (v2 ^ 0x770)) ^ 0x6BF)) ^ v2)))();
}

uint64_t sub_1B0284F78@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((((v3 - 841) ^ (v3 - 845)) * ((v2 - 1372200252) * (v1 - 1372200252) >= 0)) ^ v3)))();
}

void sub_1B0284FB4(uint64_t a1)
{
  int v2 = (unint64_t *)*(&off_1F08CDB40
                           + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B2FD38) ^ 0xED)) ^ byte_1B04C5E00[byte_1B04C0680[(-19 * ((qword_1E9B2FDF8 - dword_1E9B2FD38) ^ 0xED))] ^ 0xA3])
                           - 83);
  unsigned __int8 v3 = -19 * (*v2 ^ qword_1E9B2FDF8 ^ 0xED);
  unsigned int v4 = (unint64_t *)*(&off_1F08CDB40
                           + (*((unsigned char *)off_1F08CDD38
                                                             + (*((unsigned __int8 *)off_1F08CDFA0 + v3 - 12) ^ 0xCEu)) ^ v3)
                           + 24);
  unint64_t v5 = (*v4 + *v2) ^ (unint64_t)&v9;
  unint64_t v6 = (1469428717 * v5) ^ 0xEC43BA4126E9F5EDLL;
  unint64_t v7 = 1469428717 * (v5 ^ 0xEC43BA4126E9F5EDLL);
  unint64_t *v2 = v6;
  unint64_t *v4 = v7;
  BOOL v8 = (char *)*(&off_1F08CDB40
               + ((-19 * ((qword_1E9B2FDF8 - dword_1E9B2FD38) ^ 0xED)) ^ byte_1B04C0580[byte_1B04BD620[(-19 * ((qword_1E9B2FDF8 - dword_1E9B2FD38) ^ 0xED))] ^ 0xA3])
               + 71)
     - 4;
  (*(void (**)(char *, uint64_t (*)()))&v8[8
                                                   * (*((unsigned char *)off_1F08CDCA0
                                                                       + (*((unsigned __int8 *)off_1F08CDDD8
                                                                          + (-19
                                                                                            * ((v7 + *(unsigned char *)v2) ^ 0xED))
                                                                          - 12) ^ 0x7Eu)
                                                                       - 4) ^ (-19 * ((v7 + *(unsigned char *)v2) ^ 0xED)))
                                                   + 16608])((char *)*(&off_1F08CDB40+ (*((unsigned char *)off_1F08CE078+ (*((unsigned __int8 *)off_1F08CDD60+ (-19 * ((v7 + *(unsigned char *)v2) ^ 0xED))- 12) ^ 0x69u)- 4) ^ (-19 * ((v7 + *(unsigned char *)v2) ^ 0xED)))- 62)- 4, sub_1B0284D04);
  __asm { BRAA            X10, X17 }
}

void sub_1B028519C()
{
  STACK[0x520] = *(void *)(v1 + 8 * (v0 - 1322));
  JUMPOUT(0x1B0276284);
}

uint64_t sub_1B02851D0@<X0>(int a1@<W0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  LODWORD(STACK[0x3A0]) = v28;
  LODWORD(STACK[0x3C8]) = a1;
  if (v28 == 604952962)
  {
    int v33 = STACK[0x3FC];
    int v34 = 15;
  }
  else
  {
    int v33 = STACK[0x3FC];
    if (v28 != 604952958)
    {
      LODWORD(STACK[0x388]) = 0;
      LODWORD(STACK[0x390]) = 0;
      goto LABEL_7;
    }
    int v34 = 18;
  }
  LODWORD(STACK[0x390]) = v34;
  LODWORD(STACK[0x388]) = 1;
LABEL_7:
  int v35 = (v33 - 57) | 0x80;
  LODWORD(STACK[0x398]) = v33 - 1202;
  int v36 = 3804331 * ((((v32 - 192) | 0xA88BB7C0) - ((v32 - 192) & 0xA88BB7C0)) ^ 0x52154496);
  *(_DWORD *)(v32 - 160) = v33 - v36 + 202;
  *(_DWORD *)(v32 - 124) = v36 + v30 + 538555623;
  *(void *)(v32 - 192) = a2 + 0x67843F9A1244BDEBLL;
  *(void *)(v32 - 184) = 0;
  *(void *)(v32 - 176) = v29 + 1168;
  *(void *)(v32 - 168) = 0;
  *(void *)(v32 - 152) = a2 + 0x67843F9A1244BCDBLL;
  *(void *)(v32 - 144) = STACK[0x3D8];
  *(void *)(v32 - 136) = a28;
  (*(void (**)(uint64_t))(v31 + 8 * (v33 + 807)))(v32 - 192);
  return (*(uint64_t (**)(void))(v31
                                           + 8
                                           * (((*(_DWORD *)(v32 - 128) != -1373544826) * (v35 ^ 0x5C6)) ^ LODWORD(STACK[0x398]))))(LODWORD(STACK[0x3C8]));
}

uint64_t sub_1B0285358()
{
  unint64_t v5 = 1224239923
     * ((((v1 - 144) | 0x64C93076847FE56DLL) - (v1 - 144) + ((v1 - 144) & 0x9B36CF897B801A90)) ^ 0x4C93851F76CC18BALL);
  STACK[0x4F8] = 0x9E3A0C070732BCD8;
  uint64_t v2 = *off_1F08CDBF0;
  *(_DWORD *)(v1 - 120) = v5 - 1501685844;
  *(_DWORD *)(v1 - 116) = -1224239923
                        * ((((v1 - 144) | 0x847FE56D) - (v1 - 144) + ((v1 - 144) & 0x7B801A90)) ^ 0x76CC18BA);
  *(_DWORD *)(v1 - 112) = v5 + 434468722;
  *(_DWORD *)(v1 - 108) = v5 + 434468686;
  *(_DWORD *)(v1 - 140) = v5 + 434468657;
  *(void *)(v1 - 136) = v5 ^ 0x5A748A2C;
  *(void *)(v1 - 128) = v2 ^ v5;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v0 + 17376))(v1 - 144);
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * *(int *)(v1 - 144)))(v3);
}

uint64_t sub_1B02855AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v22 = ((v20 - 1716) ^ 0x2C9A20EC) + a19;
  BOOL v23 = v19 + a7 < v22;
  if (v22 < 0x7928EA63 != (v19 + a7) < 0x7928EA63) {
    BOOL v23 = v22 < 0x7928EA63;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8 * ((52 * !v23) ^ v20)))(2955151370, 2282780948);
}

void jumT7rcoieclCtxS2rgJ(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02856BC@<X0>(int a1@<W8>)
{
  uint64_t v3 = *v6;
  int v4 = 235795823 * ((((2 * (v2 - 168)) | 0xEC2AD926) - (v2 - 168) + 166368109) ^ 0x62B825CA);
  *(void *)&v7[444] = v6[2];
  uint64_t v10 = &STACK[0x3AC75C5FABFFD031];
  BOOL v8 = v7;
  uint64_t v9 = v3;
  *(_DWORD *)(v2 - 132) = (a1 + 1986) ^ v4;
  *(_DWORD *)(v2 - 160) = v4 + 1488611281;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0x8BC)))(v2 - 168);
  *((_DWORD *)v6 + 7) = *(_DWORD *)(v2 - 136);
  return result;
}

void sub_1B02857B8(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x6A4735A87A2643E5) = v1;
  *(_DWORD *)(v4 - 0xC9996988DE5192) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

uint64_t sub_1B0285824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((1145 * (a7 + 1 == v8 + 64)) ^ a5)))();
}

uint64_t sub_1B02858F8(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  HIDWORD(v18) = a1 ^ a7;
  LODWORD(v18) = a1 ^ 0x55555555;
  int v19 = (v18 >> 27)
      + (v7 ^ (v10 + ((a2 - 991) | 0x440) - 1138))
      + ((v13 ^ v10) & (v9 ^ a6) | (v17 ^ v10) & (v9 ^ v10))
      + (*(_DWORD *)(v8 + 4 * (a5 + v15)) ^ v11);
  return (*(uint64_t (**)(void))(v14 + 8 * ((99 * (a5 + 1 == v16 + 4)) ^ a2)))(v19
                                                                                           - ((2 * v19 - 1257966798) & v12) - 1397756669);
}

uint64_t sub_1B02859C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, char a7)
{
  int v14 = *(_DWORD *)(v13 - 220 + 4 * ((v11 + v8) >> ((v9 - a6) ^ (a7 - 2))) + 72);
  *(unsigned char *)(a4 + (v11 + v8 + 1)) = (BYTE2(v14) ^ 0x2D) - ((2 * (BYTE2(v14) ^ 0x2D)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8)) = (HIBYTE(v14) ^ 0x52) - ((2 * (HIBYTE(v14) ^ 0x52)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8 + 2)) = (BYTE1(v14) ^ 0x73) - ((2 * (BYTE1(v14) ^ 0x73)) & 0xCA) - 27;
  *(unsigned char *)(a4 + (v11 + v8 + 3)) = v14 ^ 0x8F;
  unsigned int v15 = *(_DWORD *)(v13 - 128) - 1829297443;
  BOOL v16 = v15 < v7;
  BOOL v17 = v11 - 1113436450 < v15;
  if (v11 - 1113436450 < v7 != v16) {
    BOOL v17 = v16;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((v17 * v10) ^ v9)))();
}

uint64_t sub_1B0285AA0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) == 0x56530F603BC303ACLL)
                                * ((2 * v0) ^ 0x274 ^ (4 * v0) ^ 0x88 ^ 0x66F)) ^ v0)))();
}

void sub_1B0285AEC()
{
}

uint64_t sub_1B0285B00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((2031 * (v6 + 1 == v7 + 16)) ^ a5)))();
}

uint64_t sub_1B0285C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((a5 + v8 + 1269 < ((a8 + 897060140) ^ 0x35780A25u) - 2018)
                                     * (((a8 + 897060140) & 0xCA87F2FA) - 221)) ^ a8)))();
}

void sub_1B0285CBC()
{
}

uint64_t sub_1B0285CEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                         + 8
                                                                                         * ((((v3 - 1442109809) < 0x38)
                                                                                           * (v4 - 1118)) ^ (v4 - 1257))))(a1, a2, a3, 36533098, 2897210627, 3037000498);
}

uint64_t sub_1B0285D38@<X0>(unint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,int a41,int a42)
{
  unint64_t v44 = STACK[0x5E8];
  STACK[0x4C0] = *(void *)(v43 + 8 * (LODWORD(STACK[0x3FC]) - 1359));
  STACK[0x628] = v44;
  LODWORD(STACK[0x634]) = 1603216231;
  STACK[0x488] = a1;
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * (int)((252
                                     * ((((a42 & 0xE3810CFF) - 1446175911) & 0x5632E2DF ^ 0xA370DEE2)
                                      + 1603216231
                                      + (((a42 & 0xE3810CFF ^ 0xF2) - 1084) & (2 * *(_DWORD *)(v44 - 0x843828D0CDF33E9)) ^ 0xC)
                                      + (*(_DWORD *)(v44 - 0x843828D0CDF33E9) & 0x3F ^ 0xFCFFFFF9) > 0xFFFFFFBF)) ^ a42 & 0xE3810CFF)))();
}

uint64_t sub_1B0285D54()
{
  STACK[0x250] = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1946
                                * ((((v0 ^ 0x39F) + 1293) ^ 0xB3712BDF) + LODWORD(STACK[0x548]) < 23 * (v0 ^ 0x39Fu)
                                                                                                - 3590)) ^ v0)))();
}

uint64_t sub_1B0285EAC()
{
  int v3 = (v1 - 642897240) & 0x2651D62A;
  if ((v3 ^ 0x2E35E6EE) + v2 < 0) {
    int v4 = v2;
  }
  else {
    int v4 = -1550566792 - v2;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((314 * ((int)(((v3 + 420) ^ 0xAE35E70D) + v4) >= 0)) ^ v3)))();
}

uint64_t sub_1B0285F54@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  int v10 = (unsigned int *)(v8 + 4 * v3);
  uint64_t v11 = (a3 + 354) + v3 - 1372;
  int v12 = *(_DWORD *)(v8 + 4 * v11);
  unsigned int v13 = v5 ^ ((v12 & 0x7FFFFFFE | v4 & 0x80000000) >> 1);
  unsigned int *v10 = v10[397] ^ a2 ^ *(_DWORD *)(v9 - 152 + 4 * (v12 & 1)) ^ (v13 + a1 - (v7 & (2 * v13)));
  return (*(uint64_t (**)(void))(v6 + 8 * (((2 * (v11 == 227)) | ((v11 == 227) << 10)) ^ a3)))();
}

uint64_t sub_1B0285FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t, unint64_t *))(v67 + 1688))(a1, a2, a3, a4, a5, a6, 3230439687, 2367607715, a9, &a67, a11, &STACK[0x76DC35A7F08F6A9A]);
}

uint64_t sub_1B0286120(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = -86;
  }
  else {
    char v2 = -88;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0x5B) + v2;
  return 0;
}

void sub_1B0286158(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void *a22,_DWORD *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  uint64_t v28 = 4 * (v27 - 270049517);
  unsigned int v29 = 2111498075 * ((*(_DWORD *)(*a22 + (*a23 & (17 * (a1 ^ 0x20Eu) + 153215391))) ^ (a26 + v28)) & 0x7FFFFFFF);
  int v30 = v29 ^ HIWORD(v29);
  unsigned int v31 = 2111498075 * v30;
  *(_DWORD *)(a27 + v28) ^= *(_DWORD *)(a26 + v28) ^ *((_DWORD *)*(&off_1F08CDB40 + (a1 ^ 0x2B0)) + HIBYTE(v31) - 3) ^ *((_DWORD *)*(&off_1F08CDB40 + (a1 ^ 0x2B9)) + HIBYTE(v31) + 1) ^ *((_DWORD *)*(&off_1F08CDB40 + a1 - 518) + HIBYTE(v31)) ^ (-413466624 * v30) ^ v31 ^ (-1109235783 * HIBYTE(v31));
  JUMPOUT(0x1B02564B8);
}

uint64_t sub_1B0286248()
{
  int v3 = LODWORD(STACK[0x3FC]) - 1187;
  *(_DWORD *)(STACK[0x250] + 52) = ((((LODWORD(STACK[0x61C]) ^ v2) + (v0 ^ v2)) % 0x2710) ^ 0xFEFDFFDB)
                                 + 200981760
                                 + (((((LODWORD(STACK[0x61C]) ^ v2) + (v0 ^ v2)) % 0x2710) << ((LODWORD(STACK[0x3FC])
                                                                                              + 93) ^ 0xAC)) & 0x7FB6);
  int v4 = STACK[0x624];
  LODWORD(STACK[0x5CC]) = STACK[0x624];
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v4 == v2) << 6) | ((v4 == v2) << 10)) ^ v3)))();
}

uint64_t sub_1B02862E0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 152) | 0x85) ^ 0x4CA) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B0286318@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((a2 + a1 + ((v3 - 114) | 0x60E) - 1566 - 67)
                                * (a3 + v4 + 63 >= (a3 + v4))) ^ v3)))();
}

uint64_t sub_1B0286360(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1881
                                * ((v5 & (2 * (*(unsigned __int8 *)(a2 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(a2 + 4) - 147) ^ v4) == ((v3 + 42146707) | 0x5114E150)
                                                                                + 1264036414)) ^ v3)))();
}

uint64_t sub_1B02863BC()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * (v1 + 1 == v3 + 24)) | (32 * (v1 + 1 == v3 + 24))) ^ v0)))();
}

uint64_t sub_1B0286480@<X0>(int a1@<W8>, double a2@<D0>)
{
  *(double *)(v5 + (v2 & 0x4C84CFFF)) = a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 == 0) * v3) ^ a1)))();
}

void sub_1B02864B4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1224239923 * (((a1 | 0xDD953B90) - (a1 & 0xDD953B90)) ^ 0x2F26C647);
  __asm { BRAA            X14, X17 }
}

void sub_1B02865E4()
{
}

uint64_t sub_1B028667C@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_1B0286694@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  STACK[0x478] = a1 - a2;
  int v3 = (uint64_t (*)(void))STACK[0x520];
  STACK[0x468] = v2 - 112;
  return v3();
}

uint64_t sub_1B02866B0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(void *)(*(void *)(v2 + 8 * (v1 - 306)) - 4) == 0)
                                * (((v1 + 73) | 0x404) + 333)) ^ v1)))();
}

uint64_t sub_1B02866E8@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 16) + a1 == (v1 ^ 0x2A8E9CB2) || (*(void *)(v2 + 56) | *(void *)(v2 + 32)) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 | (16 * (((v1 - 107) ^ v5) & 1)))))();
}

void sub_1B0286740()
{
}

void sub_1B0286750()
{
}

void sub_1B0286798()
{
}

uint64_t sub_1B02867A4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((*(_DWORD *)(v3 + 48 * v5 + 36) == ((v4 + 17 * (v2 ^ 0x69E) - 1502) ^ (v2 + 2100238120) & 0x82D0E37B))
                                * a2) ^ v2)))();
}

void sub_1B0286800()
{
}

uint64_t sub_1B0286810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 - a1 - ((29 * (a6 ^ 0x650u)) ^ 0x158uLL) < 0x20) * (a6 - 1410)) ^ a6)))();
}

uint64_t sub_1B0286858(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((224 * ((a3 + 1 + v4) > 0x3B)) ^ v3)))();
}

void sub_1B028691C()
{
}

uint64_t sub_1B0286B54@<X0>(int a1@<W0>, uint64_t a2@<X1>, int a3@<W8>)
{
  *(unsigned char *)(v3 + (a1 - 1838920608)) = *(unsigned char *)(a2 + (a1 - 1838920608));
  return (*(uint64_t (**)(void))(v5 + 8 * (((a1 - 1 == a3) * (((v4 - 301309511) & 0x11F59FFE) - 98)) ^ (v4 + 194))))();
}

void sub_1B0286BA8()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1356));
  JUMPOUT(0x1B02582B4);
}

uint64_t sub_1B0286BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (int)(((((v5 - 1062) ^ 0xFFFFFC7B)
                                                                                        + v5
                                                                                        + 14)
                                                                                       * (v4 == v3)) ^ v5)))(a1, a2, a3, 36533098, 2897210627);
}

void sub_1B0286C08()
{
  if (v0 == 100576577) {
    int v1 = -1373544826;
  }
  else {
    int v1 = 1373504862;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1B0286C6C()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 40) + ((v4 - 1200) ^ 0x83C8D9B30161C2E9) + v0)
     - *(unsigned __int8 *)(v5 + ((v4 - 1200) ^ 0x83C8D9B30161C2E9) + v0);
  uint64_t v7 = v0 + 1;
  BOOL v9 = (v6 ^ 0x7ECF287A) - 860242 + ((2 * v6) & 0xFD9E50F4) == 2126645288 && v7 != v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((501 * v9) ^ v4)))();
}

uint64_t sub_1B0286CF4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((*v2 == 0) * (v0 ^ 0xA0 ^ (v0 + 160) ^ 0x3D)) ^ v0)))();
}

uint64_t sub_1B0286D2C()
{
  int v5 = 535753261 * ((666930412 - ((v4 - 120) | 0x27C08CEC) + ((v4 - 120) | 0xD83F7313)) ^ 0xD2CB7D3C);
  *(_DWORD *)(v4 - 112) = v5 + (v3 ^ 0x318) + v0 + 1540941954;
  *(_DWORD *)(v4 - 108) = v5 + v3 + 960;
  *(void *)(v4 - 120) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x8AB)))(v4 - 120);
  return sub_1B0286DB8(v6);
}

uint64_t sub_1B0286DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v28 - 112) = a21;
  *(void *)(v28 - 104) = a23;
  *(_DWORD *)(v28 - 120) = (v24 + 99) ^ (((v28 - 120 + v26 - 2 * ((v28 - 120) & v26)) ^ 0x191EE5E0) * v27);
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 ^ 0xBE8)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v28 - 116) > v25)
                                              * ((v24 - 1291591756) & 0x4CFC1FF6 ^ 0x352)) ^ v24)))(v29);
}

uint64_t sub_1B0286E50()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 756)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v2 * (((v1 + 634708348) & 0xDA2B1FDF) + (v1 ^ 0xFFFFFF47))) ^ v1)))();
}

uint64_t sub_1B0286EB8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26)
{
  *(void *)(&a26 + a1 - 1076023950) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((827 * ((v26 & 0x38) - v28 == -780)) ^ v27)))(v28 - 780);
}

uint64_t sub_1B0286F10@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((39 * (a1 + v2 - 460 - 2109733556 >= ((v2 + 1040781546) & 0xC1F6EE9B ^ (v1 + 305)))) ^ v2)))();
}

uint64_t sub_1B0286F70@<X0>(uint64_t a1@<X5>, uint64_t a2@<X7>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t a22,uint64_t (*a23)(uint64_t))
{
  int v27 = (v23 - 1972685016) & 0x7594C7FE;
  *(unsigned char *)(a1 + (v27 ^ 0xCD1F0413) + a3) = *(unsigned char *)(a2 + (v24 - 158929243));
  int v28 = 3804331 * ((v26 - 168) ^ 0xFA9EF356);
  STACK[0x320] = a22;
  *(_DWORD *)(v26 - 168) = v28 + v27 + 1389;
  *(_DWORD *)(v26 - 164) = v28 ^ 0x4B7EE199;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v27 + 2134)))(v26 - 168);
  return a23(v29);
}

uint64_t sub_1B0287014()
{
  return 4294925278;
}

void sub_1B028701C()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1345));
  JUMPOUT(0x1B0277568);
}

uint64_t sub_1B0287038(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) - 1755732067 * ((-2 - ((a1 | 0x71A11D05) + (~a1 | 0x8E5EE2FA))) ^ 0x50985F21);
  uint64_t v2 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v4 = v2;
  unsigned int v5 = v1
     + 1882359101
     - 1178560073
     * (((&v4 | 0xB9E09D61) - &v4 + (&v4 & 0x461F6298)) ^ 0x8BF69D21);
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08CDB40 + (int)(v1 ^ 0x8FCD81B0))
                                              + 8 * v1
                                              + 0x381943984))(&v4);
}

uint64_t sub_1B028714C(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  unsigned int v1 = *a1 - 1225351577 * (((a1 | 0xD6503E34) - (a1 & 0xD6503E34)) ^ 0xF5CAE622);
  uint64_t v2 = *(void *)((char *)*(&off_1F08CDB40 + (int)(v1 - 426522894)) - 4);
  unsigned int v4 = v1
     - 426522894
     - 1734042137 * ((&v4 & 0xE0962FD3 | ~(&v4 | 0xE0962FD3)) ^ 0x43A71361)
     + 955;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08CDB40 + (int)(v1 ^ 0x196C3911))
                                                   + 8 * (int)(v1 ^ 0x196C312F)
                                                   - 4))(&v4);
}

void sub_1B0287258(int a1@<W8>)
{
  int v7 = ((((v6 - 144) | 0x787CBED1) - (v6 - 144) + ((v6 - 144) & 0x87834128)) ^ 0x34EA3CAC) * v4;
  *(void *)(v6 - 144) = v5;
  *(_DWORD *)(v6 - 136) = v7 + a1 - 1029;
  *(_DWORD *)(v6 - 128) = v2 + v7 - 239126786 + a1 - 334;
  *(void *)(v6 - 120) = v1;
  (*(void (**)(uint64_t))(v3 + 8 * (a1 ^ 0xCFFu)))(v6 - 144);
  JUMPOUT(0x1B02872D4);
}

void sub_1B02873F4(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 1178560073 * ((-693187448 - (a1 | 0xD6AECC88) + (a1 | 0x29513377)) ^ 0x1B473337);
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  uint64_t v5 = *(void *)(a1 + 8);
  unsigned int v4 = v1 + 535753261 * (((&v4 | 0xB0DB09EA) - (&v4 & 0xB0DB09EA)) ^ 0xBA2F07C5) + 174;
  uint64_t v3 = (char *)*(&off_1F08CDB40 + v1 - 1009) - 4;
  (*(void (**)(unsigned int *))&v3[8 * (v1 ^ 0xC03)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B028754C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v3 ^ 0xF6C)))(**(unsigned int **)(a2 + 8 * (v3 ^ 0x744)), a1, *(_DWORD *)(v5 - 0x7761D79CB8DF4D0BLL) + (v3 ^ 0x308 ^ (v2 + 1820)));
  return sub_1B0287598(v6);
}

uint64_t sub_1B0287598(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  unint64_t v13 = ((unint64_t)&a10 ^ 0x3E7FE9EFFD76FDFFLL)
      - 0x20B8848040240FFLL
      + ((2 * (void)&a10) & 0x7CFFD3DFFAEDFBF0);
  *(unsigned char *)(v11 - 0x7761D79CB8DF4CF4) = (v13 ^ 0xBA) * (v13 + 17);
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((910 * (641 * (v12 ^ 0x4E4) == 1954)) ^ v12)))(v11 - 0x7761D79CB8DF4D13);
}

uint64_t sub_1B0287654@<X0>(unint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int8x16_t *a12)
{
  unint64_t v13 = (int8x16_t *)((char *)&STACK[0x670] + STACK[0x350] - 0x2CDB5D806DA9E60DLL);
  v13[-12] = veorq_s8(*a12, (int8x16_t)xmmword_1B04C9BF0);
  STACK[0x600] += ((a6 - 768) | 0x302u) ^ 0x3AALL;
  STACK[0x610] = a1;
  STACK[0x608] = a1;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12
                                                                                         + 8
                                                                                         * (a6 ^ (2
                                                                                                * (&v13[-12] != (int8x16_t *)a1)))))(a1, a2, a3, a4, a5);
}

uint64_t sub_1B02876D8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 7016))(0);
}

void sub_1B0287744()
{
}

uint64_t sub_1B0287750(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v31 = v28 + 1078493763;
  if ((v28 + 1078493763) <= 0x40) {
    int v31 = 64;
  }
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((248 * (-v27 - v26 + (((v29 - 301) | 0x1B8) ^ 0xBFB77A41) + v31 >= 373 * (v29 ^ 0x773u) - 731)) ^ v29)))(-v27, a2, 3136653436, a4, 1158313983, 4294966944, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_1B02877F4@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + a1) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((((v4 & 0x38) == 8) * (((v3 + 964200645) & 0xC68773FF) - 464)) ^ v3)))();
}

uint64_t sub_1B0287844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 + 8 * ((255 * (((*((_DWORD *)&a22 + 6 * (v22 - 463788148)) + (int)a8) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v23)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

void sub_1B0287920(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1225351577 * (((a1 | 0x5CD61F00) - (a1 | 0xA329E0FF) - 1557536513) ^ 0x7F4CC716);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B0287A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((1268 * (a8 + 1 == v10 + 48)) ^ v8)))();
}

uint64_t sub_1B0287AE8@<X0>(int a1@<W4>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,char a27)
{
  *(&a27 + a2 - 1076023950) = -27;
  return (*(uint64_t (**)(void))(v28 + 8 * ((1490 * ((unint64_t)(a2 - 1076023949) < 0x38)) ^ (v27 + a1))))();
}

uint64_t sub_1B0287B2C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  uint64_t v13 = (v8 + a3);
  *(unsigned char *)(a1 + v13) = *(unsigned char *)(v6 + (v13 & 0xF)) ^ *(unsigned char *)(v4 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v5 + 2) ^ ((*(unsigned char *)(v11 + v13) | 0x65) + (*(unsigned char *)(v11 + v13) | 0x9A) - 107) ^ ((v13 & 0xF) * v9);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 - 694 + v8 - 905 == v10) * a4) ^ v7)))();
}

uint64_t sub_1B0287BA0(int a1)
{
  int v6 = v1 + v2;
  if ((v6 - 14) > 0x40) {
    a1 = v6 - 14;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((467 * (14 - v6 < (v3 + v4 + a1 + 14))) ^ 0xF4u)))();
}

uint64_t sub_1B0287C04()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((7 * (((v0 - 406) | 0x144) ^ 0x150)) ^ 0x693) * (*(void *)(v1 + 8) == 0)) | v0)))();
}

uint64_t sub_1B0287C78()
{
  unsigned int v9 = (v3 + 685) ^ (1374699841 * ((2 * (&v9 & 0x70180268) - &v9 - 1880621676) ^ 0xE213E59D));
  uint64_t v11 = &STACK[0x18D17CD12703C537];
  uint64_t v12 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1378)))(&v9);
  unsigned int v9 = v3 + 1225351577 * ((2 * (&v9 & 0x28379F0) - &v9 + 2105312781) ^ 0x5EE65E1B) + 1315;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1389)))(&v9);
  if (v10 == ((v3 - 154) ^ (v1 - 391))) {
    unsigned int v4 = v7;
  }
  else {
    unsigned int v4 = v10;
  }
  unsigned int v10 = v3 + ((2 * (&v9 & 0x4855FEB0) - &v9 - 1213595313) ^ 0xBD5E0F60) * v0 + 1244;
  uint64_t v11 = v6;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1320)))(&v9);
  unsigned int v10 = v3 - 154 + (&v9 ^ 0xAF40E2F) * v0 + 1398;
  uint64_t v11 = v8;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 + 1320)))(&v9);
  return v4 ^ v1;
}

uint64_t sub_1B0287E38@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 + v7)) = *(unsigned char *)(v6 + (a1 + v7));
  return (*(uint64_t (**)(void))(v3
                                           + 8
                                           * (((a1 - 1 == v4) * ((a2 - 294937571) & 0x3DF4EBCC ^ (v5 + 2389))) ^ a2)))(0);
}

uint64_t sub_1B0287E88()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((240
                                * (*(_DWORD *)(v3 + 48 * (int)((((v1 + 1073750171) | 0x10E84110) ^ 0xDDF6B4B3) + v0)) != ((v1 - 1251) | 4) + 366686309)) ^ v1)))();
}

uint64_t sub_1B0287EF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v6 - 1397079334 + v9 - 220 - 1) = -27;
  return (*(uint64_t (**)(void))(v8 + 8 * ((109 * ((unint64_t)(v6 - 1397079334) < 0x38)) ^ (a6 + v7 + 969))))();
}

uint64_t sub_1B0287F40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((107 * ((((v7 - 699) ^ (v6 == a6)) & 1) == 0)) ^ v7)))();
}

void sub_1B0287F78(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)a1 - 0x67843F9A1244BAC7) == 1372200252
    || *(_DWORD *)(*(void *)(a1 + 16) - 0x67843F9A1244BAC7) == 1372200252;
  int v1 = *(_DWORD *)(a1 + 8) + 1178560073 * ((2 * (a1 & 0x476169A4) - a1 - 1197566373) ^ 0x8A88961B);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B02880A4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((29 * (a2 ^ 0x440)) ^ 0x36) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1B02880EC@<X0>(uint64_t a1@<X6>, int a2@<W8>, __n128 a3@<Q0>)
{
  int v5 = (char *)&STACK[0x670] + a1 - 0x2CDB5D806DA9E60DLL;
  *(_DWORD *)int v5 = 890137121;
  *((void *)v5 + 1) = 0;
  *((_DWORD *)v5 + 4) = 487328828;
  *((_DWORD *)v5 + 6) = 1284426096;
  *((void *)v5 + 4) = 0;
  *((_DWORD *)v5 + 10) = 1284426096;
  STACK[0x530] = (unint64_t)(v5 + 40);
  *((void *)v5 + 6) = 0;
  STACK[0x5C0] = (unint64_t)(v5 + 48);
  *((_DWORD *)v5 + 14) = 1284426096;
  STACK[0x550] = (unint64_t)(v5 + 56);
  *((void *)v5 + 8) = 0;
  STACK[0x4D8] = (unint64_t)(v5 + 64);
  *((_DWORD *)v5 + 18) = 1284426096;
  STACK[0x540] = (unint64_t)(v5 + 72);
  *((void *)v5 + 10) = 0;
  STACK[0x558] = (unint64_t)(v5 + 80);
  v5[88] = 3;
  *(_DWORD *)uint64_t v3 = 890137121;
  *(__n128 *)(v3 + 4) = a3;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 1284426096;
  *(_DWORD *)(v3 + 28) = 1085811802;
  STACK[0x2C8] = v3 + 28;
  *(_DWORD *)(v3 + 232) = 1085811802;
  STACK[0x2C0] = v3 + 232;
  *(__n128 *)(v3 + 436) = a3;
  *(__n128 *)(v3 + 452) = a3;
  *(void *)(v3 + 468) = 0;
  *(void *)(v3 + 1128) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v3 + 1136) = 0xE5E5E5E5E5E5E5E5;
  *(void *)(v3 + 1152) = 0;
  *(void *)(v3 + 1160) = 0;
  *(void *)(v3 + 1144) = 3857049061;
  *(__n128 *)(v3 + 1168) = a3;
  *(__n128 *)(v3 + 1184) = a3;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((911 * ((16 * ((a2 + 101) ^ 0x42) + 41) & 1)) ^ (16
                                                                                                 * ((a2 - 667) ^ 0x242)))))();
}

uint64_t sub_1B0288248@<X0>(int a1@<W3>, int a2@<W8>)
{
  uint64_t v7 = 4 * (v2 - 648545234);
  unsigned int v8 = *(_DWORD *)(v5 + 4 * (v2 - 648545235));
  int v9 = (((v8 >> 30) ^ 1) + a1 - 4 * (v8 >> 31)) ^ v8;
  int v10 = ((a1 + 1566083941 * v9 - ((-1162799414 * v9) & 0xAE0C3E6C)) ^ *(_DWORD *)(v5 + v7)) - v2;
  *(_DWORD *)(v5 + v7) = v10 - ((2 * v10 + 1297090468) & 0xAE0C3E6C) + 2108564232;
  uint64_t v11 = 235795823 * ((v6 - 144) ^ 0x8B0BAFE94AD4959);
  LODWORD(v7) = v11 ^ (a2 - 498060096);
  *(void *)(v6 - 120) = v11 + 2574196984;
  *(void *)(v6 - 136) = (v2 + 1925651751) ^ (unint64_t)v11;
  *(_DWORD *)(v6 - 104) = v7 ^ 0x6E;
  *(_DWORD *)(v6 - 100) = a2 - 498060096 + v11;
  *(_DWORD *)(v6 - 112) = v11 + 1;
  *(_DWORD *)(v6 - 108) = v7 ^ 0x79;
  *(_DWORD *)(v6 - 128) = v11 + a2 - 1015666717;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a2 ^ v4)))(v6 - 144);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v6 - 144)))(v12);
}

uint64_t sub_1B0288388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  unsigned int v14 = 9 * (v8 ^ a8) + v11 - 206;
  BOOL v15 = v9 + v11 + 1 < v10;
  if (v10 < v9 != v14 > v12) {
    BOOL v15 = v10 < v9;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v15 * a7) ^ v8)))();
}

uint64_t sub_1B0288400()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ 0xD62)))();
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 1595619375) & 0xA0E4C3DB) + 1540) * (v0 == -1373544826)) ^ (v1 - 1013))))(v3);
}

uint64_t sub_1B0288460()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1309 * (v3 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_1B028852C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48)
{
  unint64_t v48 = STACK[0x5E8];
  STACK[0x588] = *(void *)(v51 + 8 * (LODWORD(STACK[0x3FC]) - 1289));
  STACK[0x508] = v48;
  STACK[0x5F0] = STACK[0x3C8];
  unsigned int v49 = *(_DWORD *)(v48 - 0x843828D0CDF33E9) & 0x3F ^ ((((a48 & 0x657B853D) + 299) | 0x410) - 1345);
  *(unsigned char *)(v48 - 0x843828D0CDF342DLL + v49) = 101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v51 + 8 * (((v49 > 0x37) * (((a48 & 0x657B853D) - 1544227363) & 0x5C0B0FDF ^ 0x192)) ^ a48 & 0x657B853D)))(a1, 705, 1373504863, a4, a5, a6, 1547877644, 595);
}

uint64_t sub_1B0288548@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v4 = ((unint64_t)&STACK[0x4D0] ^ 0x5CD9FFBEE5FF48FELL)
     - 0x90300A000FFFFELL
     + ((2 * (void)&STACK[0x4D0]) & 0xB9B3FF7DCBFE91F0);
  unint64_t v5 = v2 - 1;
  STACK[0x4D0] = v5;
  *(unsigned char *)(a1 + v5) = (v4 ^ 0xBA) * (v4 + 17);
  return (*(uint64_t (**)(void))(v3 + 8 * (((STACK[0x4D0] == 0) * (((a2 - 1407) | 0x406) ^ 0x6AF)) ^ a2)))();
}

uint64_t sub_1B02885DC()
{
  return sub_1B02885E8();
}

uint64_t sub_1B02885E8@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  *(void *)(a1 + a2 + v5 + v3) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((3984 * ((v2 ^ 0x7A7) + v3 == v4)) ^ v2)))();
}

void sub_1B0288628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v26 - 120) = a24;
  *(void *)(v26 - 112) = a24;
  *(_DWORD *)(v26 - 104) = (v24 + 1007) ^ (((((v26 - 144) | 0xAC170150) - (v26 - 144) + ((v26 - 144) & 0x53E8FEA8)) ^ 0x1F6AB104)
                                         * v25);
  *(void *)(v26 - 144) = a21;
  *(void *)(v26 - 136) = a14;
  *(void *)(v26 - 128) = a22;
  JUMPOUT(0x1B0256374);
}

uint64_t sub_1B02886A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44,char a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,int a54)
{
  int v57 = 3804331 * ((((v56 - 168) | 0x8871EB15) - (v56 - 168) + ((v56 - 168) & 0x778E14E8)) ^ 0x72EF1843);
  *(_DWORD *)(v56 - 168) = v57 + v55 + 1323;
  *(_DWORD *)(v56 - 164) = v57 ^ a12;
  *(void *)(v56 - 160) = a16;
  uint64_t v58 = (*(uint64_t (**)(uint64_t))(v54 + 8 * (v55 + 2068)))(v56 - 168);
  unsigned int v59 = (v55 + 1350) ^ 0x597 ^ a54 & (v55 + 465342061) & 0xE443717F;
  *(&a45 + v59) = 101;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v54 + 8 * ((1802 * (v59 > 0x37)) ^ v55)))(v58, 4076963439, 107);
}

void sub_1B02887B4()
{
}

void sub_1B02887C8()
{
}

uint64_t sub_1B0288828()
{
  BOOL v5 = *(_DWORD *)STACK[0x3C8] != ((v0 + 241) ^ 0x4EC737F3) || v1 != v2;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v5 * (v0 ^ 0x430)) ^ v0)))();
}

uint64_t sub_1B028887C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,int a21,unint64_t *a22)
{
  int v25 = 1759421093 * ((&a17 - 1921443396 - 2 * ((unint64_t)&a17 & 0x8D7919BC)) ^ 0x3E04A9E8);
  a17 = 1036168093 - v25;
  a22 = &STACK[0x4CAF57822185BFB9];
  a19 = a12;
  a20 = v25 ^ 0xFE1BE9AC;
  a21 = v25 + v24 + 2138962633;
  uint64_t v26 = (*(uint64_t (**)(int *))(v23 + 8 * (v24 ^ 0xA83)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((a18 == v22) * (((v24 - 195) | 0x480) - 1652)) | v24)))(v26);
}

uint64_t sub_1B0288950()
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * ((1623
                                             * ((((v3 - 733506901) & 0x2BB86AEE ^ 0x2FE) & v0) == (((v3 - 836) | 0x22) ^ 0x22A))) ^ (v3 - 920))))((v1 - v2));
}

uint64_t sub_1B02889B0@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  unsigned int v38 = v33 ^ ((*v37 & 0x7FFFFFFE | v37[623] & 0x80000000) >> 1);
  v37[623] = v37[396] ^ a2 ^ *(_DWORD *)(v36 + 4 * (*v37 & 1)) ^ (v38
                                                                  + a1
                                                                  - ((v38 << (v35 + (a3 ^ (v32 + 0x80)) - 28)) & ((v32 + a3 - 896) ^ 0x17F7C20F)));
  return (*(uint64_t (**)(void))(v34 + 8 * ((27 * (a32 > 0x26F)) ^ a3)))();
}

uint64_t sub_1B0288A3C()
{
  BOOL v5 = v1 + 1353356880 > ((v0 - 418) | 0x1A4) + 1271011969 || v1 + 1353356880 < v3 - 876470234;
  return (*(uint64_t (**)(void))(v2 + 8 * ((859 * v5) ^ v0)))();
}

uint64_t sub_1B0288A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 526382439 < (a14 - 10741059);
  if ((a14 - 10741059) < 0x346A84DE != (v14 + 526382439) < 0x346A84DE) {
    BOOL v17 = (a14 - 10741059) < 0x346A84DE;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((227 * !v17) ^ v15)))();
}

void sub_1B0288B10()
{
  STACK[0x4C0] = *(void *)(v0 + 8 * (LODWORD(STACK[0x3FC]) - 1326));
  JUMPOUT(0x1B02582B4);
}

void sub_1B0288B3C()
{
}

uint64_t sub_1B0288B6C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((642 * (v1 == (((v0 - 1360) | 0x24) ^ (v3 + 28)))) | (v0 - 1324))))();
}

void sub_1B0288BA4()
{
}

uint64_t sub_1B0288C24@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 != 463788147) ^ a1)))();
}

uint64_t sub_1B0288C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((a10 != v10) * (94 * (v12 ^ 0x4DA) - 235)) ^ v12)))();
}

void sub_1B0288CB0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8)
     + 1734042137 * (((a1 ^ 0xE6425DAD | 0xA65DFB69) - ((a1 ^ 0xE6425DAD) & 0xA65DFB69)) ^ 0x1CD16589);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0288DB0()
{
  int v3 = (unsigned int *)STACK[0x2B8];
  (*(void (**)(void, unint64_t *, uint64_t))(v2 + 8 * (v0 + 638)))(*(unsigned int *)STACK[0x2B8], &STACK[0x538], 2048);
  uint64_t v4 = *(uint64_t (**)(void))(v2
                           + 8
                           * ((((*(unsigned int (**)(void, unint64_t *, void, uint64_t))(v2 + 8 * (v0 ^ 0xE83)))(*v3, &STACK[0x4B8], (LODWORD(STACK[0x548]) + v1), 1) == 0)* ((v0 ^ 0x355) - 1239)) ^ v0));
  return v4();
}

void sub_1B0288E50()
{
}

uint64_t sub_1B0288E5C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((v1 + v3 < (((v0 - 609) | 0x621) ^ v2)) * (((v0 - 643) | 0x51) ^ 0x11)) ^ v0)))();
}

void sub_1B0288EA4(uint64_t a1)
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 24) - 1374699841 * ((-2 - ((a1 | 0x5548FCDC) + (~a1 | 0xAAB70323))) ^ 0xC7431B2A);
  unsigned int v2 = *(unint64_t **)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(unint64_t **)(a1 + 40);
  uint64_t v5 = *(void *)(v3 - 0x571561323F81230ALL);
  uint64_t v9 = *(void *)a1;
  uint64_t v10 = v5;
  uint64_t v11 = &STACK[0x67843F9A1244BAFB];
  uint64_t v7 = v3;
  int v8 = v2;
  unsigned int v12 = (1759421093
       * (((&v7 | 0xDFD3DF00) - &v7 + (&v7 & 0x202C20F8)) ^ 0x6CAE6F54)) ^ (v1 + 883);
  uint64_t v6 = (char *)*(&off_1F08CDB40 + v1 - 951) - 4;
  (*(void (**)(uint64_t *))&v6[8 * (v1 ^ 0xC75)])(&v7);
  uint64_t v7 = *(void *)(v3 - 0x571561323F812312);
  int v8 = &STACK[0x67843F9A1244BAEB];
  LODWORD(v9) = (1734042137 * (((&v7 | 0xC811C25D) + (~&v7 | 0x37EE3DA2)) ^ 0x94DF0111)) ^ (v1 + 251);
  (*(void (**)(uint64_t *))&v6[8 * v1 + 7344])(&v7);
  HIDWORD(v7) = v1
              + 460628867 * ((((2 * &v7) | 0x49CA5D62) - &v7 + 1528484175) ^ 0xE873ACCC)
              - 770;
  int v8 = v4;
  (*(void (**)(uint64_t *))&v6[8 * v1 + 8712])(&v7);
  __asm { BRAA            X8, X17 }
}

void sub_1B028910C()
{
}

uint64_t sub_1B0289114(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = (v16 - 441) ^ (1374699841 * ((v18 + 1047381673 - 2 * ((v18 - 136) & 0x3E6DC731)) ^ 0x5399DF38));
  *(void *)(v18 - 128) = v17;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 588)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) != (v16 ^ 0xD ^ (v14 - 1124)))
                                              * (((v16 - 1433) | 0x101) ^ 0x146)) ^ v16)))(v19);
}

uint64_t sub_1B02891BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_1B0284060(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25);
}

void sub_1B02891C8(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  unsigned int v2 = (char *)*(&off_1F08CDB40 + (v1 ^ 0x16D)) - 4;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * (v1 ^ 0x9AB)])(32, 0x101004023FF3BD5) == 0)
                      * (v1 + 521)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0289278()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((57 * ((v2 + v1 - 2042093488) < 8)) ^ 0x798u)))();
}

uint64_t sub_1B02892EC@<X0>(uint64_t a1@<X8>)
{
  unsigned int v7 = (v3 + 1187) ^ (1734042137
                    * ((((2 * &v5) | 0x46E5AF94) - &v5 - 594728906) ^ 0x7FBC1487));
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0x742)))(&v5);
}

uint64_t sub_1B0289350(uint64_t result)
{
  *(_DWORD *)(result + 4) = v1;
  return result;
}

uint64_t sub_1B028935C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v1 + 4 * (a1 + v4 + 969)) == v2)
                                * (((v3 - 944) | 0xA9) - 318)) ^ (v3 - 775))))();
}

uint64_t sub_1B02893A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, int a7@<W6>, uint64_t a8@<X8>)
{
  *(unsigned char *)(a6 + ((a3 + ((v8 - 1605) | v10) + 1165) & (a8 + a4))) = *(unsigned char *)(v9 + a2 + a1)
                                                                   + (a5 | ~(2 * *(unsigned char *)(v9 + a2 + a1)))
                                                                   - 26;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((a4 + a8 + 1) > 0x3F) * a7) ^ v8)))();
}

uint64_t sub_1B0289400(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v4 + 96) + 1428) = 604952958;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (v2 | ((*(_DWORD *)(a2 + 4) == (((v2 ^ 0x5AC) + 1284426323) ^ (v2 + 1376))) << 9))))();
}

uint64_t sub_1B0289450()
{
  return sub_1B0289470();
}

uint64_t sub_1B0289470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((*(_DWORD *)(v10 + 48 * (v11 + a8)) != 55835255) * (((v8 ^ 0x1E5) * v9) ^ a7)) | v8)))();
}

void sub_1B02894B8()
{
  LODWORD(STACK[0x404]) = v0;
  LODWORD(STACK[0x418]) = v3;
  LODWORD(STACK[0x4A4]) = v1;
  LODWORD(STACK[0x504]) = v4;
  LODWORD(STACK[0x54C]) = v7 + 80;
  unint64_t v9 = STACK[0x638];
  int v10 = *(_DWORD *)(STACK[0x638] - 0x843828D0CDF33D5);
  LODWORD(STACK[0x41C]) = v2;
  *(_DWORD *)(v9 - 0x843828D0CDF33D5) = (v10 ^ v8)
                                        + (v2 ^ v8)
                                        + v8
                                        - ((((v10 ^ v8) + (v2 ^ v8)) << ((v5 ^ 0x33) - 79)) & v6);
  JUMPOUT(0x1B028952CLL);
}

uint64_t sub_1B0289534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40)
{
  unint64_t v46 = STACK[0x578];
  unsigned int v47 = (LODWORD(STACK[0x474]) ^ 0x7DEBEFEF) - 352936736 + ((LODWORD(STACK[0x474]) << ((v43 + 7) ^ 0xC4)) & 0xFBD7DFDE);
  int v48 = 1759421093 * ((((v45 - 192) | 0xAC34018A) - (v45 - 192) + ((v45 - 192) & 0x53CBFE70)) ^ 0x1F49B1DE);
  *(void *)(v45 - 136) = v40;
  *(unsigned char *)(v45 - 164) = -91 * ((((v45 + 64) | 0x8A) - (v45 + 64) + ((v45 + 64) & 0x70)) ^ 0xDE) - 53;
  *(void *)(v45 - 184) = v42;
  *(void *)(v45 - 176) = a39;
  *(_DWORD *)(v45 - 192) = (v43 - 1697) ^ v48;
  *(_DWORD *)(v45 - 144) = v47 ^ v48;
  *(void *)(v45 - 152) = v46;
  *(void *)(v45 - 160) = a40;
  *(_DWORD *)(v45 - 168) = v48 + 22736600 + v41;
  uint64_t v49 = (*(uint64_t (**)(uint64_t))(v44 + 8 * ((v43 - 174) ^ 0xFB0)))(v45 - 192);
  int v50 = *(_DWORD *)(v45 - 188);
  LODWORD(STACK[0x5B4]) = v50;
  return (*(uint64_t (**)(uint64_t))(v44
                                            + 8 * ((110 * (v50 == ((8 * (v43 - 174)) ^ 0xAE216606))) | (v43 - 174))))(v49);
}

uint64_t sub_1B0289658@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2624))(0);
}

void X5EvIJWqdcALcjaxX6Pl(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02896F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((((v6 + 1841017226) & 0x92444DC7 ^ 0x5CF) * (v5 == a5)) ^ v6)))();
}

uint64_t sub_1B028972C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 8 * ((385 * (v2 != 63)) ^ v3)))(a1, a2, -726900810);
}

uint64_t sub_1B028975C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((110 * (STACK[0x510] == 0)) ^ (v0 - 145))))();
}

uint64_t sub_1B0289788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(_DWORD *)(v20 - 112) = v19 + 535753261 * ((((v20 - 136) | 0xBF7931F) - ((v20 - 136) & 0xBF7931F)) ^ 0x1039D30) - 769;
  *(void *)(v20 - 128) = v17;
  *(void *)(v20 - 120) = a11;
  *(void *)(v20 - 104) = v17;
  *(void *)(v20 - 136) = a15;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 76)))(v20 - 136);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((14
                                              * (((v15
                                                 + (((v16 - 1949362395) >> 1) ^ 0xFFBFEEFB)
                                                 + ((v16 - 1949362395) & (v19 - 8399439))
                                                 + 2) & a10) == 0)) ^ v19)))(v21);
}

void sub_1B0289874(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  if (*(void *)(a1 + 24)) {
    BOOL v2 = *(_DWORD *)(a1 + 20) - v1 == 1359518954;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

void sub_1B0289920(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 535753261 * (((a1 | 0xB23F3C90) - (a1 & 0xB23F3C90)) ^ 0xB8CB32BF);
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1B0289A38(int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((((11 * (a4 ^ 0x5E1)) ^ 0x47A) * (v4 == a1)) ^ a4)))();
}

uint64_t sub_1B0289A88()
{
  return sub_1B0289A90();
}

uint64_t sub_1B0289A90(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = (v4 ^ (v2 + 1404)) + v3 - 308584763;
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1B0289AD8@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 4) = 1373504947;
  return result;
}

void sub_1B0289C00()
{
}

void sub_1B0289C08()
{
}

uint64_t sub_1B0289C10()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((104 * (*(void *)(qword_1F08CDC30 - 4) == 0)) ^ v0)))();
}

void sub_1B0289C3C()
{
}

uint64_t sub_1B0289D14()
{
  return 0;
}

void sub_1B0289D54(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v9 - 140) = v8
                        + 473
                        + *(_DWORD *)(a8 + 32)
                        - a1
                        - ((2 * (*(_DWORD *)(a8 + 32) - a1) + 1244512914) & 0x77D21472)
                        + 1627383088;
  JUMPOUT(0x1B026F1D8);
}

uint64_t sub_1B0289E8C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((57 * (a2 + 1 != v4 + 48)) ^ a1)))(v2);
}

uint64_t sub_1B0289F4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1B0289F64(a1, a2, a3, a4, (a5 + v6), 0, v5 & 0xFFFFFFE0, 461);
}

uint64_t sub_1B0289F64(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, int a7, int a8)
{
  uint64_t v14 = (v10 + a4 - a6 + 849);
  long long v15 = *(_OWORD *)(v9 + v14 - 15);
  long long v16 = *(_OWORD *)(v9 + v14 - 31);
  uint64_t v17 = v11 + v14;
  *(_OWORD *)(v17 - 15) = v15;
  *(_OWORD *)(v17 - 31) = v16;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((((a5 + 77) | a8) ^ v12) + a6 != a7) * v13) ^ (a5 + 1148))))();
}

void sub_1B0289FC0(char *a1)
{
  uint64_t v2 = (char *)&STACK[0x1920] + v1;
  char *v2 = *a1;
  *(void *)(v2 + 1) = *(void *)(a1 + 1);
  *(_DWORD *)(v2 + 9) = *(_DWORD *)(a1 + 9);
  *(_WORD *)(v2 + 13) = *(_WORD *)(a1 + 13);
  v2[15] = a1[15];
  uint64_t v3 = *((void *)a1 + 1);
  *((void *)v2 + 2) = *(void *)a1;
  *((void *)v2 + 3) = v3;
  JUMPOUT(0x1B028A000);
}

void sub_1B028C170()
{
}

uint64_t sub_1B028C334(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45,char a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,int a55)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * ((792 * (a11 + ((127 * (v56 ^ 0x30) - 1078495680) ^ a55 & 0x3F) + ((2 * a55) & 0x7C ^ 0x1Cu) < 0xFFFFFFC0)) ^ (v56 + 1004))))(a1, 4076963439, a3, &a46, a5, a6, 202, 13);
}

uint64_t sub_1B028C3D4(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((454
                                * ((((*(unsigned __int8 *)(v3 + 5) - 13) << (((a1 - 1) & 0xF7) - 117)) & v2)
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ v1) == v1)) ^ a1)))();
}

uint64_t sub_1B028C42C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * ((1613 * (v32 + v33 + ((v31 - 233) | 0x10u) < 4)) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1B028C4E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  *(void *)(&a33 + v34 - 1076023950) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(void))(v36
                              + 8
                              * ((30 * ((((v35 - 146892532) & 0x8C166ED ^ 0xFFFFFFFFFFFFFB14) & v33) != 8)) ^ (v35 - 146892532) & 0x8C166EDu)))();
}

uint64_t sub_1B028C570()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (v2 > 0x4DCEC945)) ^ (v0 - 1174668212))))();
}

void sub_1B028C5C0()
{
}

uint64_t sub_1B028C5D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                                  + 8 * ((((unint64_t)(*(void *)(v5 + 8 * (v3 - 246)) - 8 - a1) < 0x20) * (((v3 ^ 0x1B5) * v4) ^ 0x1A2)) ^ v3)))(1055, 315, a3, 1027840042, 3267127282, 3981130497, 1245);
}

uint64_t sub_1B028C65C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,int a37)
{
  return (*(uint64_t (**)(void))(v39
                              + 8
                              * (v38 ^ (16 * ((LODWORD(STACK[0x52C]) ^ v37) != a37 - 659198276 + ((v38 - 693) | 0x440))))))();
}

uint64_t sub_1B028C69C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1963
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ (v0 + (v2 ^ 0x300) - 287)) == v0)) ^ v2)))();
}

void sub_1B028C6DC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, int a8, int a9)
{
  int v10 = v9 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 950047466;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1372200252;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v11 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v10);
  unsigned int v12 = 1734042137 * ((-394319217 - (&a5 | 0xE87F2A8F) + (&a5 | 0x1780D570)) ^ 0x4B4E163D);
  a5 = *(void *)(a1 + 96) + 0x67843F9A1244BDEBLL;
  a9 = v10 - v12 - 929929536;
  a6 = 1810 - v12;
  a7 = v11;
  (*(void (**)(uint64_t *))(a3 + 17472))(&a5);
  JUMPOUT(0x1B028C7FCLL);
}

uint64_t sub_1B028C828(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1955
                                * ((((*(unsigned __int8 *)(a2 + 7) - 100) << ((v2 + v4 + 114) ^ (v2 - 1))) & v6)
                                 + ((*(unsigned __int8 *)(a2 + 7) - 100) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1B028C874(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned int v7 = *v4 + ((v5 + 864) ^ 0xFFFFF9A9);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * ((2851
                                                                                  * (((2 * v7) & 0xDF36FEFA)
                                                                                   + (v7 ^ 0xEF9B7F7D) == -275021955)) ^ v5)))(a1, a2, a3, a4, 3727535591);
}

uint64_t sub_1B028C8E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((v17 - 1 >= ((v16 + 66) ^ 0x7FFFF9ADu)) * (((v16 + 66) | 0x81) ^ 0x682)) ^ v16)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1B028C92C@<X0>(int a1@<W8>)
{
  int v4 = 6 * (a1 ^ 0x25E);
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 ^ 0xA2B)))(v1 - 0x399DE98F08C0F0A4);
  STACK[0x468] -= 16;
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (int)(((v2 != -1373544826)
                                                   * (((v4 ^ 0x4A0) + 1159416552) & 0xBAE4B55D ^ 0x54F)) ^ v4 ^ 0x4A0)))(v5);
}

uint64_t sub_1B028C9C8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((a1 == ((v1 - 554713943) & 0xFF3DEFEF ^ 0x92A3649E))
                                              * (((v1 - 946701839) & 0x386D87DF) + 52)) ^ v1)))(4294925278);
}

void sub_1B028CA28()
{
  char v6 = *(unsigned char *)(v0 - 0x1B326768DCF9E3A8);
  int v7 = (v3 - 2020407862) & 0x786CFDCF;
  *(_DWORD *)(v5 - 116) = v7;
  uint64_t v8 = *(void *)(v4 + 8 * (v3 ^ 0xDA));
  *(_DWORD *)(v5 - 216) = v2;
  uint64_t v9 = v8 - 4;
  int v10 = v3;
  int v11 = (*(unsigned __int8 *)(v8 - 4 + (v6 ^ v7 ^ 0x92)) ^ 0x69) << 8;
  uint64_t v12 = *(void *)(v4 + 8 * (v10 ^ 0x81)) - 12;
  uint64_t v13 = *(void *)(v4 + 8 * (v10 ^ 0xCE)) - 4;
  int v14 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E39DLL) ^ 0x49));
  HIDWORD(v15) = v14 ^ 2;
  LODWORD(v15) = (v14 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v14) = v15 >> 26;
  int v16 = v11 | ((*(unsigned __int8 *)(v12 + (*v1 ^ 0xB1)) ^ 0x6B) << 24);
  uint64_t v17 = *(void *)(v4 + 8 * (v10 ^ 0xC8)) - 12;
  int v18 = *(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E39ELL) ^ 0xB8));
  int v19 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A1) ^ 0x6BLL));
  HIDWORD(v15) = v19 ^ 2;
  LODWORD(v15) = (v19 ^ 0xFFFFFFBF) << 24;
  LOBYTE(v19) = *(unsigned char *)(v9 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E39CLL) ^ 0x2ELL));
  int v20 = ((v15 >> 26) ^ 0x53) << 16;
  int v21 = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A9) ^ 0x47));
  HIDWORD(v15) = v21 ^ 2;
  LODWORD(v15) = (v21 ^ 0xFFFFFFBF) << 24;
  unsigned int v22 = v16 & 0xFF00FF00 | (*(unsigned char *)(v17 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A7) ^ 0xECLL))
                                           - 98) ^ 9 | (((v15 >> 26) ^ 0x1E) << 16);
  LODWORD(v13) = *(unsigned __int8 *)(v13 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A5) ^ 0xCBLL));
  HIDWORD(v15) = v13 ^ 2;
  LODWORD(v15) = (v13 ^ 0xFFFFFFBF) << 24;
  int v23 = ((v14 ^ 0xFB) << 16) | ((v18 ^ 0xD3) << 24) | ((v19 ^ 0xAC) << 8);
  LOBYTE(v13) = *(unsigned char *)(v17 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E39FLL) ^ 0xB5));
  unsigned int v24 = ((*(unsigned char *)(v17 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A3) ^ 0xA9)) - 98) | ((*(unsigned __int8 *)(v9 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A4) ^ 0x30)) ^ 0x5C) << 8)) & 0xFF00FFFF | (((v15 >> 26) ^ 0xBA) << 16) | ((*(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A6) ^ 0x35)) ^ 0xA4) << 24);
  int v25 = v20 | ((*(unsigned __int8 *)(v9 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A0) ^ 0x77)) ^ 0xA6) << 8) | ((*(unsigned __int8 *)(v12 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E3A2) ^ 0xBFLL)) ^ 0xBD) << 24);
  LOBYTE(v17) = *(unsigned char *)(v17 + (*(unsigned __int8 *)(v0 - 0x1B326768DCF9E39BLL) ^ 0x36)) - 98;
  uint64_t v26 = *(void *)(v4 + 8 * (v10 ^ 0xE5));
  uint64_t v27 = *(void *)(v4 + 8 * (v10 ^ 0x18)) - 8;
  LODWORD(v12) = *(_DWORD *)(v27 + 4 * (v14 ^ 0x61u)) ^ *(_DWORD *)(v26
                                                                                     + 4
                                                                                     * (v17 ^ 0xFDu));
  *(_DWORD *)(v5 - 160) = v10;
  uint64_t v28 = *(void *)(v4 + 8 * (int)(v10 & 0x9B782740)) - 4;
  LODWORD(v12) = ((v12 ^ 0xA4685225) - 2 * ((v12 ^ 0xA4685225) & 0x1C1AA03F ^ v12 & 2) + 471507005) ^ *(_DWORD *)(v28 + 4 * (v18 ^ 0x46u));
  int v29 = v12 - ((2 * v12) & 0x487B595C);
  uint64_t v30 = v19 ^ 0x94u;
  uint64_t v31 = *(void *)(v4 + 8 * (v10 ^ 0xE3));
  int v32 = *(_DWORD *)(v31 + 4 * v30) ^ v22 ^ (v29 - 1539461970);
  unsigned int v33 = (v23 & 0xFFFFFF00 | v17 ^ 0x2A)
      - 2 * ((v23 & 0xC945B00 | (v17 ^ 0x2A) & 0xDF) ^ (v17 ^ 0x2A) & 0x1C)
      - 1936434237;
  LOBYTE(v17) = (v13 - 98) ^ 0xA8;
  unsigned int v34 = v25 & 0xFFFFFF00 | v17;
  LODWORD(v13) = v32 ^ v24 ^ 0x4D;
  int v35 = v32 ^ v24;
  *(_DWORD *)(v5 - 184) = v35;
  *(_DWORD *)(v5 - 120) = v13 ^ v34;
  unsigned __int8 v101 = v13;
  int v36 = v13 ^ v34 ^ v33;
  int v37 = *(_DWORD *)(v31 + 4 * (BYTE1(v36) ^ 0xA1u)) ^ *(_DWORD *)(v27 + 4 * (BYTE2(v36) ^ 0x2Au));
  unsigned int v38 = v36 ^ 0x3663766A;
  int v39 = ((v37 ^ 0x3E51716A) - ((2 * (v37 ^ 0x3E51716A)) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v26
                                                                                                + 4
                                                                                                * (v36 ^ 0xEAu));
  int v40 = v32 ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v38) ^ 0x65)) ^ (v39 - ((2 * v39) & 0x3835407A) + 471507005);
  unsigned int v41 = (v35 ^ 0xBAF72DE4) - ((2 * (v35 ^ 0xBAF72DE4)) & 0x563D9664) - 1424045262;
  *(_DWORD *)(v5 - 176) = v40;
  int v42 = v40 ^ 0xAB1ECB32 ^ (v34 - 2 * (v34 & 0x2B1ECB3B ^ v17 & 9) - 1424045262);
  LODWORD(v17) = v42 ^ v38;
  *(_DWORD *)(v5 - 124) = v42;
  int v43 = *(_DWORD *)(v27 + 4 * (((v42 ^ v38) >> 16) ^ 0x2Eu)) ^ *(_DWORD *)(v31
                                                                                            + 4
                                                                                            * (((unsigned __int16)(v42 ^ v38) >> 8) ^ 0x9Bu)) ^ 0x3E51716A;
  unsigned int v44 = (v43 + 1040486369 + (~(2 * v43) | 0x83F6E03D) + 1) ^ *(_DWORD *)(v26
                                                                       + 4 * ((v42 ^ v38) ^ 0xD2u));
  int v45 = v42 ^ v38 ^ 0x25F0BE3D;
  *(_DWORD *)(v5 - 224) = BYTE3(v17);
  int v46 = (v44 - ((2 * v44) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v28 + 4 * (BYTE3(v17) ^ 0x69));
  LODWORD(v17) = v46 ^ v13 ^ 0x4BAD85BE;
  unsigned __int8 v106 = BYTE1(v46) ^ BYTE1(v13);
  int v47 = v17 ^ v42;
  *(_DWORD *)(v5 - 168) = v17 ^ v42;
  unsigned int v48 = ((v47 ^ 0xD12B8854) - ((2 * (v47 ^ 0xD12B8854)) & 0xA2AE3EE8) + 1364664180) ^ v45;
  unsigned int v49 = v48 ^ 0x9547167F;
  int v107 = ((v48 ^ 0x9547167F) >> 16);
  int v109 = ((unsigned __int16)(v48 ^ 0x167F) >> 8);
  int v50 = *(_DWORD *)(v27 + 4 * (v107 ^ 0x89u)) ^ *(_DWORD *)(v31 + 4 * (v109 ^ 0x3Au)) ^ 0x3E51716A;
  int v108 = (((v47 ^ 0x54) - ((2 * (v47 ^ 0x54)) & 0xE8) + 116) ^ v45);
  int v51 = (v50 - ((2 * v50) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v26 + 4 * (v108 ^ 0xE4u));
  *(_DWORD *)(v5 - 232) = HIBYTE(v49);
  int v52 = (v51 - ((2 * v51) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v49) ^ 0x1D));
  int v53 = (v52 - ((2 * v52) & 0x22A941C4) - 1856724766) ^ v46 ^ v40;
  *(_DWORD *)(v5 - 128) = v53;
  int v54 = v53 ^ 0x9154A0E2 ^ v46 ^ v13;
  v53 ^= 0x9154A0E2;
  int v55 = v54;
  unsigned int v56 = ((v54 ^ 0xFE25CD6D) - ((2 * (v54 ^ 0xFE25CD6D)) & 0xA2AE3EE8) + 1364664180) ^ v45;
  *(_DWORD *)(v5 - 240) = BYTE1(v56);
  int v57 = *(_DWORD *)(v31 + 4 * (BYTE1(v56) ^ 0x6Fu));
  *(_DWORD *)(v5 - 248) = BYTE2(v56);
  LODWORD(v13) = v57 ^ *(_DWORD *)(v27 + 4 * (BYTE2(v56) ^ 0xA8u)) ^ 0x3E51716A;
  LODWORD(v13) = (v13 - ((2 * v13) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v56) ^ 0x85));
  unsigned int v58 = v56;
  LODWORD(v13) = (v13 - ((2 * v13) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v26 + 4 * (v56 ^ 0x25u));
  int v59 = (v13 - ((2 * v13) & 0xE2B5502E) - 245716969) ^ v17 ^ v55 ^ v17 ^ v42;
  int v60 = (v13 - ((2 * v13) & 0xE2B5502E) - 245716969) ^ v17;
  *(_DWORD *)(v5 - 132) = v59;
  v59 ^= 0xDFA586D6;
  LOBYTE(v17) = v56 ^ v59;
  int v61 = v59;
  unsigned int v62 = v56 ^ v59 ^ 0x19FAB981;
  unsigned int v63 = *(_DWORD *)(v28 + 4 * (HIBYTE(v62) ^ 0x1D)) ^ *(_DWORD *)(v27 + 4 * (BYTE2(v62) ^ 0x89u)) ^ 0x86767DF9;
  int v64 = (v63 - ((2 * v63) & 0x487B595C) - 1539461970) ^ *(_DWORD *)(v31 + 4 * (BYTE1(v62) ^ 0x3Au));
  *(_DWORD *)(v5 - 192) = v53 ^ v13;
  LODWORD(v17) = v53 ^ v13 ^ *(_DWORD *)(v26 + 4 * (v17 ^ 0x1Au)) ^ (v64
                                                                                      - ((2 * v64) & 0x7C091FC2)
                                                                                      + 1040486369);
  int v65 = v17 ^ v60 ^ 0x7C166C11;
  int v66 = v17;
  LODWORD(v17) = (v65 ^ v58) >> 24;
  *(_DWORD *)(v5 - 256) = v17;
  int v67 = *(_DWORD *)(v28 + 4 * (v17 ^ 0x9B)) ^ *(_DWORD *)(v26
                                                                        + 4 * ((v65 ^ v58) ^ 0x31u)) ^ 0x221E2FDC;
  LODWORD(v30) = (v67 - ((2 * v67) & 0x487B595C) - 1539461970) ^ *(_DWORD *)(v31
                                                                           + 4
                                                                           * (((unsigned __int16)(v65 ^ v58) >> 8) ^ 0xA0u));
  int v68 = v65 ^ v58 ^ 0x59AD5C35;
  LODWORD(v30) = (v30 - ((2 * v30) & 0x34D9BB88) - 1704141372) ^ *(_DWORD *)(v27
                                                                           + 4
                                                                           * (((v65 ^ v58) >> 16) ^ 0xAu));
  int v103 = (v30 - ((2 * v30) & 0xE1583C6C) - 257155530) ^ v66;
  unsigned int v69 = v65 ^ v61 ^ 0xFBC2E1DD;
  *(_DWORD *)(v5 - 144) = v69;
  int v70 = ((v103 ^ 0xD2F849C ^ v65 ^ 0x5A137D54) - ((2 * (v103 ^ 0xD2F849C ^ v65 ^ 0x5A137D54)) & 0x66C9794E) + 862239911) ^ v69;
  *(_DWORD *)(v5 - 152) = v70;
  unsigned int v71 = ((v70 ^ 0x92923FE1) - ((2 * (v70 ^ 0x92923FE1)) & 0xBE5D8D3E) - 550582625) ^ v68 ^ 0x479AB031;
  LODWORD(v30) = *(_DWORD *)(v31 + 4 * (BYTE1(v71) ^ 0x3Au)) ^ *(_DWORD *)(v26
                                                                           + 4
                                                                           * ((((v70 ^ 0xE1)
                                                                                               - ((2 * (v70 ^ 0xE1)) & 0x3E)
                                                                                               - 97) ^ v68) ^ 0xAAu)) ^ 0x9A39234F;
  int v72 = (v30 - ((2 * v30) & 0x34D9BB88) - 1704141372) ^ *(_DWORD *)(v27 + 4 * (BYTE2(v71) ^ 0x89u));
  int v73 = (v72 - ((2 * v72) & 0x3835407A) + 471507005) ^ *(_DWORD *)(v28 + 4 * (HIBYTE(v71) ^ 0x1D));
  unsigned int v74 = ((v73 ^ v65 ^ 0xA6C48CD5) - ((2 * (v73 ^ v65 ^ 0xA6C48CD5)) & 0xBE5D8D3E) - 550582625) ^ v68;
  unsigned int v75 = *(_DWORD *)(v28 + 4 * (HIBYTE(v74) ^ 5)) ^ *(_DWORD *)(v31 + 4 * (BYTE1(v74) ^ 0x6Fu)) ^ 0xB8270C93;
  int v76 = (v75 - ((2 * v75) & 0x7C091FC2) + 1040486369) ^ *(_DWORD *)(v26 + 4 * (v74 ^ 0x25u));
  int v77 = v103 ^ 0xD2F849C ^ v73 ^ *(_DWORD *)(v27 + 4 * (BYTE2(v74) ^ 0xA8u)) ^ (v76
                                                                                - ((2 * v76) & 0x34D9BB88)
                                                                                - 1704141372);
  *(_DWORD *)(v5 - 200) = v70 ^ 0x150DE7E1 ^ v77;
  unsigned int v78 = v41 ^ v40 ^ 0xAB1ECB32;
  *(_DWORD *)(v5 - 208) = v77;
  int v79 = *(_DWORD *)(v5 - 160);
  uint8x16_t v80 = (char *)*(&off_1F08CDB40 + (v79 ^ 0xD6)) - 12;
  uint16x8_t v81 = (char *)*(&off_1F08CDB40 + (v79 ^ 0xBB)) - 8;
  uint16x8_t v82 = (char *)*(&off_1F08CDB40 + (v79 ^ 0xE0)) - 8;
  uint64_t v83 = (uint64_t)*(&off_1F08CDB40 + (v79 & 0x36334875));
  LODWORD(v13) = *(_DWORD *)&v80[4 * (((v78 ^ 0xE9B45E6C) >> 16) ^ 0xF5)] ^ ((((v78 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                            + 412234942
                                                                                            + ((2
                                                                                              * (((((v78 ^ 0xE9B45E6C) >> 16) ^ 0xD8)
                                                                                                + 44) & 0x93 ^ (((v78 ^ 0xE9B45E6C) >> 16) | 0xFFFFFFFD))) ^ 0x1849405));
  unsigned int v84 = *(_DWORD *)(v5 - 124) ^ 0x31676F78;
  unsigned int v85 = *(_DWORD *)&v80[4 * (BYTE2(v84) ^ 0x7B)] ^ ((BYTE2(v84) ^ 0x56)
                                                  + 412234942
                                                  + ((2 * (BYTE2(v84) ^ 0x56) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v86 = (v85 - ((2 * v85) & 0xE1D7A238) + 1894502684) ^ *(_DWORD *)&v82[4 * HIBYTE(v84)];
  unsigned int v105 = v86 - ((2 * v86) & 0x8CA253B2);
  int v87 = *(_DWORD *)&v82[4 * ((v78 ^ 0xE9B45E6C) >> 24)] ^ (v13 - ((2 * v13) & 0xE1D7A238) + 1894502684);
  int v104 = v87 - ((2 * v87) & 0x8CA253B2);
  int v88 = *(_DWORD *)&v80[4 * (((v32 ^ 0x2BEAE26Bu) >> 16) ^ 0xEC)] ^ ((((v32 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                    + 412234941
                                                                                    - ((2
                                                                                      * (((v32 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                      + 25990232) & 0x1849522)) ^ (181304767 * *(_DWORD *)(v83 + 4 * (v32 ^ 0x1Eu)) - 1895353762);
  unsigned int v89 = (v88 - ((2 * v88) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v81[4 * (BYTE1(v32) ^ 8)];
  LODWORD(v31) = *(_DWORD *)(v83 + 4 * (v101 ^ 0x55u));
  unsigned int v102 = v89 - ((2 * v89) & 0xE1D7A238);
  unsigned int v90 = *(_DWORD *)(v5 - 184);
  int v91 = ((~(362609534 * v31 + 504259772) | 0x1E285DC7) + 181304767 * v31 - 851077) ^ ((BYTE2(v90) ^ 0xBA)
                                                                                    + 412234942
                                                                                    + ((2 * (BYTE2(v90) ^ 0xBA) + 88) & 0x122 ^ 0xFE7B6BFF)) ^ *(_DWORD *)&v82[4 * (HIBYTE(v90) ^ 0x2F)] ^ *(_DWORD *)&v80[4 * (BYTE2(v90) ^ 0x97)];
  unsigned int v92 = *(_DWORD *)&v80[4 * (v107 ^ 0x32)] ^ ((v107 ^ 0x1F) + 412234942 + ((2 * (v107 ^ 0x1F) + 88) & 0x122 ^ 0xFE7B6BFF));
  unsigned int v93 = (v92 - ((2 * v92) & 0x8CA253B2) + 1179724249) ^ *(_DWORD *)&v81[4 * (v109 ^ 0x8C)] ^ (181304767
                                                                                            * *(_DWORD *)(v83 + 4 * (v108 ^ 0xD9u))
                                                                                            - 1895353762);
  *(_DWORD *)(v5 - 248) = *(_DWORD *)&v80[4 * (*(_DWORD *)(v5 - 248) ^ 0x1A)];
  *(_DWORD *)(v5 - 176) = *(_DWORD *)&v81[4 * (BYTE1(v78) ^ 0xB4)];
  *(_DWORD *)(v5 - 184) = *(_DWORD *)&v81[4 * (BYTE1(*(_DWORD *)(v5 - 184)) ^ 0xD6)];
  *(_DWORD *)(v5 - 192) = *(_DWORD *)&v81[4 * (v106 ^ 0xB9)];
  *(_DWORD *)(v5 - 168) = *(_DWORD *)&v81[4 * (BYTE1(*(_DWORD *)(v5 - 168)) ^ 0x1E)];
  *(_DWORD *)(v5 - 144) = *(_DWORD *)&v81[4 * (*(_DWORD *)(v5 - 240) ^ 0x84)];
  *(_DWORD *)(v5 - 200) = v105 + 1179724249;
  *(_DWORD *)(v5 - 208) = v104 + 1179724249;
  *(_DWORD *)(v5 - 240) = v91 - ((2 * v91) & 0x8CA253B2) + 1179724249;
  *(_DWORD *)(v5 - 224) = *(_DWORD *)&v82[4 * ((v32 ^ 0x2BEAE26Bu) >> 24)];
  *(_DWORD *)(v5 - 232) = *(_DWORD *)&v82[4 * (*(_DWORD *)(v5 - 256) ^ 0x38)];
  *(_DWORD *)(v5 - 256) = v102 + 1894502684;
  *(_DWORD *)(v5 - 152) = v93 - ((2 * v93) & 0xE1D7A238) + 1894502684;
  LODWORD(v83) = *(_DWORD *)(v5 - 160);
  int32x4_t v94 = (char *)*(&off_1F08CDB40 + (int)(v83 ^ 0xB7)) - 4;
  int v95 = (char *)*(&off_1F08CDB40 + (int)v83 - 86) - 4;
  int v96 = (char *)*(&off_1F08CDB40 + (int)(v83 ^ 0x99)) - 12;
  int v97 = (char *)*(&off_1F08CDB40 + (int)(v83 ^ 0xC3)) - 4;
  unsigned int v98 = (v95[*(unsigned __int8 *)(v5 - 109) ^ 0x41] ^ 0x34) & 0xFF00FFFF | (((v96[*(unsigned __int8 *)(v5 - 111) ^ 0x40] + 89) ^ 0x5A) << 16) | ((v97[*(unsigned __int8 *)(v5 - 110) ^ 0xBBLL] ^ 0x95) << 8) | ((v94[*(unsigned __int8 *)(v5 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v5 - 112) - ((2 * *(unsigned __int8 *)(v5 - 112)) & 0x40) + 32) ^ 0x84) << 24);
  unsigned int v99 = (v95[*(unsigned __int8 *)(v5 - 105) ^ 0xE4] ^ 2) & 0xFF00FFFF | ((v94[*(unsigned __int8 *)(v5 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v5 - 108) - ((2 * *(unsigned __int8 *)(v5 - 108)) & 0x40) + 32) ^ 0xFFFFFFE1) << 24) | (((v96[*(unsigned __int8 *)(v5 - 107) ^ 0x27] + 89) ^ 0x96) << 16) | ((v97[*(unsigned __int8 *)(v5 - 106) ^ 9] ^ 0x90) << 8);
  unsigned int v100 = (v95[*(unsigned __int8 *)(v5 - 101) ^ 0xF2] ^ 0xBB) & 0xFF00FFFF | ((v94[*(unsigned __int8 *)(v5 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v5 - 104) - ((2 * *(unsigned __int8 *)(v5 - 104)) & 0x40) + 32) ^ 0xE0) << 24) | ((v97[*(unsigned __int8 *)(v5 - 102) ^ 0xBELL] ^ 0x37) << 8) & 0xFF00FFFF | (((v96[*(unsigned __int8 *)(v5 - 103) ^ 0xE9] + 89) ^ 0x8A) << 16);
  *(_DWORD *)(v5 - 120) = (v95[*(unsigned __int8 *)(v5 - 97) ^ 0x74] ^ 0x93 | (((v96[*(unsigned __int8 *)(v5 - 99) ^ 0xF3] + 89) ^ 2) << 16) | ((v97[*(unsigned __int8 *)(v5 - 98) ^ 0x20] ^ 0x7F) << 8) | ((v94[*(unsigned __int8 *)(v5 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v5 - 100) - ((2 * *(unsigned __int8 *)(v5 - 100)) & 0x40) + 32) ^ 0x85) << 24)) ^ 0x3C2DB5C3;
  *(_DWORD *)(v5 - 124) = v98 ^ 0x7DDC3E62;
  *(_DWORD *)(v5 - 128) = v99 ^ 0x35732670;
  *(_DWORD *)(v5 - 132) = v100 ^ 0xCFFC024C;
  JUMPOUT(0x1B028F510);
}

uint64_t sub_1B0291178()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((59 * (((v0 == v1) ^ ((v3 & 0xDD) + 100)) & 1)) ^ v3 & 0x3BA953DDu)))();
}

void sub_1B02911D0(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0x841A70C4) - (a1 & 0x841A70C4)) ^ 0x7E848392);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7761D79CB8DF4D07) + 1716538174;
  unsigned int v3 = *(_DWORD *)(a1 + 4) - v1 - 1758948323;
  int v4 = (v3 < 0xB758E828) ^ (v2 < 0xB758E828);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v5 = v3 < 0xB758E828;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1B02912E4()
{
}

uint64_t sub_1B029130C@<X0>(int32x4_t *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int32x4_t a46,int8x16_t a47)
{
  int8x16x4_t v76 = vld4q_s8(v47);
  int v50 = (LODWORD(STACK[0x3FC]) - 825307000) & 0x31312F77;
  v51.i64[0] = 0xE5E5E5E5E5E5E5E5;
  v51.i64[1] = 0xE5E5E5E5E5E5E5E5;
  uint8x16_t v52 = (uint8x16_t)veorq_s8(v76.val[0], v51);
  uint16x8_t v53 = vmovl_u8(*(uint8x8_t *)v52.i8);
  int8x16_t v54 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v53.i8);
  int8x16_t v55 = (int8x16_t)vmovl_high_u16(v53);
  uint16x8_t v56 = vmovl_high_u8(v52);
  int8x16_t v57 = (int8x16_t)vmovl_u16(*(uint16x4_t *)v56.i8);
  int8x16_t v58 = (int8x16_t)vmovl_high_u16(v56);
  uint8x16_t v59 = (uint8x16_t)veorq_s8(v76.val[1], v51);
  uint16x8_t v60 = vmovl_high_u8(v59);
  uint16x8_t v61 = vmovl_u8(*(uint8x8_t *)v59.i8);
  uint8x16_t v62 = (uint8x16_t)veorq_s8(v76.val[2], v51);
  _Q21 = (int8x16_t)vmovl_high_u8(v62);
  _Q20 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v62.i8);
  int8x16_t v65 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q20.i8, 0x10uLL);
  __asm { SHLL2           V20.4S, V20.8H, #0x10 }
  int8x16_t v70 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
  __asm { SHLL2           V21.4S, V21.8H, #0x10 }
  v76.val[0] = veorq_s8(v76.val[3], v51);
  v76.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v76.val[0]);
  v76.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v76.val[1]);
  v76.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v76.val[0].i8);
  v76.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v76.val[0]);
  v76.val[0] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[0].i8), 0x18uLL), v65), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v61.i8, 8uLL), v54));
  v76.val[3] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v76.val[3], 0x18uLL), _Q20), vorrq_s8((int8x16_t)vshll_high_n_u16(v61, 8uLL), v55));
  v76.val[1] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v76.val[1].i8), 0x18uLL), v70), vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v60.i8, 8uLL), v57));
  v76.val[2] = vorrq_s8(vorrq_s8((int8x16_t)vshlq_n_s32((int32x4_t)v76.val[2], 0x18uLL), _Q21), vorrq_s8((int8x16_t)vshll_high_n_u16(v60, 8uLL), v58));
  int32x4_t v71 = (int32x4_t)veorq_s8(vandq_s8(v76.val[0], a47), (int8x16_t)(*(_OWORD *)&v54 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v72 = (int32x4_t)veorq_s8(vandq_s8(v76.val[3], a47), (int8x16_t)(*(_OWORD *)&v55 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v73 = (int32x4_t)veorq_s8(vandq_s8(v76.val[1], a47), (int8x16_t)(*(_OWORD *)&v57 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  int32x4_t v74 = (int32x4_t)veorq_s8(vandq_s8(v76.val[2], a47), (int8x16_t)(*(_OWORD *)&v58 & __PAIR128__(0xFFFFFF11FFFFFF11, 0xFFFFFF11FFFFFF11)));
  a1[2] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[1], vaddq_s32(v73, v73)), a46);
  a1[3] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[2], vaddq_s32(v74, v74)), a46);
  *a1 = vaddq_s32(vsubq_s32((int32x4_t)v76.val[0], vaddq_s32(v71, v71)), a46);
  a1[1] = vaddq_s32(vsubq_s32((int32x4_t)v76.val[3], vaddq_s32(v72, v72)), a46);
  return (*(uint64_t (**)(void))(v49 + 8 * ((159 * ((v48 + 213328489) < 0x10)) ^ (v50 + 457))))();
}

uint64_t sub_1B0291488()
{
  BOOL v7 = v0 == v5 + v1 - 1629 - 370 && v3 != v2;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((v7 * ((v1 + 1632030719) & 0x9EB92CFF ^ 0x5A6)) ^ (v1 - 839))))();
}

uint64_t sub_1B02914E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B0291544(146, a2, a3, 1026, 0xED5210477EA1954DLL, 1042, 175, 1136);
}

uint64_t sub_1B0291544(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t a5)
{
  uint64_t v10 = ((((v7 - 877) | a4) - 976) ^ a5) + v8;
  return (*(uint64_t (**)(void))(v9
                              + 8 * ((13 * (*(unsigned __int8 *)(v5 + v10) == *(unsigned __int8 *)(v6 + v10))) | v7)))();
}

uint64_t sub_1B0291580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27,uint64_t a28,unsigned int a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  int v203 = a5 ^ 0x8AC;
  uint64_t v39 = ((v36 ^ 0x4D016D3688220B09)
       + v35
       - (((v36 ^ 0x4D016D3688220B09) & (v35 + 4) ^ v36 & 4) << ((a5 ^ 0x50) + 113 * (a5 ^ 0xB7u) - 54))) ^ v38;
  uint64_t v40 = __ROR8__(__ROR8__(a3 ^ a28, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v41 = v40 ^ 0x322397601515A6F7;
  unint64_t v42 = ((v40 ^ 0x322397601515A6F7)
       + 0x53AFBFCC4DA6B3ECLL
       - ((2 * (v40 ^ 0x322397601515A6F7)) & 0xA75F7F989B4D67D8)) ^ a2;
  uint64_t v43 = v34 ^ v36 ^ 0x4D016D3688220B09;
  uint64_t v44 = v39 ^ 0x68040451F630332FLL;
  unint64_t v45 = v39 ^ 0x68040451F630332FLL ^ (v42 ^ 0xE4C1C31231B4037DLL) & (v40 ^ 0xCDDC689FEAEA5908);
  unint64_t v46 = v43 ^ 0x168207F618085D46 ^ (((v39 ^ 0x97FBFBAE09CFCCD0) & (v40 ^ 0x322397601515A6F7))
                                    - ((2 * ((v39 ^ 0x97FBFBAE09CFCCD0) & (v40 ^ 0x322397601515A6F7))) & 0x48C87F69E908D056)
                                    + 0x24643FB4F484682BLL);
  uint64_t v47 = v42 ^ 0x1B3E3CEDCE4BFC82;
  unint64_t v48 = v42 ^ 0xE4C1C31231B4037DLL ^ (v43 ^ 0x32E63842EC8C356DLL) & (v34 ^ 0xCD19C7BD1373CA92);
  *((void *)&v49 + 1) = v34 ^ 0x356D;
  *(void *)&long long v49 = v34 ^ 0x32E63842EC8C0000;
  unint64_t v50 = v47 & (v34 ^ 0x32E63842EC8C356DLL) ^ v41 ^ v45;
  unint64_t v51 = v44 & (v43 ^ 0xCD19C7BD1373CA92);
  unint64_t v52 = __ROR8__(__ROR8__(v45, 38) ^ __ROR8__(v46, 38) ^ 0xB8AB4977971512F1, 26);
  LODWORD(v41) = *(unsigned __int8 *)(a30 + ((((v50 >> 61) ^ 4) + 241) ^ 0x78));
  int v53 = 4 * (v41 ^ 0xFFFFFFDD) - 32 * ((v41 ^ 0xFFFFFFDD) >> 2) + 114;
  char v54 = (v41 ^ 0xDD) - ((2 * (v41 ^ 0xDD)) & 0xE4) + 114;
  char v55 = v41 ^ 0xE5;
  char v56 = v55 + (v54 ^ v53 ^ 0xC7) + 1;
  char v57 = v56 & 0x40;
  unint64_t v58 = v48 ^ __ROR8__((v49 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v51;
  unsigned __int8 v59 = (v53 ^ 0x8D) + 1;
  if ((v56 & 0x40 & v59) != 0) {
    char v60 = v59 - v57 - ((2 * (v59 - v57)) & 0xA6);
  }
  else {
    char v60 = v57 + v59 - 2 * ((v57 + v59) & 0x54 ^ v59 & 4);
  }
  char v61 = (v60 + 82) ^ ((v56 & 0xBF) - ((2 * v56) & 0x24) + 82);
  unsigned __int8 v62 = ((v61 - ((2 * v61) & 0xE4) + 114) ^ v53) + v55;
  *((void *)&v63 + 1) = ~v48;
  *(void *)&long long v63 = v48 ^ 0x92CFC162FD513142;
  unint64_t v64 = __ROR8__(v48, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v63 + 1) = v48 ^ 0xFEFC5E05630A97F5 ^ ((v63 >> 1)
                                                      - ((2 * (v63 >> 1)) & 0xD8673ECF3CB74D6CLL)
                                                      + 0x6C339F679E5BA6B6);
  *(void *)&long long v63 = *((void *)&v63 + 1) ^ (v48 << 58) ^ 0xC00000000000000;
  uint64_t v65 = v63 >> 51;
  uint64_t v66 = v50 ^ (v50 >> 39) ^ (8 * v50) ^ (((v62 >> 1) | (v62 << 7)) | (v50 << 25));
  uint64_t v67 = v66 ^ 0x4C294B688C20AA59;
  uint64_t v68 = v65 + (v64 ^ 0x8F8AC7F1FBA51795);
  unint64_t v69 = (v46 << 23) ^ 0xFBA827E079000000;
  unint64_t v70 = (((v52 << 45) ^ (v52 << 36)) & 0xFFFFFFF000000000 | (v52 >> 28)) ^ (v52 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v71 = v70 - ((2 * v70) & 0xE599BE14C1A37334) + 0x72CCDF0A60D1B99ALL;
  unint64_t v72 = v46 ^ (v46 >> 41) ^ (v46 >> 7) ^ (((v46 << 57) ^ 0xE400000000000000) - 0x7E4B34977306267ALL);
  uint64_t v73 = (v72 & 0x10000000000000 ^ 0x7F7DDFFFFBFFBDFCLL) + 2 * (v72 & 0x10000000000000);
  uint64_t v74 = v73 - 0x50005250333810D4;
  unint64_t v75 = v72 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v76 = v73 - 0x7F7DDFFFFBFFBDFCLL;
  uint64_t v77 = __ROR8__(v68 - 2 * (v65 & (v64 ^ 0x8F8AC7F1FBA51795)), 13);
  unint64_t v78 = v58 ^ (v58 >> 10) ^ (v58 << 47) ^ ((v58 >> 17) | (v58 << 54));
  unint64_t v79 = 0xAEFB6DAFC4C76B24 - v73;
  if ((v76 & v69) == 0) {
    unint64_t v79 = v74;
  }
  uint64_t v80 = (v69 - 0x2F7D8DAFC8C7AD28 + v79) ^ v75;
  uint64_t v81 = ((v80 ^ 0x37E39ED0324D1A66)
       - ((2 * (v80 ^ 0x37E39ED0324D1A66)) & 0x309F5E592C9828FALL)
       - 0x67B050D369B3EB83) ^ v78;
  uint64_t v82 = __ROR8__(__ROR8__(v81 ^ 0xAF279D1225267BC4, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v83 = v67 ^ (v77 + 0x6A7061692F7B7EB4 - ((2 * v77) & 0xD4E0C2D25EF6FD68));
  unint64_t v84 = v71 ^ v52 ^ v80;
  unint64_t v85 = v82 & (v78 ^ 0x1CAE3FE19723B7B4) ^ v83;
  unint64_t v86 = (v84 ^ 0x8F5342434B8EAFEFLL | ~v82)
      + ((v82 + 0x3EA97B8D290965DCLL - ((2 * v82) & 0x7D52F71A5212CBB8)) ^ v84 ^ 0xB1FA39CE6287CA33)
      + 1;
  unint64_t v87 = (((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))
       + 0x3EA97B8D290965DCLL
       - ((2 * ((v83 ^ 0xBEE74353B47A99EDLL) & (v66 ^ 0xD9A6D5FE5CA42B12))) & 0x7D52F71A5212CBB8)) ^ v84 ^ 0xB1FA39CE6287CA33;
  unint64_t v88 = v81 ^ (v84 ^ 0x70ACBDBCB4715010) & (v66 ^ 0x26592A01A35BD4EDLL);
  unint64_t v89 = ((v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))
       + 0x6A7061692F7B7EB4
       - ((2 * (v87 ^ (v83 ^ 0x4118BCAC4B856612) & (v78 ^ 0xE351C01E68DC484BLL))) & 0xD4E0C2D25EF6FD68)) ^ v67;
  unint64_t v90 = ((v85 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v78 ^ 0xE1DE6585B59498FDLL, 27);
  *((void *)&v92 + 1) = v87 ^ v88 ^ 0xFB539D5;
  *(void *)&long long v92 = v87 ^ v88 ^ 0xD76260C6F0000000;
  uint64_t v91 = v92 >> 28;
  unint64_t v93 = v86 ^ __ROR8__(v90 ^ (((v85 ^ 0xBEE74353B47A99EDLL) << 37)- (((v85 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v92 = __ROR8__(v87 ^ v88, 19);
  unint64_t v94 = (v91 ^ v92 ^ 0xA73ABAEC4C18DFF6)
      - ((2 * (v91 ^ v92 ^ 0xA73ABAEC4C18DFF6)) & 0x420F5BA30A4DD676)
      + 0x2107ADD18526EB3BLL;
  *((void *)&v92 + 1) = v89 ^ 0x1747C156E755AED6;
  *(void *)&long long v92 = v89 ^ 0x4000000000000000;
  uint64_t v95 = v89 ^ __ROR8__(v89, 39) ^ (v92 >> 61);
  uint64_t v96 = v95 & 0x7C09B5691D153F3ALL;
  uint64_t v97 = ((v88 >> 7) ^ (v88 >> 41) | (v88 << 57)) ^ (v88 << 23) ^ 0x2FDC4B32D0EB37BLL;
  unint64_t v98 = v97 - ((2 * v97) & 0x9BBF06AA17F354B0) - 0x32207CAAF40655A8;
  uint64_t v99 = v88 ^ 0x2CF9D09F74E9832BLL ^ v98;
  unint64_t v100 = v94 ^ v87 ^ v98;
  unint64_t v101 = v93 ^ (v93 << 47) ^ (v93 >> 10) ^ (v93 >> 17) ^ (v93 << 54);
  uint64_t v102 = (v99 & 0x100000000 ^ 0x7BFF76C3FD6F77BFLL) + 2 * (v99 & 0x100000000);
  uint64_t v103 = v102 - 0x388D1600100E4520;
  unint64_t v104 = v99 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v105 = ((v85 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v85 >> 1) ^ (((v85 ^ 0xD1A234CC1D2559D7) << 58) | v85 ^ 0xD1A234CC1D2559D7) ^ ((((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000) ^ ((v85 ^ 0xD1A234CC1D2559D7) << 63)) - 0x740EDEC08E4360DELL - ((2 * (((v85 ^ 0xD1A234CC1D2559D7) << 58) & (v85 ^ 0xD000000000000000))) & 0x1000000000000000)) ^ v95 ^ 0x71784B343A47BE76;
  uint64_t v106 = v105 ^ 0x68D11A660E92ACEBLL;
  uint64_t v107 = v102 - 0x7BFF76C3FD6F77BFLL;
  unint64_t v108 = 0xBF71D787EAD0AA5ELL - v102;
  if (((v101 ^ 0xBEE8B63400000000) & v107) == 0) {
    unint64_t v108 = v103;
  }
  unint64_t v109 = ((v101 ^ 0xBEE8B6349A795903) - 0x437260C3ED61329FLL + v108) ^ v104;
  *((void *)&v110 + 1) = v100 ^ 0xE7A51C5;
  *(void *)&long long v110 = v100 ^ 0xDA9C1D8800000000;
  unint64_t v111 = (v100 ^ 0xDA9C1D880E7A51C5) & ~v109;
  char v112 = v109 & 1;
  *(void *)&long long v110 = __ROR8__((v110 >> 33) ^ __ROR8__((v105 ^ 0x68D11A660E92ACEBLL) & (v95 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v113 = v109 & (v101 ^ 0x411749CB6586A6FCLL);
  unint64_t v114 = v109 ^ (((v100 ^ 0x2563E277F185AE3ALL) & (v95 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v100 ^ 0x2563E277F185AE3ALL) & (v95 ^ 0xFA896A0B4BFB2154))) & 0xBD49CBC872242CF2)
               - 0x215B1A1BC6EDE987);
  unint64_t v115 = v105 ^ 0x972EE599F16D5314;
  unint64_t v116 = v113 ^ v106;
  unint64_t v117 = (v101 ^ 0xBEE8B6349A795903) & v115;
  unint64_t v118 = v113 ^ v106 ^ v101 ^ (v111 - ((2 * v111) & 0x69DF733F277901C0) + 0x34EFB99F93BC80E0);
  unint64_t v119 = v110 ^ v95 ^ 0x71784B343A47BE76 ^ (v117 - 0x740EDEC08E4360DELL - ((2 * v117) & 0x17E2427EE3793E44));
  unint64_t v120 = (v113 ^ v106 ^ 0x7955EAEC4D48B80CuLL) >> v112 >> (v112 ^ 1u);
  uint64_t v121 = v119 ^ 0x4A0030B9C78B7E47 ^ (((v119 >> 61) ^ (v119 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v119 >> 61) ^ (v119 >> 39) ^ 0xAFF5F4)) & 0x2AC4C2E)
                                      + 0x1DFACB88A7562617);
  uint64_t v122 = (((v119 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v119 << 25) ^ 0x62C1BAB0A0000000) ^ (v121
                                                                                                  - (v121 ^ (v119 << 25) ^ 0x62C1BAB0A0000000)))
        + v121) ^ (8 * v119);
  uint64_t v123 = ((v114 >> 41) | (v114 << 57)) ^ (v114 >> 7) ^ (((v114 << 23) ^ 0x7E34861EB6800000)
                                                      - ((2 * ((v114 << 23) ^ 0x7E34861EB6800000)) & 0x4E3F4EACF6000000)
                                                      + 0x271FA7567B568D78);
  uint64_t v124 = (v118 >> 10) ^ (v118 << 47) ^ (v118 >> 17) ^ (v118 << 54) ^ 0x598FA1532137D1BELL;
  uint64_t v125 = (v124 - ((2 * v124) & 0x35134ED236AC5FCLL) + 0x1A89A7691B562FELL) ^ v118;
  unint64_t v126 = v125 ^ 0x9D4439B5C840702BLL;
  unint64_t v127 = ((v114 ^ (unint64_t)v110) << 36) ^ ((v114 ^ (unint64_t)v110) << 45) ^ ((v114 ^ (unint64_t)v110) >> 19) ^ ((v114 ^ (unint64_t)v110) >> 28) ^ 0xC122535916D4ED0FLL;
  unint64_t v128 = v123 ^ v114 ^ v125;
  uint64_t v129 = v123 ^ v110 ^ (v127 - 0x42545C1395322E5 + (~(2 * v127) | 0x84A8B8272A645CBLL));
  unint64_t v130 = (((v116 << 58) ^ (v116 << 63)) & 0xFC00000000000000 | (v116 >> 6)) ^ v120;
  unint64_t v131 = v116 ^ 0xACC70349B339B5F4 ^ ((v130 ^ 0x31E557ABB13522E0)
                                      - 2 * ((v130 ^ 0x31E557ABB13522E0) & 0x5592E9A5FE710DFBLL ^ v130 & 3)
                                      - 0x2A6D165A018EF208);
  uint64_t v132 = v122 ^ 0x1FB350807E31C757 ^ (v131 - 0x5F9B76F48724FA29 - ((2 * v131) & 0x40C91216F1B60BAELL));
  uint64_t v133 = (v122 ^ 0x40282674F9153D7FLL) & v131;
  uint64_t v134 = ((v126 & ~v132) - 0x5F9B76F48724FA29 - ((2 * (v126 & ~v132)) & 0x40C91216F1B60BAELL)) ^ v122 ^ 0x1FB350807E31C757;
  unint64_t v135 = (v128 ^ 0x9998574222B4C193) & (v125 ^ 0x62BBC64A37BF8FD4) ^ v132;
  unint64_t v136 = (v133 - ((v133 + 0x17FAE2E70732F3CBLL - ((2 * v133) & 0x2FF5C5CE0E65E796)) ^ v129 ^ 0x3DDE119A994D85F6)) ^ ((v129 ^ 0xD5DB0C82618089C2) + 1);
  unint64_t v137 = ((v136 + 0x17FAE2E70732F3CBLL - ((2 * v136) & 0x2FF5C5CE0E65E796)) ^ v129 ^ 0x3DDE119A994D85F6) + v133;
  unint64_t v138 = v134 ^ v137;
  unint64_t v139 = (((2 * v128) ^ 0xCCCF517BBA967CD9) + (v128 ^ 0x9998574222B4C193)) & (v129 ^ 0x2A24F37D9E7F763DLL);
  unint64_t v140 = (((v122 ^ 0xBFD7D98B06EAC280) & (v129 ^ 0xD5DB0C82618089C2))
        - ((2 * ((v122 ^ 0xBFD7D98B06EAC280) & (v129 ^ 0xD5DB0C82618089C2))) & 0xF3A8169E0971E4AELL)
        - 0x62BF4B0FB470DA9) ^ v128;
  unint64_t v141 = v137 ^ v140;
  unint64_t v142 = v137 ^ v140 ^ 0x604C5C0D260C33C4;
  unint64_t v143 = (v134 ^ v137) >> 61;
  unint64_t v144 = v135 ^ v126 ^ v139;
  *((void *)&v110 + 1) = v138 ^ 0x1877DA25;
  *(void *)&long long v110 = v138 ^ 0x425764BB40000000;
  uint64_t v145 = v110 >> 30;
  *((void *)&v110 + 1) = v141 ^ 0x4C64E;
  *(void *)&long long v110 = v141 ^ 0xF7BAFBE8D0E00000;
  uint64_t v146 = (v138 << 25) ^ 0x76B0EFB44A000000;
  unint64_t v147 = v135 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v135 & 0x2011531CB0A0EE4 | (v135 << 58));
  unint64_t v148 = v145 ^ (v143 << 34) ^ 0x84F57132E3442245;
  uint64_t v149 = (v140 >> 41) ^ 0x845FA;
  uint64_t v150 = (v110 >> 19) ^ (v142 << 36) ^ (v142 >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v151 = v141 ^ 0xF3D8E313B2F02E8DLL ^ (v150 - ((2 * v150) & 0x8C431F6C429D186) + 0x46218FB6214E8C3);
  unint64_t v152 = (((2 * ((v135 >> 1) ^ 0x3B6B979E40CC51D4)) & 0x90680C0C44E04462)
        - (((v135 >> 1) ^ 0x3B6B979E40CC51D4) & 0x5936C73633F8FA71)
        + 0x1102E1B1D18DDDC8) ^ ((v135 >> 1) ^ 0x3B6B979E40CC51D4) & 0x5936CF3633F8FA71;
  uint64_t v153 = __ROR8__(v148, 34);
  unint64_t v154 = v147 ^ (v135 << 63);
  *((void *)&v110 + 1) = v140 ^ 0x39;
  *(void *)&long long v110 = v140 ^ 0x108BF4DED5680E00;
  uint64_t v155 = v140 ^ 0xBCC6938F64D0E14DLL ^ ((v110 >> 7) - ((2 * (v110 >> 7)) & 0x589ACEA36371DEE8) - 0x53B298AE4E47108CLL);
  uint64_t v156 = (v153 ^ (v138 >> 39) ^ 0x84AEC9) + v146;
  uint64_t v157 = v153 & v146;
  uint64_t v158 = v155 & v149;
  uint64_t v159 = v155 + v149;
  uint64_t v160 = v156 - 2 * v157;
  uint64_t v161 = v152 ^ 0x3A67CCA7BB7CFE99 ^ (v154 + 0x2B6525166AF12351 - ((2 * v147) & 0x56CA4A2CD5E246A2));
  BOOL v162 = v96 == 0x7809200909112110;
  uint64_t v163 = v161 ^ 0x549ADAE9950EDCAELL;
  if (v162) {
    uint64_t v163 = v152 ^ 0x3A67CCA7BB7CFE99;
  }
  uint64_t v164 = v160 ^ (8 * v138);
  BOOL v162 = ((v152 ^ 0x1102E9B1D18DDDC8) & v154) == 0;
  uint64_t v165 = ((v154 + (v152 ^ 0xEEFD164E2E722237) + 1) ^ 0xFB5DBEFFB7FFFFFFLL)
       + 0x7DF67D6FFB4FFF80
       + ((2 * (v154 + (v152 ^ 0xEEFD164E2E722237) + 1)) & 0xF6BB7DFF6FFFFFFELL);
  if (v162) {
    uint64_t v165 = v161 + 2 * ((v163 ^ 0x2B6525166AF12351) & v147) + 0x79543C6FB34FFF7FLL;
  }
  uint64_t v166 = (v159 - 2 * v158) ^ (v140 << 23);
  *((void *)&v167 + 1) = v165 + 0x6ABC3904CB00081;
  *(void *)&long long v167 = v165 - 0x79543C6FB34FFF7FLL;
  unint64_t v168 = v144 ^ (v144 >> 10) ^ (v144 >> 17) ^ (v144 << 47) ^ (v144 << 54);
  uint64_t v169 = v166 ^ v168;
  unint64_t v170 = __ROR8__(__ROR8__(v135, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v167 >> 61), 3) ^ (v135 >> 6);
  unint64_t v171 = v164 ^ 0xAA6A2D4BA2838D66;
  *(void *)&long long v167 = __ROR8__(__ROR8__(v166, 57) ^ __ROR8__(v151, 57) ^ 0xCBA377C727C8673CLL, 7);
  unint64_t v172 = v170 ^ v164 ^ 0xAA6A2D4BA2838D66;
  uint64_t v173 = (v172 ^ 0x3CBE485844A65555) & (v168 ^ 0x5156C560131506D7);
  v172 ^= 0xC341B7A7BB59AAAALL;
  uint64_t v174 = v172 & (v164 ^ 0x5595D2B45D7C7299);
  unint64_t v175 = v172 ^ (v166 ^ 0x6F6AB4071C800000) & (v168 ^ 0xAEA93A9FECEAF928);
  *((void *)&v167 + 1) = v167 ^ 0x16FDF2E892CF90CELL;
  unint64_t v176 = v173 ^ v171;
  uint64_t v177 = v174 ^ v167 ^ 0x16FDF2E892CF90CELL;
  unint64_t v178 = (v167 ^ 0x16FDF2E892CF90CELL) & (v166 ^ v168 ^ 0xC1C38E98F06AF928);
  unint64_t v179 = (__ROR8__((v167 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v171 ^ v169;
  unint64_t v180 = v179 ^ v177;
  unint64_t v181 = v179 ^ v177 ^ 0x3E3C71670F9506D7;
  *((void *)&v167 + 1) = v179 ^ v177 ^ 0x3D2C8;
  *(void *)&long long v167 = v179 ^ v177 ^ 0x3700522414E00000;
  unint64_t v182 = ((v178 ^ v175) - ((2 * (v178 ^ v175)) & 0xA907146EF9E95540) - 0x2B7C75C8830B5560) ^ v168;
  uint64_t v183 = v176 ^ v177 ^ ((v176 ^ v177) >> 39) ^ (8 * (v176 ^ v177)) ^ ((v176 ^ v177) << 25) ^ ((v176 ^ v177) >> 61);
  unint64_t v184 = __ROR8__(__ROR8__(v175 ^ 0x616B258C5FF13C26, 27) ^ 0x61D86C4195FBD0F1, 37);
  uint64_t v185 = (v167 >> 19) ^ (v181 << 36) ^ (v181 >> 28) ^ 0xB76D41F000000000;
  uint64_t v186 = (v185 - ((2 * v185) & 0x23329275A4690EF0) + 0x1199493AD2348778) ^ v180;
  unint64_t v187 = v175 ^ 0x6DC4FB0BD4FFFF44 ^ ((v175 ^ 0x6DC4FB0BD4FFFF44) >> 1) ^ (v184 << 58);
  *((void *)&v167 + 1) = v179 ^ 0x3C888634586;
  *(void *)&long long v167 = v179 ^ 0xAE5D280000000000 ^ (((v179 << 57) ^ 0xC00000000000000)
                                                  - ((2 * ((v179 << 57) ^ 0xC00000000000000)) & 0x7800000000000000)
                                                  - 0x422B12867AA61534);
  uint64_t v188 = ((v183 ^ 0xABCF8FE7C463E5DLL) + v187 - 2 * ((v183 ^ 0xABCF8FE7C463E5DLL) & v187)) ^ ((v184 >> 6) | (v184 << 63));
  uint64_t v189 = __ROR8__(__ROR8__(v179, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x392AA1EF68E296F6 ^ (v167 >> 42), 22);
  unint64_t v190 = v182 ^ (v182 >> 10) ^ (((v182 << 54) ^ (v182 << 47)) & 0xFFFF800000000000 | (v182 >> 17));
  BOOL v162 = v68 == 0;
  unint64_t v191 = v189 ^ 0xDD74CA3F78583B7ELL;
  if (v162) {
    unint64_t v191 = 0x228B35C087A7C481;
  }
  unint64_t v192 = v189 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v179, 41) ^ v191 & v189 ^ 0x6E38FAC9F89EBFCBLL;
  unint64_t v193 = (v190 ^ 0x9326FC7D9E6557C1) & ~v188;
  uint64_t v194 = v186 ^ v192 ^ 0x26991B1E55156181;
  unint64_t v195 = v188 & (v183 ^ 0xF543070183B9C1A2);
  unint64_t v196 = v192 & (v190 ^ 0x6CD90382619AA83ELL) ^ v188;
  uint64_t v197 = v194 & ~((v192 - 0x7AFC2F0FDB41C319 - ((2 * v192) & 0xA07A1E0497C79CELL)) ^ v190 ^ 0x16252C8DBADB6B26);
  unint64_t v198 = ((v194 ^ v195 ^ v193) - ((2 * (v194 ^ v195 ^ v193)) & 0x25299ECB2C3B20C6) + 0x1294CF65961D9063) ^ v183;
  uint64_t v199 = v196 ^ v190 ^ 0x16252C8DBADB6B26 ^ (v197 - 0x7AFC2F0FDB41C319 - ((2 * v197) & 0xA07A1E0497C79CELL));
  BOOL v200 = a34 - 604603921 < a27;
  if (a29 > 0x1EDED817 != (a34 - 604603921) < 0xE12127E8) {
    BOOL v200 = a29 > 0x1EDED817;
  }
  *((void *)&v201 + 1) = v196 ^ v190 ^ 0xBADB6B26 ^ (v197
                                                                                 + 616447207
                                                                                 - ((2 * v197) & 0x497C79CE)) ^ 0x149E7;
  *(void *)&long long v201 = v199 ^ 0x29E1AB0124FE0000;
  return (*(uint64_t (**)(void, unint64_t, unint64_t))(v37 + 8 * (v203 ^ (44 * v200))))(v199 ^ __ROR8__(v199, 10) ^ (v201 >> 17), v196 ^ (v196 << 58) ^ ((v196 >> 1) ^ (v196 >> 6) | ((unint64_t)~v196 << 63)), v198 ^ (8 * v198) ^ (v198 << 25) ^ (v198 >> 39) ^ (v198 >> 61) ^ 0x6950EAABEA56688DLL);
}

uint64_t sub_1B0292DB0()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((LODWORD(STACK[0x3C0]) * (v1 >= v0)) ^ (LODWORD(STACK[0x3FC]) - 382))))();
}

uint64_t sub_1B0292DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((((((*(unsigned char *)(v9 + 48 * (v10 + a8) + 40) & 8) == 0) ^ (v8 + 1)) & 1)
                                * a5) ^ v8)))();
}

void sub_1B0292E1C()
{
}

void sub_1B0292F88()
{
}

void sub_1B0293034()
{
}

uint64_t sub_1B029303C@<X0>(int a1@<W2>, int a2@<W8>)
{
  STACK[0x468] = v2 - 16;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((a1 != v4) * ((a2 + 1159416552) & 0xBAE4B55D ^ 0x54F)) ^ a2)))();
}

uint64_t sub_1B0293094()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((11
                                * (((125 * (v2 ^ 0x5E4)) ^ 0xBCF39AF2) + v1 >= ((v2 + 975544777) & 0xC5DA595F) - 287)) | v2)))();
}

uint64_t sub_1B02930F8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((37
                                * (LODWORD(STACK[0x400]) != (((((v7 + 143) | 0x400) - 1564) | a2) ^ 0x552) * a7
                                                          + 1284424252)) ^ ((v7 + 143) | 0x400))))();
}

uint64_t sub_1B0293254()
{
  *(_DWORD *)(v2 - 192) = (v0 - 137) ^ (1224239923
                                      * ((-2 - ((~(v2 - 192) | 0xC3FDFBE7) + ((v2 - 192) | 0x3C020418))) ^ 0x314E0630));
  STACK[0x260] = (unint64_t)&STACK[0x1401A874B35F5227];
  *(void *)(v2 - 184) = &STACK[0x1401A874B35F5227];
  STACK[0x258] = (unint64_t)&STACK[0xD547898781B160C];
  *(void *)(v2 - 168) = &STACK[0xD547898781B160C];
  *(unsigned char *)(v2 - 160) = (51 * ((-2 - ((~(v2 + 64) | 0xE7) + ((v2 + 64) | 0x18))) ^ 0x30)) ^ 0x54;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 - 1235) ^ 0x803)))(v2 - 192);
  int v4 = *(_DWORD *)(v2 - 176);
  LODWORD(STACK[0x5B4]) = v4;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v4 == -1373544826) * ((((v0 - 1352) | 0x415) - 112) ^ 0x3C)) ^ (v0 - 1235))))(v3);
}

uint64_t sub_1B029334C()
{
  int v4 = 1224239923
     * ((((v3 - 192) ^ 0xF57BD695 | 0xF4A25E77) - ((v3 - 192) ^ 0xF57BD695) + (((v3 - 192) ^ 0xF57BD695) & 0xB5DA188)) ^ 0xF36A7535);
  *(_DWORD *)(v3 - 192) = v4 + v1 + 1038;
  *(void *)(v3 - 184) = STACK[0x238];
  *(_DWORD *)(v3 - 160) = v4 + LODWORD(STACK[0x22C]);
  *(void *)(v3 - 168) = STACK[0x2A8];
  *(void *)(v3 - 152) = STACK[0x230];
  *(_DWORD *)(v3 - 176) = v0 - v4 - 908489177;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 ^ 0x8E4)))(v3 - 192);
  int v6 = *(_DWORD *)(v3 - 144);
  LODWORD(STACK[0x5B4]) = v6;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v6 == ((v1 - 1777130235) & 0x69ECDFDB) - 1373546186) * (v1 + 584)) ^ v1)))(v5);
}

uint64_t sub_1B0293448()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((1523
                                * (((v2 - 1776988671) & 0x69EAB577 ^ 0x554) + (5 * v1) == v0 - 1284426096)) ^ v2)))();
}

uint64_t sub_1B029349C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a1 + ((a2 + v2) & v3) - 265) & 0x7FFFFFFC) == v5) * (a2 + 1092)) ^ a2)))();
}

uint64_t sub_1B02934D0@<X0>(int a1@<W2>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((524 * (a2 == ((v4 + (a1 ^ (a1 - 650)) - 1281) ^ a1 ^ (a1 + 117)))) ^ (v2 + a1 + 717))))();
}

void sub_1B029351C()
{
}

void sub_1B0293524()
{
}

void sub_1B029352C(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x67843F9A1244BAC7);
  int v4 = v2 - 1372200252;
  BOOL v3 = v2 - 1372200252 < 0;
  int v5 = 1372200252 - v2;
  if (!v3) {
    int v5 = v4;
  }
  int v1 = (*(_DWORD *)a1 - 235795823 * ((a1 - 590343418 - 2 * (a1 & 0xDCD01306)) ^ 0x487D5A5F)) ^ 0xA;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B0293664(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v23 - 120) = (v19 + 184) ^ (((((v23 - 120) | 0xA95C0B48) - (v23 - 120) + ((v23 - 120) & 0x56A3F4B0)) ^ 0xC4A81341)
                                        * v22);
  *(void *)(v23 - 112) = v20;
  *(void *)(v23 - 104) = a19;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v19 ^ 0xB5D)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * ((239
                                              * (*(_DWORD *)(v23 - 116) - 645999914 < ((v19 + 506822285) & 0xE1CA7EDF)
                                                                                    - 100571856)) ^ v19)))(v24);
}

void sub_1B0293728()
{
  LODWORD(STACK[0x5B4]) = v0 - 135;
  JUMPOUT(0x1B0259C58);
}

uint64_t sub_1B029373C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                                 + 8
                                                                                                 * (((((13 * ((a7 | 0x202) ^ 0x298) - 1994) & v8) == 0) * ((55 * ((a7 | 0x202) ^ 0x210)) ^ 0x3D1)) ^ (a7 | 0x202))))(a1, a2, a3, a4, a5, a6, (v7 - a6));
}

void sub_1B0293794()
{
  STACK[0x398] = v0;
  int v3 = LODWORD(STACK[0x3FC]) + 184;
  (*(void (**)(unint64_t, uint64_t))(v2 + 8 * SLODWORD(STACK[0x29C])))(STACK[0x2A0], 2965982036);
  int v4 = (*(uint64_t (**)(void))(v2 + 8 * SLODWORD(STACK[0x298])))();
  _DWORD *v1 = v4 + 1460018998 - ((v4 << (v3 ^ 9)) & 0xAE0C3E6C);
  JUMPOUT(0x1B029380CLL);
}

uint64_t sub_1B0293870@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v22 = ((v21 - 144) ^ 0x239AD816) * v20;
  *(void *)(v21 - 136) = a18;
  *(_DWORD *)(v21 - 140) = (v19 - 1586) ^ v22;
  *(_DWORD *)(v21 - 128) = a1 ^ v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v18 + 8 * (v19 + 409)))(v21 - 144);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((*(_DWORD *)(v21 - 144) != -1199810916) * (((v19 - 1740) | 0x1A0) ^ 0x78)) ^ v19)))(v23);
}

uint64_t sub_1B02938EC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F08CE000 + 8 * ((612 * (*(_DWORD *)(a2 + 4) == 1284426097)) | 0x402u) - 4))();
}

void sub_1B0293928(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X8, X17 }
}

void sub_1B02939FC()
{
}

void sub_1B0293E2C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(_DWORD *)(v21 - 132) = (a18 ^ a2 ^ a1) + (v18 ^ v20) + v20 - (v19 & (2 * ((a18 ^ a2 ^ a1) + (v18 ^ v20))));
  JUMPOUT(0x1B0293E74);
}

uint64_t sub_1B0293EFC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unsigned int a21,uint64_t a22,unsigned char *a23)
{
  uint64_t v26 = *(unsigned char **)(v25 + 96);
  v26[1167] = a23[19];
  v26[1166] = a23[18];
  v26[1165] = a23[17];
  v26[1164] = a23[16];
  v26[1163] = a23[15];
  v26[1162] = a23[14];
  v26[1161] = a23[13];
  v26[1160] = a23[12];
  v26[1159] = a23[11];
  v26[1158] = a23[10];
  v26[1157] = a23[9];
  v26[1156] = a23[8];
  v26[1155] = a23[7];
  v26[1154] = a23[6];
  v26[1153] = a23[5];
  v26[1152] = a23[4];
  v26[1151] = a23[3];
  v26[1150] = a23[2];
  v26[1149] = a23[1];
  v26[1148] = *a23;
  return (*(uint64_t (**)(void))(v24
                                           + 8
                                           * (((*(_DWORD *)(v25 + 72) != ((((((v23 ^ 0x22F) - 13) | 0x205) + 922747155) | 0xC000302B) ^ a4))
                                             * ((((((v23 ^ 0x22F) - 13) | 0x205) - 247397905) & 0xEBEFFEB) - 742)) ^ (((v23 ^ 0x22F) - 13) | 0x205))))(a21);
}

uint64_t sub_1B0294030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v17 + 8 * (((a14 == v14 + v15 - 1561) * ((v16 + 137) ^ 0x70C)) | v16)))();
}

uint64_t sub_1B0294064@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xC76u));
  return v3(v1);
}

void sub_1B0294098(uint64_t a1)
{
  int v1 = 460628867 * ((((2 * a1) | 0x69ED4642) - a1 - 888578849) ^ 0x7860215C);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0294130()
{
  unsigned int v5 = *(unsigned __int8 *)(v2 + 3) + ((v3 + 87) ^ 0xFFFFFD65);
  return (*(uint64_t (**)(void))(v4 + 8 * ((983 * (((v5 << ((7 * (v3 ^ 0xE1)) ^ 0x1E)) & v1) + (v5 ^ v0) != v0)) ^ v3)))();
}

void sub_1B029420C()
{
  LODWORD(STACK[0x61C]) = v0;
  JUMPOUT(0x1B0267A74);
}

void sub_1B0294228()
{
  _DWORD *v2 = -687464650;
  (*(void (**)(uint64_t))(v3 + 8 * (v0 + 2006)))(v1);
  JUMPOUT(0x1B029426CLL);
}

void sub_1B02943A4()
{
}

uint64_t sub_1B02943BC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 732) | 0xA3) ^ (v2 - 572)) * (v0 == v1)) | v2)))();
}

void sub_1B02943EC()
{
}

uint64_t sub_1B02943F4()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((896 * ((v2 & 0xFFFFFFFFFFFFFFFuLL) - 1 < ((v3 + v0 + 569) ^ 0x2BDuLL))) ^ (v3 + v0 + 255))))();
}

uint64_t sub_1B0294430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v8 + (v5 & a4)) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 0) * a5) ^ v6)))();
}

uint64_t sub_1B029445C@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 795));
  return v3(v1);
}

uint64_t sub_1B029448C()
{
  STACK[0x240] = v2;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31 * ((v1 ^ 0x8D ^ (v0 == ((v1 - 1817) | 0x82) + 1441369917)) & 1)) ^ v1)))();
}

uint64_t sub_1B02944F0()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((63 * (v0 > ((v2 + 1174668986) ^ 0x996F207A))) ^ (v2 + 1174668986))))();
}

uint64_t sub_1B029452C()
{
  STACK[0x280] = v0;
  STACK[0x4F8] = 0;
  int v4 = 235795823 * ((2 * ((v3 - 192) & 0x54638408) - (v3 - 192) - 1415808016) ^ 0x3F3132A9);
  *(_DWORD *)(v3 - 184) = -1886077889 - v4;
  *(void *)(v3 - 176) = STACK[0x268];
  *(void *)(v3 - 160) = STACK[0x270];
  *(void *)(v3 - 192) = 0x6C39C41327E11828;
  *(_DWORD *)(v3 - 168) = v4 + v1 - 1042;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v1 + 431)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((*(_DWORD *)(v3 - 152) == 34 * (v1 ^ 0x699) - 1373546186)
                                                   * (((v1 + 116608334) & 0xF90CAFDC) - 876)) ^ v1)))(v5);
}

uint64_t sub_1B0294624(int a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,char a33)
{
  return (*(uint64_t (**)(void))(v34
                              + 8
                              * ((((unint64_t)(&a33
                                                    + (v33 + a3)
                                                    + (a19 ^ 0xFFFFFFFFFFFFFBC1 ^ ((a1 - 1902) | 0x432u))) > 0xF)
                                * ((a1 ^ 0x2BF) - 1470)) ^ a1)))();
}

uint64_t sub_1B0294678@<X0>(int a1@<W5>, int a2@<W8>)
{
  int v6 = *(_DWORD *)(v3 + 48 * a2 + 36);
  BOOL v8 = v6 - 350232683 > v2 - 376189484 && v6 - 350232683 < SLODWORD(STACK[0x3D0]);
  BOOL v9 = v6 != ((v2 - 500094964) & 0x1DCED7AD ^ (v4 + 1144)) && v8;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * a1) ^ (v2 + 721))))();
}

void sub_1B02946F4()
{
}

uint64_t sub_1B029471C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((53 * (a7 + 1 == v9 + 64)) | v7)))();
}

uint64_t sub_1B02947F0()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((4071 * (v1 + v2 + (((v0 - 1363) | 4) ^ (v0 - 2135210806)) < 0xC)) ^ v0)))();
}

uint64_t sub_1B02949B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  return (*(uint64_t (**)(void))(v24 + 8 * ((2479 * (a23 == ((v23 - 165) ^ 0x325F68A5))) ^ v23)))();
}

uint64_t sub_1B02949F8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((v3 == ((v2 - 415) ^ (a2 - 581))) * (((v2 - 2091754852) & 0x7CADA3BF) - 739)) ^ v2)))();
}

void sub_1B0294A50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  *int v32 = -687464650;
  (*(void (**)(uint64_t))(v31 + 8 * (v30 ^ 0x871)))(a30);
  JUMPOUT(0x1B0294A94);
}

void sub_1B0294BAC()
{
}

uint64_t sub_1B0294BB4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((51
                                * (a15
                                 + v18
                                 - 220
                                 + (unint64_t)(v15 + (((a3 - 1811109261) | 0x4A210166) ^ (v16 + 1))) < ((a3 + 1001) ^ 0x5E7uLL))) ^ a3)))();
}

void sub_1B0294C14(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x18D17CD12703C5D3) = v1 + 1;
  JUMPOUT(0x1B0268A34);
}

uint64_t sub_1B0294C30@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, uint64_t a6@<X8>)
{
  *(unsigned char *)(v8 + (v7 + a3)) = *(unsigned char *)(a6 + (v7 + a3));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 - 1 == a5) * ((v6 + a1) & a2 ^ a4)) ^ v6)))();
}

void sub_1B0294C68(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  *(unsigned char *)(a6 + v7 + ((a3 - 233113019) & 0xDE4FFFFu) - 234) = v6;
  JUMPOUT(0x1B025F828);
}

uint64_t sub_1B0294CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 144) = a22;
  *(void *)(v28 - 112) = a24;
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261 * ((((v28 - 144) | 0xEB75583B) - ((v28 - 144) & 0xEB75583B)) ^ 0xE1815614);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 144) = a22;
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261
                         * ((((v28 - 144) | 0x508DB2BF) - (v28 - 144) + ((v28 - 144) & 0xAF724D40)) ^ 0x5A79BC90);
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  *(_DWORD *)(v28 - 120) = v24
                         + 927
                         + 535753261 * ((~((v28 - 144) | 0x65709993) + ((v28 - 144) & 0x65709993)) ^ 0x907B6843);
  *(void *)(v28 - 136) = a24;
  *(void *)(v28 - 128) = a21;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = a22;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x934)))(v28 - 144);
  int v29 = v26 - 584148100;
  int v30 = 1225351577 * ((v28 - 144) ^ 0x239AD816);
  *(_DWORD *)(v28 - 128) = (v29 + 1) ^ v30;
  int v31 = (v24 - 262) ^ v30;
  *(_DWORD *)(v28 - 140) = v31;
  *(void *)(v28 - 136) = v25;
  (*(void (**)(uint64_t))(v27 + 8 * (v24 ^ 0x9CF)))(v28 - 144);
  BOOL v32 = *(_DWORD *)(v28 - 144) == -1199810916;
  *(_DWORD *)(v28 - 140) = v31;
  *(_DWORD *)(v28 - 128) = v29 ^ v30;
  *(void *)(v28 - 136) = v25;
  uint64_t v33 = (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 ^ 0x9CF)))(v28 - 144);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * (v24 | (8 * v32))))(v33);
}

void sub_1B0294E94(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

void sub_1B0294F1C(int a1@<W8>, int a2, uint64_t a3, int a4)
{
  unsigned int v8 = (v6 + 169 * (v7 & 0x103A7F7D ^ 0x13A) + 1013503503) & 0xDF3729C2;
  int v9 = 1178560073 * ((&a2 - 575777417 - 2 * ((unint64_t)&a2 & 0xDDAE5577)) ^ 0xEFB85537);
  a3 = v5;
  a2 = (v7 & 0x103A7F7D) - v9 + 844;
  a4 = a1 + v9 - v8 - 1915747784;
  (*(void (**)(int *))(v4 + 8 * (v7 & 0x103A7F7D ^ 0x950u)))(&a2);
  JUMPOUT(0x1B0294FC8);
}

uint64_t sub_1B0294FF0@<X0>(int a1@<W3>, int a2@<W8>)
{
  if ((a2 - 845113408) <= 0x18 && ((a1 << (a2 - 64)) & 0x1000581) != 0) {
    return sub_1B029505C();
  }
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((107 * ((*(_DWORD *)(v2 + v4 * (uint64_t)v3 + 40) & 8) == LODWORD(STACK[0x3FC]) - 1360)) ^ (LODWORD(STACK[0x3FC]) + 603))))();
}

uint64_t sub_1B029505C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((181
                                * (((((v0 - 1355) | 0x50A) ^ 0x50E) & *(_DWORD *)(v1 + v3 * (uint64_t)v2 + 40)) != 0)) ^ (v0 - 218))))();
}

void sub_1B029509C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v26 = 535753261 * ((2 * ((v25 - 144) & 0x7D2F2A0) - (v25 - 144) + 2016218462) ^ 0x72D90371);
  *(_DWORD *)(v25 - 144) = v26 + v22 + 682;
  *(void *)(v25 - 120) = a9;
  *(void *)(v25 - 136) = v24;
  *(_DWORD *)(v25 - 128) = a22 - v26 + ((v22 + 357) ^ 0x46A901D2);
  (*(void (**)(uint64_t))(v23 + 8 * (v22 ^ 0xC71u)))(v25 - 144);
  JUMPOUT(0x1B0295128);
}

uint64_t sub_1B02951C8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((352
                                * (((((v1 ^ 0x5DA) + 1964334134) & 0x8AEAA1B2 ^ ((v1 ^ 0x5DA) - 678232906) & 0x286D07BF ^ 0x795) & v0) == 0)) ^ v1 ^ 0x5DA)))();
}

uint64_t sub_1B0295234@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((833 * (a2 + 1 == v4 + 4)) ^ a1)))(v2);
}

uint64_t sub_1B0295320()
{
  unsigned int v6 = *(unsigned __int8 *)(v4 + 7) + (v3 ^ 0xFFFFFEE0);
  return (*(uint64_t (**)(void))(v5 + 8 * ((336 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1B029535C()
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((15 * (v0 - 1381440370 >= ((v1 - 1735152737) & 0x676C55AB ^ 0x1B2u))) ^ (v1 + 1094))))(229);
}

uint64_t sub_1B02953C4()
{
  int v2 = v0 - 1149;
  int v3 = 617 * ((v0 - 1149) ^ 0x24E);
  uint64_t v4 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 493)))(16);
  uint64_t v5 = (unsigned char **)*(&off_1F08CDB40 + v2 - 584);
  *(unsigned char **)((char *)v5 - 4) = (unsigned char *)v4;
  uint64_t v5 = (unsigned char **)((char *)v5 - 4);
  (*(void (**)(void))(v1 + 8 * (v2 ^ 0xAED)))();
  unsigned int v6 = (void *)(*(uint64_t (**)(uint64_t))(v1 + 8 * (v2 ^ 0xAFA)))(8);
  uint64_t v7 = (uint64_t)*(&off_1F08CDB40 + (v2 ^ 0x2C5));
  *(void *)(v7 - 4) = v6;
  void *v6 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v8 = (uint64_t)*(&off_1F08CDB40 + v2 - 457);
  *(_DWORD *)(v8 - 8) = 0;
  *(_DWORD *)*(&off_1F08CDB40 + (v2 ^ 0x21E)) = 0;
  int v9 = *v5;
  uint64_t v10 = *(unsigned char **)(v7 - 4);
  v10[6] = 26;
  *int v9 = -77;
  _DWORD v10[4] = -34;
  uint64_t v11 = *(&off_1F08CDB40 + (v2 ^ 0x2D2));
  void v11[2] = 25;
  v11[9] = 54;
  *(unsigned char *)(v8 + 17) = 68;
  v11[14] = -18;
  v9[4] = 73;
  unsigned char v11[4] = 71;
  *(unsigned char *)(v8 + 16) = 83;
  *(unsigned char *)*(&off_1F08CDB40 + (v2 ^ 0x2FE)) = -113;
  v9[1] = 80;
  *(unsigned char *)*(&off_1F08CDB40 + v2 - 556) = 88;
  v11[13] = 121;
  *(unsigned char *)*(&off_1F08CDB40 + (v2 & 0x3E247C8D)) = 1;
  v9[2] = -44;
  *(unsigned char *)*(&off_1F08CDB40 + v2 - 523) = 51;
  v10[2] = 80;
  v9[6] = -11;
  *(unsigned char *)*(&off_1F08CDB40 + v2 - 403) = 25;
  *(unsigned char *)*(&off_1F08CDB40 + v2 - 432) = 39;
  v9[5] = -22;
  v9[3] = -15;
  v11[8] = 48;
  *(unsigned char *)(v8 + 2) = -52;
  v11[15] = -109;
  *(unsigned char *)*(&off_1F08CDB40 + (v2 ^ 0x270)) = -109;
  v9[13] = 99;
  *(unsigned char *)*(&off_1F08CDB40 + v2 - 568) = 119;
  v10[7] = -80;
  unsigned char *v10 = -122;
  unsigned char v9[8] = 34;
  v11[7] = -47;
  v9[11] = 54;
  *(unsigned char *)(v8 + 3) = 3;
  v10[1] = 73;
  v10[5] = -5;
  *(unsigned char *)(v8 - 12) = 23;
  *(unsigned char *)(v8 + 4) = -36;
  v10[3] = 59;
  uint64_t v12 = *v5;
  v12[10] = 45;
  v12[15] = -87;
  unsigned char *v11 = 114;
  v11[11] = -38;
  *(unsigned char *)(v8 + 13) = -92;
  v11[5] = -113;
  v11[10] = 118;
  *(unsigned char *)(v8 + 15) = 52;
  *(v11 - 4) = -89;
  uint64_t v13 = v11 - 4;
  *(_WORD *)(v8 - 2) = -3774;
  *(unsigned char *)(v8 + 10) = -121;
  *(unsigned char *)(v8 + 8) = 77;
  *(unsigned char *)(v8 + 14) = 113;
  v12[9] = 31;
  v11[16] = 89;
  v11[6] = -90;
  *(unsigned char *)(v8 - 4) = -85;
  v13[2] = 63;
  v11[1] = -113;
  *(unsigned char *)(v8 - 10) = 34;
  v11[12] = 91;
  v12[12] = -86;
  v13[3] = -92;
  v12[7] = -90;
  v12[14] = -33;
  *(unsigned char *)(v8 + 9) = -105;
  *(unsigned char *)(v8 - 9) = -98;
  v11[3] = 118;
  *(unsigned char *)(v8 + 12) = -119;
  *(unsigned char *)(v8 + 18) = 58;
  *(unsigned char *)uint64_t v8 = 73;
  *(unsigned char *)(v8 - 11) = -15;
  v13[1] = 30;
  *(unsigned char *)(v8 + 7) = 120;
  *(unsigned char *)(v8 + 1) = 69;
  *(_WORD *)(v8 + 5) = -4168;
  *(unsigned char *)(v8 - 3) = -105;
  *(unsigned char *)(v8 + 11) = 79;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * v3))(785727788);
}

void sub_1B0295CA0()
{
}

uint64_t sub_1B0295D08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B0295D20(0, a2, a3, a4, a5, a5 & 0xFFFFFFE0);
}

uint64_t sub_1B0295D20@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W5>, int a4@<W6>, uint64_t a5@<X8>)
{
  uint64_t v11 = (a2 + v8 - a1);
  long long v12 = *(_OWORD *)(v7 + v11 - 15);
  long long v13 = *(_OWORD *)(v7 + v11 - 31);
  uint64_t v14 = a5 + v11;
  *(_OWORD *)(v14 - 15) = v12;
  *(_OWORD *)(v14 - 31) = v13;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v9 + a1 == a3) * v10) ^ (v6 + a4 - 1265))))();
}

uint64_t sub_1B0295D68()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1827
                                * (((v1 + ((v2 - 540) | 0x11C) - 287) & (2 * (*(unsigned __int8 *)(v3 + 8) - 11)))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 11) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1B0295DB0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xFDAC9EBF)
                       + 526347645
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xFF7F);
  return 0;
}

void sub_1B0295DE8()
{
}

uint64_t sub_1B0295DF0(uint64_t a1, int a2, int a3, int a4)
{
  uint64_t v8 = ((v4 + 295) ^ (a3 - 585)) + v5;
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(v6 + v8);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 - 1 == a4) * a2) | (v4 - 296))))();
}

uint64_t sub_1B0295E84@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v47 = (*(uint64_t (**)(void, void, uint64_t))(v45 + 8 * ((v43 ^ 0x745u) + 838)))(LODWORD(STACK[0x490]), (a1 + 1), a37);
  int v54 = ((2 * v47) & 0xFBB7FBD6) + (v47 ^ 0x7DDBFDEB);
  int v55 = STACK[0x3FC];
  if (v54 == 2111569387)
  {
    char v57 = (char *)&STACK[0x670] + v44 + ((16 * v55) ^ 0xD324A27F925647D3);
    STACK[0x5E0] = (unint64_t)v57;
    STACK[0x3C8] = (unint64_t)(v57 + 228);
    LODWORD(STACK[0x454]) = 713989200;
    STACK[0x468] = v44 + (v55 - 70) - 1482;
    STACK[0x4B0] = 0;
    LODWORD(STACK[0x4F4]) = 1284426096;
    STACK[0x3D0] = (unint64_t)v57;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((v55 - 230) ^ (16 * (v57 == (char *)-248)))))(v47, v48, 1373504863, v49, v50, v51, v52, v53);
  }
  else if (v54 == -1914962450)
  {
    LODWORD(STACK[0x5CC]) = 1373504958;
    return (*(uint64_t (**)(void))(v45
                                + 8
                                * (((STACK[0x580] != 0) * (((LODWORD(STACK[0x3FC]) - 1267) ^ 0x6D2) - 1469)) ^ (LODWORD(STACK[0x3FC]) + 527))))();
  }
  else
  {
    int v58 = STACK[0x3FC];
    int v59 = 1374699841 * ((((2 * (v46 - 192)) | 0x559CCA9A) - (v46 - 192) - 718169421) ^ 0x473A7D44);
    *(_DWORD *)(v46 - 176) = (v54 - ((2 * v54 + 71828522) & 0x5C42BD0C) + 809853083) ^ v59;
    *(_DWORD *)(v46 - 192) = (v58 - 627) ^ v59;
    *(void *)(v46 - 184) = a43;
    uint64_t v60 = (*(uint64_t (**)(uint64_t))(v45 + 8 * a35))(v46 - 192);
    return (*(uint64_t (**)(uint64_t))(v45
                                              + 8
                                              * (((STACK[0x580] != 0) * (((v58 - 1267) ^ 0x6D2) - 1469)) ^ (v58 + 527))))(v60);
  }
}

uint64_t sub_1B02960D0(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a1 - 747) | 0x24) ^ 0x63) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1B0296100@<X0>(int a1@<W3>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W7>, int a6@<W8>)
{
  *(_DWORD *)(*v8 + 4 * (a6 + v7 + 415)) = a5;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((((a2 + 829 + a1) & a3) + 1051) ^ a4) * (v9 == 0)) ^ (a2 + 829))))();
}

void sub_1B0296158()
{
}

uint64_t sub_1B0296160@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v7 = (v3 - 1063364190) & 0x3F61A7BF;
  uint64_t v8 = *(void *)(v5 - 0x7761D79CB8DF4D13);
  int v9 = *(unsigned __int8 *)(v8 + (v4 - 277809776)) ^ 0xE5;
  int v10 = ((*(unsigned __int8 *)(v8 + ((551 * (v7 ^ 0x725)) ^ 0xEF70F3F8) + v4) ^ 0xE5) << 24) | ((*(unsigned __int8 *)(v8 + v4 - 277811378 + ((v7 - 1115662435) & 0x427FA77Cu)) ^ 0xE5) << 16) | ((*(unsigned __int8 *)(v8 + (v4 - 277809777)) ^ 0xE5) << 8) | v9;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((13
                                * (((v10 + v2 - 2 * (v10 & 0x2E215E87 ^ v9 & 1)) & 0xFFFFFF ^ 0x215E86)
                                 - (*(_DWORD *)(a1 + 32) ^ v6) != -2106532186)) ^ v7)))();
}

void sub_1B029626C()
{
}

void sub_1B0296274()
{
  STACK[0x538] = STACK[0x4B8];
  JUMPOUT(0x1B0274EA8);
}

uint64_t sub_1B0296290()
{
  STACK[0x3A0] = STACK[0x570];
  LODWORD(STACK[0x528]) = -1800160278;
  return sub_1B026CA1C();
}

uint64_t sub_1B02962CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  a17 = v19 - 460628867 * (((&a15 | 0xB65DA74D) + (~&a15 | 0x49A258B2)) ^ 0xFACB2531) - 1109;
  a15 = &STACK[0x2F7E69BD89C7115];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v19 + 528)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((3669
                                              * (a16 == ((v19 + 1501648981) & 0xA67EA779)
                                                      + ((v19 - v17 - 1578) ^ 0x357246FF))) ^ v19)))(v20);
}

void sub_1B029639C()
{
}

uint64_t sub_1B02963E0@<X0>(unsigned int a1@<W8>, uint64_t a2)
{
  *(unsigned char *)(a2 + (v3 - 2122148335)) = *(unsigned char *)(v5 + (v3 - 2122148335))
                                                   - ((2 * *(unsigned char *)(v5 + (v3 - 2122148335))) & 0xCA)
                                                   - 27;
  unsigned int v7 = (v6 ^ 0xDB4C8125) + v3;
  int v8 = (v2 < a1) ^ (v7 < a1);
  BOOL v9 = v7 < v2;
  if (v8) {
    BOOL v9 = v2 < a1;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((v9 | (4 * v9)) ^ v6)))();
}

uint64_t sub_1B0296454()
{
  BOOL v4 = v0 + 1343072158 < (int)(v2 + 1837686100);
  if (v2 > 0x127722AB != v0 + 1343072158 < (v1 ^ 0x356) - 309798465) {
    BOOL v4 = v2 > 0x127722AB;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (4 * v4)) ^ v1)))();
}

uint64_t sub_1B02964DC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ ((a1 - 1448) | 0x401) ^ 0x479u) < 8) * (((a1 - 1264) | 0x200) - 759)) ^ a1)))();
}

uint64_t sub_1B02965BC(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((31
                                * ((((v4 - a3) ^ 0x6E48B22F) & (2 * (*(unsigned __int8 *)(a2 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(a2 + 3) - 137) ^ v5) == v5)) ^ v4)))();
}

uint64_t sub_1B0296604@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  int v8 = STACK[0x334];
  uint64_t v9 = (v3 + v4);
  int v10 = (-88 * (LODWORD(STACK[0x334]) ^ 0x4A) - 107) ^ *(unsigned __int8 *)(v2 + v9);
  int v11 = ((*(unsigned __int8 *)(v2 + (v9 + 2)) ^ v5) << 16) | ((*(unsigned __int8 *)(v2
                                                                                                + (v9 + 3)) ^ v5) << 24) | v10 | ((*(unsigned __int8 *)(v2 + (v9 + 1)) ^ v5) << 8);
  *(_DWORD *)(a2 + v9) = v11 + v7 - 2 * (v11 & (a1 + 17) ^ v10 & 0x11111111);
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((2 * ((v3 + 4 + v4) > 0x3F)) | (4 * ((v3 + 4 + v4) > 0x3F))) ^ v8)))();
}

void sub_1B02966AC()
{
  *(_DWORD *)(v2 - 192) = 1225351577
                        * ((2 * (((v2 - 192) ^ 0xDBA188F) & 0x4A25CCB4) - ((v2 - 192) ^ 0xDBA188F) - 1243991221) ^ 0x9BFAF3D2)
                        + 426522076
                        + v0
                        + 830;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 ^ 0x83F)))(v2 - 192);
  *(unsigned char *)(v2 - 160) = (51 * ((((2 * ((v2 + 64) ^ 0x5C)) | 0xB0) - ((v2 + 64) ^ 0x5C) + 40) ^ 0x53)) ^ 0x55;
  *(void *)(v2 - 184) = STACK[0x260];
  *(void *)(v2 - 168) = STACK[0x258];
  *(_DWORD *)(v2 - 192) = (v0 + 1112) ^ (1224239923
                                       * ((((2 * ((v2 - 192) ^ 0x62BB5C)) | 0x6FC4CFB0)
                                         - ((v2 - 192) ^ 0x62BB5C)
                                         + 1209899048) ^ 0x45332153));
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 2063)))(v2 - 192);
  STACK[0x338] = 0;
  LODWORD(STACK[0x2D0]) = 1746339940;
  JUMPOUT(0x1B02967B0);
}

void sub_1B02967FC()
{
}

uint64_t sub_1B029680C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * ((((a1 + 671) ^ 0x49 ^ (5 * ((a1 + 1237) ^ 0x76C)))
                                              * (*(_DWORD *)(v17 - 116) == *(_DWORD *)(v17 - 120))) ^ (a1 + 1237))))(a16);
}

uint64_t sub_1B029685C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 & 2) != ((v1 + 214) ^ 0x626)) * (((v1 - 698) ^ 0x658) - 1175)) ^ (v1 - 698))))();
}

uint64_t sub_1B0296898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v26 + a5) = 0xE5E5E5E5E5E5E5E5;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * ((896
                                              * ((((v27 + 43) ^ ((((v27 - 128) - 505) & v25) == 8)) & 1) == 0)) ^ (v27 - 128))))(8);
}

uint64_t sub_1B0296900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (((((v36 - 414) | 0x21) ^ 0x78A) * ((a9 + 501) < 4)) ^ v36)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_1B029693C(int a1@<W8>)
{
  (*(void (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v3 + 8 * (v1 + 1228)))(*v2, (a1 + 1), LODWORD(STACK[0x228]), v2[13] - 184073435, &STACK[0x660], STACK[0x338], LODWORD(STACK[0x2D0]) - 1746341300 + (v1 ^ 0x66Fu), &STACK[0x650]);
  JUMPOUT(0x1B026AA10);
}

uint64_t sub_1B02969D8@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a3 + a2 + a1 + 1285) + a5;
  uint64_t v11 = ((_BYTE)a3 + (_BYTE)a2 + (_BYTE)a1 + 5) & 0xF;
  unint64_t v12 = v11 + v7 - v10;
  unint64_t v13 = (v11 | v8) - v10;
  unint64_t v14 = (v11 | v6) - v10;
  BOOL v18 = (unint64_t)(v5 - a5) < 0x10 || v12 < 0x10 || v13 < 0x10 || v14 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((((2 * a4) ^ 0x3E6 ^ (a4 + 276)) * v18) | a4)))();
}

uint64_t sub_1B0296A4C(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int8x16_t a5, int32x4_t a6, int8x16_t a7, int8x16_t a8)
{
  a8.i64[0] = *(void *)(v13 + 4);
  a8.i32[2] = *(_DWORD *)(v13 + 12);
  int8x16_t v15 = vextq_s8(a1, a8, 0xCuLL);
  int8x16_t v16 = a8;
  v16.i32[3] = *(_DWORD *)(v13 + 16);
  int32x4_t v17 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v16, a3), vandq_s8(v15, a2)), 1uLL), a4);
  v18.i32[0] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 4) & 1));
  v18.i32[1] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 8) & 1));
  v18.i32[2] = *(_DWORD *)(v10 + 4 * (*(_DWORD *)(v13 + 12) & v11));
  v18.i32[3] = *(_DWORD *)(v10 + 4 * (v16.i8[12] & 1));
  *(int8x16_t *)uint64_t v13 = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v13 - 908), v18), a7), (int8x16_t)vaddq_s32(vsubq_s32(v17, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v17, v17), a5)), a6));
  return (*(uint64_t (**)(void))(v14 + 8 * (((v9 == 4) * v12) ^ v8)))();
}

uint64_t sub_1B0296A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v25 - 104) = (v23 + 387) ^ (1734042137
                                        * ((((v25 - 120) | 0x4DF9F6BF) + (~(v25 - 120) | 0xB2060940)) ^ 0x113735F3));
  *(void *)(v25 - 120) = a23;
  *(void *)(v25 - 112) = a19;
  (*(void (**)(uint64_t))(v24 + 8 * (v23 + 1054)))(v25 - 120);
  *(_DWORD *)(v25 - 120) = (v23 + 99) ^ (1374699841
                                       * (((v25 - 120) & 0x5473D2EE | ~((v25 - 120) | 0x5473D2EE)) ^ 0xC6783518));
  *(void *)(v25 - 112) = a21;
  *(void *)(v25 - 104) = a23;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 + 1128)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (int)(((*(_DWORD *)(v25 - 116) > 0x26812D29u)
                                                   * ((((v23 - 709) | 0xAC) ^ 0xFFFFFD00) + (v23 ^ 0xB5))) | v23)))(v26);
}

uint64_t sub_1B0296B88(__n128 a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(v8 + 1424) = 568327263;
  *(_DWORD *)(v8 + 1428) = 604952942;
  *(void *)(v8 + 1432) = v6;
  *(void *)(v8 + 1440) = v6;
  *(_DWORD *)(v8 + 1448) = v7;
  *(__n128 *)(v8 + 1452) = a1;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v5 - 1032) | 0x400) ^ (8 * (a5 & ~(((v5 - 1032) | 0x400) - 1143))))))();
}

void sub_1B0296BE8()
{
  int v2 = 1607986108 - v0;
  if (*v1 + 775283396 >= 0) {
    int v2 = v0 + 1607986366;
  }
  _DWORD *v1 = *v1 - 1607986237 + v2;
  JUMPOUT(0x1B0296C78);
}

uint64_t sub_1B0296CD4(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v7 + v5) = *(void *)(v4 + v5);
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 0) * v3) ^ a3)))();
}

uint64_t sub_1B0296D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return sub_1B025762C(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, a21);
}

uint64_t sub_1B0296D24@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v2 + 4 * (a1 + v4 + 1603)) == v1)
                                * (((v3 - 1058) | 4) ^ 0x3E9)) ^ (v3 - 1054))))();
}

uint64_t sub_1B0296D68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + v10 - 1719 + (v10 ^ (v9 - 1667)) + 1857602100) * (a9 != 0)) ^ v10)))();
}

uint64_t sub_1B0296DAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,unsigned int a27)
{
  return (*(uint64_t (**)(uint64_t, void))(v29 + 8 * v28))(a1, (v30 + 536869763) & a27);
}

void sub_1B0296DC0(uint64_t a1)
{
  uint64_t v16 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  int v2 = *(_DWORD *)(a1 + 24) - 1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D);
  uint64_t v3 = *(void *)(a1 + 56);
  uint64_t v4 = *(void *)(a1 + 40);
  int v5 = *(_DWORD *)(a1 + 48) ^ (1759421093 * ((a1 - 2 * (a1 & 0xF4FD5159) - 184725159) ^ 0x4780E10D));
  unsigned int v6 = 1224239923 * ((&v8 & 0x29B9FB8 | ~(&v8 | 0x29B9FB8)) ^ 0xFD79D90);
  uint64_t v15 = *(void *)(a1 + 8);
  uint64_t v8 = v4;
  int v14 = v2 - v6 + 617881708;
  int v10 = v6 ^ (v1 + 368399892);
  unsigned int v11 = v5 - v6 - ((2 * v5 + 775612002) & 0xEA303576) + 204836332;
  uint64_t v12 = v4;
  uint64_t v13 = v3;
  uint64_t v7 = (char *)*(&off_1F08CDB40 + v1 - 133) - 4;
  (*(void (**)(uint64_t *))&v7[8 * (v1 ^ 0x9BF)])(&v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0296F4C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 - 584148100 < (v0 + 2147482715)) * (3 * (v0 ^ 0x34C) + 1109)) ^ v0)))();
}

uint64_t sub_1B0296FA4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v23 = 3804331 * ((-1066449781 - ((v22 - 136) | 0xC06F448B) + ((v22 - 136) | 0x3F90BB74)) ^ 0xC50E4822);
  int v26 = v20 - 1593;
  *(_DWORD *)(v22 - 120) = v23 + v20 - 1593 + 717;
  *(_DWORD *)(v22 - 136) = v23 + a1 - a14 + 1113871666;
  *(_DWORD *)(v22 - 132) = v23
                         + v20
                         - 1543
                         + ((((383 * ((v20 - 1593) ^ 0x1A)) ^ 0xEBA42E7E) + a1) & 0xFFFFFFF0)
                         + 540038096;
  *(void *)(v22 - 128) = a20;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v21 + 8 * ((v20 - 1593) ^ 0x898)))(v22 - 136);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((113 * (*a15 != -1373544826)) ^ v26)))(v24);
}

uint64_t sub_1B02970B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6, unsigned int a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 8 * (((*(_DWORD *)(*v8 + 4 * a7) != a5) * (8 * (a6 ^ a4) - 622)) ^ a6)))();
}

void sub_1B02970EC()
{
}

uint64_t sub_1B0297104(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((a4 & ~((v7 - 1204) ^ (*(_DWORD *)(v4 + 48 * v6 + 32) == v5))) * (v7 ^ 0x62E)) | v7)))();
}

uint64_t sub_1B0297140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  *(void *)(*(void *)(v9 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(v9 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ a8;
}

uint64_t sub_1B0297198()
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v0 = (unint64_t *)*(&off_1F08CDB40
                           + ((-19 * (dword_1E9B30960 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04C5E00[byte_1B04C0680[(-19 * (dword_1E9B30960 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0x35])
                           - 71);
  int v1 = (unsigned __int8 *)off_1F08CDCC0;
  uint64_t v2 = (char *)off_1F08CDDB8 - 4;
  uint64_t v3 = *(&off_1F08CDB40
       + (*((unsigned char *)off_1F08CDDB8
                           + (*((unsigned __int8 *)off_1F08CDCC0
                              + (-19 * ((qword_1E9B2FDF8 + *v0) ^ 0xED))) ^ 0xD1u)
                           - 4) ^ (-19 * ((qword_1E9B2FDF8 + *v0) ^ 0xED)))
       - 145);
  unint64_t v4 = (*v3 - *v0) ^ (unint64_t)&v12;
  unint64_t *v0 = (1469428717 * v4) ^ 0xEC43BA4126E9F5EDLL;
  void *v3 = 1469428717 * (v4 ^ 0xEC43BA4126E9F5EDLL);
  unsigned int v14 = 1734 - 535753261 * (&v13 ^ 0xAF40E2F);
  uint64_t v13 = (char *)*(&off_1F08CDB40
                + ((-19 * ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0xED)) ^ v2[v1[(-19 * ((*(_DWORD *)v3 - *(_DWORD *)v0) ^ 0xED))] ^ 0x1E])
                + 119)
      - 4;
  int v5 = (char *)off_1F08CDFA0 - 12;
  int v6 = off_1F08CDD38;
  int v7 = (char *)*(&off_1F08CDB40
               + ((-19 * (dword_1E9B30960 ^ 0xED ^ qword_1E9B2FDF8)) ^ byte_1B04BD720[byte_1B04C99F0[(-19 * (dword_1E9B30960 ^ 0xED ^ qword_1E9B2FDF8))] ^ 0xC3])
               - 88)
     - 4;
  (*(void (**)(char **))&v7[8
                                     * (*((unsigned char *)off_1F08CDD38
                                                         + (*((unsigned __int8 *)off_1F08CDFA0
                                                            + (-19
                                                                              * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v3))
                                                            - 12) ^ 0xAFu)) ^ (-19
                                                                             * (*(_DWORD *)v0 ^ 0xED ^ *(_DWORD *)v3)))
                                     + 16400])(&v13);
  int v8 = (char *)off_1F08CDD90 - 4;
  uint64_t v9 = off_1F08CDFB8;
  uint64_t v13 = (char *)*(&off_1F08CDB40
                + (*((unsigned char *)off_1F08CDFB8
                                    + (*((unsigned __int8 *)off_1F08CDD90
                                       + (-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED))
                                       - 4) ^ 0x35u)) ^ (-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED)))
                - 34)
      - 4;
  unsigned int v14 = 1734 - 535753261 * (((&v13 | 0x307CB9A4) - (&v13 & 0x307CB9A4)) ^ 0x3A88B78B);
  (*(void (**)(char **))&v7[8
                                     * ((-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED)) ^ v6[v5[(-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED))] ^ 0xA3])
                                     + 17056])(&v13);
  unsigned int v10 = 3804331 * ((~&v13 & 0x2C427A4A | &v13 & 0xD3BD85B5) ^ 0xD6DC891C);
  BYTE4(v13) = 66 - v10;
  LODWORD(v13) = v10 ^ 0x4B4;
  return (*(uint64_t (**)(char **))&v7[8
                                               * ((-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED)) ^ v9[v8[(-19 * ((*(_DWORD *)v3 + *(_DWORD *)v0) ^ 0xED))] ^ 0xA3])
                                               + 16400])(&v13);
}

void sub_1B0297540(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v2 = 1374699841 * (((a1 | 0xEA022A98) - (a1 & 0xEA022A98)) ^ 0x87F63291);
  int v3 = *(_DWORD *)(a1 + 40) + v2;
  unsigned int v5 = v3 + 460628867 * ((2 * (&v5 & 0x5CCA69C) - &v5 - 97298078) ^ 0xB6A5DB1F) - 231789056;
  unint64_t v4 = (char *)*(&off_1F08CDB40 + v3 - 114) - 4;
  (*(void (**)(unsigned int *))&v4[8 * v3 + 15520])(&v5);
  __asm { BRAA            X2, X17 }
}

uint64_t sub_1B02976D8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((37 * (v2 ^ 0x15D)) ^ 0x84) * (v0 == v1)) ^ v2)))();
}

void sub_1B0297720()
{
}

void sub_1B029772C()
{
  uint64_t v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1B0297790);
}

uint64_t sub_1B0297838@<X0>(uint64_t a1@<X8>)
{
  return sub_1B02978A8(v1 - 0x67843F9A1244BAC3, a1 - 0x67843F9A1244BAC3, 0x357FADEEBDF6BAF7, 0x17BED75EELL, 0xCFFFFFFFFFDBDFEFLL, 670);
}

uint64_t sub_1B02978A8(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v18 = 4 * (v16 + v13);
  int v19 = v6 + v8 + (*(_DWORD *)(*a1 + v18) ^ (v14 + v7 - 506));
  *(_DWORD *)(*a2 + v18) = v19 + v14 - (v17 & (2 * v19));
  int v20 = v9 + v16 + 507;
  BOOL v22 = v20 > v10 || v20 < v11;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v22 * a6) ^ v12)))();
}

uint64_t sub_1B029791C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(v0 + 4 * (v2 + v5 - 1)) != v3) * ((v1 ^ 0x1D) - 446)) ^ v1)))();
}

uint64_t sub_1B0297954@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8
                                   * ((114 * (*(unsigned __int8 *)(v2 + (a1 + v3 - 1)) == 229)) ^ a2)))();
}

uint64_t sub_1B029799C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((v1 ^ 0x23A ^ (82 * (v1 ^ 0x41A) + 1147))
                                * (*(_DWORD *)(v2 - 0x7761D79CB8DF4CFBLL) == -1373544826)) ^ v1)))();
}

uint64_t sub_1B02979F8(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (int)(((v3 < ((29 * ((4 * (a3 ^ 0x35D)) ^ 0x453)) ^ 0x11Fu))
                                                  * ((4 * (a3 ^ 0x35D) + 1455809316) & 0xA93A19FB ^ 0x14D)) ^ (4 * (a3 ^ 0x35D)))))(0);
}

void sub_1B0297A5C()
{
}

void sub_1B0297A78()
{
}

uint64_t sub_1B0297BD4()
{
  return sub_1B0297BDC();
}

uint64_t sub_1B0297BDC()
{
  int v6 = v0 - 336609732;
  int v7 = 3804331 * ((~(v2 | 0x4BF46FA) + (v2 & 0x4BF46FA)) ^ 0x1DE4A53);
  *(void *)(v5 - 184) = v3;
  *(_DWORD *)(v5 - 192) = v7 + v1 + 45;
  *(_DWORD *)(v5 - 188) = v6 ^ v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (v1 ^ 0xD36)))(v5 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x4C0])(v8);
}

uint64_t sub_1B0297C60()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7761D79CB8DF4D03)
     - ((((v0 - 988) ^ 0xDEE1E934) + 2 * *(_DWORD *)(v1 - 0x7761D79CB8DF4D03)) & 0xF12F46B6)
     - 402089752;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((91 * (((2 * v3) & 0xDB777F3E ^ 0xD1274636) + (v3 ^ 0x952C1CC4) - 2100224 == 1838920607)) ^ v0)))();
}

void sub_1B0297D9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  int v29 = v24 ^ 0x6CC;
  *(void *)(v28 - 128) = v25;
  *(_DWORD *)(v28 - 120) = v29
                         + 535753261 * ((((v28 - 144) | 0x1A4A4193) - ((v28 - 144) & 0x1A4A4193)) ^ 0x10BE4FBC)
                         + 369;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = v27;
  *(void *)(v28 - 136) = a24;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 + 1214)))(v28 - 144);
  *(_DWORD *)(v28 - 104) = (v29 + 1007) ^ (1759421093
                                         * ((2 * ((v28 - 144) & 0x52F3DA10) - (v28 - 144) - 1391712791) ^ 0x1E7195BD));
  *(void *)(v28 - 120) = a24;
  *(void *)(v28 - 112) = a24;
  *(void *)(v28 - 144) = a21;
  *(void *)(v28 - 136) = a17;
  *(void *)(v28 - 128) = v27;
  (*(void (**)(uint64_t))(v26 + 8 * (v29 ^ 0xBE9)))(v28 - 144);
  JUMPOUT(0x1B025638CLL);
}

unsigned char *sub_1B0297E8C(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1B0297F78()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1228
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0 + ((v2 - 260) | 4) - 287)) ^ v2)))();
}

uint64_t sub_1B0297FD0()
{
  LODWORD(STACK[0x2D0]) = STACK[0x4A0];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((30
                                * (((v0 - 1102148613 < ((((v1 + 425) ^ 0x11A) - 659) ^ 0x6Du)) ^ (37 * ((v1 - 87) ^ 0x1B))) & 1)) ^ (v1 + 425) ^ 0x11A)))();
}

uint64_t sub_1B0298040@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if (a2) {
    BOOL v8 = a6 == v6;
  }
  else {
    BOOL v8 = 1;
  }
  int v10 = !v8 && a3 != 0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * (((11 * (a1 ^ 0x7BF) - 287262792) & 0x111F4699) - 1530)) ^ a1)))();
}

uint64_t sub_1B02980A8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + (v2 ^ (v0 - 1659) ^ (*(unsigned __int8 *)(v3 + 1) - 134)) == v0)
                                * (v2 - 1648)) ^ (v2 - 1289))))();
}

uint64_t sub_1B02980F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, unsigned int a7, unint64_t a8)
{
  *(unsigned char *)(a1 + (v12 + v14)) = *(unsigned char *)(v8 + (((_BYTE)v12 + (_BYTE)v14) & 0xF)) ^ (*(unsigned char *)(v15 + (v12 + v14)) - 108) ^ *(unsigned char *)(v10 + (((_BYTE)v12 + (_BYTE)v14) & 0xF)) ^ (((v12 + v14) & 0xF) * v13) ^ *(unsigned char *)(v9 + (((_BYTE)v12 + (_BYTE)v14) & 0xF) + ((v11 + a6) & a7 ^ a8));
  return (*(uint64_t (**)(void))(v16 + 8 * ((((v12 + 1 + v14) > 0x14F) * a5) ^ v11)))();
}

void sub_1B0298158()
{
}

uint64_t sub_1B0298164@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((118
                                * (a1 == ((v1 - 201591976) & 0x5CEC6F12)
                                       + ((v1 - v3 - 1055) ^ 0xFFFFFFFFFFFFFFE0))) ^ v1)))();
}

uint64_t sub_1B02981AC@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(v1 + (v6 + v3)) = *(unsigned char *)(a1 + (v6 + v3));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 != v2) * v5) ^ v4)))();
}

void *sub_1B0298234(void *result)
{
  *uint64_t result = ++qword_1E9B31BF8;
  return result;
}

uint64_t sub_1B0298250(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, void *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  uint64_t v51 = *MEMORY[0x1E4F143B8];
  int v30 = 1;
  uint64_t v31 = a4;
  int v32 = 16777472;
  int v33 = a5;
  uint64_t v34 = *MEMORY[0x1E4F14068];
  int v17 = *a3;
  int v35 = a2;
  int v36 = v17;
  int v37 = a5;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  uint64_t v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v19)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            int v21 = v33;
            if (v33 == v47)
            {
              uint64_t v20 = 0;
              int v22 = v34;
              *a3 = v38;
              long long v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              long long v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              long long v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              long long v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              int v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port) {
              uint64_t v20 = 4294966996;
            }
            else {
              uint64_t v20 = HIDWORD(v31);
            }
          }
        }
        else
        {
          uint64_t v20 = 4294966996;
        }
      }
      else
      {
        uint64_t v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_1B02984AC(mach_port_t a1, unsigned int a2, long long *a3)
{
  uint64_t v23 = *MEMORY[0x1E4F143B8];
  long long v4 = a3[5];
  long long v19 = a3[4];
  long long v20 = v4;
  long long v5 = a3[7];
  long long v21 = a3[6];
  long long v22 = v5;
  long long v6 = a3[1];
  long long v15 = *a3;
  long long v16 = v6;
  long long v7 = a3[3];
  long long v17 = a3[2];
  uint64_t v13 = *MEMORY[0x1E4F14068];
  unsigned int v14 = a2;
  long long v18 = v7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  uint64_t v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    uint64_t v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    uint64_t v10 = 4294966995;
    goto LABEL_17;
  }
  uint64_t v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0) {
    goto LABEL_17;
  }
  if (msg.msgh_size != 36) {
    goto LABEL_17;
  }
  if (msg.msgh_remote_port) {
    goto LABEL_17;
  }
  uint64_t v10 = v14;
  if (v14) {
    goto LABEL_17;
  }
  return v10;
}

uint64_t sub_1B029863C(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, void *a9, _DWORD *a10)
{
  uint64_t v25 = *MEMORY[0x1E4F143B8];
  int v18 = 1;
  uint64_t v19 = a6;
  int v20 = 16777472;
  int v21 = a7;
  uint64_t v22 = *MEMORY[0x1E4F14068];
  *(_DWORD *)uint64_t v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  int v24 = a7;
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(void *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  uint64_t v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!v13)
    {
      if (msg.msgh_id == 71)
      {
        uint64_t v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          uint64_t v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            int v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              uint64_t v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          uint64_t v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port) {
              uint64_t v14 = 4294966996;
            }
            else {
              uint64_t v14 = HIDWORD(v19);
            }
          }
        }
        else
        {
          uint64_t v14 = 4294966996;
        }
      }
      else
      {
        uint64_t v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_1B029882C(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(void *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x1E4F14B18])
  {
    voucher_mach_msg_set(&msg);
    mach_port_t reply_port = msg.msgh_local_port;
  }
  uint64_t v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  uint64_t v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if (v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      uint64_t v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            uint64_t v12 = v18;
            if (!v18)
            {
              int v15 = v20;
              *a2 = v19;
              *a3 = v15;
              int v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port) {
            BOOL v13 = 1;
          }
          else {
            BOOL v13 = v18 == 0;
          }
          if (v13) {
            uint64_t v12 = 4294966996;
          }
          else {
            uint64_t v12 = v18;
          }
          goto LABEL_23;
        }
      }
      uint64_t v12 = 4294966996;
    }
    else
    {
      uint64_t v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

uint64_t sub_1B02989A8(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 + dword_1E9B30BC0) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 + dword_1E9B30BC0) ^ 0x84))] ^ 0x87])
                + 11);
  uint64_t v2 = *(void *)(v1 - 4);
  int v3 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3940
                                         + (*((unsigned __int8 *)off_1F08D3B88
                                            + (-51 * ((qword_1E9B30C18 + v2) ^ 0x84))
                                            - 8) ^ 0xDu)) ^ (-51 * ((qword_1E9B30C18 + v2) ^ 0x84)))
       + 42);
  unint64_t v4 = (unint64_t)&v6[*v3 - v2];
  *(void *)(v1 - 4) = 1358147533 * (v4 + 0xEB3E64746BB5B7CLL);
  void *v3 = 1358147533 * (v4 ^ 0xF14C19B8B944A484);
  unsigned int v7 = (1374699841 * (&v7 ^ 0x6DF41809)) ^ 0x11B;
  uint64_t v8 = a1;
  LOBYTE(v3) = -51 * ((*(_DWORD *)v3 + *(_DWORD *)(v1 - 4)) ^ 0x84);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08D3590
                                                             + ((-51
                                                                                              * ((qword_1E9B30C18
                                                                                                + dword_1E9B30BC0) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 + dword_1E9B30BC0) ^ 0x84))] ^ 0xC0])
                                                             + 40)
                                                   + 8
                                                   * (*((unsigned char *)off_1F08D37C0
                                                                                     + (*((unsigned __int8 *)off_1F08D3B50
                                                                                        + v3
                                                                                        - 4) ^ 0xADu)) ^ v3)
                                                   + 18892))(&v7);
}

uint64_t sub_1B0298B74(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D39B8 + (*((unsigned __int8 *)off_1F08D3808 + a1 - 8) ^ 0xC0u)
                                            - 8) ^ a1;
}

uint64_t sub_1B0298BA0(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08D3828
         + (*((unsigned char *)off_1F08D38C0 + a2 - 4) ^ a1)
         - 4) ^ a2;
}

uint64_t sub_1B0298BCC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3940 + (*((unsigned __int8 *)off_1F08D3B88 + a1 - 8) ^ 0x23u)) ^ a1;
}

uint64_t sub_1B0298BF8(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08D37C0 + (*((unsigned char *)off_1F08D3B50 + a2 - 4) ^ a1)) ^ a2;
}

uint64_t sub_1B0298C24(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3940 + (*((unsigned __int8 *)off_1F08D3B88 + a1 - 8) ^ 0xDu)) ^ a1;
}

uint64_t sub_1B0298C50(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3678 + (*((unsigned __int8 *)off_1F08D3760 + a1 - 4) ^ 0xCu)) ^ a1;
}

uint64_t sub_1B0298C78(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3678 + (*((unsigned __int8 *)off_1F08D3760 + a1 - 4) ^ 0xA3u)) ^ a1;
}

uint64_t sub_1B0298CA4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3678 + (*((unsigned __int8 *)off_1F08D3760 + a1 - 4) ^ 0x3Bu)) ^ a1;
}

uint64_t sub_1B0298CD0(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 + dword_1E9B309C8) ^ 0x84)) ^ byte_1B04D36C0[byte_1B04CE6A0[(-51 * ((qword_1E9B30C18 + dword_1E9B309C8) ^ 0x84))] ^ 0x97])
                + 39);
  uint64_t v2 = *(void *)(v1 - 4);
  int v3 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3940
                           + (*((unsigned __int8 *)off_1F08D3B88
                              + (-51 * ((qword_1E9B30C18 - v2) ^ 0x84))
                              - 8) ^ 0x8Bu)) ^ (-51 * ((qword_1E9B30C18 - v2) ^ 0x84)))
       - 106);
  unint64_t v4 = (*v3 + v2) ^ (unint64_t)&v6;
  *(void *)(v1 - 4) = 1358147533 * (v4 + 0xEB3E64746BB5B7CLL);
  void *v3 = 1358147533 * (v4 ^ 0xF14C19B8B944A484);
  uint64_t v8 = a1;
  unsigned int v7 = 235795823 * ((2 * (&v7 & 0x715CDE88) - &v7 + 245571957) ^ 0x9A0E682C) + 1193;
  LOBYTE(v3) = -51 * (*(_DWORD *)(v1 - 4) ^ 0x84 ^ *(_DWORD *)v3);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08D3590
                                                             + ((-51
                                                                                * (dword_1E9B309C8 ^ 0x84 ^ qword_1E9B30C18)) ^ byte_1B04CE9A0[byte_1B04D9EA0[(-51 * (dword_1E9B309C8 ^ 0x84 ^ qword_1E9B30C18))] ^ 0x3B])
                                                             - 3)
                                                   + 8
                                                   * (*((unsigned char *)off_1F08D3678
                                                                                     + (*((unsigned __int8 *)off_1F08D3760
                                                                                        + v3
                                                                                        - 4) ^ 0xCu)) ^ v3)
                                                   + 17772))(&v7);
}

uint64_t sub_1B0298EC8(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08D39B8
         + (*((unsigned char *)off_1F08D3808 + a2 - 8) ^ a1)
         - 8) ^ a2;
}

uint64_t sub_1B0298EF4(unsigned int a1)
{
  return (*off_1F08D37E0)[*((unsigned __int8 *)off_1F08D3B98 + a1 - 4) ^ 0x97] ^ a1;
}

uint64_t sub_1B0298F20(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08D3940 + (*((unsigned char *)off_1F08D3B88 + a2 - 8) ^ a1)) ^ a2;
}

uint64_t sub_1B0298F4C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3678 + (*((unsigned __int8 *)off_1F08D3760 + a1 - 4) ^ 0x8Bu)) ^ a1;
}

uint64_t sub_1B0298F78(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D37C0 + (*((unsigned __int8 *)off_1F08D3B50 + a1 - 4) ^ 0xADu)) ^ a1;
}

uint64_t sub_1B0298FA4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3828 + (*((unsigned __int8 *)off_1F08D38C0 + a1 - 4) ^ 0xA4u)
                                            - 4) ^ a1;
}

uint64_t sub_1B0298FD4(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3828 + (*((unsigned __int8 *)off_1F08D38C0 + a1 - 4) ^ 0x72u)
                                            - 4) ^ a1;
}

uint64_t sub_1B0299004(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3940 + (*((unsigned __int8 *)off_1F08D3B88 + a1 - 8) ^ 0xFAu)) ^ a1;
}

uint64_t sub_1B0299030(uint64_t a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v1 = (uint64_t)*(&off_1F08D3590
                + ((-51 * (dword_1E9B30BA8 ^ 0x84 ^ qword_1E9B30C18)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * (dword_1E9B30BA8 ^ 0x84 ^ qword_1E9B30C18))] ^ 0xC0])
                + 41);
  uint64_t v2 = *(void *)(v1 - 4);
  int v3 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3678
                                         + (*((unsigned __int8 *)off_1F08D3760
                                            + (-51 * (v2 ^ qword_1E9B30C18 ^ 0x84))
                                            - 4) ^ 0x3Bu)) ^ (-51 * (v2 ^ qword_1E9B30C18 ^ 0x84)))
       + 2);
  unint64_t v4 = (unint64_t)&v6[*v3 ^ v2];
  *(void *)(v1 - 4) = 1358147533 * (v4 + 0xEB3E64746BB5B7CLL);
  void *v3 = 1358147533 * (v4 ^ 0xF14C19B8B944A484);
  uint64_t v8 = a1;
  unsigned int v7 = 1755732067 * ((2 * (&v7 & 0x6A950D88) - &v7 - 1788153229) ^ 0x4BAC4FA8) + 1229;
  LOBYTE(v3) = -51 * (*(_DWORD *)(v1 - 4) ^ 0x84 ^ *(_DWORD *)v3);
  (*(void (**)(unsigned int *))((char *)*(&off_1F08D3590
                                                   + ((-51
                                                                      * ((qword_1E9B30C18 + dword_1E9B30BA8) ^ 0x84)) ^ byte_1B04CE9A0[byte_1B04D9EA0[(-51 * ((qword_1E9B30C18 + dword_1E9B30BA8) ^ 0x84))] ^ 0xC])
                                                   - 74)
                                         + 8
                                         * (*((unsigned char *)off_1F08D37C0
                                                                           + (*((unsigned __int8 *)off_1F08D3B50
                                                                              + v3
                                                                              - 4) ^ 0xD0u)) ^ v3)
                                         + 18732))(&v7);
  return v9;
}

uint64_t sub_1B0299228(char a1, unsigned int a2)
{
  return (*off_1F08D37E0)[(*((unsigned char *)off_1F08D3B98 + a2 - 4) ^ a1)] ^ a2;
}

uint64_t sub_1B0299254(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3828 + (*((unsigned __int8 *)off_1F08D38C0 + a1 - 4) ^ 0xA5u)
                                            - 4) ^ a1;
}

uint64_t sub_1B0299284(char a1, unsigned int a2)
{
  return *((unsigned __int8 *)off_1F08D3678 + (*((unsigned char *)off_1F08D3760 + a2 - 4) ^ a1)) ^ a2;
}

uint64_t sub_1B02992B0(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D37C0 + (*((unsigned __int8 *)off_1F08D3B50 + a1 - 4) ^ 0xD0u)) ^ a1;
}

uint64_t sub_1B02992DC(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D39B8 + (*((unsigned __int8 *)off_1F08D3808 + a1 - 8) ^ 0x87u)
                                            - 8) ^ a1;
}

uint64_t sub_1B029930C(unsigned int a1)
{
  return *((unsigned __int8 *)off_1F08D3940 + (*((unsigned __int8 *)off_1F08D3B88 + a1 - 8) ^ 0x8Bu)) ^ a1;
}

uint64_t sub_1B0299338(unsigned int a1)
{
  return (*off_1F08D37E0)[*((unsigned __int8 *)off_1F08D3B98 + a1 - 4) ^ 0xCD] ^ a1;
}

void sub_1B0299364(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 + 1374699841 * ((a1 + 1891232920 - 2 * (a1 & 0x70B9EC98)) ^ 0x1D4DF491);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void *)(a1 + 24);
  unint64_t v4 = *(unint64_t **)(a1 + 32);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(unint64_t **)(v3 - 0x296CA2447D59DC4CLL);
  unsigned int v12 = v1 + 1225351577 * ((&v9 & 0x2DCAFBC8 | ~(&v9 | 0x2DCAFBC8)) ^ 0xF1AFDC21) + 167;
  unsigned int v9 = &STACK[0x6155FFFFEB445CE5];
  uint64_t v10 = v6;
  uint64_t v13 = v5;
  uint64_t v14 = v2;
  uint64_t v11 = v3;
  unsigned int v7 = (char *)*(&off_1F08D3590 + v1 - 1265) - 12;
  (*(void (**)(unint64_t **))&v7[8 * (v1 ^ 0xC3D)])(&v9);
  uint64_t v8 = *(unint64_t **)(v3 - 0x296CA2447D59DC54);
  LODWORD(v11) = (535753261
                * ((-2006167131 - (&v9 | 0x886C51A5) + (&v9 | 0x7793AE5A)) ^ 0x7D67A075)) ^ (v1 + 2);
  unsigned int v9 = v8;
  uint64_t v10 = &STACK[0x6155FFFFEB445CD5];
  (*(void (**)(unint64_t **))&v7[8 * (v1 ^ 0xC23)])(&v9);
  LODWORD(v9) = (1178560073 * ((((2 * &v9) | 0x723D27DA) - &v9 + 1189178387) ^ 0x38AEB8F)) ^ (v1 - 1073);
  uint64_t v10 = v4;
  (*(void (**)(unint64_t **))&v7[8 * (v1 ^ 0xC2A)])(&v9);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02995CC@<X0>(int a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, int a6@<W5>, uint64_t a7@<X8>)
{
  int v17 = a1 ^ v12;
  unsigned int v18 = (a6 ^ v12)
      + v7
      + *(_DWORD *)(a3 + 4 * (a7 + v13))
      + ((((a5 - 602) ^ 0x8BB5F8D7 ^ v8 | v17) + v12 - (v15 & (2 * ((a5 - 602) ^ 0x8BB5F8D7 ^ v8 | v17)))) ^ v9)
      + (*(_DWORD *)(v14 + 4 * (*(unsigned char *)(a2 + a7 + v13) - 118)) ^ v10);
  unsigned int v19 = (v12 + v18 - (v15 & (2 * v18))) ^ v12;
  unsigned int v20 = ((v19 << (*(unsigned char *)(a4 + a7 + v13) - 8)) | (v19 >> (8 - *(unsigned char *)(a4 + a7 + v13)))) + v17;
  return (*(uint64_t (**)(void))(v11 + 8 * ((2756 * (a7 + 1 == v16 + 64)) ^ a5)))(v20 + v12 - (v15 & (2 * v20)));
}

void sub_1B02996A0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) ^ (1225351577 * ((-2 - ((a1 | 0x21ABC784) + (~a1 | 0xDE54387B))) ^ 0xFDCEE06D));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B0299778(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  unsigned int v17 = (a14 ^ v15) - ((2 * (a14 ^ v15)) & 0xA8FAF634) - 729973990;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((52
                                * (((2 * v17) & 0xDFDFBD6E ^ (((v14 + 1783629787) & 0x74F) - 1998933989))
                                 + (v17 ^ 0xBB92A5AD)
                                 - 34347012 == 1843644083)) ^ v14)))();
}

uint64_t sub_1B0299818()
{
  return 4294925278;
}

uint64_t sub_1B0299820@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  int v8 = v2 + 1;
  *(unsigned char *)(v5 + (v6 + v8 + 404)) = *(unsigned char *)(v4 + a2 - 1596210264);
  return (*(uint64_t (**)(void))(v7 + 8 * ((1631 * (a1 + v8 + 1 < ((v3 - 803) ^ 0x5Au))) ^ v3)))();
}

uint64_t sub_1B0299828@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>)
{
  int v9 = 1084 * (a3 ^ 0x7A6);
  BOOL v10 = v6 < a2;
  unsigned int v11 = a1 + v7 + (((v9 - 852) | a4) ^ a5);
  int v12 = v10 ^ (v11 < a2);
  BOOL v13 = v6 > v11;
  if (!v12) {
    BOOL v10 = v13;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((v10 * (v9 ^ v5)) ^ v9)))();
}

uint64_t sub_1B0299BB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((229 * (v5 > 0x1F)) ^ a5)))();
}

void sub_1B0299BEC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 3804331 * (((a1 | 0x51A664) - (a1 & 0x51A664)) ^ 0x7E848392);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B0299CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,int a61,int a62,int a63)
{
  return (*(uint64_t (**)(void))(v63 + 8 * ((a61 * (v64 == v65)) ^ a63)))();
}

uint64_t sub_1B0299CF8@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W5>, uint64_t a4@<X8>)
{
  uint64_t v9 = v8 + (a2 ^ (a1 + 471) ^ v6);
  long long v10 = *(_OWORD *)(v5 + v9 - 15);
  long long v11 = *(_OWORD *)(v5 + v9 - 31);
  uint64_t v12 = a4 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v4 + 8 * ((3755 * ((v7 & 0xFFFFFFE0) == 32)) ^ (a3 + a2 + 2130))))();
}

uint64_t sub_1B0299D54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36,__int16 a37,char a38,char a39,int a40)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v40
  }
                                                                         + 8
                                                                         * ((1930
                                                                           * (a40 != ((a8 + a7 + 129) ^ 0x4A15309D))) ^ (a8 + a7 + 129))))(a1, a2, 710669039, a10);
  if (a17 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
  }
                                                                + 8
                                                                * ((138
                                                                  * (a40 == ((a7 + 700051563) & 0x2BEA1CEF) + 1242902547)) ^ (a8 + a7 + 11))))(a1, a10, 710669039);
  unint64_t v42 = ((unint64_t)&a23 ^ 0x37AB75D55BF67BFELL)
      - 0x4801481428201FELL
      + (((void)&a23 << ((a7 + 116) ^ 0x62u)) & 0x6F56EBAAB7ECF7F0);
  a39 = (v42 ^ 0xBA) * (v42 + 17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v40
                                                              + 8
                                                              * ((1462
                                                                * (((a7 + ((a7 - 396) ^ 0x2A5BF2EFu) - 908) ^ 0x2A5BF2EFLL) == 91)) ^ (a7 - 396) ^ 0x2A5BF2EF)))(a1, a2, 710669039);
}

uint64_t sub_1B0299EE8()
{
  BOOL v4 = (((_BYTE)v0 + 1) & 0xF) != (((v1 - 2101) | 0x2A6) ^ 0x2FF) || v0 == ((v1 - 2101) ^ 0xB747FF26);
  return (*(uint64_t (**)(void))(v2 + 8 * ((23 * v4) ^ v1)))();
}

uint64_t sub_1B0299F34@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((60
                                * (((a2 == v5 + v4 + v3 + 150 - 474) | a1) == ((v4 + v3 + 489774755) & 0xE2CEA2BA ^ 0xFFFFFFD2)
                                                                            + ((v4 + v3 - 1323320751) & 0x4EE046FA))) ^ (v4 + v3 + 150))))();
}

uint64_t sub_1B0299F54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a4 + (v6 - v7)) = *(void *)(v8 + (v6 - v7));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a5 + v7 == v9) * a6) ^ a3)))();
}

uint64_t sub_1B0299F80(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  long long v11 = (_DWORD *)STACK[0x2D8];
  _DWORD *v11 = v7 - 1;
  uint64_t v12 = &v11[6 * (v7 - 1895590901)];
  int v13 = v12[2];
  STACK[0x2D0] = *((void *)v12 + 2);
  LODWORD(STACK[0x380]) = v12[6];
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (int)((50
                                     * (((((v6 - 79) & 0xDF) + 76) ^ (*(_DWORD *)(v9
                                                                                                 + (int)(((v6 + 993473201) & 0xC4C8CDDF ^ (a6 - 121)) + v13)
                                                                                                 * (uint64_t)v8
                                                                                                 + 36) == a3 + ((v6 + 993473201) & 0xC4C8CDDF) - 32 - 383)) & 1)) ^ (v6 + 993473201) & 0xC4C8CDDF)))();
}

uint64_t sub_1B029A068@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, char a7@<W8>)
{
  if ((a7 & 2) != 0) {
    int v9 = 1017008127;
  }
  else {
    int v9 = 1017008128;
  }
  LODWORD(STACK[0x564]) = v9;
  LODWORD(STACK[0x2D8]) = 119238241;
  LODWORD(STACK[0x2E0]) = 1432862192;
  STACK[0x260] = 0x9872DDC1BE065C8;
  STACK[0x2C0] = (unint64_t)&STACK[0xDD0];
  STACK[0x2C8] = (unint64_t)&STACK[0xE50];
  STACK[0x2E8] = (unint64_t)&STACK[0x5D0];
  STACK[0x2D0] = (unint64_t)&STACK[0xED0];
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((LODWORD(STACK[0x374]) != ((v7 - 21204154) & 0x1438FFD) + 1904943259) * ((v7 - 823) ^ 0x33)) ^ (v7 + 773))))(a1, a2, a3, a4, a5, a6, 2389998781);
}

uint64_t sub_1B029A0BC@<X0>(unsigned int a1@<W8>)
{
  int v4 = v2 + 3;
  if ((a1 & 0x20) != 0) {
    int v4 = v2;
  }
  LODWORD(STACK[0x474]) = v4;
  unint64_t v5 = STACK[0x2F0];
  if (v1 > -686559941)
  {
    if (v1 == -686559940 || v1 == 1628806430) {
      goto LABEL_11;
    }
    int v6 = -119903311;
  }
  else
  {
    if (v1 == -1670536947 || v1 == -1492856309) {
      goto LABEL_11;
    }
    int v6 = -1205450953;
  }
  if (v1 != v6) {
    JUMPOUT(0x1B029A090);
  }
LABEL_11:
  *(_OWORD *)&STACK[0x1880] = xmmword_1B04DA0C0;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)((((v5 - 883) ^ 0x26) * ((a1 >> 5) & 1)) ^ (v5 + 1233))))();
}

uint64_t sub_1B029A1B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  *(_DWORD *)(v16 - 132) = a13;
  *(_DWORD *)(v16 - 128) = (v13 ^ v14) - a13 + 2021361711;
  *(_DWORD *)(v16 - 124) = (((v13 ^ v14) - 1387238655) ^ 0x8D) - a13;
  *(_DWORD *)(v16 - 136) = (v13 ^ v14) - 1387238655 + a13;
  *(_DWORD *)(v16 - 152) = (((v13 ^ v14) - 1387238655) ^ 0xF0) + a13;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 ^ v14 ^ 0x127)))(v16 - 152);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * *(int *)(v16 - 148)))(v17);
}

uint64_t sub_1B029A284(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(*(void *)(a1 + 96) + 1424) = (((((a3 - 1291253712) & 0x4CF6F5FE) + 537526050) | 0x841068A1) ^ 0xB07D79D9)
                                             + *(_DWORD *)(a2 + 4);
  *(void *)(*(void *)(a1 + 96) + 520) = *(void *)(a2 + 8) + 1;
  return 0;
}

uint64_t sub_1B029A2F4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (535753261 * (((a1 | 0xB23F3C90) - (a1 & 0xB23F3C90)) ^ 0xB8CB32BF));
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + (v1 ^ 0x5FD))
                              + 8
                              * ((244 * (((*(void *)a1 == *(void *)(a1 + 8)) ^ (v1 + 1)) & 1)) ^ v1)
                              - 12))();
}

uint64_t sub_1B029A378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v27 + a3) = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(uint64_t))(v28
                                            + 8
                                            * (((((v26 - 77) ^ ((((v26 - 1) - 356) & v25) == 8)) & 1) == 0) | (v26 - 1))))(8);
}

uint64_t sub_1B029A3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v8 = (*(uint64_t (**)(void))(v6 + 8 * (v5 ^ 0xAB5)))();
  int v9 = (v5 - 1531404039) & 0x5B475FF7;
  STACK[0x328] = STACK[0x328] + (v9 - 241) - 917;
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * (((a5 != 1904944996) * (577 * (v9 ^ 0x474) - 910)) ^ v9)))(v8);
}

void sub_1B029A46C(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v5 - 0x7A71FA3516B26441) = *v3;
  *(_DWORD *)(v6 - 0x5B62222C33553D11) = a3;
  void *v3 = 0;
  *(void *)(v9 - 0x7DA9E0EFFB1E3626) = 0x7B9DB3A57B9DB3A5;
  _DWORD *v4 = 775263486;
  *(_DWORD *)(v9 - 0x7DA9E0EFFB1E361ALL) = ((*(_DWORD *)(v9 - 0x7DA9E0EFFB1E361ALL) & 0xFFFFFFFE ^ 0x39A69F86 | 0x7CDE6E8C)
                                          - (*(_DWORD *)(v9 - 0x7DA9E0EFFB1E361ALL) & 0xFFFFFFFE ^ 0x39A69F86 | 0x83219173)
                                          - 2094952077) ^ 0x4578F10A;
  *(_DWORD *)(v8 + 28) = *v7;
}

uint64_t sub_1B029A580@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(int8x16_t *)(a1 + a2 + 16 + (((v2 + 1964) | 0x10) ^ 0xCB854EBA)) = vaddq_s8(vsubq_s8(*v4, vandq_s8(vaddq_s8(*v4, *v4), v6)), v7);
  return (*(uint64_t (**)(void))(v5 + 8 * ((1065 * (v3 == 16)) ^ v2)))();
}

uint64_t sub_1B029A594()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((250
                                * (((((v2 + (((v1 ^ 0x2D2) - 1383120409) & 0x5270BABF) - 502) & 0x7F ^ 0x6FBFEBF7)
                                   + ((2 * (v2 + (((v1 ^ 0x2D2) - 1383120409) & 0x5270BABF) - 502)) & 0xEE)) & 0x6FBFEFFC) == 1874848760)) ^ v1 ^ 0x2D2)))();
}

uint64_t sub_1B029A60C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,int a34)
{
  BOOL v37 = a34 + 1941109704 < (v36 + 1528649221);
  if ((a34 + 1941109704) < 0xAE927168 != v36 + 1528649221 < (((v34 - 290) | 0x400) ^ 0xAE927558)) {
    BOOL v37 = v36 + 1528649221 < (((v34 - 290) | 0x400) ^ 0xAE927558);
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((501 * ((((v34 + 1802593770) ^ v37) & 1) == 0)) ^ (v34 + 1444))))();
}

void sub_1B029A620()
{
  *(_DWORD *)(v1 + 8) = v0 - 4;
}

uint64_t sub_1B029A628(uint64_t a1)
{
  int v1 = 108757529 * ((a1 & 0x9335B0F8 | ~(a1 | 0x9335B0F8)) ^ 0x8C562D2C);
  int v2 = *(_DWORD *)(a1 + 12) + v1;
  int v3 = *(_DWORD *)(a1 + 8) ^ v1;
  int v4 = *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1);
  unsigned int v6 = v4 - 1388059666;
  BOOL v5 = v4 - 1388059666 < 0;
  unsigned int v7 = 1388059666 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + (v2 ^ 0x340))
                              + 8
                              * ((31
                                * ((v2 ^ ((v3 - 821665214) < 4 * (unint64_t)v7)) & 1)) ^ v2)
                              - 12))();
}

uint64_t sub_1B029A6F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38)
{
  uint64_t v42 = (a38 ^ 0x42Cu ^ (unint64_t)(v40 - 66)) + a6;
  long long v43 = (unsigned __int8 *)(v40 + a6 + a4);
  int v44 = ((*(unsigned __int8 *)(a4 + v42) ^ 0xD0) << 24) | ((v43[1] ^ 0xD0) << 16) | ((v43[2] ^ 0xD0) << 8);
  *(_DWORD *)(v41 + v42) = (v44 | v43[3] ^ 0xD0) + v38 - 2 * ((v44 | v43[3] ^ 0xD0) & (v38 + 2) ^ (v43[3] ^ 0xD0) & 2);
  return (*(uint64_t (**)(void))(v39 + 8 * ((165 * ((unint64_t)(a6 + 4 + v40) > 0x3F)) ^ a38)))();
}

uint64_t sub_1B029A78C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,long long a40)
{
  int8x16_t v46 = *(int8x16_t *)(v42 + a3 + v40 + (v41 ^ a7) - 30);
  *(long long *)((char *)&a40 + 4) = (__int128)vaddq_s8(vsubq_s8(v46, vandq_s8(vaddq_s8(v46, v46), v44)), v45);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8 * (v41 + 635)))(a1, a2, a3, (char *)&a40 + 4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33);
}

uint64_t sub_1B029A7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v59 = v57 ^ 0x738;
  uint64_t v60 = (*(uint64_t (**)(uint64_t, uint64_t))(v58 + 8 * (v57 ^ 0xF41)))(1576, 2940923044);
  STACK[0x530] = v60;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v58 + 8 * (((v60 == 0) * (((v59 + 534) ^ 0x39E) + v59 - 216)) ^ v59)))(v60, v61, v62, v63, v64, v65, 2389998781, v66, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1B029A834(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  BOOL v10 = v9 + 338530141 < (int)(a7 + 1505236987);
  if (a7 > ((v8 - 650) ^ 0x2647EAABu) != v9 + 338530141 < -642246661) {
    BOOL v10 = a7 > ((v8 - 650) ^ 0x2647EAABu);
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v10 * (v8 - 634)) ^ v8)))();
}

uint64_t sub_1B029A8AC(int a1, uint64_t a2, int a3, int a4, int16x8_t a5)
{
  *(_DWORD *)(a2 + (v7 - a3)) = vmovn_s16(a5).u32[0];
  return (*(uint64_t (**)(void))(v8 + 8 * (((a1 + a3 - 356 == v6) * a4) ^ v5)))();
}

uint64_t sub_1B029A8DC(uint64_t a1, double a2)
{
  *(double *)(v3 + a1) = a2;
  BOOL v8 = v4 == a1;
  uint64_t v9 = a1 + 8;
  int v10 = v8;
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (v6 & ~(v5 ^ v10) | v2)))(v9);
}

void sub_1B029A904(uint64_t a1)
{
  int v1 = 535753261 * (((a1 | 0xB0E1CD18) - a1 + (a1 & 0x4F1E32E7)) ^ 0xBA15C337);
  int v2 = *(_DWORD *)(a1 + 36) ^ v1;
  if (*(void *)(a1 + 40) | *(void *)a1) {
    BOOL v3 = *(_DWORD *)(a1 + 16) + v1 == 1345371420;
  }
  else {
    BOOL v3 = 1;
  }
  char v4 = v3;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B029AA64()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 - STACK[0x398] < 0x20) * ((((v1 - 260) | 0x102) + 221) ^ 0x8F2)) ^ v1)))();
}

uint64_t sub_1B029AAB0(int8x16_t a1, int8x16_t a2, int8x16_t a3, int8x16_t a4, int32x4_t a5, int8x16_t a6)
{
  uint64_t v13 = v11 + 16;
  a6.i32[0] = *(_DWORD *)(v13 + 912);
  a6.i32[1] = *(_DWORD *)(v13 + v7);
  a6.i32[2] = *(_DWORD *)(v13 + 920);
  int8x16_t v14 = vextq_s8(a1, a6, 0xCuLL);
  int8x16_t v15 = a6;
  v15.i32[3] = *(_DWORD *)(v13 + 924);
  int32x4_t v16 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v15, a2), vandq_s8(v14, a4)), 1uLL), *(int8x16_t *)v13);
  v14.i32[0] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v13 + 912) & 1));
  v14.i32[1] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v13 + v7) & 1));
  v14.i32[2] = *(_DWORD *)(v8 + 4 * (*(_DWORD *)(v13 + 920) & 1));
  v14.i32[3] = *(_DWORD *)(v8 + 4 * (v15.i8[12] & 1));
  *(int8x16_t *)(v13 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v16, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v16, v16), a3)), a5), v14);
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 == 4) * v10) ^ v6)))();
}

uint64_t sub_1B029AABC(int a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((a4 - 72) ^ 0xC03) - 939) * ((a1 + a7 - 16) < 0xFFFFFFF0)) ^ (a4 - 72))))();
}

uint64_t sub_1B029AAF4()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1266 * (v1 > 0xC193CE6E)) ^ (v2 + 1972111868))))();
}

uint64_t sub_1B029AB3C@<X0>(int a1@<W8>)
{
  *(void *)(v2 - 204) = 0xD0D0D0D0D0D0D0D0;
  *(void *)(v2 - 196) = 0xD0D0D0D0D0D0D0D0;
  int v3 = 235795823 * ((((2 * (v2 - 168)) | 0x47885068) - (v2 - 168) - 600057908) ^ 0xB769616D);
  *(_DWORD *)(v2 - 160) = v3 + 1680994575;
  *(_DWORD *)(v2 - 132) = (a1 + 2065) ^ v3;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 + 2322)))(v2 - 168);
  *(_DWORD *)(v5 + 40) = *(_DWORD *)(v2 - 136);
  return result;
}

uint64_t sub_1B029AC24(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a4 - 73 + (a4 ^ 0xB5) - 1574) * (v5 == v6)) ^ a4)))();
}

uint64_t sub_1B029AC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (a4) {
    BOOL v8 = STACK[0x318] == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v9 = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * ((v9 * (((a5 + v5) & v6) - 1293)) ^ (a5 - 234))))();
}

uint64_t sub_1B029AC68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  int v29 = (unint64_t)(&a25 + a14 + (v25 + v26)) < ((((v27 - 1653753136) & 0x3DFD) + 1319) ^ 0x634uLL);
  return (*(uint64_t (**)(void))(v28 + 8 * ((v29 | (v29 << 6)) ^ v27)))();
}

uint64_t sub_1B029ACB8()
{
  int v3 = STACK[0x374];
  LODWORD(STACK[0x2E0]) = 1701297651;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((51
                                * ((((((v0 ^ 0xE3) + 95) | 0xC8) + 19) ^ (v3 == ((17
                                                                                                 * ((((v0 ^ 0x1E3) - 673) | 0xC8) ^ 0xED)) ^ (v2 - 643)))) & 1)) ^ (((v0 ^ 0x1E3) - 673) | 0xC8))))();
}

uint64_t sub_1B029AD1C(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (int)((((((a2 + 951469703) & 0xC749BF5F) + 164) ^ 0x8F9) * (v2 == v3)) ^ a2)))();
}

uint64_t sub_1B029AD5C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                       + 8
                                                                       * ((((v2 - 1759093154) < 0x38)
                                                                         * ((v3 - 1571091511) & 0x5DA4F3F3 ^ 0x62C)) ^ (v3 - 608))))(a1, a2, 703, 71960430);
}

uint64_t sub_1B029ADBC@<X0>(int a1@<W8>, __n128 a2@<Q0>)
{
  unint64_t v6 = (a1 - 751) | 0x85u;
  STACK[0x200] = v6;
  uint64_t v7 = (char *)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE0694DLL;
  *(_DWORD *)uint64_t v7 = 538749825;
  *((void *)v7 + 1) = 0;
  *((_DWORD *)v7 + 4) = 1369206897;
  *((_DWORD *)v7 + 6) = 1400183651;
  *((void *)v7 + 4) = 0;
  *((_DWORD *)v7 + 10) = 1400183651;
  STACK[0x498] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE06925;
  *((void *)v7 + 6) = 0;
  STACK[0x3B8] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE0691DLL;
  *((_DWORD *)v7 + 14) = 1400183651;
  STACK[0x2F8] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE06915;
  *((void *)v7 + 8) = 0;
  STACK[0x320] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE0690DLL;
  *((_DWORD *)v7 + 18) = 1400183651;
  STACK[0x3C0] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE06905;
  *((void *)v7 + 10) = 0;
  STACK[0x388] = (unint64_t)&STACK[0x5D0] + v5 + v6 - 0x9872DDC1BE068FDLL;
  v7[88] = 97;
  *(_DWORD *)uint64_t v3 = 538749825;
  *(__n128 *)(v3 + 4) = a2;
  *(_DWORD *)(v3 + 20) = 0;
  *(_DWORD *)(v3 + 24) = 1400183651;
  *(_DWORD *)(v3 + 28) = 70623368;
  STACK[0x240] = v3 + 28;
  *(_DWORD *)(v3 + 232) = 70623368;
  STACK[0x230] = v3 + 232;
  *(__n128 *)(v3 + 436) = a2;
  *(__n128 *)(v3 + 452) = a2;
  *(void *)(v3 + 468) = 0;
  *(void *)(v3 + 1128) = 0xD0D0D0D0D0D0D0D0;
  *(void *)(v3 + 1136) = 0xD0D0D0D0D0D0D0D0;
  *(void *)(v3 + 1144) = 3503345872;
  *(__n128 *)(v3 + 1152) = a2;
  *(__n128 *)(v3 + 1168) = a2;
  *(__n128 *)(v3 + 1184) = a2;
  return (*(uint64_t (**)(void))(v4 + 8 * ((450 * (a1 == 1295)) ^ v2)))();
}

uint64_t sub_1B029AF08@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unsigned int *a58)
{
  int v59 = a2 + 1476;
  uint64_t v60 = (*(uint64_t (**)(void, uint64_t, void))(v58 + 8 * (a2 ^ 0x81D)))(*a58, a1, LODWORD(STACK[0x3EC]));
  return (*(uint64_t (**)(uint64_t))(v58
                                            + 8
                                            * (((((47 * (v59 ^ 0x6ED) + 301) | 0x80) - 231)
                                              * (LODWORD(STACK[0x314]) != 1904944996)) ^ v59)))(v60);
}

uint64_t sub_1B029AF78@<X0>(uint64_t a1@<X8>, uint64_t a2, char a3)
{
  int v8 = v4 - 223;
  (*(void (**)(void, void, void))(v6 + 8 * (v4 + 1871)))(**(unsigned int **)(a1 + 8 * (v4 ^ 0x1EE)), *v5, (v3 + *(_DWORD *)(v7 - 0x7DA9E0EFFB1E3626) + v4));
  unint64_t v9 = ((unint64_t)&a3 ^ 0x73BDFB77FFB2ECFFLL)
     - 0x1015491012303FFFLL
     + ((2 * (void)&a3) & 0xE77BF6EFFF65D9F0);
  *(unsigned char *)(v7 - 0x7DA9E0EFFB1E360FLL) = ((v8 - 127) ^ v9 ^ 0x36) * (v9 + 17);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * v8))(v7 - 0x7DA9E0EFFB1E362ELL);
}

uint64_t sub_1B029B074()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (int)(STACK[0x2F0] - 101)))();
}

void gDmCYFQnze(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B029B158@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((1015 * ((((a1 - 1) ^ (*(_DWORD *)(v1 - 0x7DA9E0EFFB1E361ELL) == 775263486)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_1B029B1A8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((502 * (*v1 == ((a1 + 285) | 0x24) - 1084)) ^ a1)))();
}

uint64_t sub_1B029B1E8@<X0>(int a1@<W0>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  unsigned int v14 = v11 + a1;
  if (v14 <= 0x40) {
    unsigned int v14 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 8 * (int)((((a10 ^ 0x3F3) + 2932) * (v12 - a6 - v10 + v14 < 0xF)) ^ a10)))(64, 3488355011, 3966232327, 3488354942, a2, a3, a4, a5, a7, a8, a9, a10);
}

uint64_t sub_1B029B2A4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2377 * (v0 == v3 + v1 - 383)) ^ v1)))();
}

uint64_t sub_1B029B2D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((((a6 - 16) ^ 0xFFFFFC43) & v6) == 399244960) * (a6 + 774)) ^ a6)))();
}

uint64_t sub_1B029B310(__n128 a1)
{
  *(_DWORD *)(v4 + 1424) = 1742482590;
  *(_DWORD *)(v4 + 1428) = 568732660;
  *(void *)(v4 + 1432) = v2;
  *(void *)(v4 + 1440) = v2;
  *(_DWORD *)(v4 + 1448) = v3;
  *(__n128 *)(v4 + 1452) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * v1))();
}

uint64_t sub_1B029B364@<X0>(uint64_t a1@<X8>)
{
  int v10 = 296 * (v1 ^ 0x1C7);
  int v11 = (char)(v2 - 21) - (char)(v3 - 21);
  LODWORD(STACK[0x2E8]) = (v11 ^ 0xFED7AFFD) + 1030512616 + ((v10 ^ 0xFDAF57E2) & (2 * v11));
  int v12 = (*(unsigned __int8 *)(a1 + 1128) ^ 0xD0) - *(unsigned __int8 *)(v4 + 1148);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((((v12 ^ 0x4FABDF7F) + v5 + (v7 & (2 * v12)) != (((v10 - 1944) | 0x305) ^ v6))
                                              * v9) | v10)))(208);
}

uint64_t sub_1B029B3B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  *(void *)(v18 - 136) = v15;
  *(void *)(v18 - 128) = a15;
  *(_DWORD *)(v18 - 120) = (v17 + 126) ^ (535753261
                                        * (((((v18 - 136) | 0xB3CEF78E) ^ 0xFFFFFFFE) - (~(v18 - 136) | 0x4C310871)) ^ 0x46C5065E));
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 + 1119)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * (((((v17 - 1252) | 0x140) + 138) * (a11 < 1)) ^ v17)))(v19);
}

uint64_t sub_1B029B460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v9 = STACK[0x528];
  LODWORD(STACK[0x310]) = LODWORD(STACK[0x528]) + 64;
  unsigned int v10 = LODWORD(STACK[0x5A4]) - 1002142194;
  BOOL v11 = v9 - 924829805 > v10;
  if ((v9 - 924829805) < 0x280473AB != v10 < 0x280473AB) {
    BOOL v11 = (v9 - 924829805) < 0x280473AB;
  }
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((v11 * (((a8 + 1211) | 0x20) - 1229 + ((a8 + 1211) | 0x20) - 2121 - 712)) ^ ((a8 + 1211) | 0x20))))();
}

uint64_t sub_1B029B4E0@<X0>(int a1@<W8>)
{
  if (a1 == v1) {
    int v2 = -1904968518;
  }
  else {
    int v2 = a1;
  }
  return v2 ^ v1;
}

uint64_t sub_1B029B530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v10
                                                     + 8
                                                     * ((134
                                                       * ((((v9 + 77766327) ^ (v8 == ((v9 + 542891824) | 0xA001088) + a8)) & 1) == 0)) ^ v9)))(a1, -2021940145);
}

uint64_t sub_1B029B594(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((((a3 - 1286) | 0x318) ^ 0x30C) + ((a3 - 806981271) & 0x301989FD)) * (v4 == a4)) | a3)))();
}

uint64_t sub_1B029B5E8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0)
                                * (((v3 - 276) ^ 0x110) + 919)) ^ v3)))();
}

uint64_t sub_1B029B628(int a1)
{
  int v4 = v2 ^ a1;
  unint64_t v5 = STACK[0x4A0];
  int v6 = 1178560073 * ((v3 - 192) ^ 0xBA947862);
  *(void *)(v3 - 184) = STACK[0x4A0];
  *(_DWORD *)(v3 - 176) = -1882357529 - v6 + v2 + 43;
  *(_DWORD *)(v3 - 192) = -17177217 - v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((int)v2 + 2352)))(v3 - 192);
  STACK[0x440] = *(void *)(v1 + 8 * v2);
  unint64_t v8 = STACK[0x2D8];
  STACK[0x598] = v5;
  LODWORD(STACK[0x5A4]) = 1673522606;
  STACK[0x420] = v8;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((1365
                                              * (((2 * *(_DWORD *)(v5 - 0x2B41EA7AD2F8E82DLL)) & 0x6C ^ 0x20)
                                               + ((v4 + 769) ^ 0x467F5973 ^ *(_DWORD *)(v5 - 0x2B41EA7AD2F8E82DLL) & 0x3Fu)
                                               - 1182752805 < v4 - 979)) ^ v4)))(v7);
}

uint64_t sub_1B029B738@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  *(unsigned char *)(v2 + (v4 + v3)) = *(unsigned char *)(a1 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v4 - 1 == a2) * ((v5 - 870) ^ 0x758)) ^ (v5 - 1559))))();
}

uint64_t sub_1B029B774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 1603887949 < (a14 + 1066271519);
  if (a14 + 1066271519 < (v16 + 1605021126) != (v14 + 1603887949) < 0x5FAAAEA0) {
    BOOL v17 = a14 + 1066271519 < (v16 + 1605021126);
  }
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((2 * v17) | (4 * v17)) ^ v16)))(2658468858);
}

uint64_t sub_1B029B7E8@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + v3 - 507 + ((v3 - 739247088) & 0x7E54FFFB) - 210) * (a3 != a1)) ^ v3)))();
}

uint64_t sub_1B029B834@<X0>(int a1@<W2>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v11 = v8 + v7 + v6 - a2 + ((a1 + 678) ^ (v4 + 1221));
  *(void *)(v3 - 7 + v11) = *(void *)(a3 - 7 + v11);
  return (*(uint64_t (**)(void))(v10 + 8 * ((1237 * (a2 - (v5 & 0xFFFFFFF8) == -8)) ^ a1)))(v9 - (v5 & 0xFFFFFFF8));
}

uint64_t sub_1B029B894@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28)
{
  int v31 = v28 + 691;
  BOOL v33 = a28 - v30 == ((v28 + 691) ^ 0x5244FC34) - 1792713964 && a2 != a1 + v28 + 184 - 290;
  return (*(uint64_t (**)(void))(v29 + 8 * ((89 * v33) ^ v31)))();
}

uint64_t sub_1B029B8F4@<X0>(uint64_t a1@<X8>)
{
  unsigned int v4 = 1755732067 * ((2 * (v6 & 0x73EF6EF8) - v6 - 1945071354) ^ 0x52D62CDD);
  v6[0] = (1604055133 - v2 - ((-81267856 - (v2 << ((2 * (v3 ^ 0x2E)) ^ 0xED))) & 0xC40FED4A)) ^ v4;
  v6[1] = (v3 - 336) ^ v4;
  uint64_t v7 = a1;
  return (*(uint64_t (**)(_DWORD *))(v1 + 8 * (v3 + 1210)))(v6);
}

uint64_t sub_1B029B9BC@<X0>(uint64_t a1@<X8>)
{
  unsigned int v6 = STACK[0x2E8];
  uint64_t v7 = (v2 + v4);
  int v8 = *(unsigned __int8 *)(v1 + v7) ^ 0xD0 | ((*(unsigned __int8 *)(v1 + (v7 + 1)) ^ 0xD0) << 8) | ((*(unsigned __int8 *)(v1 + ((LODWORD(STACK[0x2E8]) + 62) ^ (v4 + 639)) + v2) ^ 0xD0) << 16) | ((*(unsigned __int8 *)(v1 + (v7 + 3)) ^ 0xD0) << 24);
  *(_DWORD *)(a1 + v7) = v8 + v5 - ((2 * v8) & 0xE3164EC8);
  return (*(uint64_t (**)(void))(v3 + 8 * ((213 * ((v2 + 4 + v4) > 0x3F)) ^ v6)))();
}

uint64_t sub_1B029BA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,unsigned int a32)
{
  unsigned int v36 = v33 - 928753837;
  if (v36 <= 0x40) {
    unsigned int v36 = 64;
  }
  return (*(uint64_t (**)(void))(v35 + 8 * ((44 * (a7 - v34 - v32 + ((a32 + 184) ^ 0x517) + v36 < 0xF)) ^ a32)))();
}

uint64_t sub_1B029BAD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * (((a12 - 1576426465 < ((v13 - 1201751285) ^ 0xB85EBEA7) + 2147483302)
                                * (((v13 - 1201751285) & 0x47A1467F) - 1193)) ^ v13)))();
}

void sub_1B029BB3C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 460628867 * (((a1 | 0x6C5795E7) - a1 + (a1 & 0x93A86A18)) ^ 0x20C1179A);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B029BC70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51,uint64_t a52)
{
  int v55 = 535753261 * ((-32863559 - ((v54 - 192) | 0xFE0A8AB9) + ((v54 - 192) | 0x1F57546)) ^ 0xB017B69);
  int v56 = LODWORD(STACK[0x564]) - v55 - 539926354;
  *(_DWORD *)(v54 - 184) = v52 - v55 + 131;
  *(void *)(v54 - 152) = a52;
  *(void *)(v54 - 192) = a48;
  *(void *)(v54 - 176) = a49;
  *(_DWORD *)(v54 - 160) = v56;
  *(_DWORD *)(v54 - 168) = (a51
                          + v52
                          + 492
                          - (((a51 << (((v52 - 106) | 4) ^ 0x84)) + 2040830570) & 0xC4F2475C)
                          + 525037068) ^ v55;
  uint64_t v57 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (v52 + 2180)))(v54 - 192);
  int v58 = *(_DWORD *)(v54 - 164);
  LODWORD(STACK[0x374]) = v58;
  return (*(uint64_t (**)(uint64_t))(v53 + 8 * ((2216 * (v58 == 1904944996)) ^ v52)))(v57);
}

uint64_t sub_1B029BD90()
{
  unsigned int v3 = *v1 + v0 - 166 + (((v0 - 293) | 0x200) ^ 0xFFFFFC57);
  return (*(uint64_t (**)(void))(v2 + 8 * ((1434 * (((2 * v3) & 0xBBCFFFBC) + (v3 ^ 0x5DE7FFDE) == 1575485406)) ^ v0)))();
}

uint64_t sub_1B029BE00@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(a3 + 8 * (a2 + 841)))(a1, 208);
}

uint64_t sub_1B029BE4C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((252
                                * (v3 - a2 + ((a1 + 1254) ^ 0xD4BE15852D0710C1) + v2 < (unint64_t)(a1 + 762) - 1362)) ^ a1)))();
}

uint64_t sub_1B029BEA8@<X0>(int a1@<W0>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  uint64_t v7 = (__n128 *)(v5 + v4);
  v7[73] = a3;
  v7[74] = a3;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a2 == v4) * a1) ^ v3)))();
}

uint64_t sub_1B029BED4(int a1, int a2, int a3, int a4, int a5, int a6, uint64_t a7, unint64_t a8)
{
  int v16 = a1 + 1;
  uint64_t v17 = 4 * ((v8 ^ a2) + v16 + a4);
  unint64_t v18 = (*(_DWORD *)(*v12 + v17) ^ v11) + HIDWORD(a8);
  *(_DWORD *)(*v12 + v17) = v18 + v13 - (v15 & (2 * v18));
  BOOL v19 = v16 + a5 < v10;
  if (v10 < v9 != v16 + a5 < v9) {
    BOOL v19 = v10 < v9;
  }
  return (*(uint64_t (**)(void))(v14 + 8 * ((v19 * a6) ^ a3)))();
}

uint64_t sub_1B029BEE0(int a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = v7 + v9;
  int v13 = v12 + v8;
  if ((v12 + v8) <= 0x40) {
    int v13 = a3;
  }
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * ((11
                                * ((v10 ^ 0x177 ^ (a7 + 2084)) - v12 >= a1
                                                                      + a2
                                                                      + (((v10 - 1425) | 0x80) ^ (a7 + 1156))
                                                                      + v13)) | v10)))();
}

uint64_t sub_1B029BF40(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((*(unsigned char *)(v6 + 1 + a5) + (v7 ^ 0x3E) - *(unsigned char *)(v5 + 1)) == 245)
                                * (((v7 - 1591) | a2) ^ a3)) ^ (v7 - 1042))))();
}

uint64_t sub_1B029BF54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, int a17, unsigned int a18)
{
  unsigned int v20 = 1225351577
      * (((&a15 ^ 0xB9CEDEF4) + 646493074 - 2 * ((&a15 ^ 0xB9CEDEF4) & 0x2688B392)) ^ 0xBCDCB570);
  a17 = v20 ^ 0x7384C45F;
  a18 = v20 + 1208085971;
  LODWORD(a15) = v20 + 1850232741;
  HIDWORD(a15) = v20 ^ 0x215;
  (*(void (**)(unint64_t **))(v19 + 18968))(&a15);
  a15 = &STACK[0xFBD18CA08459198];
  a17 = 1989 - 460628867 * ((&a15 + 1214857683 - 2 * (&a15 & 0x486941D3)) ^ 0x4FFC3AE);
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v19 + 19064))(&a15);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((44 * (a16 != v18)) ^ 0x299)))(v21);
}

uint64_t sub_1B029C094()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v0 <= LODWORD(STACK[0x2A0])) * ((STACK[0x2F0] + 1221) ^ 0x878)) ^ (STACK[0x2F0] - 690))))();
}

uint64_t sub_1B029C0CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  int v12 = v9 + 4;
  uint64_t v13 = (v12 + a4);
  unsigned int v14 = *(_DWORD *)(v8 + v13);
  *(unsigned char *)(v7 + v13) = (v10 ^ HIBYTE(v14)) - (((v10 ^ HIBYTE(v14)) << ((v6 - 94) ^ 0x84)) & 0xA0) - 48;
  *(unsigned char *)(v7 + (v13 + 1)) = (BYTE2(v14) ^ 0x4A)
                                           - 2 * ((BYTE2(v14) ^ 0x4A) & 0x55 ^ BYTE2(v14) & 5)
                                           - 48;
  *(unsigned char *)(v7 + (v13 + 2)) = (BYTE1(v14) ^ 7) - ((v14 >> 7) & 0xA0) - 48;
  *(unsigned char *)(v7 + (v13 + 3)) = v14 ^ 0xBE;
  LODWORD(v13) = *v5 + 619991697;
  BOOL v15 = v13 < a5;
  BOOL v16 = v12 + 332044946 < v13;
  if (v12 + 332044946 < a5 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * (((2 * !v16) | (8 * !v16)) ^ v6)))();
}

uint64_t sub_1B029C0D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t (*a20)(uint64_t),uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  int v45 = (v40 - 461284649) & 0x1B7EA1D6;
  *(unsigned char *)(a5 + (v42 + v39 + 72)) = *(&a39 + (v45 ^ 0x96835BA6) + v41);
  int v46 = 628203409 * (((~(v44 - 168) & 0x97F4EE4E) - (~(v44 - 168) | 0x97F4EE4F)) ^ 0x157CE27C);
  *(_DWORD *)(v44 - 160) = v46 + v45 + 1893;
  *(_DWORD *)(v44 - 156) = 591534416 - v46;
  STACK[0x328] = a25;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v43 + 8 * (v45 + 2239)))(v44 - 168);
  return a20(v47);
}

uint64_t sub_1B029C18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = (a18 ^ v19)
      - (((a18 ^ v19) << (((v18 + 124) | 0x85) + 28)) & (((v18 + 1140598777) & 0xBC03D1AB) - 1459948373))
      - 729973990;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((4070
                                * (((2 * v21) & 0xDFDFBD6E ^ 0x88DAB424) + (v21 ^ 0xBB92A5AD) - 34347012 != 1843644083)) ^ v18)))();
}

uint64_t sub_1B029C244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * ((((((v11 ^ 0xE8) + 58) ^ (**(_DWORD **)(a11 - 0x6155FFFFEB445CBDLL) == v12)) & 1)
                                                                         * (((v11 ^ 0x2E8) + 1663) ^ 0x850)) ^ v11 ^ 0x2E8)))(3840224868, 0xFD37A2AD756D71F0, 4071699085);
}

uint64_t sub_1B029C320(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v6 + v8) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 != v8) * a5) ^ v5)))();
}

uint64_t sub_1B029C348@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + v4 + a1) = v3;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((unint64_t)(v4 + 1 + a1) < 0x38) * v5) ^ v2)))();
}

uint64_t sub_1B029C374(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int32x4_t a43,int32x4_t a44,int32x4_t a45,int32x4_t a46)
{
  HIDWORD(v109) = HIDWORD(a13) + 281154802;
  int8x16_t v104 = (int8x16_t)vdupq_n_s32(0x718B2766u);
  v105.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v105.i64[1] = 0xD0D0D0D0D0D0D0D0;
  int32x4_t v106 = vdupq_n_s32(0x718B2764u);
  uint64_t v113 = v53 - 16;
  HIDWORD(a21) = v50 - 679;
  uint64_t v107 = (v50 - 2);
  int8x16_t v108 = (int8x16_t)vdupq_n_s32(0xE3164EC8);
  uint64_t v54 = *(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * v46);
  uint64_t v55 = HIDWORD(a33);
  uint64_t v56 = HIDWORD(a34);
  uint64_t v57 = a35;
  int v58 = BYTE4(a36) ^ 0xAE;
  LODWORD(v109) = BYTE4(a36) ^ 0xFFFFFFAE;
  if (v58 == 2)
  {
    unint64_t v110 = __PAIR64__(a34, HIDWORD(a33));
    unint64_t v111 = __PAIR64__(a35, HIDWORD(a34));
    uint64_t v112 = *(void *)(v49 + 8 * v46);
    int8x16x4_t v115 = vld4q_s8((const char *)&a24 + 4);
    HIDWORD(a16) = HIDWORD(a35);
    uint8x16_t v83 = (uint8x16_t)veorq_s8(v115.val[0], v105);
    uint16x8_t v84 = vmovl_u8(*(uint8x8_t *)v83.i8);
    uint16x8_t v85 = vmovl_high_u8(v83);
    uint8x16_t v86 = (uint8x16_t)veorq_s8(v115.val[1], v105);
    _Q23 = vmovl_u8(*(uint8x8_t *)v86.i8);
    _Q22 = vmovl_high_u8(v86);
    __asm
    {
      SHLL2           V24.4S, V22.8H, #0x10
      SHLL2           V25.4S, V23.8H, #0x10
    }
    uint8x16_t v91 = (uint8x16_t)veorq_s8(v115.val[2], v105);
    uint16x8_t v92 = vmovl_high_u8(v91);
    uint16x8_t v93 = vmovl_u8(*(uint8x8_t *)v91.i8);
    v115.val[0] = veorq_s8(v115.val[3], v105);
    v115.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v115.val[0]);
    v115.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[1]);
    v115.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[1].i8);
    v115.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v115.val[0].i8);
    v115.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v115.val[0]);
    v115.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v115.val[0].i8);
    int32x4_t v94 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v93.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v84.i8), 0x18uLL)), v115.val[0]);
    int32x4_t v95 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q25, (int8x16_t)vshll_high_n_u16(v93, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v84), 0x18uLL)), v115.val[3]);
    int32x4_t v96 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v92.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v85.i8), 0x18uLL)), v115.val[1]);
    int32x4_t v97 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v92, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v85), 0x18uLL)), v115.val[2]);
    v115.val[0] = veorq_s8(vandq_s8((int8x16_t)v94, v104), (int8x16_t)(*(_OWORD *)v115.val & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v115.val[3] = veorq_s8(vandq_s8((int8x16_t)v95, v104), (int8x16_t)(*(_OWORD *)&v115.val[3] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v115.val[1] = veorq_s8(vandq_s8((int8x16_t)v96, v104), (int8x16_t)(*(_OWORD *)&v115.val[1] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v115.val[2] = veorq_s8(vandq_s8((int8x16_t)v97, v104), (int8x16_t)(*(_OWORD *)&v115.val[2] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a45 = vaddq_s32(vsubq_s32(v96, vaddq_s32((int32x4_t)v115.val[1], (int32x4_t)v115.val[1])), v106);
    a46 = vaddq_s32(vsubq_s32(v97, vaddq_s32((int32x4_t)v115.val[2], (int32x4_t)v115.val[2])), v106);
    a43 = vaddq_s32(vsubq_s32(v94, vaddq_s32((int32x4_t)v115.val[0], (int32x4_t)v115.val[0])), v106);
    a44 = vaddq_s32(vsubq_s32(v95, vaddq_s32((int32x4_t)v115.val[3], (int32x4_t)v115.val[3])), v106);
    unint64_t v98 = (_DWORD *)&a43 + v51 + 523501672;
    int v99 = *(v98 - 8) ^ *(v98 - 3);
    uint64_t v100 = *(v98 - 16);
    int v101 = v100 ^ *(v98 - 14) ^ (v99 + v48 - ((2 * v99) & 0xE3164EC8));
    HIDWORD(v102) = v101 ^ v48;
    LODWORD(v102) = v101;
    *unint64_t v98 = (v102 >> 31) + v48 - ((2 * (v102 >> 31)) & 0xE3164EC8);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((50 * (v53 != 523501609)) ^ 0x3D7u)))(v100, (char *)&a24 + 4, v55, v107, a5, a6, a7, v57, a9, a10, a11, a12, a13, a14, v47, a16, v109, v110, v111,
             v112,
             a21,
             v113,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else if (v58 == 1)
  {
    int8x16x4_t v114 = vld4q_s8((const char *)&a24 + 4);
    uint8x16_t v59 = (uint8x16_t)veorq_s8(v114.val[0], v105);
    uint16x8_t v60 = vmovl_high_u8(v59);
    int8x16_t v61 = (int8x16_t)vmovl_high_u16(v60);
    uint16x8_t v62 = vmovl_u8(*(uint8x8_t *)v59.i8);
    int8x16_t v63 = (int8x16_t)vmovl_high_u16(v62);
    uint8x16_t v64 = (uint8x16_t)veorq_s8(v114.val[1], v105);
    uint16x8_t v65 = vmovl_u8(*(uint8x8_t *)v64.i8);
    uint16x8_t v66 = vmovl_high_u8(v64);
    int8x16_t v67 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v65.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v62.i8));
    int8x16_t v68 = vorrq_s8((int8x16_t)vshll_high_n_u16(v65, 8uLL), v63);
    int8x16_t v69 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v66.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v60.i8));
    int8x16_t v70 = vorrq_s8((int8x16_t)vshll_high_n_u16(v66, 8uLL), v61);
    uint8x16_t v71 = (uint8x16_t)veorq_s8(v114.val[2], v105);
    _Q23 = (int8x16_t)vmovl_high_u8(v71);
    _Q22 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v71.i8);
    int8x16_t v74 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    int8x16_t v79 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q23.i8, 0x10uLL);
    __asm { SHLL2           V23.4S, V23.8H, #0x10 }
    v114.val[0] = veorq_s8(v114.val[3], v105);
    v114.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v114.val[0].i8);
    v114.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v114.val[0]);
    int32x4_t v80 = (int32x4_t)vorrq_s8(vorrq_s8(v67, v74), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[1].i8), 0x18uLL));
    v114.val[1] = vorrq_s8(vorrq_s8(v68, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v114.val[1]), 0x18uLL));
    int32x4_t v81 = (int32x4_t)vorrq_s8(vorrq_s8(v69, v79), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v114.val[0].i8), 0x18uLL));
    v114.val[0] = vorrq_s8(vorrq_s8(v70, _Q23), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v114.val[0]), 0x18uLL));
    a45 = vaddq_s32(vsubq_s32(v81, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v81, v81), v108)), v106);
    a46 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[0], (int32x4_t)v114.val[0]), v108)), v106);
    a43 = vaddq_s32(vsubq_s32(v80, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v80, v80), v108)), v106);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v114.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v114.val[1], (int32x4_t)v114.val[1]), v108)), v106);
    return (*(uint64_t (**)(uint64_t))(v49 + 8 * (int)(398 * (a6 ^ (a6 + 1)))))(523501672);
  }
  else
  {
    uint64_t v103 = a34;
    HIDWORD(a33) = 2 * (HIDWORD(a33) ^ v50) + v50 - (v52 & (4 * (HIDWORD(a33) ^ v50)));
    LODWORD(a34) = 2 * (a34 ^ v50) + v50 - (v52 & (4 * (a34 ^ v50)));
    HIDWORD(a34) = 2 * (HIDWORD(a34) ^ v50) + v50 - (v52 & (4 * (HIDWORD(a34) ^ v50)));
    LODWORD(a35) = 2 * (a35 ^ v50) + v50 - (v52 & (4 * (a35 ^ v50)));
    return v54(v56, (char *)&a24 + 4, v55, v107, v103, a6, a7, v57, a9, a10, a11, a12, a13, a14, v47, a16, v109, a18, a19,
             a20,
             a21,
             v113,
             a23,
             a24,
             a25,
             a26);
  }
}

void sub_1B029C37C(uint64_t a1@<X8>)
{
  *(void *)(*(void *)(v1 + 8) - 0x53B515D5D604607FLL) = a1;
  *(_DWORD *)(v1 + 52) = 1904944996;
}

uint64_t sub_1B029C3A0@<X0>(uint64_t a1@<X0>, int a2@<W5>, uint64_t a3@<X8>)
{
  unsigned int v7 = (v6 + 1406257212) & 0xAC2E37AB;
  int v8 = (v7 ^ (v4 + 1926)) + v5;
  int v9 = v5 + 1;
  *(_DWORD *)(*(void *)(v3 - 0x6155FFFFEB445CBDLL) + 4 * v8) = a2;
  *(_DWORD *)(v3 - 0x6155FFFFEB445CC1) = v9;
  int v11 = v4 + v9;
  int v12 = v11 + 1197;
  if (v11 + 1197 < 0) {
    int v12 = -1197 - v11;
  }
  int v10 = (v7 - 112731436) & 0x6B82757;
  return (*(uint64_t (**)(uint64_t, void, void))(a3
                                                            + 8
                                                            * ((((int)((v10 ^ v12 ^ 0x5AFE39C6)
                                                                     + ((2 * v12) & 0xB5FC7D26)
                                                                     - 1526611604) >= 0)
                                                              * ((v10 - 1464) ^ 0xEB7)) ^ v10)))(a1, (v10 - 1464), (v10 - 1464));
}

uint64_t sub_1B029C49C(uint64_t a1, int a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 + a3 - 2128537299 < ((a4 - 1097) ^ 0x455u)) * (a4 - 2188)) ^ a4)))();
}

uint64_t sub_1B029C510@<X0>(int a1@<W8>)
{
  uint64_t v7 = (v1 + a1 - v4);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v2 + v7 - 15));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  int8x16_t v10 = vrev64q_s8(*(int8x16_t *)(v2 + v7 - 31));
  int8x16_t v11 = vextq_s8(v10, v10, 8uLL);
  uint64_t v12 = v6 + v7;
  v13.i64[0] = 0xA0A0A0A0A0A0A0A0;
  v13.i64[1] = 0xA0A0A0A0A0A0A0A0;
  v14.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v14.i64[1] = 0xD0D0D0D0D0D0D0D0;
  int8x16_t v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v13)), v14));
  *(int8x16_t *)(v12 - 15) = vextq_s8(v15, v15, 8uLL);
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v13)), v14));
  *(int8x16_t *)(v12 - 31) = vextq_s8(v16, v16, 8uLL);
  return (*(uint64_t (**)(void))(v5 + 8 * ((230 * (v4 + 32 == ((v3 + 908) ^ 0x2BF))) ^ v3)))();
}

uint64_t sub_1B029C5A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  unsigned int v43 = *(_DWORD *)(&a25 + ((v41 + v37) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a3 + (v41 + v37)) = v43 ^ 0xBE;
  *(unsigned char *)(a3 + (v41 + v37 + 1)) = (BYTE1(v43) ^ 7)
                                                 + (v39 ^ (a6 - 26) ^ 0x24)
                                                 + (~(v43 >> 7) | 0x5F);
  *(unsigned char *)(a3 + (v41 + v37 + 2)) = (BYTE2(v43) ^ 0x4A)
                                                 - 2 * ((BYTE2(v43) ^ 0x4A) & 0x55 ^ BYTE2(v43) & 5)
                                                 - 48;
  *(unsigned char *)(a3 + (v41 + v37 + 3)) = (HIBYTE(v43) ^ 0x74)
                                                 - 2 * ((HIBYTE(v43) ^ 0x74) & 0x58 ^ HIBYTE(v43) & 8)
                                                 - 48;
  BOOL v44 = v41 - 1764184397 < (a37 - 882966920);
  if (v41 - 1764184397 < v38 != a37 - 882966920 < v38) {
    BOOL v44 = a37 - 882966920 < v38;
  }
  return (*(uint64_t (**)(void))(v42 + 8 * ((!v44 * v40) ^ v39)))();
}

uint64_t sub_1B029C6AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  unint64_t v62 = STACK[0x550];
  int v63 = STACK[0x52C];
  unsigned int v64 = (LODWORD(STACK[0x52C]) << ((v59 - 60) ^ 0x37)) & 0x9928CC0E;
  int v65 = 1374699841
      * ((((v61 - 192) ^ 0x55127F0A) - 2 * (((v61 - 192) ^ 0x55127F0A) & 0x7986CD06) + 2038877446) ^ 0x4160AA05);
  LOBYTE(STACK[0x1930]) = (65 * ((((v61 + 64) ^ 0xA) - 2 * (((v61 + 64) ^ 0xA) & 6) + 6) ^ 5)) ^ 0x31;
  *(_DWORD *)(v61 - 168) = (v58 - 167288835) ^ v65;
  *(void *)(v61 - 160) = a37;
  *(void *)(v61 - 152) = a57;
  *(void *)(v61 - 176) = v62;
  *(void *)(v61 - 184) = a44;
  *(_DWORD *)(v61 - 192) = v65 + v63 + 1284791913 - v64 + 1950;
  *(_DWORD *)(v61 - 188) = (v59 - 368) ^ v65;
  *(void *)(v61 - 136) = a58;
  uint64_t v66 = (*(uint64_t (**)(uint64_t))(v60 + 8 * (v59 ^ 0xF68)))(v61 - 192);
  int v67 = *(_DWORD *)(v61 - 140);
  LODWORD(STACK[0x374]) = v67;
  return (*(uint64_t (**)(uint64_t))(v60 + 8 * ((7 * (v67 == ((v59 - 1649) | 0x310) + 1904944211)) ^ v59)))(v66);
}

uint64_t sub_1B029C7DC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((3582 * (*off_1F08D3A28 == 0)) ^ v0)))();
}

uint64_t sub_1B029C808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v28 + 8 * v27))(((v29 + 307774096) & 0xEDA7BD6F ^ 0x2000016E) & a27);
}

uint64_t sub_1B029C81C@<X0>(uint64_t a1@<X0>, int a2@<W3>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v7)) = *(unsigned char *)(v5 + (a2 + v7));
  return (*(uint64_t (**)(void))(v8 + 8 * ((15 * (((a3 - v6) ^ 0xFFFFF88B) + a2 != a4)) ^ (v4 + a3 + 2254))))();
}

uint64_t sub_1B029C860(uint64_t a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int8x16x4_t v84 = vld4q_s8(a4);
  uint64_t v65 = (a37 - 2) | 2u;
  uint8x16_t v66 = (uint8x16_t)veorq_s8(v84.val[1], v64);
  _Q17 = vmovl_u8(*(uint8x8_t *)v66.i8);
  _Q16 = vmovl_high_u8(v66);
  __asm
  {
    SHLL2           V18.4S, V16.8H, #0x10
    SHLL2           V19.4S, V17.8H, #0x10
  }
  uint64_t v75 = (v65 - 67) | 0x808u;
  uint64_t v76 = (_DWORD *)(v62 + 4 * (v63 + 16 + v61));
  int v77 = *(v76 - 8) ^ *(_DWORD *)(v62 + 4 * ((v75 ^ (v61 - 2058)) + v63 + 16));
  int v78 = *(v76 - 16) ^ *(v76 - 14) ^ (v77 + v59 - (v58 & (2 * v77)));
  HIDWORD(v80) = v78 ^ v59;
  LODWORD(v80) = v78;
  int v79 = v80 >> 31;
  uint64_t v81 = v58 & (2 * v79);
  *uint64_t v76 = v79 + v59 - v81;
  uint64_t v82 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8 * ((3576 * (v63 + 17 == v63 + 80)) ^ ((int)v65 + 1453)));
  return v82(a1, a2, a3, v82, v65, v75, 3576, v81, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1B029CA2C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v17 = a1 + 1999;
  *(void *)(v16 - 136) = a13;
  *(void *)(v16 - 128) = a15;
  *(void *)(v16 - 144) = a13;
  *(_DWORD *)(v16 - 120) = a1 + 1225351577 * ((v16 + 1767950537 - 2 * ((v16 - 144) & 0x6960C959)) ^ 0x4AFA114F) + 1368;
  *(void *)(v16 - 112) = a14;
  *(void *)(v16 - 104) = a5;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (a1 + 2174)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((255
                                              * ((((a11 - 1334526196) < 0x7FFFFFFF) ^ ((v17 ^ 0x32) + 41)) & 1)) ^ (v17 - 1822))))(v18);
}

uint64_t sub_1B029CAEC()
{
  *(_DWORD *)(v3 - 192) = v0
                        + 628203409 * ((((v3 - 192) | 0x7F3983E1) - ((v3 - 192) & 0x7F3983E1)) ^ 0xFDB18FD2)
                        - 231789691;
  (*(void (**)(uint64_t))(v1 + 8 * (v0 + 1505)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (int)((993
                                                   * (*(_DWORD *)(*(void *)(v2 + 8 * (int)(STACK[0x2F0] ^ 0x393))
                                                                - 4) == (((STACK[0x2F0] + 136) | 0x132) ^ ((STACK[0x2F0] ^ 0x1C9) + 1526014174)))) ^ (STACK[0x2F0] + 610))))(341657144);
}

void sub_1B029CBEC()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 857));
  JUMPOUT(0x1B029B6B0);
}

uint64_t sub_1B029CC14(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v12 = a6 - 32 + (a3 ^ (v9 + 2757) ^ (v8 + 1257));
  long long v13 = *(_OWORD *)(v6 + v12 - 15);
  long long v14 = *(_OWORD *)(v6 + v12 - 31);
  uint64_t v15 = v10 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a4 == 32) * a5) ^ (v7 + a3 + 1300))))();
}

void sub_1B029CC20(_DWORD *a1)
{
  int v1 = *a1 - 535753261 * ((((2 * a1) | 0x35D4A2DA) - a1 - 451563885) ^ 0x101E5F42);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B029CD20@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((*(_DWORD *)(*(void *)(a1 + 8) + v4) != v2)
                                     * ((v3 + 1534441176) & 0xA48A4EBD ^ 0x6AA)) ^ v3)))();
}

uint64_t sub_1B029CD64(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v6 & (2 * (*(unsigned __int8 *)(v7 + 6) - 44)))
                                 + ((*(unsigned __int8 *)(v7 + 6) - 44) ^ v5) == v5)
                                * ((a4 | 0x1D8) + 659)) ^ (a4 | 0x1D8))))();
}

uint64_t sub_1B029CDA4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xDF5)))();
  LODWORD(STACK[0x590]) = v2;
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((v2 == ((v0 + 1317694250) & 0xB1759395 ^ 0x718B24E1))
                                              * ((v0 - 320) ^ 0x387)) | v0)))(v3);
}

uint64_t sub_1B029CE0C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v0 & 2) == ((((v1 ^ 0x6DE) - 1470) | 0x280) ^ 0x289))
                                * (((v1 ^ 0x6DE) + 355) ^ 0x726)) ^ v1 ^ 0x6DE)))();
}

uint64_t sub_1B029CE54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v37 = (v33 - 172342358) & 0xA45BBFF;
  *(_DWORD *)(*(void *)(v35 + 96) + 1428) = 568732692;
  *(void *)(v36 - 112) = &STACK[0x2B41EA7AD2F8E8ED];
  *(_DWORD *)(v36 - 120) = -1178560073
                         * ((2 * (((v36 - 120) ^ 0xE222760B) & 0x13B37B4B) - ((v36 - 120) ^ 0xE222760B) + 1816954032) ^ 0x34FA8AD9)
                         + 1376304717
                         - ((((v37 + 1797) ^ 0x5BEE8B9C) - 1542357862) & 0xFDF3CAFA)
                         - 1393481933;
  *(_DWORD *)(v36 - 104) = v37
                         - 1178560073
                         * ((2 * (((v36 - 120) ^ 0xE222760B) & 0x13B37B4B) - ((v36 - 120) ^ 0xE222760B) + 1816954032) ^ 0x34FA8AD9)
                         - 1882357955;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v37 + 1883)))(v36 - 120);
  return (*(uint64_t (**)(uint64_t))(v34
                                            + 8
                                            * ((2315
                                              * (*(_DWORD *)v35
                                               + 2050512697
                                               + ((v37 - 273) ^ a33 & 0x3F ^ 0x65AAFDCD)
                                               + ((2 * a33) & 0xCu) < 0xFFFFFFC0)) ^ v37)))(v38);
}

uint64_t sub_1B029CE8C(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  BOOL v47 = v44 != a2 + v43 - 1383 - 584 || a43 != a3;
  return (*(uint64_t (**)(void))(v45 + 8 * ((v47 * ((v43 ^ a6) - 1380249396)) ^ v43)))();
}

uint64_t sub_1B029CED4@<X0>(uint64_t a1@<X1>, char a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  unsigned int v37 = *(_DWORD *)(&a20 + ((v35 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v35 + a3)) = (a2 + v33 - 74) ^ 0x51 ^ v37;
  *(unsigned char *)(a1 + (v35 + a3 + 1)) = (BYTE1(v37) ^ 7) + (~(v37 >> 7) | 0x5F) - 47;
  *(unsigned char *)(a1 + (v35 + a3 + 2)) = (BYTE2(v37) ^ 0x4A)
                                                - 2 * ((BYTE2(v37) ^ 0x4A) & 0x55 ^ BYTE2(v37) & 5)
                                                - 48;
  *(unsigned char *)(a1 + (v35 + a3 + 3)) = (HIBYTE(v37) ^ 0x74)
                                                - 2 * ((HIBYTE(v37) ^ 0x74) & 0x58 ^ HIBYTE(v37) & 8)
                                                - 48;
  BOOL v38 = v35 - 1591743480 < (a32 - 2127009383);
  if (v35 - 1591743480 < v32 != a32 - 2127009383 < v32) {
    BOOL v38 = a32 - 2127009383 < v32;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((!v38 * v34) ^ v33)))();
}

uint64_t sub_1B029CFD4@<X0>(int a1@<W0>, unsigned __int8 *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,unsigned int a49,uint64_t a50)
{
  uint64_t v53 = (char *)*(&off_1F08D3590 + (a1 ^ 0x42)) - 4;
  uint64_t v54 = *v51 ^ 0xB1;
  uint64_t v55 = (char *)*(&off_1F08D3590 + (a1 ^ 0xFE)) - 12;
  int v56 = v55[v54] ^ 0x28;
  uint64_t v57 = (char *)*(&off_1F08D3590 + (a1 ^ 0x82)) - 8;
  LODWORD(v54) = v57[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461376) ^ 0x49];
  HIDWORD(v58) = v54 ^ 2;
  LODWORD(v58) = v54 << 24;
  LOBYTE(v54) = v58 >> 26;
  int v59 = ((v53[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461381) ^ 0xD7] ^ (a1 + 47)) << 8) | (v56 << 24);
  uint64_t v60 = (char *)*(&off_1F08D3590 + (int)(a1 & 0xB6FDD66B)) - 8;
  int v62 = v55[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461377) ^ 0xB8];
  int v63 = v57[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137ALL) ^ 0x6BLL];
  HIDWORD(v58) = v63 ^ 2;
  LODWORD(v58) = v63 << 24;
  LOBYTE(v56) = v53[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461375) ^ 0x2ELL];
  int v64 = ((v58 >> 26) ^ 0x53) << 16;
  int v65 = v57[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461382) ^ 0x47];
  HIDWORD(v58) = v65 ^ 2;
  LODWORD(v58) = v65 << 24;
  unsigned int v66 = v59 & 0xFF00FF00 | ((v60[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461380) ^ 0xECLL] ^ 9) - 96) | (((v58 >> 26) ^ 0x1E) << 16);
  int v67 = v64 | ((v53[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461379) ^ 0x77] ^ 0xCB) << 8);
  LOBYTE(v64) = v60[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461374) ^ 0x36] - 96;
  LODWORD(v57) = v57[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137ELL) ^ 0xCBLL];
  int v68 = ((v54 ^ 0xFB) << 16) | ((v62 ^ 0x90) << 24) | ((v56 ^ 0xC1) << 8);
  HIDWORD(v58) = v57 ^ 2;
  LODWORD(v58) = v57 << 24;
  LODWORD(v53) = ((v60[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137CLL) ^ 0xA9] - 96) | ((v53[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137DLL) ^ 0x30] ^ 0x31) << 8)) & 0xFF00FFFF | (((v58 >> 26) ^ 0xBA) << 16);
  LOBYTE(v60) = v60[*(unsigned __int8 *)(v50 - 0x7E7E4A92A461378) ^ 0xB5];
  unsigned int v69 = v53 | ((v55[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137FLL) ^ 0x35] ^ 0xFFFFFFE7) << 24);
  int v70 = v55[*(unsigned __int8 *)(v50 - 0x7E7E4A92A46137BLL) ^ 0xBFLL] ^ 0xFE;
  uint8x16_t v71 = (char *)*(&off_1F08D3590 + (a1 ^ 0x80)) - 4;
  unint64_t v72 = (char *)*(&off_1F08D3590 + a1 - 58) - 8;
  LODWORD(v54) = *(_DWORD *)&v71[4 * (v64 ^ 0xFD)] ^ 0x5C3C7063 ^ *(_DWORD *)&v72[4
                                                                                                 * (v54 ^ 0x61)];
  *(_DWORD *)(v52 - 144) = a1;
  uint64_t v73 = (char *)*(&off_1F08D3590 + (a1 & 0x7B7E7F3A)) - 8;
  LODWORD(v54) = (v54 - ((2 * v54) & 0xD5754D4) - 2035570070) ^ *(_DWORD *)&v73[4 * (v62 ^ 5)];
  int8x16_t v74 = (char *)*(&off_1F08D3590 + (a1 ^ 0x84)) - 12;
  int v75 = *(_DWORD *)&v74[4 * (v56 ^ 0xF9)];
  HIDWORD(v528) = v66;
  LOBYTE(v64) = v64 ^ 0x2A;
  LODWORD(v528) = v68 & 0xFFFFFF00 | v64;
  LOBYTE(v60) = ((_BYTE)v60 - 96) ^ 0xA8;
  unsigned int v76 = v67 & 0xFFFFFF00 | (v70 << 24) | v60;
  LODWORD(v57) = v75 ^ v66 ^ (v54 - ((2 * v54) & 0x3A617DCC) + 489733862) ^ v69;
  int v436 = v75 ^ v66 ^ (v54 - ((2 * v54) & 0x3A617DCC) + 489733862);
  *(_DWORD *)(v52 - 160) = v57;
  *(_DWORD *)(v52 - 128) = v57 ^ 0x4D ^ v76;
  int v77 = v57 ^ 0x4D ^ v76 ^ (v528 - 2 * ((v68 & 0x334B1500 | v64 & 0x9D) ^ v64 & 5) - 1286924904);
  int v463 = BYTE1(v77);
  int v446 = BYTE2(v77);
  int v78 = *(_DWORD *)&v74[4 * (BYTE1(v77) ^ 0xEF)] ^ *(_DWORD *)&v72[4 * (BYTE2(v77) ^ 0xF5)] ^ 0x343DAB5B;
  unsigned int v79 = v77 ^ 0x9BC3831;
  int v460 = v77;
  unsigned int v80 = (v78 - ((2 * v78) & 0xEA62CBBC) + 1966171614) ^ *(_DWORD *)&v71[4 * (v77 ^ 0xB1)];
  unsigned int v458 = HIBYTE(v79);
  int v81 = v436 ^ *(_DWORD *)&v73[4 * (HIBYTE(v79) ^ 0x65)] ^ (v80 - ((2 * v80) & 0xD5754D4) - 2035570070);
  unint64_t v527 = __PAIR64__(v69, v76);
  unsigned int v533 = v81 ^ 0xDFFF8C31;
  *(_DWORD *)(v52 - 152) = v81;
  LODWORD(v53) = v81 ^ 0xDFFF8C31 ^ (v76 - 2 * (v76 & 0x5FFF8C35 ^ v60 & 4) - 536900559);
  LODWORD(v60) = v53 ^ v79;
  *(_DWORD *)(v52 - 120) = v53;
  int v474 = ((v53 ^ v79) >> 16);
  int v471 = ((unsigned __int16)((unsigned __int16)v53 ^ v79) >> 8);
  int v82 = *(_DWORD *)&v72[4 * (v474 ^ 0x2E)] ^ *(_DWORD *)&v74[4 * (v471 ^ 0x9B)] ^ 0x343DAB5B;
  *(_DWORD *)(v52 - 256) = v60;
  unsigned int v83 = (v82 - ((2 * v82) & 0xEA62CBBC) + 1966171614) ^ *(_DWORD *)&v71[4 * (v60 ^ 0xD2)];
  unsigned int v84 = v60 ^ 0x26373AA3;
  *(_DWORD *)(v52 - 192) = v60 >> 24;
  int v85 = (v83 - ((2 * v83) & 0xD5754D4) - 2035570070) ^ *(_DWORD *)&v73[4 * ((v60 >> 24) ^ 0x69)];
  unsigned __int8 v405 = v75 ^ v66 ^ (v54 - ((2 * v54) & 0xCC) - 26) ^ v69 ^ 0x4D;
  unsigned int v86 = v85 ^ v57 ^ 0x4D ^ 0x1EA5AD15;
  unsigned int v488 = v85 ^ v57 ^ 0x4D;
  unsigned int v516 = v86 ^ v53;
  unsigned int v87 = v86 ^ v53 ^ 0x533A569F;
  LODWORD(v60) = ((v86 ^ v53 ^ 0x8423A0FF)
                - 2 * (v87 & 0x14 ^ (v86 ^ v53 ^ 0x8423A0FF) & 0x52909BFE)
                + 1385208810) ^ v60 ^ 0x26373AA3;
  unsigned int v88 = v60 ^ 0x9547167F;
  int v495 = ((v60 ^ 0x9547167F) >> 16);
  int v531 = ((unsigned __int16)((unsigned __int16)v60 ^ 0x167F) >> 8);
  int v89 = *(_DWORD *)&v72[4 * (v495 ^ 0x89)] ^ *(_DWORD *)&v74[4 * (v531 ^ 0x3A)] ^ 0x343DAB5B;
  int v508 = v60;
  LODWORD(v60) = (v89 - ((2 * v89) & 0xEA62CBBC) + 1966171614) ^ *(_DWORD *)&v71[4 * (v60 ^ 0xE4)];
  *(_DWORD *)(v52 - 200) = HIBYTE(v88);
  int v90 = (v60 - ((2 * v60) & 0xD5754D4) - 2035570070) ^ *(_DWORD *)&v73[4 * (HIBYTE(v88) ^ 0x1D)];
  unsigned int v477 = v85 ^ v81;
  unsigned int v541 = (v90 - ((2 * v90) & 0x9A9042A4) - 850910894) ^ v85 ^ v81;
  *(_DWORD *)(v52 - 232) = v541 ^ 0xCD482152;
  unsigned int v547 = v541 ^ 0xCD482152 ^ v488;
  unsigned int v91 = ((v547 ^ 0xFE25CD6D) + 1385208810 - 2 * ((v547 ^ 0xFE25CD6D) & 0x52909BFA ^ v547 & 0x10)) ^ v84;
  int v92 = ((unsigned __int16)(((v547 ^ 0xCD6D) - 25622 - 2 * ((v547 ^ 0xCD6D) & 0x9BFA ^ v547 & 0x10)) ^ v84) >> 8);
  *(_DWORD *)(v52 - 208) = v92;
  int v93 = *(_DWORD *)&v74[4 * (v92 ^ 0x6F)];
  *(_DWORD *)(v52 - 216) = BYTE2(v91);
  int v94 = v93 ^ *(_DWORD *)&v72[4 * (BYTE2(v91) ^ 0xA8)] ^ 0x343DAB5B;
  *(_DWORD *)(v52 - 240) = HIBYTE(v91);
  int v95 = (v94 - ((2 * v94) & 0xD5754D4) - 2035570070) ^ *(_DWORD *)&v73[4 * (HIBYTE(v91) ^ 0x85)];
  int v522 = (((v547 ^ 0x6D) - 22 - 2 * ((v547 ^ 0x6D) & 0xFA ^ v547 & 0x10)) ^ v84);
  unsigned int v96 = (v95 - ((2 * v95) & 0xEA62CBBC) + 1966171614) ^ *(_DWORD *)&v71[4 * (v522 ^ 0x25)];
  int v97 = (v96 - ((2 * v96) & 0x48A50178) - 1538096964) ^ v86;
  unsigned int v529 = v547 ^ v87;
  unsigned int v410 = v97;
  LODWORD(v54) = v97 ^ v547 ^ v87;
  *(_DWORD *)(v52 - 176) = v54;
  *(_DWORD *)(v52 - 248) = v91;
  unsigned int v98 = v91 ^ v54 ^ 0xC06D4163;
  unsigned int v441 = HIBYTE(v98);
  int v423 = BYTE2(v98);
  int v99 = *(_DWORD *)&v72[4 * (BYTE2(v98) ^ 0x89)] ^ *(_DWORD *)&v73[4 * (HIBYTE(v98) ^ 0x1D)];
  int v429 = BYTE1(v98);
  unsigned int v100 = ((v99 ^ 0xAFA6BFD7) - 2 * ((v99 ^ 0xAFA6BFD7) & 0x1D30BEEE ^ v99 & 8) + 489733862) ^ *(_DWORD *)&v74[4 * (BYTE1(v98) ^ 0x3A)];
  int v419 = (((v547 ^ 0x6D) - 22 - 2 * ((v547 ^ 0x6D) & 0xFA ^ v547 & 0x10)) ^ v84 ^ v54);
  int v101 = *(_DWORD *)&v71[4 * (v419 ^ 0xF8)];
  *(_DWORD *)(v52 - 168) = v541 ^ 0xCD482152 ^ v96;
  LODWORD(v55) = v541 ^ 0xCD482152 ^ v96 ^ v101 ^ (v100 - ((2 * v100) & 0xEA62CBBC) + 1966171614);
  unsigned __int8 v435 = BYTE2(v97) ^ 0x16;
  unsigned int v102 = v55 ^ v97 ^ 0x7C166C11;
  int v539 = (int)v55;
  unsigned int v103 = v102 ^ v91;
  unsigned int v104 = (v102 ^ v91) >> 24;
  *(_DWORD *)(v52 - 224) = v104;
  unsigned int v105 = (v57 ^ 0xBAF72DE4)
       - 2 * ((v57 ^ 0x4D) & 6 ^ (v57 ^ 0xBAF72DE4) & 0x5FFF8C37);
  int v543 = v103;
  int32x4_t v106 = v71;
  unsigned int v107 = *(_DWORD *)&v73[4 * (v104 ^ 0x9B)] ^ *(_DWORD *)&v71[4 * (v103 ^ 0x31)] ^ 0xF39ACFB4;
  int v483 = (v103 >> 8) ^ 0x86839A;
  int v485 = BYTE1(v103) ^ 0x9A;
  int v108 = (v107 - ((2 * v107) & 0x3A617DCC) + 489733862) ^ *(_DWORD *)&v74[4 * (BYTE1(v103) ^ 0xA0)];
  int v480 = BYTE2(v103);
  int v109 = *(_DWORD *)&v72[4 * (BYTE2(v103) ^ 0xA)];
  unsigned int v110 = (((v108 - ((2 * v108) & 0x521A2B7A) + 688723389) ^ v109)
        - ((2 * ((v108 - ((2 * v108) & 0x521A2B7A) + 688723389) ^ v109)) & 0x583621BA)
        - 1407512355) ^ v55;
  *(_DWORD *)(v52 - 132) = v110;
  int v111 = v110 ^ 0x51988A77 ^ v102;
  int v112 = v110 ^ 0x51988A77;
  __int16 v448 = (((v108 - ((2 * v108) & 0x2B7A) + 5565) ^ v109)
        - ((2 * ((v108 - ((2 * v108) & 0x2B7A) + 5565) ^ v109)) & 0x21BA)
        + 4317) ^ (unsigned __int16)v55 ^ 0x8A77;
  unsigned int v537 = v102 ^ v54;
  unsigned int v519 = v102;
  int v113 = v102 ^ v54 ^ 0xDF2C2ADB;
  *(_DWORD *)(v52 - 136) = v113;
  int v114 = ((v112 ^ v102 ^ 0x5A137D54) - 2 * ((v112 ^ v102 ^ 0x5A137D54) & 0x9125B0F ^ (v112 ^ v102) & 9) + 152197894) ^ v113;
  *(_DWORD *)(v52 - 140) = v114;
  unsigned int v115 = ((v114 ^ 0x559DEBA4) - 2 * ((v114 ^ 0x559DEBA4) & 0x3EA4CE16 ^ v114 & 2) - 1096495596) ^ v103 ^ 0x382754BE ^ 0x479AB031;
  int v512 = (((v114 ^ 0xA4) - 2 * ((v114 ^ 0xA4) & 0x16 ^ v114 & 2) + 20) ^ v103 ^ 0xBE);
  int v545 = BYTE1(v115);
  LODWORD(v71) = *(_DWORD *)&v74[4 * (BYTE1(v115) ^ 0x3A)] ^ *(_DWORD *)&v71[4 * (v512 ^ 0xAA)] ^ 0x6801DB38;
  int v116 = BYTE2(v115);
  LODWORD(v71) = (v71 + 688723389 + (~(2 * v71) | 0xADE5D485) + 1) ^ *(_DWORD *)&v72[4 * (BYTE2(v115) ^ 0x89)];
  unsigned int v465 = HIBYTE(v115);
  LODWORD(v53) = (v71 - ((2 * v71) & 0xD5754D4) - 2035570070) ^ *(_DWORD *)&v73[4
                                                                                              * (HIBYTE(v115) ^ 0x1D)];
  LODWORD(v71) = v53 ^ v102;
  unsigned int v117 = ((v71 ^ 0xA6C48CD5)
        - 2 * ((v71 ^ 0xA6C48CD5) & 0x3EA4CE16 ^ v71 & 2)
        - 1096495596) ^ v103 ^ 0x382754BE;
  unsigned int v118 = HIBYTE(v117);
  int v119 = BYTE1(v117);
  LODWORD(v57) = *(_DWORD *)&v74[4 * (BYTE1(v117) ^ 0x6F)] ^ *(_DWORD *)&v73[4 * (HIBYTE(v117) ^ 5)];
  int v499 = (((v53 ^ v102 ^ 0xD5)
                          - 2 * ((v53 ^ v102 ^ 0xD5) & 0x16 ^ (v53 ^ v102) & 2)
                          + 20) ^ v103 ^ 0xBE);
  LODWORD(v57) = ((v57 ^ 0x9B9B148C)
                - 2 * ((v57 ^ 0x9B9B148C) & 0x753165DF ^ v57 & 1)
                + 1966171614) ^ *(_DWORD *)&v106[4 * (v499 ^ 0x25)];
  LODWORD(v60) = v112 ^ v53;
  int v120 = BYTE2(v117);
  LODWORD(v57) = v112 ^ v53 ^ *(_DWORD *)&v72[4 * (BYTE2(v117) ^ 0xA8)] ^ (v57
                                                                                       - ((2 * v57) & 0x521A2B7A)
                                                                                       + 688723389);
  unsigned int v121 = v114 ^ 0xD20233A4;
  unsigned int v122 = v114 ^ 0xD20233A4 ^ v57;
  int v123 = v122 ^ v117;
  unsigned int v124 = v122;
  *(_DWORD *)(v52 - 184) = v122;
  int v535 = ((unsigned __int16)(v122 ^ v117) >> 8);
  LODWORD(v54) = *(_DWORD *)&v74[4 * (v535 ^ 0x44)];
  unsigned int v417 = (v122 ^ v117) >> 24;
  int v125 = *(_DWORD *)&v73[4 * (v417 ^ 0x47)];
  int v454 = v533 ^ (v105 - 536900559);
  int v413 = (v122 ^ ((v71 ^ 0xD5)
                                 - 2 * ((v71 ^ 0xD5) & 0x16 ^ v71 & 2)
                                 + 20) ^ v103 ^ 0xBE);
  int v126 = ((v125 ^ v54 ^ 0x9B9B148C) - 2 * ((v125 ^ v54 ^ 0x9B9B148C) & 0x753165DF ^ (v125 ^ v54) & 1) + 1966171614) ^ *(_DWORD *)&v106[4 * (v413 ^ 0xD5)];
  int v397 = BYTE2(v123);
  int v127 = (v126 - ((2 * v126) & 0x521A2B7A) + 688723389) ^ *(_DWORD *)&v72[4 * (BYTE2(v123) ^ 0xCB)];
  HIDWORD(v526) = v57 ^ 0x3733B356 ^ (v127 - ((2 * v127) & 0x6F893DFE) - 1211851009);
  unsigned int v399 = v57 ^ v53 ^ v102;
  unsigned int v401 = v57;
  LODWORD(v526) = v399 ^ 0x9FB6F5DB ^ (HIDWORD(v526) - ((2 * HIDWORD(v526)) & 0x7628759E) - 1156302129);
  HIDWORD(v525) = v124 ^ 0x4018996 ^ v526;
  LODWORD(v525) = (HIDWORD(v525) - ((2 * HIDWORD(v525)) & 0x5625ED5E) - 1424820561) ^ v123;
  int v128 = *(_DWORD *)(v52 - 144);
  uint64_t v129 = (uint64_t)*(&off_1F08D3590 + v128 - 104);
  int v130 = (((v60 ^ 0x1B9155BD) >> 16)
        + 763200415
        - ((2 * ((v60 ^ 0x1B9155BD) >> 16) + 25990232) & 0x10C12E6)) ^ *(_DWORD *)(v129 + 4 * (((v60 ^ 0x1B9155BD) >> 16) ^ 0x2Du));
  LODWORD(v54) = ((v120 ^ 0x89) + 763200415 - ((2 * (v120 ^ 0x89) + 25990232) & 0x10C12E6)) ^ *(_DWORD *)(v129 + 4 * (v120 ^ 0xA4u));
  unint64_t v131 = (char *)*(&off_1F08D3590 + (v128 ^ 0xF3)) - 12;
  int v132 = (v130 - ((2 * v130) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (BYTE1(v60) ^ 0x47)];
  uint64_t v133 = (char *)*(&off_1F08D3590 + (v128 ^ 0x8B)) - 8;
  int v134 = (v54 - ((2 * v54) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4 * (v118 ^ 0xCC)];
  unint64_t v135 = (char *)*(&off_1F08D3590 + v128 - 151) - 8;
  int v136 = *(_DWORD *)&v135[4 * ((v121 ^ v53 ^ v102) ^ 0x53)];
  __int16 v392 = v121 ^ (unsigned __int16)v53 ^ v102;
  int v137 = *(_DWORD *)(v129 + 4 * (((v121 ^ v71) >> 16) ^ 0xAAu)) ^ *(_DWORD *)&v133[4 * (((v121 ^ v71) >> 24) ^ 0x3E)] ^ ((((v121 ^ v71) >> 16) ^ 0x87) + 763200415 - ((2 * (((v121 ^ v71) >> 16) ^ 0x87) + 25990232) & 0x10C12E6)) ^ (181304767 * v136 - ((362609534 * v136 + 1816197628) & 0x718971B2) + 786773463);
  int v138 = *(_DWORD *)&v135[4 * ((v53 ^ v102) ^ 0x74)];
  int v139 = (181304767 * v138 - ((362609534 * v138 + 1816197628) & 0x59087916) - 1566262903) ^ *(_DWORD *)&v131[4 * (((unsigned __int16)((unsigned __int16)v53 ^ v102) >> 8) ^ 0x5A)];
  int v514 = v139 - ((2 * v139) & 0x718971B2);
  unsigned int v510 = ((v53 ^ v102) >> 24) ^ 0xB2;
  unsigned int v501 = (BYTE2(v71) ^ 0x4C) + 763200416 + ((2 * (BYTE2(v71) ^ 0x4C) + 88) & 0x2E6 ^ 0xFEF3EFFF);
  unsigned int v490 = v119 ^ 0xB0;
  int v493 = ((v53 ^ v102) >> 16);
  int v505 = v134 - ((2 * v134) & 0x59087916);
  int v503 = v137 - ((2 * v137) & 0x59087916);
  int v534 = (v132 - ((2 * v132) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4 * ((v60 ^ 0x1B9155BD) >> 24)] ^ (181304767 * *(_DWORD *)&v135[4 * (v60 ^ 0x7D)] + 1981840638);
  LODWORD(v60) = *(_DWORD *)(v129 + 4 * (((v454 ^ 0xE9B45E6C) >> 16) ^ 0xF5u)) ^ ((((v454 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 763200416 + ((2 * (((v454 ^ 0xE9B45E6C) >> 16) ^ 0xD8) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v71) = *(_DWORD *)(v52 - 120) ^ 0x31676F78;
  unsigned int v140 = *(_DWORD *)(v129 + 4 * (BYTE2(v71) ^ 0x7Bu)) ^ ((BYTE2(v71) ^ 0x56)
                                                         + 763200416
                                                         + ((2 * (BYTE2(v71) ^ 0x56) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v71) = (v140 - ((2 * v140) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4 * (v71 >> 24)];
  unsigned int v141 = *(_DWORD *)(v129 + 4 * (v474 ^ 0x34u)) ^ ((v474 ^ 0x19)
                                                   + 763200416
                                                   + ((2 * (v474 ^ 0x19) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v53) = (v141 - ((2 * v141) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (v471 ^ 5)];
  int v472 = v71 - ((2 * v71) & 0x59087916);
  int v475 = v53 - ((2 * v53) & 0x718971B2);
  LODWORD(v53) = *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 152) ^ 0xDF)];
  LODWORD(v71) = *(_DWORD *)(v52 - 152) ^ 0x5A18571F;
  LODWORD(v53) = *(_DWORD *)&v133[4 * (v71 >> 24)] ^ ((BYTE2(v71) ^ 0xC1)
                                                                  + 763200416
                                                                  + ((2 * (BYTE2(v71) ^ 0xC1) + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)(v129 + 4 * (BYTE2(v71) ^ 0xECu)) ^ (181304767 * v53 - ((362609534 * v53 + 1816197628) & 0x718971B2) + 786773463);
  int v468 = v53 - ((2 * v53) & 0x59087916);
  int v142 = *(_DWORD *)&v133[4 * ((v454 ^ 0xE9B45E6C) >> 24)] ^ (v60 - ((2 * v60) & 0x718971B2) - 1195067175);
  unsigned int v407 = v454 ^ 0xAC;
  int v467 = v142 - ((2 * v142) & 0x59087916);
  LODWORD(v53) = *(_DWORD *)(v129 + 4 * (v116 ^ 0xDEu)) ^ ((v116 ^ 0xF3)
                                                           + 763200415
                                                           - ((2 * (v116 ^ 0xF3) + 25990232) & 0x10C12E6));
  LODWORD(v60) = *(_DWORD *)(v129 + 4 * (((v111 ^ 0x35C48CD5u) >> 16) ^ 0xFEu)) ^ ((((v111 ^ 0x35C48CD5u) >> 16) ^ 0xD3) + 763200416 + ((2 * (((v111 ^ 0x35C48CD5u) >> 16) ^ 0xD3) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  int v143 = *(_DWORD *)&v135[4 * (v121 ^ 0xC5)];
  LODWORD(v53) = (v53 - ((2 * v53) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4 * (v465 ^ 0x36)];
  unsigned int v452 = BYTE1(v454) ^ 0xB4;
  int v144 = BYTE2(*(_DWORD *)(v52 - 132));
  unsigned int v145 = *(_DWORD *)(v129 + 4 * (v144 ^ 0xB4u)) ^ ((v144 ^ 0x99)
                                                   + 763200416
                                                   + ((2 * (v144 ^ 0x99) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  int v146 = (v145 - ((2 * v145) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (HIBYTE(v448) ^ 0x8B)];
  int v455 = v53 - ((2 * v53) & 0x59087916);
  LODWORD(v53) = *(_DWORD *)(v52 - 140) ^ 0xB09DEBA4;
  LODWORD(v53) = *(_DWORD *)&v131[4 * (BYTE1(v53) ^ 0x20)] ^ ((BYTE2(v53) ^ 0xD7)
                                                            + 763200415
                                                            - ((2 * (BYTE2(v53) ^ 0xD7) + 25990232) & 0x10C12E6)) ^ *(_DWORD *)(v129 + 4 * (BYTE2(v53) ^ 0xFAu)) ^ ((~(362609534 * v143 + 1816197628) | 0xA6F786E9) + 181304767 * v143 - 1566262902);
  LODWORD(v71) = (v60 - ((2 * v60) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4
                                                                                                * ((v111 ^ 0x35C48CD5u) >> 24)] ^ (181304767 * *(_DWORD *)&v135[4 * (v111 ^ 0x3D)] + 1981840638);
  unsigned int v426 = ((unsigned __int16)(v111 ^ 0x8EA4) >> 8) ^ 0x14;
  unsigned int v395 = v448 ^ 0xA3;
  int v443 = v71 - ((2 * v71) & 0x59087916);
  int v449 = v53 - ((2 * v53) & 0x718971B2);
  unsigned int v438 = v436 ^ 0x2BEAE26B;
  unsigned int v147 = *(_DWORD *)(v129 + 4 * (((v436 ^ 0x2BEAE26Bu) >> 16) ^ 0xECu)) ^ ((((v436 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                            + 763200416
                                                                                            + ((2
                                                                                              * (((v436 ^ 0x2BEAE26Bu) >> 16) ^ 0xC1)
                                                                                              + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ (181304767 * *(_DWORD *)&v135[4 * (v436 ^ 0x1E)] + 1981840638);
  int v148 = (v147 - ((2 * v147) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (BYTE1(v436) ^ 8)];
  LODWORD(v53) = *(_DWORD *)(v129 + 4 * (v446 ^ 0x6Bu)) ^ ((v446 ^ 0x46)
                                                           + 763200416
                                                           + ((2 * (v446 ^ 0x46) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v71) = *(_DWORD *)&v135[4 * (v405 ^ 0x55)];
  int v447 = v148 - ((2 * v148) & 0x718971B2);
  int v403 = BYTE2(*(_DWORD *)(v52 - 128));
  int v437 = (v403 ^ 0xA7) + 763200415 - ((2 * (v403 ^ 0xA7) + 25990232) & 0x10C12E6);
  int v149 = (v53 - ((2 * v53) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (v463 ^ 0x85)] ^ (181304767 * *(_DWORD *)&v135[4 * (v460 ^ 0xC2)] + 1981840638);
  LODWORD(v55) = *(_DWORD *)(v52 - 160);
  int v464 = v149 - ((2 * v149) & 0x718971B2);
  unsigned int v150 = (181304767 * v71 - ((362609534 * v71 + 1816197628) & 0x718971B2) + 786773463) ^ ((BYTE2(v55) ^ 0xBA) + 763200416 + ((2 * (BYTE2(v55) ^ 0xBA) + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)&v133[4 * ((v55 >> 24) ^ 0x2F)] ^ *(_DWORD *)(v129 + 4 * (BYTE2(v55) ^ 0x97u));
  unsigned int v406 = v150 - ((2 * v150) & 0x59087916);
  int v151 = *(_DWORD *)(v52 - 176);
  unsigned int v152 = *(_DWORD *)(v129 + 4 * (BYTE2(v151) ^ 0x9Au)) ^ ((BYTE2(v151) ^ 0xB7)
                                                          + 763200416
                                                          + ((2 * (BYTE2(v151) ^ 0xB7) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v71) = *(_DWORD *)(v129 + 4 * (BYTE2(*(_DWORD *)(v52 - 168)) ^ 0x56u)) ^ ((BYTE2(*(_DWORD *)(v52 - 168)) ^ 0x7B)
                                                                                    + 763200415
                                                                                    - ((2
                                                                                      * (BYTE2(*(_DWORD *)(v52 - 168)) ^ 0x7B)
                                                                                      + 25990232) & 0x10C12E6));
  int v153 = (v152 - ((2 * v152) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (BYTE1(v151) ^ 1)] ^ (181304767 * *(_DWORD *)&v135[4 * (v151 ^ 0x10)] + 1981840638);
  int v154 = *(_DWORD *)&v135[4 * (v410 ^ 0xFB)];
  int v155 = (181304767 * v154 - ((362609534 * v154 + 1816197628) & 0x59087916) - 1566262903) ^ *(_DWORD *)&v131[4 * (BYTE1(v410) ^ 0xEF)];
  HIDWORD(v398) = v153 - ((2 * v153) & 0x718971B2);
  HIDWORD(v396) = v155 - ((2 * v155) & 0x718971B2);
  int v156 = (v71 - ((2 * v71) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4
                                                                                        * (HIBYTE(*(_DWORD *)(v52 - 168)) ^ 0xD9)] ^ (181304767 * *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 168) ^ 0x79)] + 1981840638);
  LODWORD(v71) = *(_DWORD *)(v129 + 4 * (v423 ^ 0x86u)) ^ ((v423 ^ 0xAB)
                                                           + 763200416
                                                           + ((2 * (v423 ^ 0xAB) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v71) = (v71 - ((2 * v71) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4 * v441];
  unsigned int v394 = v429 ^ 0xEE;
  unsigned int v389 = v419 ^ 0x5E;
  int v430 = v71 - ((2 * v71) & 0x59087916);
  int v424 = v156 - ((2 * v156) & 0x59087916);
  int v420 = v435;
  unsigned int v461 = (v435 ^ 0x65) + 763200416 + ((2 * (v435 ^ 0x65) + 88) & 0x2E6 ^ 0xFEF3EFFF);
  unsigned int v157 = *(_DWORD *)(v129 + 4 * (v397 ^ 0x8Bu)) ^ ((v397 ^ 0xA6)
                                                   + 763200416
                                                   + ((2 * (v397 ^ 0xA6) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v398) = BYTE2(*(_DWORD *)(v52 - 184));
  int v442 = (v398 ^ 0x8F) + 763200415 - ((2 * (v398 ^ 0x8F) + 25990232) & 0x10C12E6);
  unsigned int v432 = HIBYTE(v410) ^ 0xE8;
  LODWORD(v60) = *(_DWORD *)(v129 + 4 * (BYTE2(v401) ^ 0xE8u)) ^ ((BYTE2(v401) ^ 0xC5)
                                                                  + 763200415
                                                                  - ((2 * (BYTE2(v401) ^ 0xC5) + 25990232) & 0x10C12E6));
  unsigned int v411 = v399 ^ 0x44039AAA;
  LODWORD(v60) = (181304767 * *(_DWORD *)&v135[4 * (v401 ^ 0xCA)] + 1981840638) ^ *(_DWORD *)&v133[4 * (HIBYTE(v401) ^ 0x8E)] ^ (v60 - ((2 * v60) & 0x718971B2) - 1195067175);
  LODWORD(v71) = (181304767 * *(_DWORD *)&v135[4 * (v399 ^ 0xDB)] + 1981840638) ^ (((v399 ^ 0x44039AAA) >> 16)
                                                                                                  + 763200416
                                                                                                  + ((2 * ((v399 ^ 0x44039AAA) >> 16) + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)(v129 + 4 * (((v399 ^ 0x44039AAA) >> 16) ^ 0x2Du));
  unsigned int v391 = BYTE1(v57) ^ 0x16;
  int v402 = v60 - ((2 * v60) & 0x59087916);
  LODWORD(v57) = (v71 - ((2 * v71) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4
                                                                                               * (BYTE1(v399) ^ 0xC0)];
  int v158 = *(_DWORD *)&v133[4 * (v417 ^ 0x22)] ^ (181304767 * *(_DWORD *)&v135[4 * (v413 ^ 0xFE)] + 1981840638) ^ (v157 - ((2 * v157) & 0x718971B2) - 1195067175);
  int v414 = v158 - ((2 * v158) & 0x59087916);
  int v418 = v57 - ((2 * v57) & 0x718971B2);
  int v159 = *(_DWORD *)&v135[4 * (v477 ^ 0xEC)];
  int v160 = *(_DWORD *)&v135[4 * (v488 ^ 0xE6)];
  LODWORD(v57) = *(_DWORD *)(v129 + 4 * (v495 ^ 0x32u)) ^ ((v495 ^ 0x1F)
                                                           + 763200416
                                                           + ((2 * (v495 ^ 0x1F) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  unsigned int v161 = *(_DWORD *)&v133[4 * (HIBYTE(v477) ^ 0xCA)] ^ ((BYTE2(v477) ^ 0x2F)
                                                      + 763200416
                                                      + ((2 * (BYTE2(v477) ^ 0x2F) + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)(v129 + 4 * (BYTE2(v477) ^ 2u)) ^ (181304767 * v159 + 786773464 + (~(362609534 * v159 + 1816197628) | 0x8E768E4D));
  LODWORD(v53) = (v57 - ((2 * v57) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (v531 ^ 0x8C)] ^ (181304767 * *(_DWORD *)&v135[4 * (v508 ^ 0xD9)] + 1981840638);
  LODWORD(v57) = *(_DWORD *)&v133[4 * ((v488 ^ 0x49A657C7) >> 24)] ^ ((((v488 ^ 0x49A657C7) >> 16) ^ 0x35)
                                                                    + 763200416
                                                                    + ((2
                                                                      * (((v488 ^ 0x49A657C7) >> 16) ^ 0x35)
                                                                      + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)(v129 + 4 * (((v488 ^ 0x49A657C7) >> 16) ^ 0x18u)) ^ (181304767 * v160 - ((362609534 * v160 + 1816197628) & 0x718971B2) + 786773463);
  LODWORD(v60) = *(_DWORD *)(v129 + 4 * (((v516 ^ 0xBADEB680) >> 16) ^ 0x2Du)) ^ (((v516 ^ 0xBADEB680) >> 16) + 763200416 + ((2 * ((v516 ^ 0xBADEB680) >> 16) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  int v532 = (v161 - ((2 * v161) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4 * (BYTE1(v477) ^ 0x2E)];
  int v509 = v53 - ((2 * v53) & 0x718971B2);
  int v162 = (v60 - ((2 * v60) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4
                                                                                        * ((v516 ^ 0xBADEB680) >> 24)] ^ (181304767 * *(_DWORD *)&v135[4 * (v516 ^ 0x10)] + 1981840638);
  unsigned int v478 = BYTE1(v516) ^ 0x36;
  int v517 = v57 - ((2 * v57) & 0x59087916);
  int v496 = v162 - ((2 * v162) & 0x59087916);
  LODWORD(v53) = *(_DWORD *)(v129 + 4 * (v480 ^ 0xC1u)) ^ ((v480 ^ 0xEC)
                                                           + 763200416
                                                           + ((2 * (v480 ^ 0xEC) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  int v387 = (v53 - ((2 * v53) & 0x59087916) + 746863755) ^ *(_DWORD *)&v131[4
                                                                                       * ((v485
                                                                                         - ((2 * v483) & 0x166)
                                                                                         + 179) ^ 0x54)];
  int v163 = *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 136) ^ 0xF6)];
  int v164 = *(_DWORD *)&v135[4 * (v522 ^ 0x74)];
  int v523 = 362609534 * v164 + 1816197628;
  int v386 = 181304767 * v164 + 786773464;
  int v165 = *(_DWORD *)&v135[4 * v407];
  LODWORD(v60) = *(_DWORD *)&v135[4 * v389];
  LODWORD(v53) = *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 184) ^ 0x78)];
  unsigned int v166 = v541 ^ 0x5CEAEE46;
  int v167 = *(_DWORD *)&v135[4 * (v543 ^ 0xE2)];
  int v168 = *(_DWORD *)&v135[4 * (v519 ^ 0x68)];
  LODWORD(v73) = v539;
  int v169 = *(_DWORD *)&v135[4 * (v539 ^ 0x75)];
  int v170 = *(_DWORD *)&v135[4 * (v529 ^ 0x22)];
  int v171 = *(_DWORD *)&v135[4 * (v541 ^ 0x52 ^ v488 ^ 0x2A)];
  LODWORD(v55) = *(_DWORD *)&v135[4 * (v541 ^ 0x7F)];
  int v500 = 181304767 * *(_DWORD *)&v135[4 * (v499 ^ 0x60)] + 1981840638;
  int v544 = 181304767 * *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 256) ^ 0xFB)] + 1981840638;
  int v408 = 181304767 * *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 120) ^ 0xB8)] + 1981840638;
  int v542 = 181304767 * v165 + 1981840638;
  int v486 = 181304767 * *(_DWORD *)&v135[4 * v395] + 1981840638;
  int v481 = 181304767 * *(_DWORD *)&v135[4 * (v512 ^ 0xF0)] + 1981840638;
  *(_DWORD *)(v52 - 256) = 181304767 * *(_DWORD *)&v135[4 * (*(_DWORD *)(v52 - 128) ^ 0x57)]
                         + 1981840638;
  LODWORD(v400) = 181304767 * v60 + 1981840638;
  HIDWORD(v388) = 181304767 * v53 + 1981840638;
  int v484 = 181304767 * v169 + 1981840638;
  int v172 = 181304767 * v171 + 1981840638;
  LODWORD(v396) = 181304767 * v55 + 1981840638;
  LODWORD(v135) = (181304767 * v163 - ((362609534 * v163 + 1816197628) & 0x718971B2) + 786773463) ^ *(_DWORD *)&v133[4 * (HIBYTE(v537) ^ 0x93)];
  HIDWORD(a3) = (v387 ^ (181304767 * v167 + 1981840638)) - ((2 * (v387 ^ (181304767 * v167 + 1981840638))) & 0x718971B2);
  unsigned int v173 = v519 ^ 0xEEA2BFA8;
  int v174 = v135 - ((2 * v135) & 0x59087916);
  LODWORD(v135) = *(_DWORD *)(v129 + 4 * (BYTE2(v173) ^ 0x86u)) ^ ((BYTE2(v173) ^ 0xAB)
                                                                   + 763200416
                                                                   + ((2 * (BYTE2(v173) ^ 0xAB) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v55) = (181304767 * v168 + 1981840638) ^ *(_DWORD *)&v131[4 * (BYTE1(v519) ^ 0x55)] ^ (v135
                                                                                               - ((2 * v135) & 0x59087916)
                                                                                               + 746863755);
  int v175 = ((v539 ^ 0x231B9DB5u) >> 16);
  LODWORD(v390) = (v175 ^ 0xC1) + 763200415 - ((2 * (v175 ^ 0xC1) + 25990232) & 0x10C12E6);
  int v520 = v55 - ((2 * v55) & 0x718971B2);
  LODWORD(v55) = BYTE2(v537);
  unsigned int v538 = (BYTE2(v537) ^ 0x29) + 763200416 + ((2 * (BYTE2(v537) ^ 0x29) + 88) & 0x2E6 ^ 0xFEF3EFFF);
  LODWORD(v135) = (v386 + (~v523 | 0x8E768E4D)) ^ *(_DWORD *)&v133[4 * (*(_DWORD *)(v52 - 240) ^ 0x7B)];
  unsigned int v176 = *(_DWORD *)(v129 + 4 * (BYTE2(v529) ^ 0xC4u)) ^ ((BYTE2(v529) ^ 0xE9)
                                                          + 763200416
                                                          + ((2 * (BYTE2(v529) ^ 0xE9) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v53) = ((v176 ^ (181304767 * v170 + 1981840638))
                - ((2 * (v176 ^ (181304767 * v170 + 1981840638))) & 0x59087916)
                + 746863755) ^ *(_DWORD *)&v131[4 * (BYTE1(v529) ^ 0x52)];
  unsigned int v177 = *(_DWORD *)(v129 + 4 * (BYTE2(v166) ^ 0x3Cu)) ^ ((BYTE2(v166) ^ 0x11)
                                                          + 763200416
                                                          + ((2 * (BYTE2(v166) ^ 0x11) + 88) & 0x2E6 ^ 0xFEF3EFFF));
  LODWORD(v57) = v172 ^ ((BYTE2(v547) ^ 0x37) + 763200416 + ((2 * (BYTE2(v547) ^ 0x37) + 88) & 0x2E6 ^ 0xFEF3EFFF)) ^ *(_DWORD *)(v129 + 4 * (BYTE2(v547) ^ 0x1Au));
  LODWORD(v57) = (v57 - ((2 * v57) & 0x718971B2) - 1195067175) ^ *(_DWORD *)&v133[4
                                                                                                * (HIBYTE(v547) ^ 0xF9)];
  int v494 = *(_DWORD *)(v129 + 4 * (v493 ^ 0x61u));
  *(_DWORD *)(v52 - 240) = *(_DWORD *)(v129 + 4 * (v403 ^ 0x8Au));
  int v421 = *(_DWORD *)(v129 + 4 * (v420 ^ 0x48u));
  LODWORD(v388) = *(_DWORD *)(v129 + 4 * (v398 ^ 0xA2));
  LODWORD(v404) = *(_DWORD *)(v129 + 4 * (v175 ^ 0xECu));
  unsigned int v178 = v545 ^ 0x1A;
  LODWORD(v398) = *(_DWORD *)(v129 + 4 * (v55 ^ 4));
  LODWORD(v60) = *(_DWORD *)(v52 - 216);
  *(_DWORD *)(v52 - 216) = *(_DWORD *)(v129 + 4 * (v60 ^ 0x1A));
  LODWORD(v55) = ((*(_DWORD *)(v52 - 248) >> 15) & 0x58 ^ 0x48) + (v60 ^ 0x4C64A1B);
  HIDWORD(v385) = *(_DWORD *)&v131[4 * v490];
  int v491 = *(_DWORD *)&v131[4 * (HIBYTE(v392) ^ 0x8E)];
  *(_DWORD *)(v52 - 120) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 120)) ^ 0x85)];
  LODWORD(v393) = v55 - ((2 * v55) & 0x10C12E6) + 683096435;
  int v546 = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 152)) ^ 0xBD)];
  *(_DWORD *)(v52 - 152) = *(_DWORD *)&v131[4 * v452];
  LODWORD(v385) = *(_DWORD *)&v131[4 * v178];
  HIDWORD(v384) = *(_DWORD *)&v131[4 * v426];
  unsigned int v179 = *(_DWORD *)(v52 - 128);
  *(_DWORD *)(v52 - 248) = *(_DWORD *)&v131[4 * (BYTE1(v179) ^ 0xF5)];
  *(_DWORD *)(v52 - 160) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 160)) ^ 0xD6)];
  int v453 = *(_DWORD *)&v131[4 * v394];
  int v427 = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 168)) ^ 0xD7)];
  unsigned int v180 = *(_DWORD *)(v52 - 184);
  LODWORD(v55) = HIBYTE(v180) ^ 0xA6;
  LODWORD(v384) = *(_DWORD *)&v131[4 * (BYTE1(v180) ^ 0x76)];
  int v181 = *(_DWORD *)&v131[4 * v391];
  int v513 = *(_DWORD *)&v131[4 * (v535 ^ 0xBE)];
  *(_DWORD *)(v52 - 168) = *(_DWORD *)&v131[4 * (BYTE1(v488) ^ 0xB9)];
  *(_DWORD *)(v52 - 184) = *(_DWORD *)&v131[4 * v478];
  int v489 = *(_DWORD *)&v131[4 * (BYTE1(v539) ^ 0x77)];
  int v479 = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 136)) ^ 0xBC)];
  *(_DWORD *)(v52 - 208) = *(_DWORD *)&v131[4 * (*(_DWORD *)(v52 - 208) ^ 0x84)];
  int v536 = *(_DWORD *)&v131[4 * (BYTE1(v547) ^ 0x2E)];
  LODWORD(v106) = *(_DWORD *)&v131[4 * (BYTE1(*(_DWORD *)(v52 - 232)) ^ 0xC8)];
  int v506 = v505 + 746863755;
  int v504 = v503 + 746863755;
  *(_DWORD *)(v52 - 232) = v472 + 746863755;
  HIDWORD(v393) = v468 + 746863755;
  int v548 = v467 + 746863755;
  HIDWORD(v390) = v455 + 746863755;
  HIDWORD(v383) = v443 + 746863755;
  unsigned int v540 = v406 + 746863755;
  int v469 = v430 + 746863755;
  int v473 = v424 + 746863755;
  int v182 = v402 + 746863755;
  LODWORD(v383) = v414 + 746863755;
  int v456 = v517 + 746863755;
  int v444 = v496 + 746863755;
  HIDWORD(v404) = v135 - ((2 * v135) & 0x59087916) + 746863755;
  HIDWORD(v400) = v57 - ((2 * v57) & 0x59087916) + 746863755;
  int v497 = *(_DWORD *)&v133[4 * v510];
  *(_DWORD *)(v52 - 192) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v52 - 192) ^ 7)];
  HIDWORD(v380) = *(_DWORD *)&v133[4 * (HIBYTE(*(_DWORD *)(v52 - 132)) ^ 0xBD)];
  LODWORD(v381) = *(_DWORD *)&v133[4 * (HIBYTE(*(_DWORD *)(v52 - 140)) ^ 0xC7)];
  int v415 = *(_DWORD *)&v133[4 * (HIBYTE(v179) ^ 0xB8)];
  int v431 = *(_DWORD *)&v133[4 * HIBYTE(v438)];
  int v425 = *(_DWORD *)&v133[4 * (v458 ^ 0x4B)];
  LODWORD(v135) = v106 ^ (v177 - ((2 * v177) & 0x59087916) + 746863755);
  int v459 = *(_DWORD *)&v133[4 * (HIBYTE(*(_DWORD *)(v52 - 176)) ^ 0x8F)];
  LODWORD(v382) = *(_DWORD *)&v133[4 * v432];
  int v183 = *(_DWORD *)&v133[4 * v55];
  int v184 = *(_DWORD *)&v133[4 * HIBYTE(v411)];
  *(_DWORD *)(v52 - 200) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v52 - 200) ^ 0xAA)];
  *(_DWORD *)(v52 - 176) = *(_DWORD *)&v133[4 * ((v73 ^ 0x231B9DB5) >> 24)];
  HIDWORD(v382) = *(_DWORD *)&v133[4 * (*(_DWORD *)(v52 - 224) ^ 0x38)];
  HIDWORD(v381) = *(_DWORD *)&v133[4 * HIBYTE(v173)];
  LODWORD(v380) = *(_DWORD *)&v133[4 * (HIBYTE(v529) ^ 0x7D)];
  int v412 = *(_DWORD *)&v133[4 * HIBYTE(v166)];
  int v185 = v514 - 1195067175;
  int v439 = v475 - 1195067175;
  int v186 = v146 - ((2 * v146) & 0x718971B2) - 1195067175;
  int v187 = v449 - 1195067175;
  *(_DWORD *)(v52 - 224) = v447 - 1195067175;
  int v433 = v464 - 1195067175;
  int v450 = v509 - 1195067175;
  int v188 = v520 - 1195067175;
  int v189 = v53 - ((2 * v53) & 0x718971B2) - 1195067175;
  int v190 = v135 - ((2 * v135) & 0x718971B2) - 1195067175;
  int v191 = v534 ^ v532 ^ 0x6285F181;
  int v192 = v182 ^ v181 ^ v191;
  int v193 = *(_DWORD *)(v52 - 144);
  uint64_t v194 = (char *)*(&off_1F08D3590 + v193 - 93) - 12;
  unint64_t v195 = (char *)*(&off_1F08D3590 + v193 - 202) - 8;
  unint64_t v196 = (char *)*(&off_1F08D3590 + (v193 ^ 0xCB)) - 8;
  uint64_t v197 = (uint64_t)*(&off_1F08D3590 + (v193 ^ 0xF5));
  unsigned int v198 = (*(unsigned __int8 *)(v197 + (*(unsigned __int8 *)(v52 - 109) ^ 0x41)) ^ 0x1C) & 0xFF00FFFF | (((v196[*(unsigned __int8 *)(v52 - 111) ^ 0x40] + 55) ^ 0x5A) << 16) | ((v195[*(unsigned __int8 *)(v52 - 110) ^ 0xBBLL] ^ 0xC7) << 8) | ((v194[*(unsigned __int8 *)(v52 - 112) ^ 0x1ELL] ^ (*(unsigned __int8 *)(v52 - 112) - ((2 * *(unsigned __int8 *)(v52 - 112)) & 0xBC) - 34) ^ 0x84) << 24);
  v521 = v195;
  v524 = v194;
  int v199 = *(unsigned __int8 *)(v197 + (*(unsigned __int8 *)(v52 - 97) ^ 0x74)) ^ 0xBB | (((v196[*(unsigned __int8 *)(v52 - 99) ^ 0xF3] + 55) ^ 2) << 16) | ((v195[*(unsigned __int8 *)(v52 - 98) ^ 0x20] ^ 0x2D) << 8) | ((v194[*(unsigned __int8 *)(v52 - 100) ^ 0xF3] ^ (*(unsigned __int8 *)(v52 - 100) - ((2 * *(unsigned __int8 *)(v52 - 100)) & 0xBC) - 34) ^ 0x85) << 24);
  uint64_t v515 = v197;
  v518 = v196;
  unsigned int v200 = (*(unsigned __int8 *)(v197 + (*(unsigned __int8 *)(v52 - 105) ^ 0xE4)) ^ 0x2A) & 0xFF00FFFF | ((v194[*(unsigned __int8 *)(v52 - 108) ^ 0x3ELL] ^ (*(unsigned __int8 *)(v52 - 108) - ((2 * *(unsigned __int8 *)(v52 - 108)) & 0xBC) - 34) ^ 0xFFFFFFE1) << 24) | (((v196[*(unsigned __int8 *)(v52 - 107) ^ 0x27] + 55) ^ 0x96) << 16) | ((v195[*(unsigned __int8 *)(v52 - 106) ^ 9] ^ 0xC2) << 8);
  unsigned int v201 = (*(unsigned __int8 *)(v197 + (*(unsigned __int8 *)(v52 - 101) ^ 0xF2)) ^ 0x93) & 0xFF00FFFF | ((v194[*(unsigned __int8 *)(v52 - 104) ^ 0xD3] ^ (*(unsigned __int8 *)(v52 - 104) - ((2 * *(unsigned __int8 *)(v52 - 104)) & 0xBC) - 34) ^ 0xE0) << 24) | ((v195[*(unsigned __int8 *)(v52 - 102) ^ 0xBELL] ^ 0x65) << 8) & 0xFF00FFFF | (((v196[*(unsigned __int8 *)(v52 - 103) ^ 0xE9] + 55) ^ 0x8A) << 16);
  if ((v192 & 0x80) != 0) {
    int v202 = -128;
  }
  else {
    int v202 = 128;
  }
  *(_DWORD *)(v52 - 128) = v199 ^ 0x19D11F3A;
  *(_DWORD *)(v52 - 132) = v198 ^ 0xD2481418;
  *(_DWORD *)(v52 - 140) = v201 ^ 0xCA0D7707;
  *(_DWORD *)(v52 - 136) = v200 ^ 0x7F9A7A88;
  HIDWORD(v511) = v383 ^ v513;
  LODWORD(v511) = v183 ^ v442 ^ v384 ^ v388 ^ HIDWORD(v388);
  HIDWORD(v507) = (v418 - 1195067175) ^ v184;
  LODWORD(v507) = v500 ^ HIDWORD(v385) ^ v506;
  HIDWORD(v502) = v504 ^ v491;
  LODWORD(v502) = v497 ^ v501 ^ v494 ^ v185;
  HIDWORD(v498) = HIDWORD(v383) ^ HIDWORD(v384);
  LODWORD(v498) = HIDWORD(v390) ^ v385 ^ v481;
  HIDWORD(v492) = v186 ^ HIDWORD(v380) ^ v486;
  LODWORD(v492) = v187 ^ v381;
  HIDWORD(v487) = v489 ^ v390 ^ *(_DWORD *)(v52 - 176) ^ v404 ^ v484;
  LODWORD(v487) = v479 ^ v538 ^ v398 ^ (v174 + 746863755);
  HIDWORD(v482) = v188 ^ HIDWORD(v381);
  LODWORD(v482) = (HIDWORD(a3) - 1195067175) ^ HIDWORD(v382);
  HIDWORD(v476) = v473 ^ v427;
  LODWORD(v476) = v382 ^ v461 ^ v421 ^ (HIDWORD(v396) - 1195067175);
  HIDWORD(v470) = (HIDWORD(v398) - 1195067175) ^ v459;
  LODWORD(v470) = v400 ^ v453 ^ v469;
  HIDWORD(v466) = v396 ^ v412 ^ v190;
  LODWORD(v466) = HIDWORD(v400) ^ v536;
  HIDWORD(v462) = v189 ^ v380;
  LODWORD(v462) = *(_DWORD *)(v52 - 208) ^ v393 ^ *(_DWORD *)(v52 - 216) ^ HIDWORD(v404);
  HIDWORD(v457) = v450 ^ *(_DWORD *)(v52 - 200);
  LODWORD(v457) = *(_DWORD *)(v52 - 168) ^ v456;
  HIDWORD(v451) = v444 ^ *(_DWORD *)(v52 - 184);
  LODWORD(v451) = HIDWORD(v393) ^ v546;
  HIDWORD(v445) = *(_DWORD *)(v52 - 232) ^ *(_DWORD *)(v52 - 120) ^ v408;
  LODWORD(v445) = v542 ^ *(_DWORD *)(v52 - 152) ^ v548;
  HIDWORD(v440) = v544 ^ *(_DWORD *)(v52 - 192) ^ v439;
  LODWORD(v440) = v540 ^ *(_DWORD *)(v52 - 160);
  HIDWORD(v434) = *(_DWORD *)(v52 - 248) ^ v437 ^ v415 ^ *(_DWORD *)(v52 - 240) ^ *(_DWORD *)(v52 - 256);
  LODWORD(v434) = v433 ^ v425;
  HIDWORD(v428) = *(_DWORD *)(v52 - 224) ^ v431;
  LODWORD(v428) = (v202 + (v192 ^ 0x2497E332)) ^ v191;
  HIDWORD(v422) = (v193 + 904) ^ 0x4EB;
  LODWORD(v422) = (v193 + 904) ^ 0x41A;
  HIDWORD(v416) = (v193 + 904) ^ 0x4E1;
  LODWORD(v416) = (v193 + 904) ^ 0x4E3;
  HIDWORD(v409) = (v193 + 904) ^ 0x435;
  *(_DWORD *)(v52 - 120) = v193 + 904;
  LODWORD(v409) = (v193 + 904) ^ 0x4E6;
  int v203 = *(_DWORD *)(v52 - 120);
  *(_DWORD *)(v52 - 144) = v203 - 581;
  int v204 = v203;
  *(void *)(v52 - 176) = 13;
  LOBYTE(v203) = v203 - 69 + v196[a2[13] ^ 0xF3] + 31;
  *(void *)(v52 - 152) = 1;
  char v205 = v196[a2[1] ^ 0x57];
  *(void *)(v52 - 160) = 10;
  uint64_t v206 = a2[10] ^ 0xB6;
  *(void *)(v52 - 192) = 4;
  uint64_t v207 = a2[4];
  int v208 = v524[v207 ^ 0x9A];
  LODWORD(v206) = (v521[v206] ^ 0x48) << 8;
  *(void *)(v52 - 232) = 7;
  LODWORD(v207) = v208 ^ (v207 - ((2 * v207) & 0xBC) - 34) ^ 0xFFFFFFCF;
  uint64_t v209 = a2[7] ^ 0xD6;
  *(void *)(v52 - 216) = 2;
  LODWORD(v207) = *(unsigned __int8 *)(v197 + v209) ^ 0x79 | (v207 << 24);
  LODWORD(v209) = v521[a2[2]] ^ 0x5A;
  *(void *)(v52 - 184) = 3;
  int v210 = (((v205 + 55) ^ 0xF6) << 16) | (v209 << 8);
  LODWORD(v209) = *(unsigned __int8 *)(v197 + (a2[3] ^ 0x74));
  *(void *)(v52 - 168) = 12;
  int v211 = v210 | v209 ^ 0xBB;
  LODWORD(v209) = v524[a2[12] ^ 0x6ELL] ^ (a2[12] - ((2 * a2[12]) & 0xBC) - 34) ^ 0x51;
  *(void *)(v52 - 208) = 0;
  int v212 = v211 | ((v524[*a2 ^ 0x15] ^ (*a2 - ((2 * *a2) & 0xBC) - 34) ^ 0xAE) << 24);
  int v213 = v206 | ((v524[a2[8] ^ 0x46] ^ (a2[8] - ((2 * a2[8]) & 0xBC) - 34) ^ 0xFFFFFFE7) << 24);
  *(void *)(v52 - 200) = 14;
  LODWORD(v206) = v521[a2[14] ^ 0xD5] ^ 0xD2;
  *(void *)(v52 - 240) = 5;
  int v214 = ((v203 ^ 2) << 16) | (v209 << 24) | (v206 << 8);
  LOBYTE(v206) = (v518[a2[5] ^ 0x9DLL] + 55) ^ 0xF7;
  int v215 = *(unsigned __int8 *)(v197 + (a2[11] ^ 0xC2)) ^ 0x9E | v213;
  *(void *)(v52 - 256) = 9;
  *(void *)(v52 - 248) = 11;
  uint64_t v216 = a2[6] ^ 0xA4;
  unsigned int v217 = v215 & 0xFF00FFFF | (((v518[a2[9] ^ 0x3ELL] + 55) ^ 0xDF) << 16);
  *(void *)(v52 - 224) = 15;
  uint64_t v218 = a2[15];
  int v219 = v207 & 0xFF00FFFF | (v206 << 16) | ((v521[v216] ^ 0x82) << 8);
  LODWORD(v206) = *(unsigned __int8 *)(v197 + (v218 ^ 0x47)) ^ 0xBB | v214;
  unsigned __int8 v220 = BYTE2(v212) ^ BYTE6(v526);
  unsigned int v221 = (char *)*(&off_1F08D3590 + v204 - 1094) - 12;
  unsigned int v222 = ((((unsigned __int16)(v219 ^ v526) >> 8) ^ 0x4C)
        + 1256130233
        - 2 * ((((v219 ^ v526) >> 8) ^ 0xB71C4C) & 0xBB ^ ((v219 ^ v526) >> 8) & 2)) ^ *(_DWORD *)&v221[4 * (((unsigned __int16)(v219 ^ v526) >> 8) ^ 0x21)];
  int v223 = (char *)*(&off_1F08D3590 + v204 - 1070) - 8;
  unsigned int v224 = v212 ^ HIDWORD(v526) ^ 0x730032AA;
  unsigned int v225 = (v222 + 1230503070 - ((2 * v222) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4
                                                                          * ((v212 ^ BYTE4(v526)) ^ 0xAA)];
  unsigned int v226 = *(_DWORD *)&v221[4 * (((unsigned __int16)(v525 ^ v206) >> 8) ^ 0xFA)] ^ ((((unsigned __int16)(v525 ^ v206) >> 8) ^ 0x97)
                                                                                                 + 1256130233
                                                                                                 - ((2 * (((v525 ^ v206) >> 8) ^ 0xFDE297)) & 0x172));
  unsigned int v227 = v217 ^ HIDWORD(v525);
  int v228 = (char *)*(&off_1F08D3590 + (int)v422) - 8;
  int v229 = *(_DWORD *)&v228[4 * (((v217 ^ HIDWORD(v525)) >> 16) ^ 0x68)];
  HIDWORD(v231) = v229 ^ 0x2A4;
  LODWORD(v231) = v229 ^ 0xB95FE000;
  int v230 = v231 >> 12;
  int v232 = *(_DWORD *)&v228[4 * v220];
  HIDWORD(v231) = v232 ^ 0x2A4;
  LODWORD(v231) = v232 ^ 0xB95FE000;
  int v233 = (char *)*(&off_1F08D3590 + SHIDWORD(v422)) - 12;
  int v234 = *(_DWORD *)&v233[4 * (((v219 ^ v526) >> 24) ^ 0xB7)] ^ (v231 >> 12);
  int v235 = *(_DWORD *)&v228[4 * (((v525 ^ v206) >> 16) ^ 0xE2)];
  HIDWORD(v231) = v235 ^ 0x2A4;
  LODWORD(v231) = v235 ^ 0xB95FE000;
  int v236 = (v226 + 846620352 - ((2 * v226) & 0x64ECCD80)) ^ v234;
  int v237 = *(_DWORD *)&v223[4 * ((v219 ^ v526) ^ 0xFB)] ^ BYTE1(v227) ^ *(_DWORD *)&v221[4 * (BYTE1(v227) ^ 0x23)] ^ 0x388FA69 ^ (v231 >> 12);
  int v238 = v237 + 846620352 - ((2 * v237) & 0x64ECCD80);
  LODWORD(v216) = *(_DWORD *)&v228[4 * (((v219 ^ v526) >> 16) ^ 0x1C)];
  HIDWORD(v231) = v216 ^ 0x2A4;
  LODWORD(v231) = v216 ^ 0xB95FE000;
  LODWORD(v216) = *(_DWORD *)&v233[4 * (HIBYTE(v227) ^ 0xF6)] ^ (BYTE1(v224) + 1256130233 - ((v224 >> 7) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v224) ^ 0x6D)] ^ ((v231 >> 12) + 846620352 - ((2 * (v231 >> 12)) & 0x64ECCD80));
  int v239 = HIDWORD(v511) ^ v230 ^ *(_DWORD *)&v233[4 * (((v525 ^ v206) >> 24) ^ 0xFD)] ^ (v225 + 846620352 - ((2 * v225) & 0x64ECCD80));
  unsigned int v240 = v511 ^ *(_DWORD *)&v223[4 * ((v525 ^ v206) ^ 0xE0)] ^ (v216
                                                                               + 1230503070
                                                                               - ((2 * v216) & 0x92AFF93C));
  unsigned int v241 = HIDWORD(v507) ^ *(_DWORD *)&v223[4 * (v227 ^ 0x5F)] ^ (v236
                                                                               + 1230503070
                                                                               - ((2 * v236) & 0x92AFF93C));
  LODWORD(v216) = v428 ^ *(_DWORD *)&v233[4 * HIBYTE(v224)] ^ v238;
  LODWORD(v218) = v239 ^ 0xF9388C2F;
  int v242 = *(_DWORD *)&v228[4 * ((v239 ^ 0xF9388C2F) >> 16)];
  HIDWORD(v231) = v242 ^ 0x2A4;
  LODWORD(v231) = v242 ^ 0xB95FE000;
  int v243 = v231 >> 12;
  int v244 = *(_DWORD *)&v228[4 * (BYTE2(v240) ^ 0x38)];
  HIDWORD(v231) = v244 ^ 0x2A4;
  LODWORD(v231) = v244 ^ 0xB95FE000;
  int v245 = v231 >> 12;
  int v246 = *(_DWORD *)&v228[4 * (BYTE2(v241) ^ 0x66)];
  HIDWORD(v231) = v246 ^ 0x2A4;
  LODWORD(v231) = v246 ^ 0xB95FE000;
  int v247 = (v231 >> 12) ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 5)] ^ ((BYTE1(v216) ^ 0x68)
                                                                 + 1256130233
                                                                 - 2
                                                                 * (((v216 >> 8) ^ 0x42BD68) & 0xBB ^ (v216 >> 8) & 2));
  unsigned int v248 = (v243 + 1230503070 - ((2 * v243) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v241 ^ 0xB6)];
  unsigned int v249 = (v247 + 1230503070 - ((2 * v247) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v239 ^ 0x61)];
  unsigned int v250 = (((unsigned __int16)(v239 ^ 0x8C2F) >> 8) + 1256130233 - (((v239 ^ 0xF9388C2F) >> 7) & 0x172)) ^ 0xD678EAEF ^ *(_DWORD *)&v221[4 * (((unsigned __int16)(v239 ^ 0x8C2F) >> 8) ^ 0x6D)];
  unsigned int v251 = *(_DWORD *)&v233[4 * (HIBYTE(v241) ^ 0x43)] ^ 0x906C3D7E;
  int v252 = v250 + v251 - 2 * (v250 & v251);
  int v253 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 0xBD)];
  HIDWORD(v231) = v253 ^ 0x2A4;
  LODWORD(v231) = v253 ^ 0xB95FE000;
  LODWORD(v218) = *(_DWORD *)&v233[4 * BYTE3(v218)] ^ (v245 + 846620352 - ((2 * v245) & 0x64ECCD80));
  LODWORD(v218) = (v218 + 1230503070 - ((2 * v218) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v216 ^ 0xAB)];
  unsigned int v254 = *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0x42)] ^ v534 ^ *(_DWORD *)&v221[4 * (BYTE1(v240) ^ 0x72)] ^ ((BYTE1(v240) ^ 0x1F) + 1256130233 - ((2 * ((v240 >> 8) ^ 0x41381F)) & 0x172)) ^ (v248 + 846620352 - ((2 * v248) & 0x64ECCD80));
  LOBYTE(v238) = BYTE1(v241) ^ 0x54;
  unsigned int v255 = v507 ^ *(_DWORD *)&v221[4 * (BYTE1(v241) ^ 0x39)] ^ (v218 + 1256130233 - ((2 * v218) & 0x95BE0D72));
  LODWORD(v218) = v502 ^ *(_DWORD *)&v223[4 * (v240 ^ 0x3A)] ^ ((v252 ^ (v231 >> 12))
                                                                               + 1230503070
                                                                               - ((2 * (v252 ^ (v231 >> 12))) & 0x92AFF93C));
  int v256 = *(_DWORD *)&v228[4 * (BYTE2(v218) ^ 0x79)];
  HIDWORD(v231) = v256 ^ 0x2A4;
  LODWORD(v231) = v256 ^ 0xB95FE000;
  int v257 = HIDWORD(v502) ^ *(_DWORD *)&v233[4 * (HIBYTE(v240) ^ 0x41)] ^ (v249 + 846620352 - ((2 * v249) & 0x64ECCD80));
  BYTE1(v216) = BYTE1(v257) ^ 0x68;
  int v258 = ((v231 >> 12) + 846620352 - ((2 * (v231 >> 12)) & 0x64ECCD80)) ^ *(_DWORD *)&v233[4
                                                                                         * ((v257 ^ 0x2261685Eu) >> 24)];
  unsigned int v259 = ((BYTE1(v218) ^ 0xD0)
        + 1256130233
        - 2 * (((v218 >> 8) ^ 0x679D0) & 0xBD ^ (v218 >> 8) & 4)) ^ *(_DWORD *)&v221[4 * (BYTE1(v218) ^ 0xBD)];
  unsigned int v260 = (v259 + 1230503070 - ((2 * v259) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v254 ^ 0x76)];
  int v261 = ((BYTE1(v255) ^ 0xEC) + 1256130233 - ((2 * ((v255 >> 8) ^ 0xE5FEC)) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v255) ^ 0x81)];
  int v262 = *(_DWORD *)&v228[4 * (BYTE2(v255) ^ 0x5F)];
  HIDWORD(v231) = v262 ^ 0x2A4;
  LODWORD(v231) = v262 ^ 0xB95FE000;
  int v263 = v231 >> 12;
  HIDWORD(v231) = *(_DWORD *)&v223[4 * (v257 ^ 0x5E)] ^ 0xA040DB16;
  LODWORD(v231) = HIDWORD(v231);
  int v264 = (v231 >> 28) ^ __ROR4__(*(_DWORD *)&v233[4 * (BYTE3(v218) ^ 6)] ^ 0x7462B151 ^ (v261+ 846620352- ((2 * v261) & 0x64ECCD80)), 28);
  int v265 = (v263 + 846620352 - ((2 * v263) & 0x64ECCD80)) ^ *(_DWORD *)&v233[4 * (HIBYTE(v254) ^ 0xD2)];
  LODWORD(v218) = (v265 + 1230503070 - ((2 * v265) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v218 ^ 0x4C)];
  int v266 = *(_DWORD *)&v228[4 * (BYTE2(v257) ^ 0x1B)];
  HIDWORD(v231) = v266 ^ 0x2A4;
  LODWORD(v231) = v266 ^ 0xB95FE000;
  int v267 = v231 >> 12;
  int v268 = ((v254 >> 8) ^ 0xD2CCC0) & 0xBD ^ (v254 >> 8) & 4;
  int v269 = BYTE1(v254) ^ 0xC0;
  int v270 = *(_DWORD *)&v228[4 * (BYTE2(v254) ^ 0xCC)];
  HIDWORD(v231) = v270 ^ 0x2A4;
  LODWORD(v231) = v270 ^ 0xB95FE000;
  int v271 = HIDWORD(v383) ^ HIDWORD(v384) ^ (v231 >> 12) ^ __ROR4__(v264 ^ 0x78071371, 4);
  LOBYTE(v264) = v255 ^ v238;
  unsigned int v272 = v498 ^ *(_DWORD *)&v233[4 * (HIBYTE(v255) ^ 0xE)] ^ v267 ^ (v260 + 846620352 - ((2 * v260) & 0x64ECCD80));
  int v273 = BYTE1(v216);
  unsigned int v274 = HIDWORD(v492) ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0x6D)] ^ (v218 + 1256130233 - ((2 * v218) & 0x95BE0D72));
  LODWORD(v216) = v187 ^ v381 ^ (v269 + 1256130233 - 2 * v268) ^ *(_DWORD *)&v223[4 * (v264 ^ 0xCA)] ^ *(_DWORD *)&v221[4 * (v269 ^ 0x6D)] ^ (v258 + 1230503070 - ((2 * v258) & 0x92AFF93C));
  unsigned int v275 = v273 ^ 0x4552953C ^ v274;
  LODWORD(v218) = *(_DWORD *)&v228[4 * BYTE2(v275)];
  HIDWORD(v231) = v218 ^ 0x2A4;
  LODWORD(v231) = v218 ^ 0xB95FE000;
  LODWORD(v218) = v231 >> 12;
  unsigned int v276 = v271 ^ 0x99FEE750;
  int v277 = *(_DWORD *)&v228[4 * ((v271 ^ 0x99FEE750) >> 16)];
  HIDWORD(v231) = v277 ^ 0x2A4;
  LODWORD(v231) = v277 ^ 0xB95FE000;
  int v278 = (BYTE1(v275) + 1256130233 - ((v275 >> 7) & 0x172)) ^ *(_DWORD *)&v223[4 * (v272 ^ 0x72)] ^ *(_DWORD *)&v221[4 * (BYTE1(v275) ^ 0x6D)] ^ ((v231 >> 12) + 1230503070 - ((2 * (v231 >> 12)) & 0x92AFF93C));
  int v279 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 2)];
  HIDWORD(v231) = v279 ^ 0x2A4;
  LODWORD(v231) = v279 ^ 0xB95FE000;
  int v280 = v231 >> 12;
  int v281 = *(_DWORD *)&v228[4 * (BYTE2(v272) ^ 0x3B)];
  HIDWORD(v231) = v281 ^ 0x2A4;
  LODWORD(v231) = v281 ^ 0xB95FE000;
  int v282 = *(_DWORD *)&v223[4 * v275] ^ *(_DWORD *)&v233[4 * (HIBYTE(v272) ^ 0xA7)] ^ v280 ^ 0x7B219A5E;
  unsigned int v283 = HIDWORD(v487) ^ *(_DWORD *)&v223[4 * (v271 ^ 0x1E)] ^ ((BYTE1(v216) ^ 0xD9)
                                                                               + 1256130233
                                                                               - 2
                                                                               * (((v216 >> 8) ^ 0x9802D9) & 0xBD ^ (v216 >> 8) & 4)) ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0xB4)] ^ *(_DWORD *)&v233[4 * (HIBYTE(v274) ^ 0x61)] ^ (v231 >> 12);
  unsigned int v284 = v487 ^ *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0x98)] ^ (v278 + 846620352 - ((2 * v278) & 0x64ECCD80));
  unsigned int v285 = HIDWORD(v482) ^ *(_DWORD *)&v223[4 * (v216 ^ 0x3D)] ^ ((BYTE1(v272) ^ 0x29)
                                                                               + 1256130233
                                                                               - 2
                                                                               * (((v272 >> 8) ^ 0xA73B29) & 0xBF ^ (v272 >> 8) & 6)) ^ *(_DWORD *)&v233[4 * HIBYTE(v276)] ^ *(_DWORD *)&v221[4 * (BYTE1(v272) ^ 0x44)] ^ v218;
  LODWORD(v216) = v482 ^ *(_DWORD *)&v221[4 * (BYTE1(v276) ^ 0x6D)] ^ (v282 + 1256130233 - ((2 * v282) & 0x95BE0D72));
  int v286 = *(_DWORD *)&v228[4 * (BYTE2(v283) ^ 0x87)];
  HIDWORD(v231) = v286 ^ 0x2A4;
  LODWORD(v231) = v286 ^ 0xB95FE000;
  int v287 = v231 >> 12;
  LODWORD(v218) = *(_DWORD *)&v228[4 * (BYTE2(v285) ^ 0xC9)];
  HIDWORD(v231) = v218 ^ 0x2A4;
  LODWORD(v231) = v218 ^ 0xB95FE000;
  LODWORD(v218) = BYTE1(v285) ^ 0x65;
  int v288 = v218 + 1256130233 - ((2 * ((v285 >> 8) ^ 0xAEC965)) & 0x172);
  v283 ^= 0x79FD86ACu;
  int v289 = *(_DWORD *)&v223[4 * ((v216 ^ BYTE1(v276)) ^ 0x41)] ^ (BYTE1(v283)
                                                                               + 1256130233
                                                                               - ((v283 >> 7) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v283) ^ 0x6D)] ^ ((v231 >> 12) + 1230503070 - ((2 * (v231 >> 12)) & 0x92AFF93C));
  int v290 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 0x81)];
  HIDWORD(v231) = v290 ^ 0x2A4;
  LODWORD(v231) = v290 ^ 0xB95FE000;
  int v291 = ((v231 >> 12) + 846620352 - ((2 * (v231 >> 12)) & 0x64ECCD80)) ^ *(_DWORD *)&v233[4 * HIBYTE(v283)];
  unsigned int v292 = (v291 + 1230503070 - ((2 * v291) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v285 ^ 0x5B)];
  unsigned int v293 = ((BYTE1(v216) ^ 0xA0)
        + 1256130233
        - 2 * (((v216 >> 8) ^ 0x6881A0) & 0xBF ^ (v216 >> 8) & 6)) ^ (v287
                                                                                                + 1230503070
                                                                                                - ((2 * v287) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v284 ^ 0xFC)] ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0xCD)];
  unsigned int v294 = *(_DWORD *)&v228[4 * (BYTE2(v284) ^ 0xC6)];
  LODWORD(v231) = __ROR4__((v294 >> 12) ^ 0x26648DC, 17) ^ 0xEE910136;
  HIDWORD(v231) = v231;
  unsigned int v295 = HIDWORD(v476) ^ *(_DWORD *)&v221[4 * (BYTE1(v284) ^ 0x75)] ^ (v292 + 1256130233 - ((2 * v292) & 0x95BE0D72));
  unsigned int v296 = v476 ^ *(_DWORD *)&v233[4 * (HIBYTE(v285) ^ 0xAE)] ^ (v293 + 846620352 - ((2 * v293) & 0x64ECCD80));
  int v297 = HIDWORD(v470) ^ *(_DWORD *)&v233[4 * (HIBYTE(v284) ^ 0x5A)] ^ (v289 + 846620352 - ((2 * v289) & 0x64ECCD80));
  LODWORD(v216) = v470 ^ v288 ^ *(_DWORD *)&v223[4 * v283] ^ *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0x68)] ^ *(_DWORD *)&v221[4 * (v218 ^ 0x6D)] ^ ((v231 >> 15) + (v294 << 20));
  int v298 = ((BYTE1(v295) ^ 0x9D) + 1256130233 - ((2 * ((v295 >> 8) ^ 0xC2489D)) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v295) ^ 0xF0)];
  unsigned int v299 = *(_DWORD *)&v228[4 * (BYTE2(v296) ^ 0x8F)];
  int v300 = *(_DWORD *)&v228[4 * ((v297 ^ 0xCFB8D782) >> 16)];
  unsigned int v301 = *(_DWORD *)&v223[4 * (v216 ^ 0xD4)] ^ (v299 << 20) ^ (v299 >> 12) ^ 0x2A4B95FE ^ (v298 + 1230503070 - ((2 * v298) & 0x92AFF93C));
  HIDWORD(v231) = v300 ^ 0x2A4;
  LODWORD(v231) = v300 ^ 0xB95FE000;
  int v302 = ((v231 >> 12) + 1230503070 - ((2 * (v231 >> 12)) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4
                                                                                          * ((BYTE4(v476) ^ v221[4 * (BYTE1(v284) ^ 0x75)] ^ (v292 - 71 - ((2 * v292) & 0x72)) ^ BYTE1(v284)) ^ 0x3F)];
  int v303 = ((v296 >> 8) ^ 0xC78FD9) & 0xBD ^ (v296 >> 8) & 4;
  int v304 = *(_DWORD *)&v228[4 * (BYTE2(v295) ^ 0x48)];
  HIDWORD(v231) = v304 ^ 0x2A4;
  LODWORD(v231) = v304 ^ 0xB95FE000;
  int v305 = BYTE1(v296) ^ 0xD9;
  int v306 = ((BYTE1(v216) ^ 0xFA) + 1256130233 - ((2 * ((v216 >> 8) ^ 0x77EAFA)) & 0x172)) ^ *(_DWORD *)&v223[4 * (v297 ^ 0xCC)] ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0x97)] ^ ((v231 >> 12) + 1230503070 - ((2 * (v231 >> 12)) & 0x92AFF93C));
  int v307 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 0xEA)];
  HIDWORD(v231) = v307 ^ 0x2A4;
  LODWORD(v231) = v307 ^ 0xB95FE000;
  unsigned int v308 = HIDWORD(v466) ^ (((unsigned __int16)(v297 ^ 0xD782) >> 8)
                        + 1256130233
                        - (((v297 ^ 0xCFB8D782) >> 7) & 0x172)) ^ *(_DWORD *)&v223[4 * (v296 ^ 0x50)] ^ *(_DWORD *)&v221[4 * (((unsigned __int16)(v297 ^ 0xD782) >> 8) ^ 0x6D)] ^ *(_DWORD *)&v233[4 * (HIBYTE(v295) ^ 0xC2)] ^ (v231 >> 12);
  unsigned int v309 = HIDWORD(v400) ^ v536 ^ *(_DWORD *)&v233[4 * (HIBYTE(v296) ^ 0xC7)] ^ (v306
                                                                             + 846620352
                                                                             - ((2 * v306) & 0x64ECCD80));
  unsigned int v310 = HIDWORD(v462) ^ *(_DWORD *)&v233[4 * ((v297 ^ 0xCFB8D782) >> 24)] ^ (v301
                                                                            + 846620352
                                                                            - ((2 * v301) & 0x64ECCD80));
  LODWORD(v216) = v462 ^ (v305 + 1256130233 - 2 * v303) ^ *(_DWORD *)&v221[4 * (v305 ^ 0x6D)] ^ *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0x77)] ^ (v302 + 846620352 - ((2 * v302) & 0x64ECCD80));
  int v311 = *(_DWORD *)&v228[4 * (BYTE2(v309) ^ 0xE6)];
  HIDWORD(v231) = v311 ^ 0x2A4;
  LODWORD(v231) = v311 ^ 0xB95FE000;
  int v312 = v231 >> 12;
  unsigned int v313 = (((unsigned __int16)(v216 ^ 0xCCA2) >> 8)
        + 1256130233
        - (((v216 ^ 0x33C8CCA2) >> 7) & 0x172)) ^ *(_DWORD *)&v221[4
                                                                               * (((unsigned __int16)(v216 ^ 0xCCA2) >> 8) ^ 0x6D)];
  int v314 = *(_DWORD *)&v228[4 * (BYTE2(v310) ^ 0x1C)];
  HIDWORD(v231) = v314 ^ 0x2A4;
  LODWORD(v231) = v314 ^ 0xB95FE000;
  int v315 = (v231 >> 12) ^ *(_DWORD *)&v221[4 * (BYTE1(v309) ^ 0xD9)] ^ ((BYTE1(v309) ^ 0xB4)
                                                                    + 1256130233
                                                                    - ((2 * ((v309 >> 8) ^ 0x4FE6B4)) & 0x172));
  unsigned int v316 = (v315 + 1230503070 - ((2 * v315) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v308 ^ 0xB4)];
  unsigned int v317 = (v313 + 1230503070 - ((2 * v313) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v310 ^ 0x3A)];
  unsigned int v318 = *(_DWORD *)&v223[4 * (v216 ^ 0xA2)] ^ (((unsigned __int16)(v308 ^ 0x8EB4) >> 8)
                                                               + 1256130233
                                                               - (((v308 ^ 0x62128EB4) >> 7) & 0x172)) ^ *(_DWORD *)&v221[4 * (((unsigned __int16)(v308 ^ 0x8EB4) >> 8) ^ 0x6D)] ^ (v312 + 1230503070 - ((2 * v312) & 0x92AFF93C));
  int v319 = *(_DWORD *)&v223[4 * (v309 ^ 0x96)];
  HIDWORD(v231) = v319 ^ 0x957FC9E;
  LODWORD(v231) = v319 ^ 0x40000000;
  HIDWORD(v231) = (v231 >> 29) ^ 0x6615DA09;
  LODWORD(v231) = HIDWORD(v231);
  int v320 = (v231 >> 3) + 1256130233 - ((2 * (v231 >> 3)) & 0x95BE0D72);
  int v321 = *(_DWORD *)&v228[4 * ((v308 ^ 0x62128EB4) >> 16)];
  HIDWORD(v231) = v321 ^ 0x2A4;
  LODWORD(v231) = v321 ^ 0xB95FE000;
  int v322 = v231 >> 12;
  LODWORD(v218) = *(_DWORD *)&v228[4 * ((v216 ^ 0x33C8CCA2) >> 16)];
  HIDWORD(v231) = v218 ^ 0x2A4;
  LODWORD(v231) = v218 ^ 0xB95FE000;
  LODWORD(v216) = HIDWORD(v457) ^ *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0x17)] ^ (v316
                                                                              + 846620352
                                                                              - ((2 * v316) & 0x64ECCD80));
  int v323 = v320 ^ *(_DWORD *)&v221[4 * (BYTE1(v310) ^ 0xD1)] ^ (v231 >> 12);
  unsigned int v324 = *(_DWORD *)&v233[4 * (HIBYTE(v308) ^ 0x46)] ^ v532 ^ (v323 + 846620352 - ((2 * v323) & 0x64ECCD80));
  int v325 = v457 ^ *(_DWORD *)&v233[4 * (HIBYTE(v309) ^ 0x4F)] ^ v322;
  unsigned int v326 = HIDWORD(v451) ^ *(_DWORD *)&v233[4 * (HIBYTE(v310) ^ 0x1B)] ^ (v318 + 846620352 - ((2 * v318) & 0x64ECCD80));
  int v327 = *(_DWORD *)&v228[4 * (BYTE2(v326) ^ 0x7E)];
  HIDWORD(v231) = v327 ^ 0x2A4;
  LODWORD(v231) = v327 ^ 0xB95FE000;
  int v328 = v231 >> 12;
  unsigned int v329 = v325 ^ (v317 + 846620352 - ((2 * v317) & 0x64ECCD80));
  int v330 = *(_DWORD *)&v228[4 * (BYTE2(v329) ^ 1)];
  HIDWORD(v231) = v330 ^ 0x2A4;
  LODWORD(v231) = v330 ^ 0xB95FE000;
  int v331 = ((v231 >> 12) + 1230503070 - ((2 * (v231 >> 12)) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4
                                                                                          * (v216 ^ 0xC6)];
  unsigned int v332 = ((BYTE1(v216) ^ 0x71)
        + 1256130233
        - 2 * (((v216 >> 8) ^ 0xF25B71) & 0xBF ^ (v216 >> 8) & 6)) ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0x1C)];
  int v333 = (v332 + 846620352 - ((2 * v332) & 0x64ECCD80)) ^ *(_DWORD *)&v233[4 * (HIBYTE(v329) ^ 0x1F)];
  int v334 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 0x5B)];
  HIDWORD(v231) = v334 ^ 0x2A4;
  LODWORD(v231) = v334 ^ 0xB95FE000;
  int v335 = v231 >> 12;
  LODWORD(v218) = BYTE1(v310) ^ 0x73F4E0AF ^ v324;
  int v336 = *(_DWORD *)&v228[4 * BYTE2(v218)];
  HIDWORD(v231) = v336 ^ 0x2A4;
  LODWORD(v231) = v336 ^ 0xB95FE000;
  int v337 = v231 >> 12;
  HIDWORD(v231) = v328 ^ ((BYTE1(v329) ^ 0x81) + 1256130233 - 2 * (((v329 >> 8) ^ 0x1F0181) & 0xBD ^ (v329 >> 8) & 4)) ^ 0xD678EAEF ^ *(_DWORD *)&v221[4 * (BYTE1(v329) ^ 0xEC)];
  LODWORD(v231) = HIDWORD(v231);
  LODWORD(v231) = (v231 >> 11) ^ __ROR4__(*(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0xF2)] ^ 0x906C3D7E, 11) ^ 0xD490839A;
  HIDWORD(v231) = v231;
  LODWORD(v216) = HIDWORD(v393) ^ v546 ^ *(_DWORD *)&v223[4 * (v329 ^ 0xB8)] ^ ((BYTE1(v326) ^ 0xAA)
                                                                                               + 1256130233
                                                                                               - ((2
                                                                                                 * ((v326 >> 8) ^ 0x967EAA)) & 0x172)) ^ *(_DWORD *)&v233[4 * (HIBYTE(v324) ^ 0x57)] ^ v335 ^ *(_DWORD *)&v221[4 * (BYTE1(v326) ^ 0xC7)];
  unsigned int v338 = HIDWORD(v445) ^ *(_DWORD *)&v233[4 * (HIBYTE(v326) ^ 0x96)] ^ (BYTE1(v218)
                                                                      + 1256130233
                                                                      - ((v218 >> 7) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v218) ^ 0x6D)] ^ (v331 + 846620352 - ((2 * v331) & 0x64ECCD80));
  unsigned int v339 = v445 ^ *(_DWORD *)&v223[4 * (v326 ^ 0x88)] ^ v337 ^ (v333
                                                                             + 1230503070
                                                                             - ((2 * v333) & 0x92AFF93C));
  unsigned int v340 = HIDWORD(v440) ^ *(_DWORD *)&v223[4 * (BYTE1(v310) ^ 0xAF ^ v324)] ^ ((v231 >> 21)
                                                                                             + 1230503070
                                                                                             - ((2 * (v231 >> 21)) & 0x92AFF93C));
  BYTE2(v218) = BYTE2(v339) ^ 0x4A;
  int v341 = *(_DWORD *)&v228[4 * (BYTE2(v216) ^ 0xCA)];
  HIDWORD(v231) = v341 ^ 0x2A4;
  LODWORD(v231) = v341 ^ 0xB95FE000;
  int v342 = v231 >> 12;
  int v343 = *(_DWORD *)&v221[4 * (BYTE1(v338) ^ 0x96)] ^ ((BYTE1(v338) ^ 0xFB)
                                                     + 1256130233
                                                     - ((2 * ((v338 >> 8) ^ 0x3EA2FB)) & 0x172));
  unsigned int v344 = (v343 + 1230503070 - ((2 * v343) & 0x92AFF93C)) ^ *(_DWORD *)&v223[4 * (v339 ^ 0x75)];
  int v345 = *(_DWORD *)&v228[4 * (BYTE2(v338) ^ 0xA2)];
  HIDWORD(v231) = v345 ^ 0x2A4;
  LODWORD(v231) = v345 ^ 0xB95FE000;
  int v346 = (((unsigned __int16)(v339 ^ 0xF075) >> 8) + 1256130233 - (((v339 ^ 0xB54AF075) >> 7) & 0x172)) ^ (v231 >> 12) ^ *(_DWORD *)&v221[4 * (((unsigned __int16)(v339 ^ 0xF075) >> 8) ^ 0x6D)];
  int v347 = (v346 + 846620352 - ((2 * v346) & 0x64ECCD80)) ^ *(_DWORD *)&v233[4 * (HIBYTE(v340) ^ 0xED)];
  int v348 = *(_DWORD *)&v233[4 * (HIBYTE(v339) ^ 0x91)];
  int v349 = *(_DWORD *)&v233[4 * (HIBYTE(v338) ^ 0x3E)];
  int v350 = *(_DWORD *)&v233[4 * (BYTE3(v216) ^ 0xBC)];
  LODWORD(v233) = v340 ^ 0xC9AF1D8F;
  int v351 = *(_DWORD *)&v223[4 * (v340 ^ 0x8F)];
  int v352 = *(_DWORD *)&v223[4 * (v216 ^ 0x31)];
  unsigned int v353 = *(_DWORD *)&v228[4 * BYTE2(v233)];
  LODWORD(v228) = *(_DWORD *)&v228[4 * BYTE2(v218)];
  HIDWORD(v231) = v228 ^ 0x2A4;
  LODWORD(v231) = v228 ^ 0xB95FE000;
  LODWORD(v223) = v440 ^ *(_DWORD *)&v223[4 * (v338 ^ 0x9A)] ^ v342 ^ v348 ^ (BYTE1(v233)
                                                                                             + 1256130233
                                                                                             - ((v233 >> 7) & 0x172)) ^ *(_DWORD *)&v221[4 * (BYTE1(v233) ^ 0x6D)];
  LODWORD(v233) = HIDWORD(v434) ^ ((BYTE1(v216) ^ 0x5A)
                                 + 1256130233
                                 - ((2 * ((v216 >> 8) ^ 0xBCCA5A)) & 0x172)) ^ v349 ^ *(_DWORD *)&v221[4 * (BYTE1(v216) ^ 0x37)] ^ v351 ^ (v231 >> 12);
  LODWORD(v218) = v434 ^ v352 ^ (v347 + 1230503070 - ((2 * v347) & 0x92AFF93C));
  unsigned int v354 = HIDWORD(v428) ^ v350 ^ (v353 >> 12) ^ (v353 << 20) ^ (v344 + 846620352 - ((2 * v344) & 0x64ECCD80));
  v355 = (char *)*(&off_1F08D3590 + SHIDWORD(v416)) - 8;
  int v356 = *(_DWORD *)(v52 - 120);
  v357 = (char *)*(&off_1F08D3590 + v356 - 1019) - 8;
  LODWORD(v228) = *(_DWORD *)&v357[4 * (BYTE1(v354) ^ 0xB6)] ^ *(_DWORD *)&v355[4
                                                                              * ((v434 ^ v352 ^ (v347 - 98 - ((2 * v347) & 0x3C))) ^ 7)];
  unsigned int v358 = (v228 ^ 0xE504D888)
       - 1410729330
       - 2 * ((v228 ^ 0xE504D888) & 0x2BE9FA9E ^ v228 & 0x10);
  LODWORD(v228) = *(_DWORD *)&v357[4 * (BYTE1(v223) ^ 0xEB)];
  int v359 = *(_DWORD *)&v357[4
                        * ((unsigned __int16)(v434 ^ v352 ^ (v347 - 866 - ((2 * v347) & 0xF93C)) ^ 0x6F07) >> 8)];
  int v360 = *(_DWORD *)&v357[4 * (BYTE1(v233) ^ 0x5B)];
  v361 = (char *)*(&off_1F08D3590 + SHIDWORD(v409)) - 12;
  LODWORD(v216) = *(_DWORD *)&v361[4 * (BYTE3(v218) ^ 0xEF)];
  int v362 = *(_DWORD *)&v361[4 * (HIBYTE(v354) ^ 0xB7)];
  int v363 = *(_DWORD *)&v361[4 * ((v223 >> 24) ^ 0x4A)];
  uint64_t v364 = (uint64_t)*(&off_1F08D3590 + (int)v416);
  int v365 = *(_DWORD *)(v364 + 4 * (BYTE2(v354) ^ 0xF7u));
  int v366 = *(_DWORD *)(v364 + 4 * (BYTE2(v218) ^ 0x2Au));
  uint64_t v367 = *(unsigned int *)(v364 + 4 * (BYTE2(v233) ^ 0xEBu));
  LODWORD(v361) = v358 ^ *(_DWORD *)&v361[4 * ((v233 >> 24) ^ 0x11)];
  int v368 = v361 - 1332533961 - ((2 * v361) & 0x61264A6E);
  LODWORD(v361) = *(_DWORD *)&v355[4 * (v223 ^ 0x82)];
  LODWORD(v233) = *(_DWORD *)&v355[4 * (v233 ^ 0x2B)];
  LODWORD(v223) = *(_DWORD *)(v364 + 4 * (BYTE2(v223) ^ 0xAAu)) ^ v368;
  LODWORD(v218) = *(_DWORD *)&v355[4 * (v354 ^ 0x25)];
  uint64_t v369 = *(_DWORD *)(v52 - 140) ^ v527 ^ (v223 - ((2 * v223) & 0x911FEB0A) + 1217394053);
  v370 = (char *)*(&off_1F08D3590 + v356 - 991) - 4;
  a2[8] = v370[BYTE3(v369) ^ 0xD7] ^ 0xEA;
  int v371 = ((v359 ^ v365 ^ 0x5D10B6E6) - 1410729330 - 2 * ((v359 ^ v365 ^ 0x5D10B6E6) & 0x2BE9FA8F ^ (v359 ^ v365) & 1)) ^ v363;
  LODWORD(v233) = (v371 + 143084377 - ((2 * v371) & 0x110E96B2)) ^ v233;
  unsigned int v372 = *(_DWORD *)(v52 - 136) ^ HIDWORD(v527) ^ (v233 - ((2 * v233) & 0xFA31F014) - 48695286);
  v373 = (char *)*(&off_1F08D3590 + v356 - 1092) - 12;
  a2[*(void *)(v52 - 232)] = (v373[(*(unsigned char *)(v52 - 136) ^ BYTE4(v527) ^ ((_BYTE)v233
                                                                                            - ((2 * (_BYTE)v233) & 0x14)
                                                                                            + 10)) ^ 0xC7]
                              - 126) ^ 0x5F;
  v374 = (char *)*(&off_1F08D3590 + (int)v409) - 4;
  int v375 = v374[BYTE1(v372) ^ 0x13];
  HIDWORD(v231) = v375 ^ 0x21;
  LODWORD(v231) = (v375 ^ 0x40) << 24;
  a2[6] = (v231 >> 30) ^ 0x40;
  LODWORD(v361) = ((v366 ^ v361 ^ 0xB8146E6E)
                 - 1410729330
                 - 2 * ((v366 ^ v361 ^ 0xB8146E6E) & 0x2BE9FA8F ^ (v366 ^ v361) & 1)) ^ v362;
  LODWORD(v361) = (v361 - ((2 * v361) & 0xDB0727A2) - 310144047) ^ v360;
  uint64_t v376 = *(_DWORD *)(v52 - 132) ^ HIDWORD(v528) ^ (v361 - ((2 * v361) & 0xA1952D34) + 1355454106);
  LODWORD(v361) = v374[(unsigned __int16)(*(_WORD *)(v52 - 132) ^ WORD2(v528) ^ ((_WORD)v361
                                                                                                - ((2 * (_WORD)v361) & 0x2D34)
                                                                                                - 26982)) >> 8];
  HIDWORD(v231) = v361 ^ 0x21;
  LODWORD(v231) = (v361 ^ 0x40) << 24;
  a2[*(void *)(v52 - 216)] = (v231 >> 30) ^ 0x7E;
  uint64_t v377 = (uint64_t)*(&off_1F08D3590 + v356 - 1005);
  a2[*(void *)(v52 - 256)] = *(unsigned char *)(v377 + (BYTE2(v369) ^ 0xFBLL)) ^ 0x35;
  LODWORD(v361) = ((v228 ^ 0x466A695F ^ v216)
                 - 1332533961
                 - ((2 * (v228 ^ 0x466A695F ^ v216)) & 0x61264A6E)) ^ v367;
  LODWORD(v361) = v218 ^ (v361 + 143084377 - ((2 * v361) & 0x110E96B2));
  LODWORD(v361) = *(_DWORD *)(v52 - 128) ^ v528 ^ (v361 - ((2 * v361) & 0x36A73A36) - 1689019109);
  a2[*(void *)(v52 - 176)] = *(unsigned char *)(v377 + (BYTE2(v361) ^ 0xB8)) ^ 0xE6;
  a2[*(void *)(v52 - 248)] = (v373[v369 ^ 0x1BLL] - 126) ^ 0x7D;
  a2[*(void *)(v52 - 240)] = *(unsigned char *)(v377 + (BYTE2(v372) ^ 3)) ^ 0x98;
  a2[*(void *)(v52 - 192)] = v370[HIBYTE(v372) ^ 0x6DLL] ^ 0x12;
  LODWORD(v228) = v374[BYTE1(v369) ^ 0x92];
  HIDWORD(v231) = v228 ^ 0x21;
  LODWORD(v231) = (v228 ^ 0x40) << 24;
  a2[*(void *)(v52 - 160)] = (v231 >> 30) ^ 0xD2;
  uint64_t v378 = *(void *)(v52 - 208);
  a2[v378] = v370[BYTE3(v376) ^ 0x53] ^ 0xFE;
  a2[*(void *)(v52 - 184)] = (v373[v376 ^ 0x95] - 126) ^ 0xAF;
  a2[*(void *)(v52 - 224)] = (v373[v361 ^ 0x64] - 126) ^ 0x27;
  a2[*(void *)(v52 - 168)] = v370[(v361 >> 24) ^ 0x6ELL] ^ 0x68;
  LODWORD(v361) = v374[BYTE1(v361) ^ 0x1FLL];
  HIDWORD(v231) = v361 ^ 0x21;
  LODWORD(v231) = (v361 ^ 0x40) << 24;
  a2[*(void *)(v52 - 200)] = (v231 >> 30) ^ 0x58;
  a2[*(void *)(v52 - 152)] = *(unsigned char *)(v377 + (BYTE2(v376) ^ 0xC8)) ^ 0xB7;
  return (*(uint64_t (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, char *, char *, uint64_t, uint64_t, unint64_t, uint64_t))(a50 + 8 * ((3333 * (((v378 + 873868143 - ((2 * v378 + 32) & 0x682C56DE) + 16) ^ 0x34162B6Fu) < a49)) ^ (v356 + 364))))(v367, &off_1F08D3590, v376, 286168754, v377, 2962433335, 109, v369, a3, v380, v381, v382, v383, v384, v385, v388, v390, v393, v396,
           v398,
           v400,
           v404,
           a17,
           a18,
           v409,
           v416,
           v422,
           v428,
           v434,
           v440,
           v445,
           v451,
           v457,
           v462,
           v466,
           v470,
           v476,
           v482,
           v487,
           v492,
           v498,
           v502,
           v507,
           v511,
           v515,
           v518,
           v521,
           v524,
           v525,
           v526,
           v527,
           v528);
}

uint64_t sub_1B02A1720@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W5>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42)
{
  *(_DWORD *)(v49 - 116) = v48;
  *(_DWORD *)(v49 - 128) = v46;
  *(_DWORD *)(v49 - 136) = v46 & 0xFFFFFFF8;
  int v50 = -8 - a4;
  char v51 = v47 + a2 + a1;
  uint64_t v52 = (a2 + a1 + a3 + v50 + 8);
  v54.val[0].i64[0] = ((_BYTE)a2 + (_BYTE)a1 + (_BYTE)a3 + (_BYTE)v50 + 8) & 0xF;
  v54.val[0].i64[1] = (v51 + 7 + (_BYTE)v50 + 8) & 0xF;
  v54.val[1].i64[0] = (v51 + 6 + (_BYTE)v50 + 8) & 0xF;
  v54.val[1].i64[1] = (v51 + 5 + (_BYTE)v50 + 8) & 0xF;
  v54.val[2].i64[0] = (v51 + 4 + (_BYTE)v50 + 8) & 0xF;
  v54.val[2].i64[1] = (v51 + 3 + (_BYTE)v50 + 8) & 0xF;
  v54.val[3].i64[0] = (v45 + (_BYTE)v50 + 116 * (a5 ^ 0xAD) + 10) & 0xF;
  v54.val[3].i64[1] = (v51 + 1 + (_BYTE)v50 + 8) & 0xF;
  *(int8x8_t *)(a6 - 7 + v52) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v44 + (v52 & 0xF) - 7), *(int8x8_t *)(a6 - 7 + v52)), veor_s8(*(int8x8_t *)((v52 & 0xF) + v42 - 5), *(int8x8_t *)((v52 & 0xF) + v43 - 3))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v54, (int8x16_t)xmmword_1B04C9C00), (int8x8_t)0x7777777777777777)));
  return (*(uint64_t (**)(__n128))(a42 + 8 * ((29 * (-(v46 & 0xFFFFFFF8) == v50)) ^ a5)))((__n128)xmmword_1B04C9C00);
}

uint64_t sub_1B02A1874()
{
  int v5 = *(unsigned __int8 *)STACK[0x430]
     - (*(unsigned char *)(*(void *)(v3 + v1 * (uint64_t)v2 + 24) - 0x535310555E10BB3CLL) - 9);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((2 * v5) & 0xBD8DFBF6) + (v5 ^ ((((v0 - 1179) | 0x14C) ^ 0x2FA) + 1590098550)) == 1590099451)
                                * (((((v0 - 1179) | 0x14C) - 1661278594) & 0x63051B1B) - 9)) ^ ((v0 - 1179) | 0x14C))))();
}

uint64_t sub_1B02A1944(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 120) = (v13 + 1058) ^ (535753261
                                         * ((((v17 - 136) | 0x986620CE) - (v17 - 136) + ((v17 - 136) & 0x6799DF30)) ^ 0x92922EE1));
  *(void *)(v17 - 136) = a13;
  *(void *)(v17 - 128) = v16;
  (*(void (**)(uint64_t))(v15 + 8 * (v13 + 2051)))(v17 - 136);
  int v18 = 108757529 * ((((v17 - 136) | 0xECD3D58C) - (v17 - 136) + ((v17 - 136) & 0x132C2A70)) ^ 0xC4FB7A7);
  *(_DWORD *)(v17 - 120) = v18 ^ 0x17228A6;
  *(_DWORD *)(v17 - 136) = v18 + v13 + 1543;
  *(void *)(v17 - 128) = v14;
  (*(void (**)(uint64_t))(v15 + 8 * (v13 ^ 0x987)))(v17 - 136);
  *(_DWORD *)(v17 - 136) = v13
                         + 108757529 * ((2 * ((v17 - 136) & 0x35BE1EB8) - (v17 - 136) - 901652153) ^ 0x2ADD836C)
                         + 1196;
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = v14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 + 1938)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((7
                                              * (*(_DWORD *)(v17 - 132) <= ((634 * (v13 ^ 0x15A) + 285436169) & 0xEEFC93DE ^ 0xAB010E))) ^ (v13 + 907))))(v19);
}

uint64_t sub_1B02A1AE8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7)
{
  *(void *)(a5 + (v7 + a7)) = *(void *)(a1 + (v7 + a7));
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 + a7 != 8) * a2) ^ a4)))();
}

uint64_t sub_1B02A1B18@<X0>(unsigned int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (((((v1 ^ 0x622) + 1040559701) & 0x41FA53F5 ^ 0x3F3) * (a1 < 0x20)) ^ v1 ^ 0x622u)))();
}

uint64_t sub_1B02A1B64(unsigned int a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((122 * ((a4 + 1 + v5) < 0x40)) ^ a1)))();
}

uint64_t sub_1B02A1C4C@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a3 + a2 + (a4 ^ 0x47E) - 64 + 749) * (v4 == a1)) ^ a4)))();
}

void sub_1B02A1C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, unsigned int a9, unsigned int a10)
{
  if (a10 < a9 != v12 + 1672047301 < (a8 + a7 - 1054200861)) {
    BOOL v11 = v12 + 1672047301 < (a8 + a7 - 1054200861);
  }
  else {
    BOOL v11 = v12 + 1672047301 > a10;
  }
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02A205C@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X1>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>)
{
  *(int8x16_t *)(v8 + (v5 + 16)) = vaddq_s8(vsubq_s8(*a2, vandq_s8(vaddq_s8(*a2, *a2), a4)), a5);
  return (*(uint64_t (**)(uint64_t, int8x16_t *))(v9 + 8 * (((v6 == 16) * (a3 + 66)) | v7)))(a1, a2 + 1);
}

uint64_t sub_1B02A2068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v26 - 112) = a20;
  *(void *)(v26 - 144) = a21;
  *(void *)(v26 - 136) = a20;
  *(void *)(v26 - 128) = a22;
  *(_DWORD *)(v26 - 120) = (v25 ^ 0x6A)
                         - 312
                         + 460628867 * ((((2 * (v26 - 144)) | 0x549A4966) - (v26 - 144) + 1437784909) ^ 0xE6DBA6CE);
  (*(void (**)(uint64_t))(v24 + 8 * ((v25 ^ 0x6A) + 66)))(v26 - 144);
  *(void *)(v26 - 112) = a20;
  *(_DWORD *)(v26 - 120) = (v25 ^ 0x6A)
                         - 312
                         + 460628867 * ((v26 - 783148786 - 2 * ((v26 - 144) & 0xD152199E)) ^ 0x9DC49BE3);
  *(void *)(v26 - 144) = a21;
  *(void *)(v26 - 136) = a20;
  *(void *)(v26 - 128) = a22;
  (*(void (**)(uint64_t))(v24 + 8 * ((v25 ^ 0x6A) + 66)))(v26 - 144);
  int v27 = 1759421093 * ((~((v26 - 144) | 0xE38F931A) + ((v26 - 144) & 0xE38F931A)) ^ 0xAF0DDCB1);
  *(_DWORD *)(v26 - 132) = v27 + (v25 ^ 0x6A) - 1638;
  *(_DWORD *)(v26 - 128) = v23
                         - 1334526198
                         + (((v25 ^ 0x6A) + 149185251) & 0xF71B94E7)
                         + (((v25 ^ 0x6A) - 2071546637) & 0x7B7943F8)
                         + v27
                         - 686;
  *(void *)(v26 - 144) = a23;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0x1C6)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * ((506 * (*(_DWORD *)(v26 - 136) == 633308027)) ^ v25 ^ 0x6A)))(v28);
}

uint64_t sub_1B02A2220@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  unsigned int v3 = *(_DWORD *)(v2 - 0x7DA9E0EFFB1E361ELL) + 2077042531;
  unsigned int v4 = *(_DWORD *)(v2 - 0x7DA9E0EFFB1E3622) + 778373300;
  BOOL v5 = v3 < 0xAA02BC59;
  BOOL v6 = v3 > v4;
  if (v5 != v4 < ((367 * (((a1 - 619) | 0x230) ^ 0x236)) ^ 0xAA02B9E5)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(a2 + 8 * ((v6 | (16 * v6)) ^ a1)))();
}

uint64_t sub_1B02A22C8@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X8>)
{
  *(unsigned char *)(a4 + (a1 + a2)) = *(unsigned char *)(v4 + (a1 + a2));
  return (*(uint64_t (**)(void))(v7 + 8 * (((a1 - 1 == a3) * v6) ^ (v5 - 288))))();
}

uint64_t sub_1B02A22FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v4
                                                                                + 8
                                                                                * (((v5 == ((v6 - 1646936744) & 0x622A3DEE)
                                                                                         + 1493277963)
                                                                                  * ((v6 - 1870995554) & 0x6F851EDE ^ 0x4E3)) ^ v6)))(a1, a2, a3, a4, 40603648);
}

uint64_t sub_1B02A2364(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                               + 8
                                                                               * (((v4 < ((v5 - 1496) ^ 0x1A2u))
                                                                                 * ((v5 - 930) ^ 0x3CC)) | v5)))(a1, a2, a3, a4, 0);
}

uint64_t sub_1B02A239C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,int a27,uint64_t a28,uint64_t a29)
{
  int v31 = *(_DWORD *)(a2 + 4);
  uint64_t v32 = *(void *)(a2 + 8);
  unsigned int v33 = 628203409 * (&a22 ^ 0x82880C33);
  a26 = a15;
  a28 = v32;
  a23 = a12;
  a22 = a14;
  a29 = a13;
  a24 = v30 - v33 - 780;
  a25 = 186887302 - v33 + v31;
  (*(void (**)(uint64_t *))(v29 + 8 * (v30 ^ 0xD9A)))(&a22);
  return (*(uint64_t (**)(_UNKNOWN **, uint64_t, uint64_t, uint64_t))(v29
                                                                           + 8
                                                                           * ((624
                                                                             * (a27 == v30
                                                                                     + 1904944816
                                                                                     + ((v30 - 847) | 0x10)
                                                                                     - 1535)) ^ v30)))(&off_1F08D3590, a2, 44587773, 1400183661);
}

uint64_t sub_1B02A24A0(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 56) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 64) = *(void *)(a2 + 8);
  return 0;
}

void sub_1B02A24B8(int a1@<W8>, uint64_t a2)
{
  uint64_t v4 = v3 + 17 * (v2 ^ 0xDEu) - 3333;
  STACK[0x328] = v4;
  LODWORD(STACK[0x374]) = a1;
  LODWORD(STACK[0x2E0]) = STACK[0x4AC];
  LODWORD(STACK[0x2D8]) = STACK[0x364];
  STACK[0x260] = v4;
  int v5 = (char *)&a2 + v4 - 0x9872DDC1BE05FF8;
  STACK[0x2C0] = (unint64_t)(v5 + 2048);
  STACK[0x2C8] = (unint64_t)(v5 + 2176);
  STACK[0x2E8] = (unint64_t)v5;
  STACK[0x2D0] = (unint64_t)(v5 + 2304);
  JUMPOUT(0x1B02C2BECLL);
}

uint64_t sub_1B02A24E8@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((((v6 ^ ((*(unsigned char *)(a5 + 1 + a4) - *(unsigned char *)(v5 + 1)) == 244)) & 1)
                                * ((v6 - 722 + a1) & a2 ^ a3)) ^ (v6 + 402))))();
}

void sub_1B02A24F8(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02A2580@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * (((v3 == v4 + 149 + v2) * ((v4 ^ a1) - 1315)) ^ v4)))();
}

uint64_t sub_1B02A25AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                                  + 8 * (((159 * (v6 ^ 0x386) + 183) * (v8 == 1904944996)) ^ (v6 - 424))))(a1, a2, a3, a4, a5, a6, 2389998781);
}

uint64_t sub_1B02A25F0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 ^ (*(void *)(v1 + 24) == 0x195FBC68F38D742ELL)) & 1 | (8 * ((v0 ^ (*(void *)(v1 + 24) == 0x195FBC68F38D742ELL)) & 1))) ^ v0)))();
}

uint64_t sub_1B02A262C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v11
                                                             + 8
                                                             * ((((v8 + a8 + 536) ^ v8 ^ a8 ^ 0x302) * ((v9 & 0x18) == 0)) ^ a8)))(a1, a2, (v10 - a4));
}

uint64_t sub_1B02A2664@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v4 + (v6 + v3)) = *(unsigned char *)(v2 + (v6 + v3));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 != a1) * (v5 ^ 0x429)) ^ v5)))();
}

void sub_1B02A2698()
{
}

void sub_1B02A26A4(int a1@<W8>)
{
  **(_DWORD **)(v1 - 0x6155FFFFEB445CBDLL) = (v2 - 475) ^ 0x2FC527BC ^ (v3 - 291556697);
  *(_DWORD *)(v1 - 0x6155FFFFEB445CC1) = a1 + 1;
}

uint64_t sub_1B02A26E8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((206
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 8) - 11)))
                                 + ((v0 + ((v3 + 340334760) & 0xEBB6E643) - 577) ^ (*(unsigned __int8 *)(v2 + 8) - 11)) == v0)) ^ v3)))();
}

uint64_t sub_1B02A273C()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1451)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (STACK[0x530] == 0)) ^ (v0 + 831))))();
}

uint64_t sub_1B02A2774@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W7>, int a5@<W8>, uint64_t a6)
{
  unint64_t v11 = STACK[0x420] + a5 - 1596211165 + 53 * (v6 ^ 6u);
  unint64_t v12 = STACK[0x598];
  STACK[0x340] = *(void *)(v10 + 8 * v6);
  STACK[0x5A8] = v12;
  STACK[0x5B0] = v11;
  unint64_t v13 = STACK[0x328];
  uint64_t v14 = (char *)&a6 + STACK[0x328] - 0x9872DDC1BE05FF8;
  STACK[0x5B8] = (unint64_t)v14;
  STACK[0x328] = v13 + 320;
  int v15 = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E829);
  LODWORD(STACK[0x3A4]) = v15;
  int v16 = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E825);
  LODWORD(STACK[0x494]) = v16;
  int v17 = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E821);
  LODWORD(STACK[0x384]) = v17;
  int v18 = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E81DLL);
  LODWORD(STACK[0x438]) = v18;
  int v19 = *(unsigned __int8 *)(v12 - 0x2B41EA7AD2F8E811) ^ 0xAE;
  if (v19 == 2)
  {
    int v23 = STACK[0x2B8] & 0x2DFCFBBF;
    LODWORD(STACK[0x4BC]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E819);
    LODWORD(STACK[0x56C]) = 729270108;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v10
                                                                         + 8
                                                                         * ((670
                                                                           * ((v23 ^ 0xD4883818) + 729270108 < 0x40)) ^ v23)))(140, 117, 3809889992, 71960430);
  }
  else if (v19 == 1)
  {
    LODWORD(STACK[0x56C]) = v9;
    BOOL v21 = v11 < STACK[0x2C0] + v13 && (unint64_t)v14 < v11 + 64;
    return (*(uint64_t (**)(void))(v10
                                + 8 * (((LODWORD(STACK[0x2E8]) + LODWORD(STACK[0x2D0]) - 1744) * v21) ^ (a4 + 464))))();
  }
  else
  {
    int v24 = (*(_DWORD *)(v12 - 0x2B41EA7AD2F8E829) ^ v7) + (v15 ^ v7);
    *(_DWORD *)(v12 - 0x2B41EA7AD2F8E829) = v24 + v7 - (v8 & (2 * v24));
    int v25 = (*(_DWORD *)(v12 - 0x2B41EA7AD2F8E825) ^ v7) + (v16 ^ v7);
    *(_DWORD *)(v12 - 0x2B41EA7AD2F8E825) = v7 + v25 - (v8 & (2 * v25));
    int v26 = (*(_DWORD *)(v12 - 0x2B41EA7AD2F8E821) ^ v7) + (v17 ^ v7);
    *(_DWORD *)(v12 - 0x2B41EA7AD2F8E821) = v26 + v7 - (v8 & (2 * v26));
    int v27 = (*(_DWORD *)(v12 - 0x2B41EA7AD2F8E81DLL) ^ v7) + (v18 ^ v7);
    *(_DWORD *)(v12 - 0x2B41EA7AD2F8E81DLL) = v27 + v7 - (v8 & (2 * v27));
    STACK[0x328] = v13;
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x340])(a1, a2, a3, 71960430);
  }
}

uint64_t sub_1B02A27AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, _DWORD *a18, uint64_t a19, uint64_t a20,_DWORD *a21,void *a22)
{
  int v28 = v25 ^ v24;
  *a18 = v23 + 1;
  unsigned int v29 = ((v22 ^ (v22 >> 11)) << 7) & 0x9D2C5680 ^ v22 ^ (v22 >> 11);
  int v30 = (unsigned char *)(a14 + (a17 - 1));
  unsigned int v31 = 2003914383 * ((*(_DWORD *)(*a22 + (*a21 & 0x4E0A9038)) ^ v30) & 0x7FFFFFFF);
  unint64_t v32 = 2003914383 * (v31 ^ HIWORD(v31));
  LODWORD(v32) = *(unsigned __int8 *)(*(void *)(v26 + 8 * (v28 - 1043)) + (v32 >> 24)) ^ (((v29 << 15) & 0xEFC60000 ^ v29) >> (v25 ^ v24)) ^ (v29 << 15) & 0xEFC60000 ^ v29 ^ *(unsigned __int8 *)(*(void *)(v26 + 8 * (v28 ^ 0x4AF)) + (v32 >> 24)) ^ *(unsigned __int8 *)(*(void *)(v26 + 8 * (v28 - 1046)) + (v32 >> 24) - 7) ^ v32 ^ ((v32 >> 24) * (((v28 + 368) | 0x10) - 87));
  *int v30 = v32;
  return (*(uint64_t (**)(void))(v27 + 8 * ((57 * (a17 == (v32 != 0))) ^ v25 ^ v24)))();
}

uint64_t sub_1B02A28C8@<X0>(uint64_t a1@<X7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((30 * (a1 + 1 == v3 + 44)) ^ a2)))();
}

uint64_t sub_1B02A299C(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((119 * (a1 + v2 + v1 + 395 + ((v1 - 1216) ^ 0xC203FA5E) > 7)) ^ v1)))();
}

void sub_1B02A29EC(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(a1 - 0x6155FFFFEB445CBDLL) + 4 * (v6 + v4)) = v2
                                                                        - ((2 * v2 + 604536140) & v5)
                                                                        + (v3 ^ 0xBD4)
                                                                        - 748795886;
  *(_DWORD *)(a1 - 0x6155FFFFEB445CC1) = (((v6 + 1 + v4) * (v1 - 1181130269)) ^ 0xFABF7D5A)
                                         + 1476173496
                                         + ((2 * (v6 + 1 + v4) * (v1 - 1181130269)) & 0xF57EFAB4);
}

uint64_t sub_1B02A2A38@<X0>(int a1@<W0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a2 + a3 + v4) = v5;
  BOOL v7 = (((v3 ^ 0x368) + a1) & 0xBC609B3F ^ (unint64_t)(v4 + 42)) + a3 < 0x38;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (8 * v7)) ^ v3 ^ 0x368)))();
}

uint64_t sub_1B02A2A80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((a8 - 691) ^ 0x2E1) * ((v9 ^ v10) < 0x201)) ^ (a8 - 691))))();
}

uint64_t sub_1B02A2AC8()
{
  uint64_t v6 = *(unsigned int *)*(&off_1F08D3590 + ((v0 + 2) ^ 0x758C071B));
  unint64_t v7 = (((v2 | 0xFCB602E90F3071B5) - (v2 & 0xFCB602E90F3071B5)) ^ 0xF2BA9CE562C469BCLL) * v4;
  *(_DWORD *)(v5 - 124) = 1602954751 - v7;
  STACK[0x580] = v7;
  STACK[0x598] = v6 + v7;
  *(_DWORD *)(v5 - 132) = v7;
  *(_DWORD *)(v5 - 128) = 2021363777 - v7;
  *(_DWORD *)(v5 - 136) = v7 + 1602954603;
  *(_DWORD *)(v5 - 152) = v7 + 1602954615;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v1 + 1972113489)))(v5 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v5 - 148)))(v8);
}

uint64_t sub_1B02A2ADC()
{
  *(unsigned char *)(v0 + v2 - 897278984) = *(unsigned char *)(v4 + v2 - 897278984)
                                  - ((*(unsigned char *)(v4 + v2 - 897278984) << ((v1 ^ 0xEF) - 15)) & 0xA0)
                                  - 48;
  return (*(uint64_t (**)(void))(v5 + 8 * ((4092 * (v2 - 1 != v3)) ^ v1)))();
}

uint64_t sub_1B02A2B34@<X0>(uint64_t a1@<X8>)
{
  v16.val[1].i64[0] = ((_BYTE)v7 + 3) & 0xF;
  v16.val[1].i64[1] = ((_BYTE)v7 + 2) & 0xF;
  v16.val[2].i64[0] = ((_BYTE)v7 + 1) & 0xF;
  v16.val[2].i64[1] = v7 & 0xF;
  v16.val[3].i64[0] = ((_BYTE)v7 - 1) & 0xF;
  v16.val[3].i64[1] = ((_BYTE)v7 + 14) & 0xF;
  v17.val[0].i64[0] = ((_BYTE)v7 + 13) & 0xF;
  v17.val[0].i64[1] = ((_BYTE)v7 + 12) & 0xF;
  v17.val[1].i64[0] = ((_BYTE)v7 + 11) & 0xF;
  v17.val[1].i64[1] = (v7 + 10) & 0xF;
  v17.val[2].i64[0] = (v7 + 9) & 0xF;
  v17.val[2].i64[1] = ((_BYTE)v7 + 8) & 0xF;
  v17.val[3].i64[0] = ((_BYTE)v7 + 7) & 0xF;
  v17.val[3].i64[1] = ((_BYTE)v7 + 6) & 0xF;
  v10.i64[0] = 0xB7B7B7B7B7B7B7B7;
  v10.i64[1] = 0xB7B7B7B7B7B7B7B7;
  v11.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v11.i64[1] = 0xD0D0D0D0D0D0D0D0;
  v16.val[0].i64[0] = ((_BYTE)v7 + (_BYTE)v3) & 0xF;
  v16.val[0].i64[1] = ((_BYTE)v7 + 4) & 0xF;
  v12.i64[0] = vqtbl4q_s8(v16, (int8x16_t)xmmword_1B04C9C20).u64[0];
  v12.i64[1] = vqtbl4q_s8(v17, (int8x16_t)xmmword_1B04C9C20).u64[0];
  int8x16_t v13 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v1 - 15 + (v7 + v3)), *(int8x16_t *)(v6 + v16.val[0].i64[0] - 15)), veorq_s8(*(int8x16_t *)(v16.val[0].i64[0] + v4 - 10), *(int8x16_t *)(v5 + v16.val[0].i64[0] - 15))));
  int8x16_t v14 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v13, v13, 8uLL), v11), vmulq_s8(v12, v10)));
  *(int8x16_t *)(a1 - 15 + (v7 + v3)) = vextq_s8(v14, v14, 8uLL);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((2878 * ((((v2 + 1556) | 0xC2) ^ 0x8F2) == (v8 & 0xFFFFFFF0))) ^ (v2 + 406))))(v8);
}

uint64_t sub_1B02A2CA8()
{
  return sub_1B02A2CE4((v0 - 1391) ^ 0xB9u);
}

uint64_t sub_1B02A2CE4@<X0>(int a1@<W0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(a8 + 4 * (v8 + a2)) = *(_DWORD *)(*v10 + 4 * (v8 + a2));
  BOOL v16 = v8 + v12 > v13 || v8 + v12 < v11;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v16 * a1) ^ v9)))();
}

uint64_t sub_1B02A2D24@<X0>(int a1@<W2>, int a2@<W4>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,unsigned int a30)
{
  unsigned int v32 = v31[396] ^ ((*v31 & 0x7FFFFFFE | v31[623] & 0x80000000) >> 1);
  v31[623] = (v32 + (a3 ^ (a1 - 635) ^ 0x7A48E44B) - (a2 & (2 * v32))) ^ *((_DWORD *)&STACK[0x4F8] + (*v31 & 1));
  return (*(uint64_t (**)(void))(v30 + 8 * ((1049 * (a30 > 0x26F)) ^ a3)))();
}

uint64_t sub_1B02A2D98()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 ^ 0x1B5)))((v2 + 60575323) & 0xFC63ABB9 ^ v0 ^ (v1 + 2 * (v2 ^ 0x906) - 1234), 74971987) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((122 * v4) ^ v2)))();
}

uint64_t sub_1B02A2E10@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(v6 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v3;
  return (*(uint64_t (**)(void))(v5 + 8 * (v4 ^ (2 * (a1 < v2)))))();
}

uint64_t sub_1B02A2E38(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((31 * (v3 - a1 >= (unint64_t)((a3 + 37880190) | 0x28AC2401) - 720252065)) ^ a3)))();
}

void sub_1B02A2E84(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 44) - 1224239923 * (((a1 | 0x1FD8AEE4) - a1 + (a1 & 0xE027511B)) ^ 0xED6B5333);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B02A2FAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((2229 * (a13 == v14 + (v13 ^ 0x38E) + (((_WORD)v13 + 1004) & 0x7FE) - 2139)) ^ v13)))();
}

uint64_t sub_1B02A2FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,uint64_t a21,unsigned int a22,uint64_t a23)
{
  unsigned int v30 = 1178560073 * ((2 * (&a19 & 0x668DD7B8) - &a19 - 1720571836) ^ 0x23E65026);
  a21 = a14;
  a20 = v30 + 1531045867 * v27 + v28 + 81977336;
  a22 = (v28 + 549) ^ v30;
  (*(void (**)(int *))(v29 + 8 * (v28 + 1244)))(&a19);
  a21 = a14;
  a23 = v26;
  a22 = v28 + 1224239923 * (((&a19 | 0xD2DFFD2E) - (&a19 & 0xD2DFFD2E)) ^ 0x206C00F9) + 1153;
  (*(void (**)(int *))(v29 + 8 * (v28 + 1282)))(&a19);
  unsigned int v31 = 1178560073
      * (((&a19 | 0x47017ED0) - &a19 + (&a19 & 0xB8FE8128)) ^ 0xFD9506B2);
  a21 = a14;
  a20 = v31 + 1531045867 * v25 + 81978470;
  a22 = (v28 + 549) ^ v31;
  (*(void (**)(int *))(v29 + 8 * (v28 ^ 0xD24)))(&a19);
  unsigned int v32 = 1178560073
      * ((((2 * (&a19 ^ 0x5C83A2C3)) | 0xE648D27A) - (&a19 ^ 0x5C83A2C3) + 215717571) ^ 0x1533B39C);
  a23 = v23;
  a22 = v32 ^ ((v24 ^ 0xDD34BF94) + 1725917184 + ((2 * v24) & 0xBA697F28));
  a20 = v32 + v28 + 415;
  a21 = a14;
  uint64_t v33 = (*(uint64_t (**)(int *))(v29 + 8 * (v28 ^ 0xD1D)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v29 + 8 * ((25 * (a19 == 1904944996)) ^ v28)))(v33);
}

uint64_t sub_1B02A3218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (v10 ^ ((v12 > 1) | (2 * (v12 > 1))))))(a1, 0x173179E64FB025E0, a3, a4, a5, 0x173179E64FB025E0, a7, a8, a9, a10);
}

uint64_t sub_1B02A3230@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v13 = ((2 * (&a3 & 0x4D71FD88) - &a3 + 848167539) ^ 0x4C5B2785) * a1;
  a3 = v13 + v10 + 442768513 + (v12 ^ 0x5CD);
  a4 = v13 + v12 - 434;
  a7 = v13 + 1193549491;
  a5 = v7;
  a6 = v8;
  uint64_t v14 = (*(uint64_t (**)(int *))(v9 + 8 * (v12 ^ 0xAED)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((2949 * (*(_DWORD *)(v8 - 0x7DA9E0EFFB1E3616) == v11 + 1696)) ^ v12)))(v14);
}

uint64_t sub_1B02A32F0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v0 - 1247 + v0 - 337 + 2435) * (v2 == v1)) ^ v0)))();
}

uint64_t sub_1B02A3328(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, unsigned int a16, int a17, uint64_t a18, int a19, unsigned int a20)
{
  if (a10 >= 0x73CBD332) {
    int v23 = -289118292;
  }
  else {
    int v23 = -1487096439;
  }
  unsigned int v24 = 628203409 * ((&a15 & 0x565D80B1 | ~(&a15 | 0x565D80B1)) ^ 0x2B2A737D);
  a20 = v24 ^ 0xA1B42303;
  a15 = &STACK[0x53B515D5D604608F];
  a18 = a14;
  a16 = v23 - v24;
  a17 = v21 - v24 - 2024873886;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v22 + 8 * (v21 ^ 0xA06)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((105
                                              * ((v21 ^ (a19 == v20
                                                                               + ((v21 - 1100253988) & 0xEB3)
                                                                               - 1715)) & 1)) ^ v21)))(v25);
}

uint64_t sub_1B02A343C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v23 = (v21 + 226438652) & 0xF280CFEF;
  unsigned int v24 = v20 + a1 + (v23 ^ 0xFF2FBEA4);
  unsigned int v25 = v23 + 1280;
  unsigned int v26 = (v23 + 1285522305) & 0xB3607B14;
  unsigned int v27 = v23 + 93;
  BOOL v28 = v24 + 734763857 < a20 - 40499629;
  if ((a20 - 40499629) < 0xBA2F772 != v24 + 734763857 < (v25 ^ 0xBA2F118 ^ v26)) {
    BOOL v28 = (a20 - 40499629) < 0xBA2F772;
  }
  return (*(uint64_t (**)(void))(v22 + 8 * (int)((!v28 | (4 * !v28)) ^ v27)))();
}

uint64_t sub_1B02A347C(uint64_t a1, int a2, int8x8_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7)
{
  *(int8x8_t *)(a7 + v8) = veor_s8(*(int8x8_t *)(a1 + v8), a3);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 == 0) * v7) ^ a6)))();
}

#error "1B02A3634: call analysis failed (funcsize=82)"

uint64_t sub_1B02A3638()
{
  BOOL v4 = v2 + 861929878 > ((v0 + 252) ^ 0x239) - 729271635 && v2 + 861929878 < SLODWORD(STACK[0x2E8]);
  return (*(uint64_t (**)(void))(v1 + 8 * ((1951 * v4) ^ v0)))();
}

uint64_t sub_1B02A3688()
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * (((*(_DWORD *)(v0 + 4 * v2) != v3 + v1 + 6 - 193) * ((v1 + 1670) ^ 0x73B)) ^ v1)))();
}

uint64_t sub_1B02A36C0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((*(unsigned char *)(a1 + v1) == 94) * ((v2 - 475) ^ 0x5B)) ^ v2)))();
}

uint64_t sub_1B02A36F0(uint64_t a1)
{
  unsigned int v6 = *(unsigned __int8 *)(v1 + (v3 + v4 + 492));
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(v2
                                                                     + 8
                                                                     * (int)(((v6 >> 7) * ((v5 + 619) ^ 0x7D7)) ^ (v5 + 619))))(a1, ((2 * v6) & 0xCE) + ((v5 - 866) ^ 0x7B7D3A8A ^ v6) - 671621124, 4126831838, (v3 - 168135458));
}

uint64_t sub_1B02A3758@<X0>(uint64_t a1@<X2>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X7>, int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,int a46,int a47,int a48,int a49,unsigned int a50,int a51,int a52,int a53,int a54,unsigned __int8 a55)
{
  uint64_t v68 = v55;
  uint64_t v60 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v56 + 8 * a6);
  uint64_t v61 = a50;
  int v62 = a55 ^ 0xAE;
  if (v62 == 2)
  {
    BOOL v67 = (unint64_t)&a38 + 4 < a31 && v58 < (unint64_t)&a47;
    return (*(uint64_t (**)(void, uint64_t))(v56 + 8 * (int)(((a36 - 1115) * v67) ^ (a35 + 961))))(a50, 71960430);
  }
  else if (v62 == 1)
  {
    BOOL v64 = (unint64_t)&a38 + 4 < a31 && v58 < (unint64_t)&a47;
    return (*(uint64_t (**)(void))(v56
                                             + 8
                                             * (((((a35 ^ v64) & 1) == 0) * HIDWORD(a28)) ^ ((int)a35 + 2071))))(a50);
  }
  else
  {
    a49 = 2 * (a49 ^ v57) + v57 - (v59 & (4 * (a49 ^ v57)));
    a50 = 2 * (a50 ^ v57) + v57 - (v59 & (4 * (a50 ^ v57)));
    a51 = 2 * (a51 ^ v57) + v57 - (v59 & (4 * (a51 ^ v57)));
    a52 = 2 * (a52 ^ v57) + v57 - (v59 & (4 * (a52 ^ v57)));
    HIDWORD(a32) = a55 ^ 0xFFFFFFAE;
    return v60(v61, 26, a1, a35, a2, a3, a4, a5, a7, a8, a9, a10, a11, a12, a13, v68, a15, a16, a17,
             a18,
             a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40);
  }
}

uint64_t sub_1B02A3764()
{
  if (v2 >= 0) {
    unsigned int v4 = v2;
  }
  else {
    unsigned int v4 = -v2;
  }
  if (v0 < 0) {
    int v0 = -v0;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v1 - 61) ^ 0x2A ^ ((v1 - 77) | 0x10)) * (v4 > v0)) ^ v1)))();
}

uint64_t sub_1B02A37A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v25 = v22 + 1999;
  *(_DWORD *)(v24 - 120) = v22
                         + 1225351577
                         * ((((v24 - 144) | 0x8D981A6C) - (v24 - 144) + ((v24 - 144) & 0x7267E590)) ^ 0xAE02C27A)
                         + 1368;
  *(void *)(v24 - 112) = a21;
  *(void *)(v24 - 104) = a13;
  *(void *)(v24 - 136) = a20;
  *(void *)(v24 - 128) = a22;
  *(void *)(v24 - 144) = a20;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v22 + 2174)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * ((255
                                              * ((((a18 - 1334526196) < 0x7FFFFFFF) ^ ((v25 ^ 0x32) + 41)) & 1)) ^ (v25 - 1822))))(v26);
}

void sub_1B02A386C(uint64_t a1)
{
  BOOL v3 = *(_DWORD *)(*(void *)(a1 + 16) - 0x6155FFFFEB445CC1) != 1388059666
    && *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1) != 1388059666;
  int v1 = *(_DWORD *)(a1 + 8) ^ (535753261 * ((((2 * a1) | 0xDEFAB094) - a1 + 276998070) ^ 0xE5895665));
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02A396C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  BOOL v50 = HIDWORD(a24) != 2037438032 && (BYTE4(a24) & 0xF) == ((520 * (v47 ^ 0x1D0)) ^ 0x618);
  return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((v50 * ((v47 - 254) ^ 0xF9)) ^ v47)))((v47 - 254), a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_1B02A39CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  *(_DWORD *)STACK[0x278] = 0;
  unsigned int v75 = ((v71 ^ (v71 >> 11)) << 7) & 0x9D2C5680 ^ v71 ^ (v71 >> 11);
  unsigned int v76 = (v75 << 15) & 0xEFC60000 ^ v75 ^ 0xF628D51E ^ (((v75 << 15) & 0xEFC60000 ^ v75) >> a69);
  int v77 = (unsigned char *)(v72 + (a71 ^ 0xA8D9FDBE) + v74);
  unsigned int v78 = 2003914383
      * ((*(_DWORD *)(*(void *)STACK[0x2D8] + (*(_DWORD *)STACK[0x2D0] & 0x6E6CDEC4)) ^ v77) & 0x7FFFFFFF);
  unint64_t v79 = (v78 ^ HIWORD(v78)) * (a71 + 2003913060);
  LOBYTE(v79) = *((unsigned char *)*(&off_1F08D3590 + (a71 ^ 0x558)) + (v79 >> 24) - 12) ^ v76 ^ 0x1E ^ *((unsigned char *)*(&off_1F08D3590 + (a71 ^ 0x552))
                                                                                                + (v79 >> 24)
                                                                                                - 12) ^ *((unsigned char *)*(&off_1F08D3590 + (a71 ^ 0x541)) + (v79 >> 24) - 11) ^ v79 ^ (-123 * (((v78 ^ HIWORD(v78)) * (a71 + 2003913060)) >> 24));
  *int v77 = v79;
  return (*(uint64_t (**)(void))(v73 + 8 * ((998 * (v74 - (v79 != 0) == 1462110058)) ^ a71)))();
}

uint64_t sub_1B02A39D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int8x16_t *a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int8x16_t v37 = *(int8x16_t *)(a32 + (v33 + v32 + 57));
  *a7 = vaddq_s8(vsubq_s8(v37, vandq_s8(vaddq_s8(v37, v37), v35)), v36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, int8x16_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (a9 + 1067)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23);
}

uint64_t sub_1B02A3A2C()
{
  return 4294925278;
}

void sub_1B02A3A34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,int a57,int a58,int a59,int a60)
{
  *(_DWORD *)(v60 - 128) = a57 ^ 0x4061C637;
  *(_DWORD *)(v60 - 140) = a59 ^ 0xF3D6942A;
  *(_DWORD *)(v60 - 132) = a60 ^ 0x24DC5F62;
  *(_DWORD *)(v60 - 136) = a58 ^ 0x4446716;
  JUMPOUT(0x1B029FAC0);
}

uint64_t sub_1B02A3A88@<X0>(int a1@<W8>, uint64_t a2, ...)
{
  va_start(va, a2);
  BOOL v5 = (*(uint64_t (**)(void, char *, void, uint64_t))(v3 + 8 * (v4 ^ 0xBCAu)))(**(unsigned int **)(v2 + 8 * (v4 ^ 0x2CEu)), va, ((a1 - 643223709 + ((v4 - 681) | 0x88A)) & 0xFFFFF000 ^ 0x7FFDB7B7)+ ((((v4 - 1797240912) & 0x6B1FBDBD) - 305208) & (2 * (a1 - 643223709 + ((v4 - 681) | 0x88A))))- 2147334071, 1) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 ^ (32 * v5))))();
}

uint64_t sub_1B02A3B2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, int8x16_t a10@<Q0>, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v71 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((int)a8 + a9 + 31));
  int v52 = BYTE4(a38) ^ 0xAE;
  HIDWORD(a18) = BYTE4(a38) ^ 0xFFFFFFAE;
  if (v52 == 2)
  {
    int8x16x4_t v73 = vld4q_s8(v47);
    LODWORD(a18) = HIDWORD(a37);
    uint8x16_t v61 = (uint8x16_t)veorq_s8(v73.val[1], a10);
    _Q22 = vmovl_u8(*(uint8x8_t *)v61.i8);
    _Q21 = vmovl_high_u8(v61);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    unsigned int v66 = (_DWORD *)(v46 + 4 * (v50 + 2018821829));
    int v67 = *(v66 - 8) ^ *(v66 - 3);
    int v68 = *(v66 - 16) ^ *(v66 - 14) ^ (v49 + v67 - (a4 & (2 * v67)));
    HIDWORD(v69) = v68 ^ v49;
    LODWORD(v69) = v68;
    *unsigned int v66 = (v69 >> 31) + v49 - (a4 & (2 * (v69 >> 31)));
    int v70 = *(uint64_t (**)(void, void, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((1978 * (v51 == 2018821766)) ^ 0x380u));
    return v70(v70, HIDWORD(a37), 896, a4, a5, a6, (v49 + 1082), a8, a11, a12, a13, a14, a15, a16, a17, a18, a19, __PAIR64__(a37, HIDWORD(a36)), __PAIR64__(a36, HIDWORD(a35)),
             v71,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46);
  }
  else if (v52 == 1)
  {
    int8x16x4_t v72 = vld4q_s8(v47);
    uint8x16_t v53 = (uint8x16_t)veorq_s8(v72.val[2], a10);
    _Q22 = vmovl_high_u8(v53);
    _Q21 = vmovl_u8(*(uint8x8_t *)v53.i8);
    __asm
    {
      SHLL2           V21.4S, V21.8H, #0x10
      SHLL2           V22.4S, V22.8H, #0x10
    }
    return (*(uint64_t (**)(char *, char *, uint64_t, uint64_t, uint64_t, uint64_t, void, _UNKNOWN **, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * ((2547 * (a23 + 1 == v51)) ^ a5)))((char *)*(&off_1F08D3590 + (int)a5 - 481) - 4, (char *)*(&off_1F08D3590 + (int)a5 - 495) - 8, a23 + v50, 3584298320, a5, a6, *(&off_1F08D3590 + (int)a5 - 384), &off_1F08D3590, a11, a12, a13, a14, a15, a16, a17, a18, a19, __PAIR64__(a37, HIDWORD(a36)), __PAIR64__(a36, HIDWORD(a35)),
             v71,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46);
  }
  else
  {
    return v71(a1, a2, a3, a4, a5, a6, a7, a8, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20, __PAIR64__(a36, HIDWORD(a35)),
             v71,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28);
  }
}

uint64_t sub_1B02A4010(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31)
{
  STACK[0x570] -= 32;
  if (((a31 - 2018854864) & 0x78554576 ^ 0xF6F77EE2) == 0xF6F77FA4) {
    int v32 = 1904944996;
  }
  else {
    int v32 = -1904968516;
  }
  LODWORD(STACK[0x2E8]) = v32;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31
                                                                                + 8
                                                                                * ((a31 + 880) | (16
                                                                                                * (((a15 - ((2 * a16) & 0xBA057A34) + 160276919) ^ 0x8BB400F5)
                                                                                                 + 736876536
                                                                                                 + ((2 * (a15 - ((2 * a16) & 0xBA057A34) + 160276919)) & 0xAD6D7BDE ^ 0xA8057A14) != 44209639)))))(a1, a2, a3, a4, a13);
}

uint64_t sub_1B02A4124(uint64_t a1, int a2)
{
  BOOL v6 = v5 - v2 + 4 >= (unint64_t)(a2 | 0x8A2u) - 2186;
  return (*(uint64_t (**)(void))(v4 + 8 * (((2 * v6) | (4 * v6)) ^ v3)))();
}

uint64_t sub_1B02A415C@<X0>(uint64_t a1@<X1>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + a1) = -48;
  return (*(uint64_t (**)(void))(v21 + 8 * ((1613 * ((unint64_t)(a3 + 1 + a1) < 0x38)) ^ (a2 + v20 + 759))))();
}

uint64_t sub_1B02A419C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                               + 8
                                                                               * ((((((a5 - 1019157858) & 0x3CBF1B6D)
                                                                                   + 500) ^ 0x45E)
                                                                                 * ((v6 & 8) == 0)) ^ (a5 - 121))))(a1, a2, a3, a4, (v5 - a4));
}

uint64_t sub_1B02A41E4()
{
  return 4294925273;
}

uint64_t sub_1B02A41EC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 == ((53 * (v1 ^ 0x37B)) ^ v0)) * (((v1 ^ 0x37B) + 2216) ^ 0x85E)) ^ v1)))();
}

uint64_t sub_1B02A422C@<X0>(int a1@<W8>)
{
  uint64_t v4 = *v6;
  *(_DWORD *)(v3 - 112) = (a1 - 171) ^ (535753261
                                      * ((((2 * ((v3 - 128) ^ 0x7587E918)) | 0xC547EBD2)
                                        - ((v3 - 128) ^ 0x7587E918)
                                        + 492571159) ^ 0x9DD012DE));
  *(void *)(v3 - 128) = v2;
  *(void *)(v3 - 120) = v4;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (a1 ^ 0xF7E)))(v3 - 128);
}

void sub_1B02A42FC()
{
  _DWORD *v0 = *(_DWORD *)(v1 - 0x7DA9E0EFFB1E3616);
}

uint64_t sub_1B02A434C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  unsigned int v35 = (a27 & 0xDFFFFFFF ^ 0x518B2764) + 1325748618 - ((2 * (a27 & 0xDFFFFFFF ^ 0x518B2764)) & 0x9E0AA314);
  int8x16_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 8 * (v32 - 266));
  uint64_t v37 = *v33;
  unsigned int v38 = v30 - 116547321;
  *(unsigned char *)(*v33 + v38 + 1) = (v27 ^ BYTE2(v35)) - (v34 & (v35 >> 15)) - 48;
  *(unsigned char *)(v37 + v38) = (HIBYTE(v35) ^ 0x4F) - (v34 & (2 * (HIBYTE(v35) ^ 0x4F))) - 48;
  *(unsigned char *)(v37 + v38 + 2) = (v29 ^ BYTE1(v35)) - (v34 & (2 * (v29 ^ BYTE1(v35)))) - 48;
  *(unsigned char *)(v37 + v38 + 3) = ((a27 ^ 0x64) - 118 - ((2 * (a27 ^ 0x64)) & 0x14)) ^ v28;
  return v36(2286317074, 2008650222, 1325748618, a4, a5, 79, a7, a8, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_1B02A44E8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((81
                                * ((((((((v0 + 1518) << 6) ^ 0x1E7C0) - 256) | 0x100) ^ 0xFFFFFEFC) & v1)
                                 - LODWORD(STACK[0x2C8]) == -3)) ^ (v0 + 1518))))();
}

void IPaI1oem5iL(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

void sub_1B02A45A4()
{
  _DWORD *v0 = v1;
}

uint64_t sub_1B02A45E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, int8x16_t a4@<Q1>, int8x16_t a5@<Q4>, int8x16_t a6@<Q5>, int32x4_t a7@<Q6>, int8x16_t a8@<Q7>)
{
  int v11 = (const float *)(v10 + 908);
  int8x16_t v12 = (int8x16_t)vld1q_dup_f32(v11);
  a4.i64[0] = *(void *)(v10 + 912);
  a4.i32[2] = *(_DWORD *)(v10 + 920);
  int8x16_t v13 = vextq_s8(v12, a4, 0xCuLL);
  int8x16_t v14 = a4;
  v14.i32[3] = *(_DWORD *)(v10 + 924);
  int32x4_t v15 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v14, a5), vandq_s8(v13, a8)), 1uLL), *(int8x16_t *)v10);
  v13.i32[0] = *(_DWORD *)(v9 + 4 * (*(unsigned int *)(v10 + 912) & (a3 ^ 0x21D)));
  v13.i32[1] = *(_DWORD *)(v9 + 4 * (*(_DWORD *)(v10 + 916) & 1));
  v13.i32[2] = *(_DWORD *)(v9 + 4 * (*(_DWORD *)(v10 + 920) & 1));
  v13.i32[3] = *(_DWORD *)(v9 + 4 * (v14.i8[12] & 1));
  *(int8x16_t *)(v10 + 908) = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v15, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v15, v15), a6)), a7), v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8 * (int)a3))(a1, a2, 541);
}

void sub_1B02A46A0(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02A46E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W5>, int a7@<W6>, uint64_t a8@<X8>)
{
  *(_DWORD *)(*v11 + 4 * (v9 + v8 + v13 - 196)) = a6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a8
                                                                                         + 8
                                                                                         * (((v12 == v13 - 47 + v10)
                                                                                           * (((v13 - 196) ^ a7) - 1315)) ^ (v13 - 196))))(a1, a2, a3, a4, a5, 3243905427);
}

uint64_t sub_1B02A4734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(v10 + 48 * (v7 + a7)) == 1465141144) * (((v8 - 96) | 0x60) - 261)) ^ (v8 + 1383))))();
}

uint64_t sub_1B02A477C@<X0>(int a1@<W8>)
{
  int v8 = *(unsigned int **)(v6 + 8 * (a1 - 433));
  uint64_t v9 = *(void **)(v6 + 8 * (a1 - 501));
  uint64_t v10 = *v8;
  int v11 = (unsigned char *)*v9;
  v22[0] = *(unsigned char *)*v9 - 29;
  v22[1] = v11[1] - 29;
  v22[2] = v11[2] - 29;
  v22[3] = v11[3] - 29;
  v22[4] = v11[4] - 29;
  v22[5] = v11[5] - 29;
  v22[6] = v11[6] - 29;
  v22[7] = v11[7] - 29;
  v22[8] = v11[8] - 29;
  v22[9] = v11[9] - 29;
  v22[10] = v11[10] - 29;
  v22[11] = v11[11] - 29;
  v22[12] = v11[12] - 29;
  v22[13] = v11[13] - 29;
  v22[14] = v11[14] - 29;
  v22[15] = v11[15] - 29;
  v22[16] = v11[16] - 29;
  v22[17] = v11[17] - 29;
  v22[18] = v11[18] - 29;
  v22[19] = v11[19] - 29;
  unsigned char v22[20] = v11[20] - 29;
  v22[21] = v11[21] - 29;
  int v12 = (unsigned char *)*v9;
  v22[22] = v12[22] - 29;
  v22[23] = v12[23] - 29;
  v22[24] = v12[24] - 29;
  v22[25] = v12[25] - 29;
  v22[26] = v12[26] - 29;
  v22[27] = v12[27] - 29;
  v22[28] = v12[28] - 29;
  v22[29] = v12[29] - 29;
  int v13 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (a1 + 1767)))(v10, v22, v2);
  unsigned int v14 = ((2 * v13) & 0xAFDDDFA2) + (v13 ^ 0x57EEEFD1);
  if (v14 != 1475276753)
  {
    if (v14 == 1475277855)
    {
      uint64_t v15 = *v8;
      BOOL v16 = **(unsigned char ***)(v6 + 8 * (v4 ^ 0x299));
      v23[0] = *v16 - 109;
      v23[1] = v16[1] - 109;
      v23[2] = v16[2] - 109;
      v23[3] = v16[3] - 109;
      v23[4] = v16[4] - 109;
      v23[5] = v16[5] - 109;
      v23[6] = v16[6] - 109;
      v23[7] = v16[7] - 109;
      v23[8] = v16[8] - 109;
      v23[9] = v16[9] - 109;
      v23[10] = v16[10] - 109;
      v23[11] = v16[11] - 109;
      v23[12] = v16[12] - 109;
      v23[13] = v16[13] - 109;
      v23[14] = v16[14] - 109;
      v23[15] = v16[15] - 109;
      v23[16] = v16[16] - 109;
      v23[17] = v16[17] - 109;
      v23[18] = v16[18] - 109;
      v23[19] = v16[19] - 109;
      int v17 = (*(uint64_t (**)(uint64_t, unsigned char *, _DWORD *))(v5 + 8 * (v4 + 1767)))(v15, v23, v2);
      unsigned int v18 = (2 * v17) & 0xA79F7FA4;
      unsigned int v14 = (v17 ^ 0xD3CFBFD2) + 1832185726;
    }
    else
    {
      unsigned int v18 = -384450689;
    }
    __asm { BRAA            X8, X17 }
  }
  int v19 = 246 * (v4 ^ 0x25A);
  *(_DWORD *)(v7 + 356) |= v19 ^ 0x2E8;
  *(_DWORD *)(v7 + 56) = 1683335130;
  uint64_t result = (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, _DWORD *))(v5 + 8 * (v4 ^ 0xB14)))(*v2, v7 + 344, v7 + 348, v7 + 352, v3);
  uint64_t v21 = *v1;
  *(_DWORD *)(v1[2] - 0x59BC996355F9EC38) = *v2;
  *(_DWORD *)(v21 - 0x4F4E56651A0E794BLL) = *v3 - (((v19 ^ 0xBB) - 1827796845) & (2 * *v3)) + 1233585526;
  *((_DWORD *)v1 + 6) = 1904944996;
  return result;
}

void sub_1B02A4B3C(uint64_t a1)
{
  int v1 = 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02A4BB8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, char a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((123
                                * (((v6 + a3 + 63 < (v6 + a3)) ^ (((v7 - 61) & 0xF7)
                                                                                               - a6
                                                                                               - 115)) & 1)) ^ (v7 + 1413))))();
}

uint64_t sub_1B02A4C18()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (2170 * ((unint64_t)(v0 - v3) < 0x20)))))();
}

uint64_t sub_1B02A4C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v28 + 8 * v27))(((((v27 - 515739794) & 0x1EBD91FE) + 307774096) & 0xEDA7BD6F ^ 0x2000016E) & a27);
}

uint64_t sub_1B02A4C70(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v9 & ~((a3 + 212) ^ ((v6 + 1 + v8) < 8))) * a6) ^ a3)))();
}

uint64_t sub_1B02A768C(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v6 + (a1 + 302 + a2 + a6)) = *(unsigned char *)(v7 + (a1 + 302 + a2 + a6))
                                                      - (v10 & (2 * *(unsigned char *)(v7 + (a1 + 302 + a2 + a6))))
                                                      - 48;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 - 1 == v8) * v11) ^ a1)))();
}

uint64_t sub_1B02A76CC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*(void *)(v3 - 0x7DA9E0EFFB1E362ELL) + (v5 + 2078936285 + v2)) = *(unsigned char *)(*(void *)(v3 - 0x7DA9E0EFFB1E362ELL) + (v2 - 775263487));
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((1163
                                     * (v2 - 1 == ((((a1 + 840991704) & 0xCDDF7B3E) + 2025275001) & 0x8748C7B4 ^ v1))) ^ (a1 + 840991704) & 0xCDDF7B3E)))();
}

uint64_t sub_1B02A7760(int a1)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((v2 + v1 - 1877991095 < ((a1 + 1615993673) & 0x9FADE7BE ^ 0x5A2)) | (a1 + 384))))(v3);
}

uint64_t sub_1B02A77D4@<X0>(uint64_t a1@<X1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(void *)(a3 + v5 + a1) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v3 - 1038) | 0x30Fu) - 839 == (v4 & 0xFFFFFFFFFFFFFFF8)) * a2) ^ v3)))();
}

uint64_t sub_1B02A7818@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a3 + 8 * (((v3 != 0) * (v4 - 112)) ^ v4)))(a1, a2, (v4 + 842));
}

void sub_1B02A7848(uint64_t a1)
{
  (*(uint64_t (**)(void))(v1 + 19128))();
  (*(void (**)(uint64_t))(v1 + 18816))(a1);
  JUMPOUT(0x1B02A78ACLL);
}

uint64_t sub_1B02A7958()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((19 * (((v0 < 0x20) ^ (v1 - 76)) & 1)) ^ (v1 + 1587))))();
}

uint64_t sub_1B02A79A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned __int8 **a13)
{
  int v22 = (unsigned __int8 *)(*(void *)(a1 + 8 * (v19 + a3 - 249)) - 1);
  uint64_t v23 = ((((v19 + a3 - 193) | 0x540) - 2147482911) | 0x17233143) ^ (v18 + 480);
  BOOL v25 = ((**a13 - (*v22 ^ v21)) ^ v17) + ((v23 - v19 - 220) ^ v16) + (v13 & (2 * (**a13 - (*v22 ^ v21)))) != v20
     || a2 - 44588315 + v23 == 0;
  return (*(uint64_t (**)(_UNKNOWN **))(v15 + 8 * (int)((v25 * v14) ^ v23)))(&off_1F08D3590);
}

void sub_1B02A79D4(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x571B6222F4470CBALL) = v1 + 1;
  JUMPOUT(0x1B029C394);
}

uint64_t sub_1B02A79F0(_DWORD *a1)
{
  unsigned int v1 = 1225351577 * (((a1 | 0xD6503E34) - (a1 & 0xD6503E34)) ^ 0xF5CAE622);
  int v2 = a1[1] ^ v1;
  unsigned int v3 = *((_DWORD *)*(&off_1F08D3590 + (v2 ^ 0x20A)) + 86);
  unsigned int v4 = *a1 - v1 - 643068242;
  BOOL v5 = v3 + 1207164445 > v4;
  if (v4 < 0x47F3DE1D != v3 > 0xB80C21E2) {
    BOOL v5 = v3 > 0xB80C21E2;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v2 - 398) + 8 * ((!v5 * ((v2 + 814) ^ 0x57A)) ^ v2) - 12))();
}

uint64_t sub_1B02A7AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t a15)
{
  LODWORD(STACK[0x448]) = 1400183651;
  unint64_t v17 = STACK[0x400];
  STACK[0x350] = a15;
  return (*(uint64_t (**)(unint64_t))(v15
                                                     + 8
                                                     * ((25 * (a15 != ((6 * (v16 ^ 0x3D1)) ^ 0x1F8))) ^ (v16 + 1379))))(v17);
}

uint64_t sub_1B02A7AE8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((473 * (a1 + 1 != v3 + 48)) ^ v1)))();
}

void sub_1B02A7BC0(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = 1759421093 * ((-2 - ((~a1 | 0x72EDF858) + (a1 | 0x8D1207A7))) ^ 0xC190480C);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  int v3 = (*(unsigned char *)(a1 + 28) - v1);
  unsigned int v4 = (char *)*(&off_1F08D3590 + v2 - 466) - 12;
  (*(void (**)(void, uint64_t (*)()))&v4[8 * (v2 ^ 0xB2C)])(*(&off_1F08D3590 + (v2 ^ 0x2DA)), sub_1B02C3438);
  uint64_t v6 = *(void *)((char *)*(&off_1F08D3590 + v2 - 416) - 4);
  unsigned int v5 = (1374699841 * ((-1643461889 - (&v5 | 0x9E0AC2FF) + (&v5 | 0x61F53D00)) ^ 0xC012509)) ^ (v2 - 318);
  (*(void (**)(unsigned int *))&v4[8 * (v2 ^ 0xB21)])(&v5);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02A7D34@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)(((((v1 - 26922203) & 0x19ACFAB ^ 0xFFFFF930) + v1 + 597) * (v2 != 1575429042)) ^ v1)))();
}

uint64_t sub_1B02A7DA0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((107 * (v4 + v2 >= v0 + ((v1 - 1625) | 0x400u) + 1060)) ^ v1)))();
}

uint64_t sub_1B02A7DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,char *a61,int a62,unint64_t a63)
{
  uint64_t v76 = (v72 + 277383616) & 0xEF7773DF;
  a63 = (unint64_t)&STACK[0x50C] % 0x25 + v76 - 699;
  STACK[0x250] = 1374699841 * ((v75 - 192) ^ 0xE0C9E0C6DF41809);
  a62 = a5 ^ 0xAC7;
  STACK[0x2E0] = 1224239923
               * ((((v75 - 192) | 0x9D3B8BC2FD28331ELL) - (v75 - 192) + ((v75 - 192) & 0x62C4743D02D7CCE0)) ^ 0xB5613EAB0F9BCEC9)
               + 1453963021;
  LODWORD(STACK[0x2C0]) = a5 + 1453962120;
  LODWORD(STACK[0x2B8]) = a5 - 874588070;
  LODWORD(STACK[0x2B0]) = 70 * (a5 ^ 0x392);
  int v77 = 1061 * (a5 ^ 0x387);
  LODWORD(STACK[0x2A8]) = v77;
  LODWORD(STACK[0x2A0]) = v77 ^ 0x56A9BF5A;
  a71 = (1755732067 * ((v75 - 192) ^ 0xDDABA73FDEC6BDDBLL)) ^ 0x13FF;
  a72 = 1755732067 * ((v75 - 192) ^ 0xDDABA73FDEC6BDDBLL);
  a70 = 21 * (a5 ^ 0x3BA);
  a69 = a70 ^ 0x539;
  STACK[0x2E8] = STACK[0x308];
  a61 = (char *)&a9
      + v74
      + ((16 * ((&a9 - 0x130E5BB837C0BFFLL) + (_BYTE)v74) + 16) & 0x20)
      - 0x9872DDC1BE05FE8;
  *(int32x4_t *)&STACK[0x230] = vdupq_n_s32(0x110672D6u);
  *(int32x4_t *)&STACK[0x240] = vdupq_n_s32(0x7FFFFFFEu);
  *(int32x4_t *)&STACK[0x200] = vdupq_n_s32(0x8883396C);
  *(int32x4_t *)&STACK[0x210] = vdupq_n_s32(0x8883396B);
  unsigned int v78 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v73
                                                                     + 8
                                                                     * (int)((30
                                                                            * (((441
                                                                               * ((v76 - 1744401166) & 0x67F973C7 ^ 0x386)) ^ 0x50B) == 32)) ^ v76));
  STACK[0x2D8] = (unint64_t)*(&off_1F08D3590 + (int)v76 - 638) - 4;
  STACK[0x2D0] = (unint64_t)*(&off_1F08D3590 + (int)(v76 ^ 0x241));
  return v78(a1, a2, a3, 4129871134);
}

uint64_t sub_1B02A8064()
{
  BOOL v3 = v0 == ((v1 - 705) | 0x423u) + 150 + 0x78A03D79A6A1E321;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 | (16 * v3)) ^ v1)))();
}

uint64_t sub_1B02A80B0@<X0>(int8x16_t *a1@<X7>, int a2@<W8>)
{
  v7.i64[0] = 0xA0A0A0A0A0A0A0A0;
  v7.i64[1] = 0xA0A0A0A0A0A0A0A0;
  v8.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v8.i64[1] = 0xD0D0D0D0D0D0D0D0;
  *(int8x16_t *)(v5 + (a2 + v3 - 216 + v2)) = vaddq_s8(vsubq_s8(*a1, vandq_s8(vaddq_s8(*a1, *a1), v7)), v8);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2593 * (((v4 + 1) & 0x1FFFFFFF0) == 16)) ^ v3)))();
}

void sub_1B02A8114()
{
}

uint64_t sub_1B02A81F8@<X0>(uint64_t a1@<X1>, int a2@<W2>, int a3@<W6>, int a4@<W8>)
{
  *(unsigned char *)(a1 + v4) = *(unsigned char *)(v7 + (v5 + a2))
                      + (v8 | ~(2 * *(unsigned char *)(v7 + (v5 + a2))))
                      - 47;
  return (*(uint64_t (**)(void))(v6 + 8 * ((16 * (v4 == 63)) | (32 * (v4 == 63)) | (a3 + a4 + 73))))();
}

uint64_t sub_1B02A8244()
{
  *(_DWORD *)(v6 - 120) = v0 + ((((v6 - 120) | 0x9729A46D) + (~(v6 - 120) | 0x68D65B92)) ^ 0x77B5C647) * v4 + 1379;
  *(void *)(v6 - 112) = v3;
  *(void *)(v6 - 104) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0x84B)))(v6 - 120);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v6 - 116) > ((v0 + 684547598) & 0xD732A77F) + v5)
                                              * (v0 ^ 0x3AD)) | v0)))(v7);
}

uint64_t sub_1B02A82E8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  return sub_1B02A8348((a1 + 405), v2 - 0x6155FFFFEB445CBDLL, a2 - 0x6155FFFFEB445CBDLL, (a1 + 405) ^ 0x433u, 0x79E67DFDBEAFEB6BLL, 0x17D5FD6D6, 0xFEB9BF7BE7F1FEF7, 50);
}

uint64_t sub_1B02A8348(int a1, void *a2, void *a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v20 = 4 * (v17 + 1 + v14);
  int v21 = v8 + v12 + (*(_DWORD *)(*a2 + v20) ^ v15);
  *(_DWORD *)(*a3 + v20) = v21 + v15 - ((v21 << (3 * a4 + 107)) & v18);
  int v22 = v10 + v17 + 1687;
  int v23 = (v19 > v13) ^ (v22 < v9);
  BOOL v24 = v22 < v11;
  if (v23) {
    BOOL v24 = v19 > v13;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((!v24 * a8) ^ a1)))();
}

uint64_t sub_1B02A83DC@<X0>(int a1@<W8>)
{
  *(unsigned char *)(*v1 + (v2 + v6)) = *(unsigned char *)(*v1 + (v6 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 == v3) * v4) ^ a1)))();
}

uint64_t sub_1B02A8410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v11 = ((LODWORD(STACK[0x58C]) ^ v10) + (v9 ^ v10)) % ((a8 - 721) ^ 0x27A4u);
  *(_DWORD *)(STACK[0x228] + 52) = (v11 ^ 0x3FFABDFF) - 260083712 + ((2 * v11) & 0x7BFE);
  int v12 = STACK[0x594];
  STACK[0x328] -= 1616;
  LODWORD(STACK[0x314]) = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * ((482 * (v12 == v10)) ^ (a8 - 721))))();
}

uint64_t sub_1B02A8494(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((56 * (v3 - v2 < (unint64_t)(4 * ((a2 - 992562024) & 0x3B2947EF ^ 0x3F5u)) - 216)) ^ a2)))();
}

uint64_t sub_1B02A84E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(v6
                                            + 8 * (((((v5 + 1098919664) | 0x84502C4) - a4 + 1567) * (v4 == 59)) ^ v5)))(4294925278);
}

uint64_t sub_1B02A8528@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8 * ((((v3 ^ 0x5AD) - 302) * (a2 != v2)) ^ v3)))(a1, 76352022);
}

uint64_t sub_1B02A8560@<X0>(int a1@<W6>, int a2@<W7>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (v8 + a1 + 130)) = *(unsigned char *)(v5 + ((v8 + a1 + 130) & 0xFLL)) ^ *(unsigned char *)(v3 + (v8 + a1 + 130)) ^ *(unsigned char *)(v4 + (((_BYTE)v8 + (_BYTE)a1 - 126) & 0xF)) ^ *(unsigned char *)((((_BYTE)v8 + (_BYTE)a1 - 126) & 0xF) + v6 + 1) ^ (((v8 + a1 - 126) & 0xF) * ((a2 + 64) ^ 0x8A));
  return (*(uint64_t (**)(void))(v9 + 8 * ((143 * (a1 - 1 == v7)) ^ (a2 + 528))))();
}

uint64_t sub_1B02A85CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 0;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == a4)
                                * (v10 + ((2 * (v8 ^ 0x56C) - 1795029152) | 0x2213143) - 294)) ^ (2 * (v8 ^ 0x56C)))))();
}

void sub_1B02A8620(uint64_t a1)
{
  int v1 = 1224239923 * ((((2 * a1) | 0x5312CE6) - a1 - 43554419) ^ 0xF02B6BA4);
  __asm { BRAA            X11, X17 }
}

void sub_1B02A86E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((2 * (a1 & 0x878F6F35) - a1 + 2020643018) ^ 0xC2E4E8A8));
  __asm { BRAA            X8, X17 }
}

void sub_1B02A87CC()
{
}

uint64_t sub_1B02A87F0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v5 ^ 0x1CA) - 1062) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_1B02A8818()
{
  STACK[0x2A0] = v2;
  uint64_t v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 ^ 0x981)))(1576, 3012117910);
  STACK[0x3E0] = v3;
  return (*(uint64_t (**)(void))(v0 + 8 * (((v3 == 0) * ((((v1 - 1380607152) & 0x524A679D) - 300) ^ (v1 + 460))) ^ v1)))();
}

uint64_t sub_1B02A8888(double a1, int8x16_t a2)
{
  int v5 = 7 * (STACK[0x2F0] ^ 0x282);
  int8x16_t v6 = (int8x16_t)vld1q_dup_f32((const float *)v4);
  v7.i64[0] = 0x8000000080000000;
  v7.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v4 + 4);
  a2.i32[2] = *(_DWORD *)(v4 + 12);
  int8x16_t v8 = vextq_s8(v6, a2, 0xCuLL);
  int8x16_t v9 = a2;
  v9.i32[3] = *(_DWORD *)(v4 + 16);
  int32x4_t v10 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v9, *(int8x16_t *)&STACK[0x240]), vandq_s8(v8, v7)), 1uLL), *(int8x16_t *)(v4 + 1588));
  v8.i32[0] = *(_DWORD *)(v3 + 4 * (*(_DWORD *)(v4 + 4) & 1));
  v8.i32[1] = *(_DWORD *)(v3 + 4 * (*(unsigned int *)(v4 + 8) & ((v5 - 596) ^ 0x4DCLL)));
  v8.i32[2] = *(_DWORD *)(v3 + 4 * (*(_DWORD *)(v4 + 12) & 1));
  v8.i32[3] = *(_DWORD *)(v3 + 4 * (v9.i8[12] & 1));
  *(int8x16_t *)uint64_t v4 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v10, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v10, v10), *(int8x16_t *)&STACK[0x230])), *(int32x4_t *)&STACK[0x210]), v8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 8 * (v5 ^ 0x4C)))(2290301291, 285635286, 1244);
}

uint64_t sub_1B02A8894@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v8 = a2 + 1;
  *(_DWORD *)(v5 + 4 * v8 + 908) = *(_DWORD *)(v6 + 4 * (*(unsigned int *)(v5 + 4 * v8 + 912) & (v2 ^ v4))) ^ *(_DWORD *)(v5 + 4 * v8) ^ ((*(_DWORD *)(v5 + 4 * v8 + 912) & 0x7FFFFFFE | v3 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 395) * a1) ^ ((int)v2 - 1811))))();
}

uint64_t sub_1B02A889C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  *(unsigned char *)(a5 + ((v39 - 1404953402) & 0x53BDDFE7u) - 69) = *(&a39 + (v40 - 1769776162));
  return (*(uint64_t (**)(uint64_t, uint64_t))(v41
                                                     + 8 * ((1092 * ((v40 - 1769776161) < 4)) | v39)))(1769776160, a20);
}

void sub_1B02A88C0(int a1@<W8>, uint64_t a2)
{
  LODWORD(STACK[0x364]) = STACK[0x2D8];
  LODWORD(STACK[0x4AC]) = STACK[0x2E0];
  STACK[0x330] = STACK[0x2C0];
  STACK[0x378] = STACK[0x2C8];
  STACK[0x540] = STACK[0x2D0];
  LODWORD(STACK[0x314]) = a1;
  sub_1B02A24B8(a1, a2);
}

uint64_t sub_1B02A8980@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  BOOL v15 = a1 == 1355080478 || a11 - v12 != v11 - 412460990;
  return (*(uint64_t (**)(void))(v13 + 8 * ((974 * ((v11 ^ v15) & 1)) ^ v11)))();
}

uint64_t sub_1B02A89D4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v1;
  uint64_t v6 = v2;
  unsigned int v7 = (v3 + 1139) ^ (535753261
                    * ((-633363028 - (&v5 | 0xDA3FA5AC) + (&v5 | 0x25C05A53)) ^ 0x2F34547C));
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * ((v3 - 2) ^ 0x85E)))(&v5);
}

void sub_1B02A8A48()
{
}

void sub_1B02A8AB8()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  int v1 = *(_DWORD *)(v0 + 40) - 108757529 * ((2 * (v0 & 0x68386F78) - v0 - 1748529017) ^ 0x775BF2AC);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02A8C14@<X0>(int a1@<W0>, unsigned int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  BOOL v28 = v22 < v23;
  *(&a22 + (a5 + a1)) = *(unsigned char *)(v27 + (v24 + a3))
                                    + ~(((v26 + 96) ^ 0x9A) & (2 * *(unsigned char *)(v27 + (v24 + a3))))
                                    - 47;
  unsigned int v29 = v24 + 1 + a4;
  int v30 = v28 ^ (v29 < a2);
  BOOL v31 = v29 < v22;
  if (!v30) {
    BOOL v28 = v31;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * (((2 * v28) | (4 * v28)) ^ v26)))();
}

uint64_t sub_1B02A8CA0()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1451)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 321) ^ (8 * (STACK[0x3C8] == 0)))))();
}

uint64_t sub_1B02A8CE4@<X0>(char a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,unsigned int a32)
{
  unsigned int v36 = ((*v35 & 0x7FFFFFFE | v35[623] & 0x80000000) >> (((a1 + (a3 ^ 0x55) - 89) | 0x10) ^ (a1 - 1))) ^ v35[396];
  v35[623] = (v36 + v34 - (a2 & (2 * v36))) ^ *(_DWORD *)(v33 + 4 * (*v35 & 1));
  return (*(uint64_t (**)(void))(v32 + 8 * ((2661 * (a32 > 0x26F)) ^ a3 ^ 0x55)))();
}

uint64_t sub_1B02A8D70()
{
  int v5 = v3 + 4 + *(unsigned __int8 *)(v2 + 3) - 987;
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ (4 * (((v5 << ((v3 - 80) | 0x40)) & v1) + (v5 ^ v0) != v0)))))();
}

void sub_1B02A8DB4(_DWORD *a1@<X8>)
{
  *a1 = v2;
  *(_DWORD *)(v1 + 4) = -1904968623;
}

uint64_t sub_1B02A8DC4@<X0>(uint64_t a1@<X8>, int a2)
{
  *(_DWORD *)(a1 - 0x5FB6299213240EABLL) = a2;
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((((((v2 - 1430) | 0x804) + 1) ^ (*(void *)(v3 + 24) == 0x38BB74075792D150)) & 1) == 0)
                                     * (((((v2 - 1430) | 0x804) + 623177015) & 0xDADB0EDF) - 1171)) ^ ((v2 - 1430) | 0x804))))();
}

uint64_t sub_1B02A8E50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v68 = 63 * (v64 ^ 0x344);
  int v69 = v68 + 334;
  (*(void (**)(void, unint64_t, void))(v66 + 8 * (v68 + 1794)))(*a64, STACK[0x550], LODWORD(STACK[0x52C]));
  uint64_t v70 = LODWORD(STACK[0x374]);
  unint64_t v71 = 1374699841 * ((((2 * v65) | 0xC2EC4BD4754C34B4) - v65 - 0x617625EA3AA61A5ALL) ^ 0x6F7ABBE657520253);
  *(void *)(v67 - 184) = v71 + 2389998782u;
  *(_DWORD *)(v67 - 168) = v69 - v71 + 2021362876;
  *(_DWORD *)(v67 - 164) = ((v69 - 1670852030) ^ 0x8C) - v71;
  *(_DWORD *)(v67 - 176) = v69 - 1670852030 + v71;
  *(_DWORD *)(v67 - 172) = v71;
  *(_DWORD *)(v67 - 192) = ((v69 - 1670852030) ^ 0xC2) + v71;
  *(void *)(v67 - 160) = v70 + v71;
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(v66 + 8 * (v69 ^ 0xAB0)))(v67 - 192);
  return (*(uint64_t (**)(uint64_t))(v66 + 8 * *(int *)(v67 - 188)))(v72);
}

void sub_1B02A8F6C()
{
}

uint64_t sub_1B02A8F80@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2615 * (*(_DWORD *)(v2 + 4 * ((((3 * (v4 ^ 0x6FA) - 317) | 0x81) ^ v1) + v3)) == a1)) ^ (v4 - 880))))();
}

uint64_t sub_1B02A8FCC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((237 * (STACK[0x480] == 0)) ^ (v0 + 243))))();
}

uint64_t sub_1B02A8FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 8 * (((((v31 - 1254874503) & 0x4ACBD83D) + 3514) * ((v33 + v32 + 26) < 4)) ^ v31)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1B02A903C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a7 + (((v8 ^ 0x5A2) + a1) & 0xCBE815F9 ^ (unint64_t)(v10 + 39)) + v7) = -48;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((unint64_t)(v7 + 1 + v10) < 0x40) * v9) ^ v8 ^ 0x5A2)))();
}

uint64_t sub_1B02A908C@<X0>(uint64_t a1@<X0>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v51 = ((v48 - 686) ^ (a2 + 61)) + v49;
  unsigned int v52 = *(_DWORD *)(&a35 + (v51 & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + v51) = v52 ^ 0xBE;
  *(unsigned char *)(a1 + (v49 + a2)) = (BYTE1(v52) ^ 7) + (~(v52 >> 7) | 0x5F) - 47;
  *(unsigned char *)(a1 + (v49 + a2 + 1)) = (BYTE2(v52) ^ 0x4A)
                                                - 2 * ((BYTE2(v52) ^ 0x4A) & 0x55 ^ BYTE2(v52) & 5)
                                                - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 2)) = (HIBYTE(v52) ^ 0x74)
                                                - 2 * ((HIBYTE(v52) ^ 0x74) & 0x58 ^ HIBYTE(v52) & 8)
                                                - 48;
  BOOL v53 = v49 + 1566501001 < (a47 + 390800027);
  if (v49 + 1566501001 < v47 != a47 + 390800027 < v47) {
    BOOL v53 = a47 + 390800027 < v47;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((507 * !v53) ^ v48)))();
}

uint64_t sub_1B02A9190()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1115
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 1) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 1) - 134) ^ v0) == v0
                                                                                + ((v3 - 1120568568) & 0x42CA83E3)
                                                                                - 577)) ^ v3)))();
}

void sub_1B02A91E4()
{
}

uint64_t sub_1B02A9218(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * ((7 * ((((v11 - 1742) ^ (v11 - 2142) ^ (a1 == a6)) & 1) == 0)) ^ v11)))(a11);
}

uint64_t sub_1B02A9260@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W6>, int a6@<W8>)
{
  STACK[0x328] = v6 + (a6 - 241) - 917;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                + 8
                                                                                * (((a5 != v8)
                                                                                  * (577 * (a6 ^ 0x474) - 910)) ^ a6)))(a1, a2, a3, a4, 2389998781);
}

uint64_t sub_1B02A92A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39,uint64_t a40,int a41,char a42)
{
  a42 = *(&a39 + v44);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v45 + 8 * ((((v43 ^ 0x3DE) + 1244) * ((v42 + 172) < 4)) ^ v43)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

void sub_1B02A92E0(uint64_t a1)
{
  uint64_t v2 = (uint64_t)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 - dword_1E9B30BA0) ^ 0x84)) ^ byte_1B04CE8A0[byte_1B04D9DA0[(-51 * ((qword_1E9B30C18 - dword_1E9B30BA0) ^ 0x84))] ^ 0xFA])
                - 120);
  uint64_t v3 = *(void *)(v2 - 4);
  uint64_t v4 = (char *)off_1F08D3B88 - 8;
  uint64_t v5 = off_1F08D3940;
  uint64_t v6 = (unint64_t *)*(&off_1F08D3590
                           + (*((unsigned char *)off_1F08D3940
                                                             + (*((unsigned __int8 *)off_1F08D3B88
                                                                + (-51 * ((qword_1E9B30C18 + v3) ^ 0x84))
                                                                - 8) ^ 0xDu)) ^ (-51 * ((qword_1E9B30C18 + v3) ^ 0x84)))
                           + 42);
  unint64_t v7 = (unint64_t)&v11[v3 + *v6];
  uint64_t v8 = 1358147533 * (v7 + 0xEB3E64746BB5B7CLL);
  unint64_t v9 = 1358147533 * (v7 ^ 0xF14C19B8B944A484);
  *(void *)(v2 - 4) = v8;
  unint64_t *v6 = v9;
  LODWORD(v6) = 1358147533 * ((v9 - *(_DWORD *)(v2 - 4)) ^ 0xB944A484);
  uint64_t v10 = (char *)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 + dword_1E9B30BA0) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 + dword_1E9B30BA0) ^ 0x84))] ^ 0xC0])
                + 40)
      - 12;
  (*(void (**)(void, uint64_t (*)()))&v10[8
                                                    * (*((unsigned char *)off_1F08D3678
                                                                        + (*((unsigned __int8 *)off_1F08D3760
                                                                           + v6
                                                                           - 4) ^ 0x8Bu)) ^ v6)
                                                    + 17424])(*(&off_1F08D3590+ ((-51 * ((v9 - *(unsigned char *)(v2 - 4)) ^ 0x84)) ^ v5[v4[(-51 * ((v9 - *(unsigned char *)(v2 - 4)) ^ 0x84))] ^ 0xFA])- 125), sub_1B02ABB40);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02A94B4()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((v1 + v2 - 528479701 < (v0 ^ 0x52Bu) - 1092)
                                     * ((v0 + 1437305472) & 0xAA54777F ^ 0x38B)) ^ v0)))();
}

uint64_t sub_1B02A951C@<X0>(int a1@<W4>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((628 * (a2 + (v3 ^ 0x86D65655) < 0x38)) ^ (a1 + v3 + 1155))))();
}

uint64_t sub_1B02A956C@<X0>(unint64_t a1@<X2>, int a2@<W3>, int a3@<W8>, int8x16_t a4@<Q0>, int8x16_t a5@<Q1>, int8x16_t a6@<Q4>, int8x16_t a7@<Q5>, int8x16_t a8@<Q6>, int32x4_t a9@<Q7>)
{
  uint64_t v14 = v9 + 4;
  uint64_t v15 = v10 + 16;
  a5.i64[0] = *(void *)(v15 + 4);
  a5.i32[2] = *(_DWORD *)(v15 + 12);
  int8x16_t v16 = vextq_s8(a4, a5, 0xCuLL);
  int8x16_t v17 = a5;
  v17.i32[3] = *(_DWORD *)(v13 + 4 * (v14 + ((a3 - 6) ^ a1)));
  int32x4_t v18 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v17, a7), vandq_s8(v16, a6)), 1uLL), *(int8x16_t *)(v15 - 908));
  v16.i32[0] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v15 + 4) & 1));
  v16.i32[1] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v15 + 8) & 1));
  v16.i32[2] = *(_DWORD *)(v12 + 4 * (*(_DWORD *)(v15 + 12) & 1));
  v16.i32[3] = *(_DWORD *)(v12 + 4 * (v17.i8[12] & 1));
  *(int8x16_t *)uint64_t v15 = veorq_s8((int8x16_t)vaddq_s32(vaddq_s32(v18, a9), (int32x4_t)vmvnq_s8(vandq_s8((int8x16_t)vaddq_s32(v18, v18), a8))), v16);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v14 == 392) * a2) ^ a3)))();
}

void sub_1B02A9578(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,unsigned int *a58)
{
  int v61 = a2 - 482;
  (*(void (**)(void, uint64_t, void))(v59 + 8 * (a2 ^ 0xC5E)))(*a58, a1, LODWORD(STACK[0x508]));
  *(_DWORD *)(v60 - 192) = ((v60 - 192) ^ 0x239AD816) * v58 + 2138962459 + v61;
  (*(void (**)(uint64_t))(v59 + 8 * (v61 + 1407)))(v60 - 192);
  JUMPOUT(0x1B02A95D8);
}

uint64_t sub_1B02A9620(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0xC21FEC2B) - (a1 & 0xC21FEC2B)) ^ 0x4097E018);
  int v2 = *(_DWORD *)(a1 + 8) - v1;
  unsigned int v3 = v1 + *(_DWORD *)(a1 + 12) - 591534412;
  int v4 = (*(_DWORD *)(*(void *)a1 - 0x2B41EA7AD2F8E82DLL) ^ 0xD00DB111) + v3;
  unsigned int v5 = v4 - ((2 * v4) & 0xA01B6222) - 804409071;
  *(_DWORD *)(*(void *)a1 - 0x2B41EA7AD2F8E82DLL) = v5;
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v2 - 1828) + 8 * ((3865 * ((v5 ^ 0xD00DB111) < v3)) ^ v2)
                                                                      - 12))();
}

uint64_t sub_1B02A96E4@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 == ((a1 - 1407) ^ (v4 - 822))) * ((33 * (a1 ^ 0x88A)) ^ 0x889)) ^ a1)))();
}

uint64_t sub_1B02A972C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  if ((((v4 - 122) ^ 0xC7FEu) + v2) >> 1 < 0xF9F) {
    int v3 = a2;
  }
  *(_DWORD *)(*(void *)(result + 8) - 0x2AE764ED79A92BD4) = v3;
  return result;
}

uint64_t sub_1B02A9764(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1546 * (((v3 + ((v4 - 138789126) & 0x845C357) - 853) & (2 * v6)) + (v6 ^ v2) == v2)) ^ v4)))();
}

uint64_t sub_1B02A97BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                                + 8
                                                                                * ((37
                                                                                  * (((((v6 ^ 0x408) - 1032) ^ 0x7A7 ^ (v4 == 821665214)) & 1) == 0)) ^ v6 ^ 0x408)))(a1, a2, a3, a4, 224771291);
}

void sub_1B02A9814(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02A9888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,_DWORD *a33)
{
  unsigned int v39 = (v34 + 2013027652) & 0xFD8FA73F;
  uint64_t v40 = (*(uint64_t (**)(uint64_t, void))(v35 + 8 * (v34 + 1741)))(a12, 0);
  int v41 = STACK[0x538];
  LODWORD(STACK[0x528]) = *(void *)(v37 + 48);
  LODWORD(STACK[0x524]) = v41;
  LODWORD(STACK[0x52C]) = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v34 ^ 0xBD5)))(v40);
  LODWORD(STACK[0x520]) = (*(uint64_t (**)(void))(v35 + 8 * (v34 + 1707)))();
  v36[1] = *a33 + ((1664525 * (*v36 ^ (*v36 >> 30))) ^ v36[1]);
  uint64_t v42 = 1224239923 * ((v33 + 0x18C23770563C4EB3 - 2 * (v33 & 0x18C23770563C4EB3)) ^ 0x30988219A48FB364);
  int v43 = v39 - 620890500 - v42;
  *(_DWORD *)(v38 - 112) = v43;
  STACK[0x588] = v42 ^ 0x3BB19450;
  STACK[0x578] = v42 + 1001493582;
  *(_DWORD *)(v38 - 128) = 1 - v42;
  *(_DWORD *)(v38 - 124) = v43 + 24;
  *(_DWORD *)(v38 - 120) = v42 ^ (v39 - 620890500) ^ 0x5A;
  *(_DWORD *)(v38 - 116) = 821170321 - v42 + v39;
  uint64_t v44 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (int)(v39 ^ 0x758C0E48)))(v38 - 152);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v38 - 144)))(v44);
}

uint64_t sub_1B02A9A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9)
{
  LODWORD(STACK[0x528]) = v9;
  STACK[0x340] = *(void *)(v14 + 8 * v11);
  STACK[0x5A8] = v12;
  STACK[0x5B0] = v10;
  unint64_t v15 = STACK[0x328];
  int8x16_t v16 = (char *)&a9 + STACK[0x328] - 0x9872DDC1BE05FF8;
  STACK[0x5B8] = (unint64_t)v16;
  STACK[0x328] = v15 + 320;
  LODWORD(STACK[0x3A4]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E829);
  LODWORD(STACK[0x494]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E825);
  LODWORD(STACK[0x384]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E821);
  LODWORD(STACK[0x438]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E81DLL);
  int v17 = *(unsigned __int8 *)(v12 - 0x2B41EA7AD2F8E811) ^ 0xAE;
  if (v17 == 2)
  {
    int v21 = STACK[0x2B8] & 0x2DFCFBBF;
    LODWORD(STACK[0x4BC]) = *(_DWORD *)(v12 - 0x2B41EA7AD2F8E819);
    LODWORD(STACK[0x56C]) = 729270108;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14
                                                                         + 8
                                                                         * ((670
                                                                           * ((v21 ^ 0xD4883818) + 729270108 < 0x40)) ^ v21)))(140, 117, 3809889992, 71960430);
  }
  else
  {
    if (v17 != 1) {
      JUMPOUT(0x1B02B8D74);
    }
    LODWORD(STACK[0x56C]) = v13;
    BOOL v19 = v10 < STACK[0x2C0] + v15 && (unint64_t)v16 < v10 + 64;
    return (*(uint64_t (**)(void))(v14
                                + 8 * (((LODWORD(STACK[0x2E8]) + LODWORD(STACK[0x2D0]) - 1744) * v19) ^ (a8 + 464))))();
  }
}

uint64_t sub_1B02A9A74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33
                                                                                + 8
                                                                                * ((22
                                                                                  * (v31 - 1267801991 >= v31 - 1267802111 + (v32 ^ 0x231u))) | v32)))(1612, a2, a3, a4, a31);
}

uint64_t sub_1B02A9AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  uint64_t v42 = (_DWORD *)(a32 + 24 * v35);
  *uint64_t v42 = v39;
  v42[1] = v36;
  *(void *)(v38 + 24 * v35 + 16) = v37;
  v42[4] = HIDWORD(a34);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v40 + 8 * ((1800 * ((*(_DWORD *)(a4 + 48 * v41 + 32) + 110873831) < 0x80000003)) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1B02A9B6C@<X0>(int a1@<W8>)
{
  uint64_t v4 = v2 + v1;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((139
                                * (v5 - v1 + (unint64_t)((2 * a1) ^ 0xB46u) + 111746121 < (unint64_t)(a1 - 1203)
                                                                                               - 634)) ^ a1)))();
}

uint64_t sub_1B02A9BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int32x4_t a43,int32x4_t a44,int32x4_t a45,int32x4_t a46)
{
  int v53 = *(unsigned __int8 *)(v52 - 156) ^ 0xAE;
  if (v53 == 1)
  {
    unsigned int v59 = *(_DWORD *)(v52 - 188);
    unsigned int v58 = *(_DWORD *)(v52 - 184);
    *(unsigned char *)(v52 - 196) = ((8 * v58) ^ 0x88) - ((16 * v58) & 0xAA) - 48;
    *(unsigned char *)(v52 - 195) = ((v58 >> 5) ^ 0x88) - ((v58 >> 4) & 0xA0) - 48;
    *(unsigned char *)(v52 - 194) = ((v58 >> 13) ^ 0x6D) - ((2 * ((v58 >> 13) ^ 0x6D)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 193) = (~(v58 >> 20) | 0x5F) + (v58 >> 21) + 81;
    HIDWORD(v60) = v59 ^ 0x11;
    LODWORD(v60) = v58 ^ 0xC0000000;
    *(unsigned char *)(v52 - 192) = (v60 >> 29) - ((2 * (v60 >> 29)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 191) = ((v59 >> 5) ^ 0xCF) - ((2 * ((v59 >> 5) ^ 0xCF)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 190) = ((v59 >> 13) ^ 0x93) - ((2 * ((v59 >> 13) ^ 0x93)) & 0xA0) - 48;
    unsigned int v57 = (v59 >> 21) ^ 0xFFFFFFCB;
    char v56 = 2 * v57;
  }
  else
  {
    if (v53 != 2) {
      goto LABEL_6;
    }
    unsigned int v57 = *(_DWORD *)(v52 - 188);
    unsigned int v54 = *(_DWORD *)(v52 - 184);
    HIDWORD(v55) = v57 ^ 0x11;
    LODWORD(v55) = v54 ^ 0xC0000000;
    *(unsigned char *)(v52 - 196) = ((v57 >> 21) ^ 0xCB) + ~(2 * (((v57 >> 21) ^ 0xCB) & 0x54 ^ (v57 >> 21) & 4)) - 47;
    *(unsigned char *)(v52 - 195) = ((v57 >> 13) ^ 0x93) - ((2 * ((v57 >> 13) ^ 0x93)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 194) = ((v57 >> 5) ^ 0xCF) - ((2 * ((v57 >> 5) ^ 0xCF)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 193) = (v55 >> 29) - ((2 * (v55 >> 29)) & 0xA0) - 48;
    *(unsigned char *)(v52 - 192) = (~(v54 >> 20) | 0x5F) + (v54 >> 21) + 81;
    *(unsigned char *)(v52 - 191) = ((v54 >> 13) ^ 0x6D) + (~(2 * ((v54 >> 13) ^ 0x6D)) | 0x5F) - 47;
    *(unsigned char *)(v52 - 190) = ((v54 >> 5) ^ 0x88) - ((v54 >> 4) & 0xA0) - 48;
    char v56 = 16 * v54;
    LOBYTE(v57) = (8 * v54) ^ 0x88;
  }
  *(unsigned char *)(v52 - 189) = v57 - (v56 & 0xA0) - 48;
LABEL_6:
  HIDWORD(v118) = HIDWORD(a18) - 122694576;
  LODWORD(v118) = 1277489076;
  int v111 = (const char *)(v52 - 252);
  int8x16_t v112 = (int8x16_t)vdupq_n_s32(0x718B2766u);
  int32x4_t v113 = vdupq_n_s32(0x718B2764u);
  v114.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v114.i64[1] = 0xD0D0D0D0D0D0D0D0;
  LODWORD(a31) = 1585;
  HIDWORD(a30) = 1;
  uint64_t v115 = (v51 - 2);
  HIDWORD(v117) = 389;
  int8x16_t v116 = (int8x16_t)vdupq_n_s32(0xE3164EC8);
  LODWORD(a29) = 28;
  int v61 = *(uint64_t (**)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((int)a5 + 1380253481));
  uint64_t v62 = *(unsigned int *)(v52 - 180);
  unsigned int v63 = *(_DWORD *)(v52 - 176);
  unsigned int v65 = *(_DWORD *)(v52 - 172);
  unsigned int v64 = *(_DWORD *)(v52 - 168);
  int v66 = *(unsigned char *)(v52 - 156) ^ 0xAE;
  LODWORD(v117) = *(unsigned __int8 *)(v52 - 156) ^ 0xFFFFFFAE;
  if (v66 == 2)
  {
    uint64_t v119 = *(void *)(v50 + 8 * ((int)a5 + 1380253481));
    int8x16x4_t v121 = vld4q_s8(v111);
    HIDWORD(a21) = *(_DWORD *)(v52 - 164);
    uint8x16_t v92 = (uint8x16_t)veorq_s8(v121.val[0], v114);
    uint16x8_t v93 = vmovl_u8(*(uint8x8_t *)v92.i8);
    uint16x8_t v94 = vmovl_high_u8(v92);
    uint8x16_t v95 = (uint8x16_t)veorq_s8(v121.val[1], v114);
    _Q22 = vmovl_u8(*(uint8x8_t *)v95.i8);
    _Q21 = vmovl_high_u8(v95);
    __asm
    {
      SHLL2           V23.4S, V21.8H, #0x10
      SHLL2           V24.4S, V22.8H, #0x10
    }
    uint8x16_t v100 = (uint8x16_t)veorq_s8(v121.val[2], v114);
    uint16x8_t v101 = vmovl_high_u8(v100);
    uint16x8_t v102 = vmovl_u8(*(uint8x8_t *)v100.i8);
    v121.val[0] = veorq_s8(v121.val[3], v114);
    v121.val[1] = (int8x16_t)vmovl_high_u8((uint8x16_t)v121.val[0]);
    v121.val[2] = (int8x16_t)vmovl_high_u16((uint16x8_t)v121.val[1]);
    v121.val[1] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v121.val[1].i8);
    v121.val[0] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v121.val[0].i8);
    v121.val[3] = (int8x16_t)vmovl_high_u16((uint16x8_t)v121.val[0]);
    v121.val[0] = (int8x16_t)vmovl_u16(*(uint16x4_t *)v121.val[0].i8);
    int32x4_t v103 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v102.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v93.i8), 0x18uLL)), v121.val[0]);
    int32x4_t v104 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q24, (int8x16_t)vshll_high_n_u16(v102, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v93), 0x18uLL)), v121.val[3]);
    int32x4_t v105 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8((int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL), (int8x16_t)vshll_n_u16(*(uint16x4_t *)v101.i8, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v94.i8), 0x18uLL)), v121.val[1]);
    int32x4_t v106 = (int32x4_t)vorrq_s8(vorrq_s8(vorrq_s8(_Q23, (int8x16_t)vshll_high_n_u16(v101, 8uLL)), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16(v94), 0x18uLL)), v121.val[2]);
    v121.val[0] = veorq_s8(vandq_s8((int8x16_t)v103, v112), (int8x16_t)(*(_OWORD *)v121.val & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v121.val[3] = veorq_s8(vandq_s8((int8x16_t)v104, v112), (int8x16_t)(*(_OWORD *)&v121.val[3] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v121.val[1] = veorq_s8(vandq_s8((int8x16_t)v105, v112), (int8x16_t)(*(_OWORD *)&v121.val[1] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    v121.val[2] = veorq_s8(vandq_s8((int8x16_t)v106, v112), (int8x16_t)(*(_OWORD *)&v121.val[2] & __PAIR128__(0xFFFFFF02FFFFFF02, 0xFFFFFF02FFFFFF02)));
    a45 = vaddq_s32(vsubq_s32(v105, vaddq_s32((int32x4_t)v121.val[1], (int32x4_t)v121.val[1])), v113);
    a46 = vaddq_s32(vsubq_s32(v106, vaddq_s32((int32x4_t)v121.val[2], (int32x4_t)v121.val[2])), v113);
    a43 = vaddq_s32(vsubq_s32(v103, vaddq_s32((int32x4_t)v121.val[0], (int32x4_t)v121.val[0])), v113);
    a44 = vaddq_s32(vsubq_s32(v104, vaddq_s32((int32x4_t)v121.val[3], (int32x4_t)v121.val[3])), v113);
    unsigned int v107 = (_DWORD *)&a43 + v46 + 1058713642;
    int v108 = *(v107 - 8) ^ *(v107 - 3);
    unsigned int v109 = *(v107 - 16) ^ *(v107 - 14) ^ (v108 + v47 - ((2 * v108) & 0xE3164EC8));
    HIDWORD(v110) = v109 ^ v47;
    LODWORD(v110) = v109;
    *unsigned int v107 = (v110 >> 31) + v47 - ((2 * (v110 >> 31)) & 0xE3164EC8);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8 * ((8 * (v48 == 1058713579)) | 0x631u)))(3809889992, a2, v115, v65, a5, 1420, v62, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             v117,
             v118,
             __PAIR64__(v63, v62),
             __PAIR64__(v64, v65),
             v119,
             0xE0000007DLL,
             a29,
             a30,
             a31,
             v48 - 16,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else if (v66 == 1)
  {
    int8x16x4_t v120 = vld4q_s8(v111);
    uint8x16_t v67 = (uint8x16_t)veorq_s8(v120.val[0], v114);
    uint16x8_t v68 = vmovl_high_u8(v67);
    int8x16_t v69 = (int8x16_t)vmovl_high_u16(v68);
    uint16x8_t v70 = vmovl_u8(*(uint8x8_t *)v67.i8);
    int8x16_t v71 = (int8x16_t)vmovl_high_u16(v70);
    uint8x16_t v72 = (uint8x16_t)veorq_s8(v120.val[1], v114);
    uint16x8_t v73 = vmovl_u8(*(uint8x8_t *)v72.i8);
    uint16x8_t v74 = vmovl_high_u8(v72);
    int8x16_t v75 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v73.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v70.i8));
    int8x16_t v76 = vorrq_s8((int8x16_t)vshll_high_n_u16(v73, 8uLL), v71);
    int8x16_t v77 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v74.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v68.i8));
    int8x16_t v78 = vorrq_s8((int8x16_t)vshll_high_n_u16(v74, 8uLL), v69);
    uint8x16_t v79 = (uint8x16_t)veorq_s8(v120.val[2], v114);
    _Q22 = (int8x16_t)vmovl_high_u8(v79);
    _Q21 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v79.i8);
    int8x16_t v82 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q21.i8, 0x10uLL);
    __asm { SHLL2           V21.4S, V21.8H, #0x10 }
    int8x16_t v87 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q22.i8, 0x10uLL);
    __asm { SHLL2           V22.4S, V22.8H, #0x10 }
    v120.val[0] = veorq_s8(v120.val[3], v114);
    v120.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v120.val[0].i8);
    v120.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v120.val[0]);
    int32x4_t v88 = (int32x4_t)vorrq_s8(vorrq_s8(v75, v82), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v120.val[1].i8), 0x18uLL));
    v120.val[1] = vorrq_s8(vorrq_s8(v76, _Q21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v120.val[1]), 0x18uLL));
    int32x4_t v89 = (int32x4_t)vorrq_s8(vorrq_s8(v77, v87), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v120.val[0].i8), 0x18uLL));
    int32x4_t v90 = (int32x4_t)vorrq_s8(vorrq_s8(v78, _Q22), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v120.val[0]), 0x18uLL));
    a45 = vaddq_s32(vsubq_s32(v89, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v89, v89), v116)), v113);
    a46 = vaddq_s32(vsubq_s32(v90, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v90, v90), v116)), v113);
    a43 = vaddq_s32(vsubq_s32(v88, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v88, v88), v116)), v113);
    a44 = vaddq_s32(vsubq_s32((int32x4_t)v120.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v120.val[1], (int32x4_t)v120.val[1]), v116)), v113);
    return (*(uint64_t (**)(void, void, uint64_t, void, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, unint64_t, uint64_t (*)(uint64_t, void, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 4176))(-(*((unsigned char *)off_1F08D3978 + v48 + v46 - 16) - 8), v63, v115, v65, unk_1F08D3670 - 4, 1420, *(unsigned int *)(unk_1F08D3600 - 8 + 4 * (v48 - 16 + v46)), 1058713642, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             v117,
             v118,
             __PAIR64__(v63, v62),
             __PAIR64__(v64, v65),
             v61,
             0xE0000007DLL,
             a29,
             a30,
             a31,
             v48 - 16,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
  else
  {
    *(_DWORD *)(v52 - 180) = 2 * (v62 ^ v51) + v51 - (v49 & (4 * (v62 ^ v51)));
    *(_DWORD *)(v52 - 176) = 2 * (v63 ^ v51) + v51 - (v49 & (4 * (v63 ^ v51)));
    *(_DWORD *)(v52 - 172) = 2 * (v65 ^ v51) + v51 - (v49 & (4 * (v65 ^ v51)));
    *(_DWORD *)(v52 - 168) = 2 * (v64 ^ v51) + v51 - (v49 & (4 * (v64 ^ v51)));
    return v61(v62, v65, v115, v65, a5, 1420, v62, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             v117,
             v118);
  }
}

uint64_t *sub_1B02A9DCC@<X0>(uint64_t *result@<X0>, int a2@<W1>, int a3@<W3>, _DWORD *a4@<X8>)
{
  uint64_t v8 = result[6];
  uint64_t v10 = *result;
  uint64_t v9 = result[1];
  *a4 = v7 - 1232048191;
  *(_DWORD *)(v10 - 0x634ED76D4AB8828DLL) = v5;
  *(_DWORD *)(v8 - 0x5EA78D1E4BF8D009) = a2;
  *(void *)(v9 - 0x4562AF39A4DDDA06) = v4 + (v6 + a3 - 819589102);
  *((_DWORD *)result + 8) = 1904944996;
  return result;
}

void sub_1B02A9E4C()
{
}

uint64_t sub_1B02A9F2C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1941 * (**(unsigned char **)(a2 + 8) == 0)) ^ 0x120u)))();
}

uint64_t sub_1B02A9F5C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1998 * ((v1 ^ (v0 == 0x24E165E5EDFBC15ALL)) & 1)) ^ v1)))();
}

uint64_t sub_1B02A9F94(uint64_t result)
{
  *(_DWORD *)(result + 4) = (v2 ^ 0x1560358) - v1;
  return result;
}

void sub_1B02A9FB8()
{
  *(_DWORD *)(v0 + 8) = v1 | 1;
}

uint64_t sub_1B02A9FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x2A0] = v7;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((2127 * (v6 == v8 + ((a5 - 227) | 0x105) - 935)) ^ (a5 - 838))))(638207943, 208, a3, 3405774770);
}

uint64_t sub_1B02AA020(char a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  *(unsigned char *)(v5 + v6 + a5 - 1) = a1;
  return (*(uint64_t (**)(void))(v8 + 8 * ((106 * ((unint64_t)(v5 + v6) < 0x38)) ^ (v7 + 422))))();
}

uint64_t sub_1B02AA050@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v24 + 4 * (v25 - 1844633059)) = 1844633059
                                                            - v25
                                                            + ((1566083941
                                                              * (*(_DWORD *)(v24 + 4
                                                                                 * (v25 - 1844633060)) ^ (*(_DWORD *)(v24 + 4 * (v25 - 1844633060)) >> 30))) ^ *(_DWORD *)(v24 + 4 * (v25 - 1844633059)));
  unint64_t v27 = 1224239923 * ((0x6B9AA4572BE3011ELL - (v22 | 0x6B9AA4572BE3011ELL) + a21) ^ 0xBC3FEEC126AF0336);
  STACK[0x588] = (v25 + 1460694050) ^ v27;
  *(_DWORD *)(v26 - 116) = 821170321 - v27 + a1;
  *(_DWORD *)(v26 - 112) = a1 - 1204920855 - v27;
  STACK[0x578] = v27 + 3305327108u;
  *(_DWORD *)(v26 - 128) = 1 - v27;
  *(_DWORD *)(v26 - 124) = ((a1 - 1204920855) | 0xB) - v27;
  *(_DWORD *)(v26 - 120) = v27 ^ (a1 - 1204920855) ^ 0x59;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (a1 ^ (v21 + 1837))))(v26 - 152);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * *(int *)(v26 - 144)))(v28);
}

void sub_1B02AA180()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 898));
  JUMPOUT(0x1B029B6B0);
}

uint64_t sub_1B02AA1A4@<X0>(uint64_t a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a3
                                                    + 8
                                                    * (int)(((((*(_DWORD *)(*v4 + 4 * v5) == v3) ^ (a2 - 28)) & 1)
                                                           * ((a2 + 1014024436) & 0xC38F372D ^ 0x70B)) ^ a2)))(a1, (a2 + 56103140) & 0xFCA7EBD9);
}

uint64_t sub_1B02AA208()
{
  BOOL v3 = (v0 + 784755756) > 0x928659C9;
  if (v0 + 784755756 < ((v2 + 568252500) & 0xDE21279D) - 1836689852) {
    BOOL v3 = 1;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((1768 * v3) ^ (v2 - 137))))();
}

uint64_t sub_1B02AA324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12)
{
  *(void *)(v18 - 104) = v14;
  *(_DWORD *)(v18 - 112) = v12
                         + 460628867 * ((2 * ((v18 - 136) & 0x11055BD8) - (v18 - 136) + 1861919778) ^ 0x226C265F)
                         + 325;
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = a12;
  *(void *)(v18 - 136) = v13;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v12 ^ 0xF41)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((188
                                              * (((v16
                                                 + (((v17 - 1561592541) >> 1) ^ 0x5DF65BDF)
                                                 + (((v12 - 1144) ^ 0xBBECB14D ^ (v12 + 1356136311) & 0xAF2AFEFD) & (v17 - 1561592541))
                                                 + 2) & a11) == 0)) ^ v12)))(v19);
}

uint64_t sub_1B02AA420(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((v2 == ((v3 + 1560090119) & 0xA302ED3D) - 1337) * (v3 + 468)) ^ v3)))(a1, a2);
}

uint64_t sub_1B02AA488(uint64_t a1, int a2)
{
  *(unsigned char *)(a1 + (v2 - 76352023)) = *(unsigned char *)(v4 + (v2 - 76352023));
  return (*(uint64_t (**)(void))(v5 + 8 * ((75 * ((((v3 - 831) ^ (v2 - 1 == a2)) & 1) == 0)) ^ (v3 - 480))))();
}

void sub_1B02AA4D8()
{
}

uint64_t sub_1B02AA4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((((a7 - 165698675) & 0xEDF77EFB) - v7 - 1039) * (v8 < 0x20)) ^ a7)))();
}

uint64_t sub_1B02AA524(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v24 = 6 * (a20 ^ 0x8CB);
  unsigned int v25 = v21 + v20 - 1954282942;
  if (v25 <= 0x40) {
    int v26 = 64;
  }
  else {
    int v26 = v21 + v20 - 1954282942;
  }
  BOOL v27 = __CFADD__(v25 + (v24 ^ 0x3F1) - 158, v22 + v26);
  return (*(uint64_t (**)(void))(v23 + 8 * ((v27 * (v24 - 623)) ^ v24)))();
}

uint64_t sub_1B02AA594(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((1299 * (v7 < ((a7 - 1042) | 0x701u) + 309 + v8)) ^ (((a7 - 1042) | 0x701) - 1664))))();
}

uint64_t sub_1B02AA5B4@<X0>(uint64_t a1@<X0>, int a2@<W4>, int a3@<W5>, int a4@<W6>, int a5@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 16) + (a4 + a5)) = (a3 ^ v7) >> v8;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((46 * (((a2 - 2049268453) & 0x7A2557AE ^ 0xFFFFFE5F) + a4 == ((a2 - 824) ^ (v6 + 554)))) ^ a2)))();
}

void sub_1B02AA620(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v42 = 3804331 * (((((v41 - 192) | 0xE0722F92) ^ 0xFFFFFFFE) - (~(v41 - 192) | 0x1F8DD06D)) ^ 0x6158F59B);
  *(_DWORD *)(v41 - 192) = v39 - v42 - ((((17 * (v38 ^ 0x26B)) ^ 0x45300797) + 2 * v39) & 0xE3164EC8) - 1809634963;
  *(_DWORD *)(v41 - 188) = v42 + v38 + 594;
  *(void *)(v41 - 184) = a38;
  (*(void (**)(uint64_t))(v40 + 8 * (v38 + 1770)))(v41 - 192);
  JUMPOUT(0x1B02A959CLL);
}

uint64_t sub_1B02AA6C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  *(unsigned char *)(a7 + 1) = *(&a40 + (v41 - 1882164502));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42
                                                                                + 8
                                                                                * ((((v41 - 1882164501) < 4)
                                                                                  * (3 * (v40 ^ 0x591) + 840)) ^ v40)))(a1, a2, a3, a4, a29);
}

uint64_t sub_1B02AA73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v12 = (unsigned __int8 *)*(&off_1F08D3590 + (v9 ^ (v9 - 33))) - 1;
  uint64_t v13 = ((((v10 - 1759299290) | 0x540) - 2147482911) | 0x17233143) ^ (v9 + 480);
  BOOL v15 = ((**(unsigned __int8 **)(a8 + 80) - (*v12 ^ 0xD0)) ^ 0x5DE7FFDE)
      + ((v13 - v10 - 220) ^ 0x78DCE98D)
      + ((2 * (**(unsigned __int8 **)(a8 + 80) - (*v12 ^ 0xD0))) & 0xBBCFFFBC) != v11
     || a3 - 44588315 + v13 == 0;
  return (*(uint64_t (**)(_UNKNOWN **))(v8 + 8 * (int)((1847 * v15) ^ v13)))(&off_1F08D3590);
}

uint64_t sub_1B02AA760@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * (((((v3 - 799) | 0x146) ^ (v3 + 1285298358) & 0x3363E7AF ^ 0x5C1)
                                                       * (a2 == v2)) ^ v3)))(a1, 76352022);
}

uint64_t sub_1B02AA7BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,int a56)
{
  BOOL v58 = ((a25 - ((2 * a56) & 0x9EB94DB2) + 1441517705) ^ (v56 - 443) ^ 0xB1824457)
      - 475022401
      + ((2 * (a25 - ((2 * a56) & 0x9EB94DB2) + 1441517705)) & 0xFDBDCDA6 ^ 0x9CB94DA2) != 1653514898;
  return (*(uint64_t (**)(void))(v57 + 8 * ((v58 | (4 * v58)) ^ v56)))();
}

uint64_t sub_1B02AA87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12, int a13)
{
  a12 = (535753261 * ((&a12 & 0xFADC6C40 | ~(&a12 | 0xFADC6C40)) ^ 0xFD79D90)) ^ 0xE1F2694A;
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 18864))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((1664 * (a13 == v13 + 744)) ^ 0x2E8u)))(v15);
}

uint64_t sub_1B02AA904(int8x16_t a1, int8x8_t a2, int8x8_t a3, uint64_t a4, char a5, char a6, char a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v58 = (a9 + v47 - 8);
  v60.val[0].i64[0] = v58 & *(void *)(v57 - 144);
  v60.val[0].i64[1] = ((_BYTE)a9 + v54 - 8) & 0xF;
  v60.val[1].i64[0] = ((_BYTE)a9 + v55 - 8) & 0xF;
  v60.val[1].i64[1] = ((_BYTE)a9 + v53 - 8) & 0xF;
  v60.val[2].i64[0] = ((_BYTE)a9 + a7 - 8) & 0xF;
  v60.val[2].i64[1] = ((_BYTE)a9 + v51 - 8) & 0xF;
  v60.val[3].i64[0] = ((_BYTE)a9 + a6 - 8) & 0xF;
  v60.val[3].i64[1] = ((_BYTE)a9 + a5 - 8) & 0xF;
  *(int8x8_t *)(*(void *)(v57 - 136) + v58) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(v56 + v58), *(int8x8_t *)(v50 + v60.val[0].i64[0] - 7)), veor_s8(*(int8x8_t *)(v60.val[0].i64[0] + v48 - 2), *(int8x8_t *)(v49 + v60.val[0].i64[0] - 7)))), a3), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v60, a1), a2)));
  return (*(uint64_t (**)(void))(a47 + 8 * ((45 * (a9 != v52 + 8)) ^ *(_DWORD *)(v57 - 116))))();
}

uint64_t sub_1B02AA92C()
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (v0 ^ 0x8BC)))();
  _DWORD *v1 = 1715140502;
  return result;
}

uint64_t sub_1B02AA964@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((*(_DWORD *)(a1 + 1424) == 1742482590) ^ (v1 - 28)) & 1)
                                     * (((v1 + v3) & 0xA58B3BD7) - 883)) ^ v1)))();
}

uint64_t sub_1B02AA9AC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  *a4 = 0;
  *a5 = 0;
  a15 = (535753261 * ((&a15 + 2015678485 - 2 * ((unint64_t)&a15 & 0x7824D015)) ^ 0x72D0DE3A)) ^ 0xE1F2694A;
  uint64_t v18 = (*(uint64_t (**)(int *))(v17 + 18864))(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((1332 * (a16 == v16)) ^ 0x2B5u)))(v18);
}

uint64_t sub_1B02AAA48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a2 + (v7 + v6)) = *(void *)(v10 + (v7 + v6));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 == 0) * a6) ^ v9)))();
}

void sub_1B02AAA78()
{
  _DWORD *v1 = v0;
}

uint64_t sub_1B02AAA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  if ((v8 - 1610608094) > 0x40) {
    int v10 = v8 - 1610608094;
  }
  else {
    int v10 = 64;
  }
  BOOL v11 = (a6 - v6 - v7 + v10 + 2029) > 0xE;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2 * v11) | (4 * v11) | 0x7F8u)))();
}

uint64_t sub_1B02AAB0C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((255
                                * ((((v0 - 1334526196) < 0x7FFFFFFF) ^ ((v2 ^ 0x32) + 41)) & 1)) ^ (v2 - 1822))))();
}

uint64_t sub_1B02AAB60@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * (a1 == ((v1 - 850813344) & 0x32B65D3D ^ 0x438))) ^ v1)))((v1 - 850813344) ^ 0xCD49AEE9);
}

uint64_t sub_1B02AABCC(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13)
{
  unsigned int v23 = v16 - 16;
  uint64_t v24 = v23 & 0xF;
  v26.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v26.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v19, a5).u64[0];
  int8x16_t v27 = vrev64q_s8(vmulq_s8(v26, a6));
  *(int8x16_t *)(a12 + v23) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + v24 - 15), *(int8x16_t *)(a12 + v23)), veorq_s8(*(int8x16_t *)(v24 + v13 - 13), *(int8x16_t *)(v24 + v14 - 11))), vextq_s8(v27, v27, 8uLL));
  return (*(uint64_t (**)(void))(v18 + 8 * (((v17 == 16) * (a11 + 1300)) ^ a11)))();
}

uint64_t sub_1B02AABD8@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W4>, int a4@<W5>, int a5@<W6>, int a6@<W8>)
{
  *(unsigned char *)(*(void *)(a1 + 16) + (a5 + a6)) = ((a4 ^ v8) >> a2) - ((2 * ((a4 ^ v8) >> a2)) & 0xA0) - 48;
  return (*(uint64_t (**)(void))(v6 + 8 * ((7 * (a5 - 1 == a3 + v7 + ((2 * a3) ^ 0x80A))) ^ a3)))();
}

uint64_t sub_1B02AAC38@<X0>(int a1@<W8>)
{
  void *v1 = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 == 0) * v2) ^ a1)))();
}

void sub_1B02AAC5C()
{
  *(_DWORD *)(v0 - 0x7DA9E0EFFB1E3616) = -1904968528;
  JUMPOUT(0x1B02C3E8CLL);
}

uint64_t sub_1B02AAC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  a17 = v17;
  a16 = 1224239923
      * (((&a14 | 0xE661C4EB) - &a14 + (&a14 & 0x199E3B10)) ^ 0x14D2393C)
      + 2287;
  a15 = a12;
  uint64_t v20 = (*(uint64_t (**)(int *))(v19 + 19328))(&a14);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((1917 * (a14 == v18)) ^ 0xD1u)))(v20);
}

uint64_t sub_1B02AAD2C()
{
  *v2 ^= STACK[0x2E8];
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((109
                                * (v1 - 1 == ((((((v0 - 2117) | 0x622) + 1516978632) & 0xA594BB95) + 1983678577) ^ ((v0 - 2117) | 0x622) ^ 0x5A2))) ^ ((v0 - 2117) | 0x622))))();
}

uint64_t sub_1B02AAD54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,unint64_t a22)
{
  *uint64_t v24 = 0;
  unsigned int v25 = ((v22 ^ (v22 >> 11)) << 7) & 0x9D2C5680 ^ v22 ^ (v22 >> 11);
  *(_DWORD *)(*a21 + a22) ^= (((v25 << 15) & 0xEFC60000 ^ v25) >> a14) ^ (v25 << 15) & 0xEFC60000 ^ v25;
  return (*(uint64_t (**)(void))(v23 + 8 * ((19 * (a22 < 0x1FC)) ^ 0x340)))();
}

uint64_t sub_1B02AAD5C(uint64_t a1, uint64_t a2, int a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((a4 + a3 + ((a5 - 1710) | 0x429u) - 1809679254 < 8) * (41 * (a5 ^ 0x6A7) - 245)) ^ a5)))();
}

uint64_t sub_1B02AADC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,unint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(v37 + 4 * (v34 - 700666238)) = *(_DWORD *)(a33 + 4 * (v33 - 2147152571))
                                                           + v33
                                                           - 2147152571
                                                           + ((1664525
                                                             * (*(_DWORD *)(v37 + 4 * (v34 - 700666239)) ^ (*(_DWORD *)(v37 + 4 * (v34 - 700666239)) >> 30))) ^ *(_DWORD *)(v37 + 4 * (v34 - 700666238)));
  int v40 = v35 ^ (v38 + 703907194);
  STACK[0x598] = (v34 - 1747944830) ^ v35;
  *(_DWORD *)(v39 - 144) = v40 ^ 0x75;
  *(_DWORD *)(v39 - 140) = v40 ^ 0x4E;
  *(_DWORD *)(v39 - 124) = v35;
  STACK[0x588] = a31;
  *(_DWORD *)(v39 - 152) = v38 + 703907194 + v35;
  *(_DWORD *)(v39 - 148) = (v38 + 132521259) ^ v35;
  uint64_t v41 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v38 ^ 0x758C0E73)))(v39 - 152);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v39 - 128)))(v41);
}

uint64_t sub_1B02AADD0(uint64_t a1, uint64_t a2)
{
  int v3 = **(unsigned char **)(a2 + 8) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((16 * v3) | (v3 << 9) | 0x148u)))();
}

uint64_t sub_1B02AAE08(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + v2 - 1) = ((v4 + 1 + v5) ^ v6) * (v4 - 120);
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((v2 != 1) * (int)a1) ^ v3)))(a1);
}

uint64_t sub_1B02AAE10()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((((((v0 - 1277) | 0x201) - 438) ^ 0x449) * (v1 == 0)) ^ v0)))();
}

uint64_t sub_1B02AAE4C()
{
  *(_DWORD *)(v5 - 112) = v2 - 1759421093 * ((v5 + 1429301397 - 2 * ((v5 - 128) & 0x55316915)) ^ 0xE64CD941) + 1549;
  *(void *)(v5 - 128) = v3;
  *(void *)(v5 - 120) = v1;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 ^ 0xBED)))(v5 - 128);
  BOOL v7 = v4 != ((v2 - 1027910462) & 0x3D44AF7B) + 1212454523;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * ((v7 | (2 * v7)) ^ v2)))(v6);
}

uint64_t sub_1B02AAEFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  int v38 = v36 - 299;
  int v39 = (v36 + 83) | 0x10;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v37 + 8 * ((v36 - 299) ^ 0x827)))(16);
  uint64_t v41 = (uint64_t *)*(&off_1F08D3590 + (v38 ^ 0x17D));
  *uint64_t v41 = v40;
  (*(void (**)(void))(v37 + 8 * (v38 ^ 0x81C)))();
  uint64_t v42 = (void *)(*(uint64_t (**)(uint64_t))(v37 + 8 * (v38 ^ 0x827)))(8);
  int v43 = *(&off_1F08D3590 + v38 - 286);
  *int v43 = v42;
  *uint64_t v42 = 0xBDBDBDBDBDBDBDBDLL;
  uint64_t v44 = (uint64_t)*(&off_1F08D3590 + v38 - 304);
  *(_DWORD *)(v44 + 4) = 0;
  char v55 = *(&off_1F08D3590 + v38 - 273);
  *char v55 = 0;
  uint64_t v45 = (unsigned char *)*v41;
  uint64_t v46 = (unsigned char *)*v43;
  v46[6] = 26;
  unsigned char *v45 = -77;
  v46[4] = -34;
  int v47 = *(&off_1F08D3590 + (v38 ^ 0x146));
  *(v47 - 6) = -46;
  v47[1] = -3;
  *(unsigned char *)(v44 + 29) = 68;
  v47[6] = 37;
  v45[4] = 73;
  *(v47 - 4) = -116;
  *(unsigned char *)(v44 + 28) = 83;
  *(unsigned char *)*(&off_1F08D3590 + (v38 ^ 0x106)) = -113;
  v45[1] = 80;
  *(unsigned char *)*(&off_1F08D3590 + v38 - 166) = 88;
  v47[5] = -78;
  *(unsigned char *)*(&off_1F08D3590 + v38 - 301) = 1;
  v45[2] = -44;
  uint64_t v56 = *(&off_1F08D3590 + (v38 ^ 0x119));
  *uint64_t v56 = 51;
  v46[2] = 80;
  v45[6] = -11;
  uint64_t v48 = *(&off_1F08D3590 + (v38 ^ 0x1F5));
  *uint64_t v48 = 25;
  *(unsigned char *)*(&off_1F08D3590 + v38 - 266) = 39;
  v45[5] = -22;
  v45[3] = -15;
  unsigned char *v47 = -5;
  *(unsigned char *)(v44 + 14) = -52;
  v47[7] = 88;
  uint64_t v49 = *(&off_1F08D3590 + v38 - 253);
  *uint64_t v49 = -109;
  v45[13] = 99;
  uint64_t v50 = *(&off_1F08D3590 + (v38 ^ 0x105));
  *uint64_t v50 = 119;
  v46[7] = -80;
  *uint64_t v46 = -122;
  v45[8] = 34;
  *(v47 - 1) = 26;
  v45[11] = 54;
  *(unsigned char *)(v44 + 15) = 3;
  v46[5] = -5;
  v46[1] = 73;
  *(unsigned char *)(v44 + 16) = -36;
  *(unsigned char *)uint64_t v44 = 23;
  v46[3] = 59;
  char v51 = (unsigned char *)*v41;
  v51[10] = 45;
  v51[15] = -87;
  *(v47 - 8) = -71;
  v47[3] = 17;
  *(unsigned char *)(v44 + 25) = -92;
  *(v47 - 3) = 68;
  v47[2] = -67;
  *(unsigned char *)(v44 + 27) = 52;
  *(v47 - 12) = 108;
  *(_WORD *)(v44 + 10) = -3774;
  *(unsigned char *)(v44 + 22) = -121;
  *(unsigned char *)(v44 + 20) = 77;
  *(unsigned char *)(v44 + 26) = 113;
  v51[9] = 31;
  v47[8] = -110;
  *(v47 - 2) = 109;
  *(unsigned char *)(v44 + 8) = -85;
  *(v47 - 10) = -12;
  *(v47 - 7) = 68;
  *(unsigned char *)(v44 + 2) = 34;
  v47[4] = -112;
  v51[12] = -86;
  *(v47 - 9) = 111;
  v51[7] = -90;
  v51[14] = -33;
  *(unsigned char *)(v44 + 21) = -105;
  *(unsigned char *)(v44 + 3) = -98;
  *(v47 - 5) = -67;
  *(unsigned char *)(v44 + 24) = -119;
  *(unsigned char *)(v44 + 30) = 58;
  *(unsigned char *)(v44 + 12) = 73;
  *(unsigned char *)(v44 + 1) = -15;
  *(v47 - 11) = -43;
  *(unsigned char *)(v44 + 19) = 120;
  *(unsigned char *)(v44 + 13) = 69;
  *(_WORD *)(v44 + 17) = -4168;
  *(unsigned char *)(v44 + 9) = -105;
  *(unsigned char *)(v44 + 23) = 79;
  uint64_t v52 = (uint64_t)*(&off_1F08D3590 + v38 - 235);
  LODWORD(a13) = ((v39 ^ 0x7DADF185) & (2 * *(_DWORD *)(v44 + 4))) + (*(_DWORD *)(v44 + 4) ^ 0x3ED6F9AB);
  LODWORD(a10) = a36;
  char v53 = *(uint64_t (**)(void, void, unint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, unsigned char *, _DWORD *, uint64_t, unsigned char *, unsigned char *, unsigned char *))(v37 + 8 * (v39 ^ 0x3E));
  return v53((v39 + 934671383) & 0xC84A0FB7, v53, 0xDEEB57D123638FBALL, *(unsigned __int8 *)(v52 + 274 + (((*v56 >> 4) | (16 * *v56)) ^ 0xFELL)) ^ 0xFFFFFFA1, (a36 + 222527153), 526414008, 934671383, -65536 * *(unsigned __int8 *)(*v41 + 13), a9, a10, (a13 - 1054276011), v52 + 537, a13, v52 + 793, v52 + 274, a16, *v43, a18, *v41,
           a20,
           v52 + 2,
           v47 - 12,
           v55,
           v44,
           v50,
           v49,
           v48);
}

uint64_t sub_1B02AB838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,char a63)
{
  *(void *)(a65 + 1560) = *(void *)STACK[0x388];
  *(_DWORD *)(a65 + 1552) = *(_DWORD *)STACK[0x3C0];
  *(void *)(*(void *)(a74 + 96) + 488) = *(void *)(a74 + 8);
  *(_DWORD *)(*(void *)(a74 + 96) + 480) = *(_DWORD *)a74;
  *(unsigned char *)(a73 + STACK[0x260] + STACK[0x200]) = ((a72 + a63) ^ 0xBA) * a70;
  return (*(uint64_t (**)(uint64_t))(v74 + 8 * a67))(186);
}

uint64_t sub_1B02AB8DC()
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((63 * (v0 - 1819910380 < ((v2 + 624) ^ 0x28Eu))) ^ (v2 + 707))))(208);
}

void sub_1B02AB924(int a1@<W8>)
{
  int v6 = 2 * (v2 ^ 0xC3);
  unsigned int v7 = (v1 & 0xBFFFFFFF ^ 0x477BDE3B) - ((v6 - 1896367520) & (2 * (v1 & 0xBFFFFFFF ^ 0x477BDE3B))) + 1199300155;
  uint64_t v8 = *(void *)(v4 - 0x7DA9E0EFFB1E362ELL);
  unsigned int v9 = *v3 + a1;
  *(unsigned char *)(v8 + v9) = (HIBYTE(v7) ^ 0x47) - ((2 * (HIBYTE(v7) ^ 0x47)) & 0xA0) - 48;
  *(unsigned char *)(v8 + v9 + 1) = (v6 ^ BYTE2(v7) ^ 0x6D) - ((2 * (v6 ^ BYTE2(v7) ^ 0x6D)) & 0xA0) - 48;
  *(unsigned char *)(v8 + v9 + 2) = (BYTE1(v7) ^ 0xDE) - ((2 * (BYTE1(v7) ^ 0xDE)) & 0xA0) - 48;
  *(unsigned char *)(v8 + v9 + 3) = v7 ^ 0xEB;
  uint64_t v10 = *(void *)(v4 - 0x7DA9E0EFFB1E362ELL);
  unsigned int v11 = v5 - ((2 * v5 + 1125084092) & 0x9E0AA314) - 259192984;
  unsigned int v12 = ((2 * (a1 + *v3 + 4)) & 0xEFF7FFDE) + ((a1 + *v3 + 4) ^ 0xF7FBFFEF) + 134479889;
  *(unsigned char *)(v10 + v12) = (HIBYTE(v11) ^ 0x4F) - ((2 * (HIBYTE(v11) ^ 0x4F)) & 0xA0) - 48;
  *(unsigned char *)(v10 + v12 + 1) = (BYTE2(v11) ^ 5) - ((v11 >> 15) & 0xA0) - 48;
  *(unsigned char *)(v10 + v12 + 2) = (BYTE1(v11) ^ 0x51) - ((2 * (BYTE1(v11) ^ 0x51)) & 0xA0) - 48;
  *(unsigned char *)(v10 + v12 + 3) = (v5 - ((2 * v5 - 68) & 0x14) + 104) ^ 0x5A;
  _DWORD *v3 = v13;
}

uint64_t sub_1B02ABAA8@<X0>(int a1@<W8>)
{
  uint64_t v6 = (v1 + a1 - 320);
  int8x8_t v7 = vrev64_s8(*(int8x8_t *)(v2 - 7 + v6));
  *(int8x8_t *)(v5 - 7 + v6) = vrev64_s8(vadd_s8(vsub_s8(v7, vand_s8(vadd_s8(v7, v7), (int8x8_t)0xA0A0A0A0A0A0A0A0)), (int8x8_t)0xD0D0D0D0D0D0D0D0));
  return (*(uint64_t (**)(void))(v4 + 8 * ((2045 * (((v3 + 1974492624) & 0x8A4F9EB7 ^ 0x8F) == 16)) ^ v3)))();
}

uint64_t sub_1B02ABB28(double a1, __n128 a2, __n128 a3, __n128 a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14)
{
  uint64_t v27 = v21 - 16 + (v18 ^ v17);
  uint64_t v28 = ((_BYTE)v21 - 16 + (v18 ^ v17)) & 0xF;
  v30.i64[0] = vqtbl4q_s8(*(int8x16x4_t *)(&a2 - 1), a5).u64[0];
  v30.i64[1] = vqtbl4q_s8(*(int8x16x4_t *)&v23, a5).u64[0];
  int8x16_t v31 = vrev64q_s8(vmulq_s8(v30, a6));
  *(int8x16_t *)(v19 + v27) = veorq_s8(veorq_s8(veorq_s8(*(int8x16_t *)(v15 + (v27 & 0xF) - 15), *(int8x16_t *)(a13 + v27)), veorq_s8(*(int8x16_t *)(v14 + (v27 & 0xF) - 15), *(int8x16_t *)((v27 & 0xF) + v16 - 14))), vextq_s8(v31, v31, 8uLL));
  return (*(uint64_t (**)(void))(v22 + 8 * (a12 | (8 * (v20 != 16)))))();
}

uint64_t sub_1B02ABB34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 8 * (((v13 + 8 != (v14 ^ a4)) * (int)a5) ^ (v14 + 365))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13);
}

uint64_t sub_1B02ABB40()
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 - dword_1E9B30B98) ^ 0x84)) ^ byte_1B04D37C0[byte_1B04CE7A0[(-51 * ((qword_1E9B30C18 - dword_1E9B30B98) ^ 0x84))] ^ 0x72])
                - 20);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (char *)off_1F08D3B88 - 8;
  int v3 = off_1F08D3940;
  uint64_t v4 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3940
                           + (*((unsigned __int8 *)off_1F08D3B88
                              + (-51 * (v1 ^ qword_1E9B30C18 ^ 0x84))
                              - 8) ^ 0xFAu)) ^ (-51 * (v1 ^ qword_1E9B30C18 ^ 0x84)))
       - 35);
  unint64_t v5 = v1 ^ (unint64_t)&v7 ^ *v4;
  *(void *)(v0 - 4) = 1358147533 * (v5 + 0xEB3E64746BB5B7CLL);
  void *v4 = 1358147533 * (v5 ^ 0xF14C19B8B944A484);
  unsigned int v8 = 1755732067 * ((((2 * &v8) | 0x334CB66C) - &v8 + 1717150922) ^ 0x4760E6ED) + 1229;
  LOBYTE(v5) = -51 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x84);
  uint64_t v9 = (uint64_t)*(&off_1F08D3590
                + (*((unsigned char *)off_1F08D3828
                                                  + (*((unsigned __int8 *)off_1F08D38C0 + v5 - 4) ^ 0x72u)
                                                  - 4) ^ v5)
                + 120);
  LOBYTE(v0) = -51 * (*(_DWORD *)(v0 - 4) ^ 0x84 ^ *(_DWORD *)v4);
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08D3590
                                                             + ((-51
                                                                                              * (dword_1E9B30B98 ^ 0x84 ^ qword_1E9B30C18)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * (dword_1E9B30B98 ^ 0x84 ^ qword_1E9B30C18))] ^ 0xC0])
                                                             + 40)
                                                   + 8
                                                   * (v0 ^ v3[v2[v0] ^ 0x23])
                                                   + 17276))(&v8);
}

uint64_t sub_1B02ABD70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25,int a26)
{
  *(_DWORD *)(v29 - 152) = a26 + v27;
  *(_DWORD *)(v29 - 148) = (v26 + 2104630324) ^ v27;
  *(_DWORD *)(v29 - 144) = v27 ^ a24;
  *(_DWORD *)(v29 - 140) = a25 ^ v27;
  *(_DWORD *)(v29 - 124) = v27;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v28 + 8 * (v26 + 342)))(v29 - 152);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * *(int *)(v29 - 128)))(v30);
}

void sub_1B02ABDDC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 24) - 1225351577 * (a1 ^ 0x239AD816);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1B02ABED8()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((45 * (v0 == ((v1 - 624) ^ (v1 - 930) ^ 0x16D))) ^ v1)))(873981603);
}

uint64_t sub_1B02ABF24(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (int)(((((a1 + 150910127) & 0xF7014D5B) - 1309) * (v7 == a7)) ^ a1)))();
}

void sub_1B02ABF60()
{
}

uint64_t sub_1B02ABFDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v22 = 628203409 * (((~(v21 - 152) & 0x98B074C0) - (~(v21 - 152) | 0x98B074C1)) ^ 0x1A3878F2);
  *(_DWORD *)(v21 - 144) = v22 + v19 + 1912;
  *(_DWORD *)(v21 - 140) = a19 - v22 - 808649240;
  *(void *)(v21 - 152) = a16;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0x936)))(v21 - 152);
  uint64_t v24 = *(_DWORD *)(v21 - 184) & 0x3F;
  *(unsigned char *)(v21 - 252 + (v24 ^ 0x11)) = 80;
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((1843 * ((v24 ^ 0x11) > 0x37)) ^ v19)))(v23);
}

uint64_t sub_1B02AC0D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v24 = *(_DWORD *)(v19 + 4 * (v22 - 1));
  *(_DWORD *)(v19 + 4 * v22) = *(_DWORD *)(a19 + 4 * v20)
                               + v20
                               + ((1664525 * (v24 ^ (v24 >> 30))) ^ *(_DWORD *)(v19 + 4 * v22));
  int v25 = 1755732067 * ((((v23 - 152) | 0x200736D6) - ((v23 - 152) & 0x200736D6)) ^ 0xFEC18B0D);
  int v26 = v25 ^ ((a1 ^ 0x907) + 1920030676);
  *(_DWORD *)(v23 - 144) = v26 ^ 0x8A;
  *(_DWORD *)(v23 - 140) = v26 ^ 0xB;
  *(_DWORD *)(v23 - 124) = v25;
  *(_DWORD *)(v23 - 152) = (a1 ^ 0x907) + 1920030676 + v25;
  *(_DWORD *)(v23 - 148) = ((a1 ^ 0x907) + 2104630324) ^ v25;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (a1 ^ 0x87D)))(v23 - 152);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * *(int *)(v23 - 128)))(v27);
}

uint64_t sub_1B02AC0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  *(_DWORD *)(v39 - 128) = (v36 + 1440) ^ (1755732067
                                         * ((2 * ((v39 - 144) & 0x67313C18) - (v39 - 144) + 416203751) ^ 0xC6087E3C));
  *(void *)(v39 - 144) = v38;
  *(void *)(v39 - 136) = v37;
  (*(void (**)(uint64_t))(v35 + 8 * (v36 + 1787)))(v39 - 144);
  *(void *)(v39 - 144) = v37;
  *(void *)(v39 - 136) = a35;
  *(_DWORD *)(v39 - 120) = v36
                         + 949
                         + 1225351577
                         * ((((v39 - 144) | 0x15B013E7) - (v39 - 144) + ((v39 - 144) & 0xEA4FEC18)) ^ 0x362ACBF1);
  *(void *)(v39 - 128) = a24;
  *(void *)(v39 - 112) = v38;
  *(void *)(v39 - 104) = v37;
  (*(void (**)(uint64_t))(v35 + 8 * (v36 + 1755)))(v39 - 144);
  *(void *)(v39 - 144) = v37;
  *(void *)(v39 - 136) = v37;
  *(void *)(v39 - 112) = v38;
  *(void *)(v39 - 104) = a18;
  *(void *)(v39 - 128) = a24;
  *(_DWORD *)(v39 - 120) = v36
                         + 949
                         + 1225351577 * ((((v39 - 144) | 0xE8BCBD2F) - ((v39 - 144) & 0xE8BCBD2F)) ^ 0xCB266539);
  (*(void (**)(uint64_t))(v35 + 8 * (v36 + 1755)))(v39 - 144);
  *(void *)(v39 - 128) = a23;
  *(_DWORD *)(v39 - 136) = v36
                         + 569
                         - 535753261
                         * ((-433589838 - ((v39 - 144) | 0xE627F1B2) + ((v39 - 144) | 0x19D80E4D)) ^ 0x132C0062)
                         + 426521830;
  *(void *)(v39 - 144) = v37;
  (*(void (**)(uint64_t))(v35 + 8 * ((v36 + 569) ^ 0xDD1)))(v39 - 144);
  *(_DWORD *)(v39 - 128) = (v36 + 1440) ^ (1755732067
                                         * ((((v39 - 144) | 0x39868463) - (v39 - 144) + ((v39 - 144) & 0xC6797B98)) ^ 0xE74039B8));
  *(void *)(v39 - 144) = a25;
  *(void *)(v39 - 136) = v37;
  (*(void (**)(uint64_t))(v35 + 8 * (v36 + 1787)))(v39 - 144);
  *(_DWORD *)(v39 - 128) = (v36 + 784) ^ (535753261
                                        * ((2 * ((v39 - 144) & 0x38600698) - (v39 - 144) + 1201666407) ^ 0x4D6BF748));
  *(void *)(v39 - 144) = v37;
  *(void *)(v39 - 136) = a25;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v35 + 8 * ((v36 + 569) ^ 0xDF8)))(v39 - 144);
  return (*(uint64_t (**)(uint64_t))(v35
                                            + 8
                                            * ((((v36 + 496) ^ (557 * ((v36 + 569) ^ 0x4A1)) ^ 0x3C) * (a22 == 0)) ^ (v36 + 1178))))(v40);
}

uint64_t sub_1B02AC38C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3)
{
  *(void *)(a3 + v3) = v6;
  return (*(uint64_t (**)(void))(v5 + 8 * ((((v4 & 0x38) == 8) * (a1 - 394)) ^ a1)))();
}

uint64_t sub_1B02AC3C8(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  int v43 = v39 + 1;
  *(unsigned char *)(a5 + (v43 + a2)) = *(&a39 + v41 - 1769776163);
  return (*(uint64_t (**)(void))(v42 + 8 * ((((a4 + v43 + 70) < 0x40) * (v40 - 1673)) ^ v40)))();
}

uint64_t sub_1B02AC3D0(uint64_t a1, int a2)
{
  *(void *)(a1 - 7 + (v6 + v5 + v4 + 1599 - a2)) = *(void *)(v2
                                                                             - 7
                                                                             + (v6 + v5 + v4 + 1599 - a2));
  return (*(uint64_t (**)(void))(v8 + 8 * ((106 * (v7 - (v3 & 0xFFFFFFF8) - 2082 == -a2)) ^ v7)))();
}

uint64_t sub_1B02AC434(__n128 a1)
{
  *(__n128 *)(v4 + v3) = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == 1500) * v2) ^ v1)))();
}

uint64_t sub_1B02AC458(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1181 * ((a2 + 1 + v2) < 0x28)) ^ a1)))();
}

uint64_t sub_1B02AC478@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (int)((((((v2 ^ 0x193) + 285434414) & 0xEEFC9BEF ^ 0xFFFFFC17)
                                      + (((v2 ^ 0x193) - 551) | 0x45))
                                     * (((v3 - 1388059666) * (v1 - 1388059666)) >> 31)) ^ v2 ^ 0x193)))();
}

void sub_1B02AC4DC()
{
}

uint64_t sub_1B02AC6EC()
{
  unint64_t v4 = STACK[0x228];
  ++*(_DWORD *)(v4 + 52);
  LODWORD(STACK[0x564]) = *(_DWORD *)(v4 + 360);
  STACK[0x328] = v1 - 2432;
  LODWORD(STACK[0x374]) = v3;
  LODWORD(STACK[0x2E0]) = STACK[0x4AC];
  LODWORD(STACK[0x2D8]) = STACK[0x364];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 + 83) ^ (STACK[0x300] == 0)) & 1) * ((v0 + 827) ^ 0x59C)) ^ v0)))();
}

uint64_t sub_1B02AC758@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v4 - 358750256)) = *(unsigned char *)(v3 + (v4 - 358750256));
  return (*(uint64_t (**)(void))(v5 + 8 * ((227 * (v4 - 1 != (a2 ^ 0x274) + a3)) ^ a2 ^ 0xE3)))();
}

uint64_t sub_1B02AC7A0@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * (a2 + 1 == v3 + 16)) | ((a2 + 1 == v3 + 16) << 6)) ^ a1)))();
}

uint64_t sub_1B02AC888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v15 + 8 * (((a12 == v12 + ((v14 + 740) | 0x80) - 2249) * (v13 ^ 0x3BE)) ^ v14)))();
}

uint64_t sub_1B02AC8C0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, unsigned int a5, uint64_t a6, unint64_t *a7, int a8, unint64_t *a9, char a10, int a11)
{
  int v14 = v11 + 76;
  uint64_t v15 = *(void *)(v12 + 8);
  unsigned int v16 = 1755732067
      * (((&a4 | 0x85ED6987) - &a4 + (&a4 & 0x7A129678)) ^ 0x5B2BD45C);
  a10 = (99 * (((&a4 | 0x87) - &a4 + (&a4 & 0x78)) ^ 0x5C)) ^ 0x5A;
  a8 = v16 + 1172344255 + v14;
  a9 = &STACK[0x322B87E8A79285E6];
  a6 = v15;
  a7 = &STACK[0x195FBC68F38D7435];
  a5 = ((a1 ^ 0xEA8BD8B6) + 2129787868 + ((2 * a1) & 0xFFFECFFE ^ 0x2AE84FFA ^ (36 * (v14 ^ 0x496)))) ^ v16;
  a4 = &STACK[0x175AF7836905A48E];
  uint64_t v17 = (*(uint64_t (**)(unint64_t **))(v13 + 8 * (v14 + 1217)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v13 + 8 * ((992 * (a11 == 1904944996)) ^ v14)))(v17);
}

uint64_t sub_1B02ACA08@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>)
{
  BOOL v13 = a4 < a3;
  char v14 = *(unsigned char *)(a6 + (a2 + v8 + 57));
  *(unsigned char *)(a7 + (a8 + a1)) = v14 - ((v14 << ((v9 + 45) ^ 0x30)) & v12) - 48;
  unsigned int v15 = v10 + v8 + 50;
  int v16 = v13 ^ (v15 < a3);
  BOOL v17 = v15 < a4;
  if (!v16) {
    BOOL v13 = v17;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((!v13 * a5) ^ v9)))();
}

uint64_t sub_1B02ACA80(int a1)
{
  *(_DWORD *)(*v3 + 4 * (v6 + v1 + 1)) = v2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + v1 > v5) * a1) ^ v4)))();
}

uint64_t sub_1B02ACAB0()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((47 * (v0 ^ 0x6ED) + 301) | 0x80) - 231) * (LODWORD(STACK[0x314]) != v2)) ^ v0)))();
}

uint64_t sub_1B02ACAEC(int a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, _DWORD **a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  BOOL v24 = v15 > v23;
  uint64_t v25 = 4 * (v22 + ((v19 - 698) ^ (a3 + 138)));
  unsigned int v26 = (v16 ^ 0xFD37A2AD) + (v20 ^ v14) * (**a8 ^ v14) + (*(_DWORD *)(a14 + v25) ^ v14);
  *(_DWORD *)(a14 + v25) = (v26 + a2 - (v17 & (2 * v26))) ^ v18;
  if (v24 == a4 + 1 < a1) {
    BOOL v24 = a4 + 1 < a7;
  }
  return (*(uint64_t (**)(void))(v21 + 8 * (v19 | (8 * !v24))))();
}

uint64_t sub_1B02ACB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56)
{
  uint8x16_t v67 = (const char *)(a4 + (((v56 + 4) | 1) ^ a2) + v57);
  HIDWORD(a34) = BYTE4(a52) ^ 0xFFFFFFAE;
  int v68 = BYTE4(a52) ^ 0xAE;
  if (v68 == 2)
  {
    int8x16x4_t v91 = vld4q_s8(v67);
    uint8x16_t v85 = (uint8x16_t)veorq_s8(v91.val[1], v66);
    _Q17 = vmovl_u8(*(uint8x8_t *)v85.i8);
    _Q16 = vmovl_high_u8(v85);
    __asm
    {
      SHLL2           V18.4S, V16.8H, #0x10
      SHLL2           V19.4S, V17.8H, #0x10
    }
    return sub_1B02D0FE4(a51);
  }
  else if (v68 == 1)
  {
    int8x16x4_t v90 = vld4q_s8(v67);
    uint8x16_t v69 = (uint8x16_t)veorq_s8(v90.val[2], v66);
    _Q17 = vmovl_high_u8(v69);
    _Q16 = vmovl_u8(*(uint8x8_t *)v69.i8);
    __asm
    {
      SHLL2           V16.4S, V16.8H, #0x10
      SHLL2           V17.4S, V17.8H, #0x10
    }
    uint64_t v76 = v65 - 16;
    uint64_t v77 = (v64 + 993);
    int8x16_t v78 = (char *)*(&off_1F08D3590 + v64 - 683) - 4;
    uint8x16_t v79 = (char *)*(&off_1F08D3590 + (int)a33) - 8;
    int v80 = (HIDWORD(a49) ^ (v61 + v77 - 1704))
        + a8
        + ((a50 ^ 0x8BB5F891) & (a51 ^ v61) | (a50 ^ v61) & (HIDWORD(a50) ^ v61))
        + *(_DWORD *)&v79[4 * v76 + 4 * v62]
        + (*(_DWORD *)(v58 + 4 * (v78[v76 + v62] - 118)) ^ v60);
    uint64_t v81 = (uint64_t)*(&off_1F08D3590 + v64 - 586);
    unsigned int v82 = (v80 + v61 - (v63 & (2 * v80))) ^ v61;
    int v83 = ((v82 << (*(unsigned char *)(v81 + v76 + v62) - 8)) | (v82 >> (8 - *(unsigned char *)(v81 + v76 + v62)))) + (a50 ^ v61);
    return (*(uint64_t (**)(void, char *, char *, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * v64))(-(*(unsigned char *)(v81 + v65 - 16 + v62) - 8), v78, v79, v81, v77, v83 + v61 - (v63 & (2 * v83)), v65 - 15, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             __PAIR64__(a51, HIDWORD(a50)),
             *(void *)(v59 + 8 * v56),
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56);
  }
  else
  {
    return (*(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * v56))(a51, a2, a3, a4, *(void *)(v59 + 8 * v56), a50, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42);
  }
}

uint64_t sub_1B02ACBB8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ (84 * (v1 > 1)))))(1725941895);
}

uint64_t sub_1B02ACBD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,int a21,unsigned int a22)
{
  unsigned int v23 = 1225351577 * ((&a19 & 0xAADF8020 | ~(&a19 | 0xAADF8020)) ^ 0x76BAA7C9);
  LODWORD(a19) = v23 + 1850232741;
  HIDWORD(a19) = v23 ^ 0x215;
  a21 = v23 ^ 0x7384C45F;
  a22 = v23 + 1208085971;
  (*(void (**)(unint64_t **))(v22 + 18968))(&a19);
  a21 = 1989 - 460628867 * ((2 * (&a19 & 0x134113C0) - &a19 - 323032006) ^ 0xA0286E47);
  a19 = &STACK[0xFBD18CA08459198];
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v22 + 19064))(&a19);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((42 * (a20 == 1904944996)) ^ 0x11Cu)))(v24);
}

void sub_1B02ACD0C(_DWORD *a1)
{
  unsigned int v1 = *a1 ^ (1374699841 * ((((2 * a1) | 0x97E9331C) - a1 + 873162354) ^ 0xA6008187));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02ACDE8()
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1421
                                * ((((*(unsigned __int8 *)(v2 + 6) - 1) << (v4 ^ 0x40)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1B02ACE2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  (*(void (**)(uint64_t, uint64_t))(v26 + 8 * (v27 + v25 + 2327)))(a25, 2965982036);
  uint64_t v29 = (*(uint64_t (**)(void))(v26 + 8 * (v25 ^ 0x758C0E59u)))();
  _DWORD *v28 = v29;
  v28[1] = 1812433253 * ((v29 >> 30) ^ v29) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 18448))(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24);
}

uint64_t sub_1B02ACEB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19, int a20,int a21,int *a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  uint64_t v32 = (int *)(a27 + 4 * v30);
  int v33 = *v32;
  LODWORD(v32) = 2003914383 * ((*(_DWORD *)(*a23 + (*a22 & 0xFFFFFFFFEB70DFB0)) ^ v32) & 0x7FFFFFFF);
  LODWORD(v32) = v32 ^ (v32 >> 16);
  unsigned int v34 = 2003914383 * v32;
  *(_DWORD *)(a28 + 4 * v30) ^= v33 ^ *((_DWORD *)*(&off_1F08D3590 + v29 - 2021) + HIBYTE(v34) - 2) ^ *((_DWORD *)*(&off_1F08D3590 + a21) + HIBYTE(v34) - 2) ^ *((_DWORD *)*(&off_1F08D3590 + a19) + HIBYTE(v34) - 1) ^ (1317994496 * v32) ^ v34 ^ (HIBYTE(v34) * a20);
  return (*(uint64_t (**)(void))(v31
                              + 8
                              * (((((((v29 ^ 0x907) - 275) | 0x810) ^ 0xFFFFF7ED) + v28 == 0) * (v29 ^ 0xB49)) ^ v29 ^ 0x907)))();
}

uint64_t sub_1B02ACFB8()
{
  (*(void (**)(void))(v1 + 8 * (v0 + 1451)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((21 * (STACK[0x3E0] == 0)) | (v0 + 485))))();
}

uint64_t sub_1B02ACFF4(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * ((459
                                                       * ((v2 ^ 0xA019DCE4) != (((v1 ^ 0x182) - 714) | 0x185) - 1437)) ^ v1 ^ 0x182)))(a1, 1800476003);
}

uint64_t sub_1B02AD04C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ 0x31D) - 1440)
                                * (((25 * (v1 ^ 0x68C) - 550209495) & (2 * v0) ^ 0x52242C56)
                                 + (v0 ^ 0x46CC29D4)
                                 + 2087187327 != 1812083242)) ^ v1)))();
}

uint64_t sub_1B02AD0C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v7 = 43 * (v5 ^ 0x2A6);
  *(_DWORD *)(*(void *)(v4 - 0x6155FFFFEB445CBDLL) + 4 * (v3 + v2)) = v6;
  int v8 = v3 + v7 - 300;
  int v9 = v7 ^ 0x600;
  *(_DWORD *)(v4 - 0x6155FFFFEB445CC1) = v8;
  int v10 = v8 + v2;
  if (v8 + v2 < 0) {
    int v10 = -v10;
  }
  return (*(uint64_t (**)(uint64_t, void))(a2
                                                    + 8
                                                    * ((4014
                                                      * ((int)((v10 ^ 0x53FFFD12)
                                                             + ((v10 << (v9 - 44)) & 0xA7FFFA24)
                                                             - 1409285395) > (int)((3 * (v9 ^ 0x574)) ^ 0xFFFFF8F4))) ^ v9)))(a1, v9 ^ 0x4E4u);
}

uint64_t sub_1B02AD1AC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((81 * (v1 + v3 < ((2 * v0) ^ 0x56C ^ v2))) ^ v0)))();
}

void zLTj()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 + dword_1E9B309C0) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 + dword_1E9B309C0) ^ 0x84))] ^ 0xC0])
                + 57);
  uint64_t v1 = *(void *)(v0 - 4);
  unsigned int v2 = (char *)off_1F08D3B88 - 8;
  int v3 = off_1F08D3940;
  uint64_t v4 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3940
                           + (*((unsigned __int8 *)off_1F08D3B88
                              + (-51 * ((qword_1E9B30C18 - v1) ^ 0x84))
                              - 8) ^ 0x23u)) ^ (-51 * ((qword_1E9B30C18 - v1) ^ 0x84)))
       - 66);
  uint64_t v5 = (*v4 ^ v1) - (void)&v7;
  *(void *)(v0 - 4) = 1358147533 * v5 - 0xEB3E64746BB5B7CLL;
  void *v4 = 1358147533 * (v5 ^ 0xF14C19B8B944A484);
  v8[0] = (535753261
         * ((1565227511 - (v8 ^ 0xF442B3F9 | 0x5D4B79F7) + (v8 ^ 0xF442B3F9 | 0xA2B48608)) ^ 0x5C023BDE)) ^ 0xE1F2694A;
  LOBYTE(v4) = -51 * ((*(_DWORD *)v4 + *(_DWORD *)(v0 - 4)) ^ 0x84);
  int v6 = (char *)*(&off_1F08D3590
               + ((-51 * ((qword_1E9B30C18 + dword_1E9B309C0) ^ 0x84)) ^ byte_1B04D36C0[byte_1B04CE6A0[(-51 * ((qword_1E9B30C18 + dword_1E9B309C0) ^ 0x84))] ^ 0x97])
               + 3)
     - 12;
  (*(void (**)(_DWORD *))&v6[8
                                      * (v4 ^ v3[v2[v4] ^ 0xD])
                                      + 18080])(v8);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02AD438(int a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,int a27)
{
  int8x16x4_t v52 = vld4q_s8(a4);
  int v39 = a27 | 4;
  uint8x16_t v40 = (uint8x16_t)veorq_s8(v52.val[2], v38);
  _Q17 = vmovl_high_u8(v40);
  _Q16 = vmovl_u8(*(uint8x8_t *)v40.i8);
  __asm
  {
    SHLL2           V16.4S, V16.8H, #0x10
    SHLL2           V17.4S, V17.8H, #0x10
  }
  unsigned int v47 = ((v39 + 1475) ^ (v33 - 1543) ^ v30)
      + v27
      + ((v28 ^ v33) & (a1 ^ 0x8BB5F891) | (v29 ^ v33) & (a1 ^ v33))
      + *((_DWORD *)*(&off_1F08D3590 + v39 - 56) + v34 + 628324018)
      + (*(_DWORD *)(v35 + 4 * (*((unsigned char *)*(&off_1F08D3590 + (v39 ^ 0x5A)) + v34 + 628324016) - 118)) ^ v31);
  uint64_t v48 = (uint64_t)*(&off_1F08D3590 + ((a27 | 4) ^ 0x3B));
  unsigned int v49 = (v33 + v47 - (v36 & (2 * v47))) ^ v33;
  int v50 = ((v49 << (*(unsigned char *)(v48 + v34 + 628324020) - 8)) | (v49 >> (8 - *(unsigned char *)(v48 + v34 + 628324020))))
      + (a1 ^ v33);
  return (*(uint64_t (**)(void))(v32 + 8 * ((841 * (v37 == 628324005)) ^ ((a27 | 4) + 1274))))(v50 + v33 - (v36 & (2 * v50)));
}

uint64_t sub_1B02AD54C()
{
  return 4294925278;
}

void sub_1B02AD554()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 867));
  JUMPOUT(0x1B029B6B0);
}

uint64_t sub_1B02AD580()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((v0 - 521) * (v2 == 568732660)) ^ v0)))();
}

uint64_t sub_1B02AD5D4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46)
{
  unsigned int v54 = ((~(v52 ^ 0xEA1D63FE | 0x95A0AE03) + ((v52 ^ 0xEA1D63FE) & 0x95A0AE03)) ^ 0x14EF7B5B) * v46;
  *(_DWORD *)(v53 - 156) = v47 - v54 + 1041;
  *(void *)(v53 - 168) = a46;
  *(void *)(v53 - 184) = v50;
  *(void *)(v53 - 176) = a45;
  *(_DWORD *)(v53 - 192) = a1 ^ v54;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v47 ^ 0x90B)))(v53 - 192);
  int v56 = *(_DWORD *)(v53 - 160);
  STACK[0x488] = v48;
  return (*(uint64_t (**)(uint64_t, __n128))(v51 + 8 * ((1314 * (v56 == ((v47 + 838) ^ (v49 - 643)))) ^ v47)))(v55, (__n128)0);
}

uint64_t sub_1B02AD6B8(unsigned int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v8 = v6 + v5 - 1182752758;
  if ((v8 + 1) > 0x40) {
    int v9 = v8 + 1;
  }
  else {
    int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((116 * (a3 + (((a1 + 148) | 0x40) ^ (a5 + 1066)) + v9 <= (v8 ^ (a1 + 148) ^ 0xFFFFFDD7))) ^ a1)))();
}

void sub_1B02AD730(uint64_t a1@<X8>, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(*(void *)(v6 + 96) + 528) = 2146929045;
  *(_DWORD *)(*(void *)(v6 + 96) + 532) = 1388059666;
  *(void *)(*(void *)(v6 + 96) + 536) = *(void *)(v6 + 96) + 544;
  uint64_t v9 = *(void *)(v6 + 96) + 0x6155FFFFEB445ED5;
  uint64_t v10 = *(void *)(v7 + 8) + (*(_DWORD *)(v7 + 4) - v8);
  unsigned int v11 = 535753261
      * (((&a3 | 0xC8F0DEF3) - &a3 + (&a3 & 0x370F2108)) ^ 0xC204D0DC);
  a3 = v11 + 407;
  a4 = v9;
  a5 = v10;
  a6 = v8 - v11 + 175245391;
  (*(void (**)(unsigned int *))(a1 + 19168))(&a3);
  *(void *)(*(void *)(v6 + 96) + 512) = *(void *)(v7 + 8) + (*(_DWORD *)(v7 + 4) - v8);
  JUMPOUT(0x1B02D881CLL);
}

uint64_t sub_1B02AD738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  (*(void (**)(uint64_t, uint64_t))(v19 + 8 * (v18 + 260)))(a12, 2965982036);
  unsigned int v20 = (*(uint64_t (**)(void))(v19 + 8 * SHIDWORD(a10)))();
  unsigned int *v17 = v20;
  uint64_t v21 = 1812433253 * (v20 ^ (v20 >> 30)) + 1;
  v17[1] = v21;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((105 * (((v18 - 1) ^ 1) & 1)) ^ (v18 - 90))))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1B02AD7BC(uint64_t a1, int a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, void *a7, unsigned int a8)
{
  unint64_t v22 = a1
      - 0xB635F045AA5D931
      + (v12 ^ 0xC15A1193)
      + a8 * (unint64_t)(*(_DWORD *)(*a7 + 4 * (v15 + ((2 * (v16 ^ 0xAB2)) ^ v20))) ^ v12);
  *(_DWORD *)(v17 + 4 * v10) = v22 + v12 - ((2 * v22) & 0x82B42326);
  if (a3 > v19 != v14 < v13) {
    BOOL v23 = a3 > v19;
  }
  else {
    BOOL v23 = v14 < a4;
  }
  return (*(uint64_t (**)(unint64_t))(v9 + 8 * (v16 ^ 0xAB2 ^ (!v23 * v11))))(((v22 >> (((v16 ^ 0xB2) + 110) ^ v21)) ^ v18)+ v8+ ((2 * (v22 >> (((v16 ^ 0xB2) + 110) ^ v21))) & a2));
}

uint64_t sub_1B02AD87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((112
                                * (((v10 - 1) ^ (((((v10 + a5) & a6) + v7) ^ *(_DWORD *)(*v9 + 4 * v11)) > (*(_DWORD *)(*v8 + 4 * v11) ^ (v7 + 191)))) & 1)) ^ v10)))();
}

uint64_t sub_1B02AD8D8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1235
                                * ((((*(unsigned __int8 *)(v3 + 1) - 134) << ((v2 - 38) & 0x77 ^ 0x54)) & v1)
                                 + ((*(unsigned __int8 *)(v3 + 1) - 134) ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1B02AD930@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v1 + (v7 + v3)) = *(unsigned char *)(v2 + (v7 + v3))
                                           - ((*(unsigned char *)(v2 + (v7 + v3)) << v6) & v5)
                                           - 48;
  return (*(uint64_t (**)(void))(v8 + 8 * (((32 * (v7 - 1 != a1)) | ((v7 - 1 != a1) << 6)) ^ v4)))();
}

void sub_1B02AD938(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1374699841 * (a1 ^ 0x6DF41809));
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = (char *)*(&off_1F08D3590 + v1 - 148) - 12;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * (v1 ^ 0x86E)])(*(&off_1F08D3590 + (v1 ^ 0x129)), sub_1B02ABB40);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02AD9F8@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v7 = v5 + ((48 * (a1 ^ 0x286)) ^ 0x3AC0 ^ (v3 + 370));
  long long v8 = *(_OWORD *)(a2 + v7 - 15);
  long long v9 = *(_OWORD *)(a2 + v7 - 31);
  uint64_t v10 = v2 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8
                                   * ((44 * ((((3 * (a1 ^ 0x286)) ^ 0xFFFFFC79) & v4) != 32)) ^ (3 * (a1 ^ 0x286)))))();
}

uint64_t sub_1B02ADA68()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1718
                                * ((v1 & (2 * (*(unsigned __int8 *)(v3 + 5) - 13)))
                                 + ((*(unsigned __int8 *)(v3 + 5) - 13) ^ (v0 + (v2 ^ 0x256) - 853)) == v0 + v2 - 23 - 236)) ^ v2)))();
}

uint64_t sub_1B02ADAB8@<X0>(unsigned int a1@<W0>, int a2@<W3>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  BOOL v16 = v14 > a1;
  *(_DWORD *)(a9 + 4 * (v9 + a3)) = a2;
  int v17 = v9 + v11 + ((2 * v10) ^ 0x710);
  int v18 = v16 ^ (v17 < v12);
  BOOL v19 = v17 < v13;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * (v10 ^ (8 * !v16))))();
}

uint64_t sub_1B02ADB10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = 3 * (a6 ^ 0x5CA);
  int v11 = (v10 + 817) | 1;
  void *v7 = a1;
  int *v6 = (v8 + v10 - 345) ^ v16;
  int v12 = (v11 - 1155) | 0x4D0;
  uint64_t v19 = v14;
  unsigned int v18 = v11 + 535753261 * ((2 * (v17 & 0x57823680) - v17 - 1468151430) ^ 0xA289C755) - 673;
  (*(void (**)(unsigned char *))(v9 + 8 * (v11 + 1140)))(v17);
  uint64_t v19 = v15;
  unsigned int v18 = v12 + 535753261 * ((((2 * v17) | 0x952C103E) - v17 + 896137185) ^ 0xC0620630) - 750;
  (*(void (**)(unsigned char *))(v9 + 8 * (v12 + 1063)))(v17);
  return 0;
}

uint64_t sub_1B02ADC54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((127 * (v7 + 1 == v9 + 24)) ^ a7)))();
}

void sub_1B02ADD18(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v1 = 1759421093 * ((((2 * a1) | 0x1851ADD4) - a1 - 204003050) ^ 0xBF5566BE);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  uint64_t v3 = *(void *)(a1 + 24);
  int v4 = 857825313 * (*(_DWORD *)(a1 + 36) - v1);
  unsigned int v5 = 535753261
     * ((-1402127699 - (&v8 ^ 0xE703BA3B | 0xAC6D3AAD) + (&v8 ^ 0xE703BA3B | 0x5392C552)) ^ 0xBE657146);
  unsigned int v6 = (-446340063 * (*(_DWORD *)(a1 + 32) + v1)
      - ((-892680126 * (*(_DWORD *)(a1 + 32) + v1) + 2023666514) & 0xC4F2475C)
      - 1631027881) ^ v5;
  uint64_t v8 = &STACK[0x5B62222C33553D15];
  uint64_t v14 = v3;
  int v10 = &STACK[0x7A71FA3516B26449];
  unsigned int v11 = v6;
  unsigned int v13 = ((v4 + 2085922734) ^ 0x5D7FBDFD) + ((2 * (v4 + 2085922734)) & 0xBAFF7BFA) - v5 - 1091571025;
  int v9 = v2 - v5 - 19;
  uint64_t v7 = (char *)*(&off_1F08D3590 + v2 - 250) - 12;
  (*(void (**)(unint64_t **))&v7[8 * (v2 ^ 0x8EE)])(&v8);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02ADF1C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1197
                                * ((v6 & (2 * (*(unsigned __int8 *)(v7 + 2) - 38)))
                                 + ((*(unsigned __int8 *)(v7 + 2) - 38) ^ v5) == (a4 ^ (v5 + 311)))) ^ a4)))();
}

uint64_t sub_1B02ADF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,unsigned int a21,int a22,uint64_t a23,int a24,unsigned int a25)
{
  if (a11 >= 0x73CBD332) {
    int v28 = -289118292;
  }
  else {
    int v28 = -1487096439;
  }
  unsigned int v29 = 628203409
      * ((((&a20 | 0x7BD09CDA) ^ 0xFFFFFFFE) - (~&a20 | 0x842F6325)) ^ 0x6A76F16);
  a23 = a15;
  a25 = v29 ^ 0xB10A1C3F;
  a20 = &STACK[0x53B515D5D60460B7];
  a21 = v28 - v29;
  a22 = v26 - v29 - 2024874217;
  uint64_t v30 = (*(uint64_t (**)(unint64_t **))(v27 + 8 * (v26 + 1207)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v27
                                            + 8
                                            * (((a24 == v25 + ((v26 + 546795401) & 0xFCE) - 966)
                                              * ((v26 + 1987468047) & 0x25E2 ^ 0x96B)) ^ v26)))(v30);
}

uint64_t sub_1B02AE074()
{
  (*(void (**)(void))(v1 + 8 * (v0 ^ 0xAB5)))();
  return (*(uint64_t (**)(void))(v1 + 8 * ((237 * (STACK[0x480] == 0)) ^ (v0 + 243))))();
}

uint64_t sub_1B02AE0B0@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0x7B9B4EF5;
  *(unsigned char *)(a1 + (v6 - 863863780)) = *(unsigned char *)(v1 + (v6 - 863863780));
  if (v8 == v6 + 1357327655 < v2) {
    BOOL v8 = v6 + 1357327655 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v8 * (v3 + 1850)) ^ v3)))();
}

uint64_t sub_1B02AE120()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * (((((v1 - 786) | 0x284) - 568) * (v0 == v2)) ^ v1)))(2728668159);
}

uint64_t sub_1B02AE174(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  BOOL v8 = v5 < v6;
  unint64_t v9 = a1 - 0x2A8E1CD6097698E6;
  uint64_t v10 = a1 + 1;
  int v11 = v8 ^ (v9 < a5);
  BOOL v12 = v9 < v5;
  if (!v11) {
    BOOL v8 = v12;
  }
  return (*(uint64_t (**)(uint64_t))(v7 + 8 * (((((a2 ^ 0x190) + 157) ^ 4) * v8) ^ a2)))(v10);
}

uint64_t sub_1B02AE1D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20)
{
  a20 = a9 - 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((1380 * (((*(&a20 + 6 * (a9 - 1355080479) + 2) + (int)a7) & 0xFFFFFFFFFFFFFFELL) == 2)) ^ v20)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1B02AE280(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 ^ (1755732067 * ((a1 & 0xECFD530 | ~(a1 | 0xECFD530)) ^ 0x2FF69714));
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v1 - 777)
                              + 8 * (((*(void *)(a1 + 8) == 0x7DA9E0EFFB1E362ELL) * (v1 - 859)) ^ v1)
                              - 12))();
}

uint64_t sub_1B02AE310@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v67 = a1 ^ 0x7F6;
  int v68 = (_DWORD *)STACK[0x270];
  int v69 = LODWORD(STACK[0x50C])++;
  *int v68 = v69 + 1;
  *(void *)(v66 - 176) = *(unsigned int *)STACK[0x278] + a65;
  *(_DWORD *)(v66 - 164) = a65;
  *(void *)(v66 - 160) = a64;
  *(_DWORD *)(v66 - 192) = v67 + 1771630067 + a65;
  *(_DWORD *)(v66 - 188) = (v67 + 2104631489) ^ a65;
  *(_DWORD *)(v66 - 184) = a65 ^ (v67 + 1771630067) ^ 0x7B;
  *(_DWORD *)(v66 - 180) = (v67 + 1771630085) ^ a65;
  uint64_t v70 = (*(uint64_t (**)(uint64_t))(v65 + 8 * (v67 + 1507)))(v66 - 192);
  return (*(uint64_t (**)(uint64_t))(v65 + 8 * *(int *)(v66 - 168)))(v70);
}

uint64_t sub_1B02AE324@<X0>(int a1@<W4>, int a2@<W5>, unsigned int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((124 * (*(_DWORD *)(*v5 + 4 * a3) == (((a2 + 265) | a1) ^ (a4 + 2343)))) ^ a2)))();
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  if (a1) {
    BOOL v2 = a2 == 0;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02AE3D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  LODWORD(STACK[0x590]) = a14;
  return (*(uint64_t (**)(void))(v15 + 8 * ((v14 - 321) ^ (8 * (STACK[0x3C8] == 0)))))();
}

uint64_t sub_1B02AE410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  unsigned int v28 = *(_DWORD *)(v23 + 4 * (v26 - 1));
  *(_DWORD *)(v23 + 4 * v26) = ((1566083941 * (v28 ^ (v28 >> 30))) ^ *(_DWORD *)(v23 + 4 * v26)) - v26;
  int v29 = 1224239923 * ((1914446219 - (v25 | 0x721C218B) + a22) ^ 0x7F5023A3);
  *(_DWORD *)(v27 - 112) = v22 - v29 - 2088403962;
  *(_DWORD *)(v27 - 128) = 1 - v29;
  *(_DWORD *)(v27 - 124) = v22 - v29 - 2088403985;
  *(_DWORD *)(v27 - 120) = (v22 - 2088403883) ^ v29;
  *(_DWORD *)(v27 - 116) = v22 - v29 - 1501687910;
  uint64_t v30 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v22 | 0x141)))(v27 - 152);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * *(int *)(v27 - 144)))(v30);
}

void sub_1B02AE504()
{
}

uint64_t sub_1B02AE50C()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((2162 * (*off_1F08D3A28 == 0)) ^ v0)))();
}

void sub_1B02AE54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(void, unint64_t, void))(v65 + 8 * (v64 + 511)))(*a64, STACK[0x550], LODWORD(STACK[0x52C]));
  JUMPOUT(0x1B02AE580);
}

uint64_t sub_1B02AE58C()
{
  unsigned int v4 = v0[1];
  unsigned int v5 = v0[2];
  unsigned int v6 = v0[398];
  int v7 = *(_DWORD *)(v1 + 4 * (v5 & 1));
  unsigned int *v0 = v0[397] ^ ((v4 & 0x7FFFFFFE | *v0 & 0x80000000) >> 1) ^ *(_DWORD *)(v1 + 4 * (v4 & 1));
  v0[v2 ^ 0x813] = v6 ^ ((v5 & 0x7FFFFFFE | v4 & 0x80000000) >> 1) ^ v7;
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(v2 - 1120)))();
}

void sub_1B02AE594()
{
  *(_DWORD *)(v0 + 32) = 1904944996;
}

uint64_t sub_1B02AE5E0()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((*(_DWORD *)(v2 - 0x7DA9E0EFFB1E3616) == ((v1 + 748581967) & 0xD3618BB0 ^ 0x718B24F4))
                                * (((v1 - 843) | 0x80) + 741)) ^ (v1 - 689))))();
}

void sub_1B02AE648(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 4) ^ (1755732067 * (((a1 | 0x83D72B3C) - (a1 & 0x83D72B3C)) ^ 0x5D1196E7));
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1);
  uint64_t v4 = *(void *)(a1 + 8);
  unsigned int v5 = v1
     - 628203409 * ((-29150171 - (&v4 | 0xFE433425) + (&v4 | 0x1BCCBDA)) ^ 0x8334C7E9)
     + 294;
  uint64_t v3 = (char *)*(&off_1F08D3590 + v1 - 641) - 12;
  (*(void (**)(uint64_t *))&v3[8 * (v1 ^ 0xA4F)])(&v4);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02AE790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v69 = STACK[0x4A0];
  STACK[0x4B0] = *(void *)(v68 + 8 * (int)(STACK[0x2F0] - 899));
  STACK[0x4D0] = v69;
  STACK[0x548] = v67;
  uint64_t v70 = *(_DWORD *)(v69 - 0x2B41EA7AD2F8E82DLL) & 0x3F ^ (53 * (a67 & 0xCC3E2A1F ^ 0xC) - 884);
  *(unsigned char *)(v69 - 0x2B41EA7AD2F8E871 + v70) = 80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v68
                                                                                                  + 8 * (int)((2250 * (v70 > (((a67 & 0xCC3E2A1F ^ 0xC) + 1957) ^ 0x781))) ^ a67 & 0xCC3E2A1F)))(a1, -1759093154, 29, a4, a5, 208, 2389998781);
}

uint64_t sub_1B02AE7AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * (((((v3 - 1264877625) & 0x4B64789F) + 78)
                                                                         * (v4 == 63)) ^ v3)))(a1, a2, a3, 71960430);
}

uint64_t sub_1B02AE7EC@<X0>(int a1@<W8>)
{
  unint64_t v4 = 108757529
     * ((((v3 - 160) | 0x120008FD2DCA1579) - (v3 - 160) + ((v3 - 160) & 0xEDFFF702D235EA80)) ^ 0xF55B6AE5CD567752);
  *(_DWORD *)(v3 - 152) = ((a1 - 1613188290) ^ 0x11) - v4;
  *(void *)(v3 - 144) = v4 ^ 0x54BF108F;
  *(void *)(v3 - 136) = v4 + v1;
  *(_DWORD *)(v3 - 120) = v4;
  *(_DWORD *)(v3 - 128) = a1 - 1613188290 + v4;
  *(_DWORD *)(v3 - 160) = v4 + a1 - 1689051559;
  *(_DWORD *)(v3 - 156) = (a1 - 1613188367) ^ v4;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 2353)))(v3 - 160);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v3 - 124)))(v5);
}

void sub_1B02AE8D0()
{
}

uint64_t sub_1B02AE930@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return sub_1B02AA5B4(a1, a3 ^ 0x548u, *(_DWORD *)(*v5 + 4 * (a2 - 1575383033)), v4, a4);
}

uint64_t sub_1B02AE964@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W4>, int a4@<W8>)
{
  *(unsigned char *)(a1 + (a2 + v7)) = *(unsigned char *)(v6 + (a2 + v7));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1649 * (a2 - 1 == ((5 * (a3 ^ (v4 + 1319))) ^ a4))) ^ (a3 + v5))))();
}

uint64_t sub_1B02AE9A8@<X0>(uint64_t a1@<X1>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v3 + a3 + a1) = a2;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((215 * (a3 + 1 + a1 < ((15 * (v4 ^ 0xA7) + 817530919) & 0xCF45777D ^ 0x5DuLL))) ^ (15 * (v4 ^ 0xA7)))))();
}

uint64_t sub_1B02AEA08()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((3801 * ((v2 + 1788 + v0 - 111749290) < 0x38)) ^ (v2 + 1547))))(1134517941);
}

uint64_t sub_1B02AEA54()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((508 * ((v0 & 0x1F ^ 0xA) == ((((v1 - 235) ^ 0x6CC) - 799) ^ 0x307))) ^ (v1 - 235))))();
}

void sub_1B02AEA9C(uint64_t a1@<X8>)
{
  int v4 = v1 - 1181130269 + (v1 - 1181130269) * (v2 + v3);
  *(_DWORD *)(a1 - 0x6155FFFFEB445CC1) = (v4 ^ 0x5AFCBC5E) - 138453068 + ((2 * v4) & 0xB5F978BC);
}

uint64_t sub_1B02AEB24(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v4 + v3 + (a3 ^ 0xAAC8FB25) - 448321891 < 8) * ((a3 - 42968586) & 0x28FA6FB ^ 0x269)) ^ a3)))();
}

void sub_1B02AEBA0()
{
}

void sub_1B02AEBB8(uint64_t a1)
{
  int v1 = 3804331 * (((a1 | 0x6D309AEE) - a1 + (a1 & 0x92CF6511)) ^ 0x13E5BF18);
  __asm { BRAA            X13, X17 }
}

uint64_t sub_1B02AEC78()
{
  unsigned int v3 = v1 - (((v1 << (v2 ^ 0xFB)) + 1494599994) & 0x845587B4) - 290084745;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((482
                                * (((7 * (v2 ^ 0x9C3) - 288035729) & (2 * v3) ^ 0x845484B4)
                                 + (v3 ^ 0xB540B9A5)
                                 + 502767024 != 358750255)) ^ v2)))();
}

uint64_t sub_1B02AED28()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((v1 + v0 + 144016769) < 8) ^ v2) & 1)
                                * ((v2 ^ 0x93) - 2047)) ^ v2)))();
}

uint64_t sub_1B02AED84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40)
{
  *(_DWORD *)&v45[16] = a40;
  *(void *)&v45[8] = a39;
  *(void *)uint64_t v45 = a38;
  *(_OWORD *)(a5 + (((v42 + 1512) ^ 0xFFFFF87BLL) & (v40 + a2))) = *(_OWORD *)&v45[4];
  return (*(uint64_t (**)(void))(v43
                              + 8
                              * ((250 * ((((v42 - 54) + 0x1FFFFFE8ALL) & (v41 + 1)) != 16)) ^ (v42 - 54))))();
}

uint64_t sub_1B02AEDF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(_DWORD *)(*(void *)(v10 - 0x6155FFFFEB445CBDLL) + 4 * (v8 + v6)) = a6;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)((120 * ((((v7 - 96) ^ (v6 - 1300)) + v8) >> 31)) ^ v7)))();
}

void sub_1B02AEFF0()
{
}

uint64_t sub_1B02AF008()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v0 - 492559507) & 0x1D5BDFFE) - 521) * (v2 == 568732660)) ^ (v0 - 492559507) & 0x1D5BDFFE)))();
}

void jEHf8Xzsv8K(uint64_t a1)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02AF0B4@<X0>(int a1@<W7>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((4095 * (a2 + 1 == v3 + 32)) ^ a1)))();
}

uint64_t sub_1B02AF17C(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v2 = 535753261 * ((a1 + 1065520 - 2 * (a1 & 0x104230)) ^ 0xAE44C1F);
  int v3 = *(_DWORD *)a1 + v2;
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  unsigned int v8 = 235795823
     * (((&v10 | 0xAA858AE3) - &v10 + (&v10 & 0x557A7518)) ^ 0x3E28C3BA);
  int v11 = v2 + *(_DWORD *)(a1 + 32) + v8 + 85298380;
  uint64_t v16 = v5;
  uint64_t v10 = v7;
  uint64_t v12 = v6;
  uint64_t v13 = v4;
  int v15 = v8 ^ (v3 - 368398042);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08D3590 + (v3 ^ 0x15F557B6)) + 8 * v3 - 2947182292))(&v10);
  *(_DWORD *)(a1 + 24) = v14;
  return result;
}

uint64_t sub_1B02AF2C4(uint64_t a1, int a2)
{
  if (a1) {
    BOOL v3 = a2 == 0;
  }
  else {
    BOOL v3 = 0;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v2 + 8 * ((94 * v4) ^ 0x2B0u)))();
}

void OowSGu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    BOOL v5 = a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X9, X17 }
}

void sub_1B02AF3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v6 = v5 ^ 0x3CCu;
  unint64_t v7 = STACK[0x2A0];
  STACK[0x2E0] = (unint64_t)&STACK[0x5D0] + STACK[0x2A0] + v6 - 0x9872DDC1BE069BDLL;
  STACK[0x2D0] = (unint64_t)&STACK[0x5D0] + v7 + v6 - 0x9872DDC1BE069BBLL;
  LODWORD(STACK[0x2C8]) = a5 ^ 0x1A4;
  JUMPOUT(0x1B02AF460);
}

uint64_t sub_1B02AF49C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((a1 + v1 == 82) * ((v1 + 838) ^ v2)) ^ (v1 + 872))))();
}

uint64_t sub_1B02AF4D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x58C]) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * (a8 - 895)))();
}

uint64_t sub_1B02AF4EC@<X0>(int a1@<W4>, int a2@<W8>)
{
  unint64_t v7 = (unsigned int *)(v6 + 4 * v2);
  unsigned int v8 = v3 & 0x80000000;
  uint64_t v9 = v2 + 1;
  int v10 = *(_DWORD *)(v6 + 4 * v9);
  unsigned int v11 = v7[397] ^ ((v10 & 0x7FFFFFFE | v8) >> 1);
  unsigned int *v7 = (v11 + v4 - (a1 & (2 * v11))) ^ *((_DWORD *)&STACK[0x4F8] + (v10 & (((a2 - 857) | 0x243u) - 1014)));
  return (*(uint64_t (**)(void))(v5 + 8 * ((21 * (v9 == 227)) ^ a2)))();
}

uint64_t sub_1B02AF560@<X0>(int a1@<W1>, unsigned int a2@<W3>, uint64_t a3@<X8>, uint8x8_t a4@<D0>)
{
  a4.i32[0] = *(_DWORD *)(a3 + a2 + 1);
  *(_DWORD *)(a3 - 3 + (v6 + v4)) = vmovn_s16((int16x8_t)vmovl_u8(a4)).u32[0];
  return (*(uint64_t (**)(void))(v7 + 8 * (int)((195 * ((a1 & 0xB1D2937F) - 635 == v5)) ^ a1 & 0xB1D2937F)))();
}

uint64_t sub_1B02AF5B8(int a1, int a2, int8x16_t a3, int8x16_t a4)
{
  uint64_t v10 = (v7 - 32 + v6);
  int8x16_t v11 = vrev64q_s8(*(int8x16_t *)(v8 + v10 - 15));
  int8x16_t v12 = vextq_s8(v11, v11, 8uLL);
  int8x16_t v13 = vrev64q_s8(*(int8x16_t *)(v8 + v10 - 31));
  int8x16_t v14 = vextq_s8(v13, v13, 8uLL);
  uint64_t v15 = v4 + v10;
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v12, vandq_s8(vaddq_s8(v12, v12), a3)), a4));
  *(int8x16_t *)(v15 - 15) = vextq_s8(v16, v16, 8uLL);
  int8x16_t v17 = vrev64q_s8(vaddq_s8(vsubq_s8(v14, vandq_s8(vaddq_s8(v14, v14), a3)), a4));
  *(int8x16_t *)(v15 - 31) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 != 32) * a2) ^ (v5 + 556))))();
}

uint64_t sub_1B02AF5C8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 568732676;
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * ((v3 - 275) ^ (v3 - 86))) ^ v3)))();
}

uint64_t sub_1B02AF614(int a1)
{
  BOOL v3 = (v1 ^ 0x44DAE8F3) == ((a1 + 1730687400) & 0x98D7CB7E) - 634;
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((v3 ^ (a1 - 72)) & 1 | (4
                                                                                       * ((v3 ^ (a1 - 72)) & 1))) ^ a1)))(1125271914);
}

uint64_t sub_1B02AF69C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, int a13, int a14)
{
  int v16 = *(_DWORD *)(v14 - 256);
  int v17 = a14 - ((2 * a11) & 0x53212D38) + 1163830221 + ((v16 - 1155) | 0x40);
  BOOL v18 = ((2 * v17) & 0xFF7BAFFE ^ 0x53212D38) + (v17 ^ 0x562D4163) + 1073217464 != 1068881847;
  return (*(uint64_t (**)(void))(v15 + 8 * (((2 * v18) | (8 * v18)) ^ v16)))();
}

uint64_t sub_1B02AF754@<X0>(char a1@<W8>)
{
  *(_DWORD *)(v7 + 4 * v1) = v1 + ((v2 >> a1) ^ v2) * v4;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v1 < 0x26F) * v3) ^ v5)))();
}

void sub_1B02AF784()
{
  _DWORD *v0 = -1904968515;
  JUMPOUT(0x1B02AF790);
}

uint64_t sub_1B02AF7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, unsigned int a17, uint64_t a18, uint64_t a19)
{
  uint64_t v26 = v19[2];
  unsigned int v27 = (&a12 ^ 0xAF40E2F) * v21;
  a13 = *v19;
  a14 = v26;
  a12 = (v24 ^ 0x4F6) - v27 + 368398778;
  a16 = (v25 - ((1715650626 * v22 - 123121828) & 0xE7249376) - 270077591) ^ v27;
  a17 = v24 - v27 + (((v24 ^ 0x4F6) - 1014) ^ a10 ^ 0xFFFEF732) + ((2 * a10) & 0xFFFDED66) + 1595763711;
  a18 = a11;
  a19 = a11;
  uint64_t v28 = (*(uint64_t (**)(int *))(v23 + 8 * ((v24 ^ 0x4F6) + 980)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * (((2 * (a15 == v20)) | (8 * (a15 == v20))) ^ v24 ^ 0x4F6)))(v28);
}

uint64_t sub_1B02AF8C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  a17 = v23;
  a18 = v24;
  a16 = a10;
  a19 = (v19 + 1596) ^ (1225351577
                      * (((&a15 | 0xD904AA4B) - &a15 + (&a15 & 0x26FB55B0)) ^ 0xFA9E725D));
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 ^ 0x82E)))(&a15);
  a15 = (v19 + 42) ^ (((((2 * &a15) | 0xD066AE2C) - &a15 + 399288554) ^ 0x85C74F1F) * v21);
  a16 = v20;
  a17 = a10;
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 + 2032)))(&a15);
  a15 = (v19 + 567) ^ (1755732067
                     * (((&a15 | 0x41B60507) + (~&a15 | 0xBE49FAF8)) ^ 0x9F70B8DD));
  a16 = a10;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v19 + 1995)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a17 == 1904944996) * ((v19 + 818) ^ 0x2B6)) ^ v19)))(v25);
}

uint64_t sub_1B02AFA10(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a1 - 7 + (v9 + v8 + a2 - a4)) = *(void *)(v6 - 7 + (v9 + v8 + a2 - a4));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a4 - (v7 & 0xFFFFFFF8) == -8) * (((a6 - 39) | 0xE0) + 44)) ^ a6)))();
}

void sub_1B02AFA68()
{
}

uint64_t sub_1B02AFB34()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((2 * (v0 ^ 0x93B) - 103 + ((2 * (v0 ^ 0x93B) - 384362011) & 0x16E8EBB6) - 2870)
                                * ((v2 + v1 - 133) < 0x7FFFFF7D)) ^ (2 * (v0 ^ 0x93B)))))();
}

uint64_t sub_1B02AFB94()
{
  unsigned int v3 = ((v0 - 474248624) ^ 0xE3BB8C04) + LODWORD(STACK[0x380]) - 455028722;
  int v4 = (v1 - 867488822 < ((v0 - 474248624) & 0x1C4477EFu) + 532693442) ^ (v3 < 0x1FC0472D);
  BOOL v5 = v3 < v1 - 867488822;
  if (v4) {
    BOOL v5 = v1 - 867488822 < ((v0 - 474248624) & 0x1C4477EFu) + 532693442;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((27 * !v5) ^ v0)))();
}

uint64_t sub_1B02AFC24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43)
{
  return (*(uint64_t (**)(void))(v44 + 8 * (((a43 - 929802700 < (v43 ^ 0x255u) - 312) * (v43 - 630)) ^ v43)))();
}

uint64_t sub_1B02AFC6C@<X0>(int a1@<W8>)
{
  unsigned int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xF8A));
  return v3(v1);
}

uint64_t sub_1B02AFCA0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(void *)(a1 - 7 + (v2 - 76352023 - v3)) = *(void *)(v5 - 7 + (v2 - 76352023 - v3));
  int v7 = v3 + ((v4 - 455676259) & 0x1B290F9F) - 791 == (a2 & 0xFFFFFFF8);
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (v7 << 8)) ^ v4)))();
}

void sub_1B02AFD04()
{
}

uint64_t sub_1B02AFD84@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(_DWORD *)(*(void *)(a1 - 0x6155FFFFEB445CBDLL) + 4 * (v5 + v2)) != v3 + v1 - 1973 - 193)
                                * ((v1 - 309) ^ 0x73B)) ^ (v1 - 1979))))();
}

uint64_t sub_1B02AFDD4@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  int v8 = (unsigned int *)(v5 + 4 * v4);
  uint64_t v9 = v4 + 1;
  unsigned int *v8 = *(_DWORD *)(v6 + 4 * (*(_DWORD *)(v5 + 4 * v9) & ((a1 ^ (2 * a3)) - 2065))) ^ v8[397] ^ ((*(_DWORD *)(v5 + 4 * v9) & 0x7FFFFFFE | v3 & 0x80000000) >> 1);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v9 == 227) * a2) ^ a3)))();
}

void sub_1B02AFE2C()
{
}

uint64_t sub_1B02AFE44(uint64_t a1)
{
  BOOL v4 = v1 - a1 >= (unint64_t)(((v2 + 890557131) & 0xCAEB2799) + 165) - 774;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 | (32 * v4) | v2)))();
}

uint64_t sub_1B02AFE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  return (*(uint64_t (**)(void))(v15 + 8 * ((2849 * (a14 == v14 + v16 + 382034949)) ^ v14)))();
}

uint64_t sub_1B02AFEBC(double a1)
{
  *(double *)(v6 + (v1 ^ v3)) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) ^ v2)))();
}

uint64_t sub_1B02AFEE8()
{
  uint64_t v5 = v3 + 127 - v1;
  int8x16_t v6 = vrev64q_s8(*(int8x16_t *)(v5 - 15));
  int8x16_t v7 = vextq_s8(v6, v6, 8uLL);
  int8x16_t v8 = vrev64q_s8(*(int8x16_t *)(v5 - 31));
  int8x16_t v9 = vextq_s8(v8, v8, 8uLL);
  uint64_t v10 = v0 + 127 - v1;
  v11.i64[0] = 0xA0A0A0A0A0A0A0A0;
  v11.i64[1] = 0xA0A0A0A0A0A0A0A0;
  v12.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v12.i64[1] = 0xD0D0D0D0D0D0D0D0;
  int8x16_t v13 = vrev64q_s8(vaddq_s8(vsubq_s8(v7, vandq_s8(vaddq_s8(v7, v7), v11)), v12));
  *(int8x16_t *)(v10 - 15) = vextq_s8(v13, v13, 8uLL);
  int8x16_t v14 = vrev64q_s8(vaddq_s8(vsubq_s8(v9, vandq_s8(vaddq_s8(v9, v9), v11)), v12));
  *(int8x16_t *)(v10 - 31) = vextq_s8(v14, v14, 8uLL);
  LODWORD(v10) = v1 + ((2 * v2) ^ 0x954u) != 1904;
  return (*(uint64_t (**)(void))(v4 + 8 * (int)(((2 * v10) | (4 * v10)) ^ v2)))();
}

uint64_t sub_1B02AFF80@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v5 + a1 + v6) = a2;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 + v4 - 146 == v3) * v7) ^ v2)))();
}

uint64_t sub_1B02AFFAC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v20 = ((((v19 - 144) | 0x43F21B0A) - (v19 - 144) + ((v19 - 144) & 0xBC0DE4F0)) ^ 0xF08FAB5E) * v18;
  *(_DWORD *)(v19 - 132) = v20 + v17 + 376;
  *(_DWORD *)(v19 - 128) = a1 + v20;
  *(void *)(v19 - 144) = a16;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v17 ^ 0x84E)))(v19 - 144);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((95 * (*(_DWORD *)(v19 - 136) != 633308027)) ^ v17)))(v21);
}

uint64_t sub_1B02B0044@<X0>(uint64_t a1@<X0>, unsigned int a2@<W4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  *(unsigned char *)(a4 + (((v5 ^ a2) + v9) & (a5 + a1))) = *(unsigned char *)(v6 + v7 + a3)
                                                  - (v10 & (2 * *(unsigned char *)(v6 + v7 + a3)))
                                                  - 48;
  return (*(uint64_t (**)(void))(v8 + 8 * ((255 * ((a1 + a5 + 1) > 0x3F)) ^ v5)))();
}

uint64_t sub_1B02B00A0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((v1 + 887) ^ (2
                                             * ((*(unsigned char *)(a1 + 32)
                                                                - *((unsigned char *)*(&off_1F08D3590 + (v1 ^ 0x3E5)) - 8)
                                                                + 1) != ((19
                                                                                         * (((v1 - 5) | 0x1A) ^ 0xA4)) ^ 0x6F))))))();
}

uint64_t sub_1B02B0138(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v34 = (a6 >> (23 * (v33 ^ 0xD7u) + 107)) + (*(_DWORD *)(a25 + v31) ^ v25);
  *(_DWORD *)(a25 + 4 * a5) = v34 + v25 - (v26 & (2 * v34));
  *(_DWORD *)(a25 + v31) = HIDWORD(v34) + v25 - 2 * HIDWORD(v34);
  BOOL v35 = v30 - 224096059 < v27;
  if (a20 > v28 != v30 - 224096059 < -1925971749) {
    BOOL v35 = a20 > v28;
  }
  return (*(uint64_t (**)(void))(v29 + 8 * ((v33 + 79) ^ (v35 * v32))))();
}

uint64_t sub_1B02B0140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  if (a23 == 2) {
    return (*(uint64_t (**)(void))(v34
  }
                                + 8
                                * ((1679 * (((*(_DWORD *)(v35 - 160) == 1242902621) ^ 0xB9) & 1)) ^ (a5 + 1380254129))))();
  if (a23 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v34
  }
                                                                + 8
                                                                * ((233 * (*(_DWORD *)(v35 - 160) == 1242902621)) ^ (a5 + 1380254104))))(a1, a2, a15);
  uint64_t v37 = (a5 + 1380253481) | 0x446u;
  unint64_t v38 = ((v37 - 0x40B0C400C05004F0) ^ (unint64_t)&a34)
      + ((2 * (void)&a34) & 0x7E9E77FE7F5FFEB0)
      + 0x77FBFDF9EBF540A1;
  *(unsigned char *)(v35 - 161) = (v38 ^ 0xBA) * (v38 + 17);
  return (*(uint64_t (**)(void))(v34 + 8 * (int)((201 * ((v37 ^ 0x44FLL) == 91)) ^ v37)))();
}

#error "1B02B462C: call analysis failed (funcsize=2058)"

uint64_t sub_1B02B03F8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 == 21) ^ (v1 + 24)) & 1) * (v1 - 1569)) ^ v1)))();
}

uint64_t sub_1B02B0424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, int a17, unsigned int a18)
{
  if (a18 < 0x30DEC073 != (a15 + 818771296) < 0x30DEC073) {
    BOOL v19 = (a15 + 818771296) < 0x30DEC073;
  }
  else {
    BOOL v19 = a15 + 818771296 > a18;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v19 * (a7 + a6 - 50)) ^ (a7 + a6 + 425))))();
}

uint64_t sub_1B02B0430@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((79
                                * (((2 * (a1 - 1400183651)) & 0x1FBEDFBF8)
                                 + ((a1 - 1400183651) ^ 0xFF7CE3DAFDF6FDFCLL)
                                 + 0x831C2519AD8582 == 396657534)) ^ 0x43Fu)))();
}

uint64_t sub_1B02B04D4(uint64_t result)
{
  uint64_t v1 = 1374699841 * (result ^ 0xE0C9E0C6DF41809);
  uint64_t v2 = (_DWORD *)(result + 16);
  uint64_t v3 = *(void *)(result + 8);
  unint64_t v4 = v3 - v1;
  uint64_t v5 = *(void *)(result + 32);
  BOOL v6 = v3 == v5;
  BOOL v7 = v4 > v5 - v1;
  if ((*(_DWORD *)(result + 20) ^ v1)) {
    BOOL v6 = v7;
  }
  if (!v6) {
    uint64_t v2 = (_DWORD *)result;
  }
  *(_DWORD *)(result + 4) = (*v2 - v1) ^ (*(_DWORD *)(result + 28) + v1);
  return result;
}

uint64_t sub_1B02B054C@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1653514899);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v5 + (v8 & 0xF)) ^ *(unsigned char *)(v4 + (v8 & 0xF)) ^ *(unsigned char *)(v6 + (v8 & 0xF)) ^ (5 * (v8 & 0xF)) ^ 0xD0;
  return (*(uint64_t (**)(void))(v7 + 8 * ((1994 * (a1 - 1 == v3)) ^ (a2 - 526))))();
}

void sub_1B02B05B4(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

void sub_1B02B061C()
{
}

uint64_t sub_1B02B0674()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (int)((((v2 + 1199) ^ 0xD65 ^ (v2 + 1619247563) & 0x9F7C3FDE) * (v1 == 335544320)) ^ v2)))();
}

uint64_t sub_1B02B06BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v18 + 8
                                    * ((1012 * ((((v16 + 20) ^ v16 ^ 0x1C ^ 0xFFFFFFFC) & v17) - a16 != -3)) ^ v16)))();
}

uint64_t sub_1B02B06F8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 - 313 + 34 * (v2 ^ 0x15D) - 905) * (v1 == v0)) ^ v2)))();
}

void sub_1B02B0738()
{
}

uint64_t sub_1B02B0740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v7
                                                             + 8
                                                             * ((((v6 & 0x18) != 0) | (16 * ((v6 & 0x18) != 0))) ^ a6)))(a1, a2, (a1 - a2));
}

uint64_t sub_1B02B0784(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(a1 - 7 + (v6 + v4 - v7)) = *(void *)(v3 - 7 + (v6 + v4 - v7));
  return (*(uint64_t (**)(void))(v8 + 8 * ((1475 * ((a3 ^ 0x12B) + v7 == (v5 & 0xFFFFFFF8))) ^ a3)))();
}

void sub_1B02B07D8(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    BOOL v1 = *(_DWORD *)(a1 + 20) - 1759421093 * (a1 ^ 0xB37DB054) == 2073932709;
  }
  else {
    BOOL v1 = 1;
  }
  char v2 = v1;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02B088C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,uint64_t a21,uint64_t a22,int a23,int a24,unsigned int a25,unsigned int a26)
{
  if (a26 < a25 != a20 + 551414507 < (a24 + 1277488687)) {
    BOOL v27 = a20 + 551414507 < (a24 + 1277488687);
  }
  else {
    BOOL v27 = a20 + 551414507 > a26;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((4046 * v27) ^ (a5 + 1380255458))))(a1, 160, a3, 103);
}

uint64_t sub_1B02B0898@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + a2 + a1) = -48;
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((3069
                                * (a2
                                 - 2732609183
                                 + (unint64_t)((((v19 - 975) | 0x314) + 574873424) | 0x8181068u) < 0x40)) ^ ((v19 - 975) | 0x314))))();
}

uint64_t sub_1B02B08FC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 32) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1B02B0914()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((15 * (v0 ^ 0x29C)) ^ 0xA2) * (v1 < v2)) ^ v0)))();
}

uint64_t sub_1B02B0998(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((19 * ((a3 + 1 + v4) < 0x3C)) ^ v3)))();
}

void sub_1B02B0A6C(int a1@<W8>)
{
  *(_DWORD *)(v1 + 8) = a1;
}

void sub_1B02B0A74()
{
  int v0 = (unint64_t *)STACK[0x3B8];
  STACK[0x278] = STACK[0x240];
  STACK[0x2D0] = *v0;
  JUMPOUT(0x1B02A3538);
}

uint64_t sub_1B02B0A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,int a21,unsigned int a22)
{
  a20 = &STACK[0xFBD18CA084591B0];
  a22 = 1989 - 460628867 * (&a20 ^ 0x4C96827D);
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v23 + 19064))(&a20);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((987 * (a21 != ((v22 - 573) ^ 0x243))) ^ 0x1C4u)))(v24);
}

void sub_1B02B0B20(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6)
{
  a6 = v7;
  a5 = v8 + 1225351577 * ((((2 * &a3) | 0x13800448) - &a3 - 163578404) ^ 0x2A5ADA32) + 1826;
  a3 = v7;
  a4 = v6;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 + 2159)))(&a3);
  JUMPOUT(0x1B02B0B7CLL);
}

uint64_t sub_1B02B0BA4@<X0>(int a1@<W4>, int a2@<W8>)
{
  if ((a2 - 216761670) <= 0x18 && ((1 << (a2 - 70)) & 0x1094001) != 0) {
    __asm { BRAA            X11, X17 }
  }
  return v3 ^ 0x8E747CBA;
}

uint64_t sub_1B02B0C38@<X0>(unint64_t a1@<X4>, int8x16_t *a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int8x16_t *a10)
{
  *a2 = veorq_s8(*a10, (int8x16_t)xmmword_1B04DA0D0);
  STACK[0x570] += 32;
  STACK[0x580] = a1;
  STACK[0x578] = a1;
  return (*(uint64_t (**)(void))(v11 + 8 * (v10 ^ (1422 * (a2 == (int8x16_t *)a1)))))();
}

uint64_t sub_1B02B0CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned int a3@<W2>, int a4@<W3>, unsigned int a5@<W4>, uint64_t a6@<X8>)
{
  unsigned int v12 = a5;
  unsigned int v13 = a5 + 1;
  LOBYTE(v12) = *(unsigned char *)(*(void *)(a2 + 8) + v12);
  *(unsigned char *)(a1 + (v6 + v10) + 4) = (v12 ^ 0xFD) + (((v7 ^ v9) - 39) & (2 * v12)) + 24;
  unsigned int v14 = *(_DWORD *)(a2 + 4) + v11;
  BOOL v15 = v14 < v8;
  BOOL v16 = v13 + v8 < v14;
  if (v13 > a3 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(a6 + 8 * ((!v16 * a4) ^ v7)))();
}

void sub_1B02B0CDC(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02B0D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, unsigned int a14, unint64_t *a15, uint64_t a16)
{
  a14 = (v16 - 1218) ^ (1374699841
                      * ((2 * (&a14 & 0x17FF2B8) - &a14 - 25162428) ^ 0x9374154D));
  a15 = &STACK[0x571B6222F4470CCE];
  a16 = a10;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v16 ^ 0xF0C)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((a12 == v16 - v18 - 1372814106) | (32 * (a12 == v16 - v18 - 1372814106))) ^ v16)))(v19);
}

uint64_t sub_1B02B0DF8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)(v2 + a2) = *v4;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * ((112 * (a1 != 0)) ^ v3)))(a1 - 16, a2 + 16);
}

uint64_t sub_1B02B0E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (v66 == 1017008134 || v66 == 1017008131)
  {
    LOBYTE(STACK[0x187F]) = LOBYTE(STACK[0x5CF]) ^ 0xD0;
    LOBYTE(STACK[0x187E]) = LOBYTE(STACK[0x5CE]) ^ 0xD0;
    LOBYTE(STACK[0x187D]) = LOBYTE(STACK[0x5CD]) ^ 0xD0;
    LOBYTE(STACK[0x187C]) = LOBYTE(STACK[0x5CC]) ^ 0xD0;
    LOBYTE(STACK[0x187B]) = LOBYTE(STACK[0x5CB]) ^ 0xD0;
    LOBYTE(STACK[0x187A]) = LOBYTE(STACK[0x5CA]) ^ 0xD0;
    LOBYTE(STACK[0x1879]) = LOBYTE(STACK[0x5C9]) ^ 0xD0;
    LOBYTE(STACK[0x1878]) = LOBYTE(STACK[0x5C8]) ^ 0xD0;
    LOBYTE(STACK[0x1877]) = LOBYTE(STACK[0x5C7]) ^ 0xD0;
    LOBYTE(STACK[0x1876]) = LOBYTE(STACK[0x5C6]) ^ 0xD0;
    LOBYTE(STACK[0x1875]) = LOBYTE(STACK[0x5C5]) ^ 0xD0;
    LOBYTE(STACK[0x1874]) = LOBYTE(STACK[0x5C4]) ^ 0xD0;
    LOBYTE(STACK[0x1873]) = LOBYTE(STACK[0x5C3]) ^ 0xD0;
    LOBYTE(STACK[0x1872]) = LOBYTE(STACK[0x5C2]) ^ 0xD0;
    LOBYTE(STACK[0x1871]) = LOBYTE(STACK[0x5C1]) ^ 0xD0;
    LOBYTE(STACK[0x1870]) = LOBYTE(STACK[0x5C0]) ^ 0xD0;
  }
  unint64_t v68 = STACK[0x2F0];
  int v69 = STACK[0x2F0] + 1432;
  int v70 = (*(uint64_t (**)(void, void, void, void, unint64_t *, unint64_t, void, unint64_t *))(v67 + 8 * (int)(STACK[0x2F0] ^ 0xAB7)))(LODWORD(STACK[0x520]), (v66 - 1017008126), a44 ^ 0x8E2E16C8, LODWORD(STACK[0x45C]) ^ 0xC72D06Cu, &STACK[0x1870], STACK[0x500], LODWORD(STACK[0x508]), &STACK[0x1858]);
  unsigned int v71 = ((2 * v70) & 0xBACFFBEE) + (v70 ^ 0xDD67FDF7);
  uint64_t v72 = (*(uint64_t (**)(void, unint64_t, void))(v67 + 8 * ((int)v68 + 1460)))(*a66, STACK[0x500], LODWORD(STACK[0x508]));
  return (*(uint64_t (**)(uint64_t))(v67 + 8 * (((v71 == -580387337) * (a49 ^ 0x264)) ^ v69)))(v72);
}

uint64_t sub_1B02B0FEC()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((1495 * ((5 * v2) + 4 == ((v4 + 691) ^ (v0 + 635)) + v1)) ^ v4)))();
}

uint64_t sub_1B02B102C@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v16 = a2 + 37;
  int v17 = v16 + 314;
  *(_DWORD *)(a8 + 4 * (v11 + v15 + v10)) = (HIDWORD(v12) ^ (v16 - 46685970))
                                            + v8
                                            - ((2 * (HIDWORD(v12) ^ (v16 - 46685970))) & 0x82B42326);
  BOOL v18 = v9 > 0x70D3AD97;
  if (v18 == v14 + 31294710 < (int)((v17 + 233326854) & 0xF217B5BF ^ 0x8F2C53D7)) {
    BOOL v18 = v14 + 31294710 < a1;
  }
  return (*(uint64_t (**)(void))(v13 + 8 * ((v18 * (((v17 - 725) | 0x201) - 119)) ^ v17)))();
}

uint64_t sub_1B02B10FC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((425 * (((((a2 ^ 0x1366) - 1207402242) ^ (a1 == 0xB635F045AA5D931)) & 1) == 0)) ^ a2 ^ 0x1366)))();
}

uint64_t sub_1B02B1160()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 == ((v0 - 1968095435) & 0x754EBDFB) + 1584941146) * (((v0 - 659) | 0x12) - 453)) ^ v0)))();
}

void sub_1B02B1210(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 12) + 460628867 * ((a1 & 0x73B15F3F | ~(a1 | 0x73B15F3F)) ^ 0xC0D822BD);
  uint64_t v2 = (char *)*(&off_1F08D3590 + v1 - 1854) - 12;
  uint64_t v3 = *(void *)&v2[8
                    * ((((*(uint64_t (**)(uint64_t, uint64_t))&v2[8 * v1 + 2696])(32, 0x101004023FF3BD5) == 0)
                      * ((v1 ^ 0x37D) - 1196)) ^ v1)];
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02B12C0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((255 * ((v1 ^ 0xAEDE6F1) != ((v0 - 609502007) & 0x245447EF ^ 0x7CB))) ^ (v0 + 602))))();
}

void sub_1B02B1328(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02B13B0@<X0>(int a1@<W8>)
{
  uint64_t v7 = ((v3 + 1301) ^ (v2 + 509)) + v4;
  *(unsigned char *)(v1 + v7) = *(unsigned char *)(v5 + v7) - ((2 * *(unsigned char *)(v5 + v7)) & 0xA0) - 48;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1917 * (v4 - 1 == a1)) ^ v3)))();
}

void sub_1B02B13FC()
{
}

uint64_t sub_1B02B15B8(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v12 = v7 - 2095036160 + v6 - v8;
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v4 - 7 + v12));
  *(int8x8_t *)(v3 - 7 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), v10)), v11));
  return (*(uint64_t (**)(void))(v9 + 8 * (((v8 - (v5 & 0xFFFFFFF8) == -8) * ((a3 - 310) ^ 0x2D)) ^ a3)))();
}

uint64_t sub_1B02B1630(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((29 * (((v8 == a7) ^ (37 * (v9 ^ (v7 - 29) ^ (v7 + 71)))) & 1)) ^ v9)))();
}

uint64_t sub_1B02B1670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((480 * ((a7 + 1 + v9) < 0x30)) ^ v7)))();
}

uint64_t sub_1B02B174C(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((((v1 | a1) - 512) ^ 0x6FB ^ (17 * ((v1 | a1) ^ 0x762)))
                                * (*(_DWORD *)(v2 + 1424) != 1742482590)) ^ (v1 | a1))))();
}

uint64_t sub_1B02B1794(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v9 = v6 - ((2 * v6 + 1494599994) & 0xA8FAF634) - 2130157641;
  BOOL v10 = ((v7 ^ 0xDFDFBEEB) & (2 * v9) ^ 0x88DAB424) + (v9 ^ 0xBB92A5AD) - 34347012 == 1843644083;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                                  + 8 * (((2 * v10) | (32 * v10)) ^ (v7 + 1))))(a1, a2, a3, a4, 1843644083, a6, 2389998781);
}

uint64_t sub_1B02B1838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v58 = STACK[0x40C];
  unint64_t v59 = STACK[0x2F0];
  if (LODWORD(STACK[0x40C]) == 158424886)
  {
    int v61 = (char *)&STACK[0x5D0] + v56 - 0x9872DDC1BE065C8;
    STACK[0x4E0] = (unint64_t)(v61 - 1824);
    LODWORD(STACK[0x34C]) = 1618566054;
    STACK[0x328] = v56 - 192;
    STACK[0x510] = 0;
    LODWORD(STACK[0x428]) = 1400183651;
    uint64_t v62 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)((((v59 - 1860510991) & 0x6EE525FF ^ 0x472) * (v61 == (char *)1576)) ^ (v59 + 172)));
    STACK[0x2B0] = STACK[0x540];
    STACK[0x2E0] = (unint64_t)(v61 - 1596);
    STACK[0x2C8] = (unint64_t)(v61 - 1824);
    return v62(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             a41,
             a42,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55);
  }
  else if (v58 == 426860345)
  {
    LODWORD(STACK[0x314]) = a7 - 97;
    return (*(uint64_t (**)(void))(v55
                                + 8
                                * (int)(((STACK[0x450] == 0) * (((v59 + 867) ^ 0xFFFFF813) + (v59 ^ 0x2A1))) ^ (v59 + 1192))))();
  }
  else
  {
    int v63 = 3804331 * (((v57 - 192) & 0x49B54F0D | ~((v57 - 192) | 0x49B54F0D)) ^ 0xC89F9504);
    *(void *)(v57 - 184) = a39;
    *(_DWORD *)(v57 - 192) = v58 - v63 - ((2 * v58 - 316849772) & 0xE3164EC8) + 1746520110;
    *(_DWORD *)(v57 - 188) = v63 + v59 + 299;
    int v64 = v59;
    uint64_t v65 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (int)(v59 ^ 0xACD)))(v57 - 192);
    return (*(uint64_t (**)(uint64_t))(v55
                                              + 8
                                              * (int)(((STACK[0x450] == 0) * (((v64 + 867) ^ 0xFFFFF813) + (v64 ^ 0x2A1))) ^ (v64 + 1192))))(v65);
  }
}

uint64_t sub_1B02B1A64()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((61 * (LODWORD(STACK[0x564]) - 1017008128 + ((v0 - 1362) | 0x304u) - 666 - 234 < 2)) ^ v0)))();
}

uint64_t sub_1B02B1AAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v13 = v8 == a8 || LODWORD(STACK[0x380]) - v10 != v9 - 412460739;
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * ((v9 - 782541153) & 0x2EA4A1FF ^ 0x191)) ^ v9)))();
}

uint64_t sub_1B02B1B08()
{
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((((v2 - 536) ^ (v0 == v1)) & 1) == 0) * (v2 - 1851)) | v2)))(1134517941);
}

uint64_t sub_1B02B1B4C(int a1, int a2, uint64_t a3, void *a4, int a5, int a6, int a7)
{
  unsigned int v14 = *(_DWORD *)(*a4 + 4 * (a7 + v11)) ^ v8;
  *(_DWORD *)(*a4 + 4 * (v10 + v7)) = ((v14 >> v12) | a6 ^ v8)
                                      + v8
                                      - ((v9 ^ (a1 + 911)) & (2 * ((v14 >> v12) | a6 ^ v8)));
  return (*(uint64_t (**)(void))(v13 + 8 * (((a7 - 1 + v11 >= 0) * a5) ^ a2)))();
}

uint64_t sub_1B02B1B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * ((21 * (v8 < ((a8 + 1042) | 0x88u) - 2201)) ^ a8)))(a1, a2, a3, 0);
}

void sub_1B02B1B88(uint64_t a1@<X8>)
{
  *(_DWORD *)(a1 - 0x2B41EA7AD2F8E831) = (*(_DWORD *)(a1 - 0x2B41EA7AD2F8E831) ^ 0x397279F1)
                                         + 963803633
                                         - ((2 * (*(_DWORD *)(a1 - 0x2B41EA7AD2F8E831) ^ 0x397279F1) + 2) & 0x72E4F3E2)
                                         + 1;
}

uint64_t sub_1B02B1BD0@<X0>(uint64_t a1@<X8>)
{
  unsigned int v5 = (((v3 + 1678) | 2) - v4 + 48515563) & 0xD955C1D4;
  unsigned int v6 = 628203409 * ((-301598531 - (&v8 | 0xEE05F8BD) + (&v8 | 0x11FA0742)) ^ 0x93720B71);
  uint64_t v9 = v1;
  unsigned int v10 = -300086897 - (v6 + v2) - v5;
  int v8 = v6 + v3 + 21;
  return (*(uint64_t (**)(int *))(a1 + 8 * (v3 ^ 0x99E)))(&v8);
}

uint64_t sub_1B02B1CA0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((a2 - 1856) | 0x201) - 870) * (*(unsigned char *)(v2 + a1) == 80)) ^ a2)))();
}

uint64_t sub_1B02B1CD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,int a62,uint64_t a63)
{
  int v65 = (STACK[0x2F0] - 313) | 0x400;
  STACK[0x2E8] = (*(uint64_t (**)(uint64_t, uint64_t))(v63 + 8 * (int)(STACK[0x2F0] + 1425)))(a63, 2965982036);
  uint64_t v66 = (*(uint64_t (**)(void))(v63 + 8 * a62))();
  *int v64 = v66;
  v64[1] = 1812433253 * (v66 ^ (v66 >> 30)) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v63 + 8 * (v65 ^ (2 * ((v65 ^ 0x423u) > 1)))))(v66, v67, v68, v69, v70, v71, v72, v73, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57,
           a58);
}

uint64_t sub_1B02B1D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,unsigned int a35)
{
  uint64_t v41 = (a5 + 454) | 0x124;
  int v37 = 628203409 * ((~((v36 - 128) | 0x6AAAFC17) + ((v36 - 128) & 0x6AAAFC17)) ^ 0x17DD0FDB);
  *(_DWORD *)(v36 - 120) = v37 + a5 + 1886;
  *(_DWORD *)(v36 - 116) = a14 - v37 + ((a5 - 94635102) & 0x2FFFF6FF ^ 0x297E9F24);
  *(void *)(v36 - 128) = a11;
  (*(void (**)(uint64_t))(v35 + 8 * (a5 ^ 0x948)))(v36 - 128);
  uint64_t v38 = a35 & (v41 ^ 0x308);
  *(&a26 + (v38 ^ 0x11)) = 80;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((392 * ((v38 ^ 0x11) > 0x37)) ^ a5)))(2726248035);
}

void sub_1B02B1E90(_DWORD *a1@<X8>)
{
  *a1 = v2;
  _DWORD *v1 = *a1;
}

uint64_t sub_1B02B1E98(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((2645
                                * (*(_DWORD *)(a8 + 72) == v9
                                                         + ((a3 + 188) ^ 0x45)
                                                         - 743
                                                         + 2 * ((a3 + 188) ^ 0x45)
                                                         - 1135486023)) ^ (a3 + 188))))();
}

uint64_t sub_1B02B1F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,unsigned int a22,int a23,uint64_t a24,int a25,unsigned int a26)
{
  unsigned int v28 = 628203409 * ((((2 * &a21) | 0x706BC376) - &a21 + 1204428357) ^ 0x3ABDED88);
  a21 = &STACK[0x53B515D5D60460B7];
  a24 = a18;
  a26 = v28 ^ 0x8552F9CE;
  a22 = -1487096439 - v28;
  a23 = a11 - v28 - 2024873742;
  uint64_t v29 = (*(uint64_t (**)(unint64_t **))(v27 + 8 * (a11 ^ 0xBB6)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((1240 * (a25 == v26 + 181 * (a11 ^ 0x290) - 543)) ^ a11)))(v29);
}

uint64_t sub_1B02B1FEC(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v7 + 13 * (a4 ^ 0x1C6) - 403) & (2 * (*(unsigned __int8 *)(v8 + 4) - 147)))
                                 + ((*(unsigned __int8 *)(v8 + 4) - 147) ^ v6) == v6)
                                * (a3 + (a4 ^ (v4 - 199)) + 690)) ^ a4)))();
}

uint64_t sub_1B02B2048@<X0>(int a1@<W8>)
{
  int v7 = v4 - 3;
  *(_DWORD *)(*(void *)(v6 - 0x6155FFFFEB445CBDLL) + 4 * (a1 + v7 + v1 - 1861214582)) = *(_DWORD *)(*(void *)(v6 - 0x6155FFFFEB445CBDLL) + 4 * (v1 + v3 + 1));
  return (*(uint64_t (**)(void))(v5 + 8 * ((13 * (v1 + v3 < (v7 + 1492 + v2))) ^ v7)))();
}

uint64_t sub_1B02B20AC()
{
  int v5 = v0 + v1 + 419426837;
  int v6 = v5 + 3597;
  if ((v5 + 3597) <= 0x40) {
    int v6 = 64;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((181 * (v3 + v6 <= ((((v2 + 391) ^ 0xE6A) - 2238) ^ (v5 + 3596)))) ^ v2)))();
}

uint64_t sub_1B02B2110(uint64_t result)
{
  *(_DWORD *)(result + 8) = 633308027;
  return result;
}

uint64_t sub_1B02B2120(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v5 + ((97 * (a5 ^ 0xD4) + 170393373) | 0x20C62C81) + 837) * ((v6 & 0x18) == 0)) ^ a5)))();
}

uint64_t sub_1B02B2170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v9 = STACK[0x428];
  unint64_t v10 = STACK[0x510];
  STACK[0x478] = (LODWORD(STACK[0x428]) - 1400183651);
  return (*(uint64_t (**)(unint64_t))(v8
                                                     + 8
                                                     * (((v9 != 1400183651) * (687 * (a8 ^ 0x387) - 1315)) ^ (a8 - 304))))(v10);
}

uint64_t sub_1B02B218C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 == v1) ^ v0) & 1) * (5 * (v0 ^ 0x4CA) + 305)) ^ v0)))();
}

uint64_t sub_1B02B21C8@<X0>(unsigned int a1@<W3>, unsigned int a2@<W4>, int a3@<W5>, int a4@<W8>)
{
  unsigned int v12 = v10 + 1;
  *(unsigned char *)(v9 + (v4 + 1)) = *(unsigned char *)(v8 + a4 + 1 + ((v7 - 1616) | a2));
  BOOL v13 = v5 < v6;
  if (v13 == v12 < a1) {
    BOOL v13 = v12 < v5;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v13 * a3) ^ v7)))();
}

void sub_1B02B21DC()
{
}

uint64_t sub_1B02B4630@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (((*(_DWORD *)(a18 + 4 * (a1 + v20 + 2)) != ((v19 + 1860188145) & 0x911FC1FF ^ (v18 - 365)))
                                * (v19 - 1984)) | (v19 - 1555))))();
}

uint64_t sub_1B02B4690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(void *)(v18 - 136) = v16;
  *(void *)(v18 - 128) = a14;
  *(_DWORD *)(v18 - 120) = v14
                         - 1759421093
                         * ((-1050170504 - ((v18 - 136) | 0xC167AB78) + ((v18 - 136) | 0x3E985487)) ^ 0x8DE5E4D3)
                         + 1017;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v14 + 1089)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * (((11 * (v14 ^ 0x4C7) - 105) * (v17 == 898060609)) ^ v14)))(v19);
}

uint64_t sub_1B02B4740(uint64_t a1, int a2, int a3, int a4)
{
  BOOL v11 = (v8 & (2 * (*(unsigned __int8 *)(v9 + 9) - 1))) + ((*(unsigned __int8 *)(v9 + 9) - 1) ^ v7) == a3 + a2
     && (v5 + v4 + 4) < 0xC9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((1843 * v11) ^ a4)))();
}

uint64_t sub_1B02B478C@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8 * ((248 * (*(_DWORD *)(*v3 + 4 * v4) == v1 + ((v2 - 1737) | 0x111) - 413)) ^ v2)))();
}

uint64_t sub_1B02B47C8@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((61 * (v1 == 1400183651)) ^ 0x31Cu)))();
}

uint64_t sub_1B02B47F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,unint64_t a53,unint64_t a54,char a55)
{
  uint64_t v59 = *(void *)(a20 + 24);
  a53 = 0xD0D0D0D0D0D0D0D0;
  a54 = 0xD0D0D0D0D0D0D0D0;
  int v60 = 235795823 * ((1487064866 - ((v58 - 160) | 0x58A2CF22) + ((v58 - 160) | 0xA75D30DD)) ^ 0x33F07984);
  *(void *)(v58 - 160) = &a55;
  *(_DWORD *)(v58 - 152) = v60 + 1680994575;
  *(_DWORD *)(v58 - 124) = (v57 + 2042) ^ v60;
  *(void *)(v58 - 120) = &a53;
  *(void *)(v58 - 144) = v58 - 180;
  *(void *)(v58 - 136) = v59;
  uint64_t v61 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v57 ^ 0x905)))(v58 - 160);
  return (*(uint64_t (**)(uint64_t))(v55
                                            + 8
                                            * (int)(((*(_DWORD *)(v58 - 128) == v56)
                                                   * ((v57 - 525474) & 0x8047D ^ (v57 + 1537267993) & 0xA45F27FF ^ 0x64)) ^ v57)))(v61);
}

uint64_t sub_1B02B4918(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3
                                                              + 8
                                                              * (((v2 <= ((v4 + 1972112812) ^ 0x2B0FBB6Au))
                                                                * (v4 + 1972111251)) ^ (v4 + 1972112967))))(a1, a2, 2322856164);
}

void sub_1B02B4964()
{
  if (v0 == 1664037403) {
    int v1 = 1904944996;
  }
  else {
    int v1 = -1904968516;
  }
  *(_DWORD *)(v2 + 40) = v1;
}

void sub_1B02B4B4C()
{
  STACK[0x340] = *(void *)(v1 + 8 * v0);
  JUMPOUT(0x1B02B8B5CLL);
}

uint64_t sub_1B02B4B54(int a1, int a2)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (v2 | (8
                                     * (((v2 + 15) ^ (a2 + a1 + 4335617 < (v2 - 456))) & 1)))))();
}

uint64_t sub_1B02B4BCC@<X0>(int a1@<W6>, uint64_t a2@<X8>)
{
  uint64_t v10 = (a1 + v4);
  *(unsigned char *)(a2 + v10) = *(unsigned char *)(v2 + v10) ^ *(unsigned char *)(v7 + (v10 & 0xF)) ^ *(unsigned char *)((v10 & 0xF) + v5 + 5) ^ *(unsigned char *)(v6 + (v10 & 0xF)) ^ (-73 * (v10 & 0xF)) ^ 0xD0;
  return (*(uint64_t (**)(void))(v9 + 8 * (((a1 - 1 == v3) * ((v8 ^ 0xDF3) + 516)) ^ (v8 - 1893))))();
}

uint64_t sub_1B02B4C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  int v28 = v25 + 756;
  int v36 = v25 + 1808;
  int v29 = v25 + 1702;
  *(_DWORD *)(v27 - 120) = v25
                         + 1702
                         + 460628867
                         * ((((v27 - 144) | 0x4090BA07) - (v27 - 144) + ((v27 - 144) & 0xBF6F45F8)) ^ 0xC06387A);
  *(void *)(v27 - 112) = a20;
  *(void *)(v27 - 136) = a20;
  *(void *)(v27 - 128) = a22;
  *(void *)(v27 - 144) = v26;
  uint64_t v30 = 8 * (v25 + 2080);
  (*(void (**)(uint64_t))(v24 + v30))(v27 - 144);
  *(void *)(v27 - 136) = a20;
  *(void *)(v27 - 128) = a22;
  *(void *)(v27 - 112) = a20;
  *(_DWORD *)(v27 - 120) = v29
                         + 460628867
                         * ((((v27 - 144) ^ 0xBC49CE35 | 0xB199E2BB)
                           - ((v27 - 144) ^ 0xBC49CE35)
                           + (((v27 - 144) ^ 0xBC49CE35) & 0x4E661D44)) ^ 0x4146AEF3);
  *(void *)(v27 - 144) = v26;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 ^ 0xD2C)))(v27 - 144);
  *(void *)(v27 - 112) = a20;
  *(void *)(v27 - 144) = v26;
  *(void *)(v27 - 136) = a20;
  *(_DWORD *)(v27 - 120) = v29 + 460628867 * ((((v27 - 144) | 0x9545E9C4) - ((v27 - 144) & 0x9545E9C4)) ^ 0xD9D36BB9);
  *(void *)(v27 - 128) = a22;
  (*(void (**)(uint64_t))(v24 + v30))(v27 - 144);
  int v31 = 1759421093 * ((-1730085761 - ((v27 - 144) | 0x98E0FC7F) + ((v27 - 144) | 0x671F0380)) ^ 0xD462B3D4);
  *(_DWORD *)(v27 - 132) = v28 - 380 + v31;
  *(_DWORD *)(v27 - 128) = v23 + (v36 ^ 0xB074B725) + v31;
  *(void *)(v27 - 144) = v22;
  (*(void (**)(uint64_t))(v24 + 8 * (v28 ^ 0xD42)))(v27 - 144);
  BOOL v32 = *(_DWORD *)(v27 - 136) != 633308027;
  int v33 = 1759421093 * ((v27 - 144) ^ 0xB37DB054);
  *(void *)(v27 - 144) = v22;
  *(_DWORD *)(v27 - 132) = v28 - 380 + v33;
  *(_DWORD *)(v27 - 128) = v33 + v23 - 1334526198;
  uint64_t v34 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v28 + 1342)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24 + 8 * (((2 * v32) | (4 * v32)) ^ v28)))(v34);
}

uint64_t sub_1B02B4EA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, int a15, int a16)
{
  a14 = &STACK[0xFBD18CA08459188];
  a16 = 1989 - 460628867 * ((&a14 - 174720130 - 2 * ((unint64_t)&a14 & 0xF595FB7E)) ^ 0xB9037903);
  uint64_t v19 = (*(uint64_t (**)(unint64_t **))(v17 + 19064))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((29 * (a15 == v16)) ^ v18)))(v19);
}

uint64_t sub_1B02B4F38(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v18 = a1 ^ (v13 + a6 - 873 - 672);
  unsigned int v19 = (a7 ^ v13)
      + v7
      + ((v8 ^ v13) & v18 | (v8 ^ 0x8BB5F891) & (v9 ^ v13))
      + *(_DWORD *)(a3 + 4 * (v10 + v14))
      + (*(_DWORD *)(v15 + 4 * (*(unsigned char *)(a2 + v10 + v14) - 118)) ^ v11);
  unsigned int v20 = (v19 + v13 - (v16 & (2 * v19))) ^ v13;
  unsigned int v21 = ((v20 << (*(unsigned char *)(a4 + v10 + v14) - 8)) | (v20 >> (8 - *(unsigned char *)(a4 + v10 + v14)))) + v18;
  return (*(uint64_t (**)(void))(v12 + 8 * ((218 * (v10 + 1 == v17 + 32)) ^ a6)))(v21 + v13 - (v16 & (2 * v21)));
}

uint64_t sub_1B02B500C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((1897 * (v6 == ((a5 - 884) ^ (v7 + 17)))) ^ (a5 - 830))))();
}

uint64_t sub_1B02B503C(uint64_t a1)
{
  unsigned int v7 = v2 - 32;
  uint64_t v8 = v5 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 == 32) * v4) ^ (v1 + 234))))();
}

uint64_t sub_1B02B5048(uint64_t a1, uint64_t a2, uint64_t a3, int a4, unsigned int a5)
{
  int v12 = v9 + 4;
  unsigned int v13 = *(_DWORD *)(v8 + ((v12 + a4) & 0xFFFFFFFC));
  *(unsigned char *)(v7 + (v12 + a4)) = v13 ^ 0xBE;
  *(unsigned char *)(v7 + (v12 + a4 + 1)) = ((v6 - 90) & 0xF5 ^ BYTE1(v13) ^ 0x82)
                                                + (~(v13 >> 7) | 0x5F)
                                                - 47;
  *(unsigned char *)(v7 + (v12 + a4 + 2)) = (BYTE2(v13) ^ 0x4A)
                                                - 2 * ((BYTE2(v13) ^ 0x4A) & 0x55 ^ BYTE2(v13) & 5)
                                                - 48;
  *(unsigned char *)(v7 + (v12 + a4 + 3)) = (HIBYTE(v13) ^ v10)
                                                - 2 * ((HIBYTE(v13) ^ v10) & 0x58 ^ HIBYTE(v13) & 8)
                                                - 48;
  unsigned int v14 = *v5 - 1014983360;
  BOOL v15 = v14 < a5;
  BOOL v16 = v12 - 27080934 < v14;
  if (v12 - 27080934 < a5 != v15) {
    BOOL v16 = v15;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((1128 * v16) ^ v6)))();
}

uint64_t sub_1B02B5050(_DWORD *a1)
{
  unsigned int v1 = 3804331 * ((2 * (a1 & 0x520CC9FF) - a1 - 1376569856) ^ 0xD32613F6);
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + (int)((a1[1] - v1) ^ 0x437))
                              + 8
                              * (int)(((((*a1 + v1) ^ 0x718B2764) - 1 < 0x63)
                                     * ((((a1[1] - v1 - 460605233) & 0x1B7447AA) + 571) ^ 0x71E)) ^ (a1[1] - v1))
                              - 12))();
}

uint64_t sub_1B02B50FC@<X0>(_OWORD *a1@<X8>)
{
  int v7 = 103 * (v4 ^ 0x75C);
  uint64_t v8 = v1 + v5 + (v7 - 1450);
  *(_OWORD *)(v2 + v8) = *a1;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v6 + 8 * ((112 * (((v3 + 1) & 0x1FFFFFFF0) != 16)) ^ v7)))(((v3 + 1) & 0x1FFFFFFF0) - 32, v8 + 16);
}

uint64_t sub_1B02B516C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + v4 + 282) ^ (32 * (v1 > v0 + 623)))))();
}

uint64_t sub_1B02B5198(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  int v11 = *(unsigned __int8 *)(v8 + v9 - 0x5E7918553A24718FLL) - *(unsigned __int8 *)(v7 + v9 - 0x5E7918553A24718FLL);
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((389
                                              * (((v11 << (a5 + ((v6 - 95) & 0xF5) - 57)) & 0xF7EFDC9E) + (v11 ^ v5) == v5)) ^ v6)))(4294925278);
}

uint64_t sub_1B02B5214(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,int a40,char a41)
{
  *(&a41 + v42) = *(unsigned char *)(v44 + (v41 + a3))
                - (a6 & (2 * *(unsigned char *)(v44 + (v41 + a3))))
                - 48;
  return (*(uint64_t (**)(void))(v45 + 8 * (((v42 + 1 != ((v43 + a8) & v46) + 34) * a2) | v43)))();
}

uint64_t sub_1B02B5264@<X0>(uint64_t a1@<X1>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v3 + a1) = a2;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((v5 + 15) ^ ((unint64_t)(v3 + 1 + a1) < 0x38)) & 1) * v4) ^ ((v5 - 241) | 0x100))))();
}

uint64_t sub_1B02B52A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v42 = a9 + 1;
  *(unsigned char *)(a7 + (a1 + v42 + 820)) = *(unsigned char *)(a39 + a4 - 1882164503);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * ((37 * (v42 + v40 < ((v39 - 1305313348) & 0x4DCD7DE3 ^ 0x63u))) ^ v39)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_1B02B52A8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((123 * (a1 + 1 == v3 + 24)) ^ v1)))();
}

uint64_t sub_1B02B5368(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * (int)((((v14 ^ (a6 + 387)) + 1819645997 + ((v14 + 2077604202) & 0xCDEF73FD))
                                     * ((unint64_t)(a14 + a2 - a1) > 0xF)) ^ v14)))();
}

uint64_t sub_1B02B53C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7)
{
  *(_OWORD *)(a7 + (v9 + v10)) = *(_OWORD *)(a4 + v10);
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 != v10) * a5) ^ v7)))();
}

uint64_t sub_1B02B53F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v58 = 235795823 * ((((v57 - 192) | 0xE1608E95) + (~(v57 - 192) | 0x1E9F716A)) ^ 0x75CDC7CD);
  *(_DWORD *)(v57 - 156) = v56 - v58 + 576;
  *(_DWORD *)(v57 - 192) = v58 ^ 0x1474BF48;
  *(void *)(v57 - 184) = 0x2C2F364FA24C5109;
  *(void *)(v57 - 176) = a54;
  *(void *)(v57 - 168) = a55;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v55 + 8 * (v56 ^ 0xB24)))(v57 - 192);
  BOOL v60 = *(_DWORD *)(v57 - 160) == v56 + 1904944468;
  return (*(uint64_t (**)(uint64_t))(v55 + 8 * ((8 * v60) | (32 * v60) | v56)))(v59);
}

uint64_t sub_1B02B54DC()
{
  unsigned int v3 = v1 - ((((183 * (v2 ^ 0x3C8) - 1704464283) & 0x65980FEF) + 2 * v1 + 2010622667) & 0x91004998) - 2073297608;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((22
                                * (((2 * v3) & 0x7BF7FC2E ^ 0x11004808) + (v3 ^ 0xF57BDADB) - 142645776 != 897278983)) ^ v2)))();
}

uint64_t sub_1B02B558C@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X7>, int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned char *a15)
{
  uint64_t v17 = *(unsigned char **)(a3 + 96);
  v17[1167] = a15[19];
  v17[1166] = a15[18];
  v17[1165] = a15[17];
  v17[1164] = a15[16];
  v17[1163] = a15[15];
  v17[1162] = a15[14];
  v17[1161] = a15[13];
  v17[1160] = a15[12];
  v17[1159] = a15[11];
  v17[1158] = a15[10];
  v17[1157] = a15[9];
  v17[1156] = a15[8];
  v17[1155] = a15[7];
  v17[1154] = a15[6];
  v17[1153] = a15[5];
  v17[1152] = a15[4];
  v17[1151] = a15[3];
  v17[1150] = a15[2];
  v17[1149] = a15[1];
  v17[1148] = *a15;
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (int)(((((((a4 - 1790364382) & 0x6AB6CB4D) - 307) | 0x1C0) ^ (v16 - 475) ^ (((a4 - 1790364382) & 0x6AB6CB4D) - 5817702) & 0x977BFDFF)
                                                   * (*(_DWORD *)(a3 + 72) == a1)) ^ (a4 - 1790364382) & 0x6AB6CB4D)))(a2);
}

uint64_t sub_1B02B56C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60)
{
  unint64_t v61 = STACK[0x338];
  STACK[0x318] = STACK[0x338];
  STACK[0x480] = 0;
  LODWORD(STACK[0x538]) = 1400183651;
  STACK[0x468] = 0;
  LODWORD(STACK[0x42C]) = 1400183651;
  STACK[0x530] = 0;
  return (*(uint64_t (**)(void))(v60
                              + 8 * (int)((((((a60 - 543) | 0x104) ^ 0xFFFFFF10) + a60 - 283) * (v61 == 0)) | a60)))();
}

uint64_t sub_1B02B572C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unint64_t *a9, unint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v74 = *(unsigned int *)STACK[0x228];
  uint64_t v75 = (*(_DWORD *)(STACK[0x228] + 52) - 813313535);
  uint64_t v76 = *(uint64_t (**)(uint64_t, void, void, uint64_t, unint64_t *, uint64_t, uint64_t, unint64_t *))(v70 + 8 * (v71 ^ 0xBCF));
  a9 = &STACK[0x550];
  a10 = &STACK[0x52C];
  uint64_t v77 = v76(v74, (v68 + v65 + 2), a44 ^ 0x8E2E16C8, v75, &STACK[0x1870], v66, v67, &STACK[0x1858]);
  unint64_t v79 = STACK[0x2F0];
  int v80 = (v77 ^ ((v71 ^ 0x178) + 2146941562)) - 714080271 + ((2 * v77) & 0xFFEF7BFE);
  if (v80 == 1701297651) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v70
  }
                                                       + 8
                                                       * ((243
                                                         * (LODWORD(STACK[0x2D8]) - 119238241 < (((v79 ^ 0xD7)
                                                                                                - 615) ^ 0xE8))) ^ ((int)v79 - 530))))(v77, v78);
  if (v80 != 1432862192)
  {
    int v82 = 3804331 * ((v73 - 2047617830 - 2 * ((v73 - 192) & 0x85F3D59A)) ^ 0xFB26F06C);
    LODWORD(STACK[0x2E0]) = v80;
    *(_DWORD *)(v73 - 192) = v80 - v82 - ((2 * v80 + 1429242912) & 0xE3164EC8) + 472082804;
    *(_DWORD *)(v73 - 188) = v82 + v79 + 299;
    *(void *)(v73 - 184) = a38;
    (*(void (**)(uint64_t))(v70 + 8 * ((int)v79 + 1475)))(v73 - 192);
    STACK[0x260] = v72;
    uint64_t v81 = (char *)&a9 + v72 - 0x9872DDC1BE05FF8;
    STACK[0x2C0] = (unint64_t)(v81 + 2048);
    STACK[0x2C8] = (unint64_t)(v81 + 2176);
    STACK[0x2E8] = (unint64_t)v81;
    STACK[0x2D0] = (unint64_t)(v81 + 2304);
    JUMPOUT(0x1B02C2BECLL);
  }
  int v84 = (v79 + 1988889458) & 0x8973F3AB;
  int v85 = v79 - 334;
  (*(void (**)(void, uint64_t, uint64_t))(v70 + 8 * (int)(v79 ^ 0xABC)))(*a65, v66, v67);
  STACK[0x500] = 0;
  LODWORD(STACK[0x508]) = 0;
  unint64_t v86 = STACK[0x550];
  unsigned int v87 = a44 & 0x7FFFFFFF ^ 0xB3C1E91B;
  int v88 = *(_DWORD *)(STACK[0x228] + 52) + 225729748;
  unsigned int v89 = (LODWORD(STACK[0x52C]) ^ 0xA8F33F77) + 2133838224 + ((2 * LODWORD(STACK[0x52C])) & 0x51E67EEE);
  int v90 = 535753261 * (((((v73 - 192) | 0xC12490CE) ^ 0xFFFFFFFE) - (~(v73 - 192) | 0x3EDB6F31)) ^ 0x342F611E);
  *(_DWORD *)(v73 - 176) = STACK[0x2F0] - v90 - 844;
  *(_DWORD *)(v73 - 192) = v88 ^ v90;
  *(_DWORD *)(v73 - 188) = v89 ^ v90;
  *(_DWORD *)(v73 - 144) = v87 - v90 + ((v84 ^ 0x7BDFFD05) & v69 ^ 0x185C2D80) - 95488;
  *(void *)(v73 - 168) = a57;
  *(void *)(v73 - 152) = v86;
  *(void *)(v73 - 184) = &STACK[0x1858];
  uint64_t v91 = (*(uint64_t (**)(uint64_t))(v70 + 8 * (int)(STACK[0x2F0] ^ 0xAF8)))(v73 - 192);
  int v92 = *(_DWORD *)(v73 - 160);
  LODWORD(STACK[0x374]) = v92;
  return (*(uint64_t (**)(uint64_t))(v70 + 8 * ((87 * (v92 == 1904944996)) ^ v85)))(v91);
}

uint64_t sub_1B02B57E0()
{
  return 4294925278;
}

uint64_t sub_1B02B57E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((a8 + a5 < (a6 ^ 0xFFFFFF3B)) * (((a6 + 753966228) & 0xD30F6AF7) - 2119)) ^ a6)))();
}

void sub_1B02B5830()
{
}

uint64_t sub_1B02B58F0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1446 * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02B5918@<X0>(unsigned int a1@<W0>, int a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, int a7@<W6>, int a8@<W8>)
{
  *(unsigned char *)(a5 + (a8 + v10)) = *(unsigned char *)(v12 + (v8 + a3))
                                            - (a6 & (2 * *(unsigned char *)(v12 + (v8 + a3))))
                                            - 48;
  unsigned int v13 = a2 + v8 + 55;
  int v14 = (a4 < a1) ^ (v13 < a1);
  BOOL v15 = v13 < a4;
  if (v14) {
    BOOL v15 = a4 < a1;
  }
  return (*(uint64_t (**)(void))(v11 + 8 * ((v15 * a7) ^ v9)))();
}

uint64_t sub_1B02B598C@<X0>(int a1@<W8>)
{
  uint64_t v8 = v2 - 1;
  *(unsigned char *)(v5 + v8) = (v4 + v1 + 1) * ((v1 + 120) ^ v3);
  return (*(uint64_t (**)(void))(v7 + 8 * (((v8 == 0) * v6) ^ a1)))();
}

uint64_t sub_1B02B5994(_DWORD *a1, uint64_t a2)
{
  BOOL v2 = (*a1 + *(_DWORD *)(a2 + 4) - 1470807018) > 0xC8;
  return (*(uint64_t (**)(void))(qword_1F08D39C8 - 12 + 8 * (((2 * v2) | (32 * v2)) ^ 0x403u)))();
}

uint64_t sub_1B02B59DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((((unint64_t)(v2 - a1) < 0x20) ^ v1 ^ 0x9D) & 1)
                                * (v1 ^ 0x737)) ^ v1)))();
}

uint64_t sub_1B02B5A18(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8
                                   * ((82 * (*(_DWORD *)(a8 + 72) != a4 + v10 + v9 + 150 - 474)) ^ (v10 + v9 - 37))))();
}

uint64_t sub_1B02B5A5C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)((((v3 & 0x18) == ((16 * a3) ^ 0x8360) - 2000)
                                     * ((a3 + 422913324) & 0xE6CADABF ^ 0x829)) ^ a3)))();
}

uint64_t sub_1B02B5AAC()
{
  return 4294925278;
}

uint64_t sub_1B02B5AB8@<X0>(uint64_t a1@<X2>, int a2@<W6>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + a3 + a1) = -48;
  return (*(uint64_t (**)(void))(v21
                              + 8
                              * (int)((((unint64_t)(a3 + 1 + a1) < 0x38)
                                     * (((v20 ^ 0x6E1) + 1786507841) & 0xBFDFFFFF ^ (a2 + 287))) ^ v20 ^ 0x6E1)))();
}

uint64_t sub_1B02B5B10@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  int v4 = (a1 + 1806) | 0x24;
  BOOL v5 = (((v4 + a3) ^ a2) & 0x80000000) == v4 - 2157;
  return (*(uint64_t (**)(void))(v3 + 8 * (((8 * v5) | (16 * v5)) ^ v4)))();
}

uint64_t sub_1B02B5B68()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((*(_DWORD *)(*v0 + 4 * v2) == ((v1 - 1) ^ 0xC15A151A)) * (170 * (v1 ^ 0x489) - 421)) ^ v1)))();
}

uint64_t sub_1B02B5BB8()
{
  *(void *)(v3 - 120) = v2;
  *(void *)(v3 - 112) = v5;
  *(_DWORD *)(v3 - 104) = (v1 - 586) ^ (535753261 * (((v3 - 120) & 0x6366F9C8 | ~((v3 - 120) | 0x6366F9C8)) ^ 0x966D0818));
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v1 ^ 0xE9F)))(v3 - 120);
}

uint64_t sub_1B02B5C58@<X0>(int a1@<W8>)
{
  BOOL v4 = v2 + v1 + 403767733 > v2 + v1 + 403767167 + ((a1 + 640) ^ 0x4F2u) + 786;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 | (4 * v4)) ^ (a1 + 640))))();
}

uint64_t sub_1B02B5CB0@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  *(unsigned char *)(v5 + (v4 + v6)) = *(unsigned char *)(v9 + (v4 + v6));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((v4 + ((a4 + a2) & a3) - 902 == v7) * ((((a4 + a2) & a3 ^ v8) + 17) ^ a1)) ^ (((a4 + a2) & a3) - 101))))();
}

uint64_t sub_1B02B5D00@<X0>(int a1@<W1>, int a2@<W4>, char a3@<W5>, char a4@<W7>, uint64_t a5@<X8>)
{
  int v15 = (v8 + 511) | a1;
  uint64_t v16 = (v9 + v11);
  *(unsigned char *)(v14 + v16 + v13) = *(unsigned char *)(v10 + v16) ^ *(unsigned char *)(v5 + ((v15 ^ a2) & v16)) ^ *(unsigned char *)(((v15 ^ a2) & v16) + a5 + 1) ^ *(unsigned char *)(v6 + ((v15 ^ a2) & v16)) ^ (((v15 ^ a2) & v16) * a4) ^ a3;
  return (*(uint64_t (**)(void))(v12 + 8 * (((v9 - 1 != v7) * ((v15 - 899) ^ 0x1C)) ^ (v15 + 1252))))();
}

void sub_1B02B5D74()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1B02B5D8CLL);
}

uint64_t sub_1B02B5E3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  return (*(uint64_t (**)(void))(v12 + 8 * (((((v10 - 1426) | 0x444) ^ 0xB63) * (a10 < v11)) ^ v10)))();
}

uint64_t sub_1B02B5EC0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  *(void *)(a4 - 7 + v8 + v7 + a2 - a3 + 41 * (a1 ^ 0x26Eu)) = *(void *)(v5
                                                                           - 7
                                                                           + v8
                                                                           + v7
                                                                           + a2
                                                                           - a3
                                                                           + 41 * (a1 ^ 0x26Eu));
  return (*(uint64_t (**)(void))(v4 + 8 * ((244 * (a3 - (v6 & 0xFFFFFFF8) == -8)) ^ a1)))();
}

uint64_t sub_1B02B5F20(int a1)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((v2 & (2 * (*(unsigned __int8 *)(v3 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v3 + 4) - 247) ^ v1) == ((a1 - 219) ^ v4))
                                * ((a1 ^ 0x387) + 2478)) ^ a1)))();
}

uint64_t sub_1B02B5F68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, int a17, unsigned int a18)
{
  unsigned int v19 = 1225351577 * ((2 * (&a15 & 0x4A650948) - &a15 + 899348149) ^ 0x16002EA3);
  a17 = v19 ^ 0x7384C45F;
  a18 = v19 + 1208085971;
  LODWORD(a15) = v19 + 1850232741;
  HIDWORD(a15) = v19 ^ 0x215;
  (*(void (**)(unint64_t **))(v18 + 18968))(&a15);
  a17 = 1989 - 460628867 * (&a15 ^ 0x4C96827D);
  a15 = &STACK[0xFBD18CA08459180];
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v18 + 19064))(&a15);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((855 * (a16 == 1904944996)) ^ 0x4D8u)))(v20);
}

uint64_t sub_1B02B6080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  *(void *)(*(void *)(a17 + 96) + 504) = v19 + 1;
  *(_DWORD *)(*(void *)(a17 + 96) + 496) = a19 - 1;
  int v22 = 1178560073 * ((-2033793041 - ((v21 - 152) | 0x86C6C7EF) + ((v21 - 152) | 0x79393810)) ^ 0xC3AD4072);
  *(_DWORD *)(v21 - 136) = -1882357464 - v22;
  *(void *)(v21 - 144) = v21 + 0x2B41EA7AD2F8E775;
  *(_DWORD *)(v21 - 152) = -17177217 - v22;
  uint64_t v23 = (*(uint64_t (**)(uint64_t))(v20 + 18992))(v21 - 152);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((4
                                              * (a19
                                               + 1966029742
                                               + (*(_DWORD *)(v21 - 184) & 0x3F ^ 0x375BA8BF)
                                               + ((2 * *(_DWORD *)(v21 - 184)) & 0x5Cu) > 0xFFFFFFBF)) ^ 0x108u)))(v23);
}

uint64_t sub_1B02B6284(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8)
{
  int v13 = v12 + v8 + 1581;
  unsigned int v14 = v9 + ((v8 - a6 + 507) ^ 0x345A2A00);
  BOOL v15 = v11 + 1290785214 < v14;
  if (v11 + 1290785214 < a8 != v14 < a8) {
    BOOL v15 = v14 < a8;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * ((19 * v15) ^ v13)))();
}

uint64_t sub_1B02B62F0(uint64_t a1)
{
  int v6 = *(unsigned __int8 *)(v2 + a1 - 0x2A8E1CD60C1EF4A8 + ((v1 + 1653658372) & 0x9D6F2BCE))
     - (*(unsigned __int8 *)(v3 + a1 - 0x2A8E1CD60C1EF4A8 + ((v1 + 1653658372) & 0x9D6F2BCE)) ^ 0xD0);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1302 * (((2 * v6) & 0xBBCFFFBC) + (v6 ^ v5) == v5)) ^ v1)))();
}

void sub_1B02B6370()
{
}

uint64_t sub_1B02B64BC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((**(void **)(v2 + 8 * (a1 - 135)) != 0) | a1)))();
}

uint64_t sub_1B02B64E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1990 * (v0 - 1017008128 < ((v2 - 871835494) & 0x33F727EDu) - 903)) ^ v2)))();
}

uint64_t sub_1B02B652C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((53 * (v1 ^ 0x8BC)) ^ (v1 - 655652014) & 0x27146F85 ^ 0x1D) * (v0 != v2 - 377338041)) ^ v1)))();
}

void sub_1B02B6588()
{
  unint64_t v4 = STACK[0x4E0] + 0x2B41EA7AD2F8E8F1;
  STACK[0x4A0] = v4;
  int v5 = 1178560073 * ((~((v3 - 192) | 0xC15335E9) + ((v3 - 192) & 0xC15335E9)) ^ 0x8438B274);
  *(_DWORD *)(v3 - 192) = -17177217 - v5;
  *(_DWORD *)(v3 - 176) = -1882357529 - v5 + v2 + 46;
  *(void *)(v3 - 184) = v4;
  (*(void (**)(uint64_t))(v1 + 8 * ((int)v2 + 2355)))(v3 - 192);
  STACK[0x440] = *(void *)(v1 + 8 * v2);
  STACK[0x2D8] = v0;
  JUMPOUT(0x1B029B6B8);
}

uint64_t sub_1B02B6664()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((*(void *)(v1 + 16) == 0x5FB6299213240EABLL) * ((v0 + 677) ^ (v0 + 622))) ^ v0)))();
}

uint64_t sub_1B02B66A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26)
{
  *uint64_t v26 = 0;
  return sub_1B02C4864(a1, a2, 1972111131, 2322856164, 1369176606, a26);
}

void sub_1B02B66A8()
{
  uint64_t v1 = (unsigned int *)*v7;
  if ((*v7 & 3) == ((v6 + 1252355672) & 0x3C5872FF ^ 0x2E6))
  {
    uint64_t v2 = (uint64_t)*(&off_1F08D3590 + (v6 ^ 0x790221C3));
    uint64_t v4 = *(void *)(v2 - 4);
    uint64_t v3 = (void *)(v2 - 4);
    if (!v4)
    {
      void *v3 = v1;
      *(_DWORD *)*(&off_1F08D3590 + v6 - 2030182660) = 255;
      *v1 |= ~v1[*v1 & ((v6 - 2030181347) ^ 0x595)] << 16;
      v1[4] |= ~v1[v1[4] & 0x3ELL] << 16;
      v1[8] |= ~v1[v1[8] & 0x3ELL] << 16;
      v1[12] |= ~v1[v1[12] & 0x3ELL] << 16;
      v1[16] |= ~v1[v1[16] & 0x3ELL] << 16;
      v1[20] |= ~v1[v1[20] & 0x3ELL] << 16;
      v1[24] |= ~v1[v1[24] & 0x3ELL] << 16;
      v1[28] |= ~v1[v1[28] & 0x3ELL] << 16;
      v1[32] |= ~v1[v1[32] & 0x3ELL] << 16;
      v1[36] |= ~v1[v1[36] & 0x3ELL] << 16;
      v1[40] |= ~v1[v1[40] & 0x3ELL] << 16;
      v1[44] |= ~v1[v1[44] & 0x3ELL] << 16;
      v1[48] |= ~v1[v1[48] & 0x3ELL] << 16;
      v1[52] |= ~v1[v1[52] & 0x3ELL] << 16;
      v1[56] |= ~v1[v1[56] & 0x3ELL] << 16;
      v1[60] |= ~v1[v1[60] & 0x3ELL] << 16;
      (*(void (**)(uint64_t *, void, uint64_t))(v0 + 8 * ((v6 - 2030182174) ^ 0xB29)))(&v8, 0, 1024);
      __asm { BRAA            X12, X17 }
    }
  }
  _DWORD *v5 = -1904968485;
}

void sub_1B02B69C4()
{
  LODWORD(STACK[0x374]) = v0 + 125;
  JUMPOUT(0x1B02A8E84);
}

void sub_1B02B69DC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * (((a1 | 0x8AD08517) - (a1 & 0x8AD08517)) ^ 0x541638CC));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02B6AA4@<X0>(void *a1@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  uint64_t v7 = (a2 - 1094);
  *(void *)(*a1 - 0x460F4FD2677B792) = v6 + v5 + v7 - 353;
  return (*(uint64_t (**)(void))(a3
                              + 8
                              * (int)(((*v3 == ((a2 + 1991069839) & 0x8952ABF3 ^ (v4 - 526)))
                                     * (((a2 + 59640016) & 0xFC71F3B2) + 290)) ^ v7)))();
}

uint64_t sub_1B02B6B3C@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X8>)
{
  uint64_t v8 = (a1 - 1068881848);
  *(unsigned char *)(a3 + v8) ^= *(unsigned char *)(v6 + (v8 & 0xF)) ^ *(unsigned char *)((v8 & 0xF) + v4 + 2) ^ *(unsigned char *)((v8 & 0xF) + v5 + 4) ^ (119 * (v8 & 0xF));
  return (*(uint64_t (**)(void))(v7 + 8 * ((234 * (a1 - 1 == v3)) ^ (a2 - 2011))))();
}

uint64_t sub_1B02B6BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24)
{
  unsigned int v26 = (a24 ^ a8) - (((a24 ^ a8) << ((v25 + 120) ^ 0xE7)) & 0x9398E742) - 909347935;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t))(v24
                                                                                        + 8
                                                                                        * ((111
                                                                                          * (((2 * v26) & 0xF9BF6DFE ^ 0x91986542)
                                                                                           + (v26 ^ 0xB513C55E)
                                                                                           - 134481030 != 1960555129)) ^ (v25 + 193))))(a1, a2, (v25 + 1144) ^ 0x664u, a4, a5, 2334411268);
}

uint64_t sub_1B02B6C54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7
                                           + 8
                                           * (int)(((((v9 + 453594653) | 0xA68111) ^ (a3 + 407) ^ (v9 + 1468663186) & 0xA875FEB7)
                                                  * (v8 == a7)) ^ v9)))(0);
}

uint64_t sub_1B02B6CB0@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  unsigned int v14 = (v7 + 1416411169) & 0xAB9347DE;
  BOOL v15 = v13 > v6;
  uint64_t v16 = 4 * (v11 + 1 + v8);
  int v17 = v2 + 1499338142 + (*(_DWORD *)(*(void *)(a2 - 0x6155FFFFEB445CBDLL) + v16) ^ 0x3EA5EE6C);
  *(_DWORD *)(*(void *)(a1 - 0x6155FFFFEB445CBDLL) + v16) = v17 + v9 - (((v14 - 333) ^ (v12 + 841)) & (2 * v17));
  int v18 = v4 + v11 + 1354;
  int v19 = v15 ^ (v18 < v3);
  BOOL v20 = v18 < v5;
  if (!v19) {
    BOOL v15 = v20;
  }
  return (*(uint64_t (**)(void))(v10 + 8 * (int)((414 * v15) ^ v14)))();
}

uint64_t sub_1B02B6DBC@<X0>(char a1@<W1>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  *(unsigned char *)(v4 + v6 + a2 - 1) = a1;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v4 + v6 < (a3 ^ 6uLL)) * v5) ^ v3)))();
}

uint64_t sub_1B02B6DEC@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((53 * (a1 ^ 0x298)) ^ 0xFFFFFDFA) + (a1 ^ 0x5A3))
                                     * (v3 - v4 - 387203444 == (a2 ^ 0x24E6FFC0) + v2)) ^ a1)))();
}

uint64_t sub_1B02B6E58@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((178 * (a1 + 25 >= a8 - 1271 + (a8 ^ 0xB2u) - 1463)) ^ a8)))();
}

uint64_t sub_1B02B6E98()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((int)((v3 ^ 0xEF9E7FFB) + 2113260280 + (v0 & 0xDF3CFFF6) - 1838435060) > v1 - 1499)
                                * ((v1 ^ 0x567) + 830)) ^ v1)))();
}

uint64_t sub_1B02B6F2C(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v9 = v3 == (((v4 - 100) | 0x44) ^ (v7 - 329)) && v6 != a3;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v9 * ((v4 - 32) ^ 0x447)) ^ v4)))();
}

uint64_t sub_1B02B6F78@<X0>(uint64_t a1@<X8>)
{
  int v5 = (v3 - 717) | 0x8E9;
  unsigned int v9 = (v3 + 685) ^ (535753261 * ((&v7 & 0xCCFC29CA | ~(&v7 | 0xCCFC29CA)) ^ 0x39F7D81A));
  uint64_t v7 = v1;
  uint64_t v8 = v2;
  uint64_t result = (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0xB96)))(&v7);
  _DWORD *v4 = v5 - *v4 - 1518850245;
  return result;
}

uint64_t sub_1B02B7000()
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x866));
  return v3(v1);
}

uint64_t sub_1B02B7034(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  (*(void (**)(uint64_t, uint64_t))(v20 + 8 * (v22 ^ (v22 + 1778))))(a13, 2965982036);
  uint64_t v23 = (*(uint64_t (**)(void))(v20 + 8 * (v22 ^ 0x758C0E59u)))();
  _DWORD *v21 = v23;
  v21[1] = 1812433253 * (v23 ^ (v23 >> 30)) + 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 8 * (v19 + v22 + 1933)))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19);
}

uint64_t sub_1B02B70D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v7 - a5 - 1409220669) & 0x53FEFFAB ^ 0x5244FF67) * (v6 == v5)) ^ v7)))();
}

void sub_1B02B7124(uint64_t a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 12) + 628203409 * (((a1 | 0x5AF39D7A) - a1 + (a1 & 0xA50C6285)) ^ 0xD87B9149);
  uint64_t v2 = *(void *)a1;
  v4[1] = (460628867 * (v4 ^ 0x4C96827D)) ^ (v1 - 560);
  uint64_t v5 = v2;
  int v3 = (char *)*(&off_1F08D3590 + (v1 ^ 0x4A9)) - 12;
  (*(void (**)(_DWORD *))&v3[8 * v1 + 10360])(v4);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02B7230@<X0>(int a1@<W8>)
{
  int v4 = (unsigned char *)STACK[0x400];
  BOOL v5 = (v1 - 1582367015) < 0xF5241A3C;
  v3[12] = (((a1 ^ 0xC3) + 9) ^ 0x4F) - ((2 * (((a1 ^ 0xC3) + 9) ^ 0x4F)) & 0xA0) - 48;
  v3[13] = -48;
  v3[14] = -48;
  v3[15] = -47;
  v4[16] ^= *v3 ^ 0xD0;
  v4[17] ^= v3[1] ^ 0xD0;
  v4[18] ^= v3[2] ^ 0xD0;
  v4[19] ^= v3[3] ^ 0xD0;
  v4[20] ^= v3[4] ^ 0xD0;
  v4[21] ^= v3[5] ^ 0xD0;
  v4[22] ^= v3[6] ^ 0xD0;
  v4[23] ^= v3[7] ^ 0xD0;
  v4[24] ^= v3[8] ^ 0xD0;
  v4[25] ^= v3[9] ^ 0xD0;
  v4[26] ^= v3[10] ^ 0xD0;
  v4[27] ^= v3[11] ^ 0xD0;
  v4[28] ^= v3[12] ^ 0xD0;
  v4[29] ^= v3[13] ^ 0xD0;
  v4[30] ^= v3[14] ^ 0xD0;
  v4[31] ^= v3[15] ^ 0xD0;
  if ((v1 - 1582367015) >= 0xF5241A3C) {
    BOOL v5 = (v1 - 1582367015) > 0xF5241A5C;
  }
  return (*(uint64_t (**)(void))(v2 + 8 * ((14 * !v5) ^ (a1 + 720))))();
}

void sub_1B02B7474(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x7DA9E0EFFB1E3622) - 2071310152;
  unsigned int v3 = *(_DWORD *)a1 + v1 - 640603028;
  int v4 = (v3 < 0x28045D) ^ (v2 < 0x28045D);
  BOOL v5 = v2 < v3;
  if (v4) {
    BOOL v6 = v3 < 0x28045D;
  }
  else {
    BOOL v6 = v5;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02B7560@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  *(_DWORD *)(result + 4) = (((a2 - 664) | 1) ^ 0x920103F3) + v2;
  return result;
}

uint64_t sub_1B02B7580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(_DWORD *)(v23 - 120) = v20
                         + 1225351577 * ((((v23 - 144) | 0x5D966E65) - ((v23 - 144) & 0x5D966E65)) ^ 0x7E0CB673)
                         + 1079;
  *(void *)(v23 - 112) = v21;
  *(void *)(v23 - 104) = a15;
  *(void *)(v23 - 136) = v18;
  *(void *)(v23 - 128) = v22;
  *(void *)(v23 - 144) = v18;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v20 ^ 0x8ADu)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * ((255
                                              * ((((a18 - 1334526196) < 0x7FFFFFFF) ^ ((v20 ^ 0x4C) + 41)) & 1)) ^ ((v20 ^ 0x97E) - 1822))))(v24);
}

uint64_t sub_1B02B7640(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((((a1 + 192) ^ 0xFFFFFA1D) + a1 - 1) * (v1 == v2)) ^ (a1 - 659))))();
}

void sub_1B02B7674()
{
  unsigned int v5 = v3 - ((2 * v3 + 2010624216) & 0x9E0AA314) + 183577078;
  int v6 = (v5 >> (((v4 - 86) & 0xCF) + 11)) ^ 0x4F;
  unsigned char *v8 = v6 - ((2 * v6) & 0xA0) - 48;
  v8[1] = (BYTE2(v5) ^ 5) - ((v5 >> 15) & 0xA0) - 48;
  _DWORD v8[2] = (BYTE1(v5) ^ 0x51) - ((2 * (BYTE1(v5) ^ 0x51)) & 0xA0) - 48;
  v8[3] = (v3 - ((2 * v3 - 40) & 0x14) - 10) ^ 0x5A;
  unint64_t v7 = v2 - ((2 * v2) & 0xD26969422EEDA70ALL) + 0x6934B4A11776D385;
  v8[4] = (HIBYTE(v7) ^ 0x69) - ((2 * (HIBYTE(v7) ^ 0x69)) & 0xA0) - 48;
  v8[5] = (BYTE6(v7) ^ 0x34) - 2 * ((BYTE6(v7) ^ 0x34) & 0x51 ^ BYTE6(v7) & 1) - 48;
  v8[6] = (BYTE5(v7) ^ 0xB4) + (~(2 * (BYTE5(v7) ^ 0xB4)) | 0x5F) - 47;
  v8[7] = (BYTE4(v7) ^ 0xA1) - ((2 * BYTE4(v7)) & 0xA0) - 48;
  _DWORD v8[8] = (((v2 - ((2 * v2) & 0x2EEDA70A) + 393663365) >> 24) ^ 0x17)
        - ((2 * (((v2 - ((2 * v2) & 0x2EEDA70A) + 393663365) >> 24) ^ 0x17)) & 0xA0)
        - 48;
  v8[9] = (BYTE2(v7) ^ 0x76) - ((2 * (BYTE2(v7) ^ 0x76)) & 0xA0) - 48;
  v8[10] = (BYTE1(v7) ^ 0xD3) - ((2 * (BYTE1(v7) ^ 0xD3)) & 0xA0) - 48;
  v8[11] = (v2 - ((2 * v2) & 0xA) - 123) ^ 0x55;
  _DWORD *v0 = *(_DWORD *)(v1 - 0x7DA9E0EFFB1E3616);
}

uint64_t sub_1B02B7828()
{
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((((v0 ^ 0x3D0) != 1968) * ((v0 ^ 0x5244FB56) - 1380249396)) ^ v0 ^ 0x3D0)))(2258355718);
}

uint64_t sub_1B02B78E0@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((((v2 == 0) ^ ((a1 & 0x37 ^ 0x31) - 19)) & 1)
                                     * ((1121 * (a1 & 0xA31AE737 ^ 0x531)) ^ 0x8B7)) ^ a1 & 0xA31AE737)))();
}

uint64_t sub_1B02B792C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((((*(_DWORD *)(v7 + 48 * v8 + 36) + 110873831) < 0x80000003)
                                * (a5 + ((v6 + 469) ^ 0x5244FC34) + 1623)) ^ v6)))();
}

uint64_t sub_1B02B7994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,char a22)
{
  int v28 = ((v27 - 1386298682 - 2 * ((v27 - 144) & 0xAD5EC356)) ^ 0x4DC2A17D) * v23;
  *(_DWORD *)(v27 - 144) = v28 ^ 0x2CAC31D7;
  *(void *)(v27 - 136) = &a22 + v22;
  *(_DWORD *)(v27 - 128) = (v26 + 601) ^ v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v26 + 1338)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((((v25 == 0) ^ v26 ^ 0x51) & 1)
                                              * ((713 * (v26 ^ 0x409)) ^ 0x86B)) ^ (v26 + 977))))(v29);
}

void sub_1B02B7A4C(uint64_t a1@<X8>)
{
  *(_DWORD *)(v4 - 152) = v3;
  *(void *)(v4 - 128) = v1 - 7;
  *(void *)(v4 - 136) = a1 - 7;
  *(_DWORD *)(v4 - 160) = (v2 ^ 0xFFFFFBDE) & v3;
  *(_DWORD *)(v4 - 116) = v2 ^ 0x2D;
  *(void *)(v4 - 168) = v2 ^ 0x11C;
  *(void *)(v4 - 144) = v2 ^ 0x429;
  JUMPOUT(0x1B02B7AE0);
}

void sub_1B02B7BC0()
{
}

void sub_1B02B7C78(uint64_t a1)
{
  *(_DWORD *)(*(void *)(a1 + 24) - 0x486D4A085FE6BE3ELL) = v3;
  _DWORD *v1 = v2;
  JUMPOUT(0x1B02D58C8);
}

void sub_1B02B7C98()
{
}

uint64_t sub_1B02B7E00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((((a19 & 0x5E89FFBB) + a19 + 1586102855 + 81) * (a9 == v22)) ^ (v21 + v20 + 357))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B02B7E50()
{
  int v5 = v3 - 166 + *(unsigned __int8 *)(v2 + 3) - 393;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2457 * ((v1 & (2 * v5)) + (v5 ^ v0) == (v3 ^ 0x32D ^ (v0 - 644)))) ^ v3)))();
}

uint64_t sub_1B02B7EA0()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((1833 * (101 * (v1 ^ 0x462) == 202)) ^ (101 * (v1 ^ 0x462)))))();
}

uint64_t sub_1B02B7F20@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  int v26 = v18 - 304;
  int v27 = ((2 * ((v25 - 144) & 0x2BEDAFC8) - (v25 - 144) + 1410486324) ^ 0x5EE65E1B) * v20;
  *(_DWORD *)(v25 - 120) = v19 - v27 + ((v18 - 304) ^ 0xFD6DCAE6);
  *(_DWORD *)(v25 - 144) = v27 + v18 - 515;
  *(void *)(v25 - 136) = v24;
  *(void *)(v25 - 128) = a1;
  (*(void (**)(uint64_t))(v21 + 8 * (v18 ^ 0xAC6)))(v25 - 144);
  *(void *)(v25 - 128) = a17;
  *(void *)(v25 - 144) = a16;
  *(_DWORD *)(v25 - 136) = v26
                         - 274
                         - 235795823 * ((2 * ((v25 - 144) & 0x3BC4D040) - (v25 - 144) + 1144729532) ^ 0xD09666E5);
  (*(void (**)(uint64_t))(v21 + 8 * (v26 + 1744)))(v25 - 144);
  *(void *)(v25 - 120) = a16;
  *(void *)(v25 - 112) = v24;
  *(_DWORD *)(v25 - 128) = (v26 + 955) ^ (1178560073
                                        * ((((2 * (v25 - 144)) | 0x49807B6A) - (v25 - 144) + 1530905163) ^ 0x1E5445D7));
  *(void *)(v25 - 144) = a18;
  *(void *)(v25 - 136) = a17;
  uint64_t v30 = 8 * (v26 ^ 0xB04);
  (*(void (**)(uint64_t))(v21 + v30))(v25 - 144);
  *(void *)(v25 - 136) = v22;
  *(void *)(v25 - 128) = a17;
  *(_DWORD *)(v25 - 120) = v26
                         + 949
                         + 1225351577 * ((((v25 - 144) | 0xAC089FBB) - ((v25 - 144) & 0xAC089FBB)) ^ 0x8F9247AD);
  *(void *)(v25 - 144) = a18;
  *(void *)(v25 - 112) = a16;
  *(void *)(v25 - 104) = a18;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 + 1755)))(v25 - 144);
  *(void *)(v25 - 120) = a17;
  *(void *)(v25 - 112) = a9;
  *(void *)(v25 - 136) = a18;
  *(void *)(v25 - 128) = a16;
  *(_DWORD *)(v25 - 104) = v26
                         + 1580
                         + 108757529
                         * ((680532522 - ((v25 - 144) | 0x28901A2A) + ((v25 - 144) | 0xD76FE5D5)) ^ 0x37F387FE);
  *(void *)(v25 - 144) = a18;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 + 1762)))(v25 - 144);
  *(_DWORD *)(v25 - 136) = v26
                         - 274
                         - 235795823
                         * (((((v25 - 144) ^ 0x41828210 | 0xA6783DCE) ^ 0xFFFFFFFE)
                           - ((v25 - 144) ^ 0x201809C0 | 0x5987C231)) ^ 0xAC83D76);
  *(void *)(v25 - 144) = a12;
  *(void *)(v25 - 128) = a17;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 ^ 0xB50)))(v25 - 144);
  *(void *)(v25 - 120) = a12;
  *(void *)(v25 - 112) = v24;
  *(_DWORD *)(v25 - 128) = (v26 + 955) ^ (1178560073
                                        * ((((v25 - 144) | 0x9960F274) - ((v25 - 144) & 0x9960F274)) ^ 0x23F48A16));
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = a17;
  (*(void (**)(uint64_t))(v21 + v30))(v25 - 144);
  *(_DWORD *)(v25 - 120) = v26
                         + 949
                         + 1225351577
                         * ((((v25 - 144) | 0x47D19041) - (v25 - 144) + ((v25 - 144) & 0xB82E6FB8)) ^ 0x644B4857);
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = v22;
  *(void *)(v25 - 128) = a17;
  *(void *)(v25 - 112) = a12;
  *(void *)(v25 - 104) = v23;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 + 1755)))(v25 - 144);
  *(void *)(v25 - 128) = a12;
  *(void *)(v25 - 120) = a17;
  *(_DWORD *)(v25 - 104) = v26
                         + 1580
                         + 108757529 * ((((2 * (v25 - 144)) | 0x329BD094) - (v25 - 144) - 424536138) ^ 0xF9D18A61);
  *(void *)(v25 - 144) = v23;
  *(void *)(v25 - 136) = v23;
  *(void *)(v25 - 112) = a10;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 ^ 0xB26)))(v25 - 144);
  *(_DWORD *)(v25 - 128) = v26
                         - 1759421093
                         * ((((v25 - 144) | 0xE121AD27) - (v25 - 144) + ((v25 - 144) & 0x1EDE52D8)) ^ 0x525C1D73)
                         + 1663;
  *(void *)(v25 - 144) = a18;
  *(void *)(v25 - 136) = v23;
  (*(void (**)(uint64_t))(v21 + 8 * (v26 ^ 0xB5B)))(v25 - 144);
  *(void *)(v25 - 144) = v23;
  *(_DWORD *)(v25 - 132) = v26
                         - 628203409 * ((((v25 - 144) | 0x3595A7F1) + (~(v25 - 144) | 0xCA6A580E)) ^ 0xB71DABC3)
                         + 452;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v26 + 1757)))(v25 - 144);
  return (*(uint64_t (**)(uint64_t))(v21
                                            + 8
                                            * (int)(((*(_DWORD *)(v25 - 136) == 1181130268)
                                                   * (((v26 + 2063315793) & 0x85044EE7) + 273)) ^ v26)))(v28);
}

void sub_1B02B83F8()
{
}

uint64_t sub_1B02B8420(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * (((((v1 == a1) ^ (v2 - 112)) & 1) * ((v2 ^ 0x390) - 718)) ^ v2)))();
}

void sub_1B02B846C()
{
}

uint64_t sub_1B02B8474(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a8 + 340) | 0x61) - 667) * (v9 != a4)) ^ a8)))();
}

uint64_t sub_1B02B84A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 112) = (v13 + 850) ^ (535753261
                                        * ((2 * ((v14 - 128) & 0x6D555D0) - (v14 - 128) - 114644437) ^ 0xF3DEA404));
  *(void *)(v14 - 128) = a12;
  *(void *)(v14 - 120) = &STACK[0x6155FFFFEB445CF5];
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0xB73)))(v14 - 128);
  *(void *)(v14 - 120) = a12;
  *(void *)(v14 - 112) = a11;
  *(_DWORD *)(v14 - 128) = v13
                         + 108757529 * ((((v14 - 128) | 0x2946C5F8) - ((v14 - 128) & 0x2946C5F8)) ^ 0xC9DAA7D3)
                         + 988;
  uint64_t v15 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0xAC2)))(v14 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((*(_DWORD *)(v14 - 124) > (v13 + 11206314))
                                              * (21 * (v13 ^ 0x20B) + 853)) ^ v13)))(v15);
}

uint64_t sub_1B02B85C8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2317 * ((*(_DWORD *)(v3 + v1 * (uint64_t)v2 + 40) & 8) == (v0 ^ 0x100) - 645)) ^ (v0 - 518))))();
}

uint64_t sub_1B02B8604(double a1, double a2, double a3, int8x16_t a4, int8x16_t a5, uint64_t a6, int8x16_t *a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  *a7 = vaddq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v12 + a8)), a5), vmvnq_s8(vandq_s8(vaddq_s8(*(int8x16_t *)(v15 + (v12 + a8)), *(int8x16_t *)(v15 + (v12 + a8))), a4)));
  return (*(uint64_t (**)(void))(v14 + 8 * (a12 + v13 + 1383)))();
}

uint64_t sub_1B02B8660(_DWORD *a1)
{
  uint64_t v10 = *MEMORY[0x1E4F143B8];
  unsigned int v2 = 1755732067
     * ((2 * ((a1 ^ 0xFDCA5AD1) & 0x4699B354) - (a1 ^ 0xFDCA5AD1) - 1184478037) ^ 0x9A6AABA1);
  unsigned int v3 = a1[8] - v2;
  int v4 = a1[2] ^ v2;
  unsigned int v9 = v3
     + 628203409 * (((&v9 | 0x99E9B941) + (~&v9 | 0x661646BE)) ^ 0x1B61B573)
     - 1404134225;
  int v5 = (char *)*(&off_1F08D3590 + (int)(v3 - 1172345300)) - 12;
  uint64_t result = (*(uint64_t (**)(unsigned int *))&v5[8 * (v3 - 1172343029)])(&v9);
  if (v4 > 2146526176)
  {
    if (v4 == 2146526177)
    {
      unsigned int v7 = 2;
    }
    else
    {
      if (v4 != 2146526178) {
        goto LABEL_11;
      }
      unsigned int v7 = 1;
    }
LABEL_10:
    uint64_t v8 = *(void *)&v5[8
                      * ((185
                        * ((*(uint64_t (**)(void, uint64_t))&v5[8 * (v3 - 1172343109)])(v3 + 1722438210 + *((_DWORD *)*(&off_1F08D3590 + (int)(v3 - 1172345413)) + 6 * v7 + 3), 2970849626) == 0)) ^ (v3 - 1172343516))];
    __asm { BRAA            X8, X17 }
  }
  if (v4 == -1863228447)
  {
    unsigned int v7 = 3;
    goto LABEL_10;
  }
  if (v4 == 2146526174)
  {
    unsigned int v7 = 0;
    goto LABEL_10;
  }
LABEL_11:
  a1[13] = -1904968488;
  return result;
}

uint64_t sub_1B02B88B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * (((((a12 == v13) ^ (v12 + 98)) & 1) * (((v12 - 328) | 0x482) ^ 0x4AA)) ^ v12)))();
}

uint64_t sub_1B02B8914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45)
{
  LODWORD(STACK[0x3B4]) = 512728021;
  LODWORD(STACK[0x568]) = 128;
  unint64_t v48 = STACK[0x338] + 0x6155FFFFEB445ED5;
  unint64_t v49 = STACK[0x338] + 0x6155FFFFEB445FE5;
  unint64_t v50 = STACK[0x410];
  unint64_t v51 = STACK[0x4E8];
  int v52 = 535753261 * ((((v47 - 192) | 0xEE8CD456) - (v47 - 192) + ((v47 - 192) & 0x11732BA8)) ^ 0xE478DA79);
  *(void *)(v47 - 152) = 0;
  *(void *)(v47 - 144) = 0;
  *(_DWORD *)(v47 - 156) = (v45 + 557) ^ v52;
  *(_DWORD *)(v47 - 176) = 1345371548 - v52;
  *(void *)(v47 - 136) = v49;
  *(void *)(v47 - 128) = a45;
  *(void *)(v47 - 168) = v48;
  *(void *)(v47 - 192) = v50;
  *(void *)(v47 - 184) = v51;
  uint64_t v53 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v45 ^ 0x8A3)))(v47 - 192);
  return (*(uint64_t (**)(uint64_t))(v46
                                            + 8
                                            * (((*(_DWORD *)(v47 - 160) == (((v45 + 291) | 0x424) ^ 0x718B2040))
                                              * ((v45 + 424) ^ 0x187)) ^ v45)))(v53);
}

uint64_t sub_1B02B8A2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22
                                                                                + 8
                                                                                * (((a21 == (v21 ^ 0xCEB84F4))
                                                                                  * ((v21 + 831) ^ 0x7B)) ^ v21)))(a1, a2, a3, a4, 1904944996);
}

void sub_1B02B8A7C()
{
}

uint64_t sub_1B02B8AF0@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  STACK[0x350] = v5 - 1;
  *(unsigned char *)(a1 + v5 - 1) = ((v3 - 105) ^ v4) * (v3 - 88);
  return (*(uint64_t (**)(void))(v6 + 8 * (((STACK[0x350] == 0) * ((a2 ^ v2) - 263)) ^ a2)))();
}

uint64_t sub_1B02B8AF8@<X0>(uint64_t a1@<X8>)
{
  *(void *)(a1 - 7 + v4 - 1877991117 + v3 - v5 + (v6 ^ 0x13Cu)) = *(void *)(v1
                                                                              - 7
                                                                              + v4
                                                                              - 1877991117
                                                                              + v3
                                                                              - v5
                                                                              + (v6 ^ 0x13Cu));
  return (*(uint64_t (**)(void))(v7 + 8 * ((125 * (v5 - (v2 & 0xFFFFFFF8) == -8)) ^ v6)))();
}

void sub_1B02B8D18()
{
  LODWORD(STACK[0x3A4]) = v0;
  LODWORD(STACK[0x384]) = v1;
  LODWORD(STACK[0x494]) = v2;
  LODWORD(STACK[0x438]) = v3;
  LODWORD(STACK[0x56C]) = 729270172;
  JUMPOUT(0x1B02B8D74);
}

uint64_t sub_1B02B8E54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(unsigned char *)(v8 + (a3 - 1764826816)) = (a6 + 121) & 0x7E ^ 0x6A ^ *(unsigned char *)(v7
                                                                                         + (a3 - 1764826816)) ^ 0xC8;
  return (*(uint64_t (**)(void))(v9 + 8 * ((a6 - 2109687175) & 0x7DBF457E | (8 * (a3 - 1 != v6)))))();
}

uint64_t sub_1B02B8EB0()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((v0 - 1422526706) & 0x54CA0757 ^ 0xFFFFF8E8) + ((v0 - 1886) | 0x128))
                                     * (((2 * v1) & 0x3EFFEBAA ^ 0x14DBC9A2) + (v1 ^ 0x15921324) - 67400080 == 461079621)) ^ v0)))();
}

void sub_1B02B8F38()
{
}

void sub_1B02B8F40()
{
}

void sub_1B02B8F5C()
{
}

void sub_1B02B8F64()
{
}

uint64_t sub_1B02B8F70(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,int a35)
{
  *int v37 = a35 + 1;
  uint64_t v40 = *v38;
  unint64_t v41 = 1755732067
      * ((((2 * (v39 - 152)) | 0xF5FAA47135BEB79CLL) - (v39 - 152) + 0x502ADC76520A432) ^ 0x2756F5074419E615);
  STACK[0x598] = v41 ^ 0x13FF;
  int v42 = v41 ^ (v35 - 1747243647);
  *(_DWORD *)(v39 - 144) = v42 ^ 0x72;
  *(_DWORD *)(v39 - 140) = v42 ^ 0x30;
  *(_DWORD *)(v39 - 124) = v41;
  STACK[0x588] = v40 + v41;
  *(_DWORD *)(v39 - 152) = v35 - 1747243647 + v41;
  *(_DWORD *)(v39 - 148) = (v35 + 132521259) ^ v41;
  uint64_t v43 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (a4 + v35 + 2409)))(v39 - 152);
  return (*(uint64_t (**)(uint64_t))(v36 + 8 * *(int *)(v39 - 128)))(v43);
}

uint64_t sub_1B02B9054(int a1, int a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6)
{
  int v10 = v7 + v6;
  unsigned int v11 = ((v8 + 2028) ^ 0x82F) + v10;
  if (v11 <= 0x40) {
    unsigned int v11 = a3;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((4090 * (a6 - v10 + 2029 < a6 + a1 + a2 + 253 + v11 + 1776)) ^ 0x7EDu)))();
}

uint64_t sub_1B02B90C8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 - 1785;
  unsigned int v12 = (a1 + 2107117664) & 0x8267EF9F;
  int v13 = 1755732067 * ((&a4 - 986430956 - 2 * ((unint64_t)&a4 & 0xC5344214)) ^ 0x1BF2FFCF);
  a8 = v13 ^ 0x6ADCED39;
  a6 = (a1 - 1379) ^ v13;
  a7 = &STACK[0x486D4A085FE6BE4A];
  a4 = &STACK[0x460F4FD2677B792];
  a5 = v10;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * ((a1 - 1785) ^ 0x85A)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((*(_DWORD *)(v10 - 0x7DA9E0EFFB1E3616) == (v12 ^ (v8 - 1651)))
                                              * (v11 + 1360)) ^ v11)))(v14);
}

uint64_t sub_1B02B91C8(int a1)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((LODWORD(STACK[0x448]) == ((53 * ((437 * (a1 ^ 0x744)) ^ 0x37B)) ^ 0x537518E6))
                                * ((((437 * (a1 ^ 0x744)) ^ 0x37B) + 2216) ^ 0x85E)) ^ (437 * (a1 ^ 0x744)))))();
}

uint64_t sub_1B02B922C()
{
  BOOL v3 = (*(_DWORD *)(v1 - 0x7DA9E0EFFB1E361ALL) & 1) != ((v0 - 2136506587) & 0x7F5882FE) - 714;
  return (*(uint64_t (**)(void))(v2 + 8 * (((4 * v3) | (8 * v3)) ^ v0)))();
}

uint64_t sub_1B02B9280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, int a20,int a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,int a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v52
                                                     + 8
                                                     * (((a17 + ((2 * (a52 & 0x3F)) ^ 0x22) + (a52 & 0x3F ^ 0x747BFDAEu) < 0xFFFFFFC0)
                                                       * (a36 - 2177 + a21)) ^ (a36 + 758))))(3414509283, 2412802768);
}

void sub_1B02B9324()
{
}

uint64_t sub_1B02B9454(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unint64_t v9 = STACK[0x4D0];
  int v10 = *(unsigned __int8 *)(STACK[0x4D0] - 0x2B41EA7AD2F8E811) ^ 0xAE;
  if (v10 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
  }
                                                                                  + 8
                                                                                  * ((988
                                                                                    * (*(_DWORD *)(v9
                                                                                                 - 0x2B41EA7AD2F8E815) == (((a8 - 837) | 0x202) ^ 0x4A15321F))) ^ (a8 + 619))))(a1, a2, 3809889992, 2764117920, 1862894318);
  if (v10 == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
  }
                                                                                  + 8
                                                                                  * (int)((67
                                                                                         * (*(_DWORD *)(v9 - 0x2B41EA7AD2F8E815) == LODWORD(STACK[0x240]) + 1242901973)) ^ (STACK[0x2F0] + 1041))))(a1, a2, 3809889992, 4039967097, 227919261);
  unint64_t v12 = STACK[0x270];
  STACK[0x368] = 91;
  *(unsigned char *)(v9 - 0x2B41EA7AD2F8E816) = (v12 ^ 0xBA) * (v12 + 17);
  return (*(uint64_t (**)(uint64_t))(v8
                                            + 8
                                            * ((35 * (STACK[0x368] != ((((a8 ^ 0x6C8) - 585) | 0x81u) ^ 0x385))) ^ a8 ^ 0x6C8)))(901);
}

uint64_t sub_1B02B95FC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((((v0 + 1) ^ (*(void *)(v1 + 24) == 0x38BB74075792D150)) & 1) == 0)
                                     * (((v0 + 623177015) & 0xDADB0EDF) - 1171)) ^ v0)))();
}

uint64_t sub_1B02B9660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v18 - 136) = v16 + ((~((v18 - 136) | 0x2BE56BA5) + ((v18 - 136) & 0x2BE56BA5)) ^ 0x3486F671) * v14 + 778;
  *(void *)(v18 - 128) = a13;
  *(void *)(v18 - 120) = v17;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 + 1520)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * (((*(_DWORD *)(v18 - 132) <= (v13 + 1))
                                              * (((v16 ^ 0x2AC) + 258) ^ 0xAE)) ^ v16)))(v19);
}

uint64_t sub_1B02B9700()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1906
                                * ((((*(unsigned __int8 *)(v2 + 7) - 1) << (v3 ^ 0x85)) & v1)
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ v0) == v0)) ^ v3)))();
}

uint64_t sub_1B02B974C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  *(_DWORD *)(v25 - 104) = v24 - 1759421093 * ((v25 - 120) ^ 0xB37DB054) + 1300;
  *(void *)(v25 - 120) = v23;
  *(void *)(v25 - 112) = a21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v24 + 1372)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * (((v21 == (((v24 + 67) | 0x225) ^ 0xA8A5BA8))
                                              * (((v24 + 60) | 0x22C) - 226)) ^ v24)))(v26);
}

void sub_1B02B97E0()
{
}

void sub_1B02B98F8()
{
}

void sub_1B02B9904(int a1@<W8>, uint64_t a2, unsigned int a3, int a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  unsigned int v9 = 3804331 * ((((&a3 | 0x7BD67590) ^ 0xFFFFFFFE) - (~&a3 | 0x84298A6F)) ^ 0xFAFCAF99);
  a7 = v9 + 1207118207;
  a3 = v9 + 1584941602;
  a4 = v9 + a1 - 1761;
  a5 = 0x72FA7492185D929CLL;
  a6 = v7;
  (*(void (**)(unsigned int *))(v8 + 8 * (a1 ^ 0x1C2)))(&a3);
  sub_1B02A42FC();
}

uint64_t sub_1B02B9998()
{
  return ((uint64_t (*)(void))STACK[0x4B0])();
}

void sub_1B02B99D8(int a1@<W8>)
{
  uint64_t v3 = 4 * (v2 - 1511336197);
  uint64_t v4 = (int *)(STACK[0x2E8] + v3);
  int v5 = *v4;
  LODWORD(v4) = 2003914383
              * ((*(_DWORD *)(*(void *)STACK[0x2D8] + (*(int *)STACK[0x2D0] & 0xFFFFFFFFA23C6D28)) ^ v4) & 0x7FFFFFFF);
  LODWORD(v4) = v4 ^ (v4 >> 16);
  unsigned int v6 = v4 * ((a1 - 547) ^ 0x777148A8);
  *(_DWORD *)(v1 + v3) ^= v5 ^ *((_DWORD *)*(&off_1F08D3590 + (a1 ^ 0x876)) + HIBYTE(v6) - 1) ^ *((_DWORD *)*(&off_1F08D3590 + a1 - 2027)
                                                                                                + HIBYTE(v6)
                                                                                                + 2) ^ *((_DWORD *)*(&off_1F08D3590 + a1 - 2012) + HIBYTE(v6) - 1) ^ (1317994496 * v4) ^ v6 ^ (-1109235783 * HIBYTE(v6));
  JUMPOUT(0x1B02B9AC4);
}

uint64_t sub_1B02B9B24@<X0>(char a1@<W1>, int a2@<W3>, int a3@<W4>, uint64_t a4@<X7>, int a5@<W8>)
{
  *(unsigned char *)(v7 + v6) = *(unsigned char *)(a4 + (v5 + v9))
                      - (a1 & (2 * *(unsigned char *)(a4 + (v5 + v9))))
                      - 48;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v6 == 63) * a2) ^ (a3 + a5 + 925))))();
}

uint64_t sub_1B02B9B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  unsigned int v24 = 1178560073 * (&a15 ^ 0xBA947862);
  a16 = v24 + 1531045867 * v21 + 81978470;
  a17 = a14;
  a18 = (v23 + 841) ^ v24;
  (*(void (**)(int *))(v22 + 8 * (v23 + 1536)))(&a15);
  unsigned int v25 = 1178560073 * ((2 * (&a15 & 0x6149DE40) - &a15 + 515252665) ^ 0xA42259DB);
  a19 = v19;
  a18 = ((v20 ^ 0xE436E7BD) + 1608335319 + ((((v23 ^ 0x69) - 110) ^ 0xC86DCDCE) & (2 * v20))) ^ v25;
  a16 = v25 + v23 + 707;
  a17 = a14;
  uint64_t v26 = (*(uint64_t (**)(int *))(v22 + 8 * (v23 ^ 0xA39)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((1997 * (a15 == 1904944996)) ^ v23)))(v26);
}

uint64_t sub_1B02B9CA0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  v10.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v10.i64[1] = 0xD0D0D0D0D0D0D0D0;
  uint64_t v11 = v7 + (a1 - 1764826816);
  int8x16_t v12 = veorq_s8(*(int8x16_t *)(v6 + (a1 - 1764826816) - 31), v10);
  *(int8x16_t *)(v11 - 15) = veorq_s8(*(int8x16_t *)(v6 + (a1 - 1764826816) - 15), v10);
  *(int8x16_t *)(v11 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * ((1081 * (((a6 - 144) ^ 0x526) == (v8 & 0xFFFFFFE0))) ^ (a6 - 740))))();
}

void sub_1B02B9D10()
{
}

void sub_1B02B9D28(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X11, X17 }
}

void sub_1B02B9D70()
{
}

uint64_t sub_1B02B9D78@<X0>(uint64_t a1@<X8>)
{
  STACK[0x3F0] = 104 - a1;
  int v2 = (uint64_t (*)(void))STACK[0x358];
  STACK[0x260] = v1 - 112;
  STACK[0x328] = v1 - 112;
  return v2();
}

void sub_1B02B9D9C()
{
}

uint64_t sub_1B02B9FCC()
{
  int v4 = 628203409 * ((1681504528 - ((v3 - 192) | 0x6439B910) + ((v3 - 192) | 0x9BC646EF)) ^ 0x194E4ADC);
  unint64_t v5 = STACK[0x288];
  *(_DWORD *)(v3 - 176) = v0 - v4 + 110;
  *(_DWORD *)(v3 - 172) = v1 - v4 + ((v0 - 788602280) & 0x2F011FAD ^ 0xB23AF03);
  *(void *)(v3 - 184) = STACK[0x280];
  *(void *)(v3 - 192) = STACK[0x290];
  *(void *)(v3 - 152) = STACK[0x2D0];
  *(void *)(v3 - 144) = v5;
  *(void *)(v3 - 168) = STACK[0x298];
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0x81C)))(v3 - 192);
  return (*(uint64_t (**)(uint64_t, __n128))(v2
                                                    + 8
                                                    * (((*(_DWORD *)(v3 - 160) == 1904944996) * ((v0 ^ 0x1BC) + 1136)) ^ v0)))(v6, (__n128)0);
}

uint64_t sub_1B02BA0E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  int v37 = HIDWORD(a12) - ((((a8 + 86) ^ 0x379C1BF8) + 2 * HIDWORD(a12)) & 0xE2DA8CEE) - 1925491336;
  unsigned int v38 = ((v37 << (*(_DWORD *)(v35 - 256) ^ 0x12)) & 0xAB7B5EEA ^ 0xA25A0CEA) + (v37 ^ 0xA4D0E902);
  *(_DWORD *)(v35 - 256) = (a8 - 1426) | 0x601;
  BOOL v40 = (((((a8 + 110) | 1) ^ 8) + (_BYTE)v38) & 0xF) == ((a8 + 222941713) & 0xF2B62C6F ^ 0x425)
     && v38 != 1438494581;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((903 * v40) ^ ((int)a8 + 86))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35);
}

uint64_t sub_1B02BA1BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v14 = *v8 != 208 || LODWORD(STACK[0x588]) != 401561351 || v10 != v11 + STACK[0x278] - 18;
  return (*(uint64_t (**)(void))(v9 + 8 * ((213 * v14) ^ (a8 + 244))))();
}

uint64_t sub_1B02BA204(int a1)
{
  unint64_t v4 = STACK[0x598];
  int v5 = 628203409 * ((v3 - 192) ^ 0x82880C33);
  *(_DWORD *)(v3 - 184) = v5 + (a1 ^ 0x8F) + 1062;
  *(_DWORD *)(v3 - 180) = v1 - v5 - 1081988177;
  *(void *)(v3 - 192) = v4;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v2 + 8 * ((a1 ^ 0x8F) + 1408)))(v3 - 192);
  return ((uint64_t (*)(uint64_t))STACK[0x440])(v6);
}

uint64_t sub_1B02BA27C(uint64_t a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v9 = v8 + a6 + 208219991;
  BOOL v10 = v9 < 0xB70890EC;
  BOOL v11 = v9 > v6 + 1483720963;
  if (v10 != v6 + 1483720963 < ((a2 + 690599381) & 0xD6D64E9F ^ 0xB7089668)) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((63 * ((a2 ^ v11) & 1)) ^ a2)))();
}

uint64_t sub_1B02BA30C@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 468) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 2912))(0);
}

uint64_t sub_1B02BA364()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)((245 * (v0 <= (STACK[0x2B8] & 0x342127B7 ^ 0x1AC4FC98u))) ^ (STACK[0x2F0] - 35))))();
}

uint64_t sub_1B02BA3AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,unsigned int a28)
{
  int v33 = v28 ^ 0x9BA;
  v30[623] = *(_DWORD *)(v31 + 4 * (*v30 & 1)) ^ v30[396] ^ ((*v30 & 0x7FFFFFFE | v30[623] & 0x80000000) >> ((v33 + 106) ^ v29));
  return (*(uint64_t (**)(void))(v32 + 8 * ((107 * (a28 > 0x26F)) ^ v33)))();
}

uint64_t sub_1B02BA410()
{
  *(void *)(v6 + (v0 - v1)) = *(void *)(v2 + (v0 - v1));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v1 + v5 - 791 == v3) | ((v1 + v5 - 791 == v3) << 8)) ^ v4)))();
}

uint64_t sub_1B02BA440()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((858 * (4 * v1 - LODWORD(STACK[0x2D8]) == (((v0 - 788) | 0x205) ^ 0xE314402F))) ^ v0)))();
}

uint64_t sub_1B02BA498()
{
  int v5 = ((v3 - 1203300592) & 0x47B8E7DB) + *(unsigned __int8 *)(v2 + 5) - 590;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2027 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v3)))();
}

void sub_1B02BA4EC(uint64_t a1)
{
  int v2 = *(_DWORD *)(*(void *)(a1 + 16) - 0x6155FFFFEB445CC1) - 877889372;
  int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1) - 877889372;
  int v4 = (v2 < -1637313354) ^ (v3 < -1637313354);
  BOOL v5 = v2 > v3;
  if (v4) {
    BOOL v6 = v2 < -1637313354;
  }
  else {
    BOOL v6 = v5;
  }
  int v1 = *(_DWORD *)a1 - 108757529 * ((2 * (a1 & 0x5EAB9BD4) - a1 - 1588304853) ^ 0x41C80600);
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02BA684(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(unsigned char *)(*(void *)(a8 + 96) + 1568) = 1;
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a8 + 72) == a4) * (v10 + ((v8 - 1795029152) | 0x2213143) - 294)) ^ v8)))();
}

uint64_t sub_1B02BA6D0(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = (qword_1E9B30C18 + qword_1E9B30BC8) ^ (unint64_t)&v8;
  qword_1E9B30BC8 = 1358147533 * v2 - 0xEB3E64746BB5B7CLL;
  qword_1E9B30C18 = 1358147533 * (v2 ^ 0xF14C19B8B944A484);
  int v3 = *(_DWORD *)(a2 + 4);
  unsigned __int8 v4 = -51 * ((qword_1E9B30C18 + -51 * v2 - 124) ^ 0x84);
  BOOL v5 = (char *)*(&off_1F08D3590 + (v4 ^ byte_1B04D8230[byte_1B04D35C0[v4] ^ 0xC0]) + 40)
     - 12;
  if (v3 == 1400183654) {
    __asm { BRAA            X1, X17 }
  }
  if (v3 == 1400183661)
  {
    int v6 = **(unsigned __int8 **)(a2 + 8) - 9;
    __asm { BRAA            X1, X17 }
  }
  return 4294925278;
}

uint64_t sub_1B02BA88C(__n128 a1, __n128 a2, uint64_t a3, int a4)
{
  a1.n128_u16[0] = -24416;
  a1.n128_u8[2] = -96;
  a1.n128_u8[3] = -96;
  a1.n128_u8[4] = -96;
  a1.n128_u8[5] = -96;
  a1.n128_u8[6] = -96;
  a1.n128_u8[7] = -96;
  a2.n128_u16[0] = -12080;
  a2.n128_u8[2] = -48;
  a2.n128_u8[3] = -48;
  a2.n128_u8[4] = -48;
  a2.n128_u8[5] = -48;
  a2.n128_u8[6] = -48;
  a2.n128_u8[7] = -48;
  return sub_1B02BA8B4((a4 - 1378) | 0x442u, a1, a2);
}

uint64_t sub_1B02BA8B4(int a1, int a2, uint64_t a3, int a4, int8x8_t a5, int8x8_t a6)
{
  uint64_t v12 = (v7 + v6 - v8);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(v9 + v12));
  *(int8x8_t *)(a3 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), a5)), a6));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v8 + a1 - 1226 == v10) * a4) ^ a2)))();
}

uint64_t sub_1B02BA900()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (v0 | (8
                                     * (LODWORD(STACK[0x3FC]) - 1400185700 < ((v0 - 1982743635) & 0x762E43B6 ^ 0xFFFFF7DE)
                                                                                         + (v0 ^ 0x7C5))))))();
}

void sub_1B02BA958()
{
  LODWORD(STACK[0x364]) = STACK[0x2D8];
  LODWORD(STACK[0x4AC]) = STACK[0x2E0];
  STACK[0x330] = STACK[0x2C0];
  STACK[0x378] = STACK[0x2C8];
  STACK[0x540] = STACK[0x2D0];
  JUMPOUT(0x1B02AC6F0);
}

uint64_t sub_1B02BA9A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W2>, unsigned int a4@<W5>, uint64_t a5@<X8>)
{
  *(_DWORD *)(*v7 + 4 * (v6 + v5)) = v9;
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(a5
                                                             + 8
                                                             * (int)(((v8 != 0) * (((a3 - 852) | a4) - 112)) ^ ((a3 - 852) | a4))))(a1, a2, ((a3 - 852) | a4) + 842);
}

void sub_1B02BA9F8()
{
}

uint64_t sub_1B02BAA04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  unsigned int v62 = ((((2 * v60) | 0xB1F5AD30) - v60 + 654649704) ^ 0x4C579FC1) * v55;
  *(_DWORD *)(v61 - 156) = v56 - v62 + 576;
  *(void *)(v61 - 184) = v58;
  *(void *)(v61 - 176) = a54;
  *(void *)(v61 - 168) = a55;
  *(_DWORD *)(v61 - 192) = v62 ^ 0x1474BF4A;
  uint64_t v63 = (*(uint64_t (**)(uint64_t))(v59 + 8 * (v56 + 1828)))(v61 - 192);
  return (*(uint64_t (**)(uint64_t))(v59 + 8 * (((*(_DWORD *)(v61 - 160) == v57) * (v56 ^ 0x238)) | v56)))(v63);
}

void sub_1B02BAAAC()
{
}

void sub_1B02BAAC4()
{
}

void sub_1B02BAAD0()
{
}

uint64_t sub_1B02BAAFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(unsigned char *)(v8 - 252 + v5 - 728585860) = -48;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((4 * ((unint64_t)(v5 - 728585859) < 0x40)) | (((unint64_t)(v5 - 728585859) < 0x40) << 11)) ^ (a5 + v6 + 203))))();
}

uint64_t sub_1B02BAB48(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((44 * ((a1 + v2 + 993039426) > 7)) ^ (v1 - 1221))))();
}

uint64_t sub_1B02BABA0()
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v3 + v2 + ((v1 - 623) ^ 0x9006047B) > 7) * ((v1 ^ v0) - 1522)) ^ v1)))();
}

uint64_t sub_1B02BAC10(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F08D39C8 + 8 * ((613 * (*(_DWORD *)(a2 + 4) == 1400183652)) ^ 0x483u) - 12))();
}

uint64_t sub_1B02BAC4C(uint64_t result)
{
  unint64_t v1 = 1755732067 * (((result | 0x8EA96B22131044E8) - (result & 0x8EA96B22131044E8)) ^ 0x5302CC1DCDD6F933);
  int v2 = *(_DWORD *)(result + 28) - v1;
  int v3 = *(_DWORD *)(result + 8) ^ v1;
  int v4 = *(_DWORD *)result - v1;
  int v5 = *(_DWORD *)(result + 12) ^ v1;
  unint64_t v6 = *(void *)(result + 16) - v1;
  unint64_t v7 = *(void *)(result + 32) ^ v1;
  BOOL v8 = (uint64_t)v7 < (uint64_t)v6;
  BOOL v9 = v7 < v6;
  int v10 = v8;
  if (v2) {
    BOOL v9 = v10;
  }
  if (v9) {
    int v11 = v4;
  }
  else {
    int v11 = v5;
  }
  *(_DWORD *)(result + 24) = v3 ^ v11;
  return result;
}

uint64_t sub_1B02BACDC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1011 * (((v3 ^ v2) & 0x1F ^ 5) == (v0 ^ 0x55E ^ v0 ^ 0x21 ^ 0x57F))) ^ v0)))();
}

uint64_t sub_1B02BAD54(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 8);
  __int16 v2 = *(_DWORD *)result + 26185 * ((2 * (result & 0x1A68) - result - 6761) ^ 0x9DF5);
  *(_DWORD *)(v1 - 0x2B41EA7AD2F8E811) = (((2 * (v2 & 0x1FF ^ 0xFDA21118)) & 0x2A4403F2)
                                          - (v2 & 0x1FF ^ 0xFDA21118)
                                          - 388383226) ^ 0x54A4F9CD;
  *(void *)(v1 - 0x2B41EA7AD2F8E831) = 0xD00DB111397279F1;
  *(_DWORD *)(v1 - 0x2B41EA7AD2F8E815) = 1242902621;
  int v3 = v2 ^ 0x7D;
  if (v3 == 1)
  {
    int v4 = 1242902637;
    goto LABEL_5;
  }
  if (v3 == 2)
  {
    *(_DWORD *)(v1 - 0x2B41EA7AD2F8E819) = -1214716258;
    int v4 = 1242902641;
LABEL_5:
    *(void *)(v1 - 0x2B41EA7AD2F8E829) = 0x9B87ACE7130F246FLL;
    *(void *)(v1 - 0x2B41EA7AD2F8E821) = 0x64785318ECF0DB90;
    *(_DWORD *)(v1 - 0x2B41EA7AD2F8E815) = v4;
  }
  *(_DWORD *)(result + 4) = 322982121;
  return result;
}

void sub_1B02BAEC4(uint64_t a1)
{
  int v1 = 1759421093 * (a1 ^ 0xB37DB054);
  int v2 = *(_DWORD *)(a1 + 8) + v1;
  int v3 = *(_DWORD *)(*(void *)(a1 + 24) - 0x6155FFFFEB445CC1);
  int v4 = *(_DWORD *)a1 ^ v1;
  int v6 = v3 - 1388059666;
  BOOL v5 = v3 - 1388059666 < 0;
  int v7 = 1388059666 - v3;
  if (v5) {
    int v6 = v7;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02BAF74(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34)
{
  unsigned int v36 = ((a4 + 58) ^ 0x6BBC4C40) + v35;
  BOOL v37 = v36 < 0x7F546579;
  BOOL v38 = v36 > a34;
  if (a34 < 0x7F546579 != v37) {
    BOOL v39 = v37;
  }
  else {
    BOOL v39 = v38;
  }
  return (*(uint64_t (**)(void))(v34 + 8 * ((v39 * (((a4 + 58) | 0x605) ^ 0x6B0)) ^ (a4 + 266))))();
}

uint64_t sub_1B02BAFF8(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(*(void *)(v5 + 96) + 1428) = 568732680;
  return (*(uint64_t (**)(void))(v4 + 8 * (((*(_DWORD *)(a2 + 4) == v2) * ((((v3 - 1) | 0x115) - 362) ^ 0x98)) ^ v3)))();
}

uint64_t sub_1B02BB050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (((((88 * (v8 ^ 0x89)) ^ 0x762) + 776) * (v7 == a7)) ^ v8)))();
}

void sub_1B02BB088()
{
}

uint64_t sub_1B02BB104()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((238 * (v0 == ((117 * (v1 ^ 0x26E) + 182507891) ^ (v1 - 83)))) ^ v1)))();
}

uint64_t sub_1B02BB160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  if (a17 == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
  }
                                                                + 8
                                                                * (int)(((a36 != 1242902621)
                                                                       * (((a6 + 539653960) & 0x961055F7) + 1182)) ^ (a7 + a6 + 251))))(a1, a2, a10);
  if (a17 != 1) {
    JUMPOUT(0x1B02BB2D0);
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v36
                                                              + 8
                                                              * ((27 * (a36 == ((a7 + a6 + 244) ^ 0x4A153173))) ^ (a7 + a6 + 244))))(a1, a2, a10);
}

uint64_t sub_1B02BB300()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1014 * (STACK[0x558] != 0)) ^ (v0 - 399))))();
}

uint64_t sub_1B02BB338(uint64_t result, uint64_t a2, int a3)
{
  if ((v4 + a3 + 783) >= 0x7FFFFFFF) {
    int v7 = -v3;
  }
  else {
    int v7 = v6;
  }
  int *v5 = v7;
  *(_DWORD *)(result + 28) = 1151980900;
  return result;
}

uint64_t sub_1B02BB470@<X0>(int a1@<W2>, int a2@<W8>)
{
  int v6 = *(_DWORD *)(v4 + v2 * (uint64_t)v3 + 36);
  BOOL v8 = v6 + 86454119 > -1504746950 && v6 + 86454119 < SLODWORD(STACK[0x2E0]) && v6 != a1;
  return (*(uint64_t (**)(void))(v5 + 8 * ((v8 * (((a2 - 325) ^ 0x7DF) - 374)) ^ a2)))();
}

uint64_t sub_1B02BB4D0()
{
  LODWORD(STACK[0x448]) = v1;
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((105 * ((((v0 ^ 0xE65) - 1343) ^ (v3 + 636)) + v1 + 1 < 4)) ^ v0)))();
}

uint64_t sub_1B02BB518@<X0>(int a1@<W4>, int a2@<W8>)
{
  if ((a2 - 216761670) <= 0x18 && ((1 << (a2 - 70)) & 0x1094001) != 0) {
    return sub_1B02BB584();
  }
  else {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8
                                * ((2317 * ((*(_DWORD *)(v4 + v2 * (uint64_t)v3 + 40) & 8) == (a1 ^ 0x100) - 645)) ^ (a1 - 518))))();
}

uint64_t sub_1B02BB584()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((v0 + 1036) | (8
                                              * ((((*(_DWORD *)(v3 + v1 * (uint64_t)v2 + 40) & 1) == 0) ^ (13 * (v0 ^ 0xB8))) & 1)))))();
}

void sub_1B02BB5C0()
{
}

uint64_t sub_1B02BB5CC@<X0>(unsigned int a1@<W8>)
{
  *(_DWORD *)(v5 + 4 * a1) = a1 + (v1 ^ (v1 >> 30)) * v2;
  return (*(uint64_t (**)(void))(v4 + 8 * (v3 ^ (2 * (a1 > 0x26E)))))();
}

uint64_t sub_1B02BB5F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8 * ((500 * ((a5 + 1 + v7) < 0x50)) ^ v6)))(v5, a4);
}

void sub_1B02BB6B4()
{
}

void sub_1B02BB758()
{
  *(_DWORD *)(v0 - 0x7DA9E0EFFB1E3616) = -1904968515;
  sub_1B02A42FC();
}

uint64_t sub_1B02BB778@<X0>(uint64_t a1@<X8>)
{
  int8x16x4_t v29 = vld4q_s8(v1);
  int v4 = LODWORD(STACK[0x2D0]) ^ 0x17;
  v5.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v5.i64[1] = 0xD0D0D0D0D0D0D0D0;
  uint8x16_t v6 = (uint8x16_t)veorq_s8(v29.val[0], v5);
  uint16x8_t v7 = vmovl_high_u8(v6);
  int8x16_t v8 = (int8x16_t)vmovl_high_u16(v7);
  uint16x8_t v9 = vmovl_u8(*(uint8x8_t *)v6.i8);
  int8x16_t v10 = (int8x16_t)vmovl_high_u16(v9);
  uint8x16_t v11 = (uint8x16_t)veorq_s8(v29.val[1], v5);
  uint16x8_t v12 = vmovl_u8(*(uint8x8_t *)v11.i8);
  uint16x8_t v13 = vmovl_high_u8(v11);
  int8x16_t v14 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v12.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v9.i8));
  int8x16_t v15 = vorrq_s8((int8x16_t)vshll_high_n_u16(v12, 8uLL), v10);
  int8x16_t v16 = vorrq_s8((int8x16_t)vshll_n_u16(*(uint16x4_t *)v13.i8, 8uLL), (int8x16_t)vmovl_u16(*(uint16x4_t *)v7.i8));
  int8x16_t v17 = vorrq_s8((int8x16_t)vshll_high_n_u16(v13, 8uLL), v8);
  uint8x16_t v18 = (uint8x16_t)veorq_s8(v29.val[2], v5);
  _Q17 = (int8x16_t)vmovl_high_u8(v18);
  _Q16 = (int8x16_t)vmovl_u8(*(uint8x8_t *)v18.i8);
  int8x16_t v21 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q16.i8, 0x10uLL);
  __asm { SHLL2           V16.4S, V16.8H, #0x10 }
  int8x16_t v26 = (int8x16_t)vshll_n_s16(*(int16x4_t *)_Q17.i8, 0x10uLL);
  __asm { SHLL2           V17.4S, V17.8H, #0x10 }
  v29.val[0] = veorq_s8(v29.val[3], v5);
  v29.val[1] = (int8x16_t)vmovl_u8(*(uint8x8_t *)v29.val[0].i8);
  v29.val[0] = (int8x16_t)vmovl_high_u8((uint8x16_t)v29.val[0]);
  v29.val[2] = vorrq_s8(vorrq_s8(v14, v21), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v29.val[1].i8), 0x18uLL));
  v29.val[1] = vorrq_s8(vorrq_s8(v15, _Q16), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v29.val[1]), 0x18uLL));
  v29.val[3] = vorrq_s8(vorrq_s8(v16, v26), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_u16(*(uint16x4_t *)v29.val[0].i8), 0x18uLL));
  v29.val[0] = vorrq_s8(vorrq_s8(v17, _Q17), (int8x16_t)vshlq_n_s32((int32x4_t)vmovl_high_u16((uint16x8_t)v29.val[0]), 0x18uLL));
  v29.val[1] = (int8x16_t)vsubq_s32((int32x4_t)v29.val[1], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v29.val[1], (int32x4_t)v29.val[1]), *(int8x16_t *)&STACK[0x260]));
  int32x4_t v27 = *(int32x4_t *)&STACK[0x250];
  v29.val[2] = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)v29.val[2], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v29.val[2], (int32x4_t)v29.val[2]), *(int8x16_t *)&STACK[0x260])), *(int32x4_t *)&STACK[0x250]);
  v29.val[0] = (int8x16_t)vaddq_s32(vsubq_s32((int32x4_t)v29.val[0], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v29.val[0], (int32x4_t)v29.val[0]), *(int8x16_t *)&STACK[0x260])), *(int32x4_t *)&STACK[0x250]);
  *(int32x4_t *)(a1 + 32) = vaddq_s32(vsubq_s32((int32x4_t)v29.val[3], (int32x4_t)vandq_s8((int8x16_t)vaddq_s32((int32x4_t)v29.val[3], (int32x4_t)v29.val[3]), *(int8x16_t *)&STACK[0x260])), *(int32x4_t *)&STACK[0x250]);
  *(int8x16_t *)(a1 + 48) = v29.val[0];
  *(int8x16_t *)a1 = v29.val[2];
  *(int32x4_t *)(a1 + 16) = vaddq_s32((int32x4_t)v29.val[1], v27);
  return (*(uint64_t (**)(void))(v2 + 8 * ((2861 * ((v3 + 729270109) < 0x10)) ^ (v4 - 332))))();
}

uint64_t sub_1B02BBA4C()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2351
                                * (((v1 - v4 + 769161478) ^ v0) == (((v1 + 68223402) | 0xDB020802) ^ 0x78B8B3CF) + v2)) ^ v1)))();
}

void sub_1B02BBAB0(uint64_t a1)
{
  int v1 = 108757529 * ((-2 - ((a1 | 0x1E625E8E) + (~a1 | 0xE19DA171))) ^ 0x101C35A);
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1B02BBB8C(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 48) = *(void *)(a2 + 8);
  return 0;
}

uint64_t sub_1B02BBBA4()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (LODWORD(STACK[0x2C8]) | (16
                                                        * ((LODWORD(STACK[0x2D8])
                                                                        - 1742482590
                                                                        + ~(v1 + LODWORD(STACK[0x2A8]) - 568732660)) > 2)))))();
}

uint64_t sub_1B02BBC48@<X0>(uint64_t a1@<X0>, int a2@<W6>, unsigned int a3@<W7>, uint64_t a4@<X8>)
{
  unint64_t v13 = a1 - 0xB635F045AA5D931 + (v6 ^ 0xC15A1193);
  *(_DWORD *)(a4 + 4 * v5) = v13 + v6 - ((2 * v13) & 0x82B42326);
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((((v11 + a2) & a3) + 665 + v7) ^ HIDWORD(v13)) + (v8 & (v13 >> 31)) + v9 == v12)
                                * v10) ^ v11)))();
}

uint64_t sub_1B02BBCC4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v0 == v1) ^ (v2 - 1)) & 1) * ((v2 + 86) ^ 0x372)) ^ v2)))();
}

uint64_t sub_1B02BBD00(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                                           + 8
                                           * ((37 * (((v4 == a4) ^ (v5 - 63 * (v5 ^ 0x88) + 1)) & 1)) ^ v5)))(v5 ^ 0x1DEu);
}

uint64_t sub_1B02BBD50(uint64_t a1)
{
  int v1 = ((*(_DWORD *)(a1 + 4) ^ (460628867 * (((a1 | 0x4A5B5FFB) - (a1 & 0x4A5B5FFB)) ^ 0x6CDDD86))) - 290001955) & 0x114916AD;
  int v2 = *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1);
  int v4 = v2 - 1388059666;
  BOOL v3 = v2 - 1388059666 < 0;
  int v5 = 1388059666 - v2;
  if (!v3) {
    int v5 = v4;
  }
  BOOL v6 = v1 + (v5 ^ 0xBFF7F97B) + v1 + ((2 * v5) & 0x7FEFF2F6) + 1074265458 >= ((v1 + 1) ^ 0x7FFFFB75u);
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v1 - 1026) + 8 * ((v6 | (2 * v6)) ^ v1) - 12))();
}

uint64_t sub_1B02BBE60(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v6 + v3 - 0x2B41EA7B3BD28A13) = v8;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((((v5 - 11) ^ (((v5 - 956) & v4) == 8)) & 1) * a3) ^ (v5 - 11))))();
}

uint64_t sub_1B02BBF0C(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  BOOL v7 = v5 - a1 >= ((a4 - v4 - 2083) ^ a4 ^ 0xA91 ^ 0xE417269BuLL);
  return (*(uint64_t (**)(void))(v6 + 8 * (((8 * v7) | (16 * v7)) ^ a4)))();
}

void sub_1B02BBF54(uint64_t a1)
{
  int v1 = 1374699841 * (((a1 | 0xED37A84B) - (a1 | 0x12C857B4) + 315119540) ^ 0x80C3B042);
  int v2 = *(_DWORD *)a1 - v1;
  int v3 = (unsigned __int16)(*(_WORD *)(a1 + 16) - v1);
  BOOL v5 = *(void *)(a1 + 8) == 0x3FC5690792BAE2ABLL || v3 == 4012;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02BC040()
{
  return (*(uint64_t (**)(void))(v2
                              + 8 * (int)(((((v1 & 0xA25B97DB) - 31) ^ 0x785) * ((v0 & 0x18) == 0)) ^ v1 & 0xA25B97DB)))();
}

uint64_t sub_1B02BC080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, int a15)
{
  unsigned int v19 = 1178560073
      * (((&a12 | 0x95414EA5) - &a12 + (&a12 & 0x6ABEB158)) ^ 0x2FD536C7);
  a14 = a11;
  a13 = v19 + 1531045867 * v15 + v18 + 81977727;
  a15 = (v18 + 940) ^ v19;
  uint64_t v20 = (*(uint64_t (**)(int *))(v17 + 8 * ((v18 - 443) ^ 0x866)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v17 + 8
                                                  * (((a12 == v16 + 744) | (2 * (a12 == v16 + 744))) ^ (v18 - 443))))(v20);
}

uint64_t sub_1B02BC134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)((((452 * ((a6 - 1426523087) & 0xAFCFFBFF ^ (v7 + 1911))) ^ 0x5E6)
                                     * ((unint64_t)(v6 - a1) < 0x20)) ^ a6)))();
}

uint64_t sub_1B02BC188@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (((((*(_DWORD *)(v5 + (v2 + a1) * (uint64_t)v4 + 36) == a2) ^ (v3 + 20)) & 1)
                                * ((v3 - 972) ^ 0x19B)) | v3)))();
}

uint64_t sub_1B02BC1E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,int a37)
{
  uint64_t v42 = (v40 + v38);
  unsigned int v43 = *(_DWORD *)(&a25 + v42 + 72);
  *(unsigned char *)(a3 + v42) = ((a6 + v39 - 53) ^ HIBYTE(v43) ^ 0x81) - ((2 * ((a6 + v39 - 53) ^ HIBYTE(v43))) & 0xA0) - 48;
  *(unsigned char *)(a3 + (v42 + 2)) = (BYTE1(v43) ^ 7) - ((v43 >> 7) & 0xA0) - 48;
  *(unsigned char *)(a3 + (v42 + 1)) = (BYTE2(v43) ^ 0x4A)
                                           - 2 * ((BYTE2(v43) ^ 0x4A) & 0x55 ^ BYTE2(v43) & 5)
                                           - 48;
  *(unsigned char *)(a3 + (v42 + 3)) = v43 ^ 0xBE;
  BOOL v44 = v40 + 1826507726 < (a37 + 2003811825);
  if (v40 + 1826507726 < v37 != a37 + 2003811825 < v37) {
    BOOL v44 = a37 + 2003811825 < v37;
  }
  return (*(uint64_t (**)(void))(v41 + 8 * ((1491 * v44) ^ v39)))();
}

uint64_t sub_1B02BC2CC()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((41 * (v2 == ((33 * (v0 ^ 0x81E) - 806119985) & 0x300C6F75 ^ 0x55E05910))) ^ v0)))();
}

uint64_t sub_1B02BC31C@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((92 * (v3 == ((a1 + 165) ^ v2 ^ (a1 + 1228) ^ 0x4F9))) ^ (a1 + 1228))))();
}

uint64_t sub_1B02BC354(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((((a8 + 1802) | 2) + ((a8 + 148) ^ 0xFFFFF61E)) * (v8 != a4)) ^ a8)))();
}

uint64_t sub_1B02BC398()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((1623 * (v0 + 1 == v2 + 4)) ^ 0x3D7u)))();
}

uint64_t sub_1B02BC468@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((30 * ((((((v1 & 0xFB5D5E7F) + 402) | 0xC2) - 660) ^ a1) > 7)) ^ v1 & 0xFB5D5E7F)))();
}

uint64_t sub_1B02BC4B4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((a6 + 1 == ((v6 - 1137) | a4) - 1187) * a5) ^ (v6 - 858))))();
}

uint64_t sub_1B02BC508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, int a14)
{
  a13 = (v15 - 504207780) ^ (535753261
                           * ((((&a13 | 0x4F12C1A2) ^ 0xFFFFFFFE) - (~&a13 | 0xB0ED3E5D)) ^ 0xBA193072));
  uint64_t v16 = (*(uint64_t (**)(unsigned int *))(v14 + 8 * (v15 + 1608)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * ((1633 * (a14 == ((v15 - 144720949) & 0xC35EDD7F ^ 0xB2D5BB5D))) ^ v15)))(v16);
}

uint64_t sub_1B02BC5B8@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  *(double *)(v6 + (a1 ^ v3)) = a2;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 == 0) * v4) | v2)))();
}

void sub_1B02BC5E4()
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (unint64_t *)*(&off_1F08D3590
                           + (*((unsigned char *)off_1F08D3828
                                                             + (*((unsigned __int8 *)off_1F08D38C0
                                                                + (-51
                                                                                  * ((qword_1E9B30C18 - dword_1E9B309B8) ^ 0x84))
                                                                - 4) ^ 0x72u)
                                                             - 4) ^ (-51 * ((qword_1E9B30C18 - dword_1E9B309B8) ^ 0x84)))
                           + 36);
  int v1 = (unint64_t *)*(&off_1F08D3590
                           + ((-51 * ((qword_1E9B30C18 + *v0) ^ 0x84)) ^ *((unsigned char *)off_1F08D3828
                                                                                          + (*((unsigned __int8 *)off_1F08D38C0
                                                                                             + (-51 * ((qword_1E9B30C18 + *v0) ^ 0x84))
                                                                                             - 4) ^ 0xA5u)
                                                                                          - 4))
                           - 29);
  unint64_t v2 = (*v1 ^ *v0) - (void)&v8;
  unint64_t v3 = (1358147533 * v2) ^ 0xF14C19B8B944A484;
  unint64_t v4 = 1358147533 * (v2 ^ 0xF14C19B8B944A484);
  unint64_t *v0 = v3;
  unint64_t *v1 = v4;
  LOBYTE(v4) = -51 * ((v4 + *(_DWORD *)v0) ^ 0x84);
  *(_DWORD *)*(&off_1F08D3590
             + (*((unsigned char *)off_1F08D3678
                                 + (*((unsigned __int8 *)off_1F08D3760 + v4 - 4) ^ 0xCu)) ^ v4)
             - 169) = 1904944996;
  LOBYTE(v4) = -51 * ((*(_DWORD *)v1 - *(_DWORD *)v0) ^ 0x84);
  uint64_t v5 = (char *)*(&off_1F08D3590
               + ((-51 * ((qword_1E9B30C18 - dword_1E9B309B8) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 - dword_1E9B309B8) ^ 0x84))] ^ 0x87]))
     - 12;
  uint64_t v6 = (*(uint64_t (**)(uint64_t, uint64_t))&v5[8
                                                      * (*((unsigned char *)off_1F08D39B8
                                                                          + (*((unsigned __int8 *)off_1F08D3808
                                                                             + v4
                                                                             - 8) ^ 0xC0u)
                                                                          - 8) ^ v4)
                                                      + 17848])(512, 1509315540);
  unsigned __int8 v7 = -51 * (*(_DWORD *)v0 ^ 0x84 ^ *(_DWORD *)v1);
  *(void *)((char *)*(&off_1F08D3590
                      + ((*off_1F08D37E0)[*((unsigned __int8 *)off_1F08D3B98 + v7 - 4) ^ 0xCD] ^ v7)
                      - 21)
            - 4) = v6;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02BC838(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (((((v12 - 239) | 0x27A) - 1193)
                                * ((a12 ^ 0xDD171FDD) + 2147279616 + ((2 * a12) & 0xBA2E3FBA) - 1561592543 < 0x7FFFFFFE)) ^ v12)))();
}

uint64_t sub_1B02BC8B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8 * (v4 | (8 * ((unint64_t)(v2 - a2) < 0x20)))))(a1, v3);
}

void sub_1B02BC8E0(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  a4 = v6;
  a5 = v7;
  a3 = v7;
  a6 = v8 + 535753261 * (((~&a3 & 0xE38BB8A2) - (~&a3 | 0xE38BB8A3)) ^ 0xE97FB68C) + 1140;
  (*(void (**)(uint64_t *))(a1 + 8 * (v8 ^ 0xB98)))(&a3);
  JUMPOUT(0x1B02BC940);
}

void sub_1B02BC96C()
{
}

uint64_t sub_1B02BCA2C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((245 * (v0 == ((v1 - 809) | 0x120) + 13647560)) ^ v1)))();
}

uint64_t sub_1B02BCA70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char *a5)
{
  uint64_t v6 = (char *)&STACK[0x1890] + v5;
  char *v6 = *a5;
  *(void *)(v6 + 1) = *(void *)(a5 + 1);
  *(_DWORD *)(v6 + 9) = *(_DWORD *)(a5 + 9);
  *(_WORD *)(v6 + 13) = *(_WORD *)(a5 + 13);
  v6[15] = a5[15];
  uint64_t v7 = *((void *)a5 + 1);
  *((void *)v6 + 2) = *(void *)a5;
  *((void *)v6 + 3) = v7;
  return sub_1B0299EE8();
}

uint64_t sub_1B02BCAB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(a10 + v11) = v14;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((197 * (((((v12 - 84092731) & 0x50326FF) - 591) & v10) != 8)) ^ (v12 - 84092731) & 0x50326FFu)))();
}

uint64_t sub_1B02BCB24()
{
  STACK[0x328] = STACK[0x2A0];
  return ((uint64_t (*)(void))STACK[0x2C0])();
}

void sub_1B02BCB38(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, char a4, unsigned int a5, uint64_t a6)
{
  a5 = v7
     + 535753261
     * ((837786014 - (&a4 ^ 0xC34CDF0 | 0x31EF999E) + (&a4 ^ 0xC34CDF0 | 0xCE106661)) ^ 0xC8D0A5BE)
     - 792;
  a6 = a1;
  (*(void (**)(char *))(v6 + 8 * (v7 ^ 0xDFD)))(&a4);
  JUMPOUT(0x1B02BCBACLL);
}

uint64_t sub_1B02BCBEC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((a4 - 1354 + 31 * (a4 ^ 0x625) - 868) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_1B02BCC24()
{
  _DWORD *v2 = v1;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((235
                                * ((((v0 - 355) ^ 0x5FF3FCE6) & (2 * (v1 - ((2 * v1) & 0x2F0DCA7A) + 394716477)) ^ 0xF01CA7A)
                                 + ((v1 - ((2 * v1) & 0x2F0DCA7A) + 394716477) ^ 0x787F1AC2)
                                 + ((v0 + 60844672) & 0xFC5F97ED)
                                 - 113829929 != 1764826815)) ^ v0)))();
}

uint64_t sub_1B02BCCC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == a8 + ((v8 + 313267359) & 0xED53EBFF) - 415) * (v8 ^ 0x10E)) ^ v8)))();
}

uint64_t sub_1B02BCD10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  *(unsigned char *)(*v16 + (a7 + v13 + 158)) = 80;
  if ((v13 - 2076030274) < 0x8B34A9B6 != a13 > ((v14 - 715697407) & 0x2AA8A7FE ^ 0x74CB5727u)) {
    BOOL v17 = a13 > ((v14 - 715697407) & 0x2AA8A7FE ^ 0x74CB5727u);
  }
  else {
    BOOL v17 = v13 - 2076030274 < a13 - 1959482954;
  }
  return (*(uint64_t (**)(void))(v15 + 8 * ((26 * v17) ^ v14)))();
}

uint64_t sub_1B02BCDA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(_DWORD *)(v27 - 120) = v25
                         + 1225351577 * (((~(v27 - 144) & 0xD63B8742) - (~(v27 - 144) | 0xD63B8743)) ^ 0xF5A15F55)
                         + 1368;
  *(void *)(v27 - 112) = v26;
  *(void *)(v27 - 104) = a19;
  *(void *)(v27 - 144) = v23;
  *(void *)(v27 - 136) = v23;
  *(void *)(v27 - 128) = a22;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0x982)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((255
                                              * ((((v22 - 1334526196) < 0x7FFFFFFF) ^ (((v25 - 49) ^ 0x32) + 41)) & 1)) ^ (v25 + 177))))(v28);
}

uint64_t sub_1B02BCE60(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8 * (((v4 < (((a4 - 447) | 0x401) ^ 0x62Du)) * (((a4 - 907) | 0x5B2) - 1500)) ^ a4)))();
}

void sub_1B02BCEA4()
{
}

uint64_t sub_1B02BCEB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  int v67 = 628203409
      * ((((2 * ((v66 - 192) ^ 0xCB29BA39)) | 0xB4D0945C) - ((v66 - 192) ^ 0xCB29BA39) - 1516784174) ^ 0x13C9FC24);
  *(void *)(v66 - 160) = 0;
  *(void *)(v66 - 152) = 0;
  *(void *)(v66 - 136) = a62;
  *(void *)(v66 - 128) = a40;
  *(void *)(v66 - 192) = a63;
  *(_DWORD *)(v66 - 184) = (v64 + 33) ^ v67;
  *(_DWORD *)(v66 - 144) = 1618566054 - v67;
  *(void *)(v66 - 176) = v63;
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(v65 + 8 * (v64 + 1253)))(v66 - 192);
  int v69 = *(_DWORD *)(v66 - 168);
  LODWORD(STACK[0x594]) = v69;
  return (*(uint64_t (**)(uint64_t))(v65
                                            + 8
                                            * ((668
                                              * (v69 == ((v64 - 240631963) & 0xE57BF9D)
                                                      + 1904944996
                                                      + ((v64 - 1842423963) & 0x6DD1279D)
                                                      - 1802)) ^ v64)))(v68);
}

uint64_t sub_1B02BCFD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v7 = *(void *)(v4 - 0x7DA9E0EFFB1E362ELL);
  int v8 = *(unsigned __int8 *)(v7 + (v3 - 775263483)) ^ 0xD0;
  int v9 = ((*(unsigned __int8 *)(v7 + (v3 - 775263486)) ^ 0xD0) << 24) | ((*(unsigned __int8 *)(v7 + (v3 - 775263485)) ^ 0xD0) << 16) | ((*(unsigned __int8 *)(v7 + v3 - 775263680 + (v6 ^ 0x4D5u) - 165) ^ 0xD0) << 8) | v8;
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * ((84
                                * (((v2 + v9 - 2 * (v9 & (v2 + 2) ^ v8 & 2) + 0x1000000) & 0xFFFFFF ^ 0x8B2764)
                                 - (*(_DWORD *)(a1 + 32) ^ v5) != -1786588337)) ^ v6)))();
}

void sub_1B02BD0A8()
{
}

uint64_t sub_1B02BD144(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  BOOL v12 = *(_DWORD *)STACK[0x2D8] != a8 || v9 != a3 + 17 * (((v8 - 339) | 0x181) ^ 0x198) - 901;
  return (*(uint64_t (**)(void))(v10 + 8 * ((515 * v12) ^ v8)))();
}

uint64_t sub_1B02BD1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((STACK[0x450] == 0) * (((a8 + 867) ^ 0xFFFFF813) + (a8 ^ 0x2A1))) ^ (a8 + 1192))))();
}

void sub_1B02BD1DC()
{
}

uint64_t sub_1B02BD23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v9
                                                                      + 8
                                                                      * (int)(((((a7 - 1073874363) & 0xEACAFAFD ^ v7)
                                                                              + (a7 ^ 0x697))
                                                                             * ((v8 & 0x18) == 0)) ^ a7)))(a1, a2, a3, (a2 - a3));
}

uint64_t sub_1B02BD284(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((((v4 - 699173894) & 0x29AC85C6 ^ 0xFFFFFD5C) + (v4 ^ 0x581))
                                     * (v3 + a3 + 63 < (v3 + a3))) ^ v4)))();
}

void sub_1B02BD2DC()
{
}

uint64_t sub_1B02BD304()
{
  unsigned int v5 = ((v2 + 540740220) & 0xDFC4F7D5) + *(unsigned __int8 *)(v3 + 7) - 854;
  return (*(uint64_t (**)(void))(v4 + 8 * ((557 * ((v1 & (2 * v5)) + (v5 ^ v0) == v0)) ^ v2)))();
}

uint64_t sub_1B02BD354@<X0>(int a1@<W0>, uint64_t a2@<X2>, unint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, void *a6@<X7>, unsigned int a7@<W8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t v35 = 4 * (v29 + 1 + a4);
  unint64_t v36 = (*(_DWORD *)(a22 + v35) ^ a7) + (a2 ^ HIDWORD(v31)) + v30 * (unint64_t)(*(_DWORD *)(*a6 + v35) ^ a7);
  unint64_t v37 = HIDWORD(v23)
      + v26 * (unint64_t)(*(_DWORD *)(*v32 + v35) ^ a7)
      + ((v36 + (v34 ^ (a1 + 1434)) - (a5 & (2 * v36))) ^ a3);
  *(_DWORD *)(a22 + 4 * (v29 + a4)) = v37 + a7 - (v22 & (2 * v37));
  BOOL v39 = v29 + v24 > v25 || v29 + v24 < v33;
  return (*(uint64_t (**)(void))(v28 + 8 * ((v39 | (2 * v39)) ^ v27)))();
}

uint64_t sub_1B02BD3F0(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v32 = v25 + 1;
  *(_DWORD *)(a25 + 4 * v32) = v26;
  int v33 = v27 + v32 + 187;
  BOOL v34 = v33 < a2;
  BOOL v35 = v33 > v29;
  if (a8 > v30 != v34) {
    BOOL v36 = v34;
  }
  else {
    BOOL v36 = v35;
  }
  return (*(uint64_t (**)(void))(v31 + 8 * ((!v36 * a3) ^ v28)))();
}

uint64_t sub_1B02BD3FC(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((((a1 + 744) ^ (v1 == v2)) & 1) == 0) * (a1 ^ 0x16D)) ^ a1)))();
}

uint64_t sub_1B02BD43C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((30 * (v0 ^ 0x216)) ^ 0x12D)
                                * ((v1 ^ 0xAFDB111C) + 2013198080 + ((2 * v1) & 0xD603F3DE ^ 0x8001D1C6) == 1661006063)) ^ v0)))();
}

void sub_1B02BD4B8(_DWORD *a1@<X8>)
{
  unsigned int v4 = -630781757 * (v1[1] - v2) - ((-1261563514 * (v1[1] - v2) - 570577764) & 0x9E0AA314) - 1107023912;
  unsigned char *v5 = ((v3 + 62) ^ HIBYTE(v4) ^ 0xDC) - ((2 * ((v3 + 62) ^ HIBYTE(v4) ^ 0xDC)) & 0xA0) - 48;
  v5[1] = (BYTE2(v4) ^ 5) - ((v4 >> 15) & 0xA0) - 48;
  v5[2] = (BYTE1(v4) ^ 0x51) - ((2 * (BYTE1(v4) ^ 0x51)) & 0xA0) - 48;
  v5[3] = v4 ^ 0x5A;
  _DWORD *v1 = *a1;
}

uint64_t sub_1B02BD5A0(uint64_t a1, uint64_t a2)
{
  if (**(unsigned char **)(a2 + 8)) {
    char v2 = 0x80;
  }
  else {
    char v2 = 126;
  }
  *(unsigned char *)(a1 + 88) = ((**(unsigned char **)(a2 + 8) != 0) ^ 0xE3) + v2;
  return 0;
}

uint64_t sub_1B02BD5D4@<X0>(int a1@<W1>, uint64_t a2@<X4>, int a3@<W8>)
{
  int v7 = a3 + 1;
  *(unsigned char *)(a2 + (v7 + a1)) = *(unsigned char *)(v4 + v5 - 328734969)
                                           + (~(2 * *(unsigned char *)(v4 + v5 - 328734969)) | 0x5F)
                                           - 47;
  return (*(uint64_t (**)(void))(v6 + 8 * ((3358 * ((a1 + v7 + 1) < 0x40)) ^ v3)))();
}

uint64_t sub_1B02BD5DC@<X0>(unsigned int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((435 * (a2 + 1 != v3 + 80)) ^ a1)))();
}

uint64_t sub_1B02BD6AC@<X0>(int a1@<W8>)
{
  int v7 = STACK[0x380];
  char v8 = (_DWORD *)STACK[0x2D8];
  unint64_t v9 = STACK[0x2D8] + 24 * v2;
  *(_DWORD *)(v9 + 8) = v6;
  *(_DWORD *)(v9 + 12) = v4;
  *(void *)(v9 + 16) = STACK[0x2D0];
  *(_DWORD *)(v9 + 24) = v7;
  _DWORD *v8 = ((((a1 + 673) | 0x280) - 795) ^ 0x384) + v1;
  BOOL v11 = v3 + 1790943994 > 199742925 || v3 + 1790943994 < SLODWORD(STACK[0x2A8]);
  return (*(uint64_t (**)(void))(v5 + 8 * (a1 ^ (2162 * v11))))();
}

uint64_t sub_1B02BD728(int a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  int v13 = v8 + v10;
  int v14 = v13 + v9;
  if ((v13 + v9) <= 0x40) {
    int v14 = a3;
  }
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((((((a8 - 1740167442) ^ (a5 - v13 < (a1 + a5 + v11 + v14))) & 1) == 0)
                                * (((a8 + 29624116) | 0x480123D1) ^ (a6 - 170))) ^ (a8 - 1202))))();
}

uint64_t sub_1B02BD7A8()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (v0
                               + 2
                               * (((129654010 - (v3 + 2 * ((((v0 - 542) ^ 0x5915C87C) - v3) & 0xAEA493C0))) & 0x899ED77C ^ 0x88849340)
                                + ((v0 + 130) ^ 0x939D21B8 ^ (v1
                                                            - ((((v0 - 542) ^ 0x5915C87C) - v3) & 0xAEA493C0)
                                                            + 64827005))
                                + 1069391448 != 76352022))))();
}

uint64_t sub_1B02BD848(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  return (*(uint64_t (**)(void))(v11 + 8 * ((a10 + 4 < a10) | (8 * (a10 + 4 < a10)) | v10)))();
}

uint64_t sub_1B02BD8BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((245
                                     * (v1 & ~(STACK[0x2F0] ^ 0x5CF ^ (v0 < ((STACK[0x2F0] + 18) ^ 0x1AC4FF37))))) ^ (STACK[0x2F0] - 35))))();
}

uint64_t sub_1B02BD908()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 - 1892) ^ 0x472 ^ (v2 - 1567856938) & 0x5D7395EF) * (v0 != v1)) | v2)))();
}

uint64_t sub_1B02BD950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  return (*(uint64_t (**)(void))(v53
                              + 8
                              * (((v52 ^ 1 ^ (v51 - 142) ^ LODWORD(STACK[0x41C]) ^ (v52 + 1620742575) & 0x9F656F9F) == a51 - 1127068363) | v52)))();
}

uint64_t sub_1B02BD9A8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((985
                                * ((((*(unsigned __int8 *)(v3 + 2) - 72) << (((v2 - 1) | 0x30) - 49)) & v1)
                                 + ((v2 + 594) ^ (v0 - 851) ^ (*(unsigned __int8 *)(v3 + 2) - 72)) == v0)) ^ v2)))();
}

uint64_t sub_1B02BD9FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return sub_1B02BDA78(a1, a2, 2863671061, a10 - 0x296CA2447D59DC44, a19 - 0x6155FFFFEB445CBDLL, v19 + ((v20 - 822) | 0x20u) + 153214997);
}

uint64_t sub_1B02BDA78()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v0 - 960198629) & 0x393B7DDF) - 826) * (v1 > 1)) ^ v0)))();
}

uint64_t sub_1B02BDAE8()
{
  *(_DWORD *)(v5 - 104) = (v0 ^ 1)
                        - 1759421093 * ((2 * ((v5 - 120) & 0x580C40B8) - (v5 - 120) - 1477198011) ^ 0x148E0F11)
                        + 2121;
  *(void *)(v5 - 120) = v3;
  *(void *)(v5 - 112) = v2;
  uint64_t v6 = (*(uint64_t (**)(uint64_t))(v1 + 8 * ((v0 ^ 1) + 2193)))(v5 - 120);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * ((v4 != (((v0 ^ 1) + 1448642143) & 0xA9A77F2F)
                                                    + 1291556717
                                                    + 145 * (v0 ^ 0xAA)
                                                    - 3178) ^ v0 ^ 1)))(v6);
}

uint64_t sub_1B02BDBA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(v9 - 7 + (v10 + v8 - v12)) = *(void *)(v7 - 7 + (v10 + v8 - v12));
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((234 * (((a6 - 386839985) & 0x170EB37F ^ 0x134) + v12 == (v11 & 0xFFFFFFF8))) ^ a6)))();
}

uint64_t sub_1B02BDC0C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(v5 + 1) == (((((_BYTE)v6 + 30) & 0x5E) - 82) & 0xFE))
                                * (a3 + (v6 ^ (v3 - 199)) + 136)) ^ v6)))();
}

uint64_t sub_1B02BDC54()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (v0 ^ 0x20E)) ^ (1695 * LODWORD(STACK[0x278])))))();
}

void sub_1B02BDCCC()
{
}

uint64_t sub_1B02BDCD8()
{
  BOOL v5 = v1 - 1001858883 <= ((v2 - 602) ^ 0x5E64EB74) && v1 - 1001858883 >= v3;
  return (*(uint64_t (**)(void))(v0 + 8 * (v2 | (8 * v5))))();
}

uint64_t sub_1B02BDD14@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v2 ^ 0x184) + v2 - 124 - 385) * (a1 == v1)) ^ v2)))();
}

uint64_t sub_1B02BDD44@<X0>(int a1@<W8>)
{
  unint64_t v7 = STACK[0x2D8];
  *(_DWORD *)(v7 + 392) = a1;
  *(_DWORD *)(v7 + 396) = STACK[0x53C];
  *(void *)(v7 + 400) = STACK[0x430];
  *(_DWORD *)(v7 + 408) = 538749825 - v6 + LODWORD(STACK[0x380]);
  *(void *)(v7 + 416) = STACK[0x2D0] + (v6 - 987723168);
  int v8 = (*(uint64_t (**)(unint64_t, unint64_t))(v4 + v1 * (uint64_t)v3 + 8))(STACK[0x278], STACK[0x210]);
  return (*(uint64_t (**)(__n128))(v5
                                           + 8
                                           * ((1449
                                             * (v8 + 1904944996 - ((14 * (v2 ^ 0x20A) - 485079138) & (2 * v8)) == 1904944996)) ^ v2)))((__n128)0);
}

uint64_t sub_1B02BDE1C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  uint64_t v50 = *(void *)(a1 + 24);
  *(int8x16_t *)(v49 - 112) = veorq_s8(*(int8x16_t *)*(void *)(a1 + 16), (int8x16_t)xmmword_1B04DA0A0);
  if (a9) {
    BOOL v51 = v50 == 0x7E7E4A92A461383;
  }
  else {
    BOOL v51 = 1;
  }
  int v52 = v51;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 8 * (int)((v52 * ((((a6 - 1436790179) & 0x55A3AE1D) - 1169) ^ (a6 - 970))) ^ a6)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

uint64_t sub_1B02BDE94(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((a2 - v5 - v3 >= (((a3 - 920) | 0x591u) ^ 0x5F5uLL))
                                * ((((a3 - 920) | 0x591) + 257) ^ 0x6E3)) ^ ((a3 - 920) | 0x591))))();
}

uint64_t sub_1B02BDEE4()
{
  int v4 = v1 - 1661970217 + ((v0 + 1557) | 7);
  BOOL v6 = v4 > v0 + 624077086 || v4 < v3 - 1523406038;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1238 * v6) ^ v0)))();
}

uint64_t sub_1B02BDF3C(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((114
                                * (((v4 + 85) ^ (*(_DWORD *)(v6 + v3 * (uint64_t)v5 + 32) == a3 + v4 - 1185 - 649)) & 1)) ^ v4)))();
}

uint64_t sub_1B02BDF7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (int)(((STACK[0x250] & 0xFA90BAC7 ^ 0x4C9) * (v6 == v7)) ^ (a5 - 830))))();
}

uint64_t sub_1B02BDFB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  LODWORD(STACK[0x3A4]) = v10;
  LODWORD(STACK[0x494]) = v13;
  LODWORD(STACK[0x384]) = v11;
  LODWORD(STACK[0x438]) = v14;
  LODWORD(STACK[0x56C]) = v18 + 80;
  unint64_t v19 = STACK[0x5A8];
  int v20 = *(_DWORD *)(STACK[0x5A8] - 0x2B41EA7AD2F8E819);
  LODWORD(STACK[0x4BC]) = v12;
  *(_DWORD *)(v19 - 0x2B41EA7AD2F8E819) = v16
                                          + (v20 ^ v16)
                                          + (v12 ^ v16)
                                          - ((((v20 ^ v16) + (v12 ^ v16)) << (((v15 - 72) | 0x84) + 124)) & v17);
  unint64_t v21 = STACK[0x328];
  int v5 = (*(_DWORD *)(v19 - 0x2B41EA7AD2F8E829) ^ v16) + (v10 ^ v16);
  *(_DWORD *)(v19 - 0x2B41EA7AD2F8E829) = v5 + v16 - (v17 & (2 * v5));
  int v6 = (*(_DWORD *)(v19 - 0x2B41EA7AD2F8E825) ^ v16) + (v13 ^ v16);
  *(_DWORD *)(v19 - 0x2B41EA7AD2F8E825) = v16 + v6 - (v17 & (2 * v6));
  int v7 = (*(_DWORD *)(v19 - 0x2B41EA7AD2F8E821) ^ v16) + (v11 ^ v16);
  *(_DWORD *)(v19 - 0x2B41EA7AD2F8E821) = v7 + v16 - (v17 & (2 * v7));
  int v8 = (*(_DWORD *)(v19 - 0x2B41EA7AD2F8E81DLL) ^ v16) + (v14 ^ v16);
  *(_DWORD *)(v19 - 0x2B41EA7AD2F8E81DLL) = v8 + v16 - (v17 & (2 * v8));
  STACK[0x328] = v21 - 320;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))STACK[0x340])(a1, -1759093154, a3, a4, a5, 208);
}

uint64_t sub_1B02BE034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2
                              + 8
                              * (int)(((*(_DWORD *)(*(void *)(a1 + 8) + v4) != v2) * ((v3 ^ 0xFFFFF897) + (v3 ^ 0x7F1))) ^ v3)))();
}

uint64_t sub_1B02BE070@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((1548 * (*(_DWORD *)STACK[0x2D8] - 1895590901 + 17 * (a1 ^ 0x14Au) - 900 < 0x10)) ^ a1)))();
}

uint64_t sub_1B02BE0BC@<X0>(int a1@<W0>, int a2@<W3>, uint64_t a3@<X8>)
{
  uint64_t v7 = ((a2 + 2094265391) & 0x832C09F7 ^ v5) + a1;
  *(unsigned char *)(v3 + v7) = *(unsigned char *)(a3 + v7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((2944 * (a1 - 1 == v4)) ^ a2)))();
}

uint64_t sub_1B02BE108()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 + 847) ^ 0x7D9) + ((v2 + 847) | 0x209) - 2473) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02BE140()
{
  return (*(uint64_t (**)(void))(v3
                              + 8 * ((((2 * (v1 ^ 0xB95)) ^ 0x734) * ((v2 + v0 - 1877991095) < 8)) ^ v1)))();
}

uint64_t sub_1B02BE1AC(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  v22.n128_u64[0] = 0xA0A0A0A0A0A0A0A0;
  v22.n128_u64[1] = 0xA0A0A0A0A0A0A0A0;
  v23.n128_u64[0] = 0xD0D0D0D0D0D0D0D0;
  v23.n128_u64[1] = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(v21 + 8 * (((3 * (a21 ^ 0x48) + ((a21 + 316) ^ 0x3A)) * (a17 < 0xFFFFFFFE)) ^ a21)))(2286317074, 2008650222, 1325748618, 116547321, 3226488769, 79, 4178419817, a1, a2, a3, a4, v22, v23);
}

uint64_t sub_1B02BE238(uint64_t a1, int a2, uint64_t a3, int a4, int a5)
{
  uint64_t v12 = (v10 + v9 + v8 + a2 - a4);
  *(int8x8_t *)(v6 - 7 + v12) = veor_s8(*(int8x8_t *)(v5 - 7 + v12), (int8x8_t)0xD0D0D0D0D0D0D0D0);
  return (*(uint64_t (**)(void))(v11 + 8 * (((a4 - (v7 & 0xFFFFFFF8) == -8) * (((a5 - 153) | 0x80) - 43)) ^ a5)))();
}

uint64_t sub_1B02BE29C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (v6 + v5)) = *(unsigned char *)(v2 + (v6 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 - 1 != a2) * v3) ^ v4)))();
}

uint64_t sub_1B02BE2C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55)
{
  int v58 = 235795823 * ((((2 * (v57 - 192)) | 0xB570C1C2) - (v57 - 192) - 1522032865) ^ 0xCE1529B8);
  *(_DWORD *)(v57 - 156) = v55 - v58 + 576;
  *(void *)(v57 - 184) = 0x2C2F364FA24C5109;
  *(void *)(v57 - 176) = a54;
  *(void *)(v57 - 168) = a55;
  *(_DWORD *)(v57 - 192) = v58 ^ 0x1474BF4A;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v56 + 8 * (v55 ^ 0xB24)))(v57 - 192);
  return (*(uint64_t (**)(uint64_t))(v56
                                            + 8
                                            * (((*(_DWORD *)(v57 - 160) == 1904944996) * ((v55 - 505) ^ (v55 - 465))) ^ v55)))(v59);
}

uint64_t sub_1B02BE394@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((2014 * (v1 == 1400183651)) ^ 0x3FAu)))();
}

uint64_t sub_1B02BE3CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,char a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34)
{
  BOOL v39 = &a26 + v34;
  unsigned int v54 = &a20 + v34;
  uint64_t v53 = &a24 + v34;
  int v52 = &a34 + v34;
  BOOL v51 = &a28 + v34;
  uint64_t v50 = &a30 + v34;
  uint64_t v49 = &a32 + v34;
  int v40 = &a22 + v34;
  uint64_t v41 = a1[3];
  uint64_t v58 = a1[4];
  uint64_t v42 = a1[2];
  int v57 = v37 + 1191;
  *(void *)(v38 - 136) = *(void *)(v41 - 0x296CA2447D59DC4CLL);
  *(void *)(v38 - 128) = v41;
  *(_DWORD *)(v38 - 120) = v37
                         + 1191
                         + 1225351577
                         * ((937126822 - ((v38 - 144) | 0x37DB6BA6) + ((v38 - 144) | 0xC8249459)) ^ 0xEBBE4C4F);
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = a2;
  int v43 = (v37 + 21) | 0x40;
  *(void *)(v38 - 144) = &a26 + v34;
  int v44 = (v37 - 212) | 0x100;
  uint64_t v55 = 8 * (v37 ^ 0x83D);
  (*(void (**)(uint64_t))(v36 + v55))(v38 - 144);
  *(void *)(v38 - 112) = v40;
  *(void *)(v38 - 144) = v42;
  *(void *)(v38 - 136) = v39;
  *(void *)(v38 - 128) = v41;
  int v56 = v37;
  *(_DWORD *)(v38 - 120) = v37
                         + 460628867 * ((((2 * (v38 - 144)) | 0x4267FB8E) - (v38 - 144) - 557055431) ^ 0x6DA57FBA)
                         + 1612;
  (*(void (**)(uint64_t))(v36 + 8 * (v37 + 1990)))(v38 - 144);
  *(_DWORD *)(v38 - 120) = v37
                         + 1191
                         + 1225351577
                         * ((-940912068 - ((v38 - 144) | 0xC7EAD23C) + ((v38 - 144) | 0x38152DC3)) ^ 0x1B8FF5D5);
  *(void *)(v38 - 136) = v39;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 144) = v54;
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  (*(void (**)(uint64_t))(v36 + v55))(v38 - 144);
  *(_DWORD *)(v38 - 120) = v37
                         + 1191
                         + 1225351577
                         * ((((v38 - 144) | 0x1A50F114) - (v38 - 144) + ((v38 - 144) & 0xE5AF0EE8)) ^ 0x39CA2902);
  *(void *)(v38 - 136) = v54;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 144) = v53;
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  uint64_t v45 = 8 * (v37 + 1997);
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  *(void *)(v38 - 136) = v53;
  *(void *)(v38 - 128) = v41;
  *(_DWORD *)(v38 - 120) = v57
                         + 1225351577
                         * (((((v38 - 144) | 0x4C7FE158) ^ 0xFFFFFFFE) - (~(v38 - 144) | 0xB3801EA7)) ^ 0x901AC6B1);
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  *(void *)(v38 - 144) = v52;
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  *(_DWORD *)(v38 - 120) = v57 + 1225351577 * ((((v38 - 144) | 0x64306AB1) - ((v38 - 144) & 0x64306AB1)) ^ 0x47AAB2A7);
  *(void *)(v38 - 136) = v52;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  *(void *)(v38 - 144) = v51;
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  *(_DWORD *)(v38 - 120) = v57
                         + 1225351577
                         * (((((v38 - 144) | 0x7D887A12) ^ 0xFFFFFFFE) - (~(v38 - 144) | 0x827785ED)) ^ 0xA1ED5DFB);
  *(void *)(v38 - 136) = v51;
  *(void *)(v38 - 128) = v41;
  *(void *)(v38 - 144) = v50;
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  *(_DWORD *)(v38 - 120) = v57 + 1225351577 * ((v38 - 144) ^ 0x239AD816);
  *(void *)(v38 - 144) = v49;
  *(void *)(v38 - 136) = v50;
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  *(void *)(v38 - 128) = v41;
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  *(void *)(v38 - 144) = v40;
  *(void *)(v38 - 136) = v49;
  *(_DWORD *)(v38 - 120) = v57
                         + 1225351577
                         * ((((v38 - 144) | 0xBF4ADCF1) - (v38 - 144) + ((v38 - 144) & 0x40B52308)) ^ 0x9CD004E7);
  *(void *)(v38 - 112) = v42;
  *(void *)(v38 - 104) = v40;
  *(void *)(v38 - 128) = v41;
  (*(void (**)(uint64_t))(v36 + v45))(v38 - 144);
  uint64_t v46 = *(void *)(v41 - 0x296CA2447D59DC54);
  *(_DWORD *)(v38 - 128) = (v56 + 1026) ^ (535753261
                                         * ((163085383 - ((v38 - 144) | 0x9B87C47) + ((v38 - 144) | 0xF64783B8)) ^ 0xFCB38D97));
  *(void *)(v38 - 144) = v46;
  *(void *)(v38 - 136) = v35;
  (*(void (**)(uint64_t))(v36 + 8 * (v56 ^ 0x823)))(v38 - 144);
  *(_DWORD *)(v38 - 144) = (v56 - 49) ^ (1178560073 * ((v38 + 823792561 - 2 * ((v38 - 144) & 0x311A1441)) ^ 0x8B8E6C23));
  *(void *)(v38 - 136) = v58;
  uint64_t v47 = (*(uint64_t (**)(uint64_t))(v36 + 8 * (v56 ^ 0x82A)))(v38 - 144);
  return (*(uint64_t (**)(uint64_t))(v36
                                            + 8
                                            * ((255
                                              * (v43 + *(_DWORD *)(v38 - 140) - 1334526198 - 459 >= (v44 ^ 0x7FFFFE5Bu))) ^ v56)))(v47);
}

uint64_t sub_1B02BE904@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v13 = (a2 - 1800476003);
  *(unsigned char *)(a3 + v13) = *(unsigned char *)(v5 + (v13 & 0xF)) ^ *(unsigned char *)(v3 + v13) ^ *(unsigned char *)(v4 + (v13 & 0xF)) ^ (23 * (v13 & 0xF)) ^ *(unsigned char *)(v6 + (v13 & 0xF) + ((479 * (v7 ^ 0x6E1u)) ^ 0x59CLL));
  unsigned int v14 = a2 + 2030730640;
  uint64_t v15 = (a2 + 1);
  LODWORD(v13) = (v9 > 0x1BA46D0D) ^ (v14 < v8);
  BOOL v16 = v14 < v10;
  if (v13) {
    BOOL v16 = v9 > 0x1BA46D0D;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8 * ((v16 * v11) ^ v7)))(a1, v15);
}

uint64_t sub_1B02BE9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  return (*(uint64_t (**)(void))(v11
                              + 8
                              * (((a10 != ((239 * (v12 ^ 0x225)) ^ (v10 - 166))) * (((v12 - 347) | 0x112) ^ 0x195)) ^ v12)))();
}

uint64_t sub_1B02BE9F8()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (((*v2 > ((v0 - 2162) | 0x182u) - 446) * (((v0 - 2050) | 0x112) ^ 0x1CC)) ^ v0)))();
}

void sub_1B02BEA3C()
{
}

void sub_1B02BEA7C()
{
}

uint64_t sub_1B02BEA88(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v2 = 3804331 * ((((2 * a1) | 0x53BC0568) - a1 + 1445068108) ^ 0xD70B2742);
  int v3 = *(_DWORD *)(a1 + 40) + v2;
  long long v4 = *(_OWORD *)(a1 + 24);
  uint64_t v5 = *(void *)a1;
  int v6 = *(_DWORD *)(a1 + 48) ^ v2;
  unsigned int v7 = 1224239923
     * (((&v9 ^ 0x4AA8E696) & 0xC3255823 | ~(&v9 ^ 0x4AA8E696 | 0xC3255823)) ^ 0x84C1BC9D);
  uint64_t v12 = *(void *)(a1 + 8);
  int v14 = v3 - 1695027317 + v7 + 982;
  long long v11 = v4;
  unsigned int v10 = (v6 ^ 0xB559A20D) - v7 - 8988812 + ((2 * v6) & 0xF3F3FDB8 ^ 0x9140B9A0);
  uint64_t v9 = v5;
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08D3590 + v3 - 1695027317)
                                                + 8 * (v3 ^ 0x65081975)
                                                - 12))(&v9);
  *(_DWORD *)(a1 + 16) = v13;
  return result;
}

uint64_t sub_1B02BEBFC(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)a1 = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 24);
  return 0;
}

uint64_t sub_1B02BEC14()
{
  STACK[0x2D0] = STACK[0x430];
  LODWORD(STACK[0x380]) = 987723168;
  return sub_1B029B2A4();
}

uint64_t sub_1B02BEC48@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>)
{
  int v10 = a4 ^ 0x1C6;
  uint64_t v11 = a2 + a1 + (((((a4 ^ 0x1C6) - 268) | 0x856) - 1611) ^ (a3 + 532));
  uint64_t v12 = v11 + a5;
  uint64_t v13 = v11 & 0xF;
  unint64_t v14 = v13 + v8 - v12;
  uint64_t v15 = (v13 | v6) - v12;
  unint64_t v16 = v13 + v7 - v12;
  BOOL v20 = (unint64_t)(v5 - a5) < 0x10 || v14 < 0x10 || (unint64_t)(v15 + 5) < 0x10 || v16 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((26 * v20) ^ v10)))();
}

uint64_t sub_1B02BECCC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 703) ^ 0x315) + ((v2 - 703) | 0x6A) + 1709) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02BED08@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  *(unsigned char *)(v6 + (a2 + v4 + v5 + a1)) = *(unsigned char *)(v3 + (a2 + v4 + v5 + a1));
  return (*(uint64_t (**)(void))(v7 + 8 * ((31 * (a1 - 1 != a3)) ^ (a2 + v4 + 664))))();
}

uint64_t sub_1B02BED44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((((((461 * (v16 ^ 0x673)) ^ (v15 == 0)) & 1) == 0) * ((v16 - 727) ^ 0x34D)) ^ v16)))(v18 + 0x10A288778C9CB271, a2, a3, a4, a5, a6, a7, a8, a9, a1, a11, a12, a13, a14, a15, v18 + 0x10A288778C9CB5A1, v18 + 0x10A288778C9CB491);
}

uint64_t sub_1B02BEE64(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a1 + 88) = 97;
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 4);
  *(void *)(a1 + 80) = *(void *)(a2 + 8);
  return 0;
}

void sub_1B02BEE84()
{
}

uint64_t sub_1B02BEF10()
{
  return (*(uint64_t (**)(void))(v0 + 8 * (((8 * (((v3 << v5) & v2) == v4)) | (16 * (((v3 << v5) & v2) == v4))) ^ v1)))();
}

uint64_t sub_1B02BEF40(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  int v19 = (v11 ^ v14)
      + v8
      + (((v10 ^ a1) + v14 - (v17 & (2 * (v10 ^ a1)))) ^ v9)
      + *(_DWORD *)(a3 + 4 * (a8 + v15))
      + (*(_DWORD *)(v16 + 4 * (*(unsigned char *)(a2 + a8 + v15) - 118)) ^ v12);
  unsigned int v20 = (v19 + v14 - (v17 & (2 * v19))) ^ v14;
  int v21 = ((v20 << (*(unsigned char *)(a4 + a8 + v15) - 8)) | (v20 >> (8 - *(unsigned char *)(a4 + a8 + v15)))) + (a1 ^ v14);
  return (*(uint64_t (**)(void))(v13 + 8 * ((432 * (a8 + 1 != v18 + 48)) ^ a5)))(v21 + v14 - (v17 & (2 * v21)));
}

void sub_1B02BEFFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1178560073 * ((-2 - ((a1 | 0xBDAC54F5) + (~a1 | 0x4253AB0A))) ^ 0xF8C7D368));
  __asm { BRAA            X15, X17 }
}

uint64_t sub_1B02BF13C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, unsigned int a13, int a14, uint64_t a15, int a16, int a17)
{
  unsigned int v21 = 628203409
      * (((&a12 | 0x55A11BEF) - &a12 + (&a12 & 0xAA5EE410)) ^ 0xD72917DC);
  a15 = a11;
  a12 = &STACK[0x53B515D5D604607F];
  a17 = v21 ^ 0x6CC68A94;
  a13 = -1487096439 - v21;
  a14 = v20 - v21 - 2024873383;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v18 + 8 * (v20 + 2041)))(&a12);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((2360 * (a16 == v19 + v17)) ^ v20)))(v22);
}

uint64_t sub_1B02BF208@<X0>(uint64_t a1@<X1>, int a2@<W8>)
{
  unint64_t v4 = ((unint64_t)&STACK[0x460] ^ 0x7950DFFFA7D5377FLL)
     - 0x710088C88441017FLL
     + ((2 * (void)&STACK[0x460]) & 0xF2A1BFFF4FAA6EF0);
  unint64_t v5 = v2 - 1;
  STACK[0x460] = v5;
  *(unsigned char *)(a1 + v5) = ((a2 - 104) & 0xFD ^ v4 ^ 0xF7) * (v4 + 17);
  return (*(uint64_t (**)(void))(v3 + 8 * ((3318 * (STACK[0x460] == 0)) ^ a2)))();
}

uint64_t sub_1B02BF2A4@<X0>(int a1@<W1>, int a2@<W8>)
{
  _DWORD *v4 = 1;
  uint64_t v7 = *v5;
  unint64_t v8 = 1224239923 * ((~(v2 | 0x8112D92777E3A843) + (v2 & 0x8112D92777E3A843)) ^ 0x56B793B17AAFAA6BLL);
  *(_DWORD *)(v6 - 116) = 821170321 - v8 + a2;
  *(_DWORD *)(v6 - 112) = a2 - v8 + 405007408;
  *(_DWORD *)(v6 - 120) = (a2 + 405007394) ^ v8;
  STACK[0x588] = v8 ^ 0x13FF;
  STACK[0x578] = v7 + v8;
  *(_DWORD *)(v6 - 128) = 1 - v8;
  *(_DWORD *)(v6 - 124) = a2 - v8 + 405007515;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (a1 + a2 + 2388)))(v6 - 152);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v6 - 144)))(v9);
}

uint64_t sub_1B02BF2AC()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((2702 * (v3 == v1 + 21 * v0 - 63)) ^ v2)))();
}

void sub_1B02BF304(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, uint64_t a4, unsigned int a5, uint64_t a6, uint64_t a7, int a8)
{
  int v9 = v8 - (**(unsigned char **)(a2 + 8) == 0);
  *(_DWORD *)(*(void *)(a1 + 96) + 800) = 2146929045;
  *(_DWORD *)(*(void *)(a1 + 96) + 804) = 1388059666;
  *(void *)(*(void *)(a1 + 96) + 808) = *(void *)(a1 + 96) + 816;
  uint64_t v10 = *(void *)(a1 + 96) + 0x6155FFFFEB445FE5;
  uint64_t v11 = *(void *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v9);
  unsigned int v12 = 535753261 * ((&a5 & 0xDC4E0F13 | ~(&a5 | 0xDC4E0F13)) ^ 0x2945FEC3);
  a5 = v12 + 407;
  a8 = v9 - v12 + 175245391;
  a6 = v10;
  a7 = v11;
  (*(void (**)(unsigned int *))(a3 + 19168))(&a5);
  JUMPOUT(0x1B02BF410);
}

void sub_1B02BF438(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  *(unsigned char *)(a7 + (((v7 - 954) | 0x480) ^ (a2 - 643)) + v9) = v8;
  JUMPOUT(0x1B02AA6E0);
}

uint64_t sub_1B02BF474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((1542 * (a21 == (v21 ^ 0xCEB8599))) ^ v21)))();
}

uint64_t sub_1B02BF4B8@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x314]) = v2;
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((124 * (*(_DWORD *)(STACK[0x228] + 360) - 1017008128 < ((a1 - 907) ^ 0xFFFFFC7B))) ^ a1)))();
}

void sub_1B02BF500(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 1178560073 * (a1 ^ 0xBA947862);
  __asm { BRAA            X8, X17 }
}

void sub_1B02BF5BC()
{
}

uint64_t sub_1B02BF7E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, unsigned int a18, unsigned int a19, uint64_t a20,int a21,int a22)
{
  unsigned int v24 = 628203409 * (((&a17 | 0xDFD5A239) - (&a17 & 0xDFD5A239)) ^ 0x5D5DAE0A);
  a20 = a15;
  a17 = &STACK[0x53B515D5D60460B7];
  a18 = -1487096439 - v24;
  a19 = -2024873083 - v24;
  a22 = v24 ^ 0x670DC13A;
  uint64_t v25 = (*(uint64_t (**)(unint64_t **))(v23 + 18728))(&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((1566 * (a21 == v22)) ^ 0x37Du)))(v25);
}

uint64_t sub_1B02BF8D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 8 * (((v10 + ((v9 - 146892615) & 0x8C1635F) + 157 == 1904945503) * (((v9 - 146892615) & 0x8C1635F) + 1348)) ^ (v9 - 146892615) & 0x8C1635F)))(a1, a2, a3, a4, a5, a6, a7, a8, a9);
}

uint64_t sub_1B02BF934(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,unsigned int a31)
{
  unsigned int v36 = v31 & 0x948E99D7;
  int v37 = 628203409 * ((((v35 - 152) | 0x19301C5D) + (~(v35 - 152) | 0xE6CFE3A2)) ^ 0x9BB8106F);
  *(void *)(v35 - 112) = a8;
  *(void *)(v35 - 104) = a12;
  *(void *)(v35 - 152) = a13;
  *(void *)(v35 - 144) = a11;
  *(void *)(v35 - 128) = a14;
  *(_DWORD *)(v35 - 136) = (v31 & 0x948E99D7) - v37 + 217;
  *(_DWORD *)(v35 - 132) = v34 - v37 + 186887302;
  (*(void (**)(uint64_t))(v33 + 8 * (int)((v31 & 0x948E99D7) + 2127)))(v35 - 152);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v33
                                                                                        + 8
                                                                                        * (int)(((((v36 - 41) ^ (*(_DWORD *)(v35 - 120) == v32)) & 1)
                                                                                               * (((v36 + 1111544085) | 0x10042D00) ^ 0x5244FF75)) ^ v36)))(2258355718, 2036609816, 929802700, a7, 2914713824, a31);
}

void sub_1B02BFA58(unint64_t a1)
{
  STACK[0x510] = a1;
  LODWORD(STACK[0x428]) = v1;
  JUMPOUT(0x1B02BFA70);
}

uint64_t sub_1B02BFABC()
{
  int v4 = v1 - 1034482444;
  BOOL v5 = v4 < -1793906426;
  BOOL v6 = v3 - 1034482444 < v4;
  if (v5 != v3 - 1034482444 < (int)((v2 ^ 0x557) - 1793906657)) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((7 * v6) | v2)))();
}

uint64_t sub_1B02BFB28()
{
  int v6 = v0 + v4;
  *(_DWORD *)(*v2 + 4 * (v6 - 1)) = v1;
  return (*(uint64_t (**)(void))(v5 + 8 * (int)((120 * ((v6 - 2) >> 31)) ^ v3)))();
}

uint64_t sub_1B02BFB6C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  if (a18 < a17 != a32 + 999778816 < (a3 - 2027386547)) {
    BOOL v33 = a32 + 999778816 < (a3 - 2027386547);
  }
  else {
    BOOL v33 = a32 + 999778816 > a18;
  }
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * ((v33 * ((a3 + 463) ^ 0x20E)) ^ (a3 + 2226))))(3414509283);
}

void sub_1B02BFBEC()
{
}

uint64_t sub_1B02BFBF4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, int a6, unint64_t *a7, int a8)
{
  int v11 = a1 ^ 0x5D;
  int v12 = (129 * (a1 ^ 0x180) - 350) | 0x202;
  int v13 = 1755732067 * ((&a4 + 1514539051 - 2 * ((unint64_t)&a4 & 0x5A46082B)) ^ 0x8480B5F0);
  a8 = v13 ^ 0x6B784609;
  a7 = &STACK[0x486D4A085FE6BE42];
  a4 = &STACK[0x460F4FD2677B79A];
  a5 = v10;
  a6 = ((a1 ^ 0x5D) + 84) ^ v13;
  uint64_t v14 = (*(uint64_t (**)(unint64_t **))(v9 + 8 * (a1 ^ 0x945)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((1767 * (*(_DWORD *)(v10 - 0x7DA9E0EFFB1E3616) == (v12 ^ (v8 - 545)))) ^ v11)))(v14);
}

void sub_1B02BFCF8()
{
  LODWORD(STACK[0x374]) = v0 + 125;
  JUMPOUT(0x1B02A959CLL);
}

uint64_t sub_1B02BFD08@<X0>(uint64_t a1@<X8>)
{
  BOOL v8 = v4 > 0x9C0C235C;
  int v9 = v2 + 21;
  *(unsigned char *)(a1 + (v9 + v6 - 320110289)) = *(unsigned char *)(v1 + (v9 + v6 - 320110289)) ^ *((unsigned char *)*(&off_1F08D3590 + v2 - 1355) + ((v9 + v6 - 320110289) & 0xFLL) - 8) ^ *((unsigned char *)*(&off_1F08D3590 + v2 - 1389) + ((v2 + 21 + v6 + 47) & 0xF) - 8) ^ (97 * ((v9 + v6 + 47) & 0xF)) ^ *((unsigned char *)*(&off_1F08D3590 + v2 - 1404) + ((v2 + 21 + v6 + 47) & 0xF) - 4) ^ 0xD0;
  if (v8 == v6 + 1356817271 < v3) {
    BOOL v8 = v6 + 1356817271 < v5;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((71 * v8) ^ v2)))();
}

uint64_t sub_1B02BFDD4@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((((a2 + a1 + v3 - 1451 + 113) | 0x200) + 2874) * (a3 == 24)) ^ v3)))();
}

uint64_t sub_1B02BFE0C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((19
                                * (v1 - 1334526198 + a1 + 196 + ((a1 + 1751891570) & 0x97943DE7) - 1527 < 0x7FFFFFFF)) ^ a1)))();
}

uint64_t sub_1B02BFE64()
{
  STACK[0x2F0] = v0;
  int v3 = v0 - 295;
  int v4 = (v0 - 709) | 2;
  *(void *)(v2 - 176) = &STACK[0x59BC996355F9F158];
  LOBYTE(STACK[0x191C]) = -91 * ((-2 - ((~(v2 + 64) | 0xA7) + ((v2 + 64) | 0x58))) ^ 0xF3) + 67;
  *(void *)(v2 - 192) = &STACK[0x4F4E56651A0E7CDF];
  *(_DWORD *)(v2 - 184) = 1759421093 * ((-2 - ((~(v2 - 192) | 0xA03DDEA7) + ((v2 - 192) | 0x5FC22158))) ^ 0x13406EF3)
                        + v0
                        - 295
                        - 5;
  uint64_t v5 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (int)((v0 - 295) ^ 0xB10)))(v2 - 192);
  int v6 = *(_DWORD *)(v2 - 168);
  LODWORD(STACK[0x374]) = v6;
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (((v6 == 1904944996) * (v4 ^ 0x5EE)) ^ v3)))(v5);
}

uint64_t sub_1B02BFF64@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((a1 == ((v2 - 498388584) & 0x869195C4 ^ (v4 + 196))) * ((v2 ^ (v2 + 578)) - 341)) ^ (v3 + v2 + 350))))();
}

uint64_t sub_1B02BFFB4@<X0>(int a1@<W2>, int a2@<W6>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(void))(a3 + 8 * (int)((41 * (((-1 - a2) >> 30) & 1)) | a1)))();
}

void sub_1B02C0054(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  int v1 = 1374699841 * (((a1 | 0x3B067EF8) - (a1 & 0x3B067EF8)) ^ 0x56F266F1);
  int v2 = *(_DWORD *)(a1 + 4) ^ v1;
  int v3 = *(_DWORD *)(a1 + 24) ^ v1;
  uint64_t v4 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 16);
  unsigned int v7 = 3804331 * ((2 * (v10 & 0x765B1DE0) - v10 + 161800734) ^ 0x7771C7E8);
  int v8 = (*(_DWORD *)a1 - v1) ^ v7;
  int v14 = v2 - v7 + 1695026170;
  int v15 = v7 ^ (1946793341 * v3 + 1719642487);
  uint64_t v12 = v5;
  uint64_t v13 = v4;
  v10[0] = v6;
  v10[1] = v6;
  unsigned int v16 = v8 ^ 0x80343AD6;
  int v9 = (char *)*(&off_1F08D3590 + v2 - 1147) - 12;
  (*(void (**)(void *))&v9[8 * (v2 ^ 0xC74)])(v10);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02C01C4(int a1)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((308
                                * (((v2 + ((a1 - 642) | 0x101) - 259) & (2 * (*(unsigned __int8 *)(v3 + 1) - 134)))
                                 + ((a1 - 219) ^ (v1 - 359) ^ (*(unsigned __int8 *)(v3 + 1) - 134)) == v1)) ^ a1)))();
}

uint64_t sub_1B02C021C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (((*(_DWORD *)(a7 + 48 * ((((v7 - 284) | 9) ^ (a1 + 2548)) + v8) + 36) == v8)
                                * ((v7 - 2031810611) & 0x791AF71F ^ 0x36C)) ^ v7)))();
}

void sub_1B02C0284()
{
}

uint64_t sub_1B02C028C@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27,int a28,uint64_t a29,unint64_t a30)
{
  int v36 = v30 + 319;
  LODWORD(STACK[0x298]) = a2;
  LODWORD(STACK[0x29C]) = a27;
  STACK[0x2A0] = a30;
  LODWORD(STACK[0x2A8]) = (((v30 + 37791263) | 0x50045901) ^ 0x725854A8) - v34 + a28;
  STACK[0x2B0] = v31 + (v34 - 987723168);
  int v37 = (*(uint64_t (**)(uint64_t, uint64_t))(a1 + 48 * v35 + 8))(a11, a23);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v33
                                                              + 8
                                                              * ((1105 * (v37 + v32 - ((2 * v37) & 0xE3164EC8) == v32)) ^ v36)))(2258355718, 2036609816, 929802700);
}

uint64_t sub_1B02C0360()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v2 + v1 + 993039426 >= ((v0 + 1896474569) & 0x8EF617D5 ^ 0x38D))
                                * (((v0 - 245365898) & 0xE9FFFBB) - 1797)) ^ v0)))();
}

uint64_t sub_1B02C03D0(uint64_t a1, uint64_t a2, int a3)
{
  int v8 = v4 - 1182752758;
  if ((v8 + 1) > 0x40) {
    int v9 = v8 + 1;
  }
  else {
    int v9 = 64;
  }
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((44
                                * (-v5
                                 - v6
                                 + ((v3 - 1242557173) & 0x4A0FE5F4 ^ (a3 + 400) ^ ((v3 - 1588) | 0x502u))
                                 + v9 < 0xF)) ^ v3)))();
}

uint64_t sub_1B02C049C(char a1)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((1394
                                * ((((*(unsigned __int8 *)(v3 + 8) - 4) << a1) & (v2 + v4 - 67 - 577))
                                 + ((*(unsigned __int8 *)(v3 + 8) - 4) ^ v1) == v1)) | v4)))();
}

uint64_t sub_1B02C04E4@<X0>(int a1@<W8>)
{
  if ((v1 - 216761670) > 0x18 || ((1 << (v1 - 70)) & 0x1094001) == 0) {
    JUMPOUT(0x1B029B4F0);
  }
  return (*(uint64_t (**)(void))(v2
                              + 8 * ((220 * ((((a1 & 0xFFFFFFFFFFFFFFFuLL) - 1 < 2) ^ 0xCF) & 1)) ^ (v3 - 552399436))))();
}

uint64_t sub_1B02C0574(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44)
{
  if (v45 == 1017008131 || v45 == 1017008134)
  {
    int v48 = STACK[0x2F0] + 949;
    LOBYTE(STACK[0x1857]) = LOBYTE(STACK[0x1867]) - ((2 * LOBYTE(STACK[0x1867])) & 0xA0) - 48;
    LOBYTE(STACK[0x1856]) = v48 + LOBYTE(STACK[0x1866]) - ((2 * LOBYTE(STACK[0x1866])) & 0xA0) - 106;
    LOBYTE(STACK[0x1855]) = LOBYTE(STACK[0x1865]) - ((2 * LOBYTE(STACK[0x1865])) & 0xA0) - 48;
    LOBYTE(STACK[0x1854]) = LOBYTE(STACK[0x1864]) - ((2 * LOBYTE(STACK[0x1864])) & 0xA0) - 48;
    LOBYTE(STACK[0x1853]) = LOBYTE(STACK[0x1863]) - ((2 * LOBYTE(STACK[0x1863])) & 0xA0) - 48;
    LOBYTE(STACK[0x1852]) = LOBYTE(STACK[0x1862]) - ((2 * LOBYTE(STACK[0x1862])) & 0xA0) - 48;
    LOBYTE(STACK[0x1851]) = LOBYTE(STACK[0x1861]) - ((2 * LOBYTE(STACK[0x1861])) & 0xA0) - 48;
    LOBYTE(STACK[0x1850]) = LOBYTE(STACK[0x1860]) - ((2 * LOBYTE(STACK[0x1860])) & 0xA0) - 48;
    LOBYTE(STACK[0x184F]) = LOBYTE(STACK[0x185F]) - ((2 * LOBYTE(STACK[0x185F])) & 0xA0) - 48;
    LOBYTE(STACK[0x184E]) = LOBYTE(STACK[0x185E]) - ((2 * LOBYTE(STACK[0x185E])) & 0xA0) - 48;
    LOBYTE(STACK[0x184D]) = LOBYTE(STACK[0x185D]) - ((2 * LOBYTE(STACK[0x185D])) & 0xA0) - 48;
    LOBYTE(STACK[0x184C]) = LOBYTE(STACK[0x185C]) - ((2 * LOBYTE(STACK[0x185C])) & 0xA0) - 48;
    LOBYTE(STACK[0x184B]) = LOBYTE(STACK[0x185B]) - ((2 * LOBYTE(STACK[0x185B])) & 0xA0) - 48;
    LOBYTE(STACK[0x184A]) = LOBYTE(STACK[0x185A]) - ((2 * LOBYTE(STACK[0x185A])) & 0xA0) - 48;
    LOBYTE(STACK[0x1849]) = LOBYTE(STACK[0x1859]) - ((2 * LOBYTE(STACK[0x1859])) & 0xA0) - 48;
    int v45 = STACK[0x564];
    char v49 = LOBYTE(STACK[0x1858]) - ((2 * LOBYTE(STACK[0x1858])) & 0xA0) - 48;
  }
  else
  {
    int v48 = (STACK[0x2F0] - 49316934) & 0x2F087FA;
    LOBYTE(STACK[0x1857]) = STACK[0x5CF];
    LODWORD(STACK[0x1853]) = STACK[0x5CB];
    STACK[0x184B] = STACK[0x5C3];
    LOWORD(STACK[0x1849]) = STACK[0x5C1];
    char v49 = STACK[0x5C0];
  }
  LOBYTE(STACK[0x1848]) = v49;
  unint64_t v50 = STACK[0x550];
  int v51 = 1374699841 * ((((v47 - 192) | 0x54C84E72) - ((v47 - 192) & 0x54C84E72)) ^ 0x393C567B);
  *(_DWORD *)(v47 - 192) = v51
                         + ((v48 - 436) | 0x218)
                         + LODWORD(STACK[0x52C])
                         + 1284791913
                         - ((2 * LODWORD(STACK[0x52C])) & 0x9928CC0E);
  *(_DWORD *)(v47 - 188) = (v48 - 568) ^ v51;
  *(void *)(v47 - 136) = v44;
  *(void *)(v47 - 184) = a44;
  *(void *)(v47 - 176) = v50;
  *(_DWORD *)(v47 - 168) = (v45 - 167288835) ^ v51;
  *(void *)(v47 - 160) = a37;
  *(void *)(v47 - 152) = &STACK[0x1848];
  LOBYTE(STACK[0x1930]) = (65 * ((((v47 + 64) | 0x72) - ((v47 + 64) & 0x72)) ^ 0x7B)) ^ 0x31;
  uint64_t v52 = (*(uint64_t (**)(uint64_t))(v46 + 8 * (v48 + 480)))(v47 - 192);
  int v53 = *(_DWORD *)(v47 - 140);
  LODWORD(STACK[0x374]) = v53;
  return (*(uint64_t (**)(uint64_t))(v46 + 8 * ((114 * (v53 != 1904944996)) ^ v48)))(v52);
}

uint64_t sub_1B02C0844@<X0>(int a1@<W1>, unint64_t a2@<X3>, int a3@<W4>, int a4@<W5>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  LODWORD(STACK[0x2C0]) = a1;
  STACK[0x2B8] = a2;
  if (v33 == 568732680)
  {
    int v35 = 15;
  }
  else
  {
    if (v33 != a4)
    {
      LODWORD(STACK[0x278]) = 0;
      LODWORD(STACK[0x2A8]) = 0;
      goto LABEL_7;
    }
    int v35 = 18;
  }
  LODWORD(STACK[0x2A8]) = v35;
  LODWORD(STACK[0x278]) = 1;
LABEL_7:
  LODWORD(STACK[0x2B0]) = a3 + 271;
  int v36 = 535753261 * (((((v34 - 192) | 0xCCB4D43A) ^ 0xFFFFFFFE) - (~(v34 - 192) | 0x334B2BC5)) ^ 0x39BF25EA);
  *(void *)(v34 - 168) = a5 + 0x6155FFFFEB445ED5;
  *(void *)(v34 - 192) = v31 + 1168;
  *(void *)(v34 - 184) = 0;
  *(_DWORD *)(v34 - 156) = (a3 + 133) ^ v36;
  unint64_t v37 = STACK[0x2E0];
  *(void *)(v34 - 152) = 0;
  *(void *)(v34 - 144) = v37;
  *(void *)(v34 - 136) = a5 + 0x6155FFFFEB445FE5;
  *(void *)(v34 - 128) = a31;
  *(_DWORD *)(v34 - 176) = LODWORD(STACK[0x2D8]) - v36 - 397111170;
  uint64_t v38 = (*(uint64_t (**)(uint64_t))(v32 + 8 * (a3 + 1529)))(v34 - 192);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t, uint64_t))(v32 + 8 * ((3250 * (*(_DWORD *)(v34 - 160) == (LODWORD(STACK[0x2C8]) ^ 0x718B2545))) ^ LODWORD(STACK[0x2B0]))))(v38, LODWORD(STACK[0x2C0]), 0x68B8072B5747E0EALL, STACK[0x2B8], STACK[0x2F0], 568732676, 2389998781, 3616737925);
}

void sub_1B02C09D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11)
{
  int v15 = v12 - ((v13 - 1005589381) & (v14 - 48517450)) - 527053312;
  unsigned int v16 = 1755732067 * ((2 * (&a9 & 0xB288B38) - &a9 - 187206461) ^ 0x2A11C918);
  a9 = v15 ^ v16;
  a10 = (v13 + 569) ^ v16;
  a11 = v11;
  JUMPOUT(0x1B02B1C68);
}

uint64_t sub_1B02C0A58(int a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (int)(((*(_DWORD *)(a4 + 48 * (int)(v4 + a1 + (v6 & 0xE7A246F5))) == 1644700558)
                                     * (v6 & 0xE7A246F5 ^ 0x6F5)) | v6 & 0xE7A246F5)))();
}

uint64_t sub_1B02C0AB0(_DWORD *a1)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  unsigned int v1 = *a1
     - 1225351577 * (((a1 | 0xD0007703) - a1 + (a1 & 0x2FFF88FC)) ^ 0xF39AAF15);
  uint64_t v2 = *(void *)((char *)*(&off_1F08D3590 + (int)(v1 ^ 0x7F7DFD19)) - 4);
  unsigned int v4 = v1 + 235795823 * (&v4 ^ 0x94AD4959) - 2138962167;
  uint64_t v5 = v2;
  return (*(uint64_t (**)(unsigned int *))((char *)*(&off_1F08D3590 + (int)(v1 ^ 0x7F7DFD27))
                                                   + 8 * (int)(v1 ^ 0x7F7DF420)
                                                   - 12))(&v4);
}

uint64_t sub_1B02C0BAC(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F08D39C8
                                            - 12
                                            + 8 * ((60 * (*(_DWORD *)(a2 + 4) != 1400183664)) ^ 0x10Fu)))(4294925278);
}

uint64_t sub_1B02C0BF0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  *(void *)(a1 + v2 + ((347 * (a2 ^ 0x35Eu)) ^ 0xFFFFFFFF93865DA2)) = v5;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1172 * ((v3 & 0xFFFFFFFFFFFFFFF8) == 8)) ^ a2)))();
}

void sub_1B02C0C44()
{
  LODWORD(STACK[0x50C]) = 0;
  JUMPOUT(0x1B02C0C5CLL);
}

void sub_1B02C0CFC(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) + 1759421093 * (((a1 | 0x9EBEB665) - a1 + (a1 & 0x6141499A)) ^ 0x2DC30631);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02C0DB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  char v30 = *(unsigned char *)(a5 + (v24 ^ v26) * v27 + v25 + v22);
  *(unsigned char *)(a7 + v23) = v30 - (v29 & (2 * v30)) - 48;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v28 + 8 * (((v23 == 63) * (int)a1) ^ v24)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22);
}

uint64_t sub_1B02C0E08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, unsigned int a16, uint64_t a17)
{
  unsigned int v22 = 1178560073 * ((((2 * &a13) | 0x1B96C3AA) - &a13 + 1916050987) ^ 0x375F19B7);
  a16 = v22 ^ ((v18 ^ 0x44967FD6) - 8542274 + ((2 * v18) & 0x892CFFAC));
  a17 = v17;
  a14 = v22 + v21 - 81;
  a15 = a12;
  uint64_t v23 = (*(uint64_t (**)(int *))(v20 + 8 * (v21 + 789)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a13 == v19) * ((((unsigned __int16)v21 - 25455) & 0x1FFE) - 697)) ^ v21)))(v23);
}

uint64_t sub_1B02C0ECC()
{
  return (*(uint64_t (**)(void))(v0
                              + 8 * ((15 * (v2 & ~((61 * (v3 ^ (v3 - 20))) ^ (v1 < 0xA3686619)))) ^ (v3 - 1972109899))))();
}

uint64_t sub_1B02C0F20(uint64_t result)
{
  unint64_t v1 = 108757529 * (result ^ 0xE75B6218E09C622BLL);
  int v2 = *(_DWORD *)(result + 40) ^ v1;
  unint64_t v3 = *(void *)(result + 24) - v1;
  int v4 = *(_DWORD *)(result + 32) - v1;
  unint64_t v5 = *(void *)(result + 16) ^ v1;
  int v6 = *(_DWORD *)(result + 4) ^ v1;
  int v7 = *(_DWORD *)(result + 8) + v1;
  BOOL v8 = v5 == v3;
  BOOL v9 = v5 >= v3;
  int v10 = !v8;
  if (v2) {
    int v11 = v9;
  }
  else {
    int v11 = v10;
  }
  if (v11) {
    int v7 = v4;
  }
  *(_DWORD *)(result + 36) = v6 ^ v7;
  return result;
}

void sub_1B02C0F90(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) - 1224239923 * ((a1 & 0x9A8552A9 | ~(a1 | 0x9A8552A9)) ^ 0x97C95081);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02C1064(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v8 = v4 > v7;
  if (v8 == a3 - 922585342 < -2061512887) {
    BOOL v8 = a3 - 922585342 < v6;
  }
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (((140 * (a4 ^ 0xC2) + 369) * v8) ^ a4)))(a1, 0);
}

uint64_t sub_1B02C11B8(double a1, int8x16_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int32x4_t a17, int8x16_t a18, int8x16_t a19)
{
  int8x16_t v22 = (int8x16_t)vld1q_dup_f32((const float *)v21);
  v23.i64[0] = 0x8000000080000000;
  v23.i64[1] = 0x8000000080000000;
  a2.i64[0] = *(void *)(v21 + 4);
  a2.i32[2] = *(_DWORD *)(v21 + 12);
  int8x16_t v24 = vextq_s8(v22, a2, 0xCuLL);
  int8x16_t v25 = a2;
  v25.i32[3] = *(_DWORD *)(v21 + 16);
  int32x4_t v26 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v25, a19), vandq_s8(v24, v23)), 1uLL), *(int8x16_t *)(v21 + 1588));
  v24.i32[0] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v21 + 4) & 1));
  v24.i32[1] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v21 + 8) & 1));
  v24.i32[2] = *(_DWORD *)(v20 + 4 * (*(_DWORD *)(v21 + 12) & 1));
  v24.i32[3] = *(_DWORD *)(v20 + 4 * (v25.i8[12] & 1));
  *(int8x16_t *)uint64_t v21 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v26, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v26, v26), a18)), a17), v24);
  return (*(uint64_t (**)(uint64_t))(v19 + 7232))(1972111131);
}

uint64_t sub_1B02C11C4@<X0>(int a1@<W1>, uint64_t a2@<X4>, int a3@<W8>)
{
  v8.i64[0] = 0xD1D1D1D1D1D1D1D1;
  v8.i64[1] = 0xD1D1D1D1D1D1D1D1;
  *(int8x16_t *)(a2 + (a3 + a1)) = vaddq_s8(vaddq_s8(*v5, v8), vmvnq_s8(vandq_s8(vaddq_s8(*v5, *v5), v7)));
  return (*(uint64_t (**)(void))(v6 + 8 * (((((v4 + 1) & 0x1FFFFFFF0) == 16) * ((v3 - 318) ^ 0x5A5)) ^ v3)))();
}

uint64_t sub_1B02C1230()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((14 * (STACK[0x530] == 0)) ^ (v0 + 831))))();
}

uint64_t sub_1B02C125C()
{
  *(_DWORD *)(v6 - 136) = v0
                        + ((970143606 - ((v6 - 136) | 0x39D33776) + ((v6 - 136) | 0xC62CC889)) ^ 0x26B0AAA2) * v4
                        + 229;
  *(void *)(v6 - 128) = v5;
  *(void *)(v6 - 120) = v1;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 971)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v3
                                            + 8
                                            * (((*(_DWORD *)(v6 - 132) > (((v0 - 15) | 0xC) ^ (v2 + 1276)))
                                              * ((v0 - 15) ^ 0x62F)) ^ v0)))(v7);
}

uint64_t sub_1B02C1314@<X0>(int a1@<W8>)
{
  _DWORD *v3 = v3[623];
  return (*(uint64_t (**)(void))(v2 + 8
                                   * ((455 * (v1 - 1 == (((a1 ^ 0x5DD) - 709) ^ 0x3FF) + 2132731286)) ^ a1 ^ 0x5DD)))();
}

void sub_1B02C1364()
{
}

uint64_t sub_1B02C136C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * ((98
                                * (~a19
                                 + v23
                                 - 252
                                 + (unint64_t)(v20 + ((7 * (((v21 - 1171) | 0xA) ^ 0x27F)) ^ (v19 - 450))) < 0x10)) ^ v21)))();
}

uint64_t sub_1B02C13C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  *(unsigned char *)(v12 + (v15 + v13)) = *(unsigned char *)(a9 + (v15 + v13)) ^ 0xD0;
  return (*(uint64_t (**)(void))(v17 + 8 * (((v15 + 1 + v13 < (a11 ^ v16)) * (((v11 - 237) | 0x14) ^ v14)) | v11)))();
}

uint64_t sub_1B02C141C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40,uint64_t a41,int a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,unsigned int a54,uint64_t a55,int a56,unsigned __int8 a57)
{
  int v57 = a57 ^ 0xAE;
  if (v57 == 2)
  {
    BOOL v62 = (unint64_t)&a43 < a34 && v64 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t))(v63 + 8 * (((a40 - 1115) * v62) ^ (a38 + 961))))(a54, 71960430);
  }
  else
  {
    if (v57 != 1) {
      JUMPOUT(0x1B02A9EA8);
    }
    BOOL v59 = (unint64_t)&a43 < a34 && v64 < (unint64_t)&a52;
    return (*(uint64_t (**)(void))(v63 + 8 * (((((a38 ^ v59) & 1) == 0) * a31) ^ (a38 + 2071))))(a54);
  }
}

uint64_t sub_1B02C142C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 > 0x82) ^ (a1 - 391))))();
}

void sub_1B02C1464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  LODWORD(STACK[0x374]) = a7 - 50;
  JUMPOUT(0x1B02C146CLL);
}

uint64_t sub_1B02C14B4()
{
  signed int v4 = v2 + 639161613 + ((v0 + 1616669131) & 0x9FA39697);
  int v5 = (v3 > 0x3584E06B) ^ (v4 < -897900652);
  BOOL v6 = v4 < (int)(v3 + 1249582996);
  if (v5) {
    BOOL v6 = v3 > 0x3584E06B;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((v6 * ((v0 - 455) ^ 0x585)) ^ v0)))();
}

uint64_t sub_1B02C153C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t),uint64_t a42)
{
  STACK[0x4C0] = v42;
  STACK[0x308] = STACK[0x2E8];
  return a41(a42, 0x5DFDDB7EFF9FF611);
}

uint64_t sub_1B02C1580()
{
  return (*(uint64_t (**)(void))(v0 + 8 * ((67 * ((v2 + v1 - 1877991095) >= 8)) ^ 0x436)))();
}

void sub_1B02C1600()
{
}

uint64_t sub_1B02C1608@<X0>(uint64_t a1@<X8>)
{
  uint64_t v5 = v2;
  uint64_t v6 = v1;
  uint64_t v8 = v2;
  unsigned int v7 = v3 + 1225351577 * (&v5 ^ 0x239AD816) + 1370;
  return (*(uint64_t (**)(uint64_t *))(a1 + 8 * (v3 ^ 0xBB9)))(&v5);
}

uint64_t sub_1B02C1650()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 241)))(32, 0x101004023FF3BD5) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v2 * (((v1 - 1801) ^ 0xFFFFFB9F) + ((v1 - 1801) | 0x480))) ^ v1)))();
}

void sub_1B02C16B4()
{
}

void U4HBs(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a1) {
    BOOL v5 = a2 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  int v8 = v5 || a4 == 0 || a5 == 0;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02C174C@<X0>(int a1@<W8>)
{
  int v6 = v1 + 1075;
  int v7 = (v1 - 686) ^ 0x5D6;
  unsigned int v8 = v2 + a1 + v4;
  if (v8 <= 0x40) {
    int v9 = 64;
  }
  else {
    int v9 = v8;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((230 * (v3 + v9 <= ((v8 - 1) ^ v7 ^ 0xFFFFFBB5))) ^ v6)))();
}

uint64_t sub_1B02C17AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51)
{
  return (*(uint64_t (**)(void))(v51
                              + 8
                              * ((619
                                * (a16
                                 + ((5 * a13 - 1922) & a51 ^ 0xE6FFFFCE)
                                 + ((a39 + 281) ^ 0x17D ^ (2 * (a51 & 0x1F))) < 0xFFFFFFC0)) ^ (a39 + 287))))();
}

uint64_t sub_1B02C185C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((46 * (a1 + 1 != v3 + 16)) ^ v1)))();
}

uint64_t sub_1B02C1938()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2951
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 7) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 7) - 1) ^ (v0 + ((v3 + 742305940) & 0xD3C14E57) - 577)) == v0)) ^ v3)))();
}

uint64_t sub_1B02C1990@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8, int a9, int a10, int a11, int a12, int a13, int a14, int a15, int a16, int a17, unsigned int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25,int a26,int a27,int a28,int a29,int a30,int a31,int a32,int a33,int a34,int a35,int a36,int a37,int a38,int a39,int a40,int a41,int a42,int a43,int a44,int a45,int a46,int a47,int a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,uint64_t a62)
{
  unsigned int v68 = v66 ^ 0xF7FA758B;
  unsigned int v69 = v63 ^ 0x8D60F231;
  unsigned int v70 = v62 ^ 0xEBF165F0;
  unsigned int v71 = v64 ^ 0xB4B7F0A0;
  uint64_t v72 = v65 & 0xFFFFFFF8 ^ 0x565F73AF;
  *(void *)(v67 - 200) = v72;
  uint64_t v73 = *(unsigned __int8 *)(a1 + v72);
  *(_DWORD *)(v67 - 256) = a15 & 0x160D06B3;
  uint64_t v74 = v65 & (a15 & 0x160D06B3 ^ 0xFFFFF9E0) ^ 0x565F73AC;
  *(void *)(v67 - 168) = v74;
  LODWORD(v73) = *(unsigned __int8 *)(a21 + (v73 ^ 0x41));
  uint64_t v75 = *(unsigned __int8 *)(a1 + v74) ^ 0x60;
  uint64_t v76 = v65 & 0xFFFFFFF7 ^ 0x565F73AC;
  *(void *)(v67 - 152) = v76;
  uint64_t v77 = v65 & 0xFFFFFFFE ^ 0x565F73AD;
  *(void *)(v67 - 128) = v77;
  uint64_t v78 = *(unsigned __int8 *)(a1 + v77);
  LODWORD(v77) = *(unsigned __int8 *)(a19 + v75) ^ 0x66666666;
  int v79 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a1 + v76) ^ 0xC1)) ^ 0xD2;
  LODWORD(v75) = *(unsigned __int8 *)(a20 + (v78 ^ 0x66)) ^ 0x8E;
  uint64_t v80 = v65 & 0xFFFFFFF0 ^ 0x565F73AF;
  *(void *)(v67 - 136) = v80;
  LODWORD(v76) = v75 << 16;
  LODWORD(v75) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a1 + v80) ^ 0xE9));
  uint64_t v81 = v65 & 0xFFFFFFF4 ^ 0x565F73AF;
  *(void *)(v67 - 160) = v81;
  int v82 = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a1 + v81) ^ 0xC3));
  uint64_t v83 = v65 ^ 0x565F73ACu;
  *(void *)(v67 - 176) = v83;
  LODWORD(v75) = v75 ^ 0xE5;
  int v84 = v76 | ((*(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a1 + v83) ^ 0x30)) ^ 0x56) << 24);
  LODWORD(v76) = v82 ^ 0x2F;
  uint64_t v85 = v65 & 0xFFFFFFFD ^ 0x565F73AE;
  *(void *)(v67 - 144) = v85;
  unsigned int v86 = v84 & 0xFFFF00FF | (((*(unsigned char *)(a22 + (*(unsigned __int8 *)(a1 + v85) ^ 0xC0))
                                             + (*(unsigned char *)(a1 + v85) ^ 0xCF)
                                             + 111) ^ 0xF9) << 8);
  uint64_t v87 = v65 & 0xFFFFFFFB ^ 0x565F73AC;
  uint64_t v88 = v65 & 0xFFFFFFFA ^ 0x565F73AD;
  *(void *)(v67 - 232) = v88;
  *(void *)(v67 - 224) = v87;
  uint64_t v89 = v65 & 0xFFFFFFF6 ^ 0x565F73AD;
  *(void *)(v67 - 208) = v89;
  int v90 = (*(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a1 + v89) ^ 0x5DLL)) ^ 0x5D) << 16;
  uint64_t v91 = v65 & 0xFFFFFFF5 ^ 0x565F73AE;
  *(void *)(v67 - 192) = v91;
  int v92 = v90 & 0xFFFF00FF | (((*(unsigned char *)(a22 + (*(unsigned __int8 *)(a1 + v91) ^ 0xD5))
                                             + (*(unsigned char *)(a1 + v91) ^ 0xDA)
                                             + 111) ^ 0xCF) << 8) | v76 | (v79 << 24);
  uint64_t v93 = v65 & 0xFFFFFFF1 ^ 0x565F73AE;
  *(void *)(v67 - 184) = v93;
  int v94 = (*(unsigned char *)(a22 + (*(unsigned __int8 *)(a1 + v93) ^ 0xE4))
                        + (*(unsigned char *)(a1 + v93) ^ 0xEB)
                        - 17) << 8;
  uint64_t v95 = v65 & 0xFFFFFFFC ^ 0x565F73AF;
  *(void *)(v67 - 216) = v95;
  uint64_t v96 = v65 & 0xFFFFFFF2 ^ 0x565F73AD;
  *(void *)(v67 - 240) = v96;
  int v97 = *(unsigned __int8 *)(a19 + (*(unsigned __int8 *)(a1 + v87) ^ 0xFCLL)) ^ 0xE8;
  LODWORD(v73) = v73 ^ 0x35;
  int v98 = v94 | ((*(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a1 + v96) ^ 0x92)) ^ 0x60) << 16) | v75 | (v77 << 24);
  LODWORD(v77) = *(unsigned __int8 *)(a21 + (*(unsigned __int8 *)(a1 + v95) ^ 0xDCLL)) ^ 0xF1;
  uint64_t v99 = v65 & 0xFFFFFFF9 ^ 0x565F73AE;
  *(void *)(v67 - 248) = v99;
  LODWORD(v76) = v92 + 1629332738 + ~(2 * (v92 & 0x611DA505 ^ v76 & 4));
  int v100 = ((*(unsigned __int8 *)(a20 + (*(unsigned __int8 *)(a1 + v88) ^ 0xA9)) ^ 0xB3) << 16) | (((*(unsigned char *)(a22 + (*(unsigned __int8 *)(a1 + v99) ^ 0x4FLL)) + (*(unsigned char *)(a1 + v99) ^ 0x40) + 111) ^ 0xB7) << 8) | v73 | (v97 << 24);
  LODWORD(v77) = v68 ^ a60 ^ ((v77 | v86) + 1734668162 - 2 * ((v77 | v86) & 0x6764EF93 ^ v77 & 0x11111111));
  LODWORD(v73) = v71 ^ a61 ^ (v100 - 2 * (v100 & 0x3A2F183E ^ v73 & 0x14) - 1171318742);
  unsigned int v101 = v69 ^ a57 ^ (v98 + 1361865805 - 2 * (v98 & 0x512C6C4F ^ v75 & 2));
  unsigned int v102 = v70 ^ a56 ^ v76;
  int v103 = *(_DWORD *)(v67 - 116);
  uint64_t v104 = (uint64_t)*(&off_1F08D3590 + v103 - 2127);
  uint64_t v105 = (uint64_t)*(&off_1F08D3590 + a13);
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (HIBYTE(v102) ^ 0x3F));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  int v107 = (v106 >> 1) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v101) ^ 0x34u)) ^ ((BYTE2(v101) ^ 0x68)
                                                                        - 328443349
                                                                        - 2
                                                                        * ((BYTE2(v101) ^ 0x68) & 0x3F ^ HIWORD(v101) & 0x14));
  *(_DWORD *)(v67 - 252) = -622148651;
  int v108 = (char *)*(&off_1F08D3590 + a14) - 4;
  LODWORD(v99) = *(_DWORD *)&v108[4 * (v102 ^ 0xC6)] ^ ((BYTE2(v77) ^ 0xD5)
                                                                       - 328443349
                                                                       - ((2 * (WORD1(v77) ^ 0x6CD5)) & 0x56)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 0x89u)) ^ ((v102 ^ 0xAB) - 622148651 - ((2 * (v102 ^ 0xAB) + 37586174) & 0x21802AC));
  int v109 = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0xC8));
  LODWORD(v76) = *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x8Cu)) ^ ((v101 ^ 0xDB)
                                                                 - 622148651
                                                                 - ((2 * (v101 ^ 0xDB) + 37586174) & 0x21802AC)) ^ *(_DWORD *)&v108[4 * (v101 ^ 0xB6)] ^ ((BYTE2(v73) ^ 0xD0) - 328443349 - ((v73 >> 15) & 0x56));
  HIDWORD(v106) = ~v109;
  LODWORD(v106) = v109 ^ 0xF5060FFE;
  LODWORD(v75) = ((BYTE2(v102) ^ 0xAD) - 328443349 - ((2 * (HIWORD(v102) ^ 0x3FAD)) & 0x56)) ^ *(_DWORD *)&v108[4 * (v77 ^ 0x1C)] ^ ((v77 ^ 0x71) - 622148650 + ((2 * (v77 ^ 0x71) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ (v106 >> 1) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v102) ^ 0xF1u));
  int v110 = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0x6C));
  HIDWORD(v106) = ~v110;
  LODWORD(v106) = v110 ^ 0xF5060FFE;
  int v111 = v106 >> 1;
  int v112 = v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08);
  unsigned int v113 = (v73 ^ 0x10) - 622148650 + ((2 * (v73 ^ 0x10) + 254) & 0x2AC ^ 0xFDE7FFFF);
  int v114 = *(_DWORD *)(v105 + 4 * (HIBYTE(v101) ^ 0xB7));
  HIDWORD(v106) = ~v114;
  LODWORD(v106) = v114 ^ 0xF5060FFE;
  uint64_t v115 = (char *)*(&off_1F08D3590 + v103 - 2100) - 8;
  unsigned int v116 = *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0xDE)] ^ a53 ^ *(_DWORD *)&v108[4 * (v73 ^ 0x7D)] ^ (v107 + 1642884484 - ((2 * v107) & 0xC3D8DB08));
  LODWORD(v73) = (v99 + 1642884484 - ((2 * v99) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x2F)] ^ (v106 >> 1);
  LODWORD(v75) = v73 - ((2 * v73) & 0x304AFE84);
  LOBYTE(v101) = v116 ^ v113;
  LODWORD(v73) = *(_DWORD *)&v115[4 * (BYTE1(v102) ^ 0x29)] ^ a55 ^ v111 ^ (v76 + 1642884484 - ((2 * v76) & 0xC3D8DB08));
  LODWORD(v77) = *(_DWORD *)&v115[4 * (BYTE1(v101) ^ 0x66)] ^ a54 ^ v112;
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * ((v116 ^ ~v113) >> 24));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  int v117 = v106 >> 1;
  LODWORD(v99) = (v116 ^ v113) >> 16;
  int v118 = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0x91));
  HIDWORD(v106) = ~v118;
  LODWORD(v106) = v118 ^ 0xF5060FFE;
  int v119 = v106 >> 1;
  int v120 = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0xA3));
  HIDWORD(v106) = ~v120;
  LODWORD(v106) = v120 ^ 0xF5060FFE;
  LODWORD(v85) = v119 ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 0xF0u)) ^ ((BYTE2(v77) ^ 0xAC)
                                                                        - 328443349
                                                                        - 2
                                                                        * ((WORD1(v77) ^ 0xA3AC) & 0x3B ^ WORD1(v77) & 0x10));
  LODWORD(v99) = *(_DWORD *)&v108[4 * (v73 ^ 0x7B)] ^ (v106 >> 1) ^ *(_DWORD *)(v104
                                                                                               + 4
                                                                                               * (v99 ^ 0x15u)) ^ ((v99 ^ 0x49) - 328443349 - 2 * ((v99 ^ 0xFF49) & 0x2F ^ v99 & 4)) ^ ((v73 ^ 0x16) - 622148651 - ((2 * (v73 ^ 0x16) + 37586174) & 0x21802AC));
  int v121 = v99 + 1642884484 - ((2 * v99) & 0xC3D8DB08);
  LODWORD(v75) = (v75 + 405110594) ^ a52;
  LODWORD(v85) = (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4
                                                                                * (((unsigned __int16)(v116 ^ v113) >> 8) ^ 0x2C)];
  LODWORD(v76) = v117 ^ *(_DWORD *)&v108[4 * (v77 ^ 3)] ^ ((v77 ^ 0x6E)
                                                                          - 622148650
                                                                          + ((2 * (v77 ^ 0x6E) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v75) ^ 0x40u)) ^ ((BYTE2(v75) ^ 0x1C) - 328443349 - ((2 * (WORD1(v75) ^ 0x761C)) & 0x56));
  LODWORD(v99) = *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x2Eu)) ^ ((BYTE2(v73) ^ 0x72)
                                                                 - 328443349
                                                                 - 2 * ((WORD1(v73) ^ 0x9172) & 0x2F ^ WORD1(v73) & 4));
  int v122 = *(_DWORD *)(v105 + 4 * (BYTE3(v75) ^ 0x76));
  HIDWORD(v106) = ~v122;
  LODWORD(v106) = v122 ^ 0xF5060FFE;
  int v123 = *(_DWORD *)&v115[4 * (BYTE1(v75) ^ 0xE4)];
  LODWORD(v99) = ((v101 ^ 0xFC)
                - 622148650
                + ((2 * (v101 ^ 0xFC) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0xBD)] ^ *(_DWORD *)&v108[4 * (v101 ^ 0x91)] ^ (v99 + 1642884484 - ((2 * v99) & 0xC3D8DB08)) ^ (v106 >> 1);
  LODWORD(v75) = ((v75 ^ 0xF) - 1726037377) ^ a51 ^ *(_DWORD *)&v108[4 * (v75 ^ 0x62)] ^ (v85 + 1103888726 - ((2 * v85) & 0x839802AC));
  LODWORD(v77) = a50 ^ a53 ^ *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x57)] ^ (v76 + 1642884484 - ((2 * v76) & 0xC3D8DB08));
  LODWORD(v73) = (v99 - ((2 * v99) & 0x6263DBA) - 2095898915) ^ a49;
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0x6E));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  unsigned int v124 = v123 ^ a50 ^ v121;
  LODWORD(v85) = (((v123 ^ a50 ^ v121) ^ 0xA1)
                - 622148650
                + ((2 * ((v123 ^ a50 ^ v121) ^ 0xA1) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v108[4 * ((v123 ^ a50 ^ v121) ^ 0xCC)];
  LODWORD(v76) = *(_DWORD *)(v104 + 4 * (BYTE2(v75) ^ 0xDBu)) ^ ((BYTE2(v75) ^ 0x87)
                                                                 - 328443349
                                                                 - ((2 * (WORD1(v75) ^ 0x3A87)) & 0x56)) ^ (v106 >> 1);
  LODWORD(v85) = (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v75) ^ 0xDE)];
  LODWORD(v99) = ((v75 ^ 0x9E)
                - 622148650
                + ((2 * (v75 ^ 0x9E) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v108[4 * (v75 ^ 0xF3)];
  int v125 = v99 + 1642884484 - ((2 * v99) & 0xC3D8DB08);
  LODWORD(v76) = (v76 + 1642884484 - ((2 * v76) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v124) ^ 0x57)];
  LODWORD(v99) = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0x37));
  HIDWORD(v106) = ~v99;
  LODWORD(v106) = v99 ^ 0xF5060FFE;
  int v126 = BYTE2(v77) ^ 0xC;
  LODWORD(v78) = v126 - 328443349 - ((2 * (WORD1(v77) ^ 0x740C)) & 0x56);
  LODWORD(v85) = *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x95u)) ^ BYTE2(v73) ^ (v106 >> 1) ^ 0xC9 ^ (v85 - 328443349 - ((2 * v85) & 0xD8D8B456));
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (BYTE3(v75) ^ 0x3A));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  LODWORD(v75) = BYTE2(v124) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v124) ^ 0xF6u)) ^ *(_DWORD *)&v115[4
                                                                                                * (BYTE1(v77) ^ 0xBC)] ^ 0x8D803705 ^ (v106 >> 1);
  unsigned int v127 = ((v73 ^ 0xCD) - 1726037377) ^ a48 ^ *(_DWORD *)&v108[4 * (v73 ^ 0xA0)] ^ (v75 + 1103888726 - ((2 * v75) & 0x839802AC));
  LODWORD(v75) = *(_DWORD *)&v108[4 * (v77 ^ 0x57)] ^ ((v77 ^ 0x3A) - 1726037377) ^ (v76 + 1103888726 - ((2 * v76) & 0x839802AC));
  LODWORD(v77) = *(_DWORD *)(v105 + 4 * (HIBYTE(v124) ^ 0x7C));
  HIDWORD(v106) = ~v77;
  LODWORD(v106) = v77 ^ 0xF5060FFE;
  LODWORD(v76) = *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0xFE)];
  LODWORD(v73) = (v75 - ((2 * v75) & 0x83C916F6) + 1105496955) ^ a46;
  unsigned int v128 = (v85 - ((2 * v85) & 0x33E5B526) + 435346067) ^ a47;
  LODWORD(v77) = v76 ^ a45 ^ v78 ^ *(_DWORD *)(v104 + 4 * (v126 ^ 0x5Cu)) ^ (v106 >> 1) ^ v125;
  LODWORD(v85) = ((v85 - ((2 * v85) & 0x26) - 109) ^ a47);
  LODWORD(v85) = ((v85 ^ 0x28) - 622148650 + ((2 * (v85 ^ 0x28) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v108[4 * (v85 ^ 0x45)];
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (HIBYTE(v127) ^ 0x5B));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  int v129 = v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08);
  LODWORD(v75) = (v106 >> 1) ^ *(_DWORD *)&v108[4 * (v73 ^ 0x1C)] ^ ((v73 ^ 0x71)
                                                                                    - 622148650
                                                                                    + ((2
                                                                                      * (v73 ^ 0x71)
                                                                                      + 254) & 0x2AC ^ 0xFDE7FFFF));
  LODWORD(v85) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0xE7));
  HIDWORD(v106) = ~v85;
  LODWORD(v106) = v85 ^ 0xF5060FFE;
  int v130 = v106 >> 1;
  LODWORD(v85) = *(_DWORD *)(v105 + 4 * (HIBYTE(v128) ^ 0x2E));
  HIDWORD(v106) = ~v85;
  LODWORD(v106) = v85 ^ 0xF5060FFE;
  LODWORD(v85) = v106 >> 1;
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0xB4));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  LODWORD(v85) = v85 ^ *(_DWORD *)&v108[4 * (v77 ^ 0x8B)] ^ ((v77 ^ 0xE6)
                                                                            - 622148650
                                                                            + ((2 * (v77 ^ 0xE6) + 254) & 0x2AC ^ 0xFDE7FFFF));
  LODWORD(v75) = ((BYTE2(v77) ^ 0x59) - 328443349 - ((2 * (WORD1(v77) ^ 0xB459)) & 0x56)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 5u)) ^ *(_DWORD *)&v115[4 * (BYTE1(v128) ^ 0x95)] ^ (v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08));
  int v131 = BYTE2(v127) ^ 0x95;
  LODWORD(v99) = v131 - 328443349 - ((2 * (HIWORD(v127) ^ 0x5B95)) & 0x56);
  LODWORD(v78) = v127;
  unsigned int v132 = (v127 ^ 0xF4) - 622148650 + ((2 * (v127 ^ 0xF4) + 254) & 0x2AC ^ 0xFDE7FFFF);
  unsigned int v133 = ((BYTE2(v73) ^ 0x2E) - 328443349 - ((2 * (WORD1(v73) ^ 0xE72E)) & 0x56)) ^ a42 ^ *(_DWORD *)&v115[4 * (BYTE1(v127) ^ 0x1F)] ^ (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x72u));
  unsigned int v134 = *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x73)] ^ a43 ^ ((BYTE2(v128) ^ 0x48)
                                                          - 328443349
                                                          - 2 * ((BYTE2(v128) ^ 0x48) & 0x3F ^ HIWORD(v128) & 0x14)) ^ *(_DWORD *)&v108[4 * (v78 ^ 0x99)] ^ v132 ^ ((v106 >> 1) + 1642884484 - ((2 * (v106 >> 1)) & 0xC3D8DB08)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v128) ^ 0x14u));
  LODWORD(v73) = *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0x34)];
  LODWORD(v77) = (v75 + 294302353 - ((2 * v75) & 0x23156522)) ^ a44;
  LODWORD(v73) = v73 ^ a41 ^ v99 ^ *(_DWORD *)(v104 + 4 * (v131 ^ 0x5Cu)) ^ v129 ^ v130;
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0x65));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  int v135 = (v106 >> 1) + 1642884484 - ((2 * (v106 >> 1)) & 0xC3D8DB08);
  LODWORD(v85) = ((BYTE2(v134) ^ 0x81) - 328443349 - 2 * ((BYTE2(v134) ^ 0x81) & 0x3F ^ HIWORD(v134) & 0x14)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v134) ^ 0xDDu));
  int v136 = *(_DWORD *)(v67 - 252);
  LODWORD(v99) = ((v134 ^ 0x51)
                - 622148650
                + ((2 * (v134 ^ 0x51) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v108[4 * (v134 ^ 0x3C)];
  int v137 = *(_DWORD *)(v104 + 4 * (BYTE2(v133) ^ 0xDBu)) ^ ((BYTE2(v133) ^ 0x87)
                                                          - 328443349
                                                          - ((2 * (HIWORD(v133) ^ 0x7787)) & 0x56));
  LODWORD(v78) = *(_DWORD *)(v105 + 4 * (HIBYTE(v134) ^ 0x14));
  HIDWORD(v106) = ~v78;
  LODWORD(v106) = v78 ^ 0xF5060FFE;
  int v138 = v106 >> 1;
  LODWORD(v78) = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0x9A));
  HIDWORD(v106) = ~v78;
  LODWORD(v106) = v78 ^ 0xF5060FFE;
  LODWORD(v76) = *(_DWORD *)(v104 + 4 * (((v73 ^ 0x26A203F3) >> 16) ^ 0x5Cu)) ^ ((v73 ^ 0x26A203F3) >> 16) ^ (v99 - 328443349 - ((2 * v99) & 0xD8D8B456));
  LODWORD(v85) = *(_DWORD *)&v108[4 * (v73 ^ 0x9E)] ^ *(_DWORD *)&v115[4 * (BYTE1(v133) ^ 0xDE)] ^ (v136 + (v73 ^ 0xF3) - ((2 * (v73 ^ 0xF3) + 37586174) & 0x21802AC)) ^ (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08)) ^ (v106 >> 1);
  int v139 = v77;
  LODWORD(v99) = (v77 ^ 0xA8)
               - 622148650
               + ((2 * (v77 ^ 0xA8) + 254) & 0x2AC ^ 0xFDE7FFFF);
  LODWORD(v78) = *(_DWORD *)(v105 + 4 * (HIBYTE(v133) ^ 0x77));
  HIDWORD(v106) = ~v78;
  LODWORD(v106) = v78 ^ 0xF5060FFE;
  LODWORD(v76) = (v106 >> 1) ^ *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0x2D)] ^ (v76 + 1642884484 - ((2 * v76) & 0xC3D8DB08));
  LODWORD(v77) = *(_DWORD *)&v115[4 * (BYTE1(v134) ^ 0x34)] ^ a39 ^ v135 ^ ((v133 ^ 0x9E)
                                                                          - 622148650
                                                                          + ((2 * (v133 ^ 0x9E) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 0xB5u)) ^ ((BYTE2(v77) ^ 0xE9) - 328443349 - ((2 * (WORD1(v77) ^ 0x9AE9)) & 0x56)) ^ *(_DWORD *)&v108[4 * (v133 ^ 0xF3)];
  LODWORD(v73) = *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0xE1)] ^ a37 ^ v138 ^ v99 ^ *(_DWORD *)&v108[4 * (v139 ^ 0xC5)] ^ (v137 + 1642884484 - ((2 * v137) & 0xC3D8DB08));
  LODWORD(v75) = v76 - 949059324 + (~(2 * v76) | 0x7122FDF9);
  unsigned int v140 = (v85 + 1664510395 - ((2 * v85) & 0xC66CD376)) ^ a38;
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0x6D));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  LODWORD(v76) = v106 >> 1;
  LODWORD(v99) = *(_DWORD *)(v105 + 4 * (HIBYTE(v140) ^ 0xFD));
  LODWORD(v85) = *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x52u)) ^ (~v99 << 31) ^ (v99 >> 1) ^ ((BYTE2(v73) ^ 0xE) - 328443349 - ((2 * (WORD1(v73) ^ 0x2E0E)) & 0x56)) ^ 0x7A8307FF;
  unsigned int v141 = v75 ^ a40;
  LODWORD(v75) = ((v73 ^ 0x4A) + v136 - ((2 * (v73 ^ 0x4A) + 37586174) & 0x21802AC)) ^ *(_DWORD *)&v108[4 * (v73 ^ 0x27)];
  int v142 = *(_DWORD *)(v105 + 4 * (HIBYTE(v141) ^ 0x4E));
  HIDWORD(v106) = ~v142;
  LODWORD(v106) = v142 ^ 0xF5060FFE;
  LODWORD(v75) = (v106 >> 1) ^ *(_DWORD *)&v115[4 * (BYTE1(v140) ^ 0xA4)] ^ (v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08));
  LODWORD(v75) = BYTE2(v77) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 0xC3u)) ^ 0x9F ^ (v75
                                                                                     - 328443349
                                                                                     - ((2 * v75) & 0xD8D8B456));
  int v143 = *(_DWORD *)(v104 + 4 * (BYTE2(v141) ^ 0xDDu)) ^ v76 ^ *(_DWORD *)&v108[4 * (v140 ^ 0x4D)] ^ ((v140 ^ 0x20) + v136 - ((2 * (v140 ^ 0x20) + 37586174) & 0x21802AC)) ^ ((BYTE2(v141) ^ 0x81) - 328443349 - ((2 * (HIWORD(v141) ^ 0x4E81)) & 0x56));
  LODWORD(v85) = ((v77 ^ 0xD6)
                - 622148650
                + ((2 * (v77 ^ 0xD6) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)&v115[4 * (BYTE1(v141) ^ 0x46)] ^ *(_DWORD *)&v108[4 * (v77 ^ 0xBB)] ^ (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08));
  LODWORD(v73) = ((v141 ^ 0x64)
                - 83152892
                + ((2 * (v141 ^ 0x64) + 254) & 0x308 ^ 0xFDE77FFF)) ^ *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x65)];
  LODWORD(v73) = (v73 + 1103888726 - ((2 * v73) & 0x839802AC)) ^ *(_DWORD *)&v108[4 * (v141 ^ 9)];
  LODWORD(v76) = *(_DWORD *)(v104 + 4 * (BYTE2(v140) ^ 0x40u)) ^ ((BYTE2(v140) ^ 0x1C)
                                                                  - 328443349
                                                                  - ((2 * (HIWORD(v140) ^ 0xFD1C)) & 0x56));
  LODWORD(v99) = v76 ^ 0x498E5911 ^ (v73 + 177435074 - ((2 * v73) & 0x1526E384));
  LODWORD(v73) = v73 ^ 0x6500C283;
  LODWORD(v99) = (v73 + v99 + 1) ^ ((v76 ^ 0x261DEA50) + 1);
  LODWORD(v73) = (v76 ^ 0xD371646D ^ (v99 + 177435074 - ((2 * v99) & 0x1526E384))) + v73;
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0x18));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  unsigned int v144 = (v75 - 265575918 - ((2 * v75) & 0xE0574424)) ^ a32;
  LODWORD(v73) = (v73 ^ (v106 >> 1)) - ((2 * (v73 ^ (v106 >> 1))) & 0x3C1F1044);
  unsigned int v145 = *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0x70)] ^ a35 ^ (v143 + 1642884484 - ((2 * v143) & 0xC3D8DB08));
  unsigned int v146 = (v85 - 1340638250 - ((2 * v85) & 0x602EF7AC)) ^ a36;
  LODWORD(v75) = ((BYTE2(v146) ^ 0xE9) - 328443349 - ((2 * (HIWORD(v146) ^ 0xB8E9)) & 0x56)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v146) ^ 0xB5u));
  int v147 = v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08);
  LODWORD(v85) = ((v85 - 42 - ((2 * v85) & 0xAC)) ^ a36);
  LODWORD(v99) = *(_DWORD *)(v105 + 4 * (HIBYTE(v144) ^ 0x9D));
  HIDWORD(v106) = ~v99;
  LODWORD(v106) = v99 ^ 0xF5060FFE;
  LODWORD(v99) = v106 >> 1;
  int v148 = *(_DWORD *)(v105 + 4 * (HIBYTE(v145) ^ 0x61));
  HIDWORD(v106) = ~v148;
  LODWORD(v106) = v148 ^ 0xF5060FFE;
  LODWORD(v85) = *(_DWORD *)&v108[4 * (v85 ^ 0xC5)] ^ *(_DWORD *)(v104 + 4 * (BYTE2(v144) ^ 0x28u)) ^ (v106 >> 1) ^ ((v85 ^ 0xA8) - 622148650 + ((2 * (v85 ^ 0xA8) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ ((BYTE2(v144) ^ 0x74) - 328443349 - ((2 * (HIWORD(v144) ^ 0x9D74)) & 0x56));
  unsigned int v149 = (v73 + 504334370) ^ a34;
  LODWORD(v73) = v99 ^ ((BYTE2(v149) ^ 0x60) - 328443348 + (~(2 * (HIWORD(v149) ^ 0xB460)) | 0xFFFFFFA9)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v149) ^ 0x3Cu));
  int v150 = v73 + 1642884484 - ((2 * v73) & 0xC3D8DB08);
  unsigned int v151 = (v145 ^ 0x85) - 622148650 + ((2 * (v145 ^ 0x85) + 254) & 0x2AC ^ 0xFDE7FFFF);
  LODWORD(v78) = *(_DWORD *)(v105 + 4 * (HIBYTE(v146) ^ 0xB8));
  HIDWORD(v106) = ~v78;
  LODWORD(v106) = v78 ^ 0xF5060FFE;
  LODWORD(v75) = *(_DWORD *)&v108[4 * (v149 ^ 0xDF)] ^ *(_DWORD *)(v104 + 4 * (BYTE2(v145) ^ 0x54u)) ^ ((BYTE2(v145) ^ 8) - 328443349 - 2 * ((BYTE2(v145) ^ 8) & 0x3F ^ HIWORD(v145) & 0x14)) ^ (v106 >> 1) ^ ((v149 ^ 0xB2) - 622148650 + ((2 * (v149 ^ 0xB2) + 254) & 0x2AC ^ 0xFDE7FFFF));
  LODWORD(v73) = *(_DWORD *)&v115[4 * (BYTE1(v149) ^ 0xEE)] ^ a31 ^ (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08));
  LODWORD(v75) = (v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v144) ^ 0xBD)];
  int v152 = *(_DWORD *)(v105 + 4 * (HIBYTE(v149) ^ 0xB4));
  HIDWORD(v106) = ~v152;
  LODWORD(v106) = v152 ^ 0xF5060FFE;
  LODWORD(v76) = *(_DWORD *)&v108[4 * (v144 ^ 0xB4)] ^ *(_DWORD *)&v115[4 * (BYTE1(v145) ^ 0x8F)] ^ ((v144 ^ 0xD9) - 622148650 + ((2 * (v144 ^ 0xD9) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ v147;
  LODWORD(v99) = *(_DWORD *)&v115[4 * (BYTE1(v146) ^ 0x2D)];
  LODWORD(v85) = *(_DWORD *)&v108[4 * (v145 ^ 0xE8)];
  unsigned int v153 = (v75 + 644795291 - ((2 * v75) & 0x4CDD9736)) ^ a33;
  unsigned int v154 = ((v76 ^ (v106 >> 1)) - ((2 * (v76 ^ (v106 >> 1))) & 0xBD8CFE02) - 557416703) ^ a29;
  unsigned int v155 = v151 ^ a30 ^ v85 ^ v99 ^ v150;
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (HIBYTE(v154) ^ 0xE1));
  LODWORD(v85) = ((BYTE2(v155) ^ 0x66) - 328443349 - 2 * ((HIWORD(v155) ^ 0xAE66) & 0x3B ^ HIWORD(v155) & 0x10)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v155) ^ 0x3Au));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  LODWORD(v75) = ((v106 >> 1) - 328443349 - ((2 * (v106 >> 1)) & 0xD8D8B456)) ^ *(_DWORD *)(v104
                                                                                          + 4 * (BYTE2(v153) ^ 0x40u));
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (HIBYTE(v153) ^ 0xEF));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  int v156 = (v106 >> 1) ^ *(_DWORD *)&v108[4 * (v154 ^ 0x6E)] ^ ((v154 ^ 3)
                                                                             - 622148650
                                                                             + ((2 * (v154 ^ 3) + 254) & 0x2AC ^ 0xFDE7FFFF));
  int v157 = v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08);
  LODWORD(v85) = v156 + 1642884484 - ((2 * v156) & 0xC3D8DB08);
  unsigned int v158 = *(_DWORD *)&v108[4 * (v73 ^ 0x27)] ^ ((v73 ^ 0x4A)
                                                              - 622148650
                                                              + ((2 * (v73 ^ 0x4A) + 254) & 0x2AC ^ 0xFDE7FFFF));
  LODWORD(v99) = *(_DWORD *)(v105 + 4 * (HIBYTE(v155) ^ 0xAE));
  HIDWORD(v106) = ~v99;
  LODWORD(v106) = v99 ^ 0xF5060FFE;
  int v159 = (v106 >> 1) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v154) ^ 0x8Cu)) ^ (v158 - 328443349 - ((2 * v158) & 0xD8D8B456));
  LODWORD(v99) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0xDC));
  HIDWORD(v106) = ~v99;
  LODWORD(v106) = v99 ^ 0xF5060FFE;
  LODWORD(v77) = ((BYTE2(v73) ^ 0xE) - 328443348 + (~(2 * (WORD1(v73) ^ 0xDC0E)) | 0xFFFFFFA9)) ^ a28 ^ *(_DWORD *)(v104 + 4 * (BYTE2(v73) ^ 0x52u)) ^ *(_DWORD *)&v115[4 * (BYTE1(v155) ^ 0x7C)] ^ v85;
  LODWORD(v85) = v155;
  unsigned int v160 = (v155 ^ 0xB3) - 622148650 + ((2 * (v155 ^ 0xB3) + 254) & 0x2AC ^ 0xFDE7FFFF);
  unsigned int v161 = *(_DWORD *)&v115[4 * (BYTE1(v154) ^ 0xB4)] ^ a27 ^ *(_DWORD *)&v108[4 * (v153 ^ 0x4D)] ^ (v106 >> 1) ^ ((v153 ^ 0x20) - 622148650 + ((2 * (v153 ^ 0x20) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ v157;
  LODWORD(v76) = HIWORD(v154);
  LODWORD(v73) = (v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08)) ^ a25 ^ *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x65)] ^ *(_DWORD *)&v108[4 * (v85 ^ 0xDE)] ^ v160;
  unsigned int v162 = *(_DWORD *)&v115[4 * (BYTE1(v153) ^ 0xA4)] ^ a26 ^ (v159 + 1642884484 - ((2 * v159) & 0xC3D8DB08));
  int v163 = (v115[4 * (BYTE1(v153) ^ 0xA4)] ^ a26 ^ (v159 - 124 - ((2 * v159) & 8)) ^ v76);
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (BYTE3(v73) ^ 0x6C));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  LODWORD(v85) = v106 >> 1;
  LODWORD(v75) = *(_DWORD *)(v105 + 4 * (BYTE3(v77) ^ 0xF7));
  HIDWORD(v106) = ~v75;
  LODWORD(v106) = v75 ^ 0xF5060FFE;
  int v164 = v106 >> 1;
  unsigned int v165 = ((BYTE2(v73) ^ 0xC8) - 328443349 - ((2 * (WORD1(v73) ^ 0x6CC8)) & 0x56)) ^ *(_DWORD *)(v104
                                                                                              + 4
                                                                                              * (BYTE2(v73) ^ 0x94u));
  int v166 = *(_DWORD *)(v105 + 4 * (HIBYTE(v162) ^ 0xE7));
  HIDWORD(v106) = ~v166;
  LODWORD(v106) = v166 ^ 0xF5060FFE;
  int v167 = v106 >> 1;
  LODWORD(v85) = v85 ^ *(_DWORD *)&v108[4 * (v163 ^ 0x9B)] ^ *(_DWORD *)(v104 + 4 * (BYTE2(v77) ^ 0xB5u)) ^ ((BYTE2(v77) ^ 0xE9) - 328443349 - ((2 * (WORD1(v77) ^ 0xF7E9)) & 0x56)) ^ ((v163 ^ 0xF6) - 622148650 + ((2 * (v163 ^ 0xF6) + 254) & 0x2AC ^ 0xFDE7FFFF));
  LODWORD(v85) = (v85 + 1642884484 - ((2 * v85) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v161) ^ 0xEC)];
  LODWORD(v76) = *(_DWORD *)(v105 + 4 * (HIBYTE(v161) ^ 0x57));
  HIDWORD(v106) = ~v76;
  LODWORD(v106) = v76 ^ 0xF5060FFE;
  unsigned int v168 = v164 ^ *(_DWORD *)(v104 + 4 * (BYTE2(v161) ^ 0xA7u)) ^ *(_DWORD *)&v108[4
                                                                                 * ((v73 ^ BYTE2(v153)) ^ 0x32)] ^ (((v73 ^ BYTE2(v153)) ^ 0x5F) - 622148650 + ((2 * ((v73 ^ BYTE2(v153)) ^ 0x5F) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ ((BYTE2(v161) ^ 0xFB) - 328443349 - ((2 * (HIWORD(v161) ^ 0x57FB)) & 0x56));
  unsigned int v169 = (v168 + 1642884484 - ((2 * v168) & 0xC3D8DB08)) ^ *(_DWORD *)&v115[4 * (BYTE1(v162) ^ 0x6D)];
  LODWORD(v75) = ((BYTE2(v162) ^ 0x31) - 328443349 - ((2 * (HIWORD(v162) ^ 0xE731)) & 0x56)) ^ *(_DWORD *)&v108[4 * (v77 ^ 0xC5)] ^ ((v77 ^ 0xA8) - 622148650 + ((2 * (v77 ^ 0xA8) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ *(_DWORD *)(v104 + 4 * (BYTE2(v162) ^ 0x6Du)) ^ (v106 >> 1);
  LODWORD(v99) = a12 ^ *(_DWORD *)&v115[4 * (BYTE1(v73) ^ 0x61)] ^ (v75 + 1642884484 - ((2 * v75) & 0xC3D8DB08));
  LODWORD(v73) = v99 ^ 0xADE748E2;
  unsigned int v170 = (v169 - 137760549 - ((2 * v169) & 0xEF93E1B6)) ^ a17;
  LODWORD(v75) = (v85 - 686633103 - ((2 * v85) & 0xAE259EE2)) ^ a24;
  LODWORD(v77) = *(_DWORD *)&v115[4 * (BYTE1(v77) ^ 0x2D)] ^ a23 ^ v167 ^ *(_DWORD *)&v108[4
                                                                                         * (v161 ^ 0x42)] ^ ((v161 ^ 0x2F) - 622148650 + ((2 * (v161 ^ 0x2F) + 254) & 0x2AC ^ 0xFDE7FFFF)) ^ (v165 + 1642884484 - ((2 * v165) & 0xC3D8DB08));
  LODWORD(v85) = BYTE3(v99) ^ 0x89;
  int v171 = (char *)*(&off_1F08D3590 + a11) - 8;
  unsigned int v172 = *(_DWORD *)(v67 - 116);
  uint64_t v173 = (uint64_t)*(&off_1F08D3590 + (int)(v172 - 2099));
  int v174 = *(_DWORD *)&v171[4 * (v170 ^ 0xA2)];
  int v175 = (char *)*(&off_1F08D3590 + a10) - 8;
  LODWORD(v76) = (*(_DWORD *)&v175[4 * (BYTE2(v170) ^ 0x9E)] - 1509396332) ^ (*(_DWORD *)&v171[4
                                                                                             * (v77 ^ 0xC9)]
                                                                            + 2116020043);
  int v176 = *(_DWORD *)&v171[4 * (v73 ^ 0x2A)];
  LODWORD(v85) = (*(_DWORD *)&v175[4 * (BYTE2(v77) ^ 0x38)] - 1509396332) ^ (*(_DWORD *)(v173 + 4 * v85)
                                                                           - 675332957);
  int v177 = *(_DWORD *)&v171[4 * (v75 ^ 0xB9)];
  LODWORD(v105) = *(_DWORD *)(v173 + 4 * (HIBYTE(v170) ^ 0xE7));
  LODWORD(v171) = *(_DWORD *)(v173 + 4 * (BYTE3(v77) ^ 0xB8));
  unsigned int v178 = (char *)*(&off_1F08D3590 + (int)(v172 - 2093)) - 4;
  int v179 = *(_DWORD *)&v178[4 * (BYTE1(v170) ^ 0xA0)];
  int v180 = *(_DWORD *)&v178[4 * (BYTE1(v77) ^ 0xE9)];
  LODWORD(v104) = *(_DWORD *)&v175[4 * (BYTE2(v73) ^ 0x6B)];
  LODWORD(v73) = (v76 - 973145973 - ((2 * v76) & 0x8BFDF116)) ^ *(_DWORD *)&v178[4 * (BYTE1(v73) ^ 0x29)] ^ (*(_DWORD *)(v173 + 4 * (BYTE3(v75) ^ 0x65)) - 675332957);
  LODWORD(v77) = *(_DWORD *)&v178[4 * (BYTE1(v75) ^ 0x74)];
  LODWORD(v75) = *(_DWORD *)&v175[4 * (BYTE2(v75) ^ 0x1D)];
  LODWORD(v77) = v77 ^ a16 ^ ((v85 ^ (v174 + 2116020043)) - 973145973 - ((2 * (v85 ^ (v174 + 2116020043))) & 0x8BFDF116));
  unsigned int v181 = a7 ^ a24 ^ (v73 - 686633103 - ((2 * v73) & 0xAE259EE2));
  uint64_t v182 = (uint64_t)*(&off_1F08D3590 + (int)(v172 - 1994));
  *(unsigned char *)(a6 + *(void *)(v67 - 248)) = *(unsigned char *)(v182 + (BYTE1(v77) ^ 0x99)) ^ 0xDE;
  int v183 = (char *)*(&off_1F08D3590 + (int)(v172 - 2086)) - 4;
  LODWORD(v73) = v179 ^ a7 ^ (v176 - ((2 * v176 - 62927210) & 0x8BFDF116) + 1142874070) ^ (v171 - 675332957) ^ (v75 - 1509396332);
  *(unsigned char *)(a6 + *(void *)(v67 - 240)) = (v183[BYTE2(v181) ^ 0xADLL] - 24) ^ 0xC5;
  uint64_t v184 = (uint64_t)*(&off_1F08D3590 + a8);
  uint64_t v185 = *(void *)(v67 - 208);
  *(unsigned char *)(a6 + *(void *)(v67 - 200)) = *(unsigned char *)(v184 + (v77 ^ 0xFCLL)) ^ 0xD0;
  *(unsigned char *)(a6 + v185) = (v183[BYTE2(v73) ^ 0x8CLL] - 24) ^ 0x47;
  uint64_t v186 = (uint64_t)*(&off_1F08D3590 + (int)(v172 - 2108));
  *(unsigned char *)(a6 + *(void *)(v67 - 224)) = (*(unsigned char *)(v186 + (BYTE3(v77) ^ 0xDELL)) - 1) ^ 0x1B;
  *(unsigned char *)(a6 + *(void *)(v67 - 232)) = ((v183[BYTE2(v77) ^ 0x15] + ((v183[BYTE2(v77) ^ 0x15] - 24) ^ 0xDA) - 23) ^ 0xFE)
                                          + v183[BYTE2(v77) ^ 0x15]
                                          - 24;
  LODWORD(v105) = a9 ^ v180 ^ (v104 - 1509396332) ^ (v177 + 2116020043) ^ (v105
                                                                         - ((2 * v105 - 1350665914) & 0x8BFDF116)
                                                                         - 1648478930);
  *(unsigned char *)(a6 + *(void *)(v67 - 216)) = *(unsigned char *)(v184 + (v105 ^ 5)) ^ 0x22;
  *(unsigned char *)(a6 + *(void *)(v67 - 168)) = (*(unsigned char *)(v186 + (HIBYTE(v181) ^ 0x4ELL)) - 1) ^ 0xE6;
  *(unsigned char *)(a6 + *(void *)(v67 - 152)) = (*(unsigned char *)(v186 + (BYTE3(v73) ^ 0x9CLL)) - 1) ^ 0xB8;
  uint64_t v187 = *(void *)(v67 - 176);
  *(unsigned char *)(a6 + v187) = (*(unsigned char *)(v186 + (BYTE3(v105) ^ 0x67)) - 1) ^ 0x91;
  *(unsigned char *)(a6 + *(void *)(v67 - 160)) = *(unsigned char *)(v184 + (v73 ^ 0xF2)) ^ 0x28;
  *(unsigned char *)(a6 + *(void *)(v67 - 192)) = *(unsigned char *)(v182 + (BYTE1(v73) ^ 0x1ELL)) ^ 0x7D;
  *(unsigned char *)(a6 + *(void *)(v67 - 144)) = *(unsigned char *)(v182 + (BYTE1(v105) ^ 0x33)) ^ 0x64;
  *(unsigned char *)(a6 + *(void *)(v67 - 184)) = *(unsigned char *)(v182 + (BYTE1(v181) ^ 0xBCLL)) ^ 0xAA;
  *(unsigned char *)(a6 + *(void *)(v67 - 136)) = *(unsigned char *)(v184 + (v181 ^ 0x9FLL)) ^ 0xD0;
  *(unsigned char *)(a6 + *(void *)(v67 - 128)) = (v183[BYTE2(v105) ^ 0xDLL] - 24) ^ 0x8E;
  LODWORD(v184) = ((v187 + 1449096108 - ((2 * v187 + 32) & 0xACBEE758) + 16) ^ 0x565F73AC) >= a18;
  return (*(uint64_t (**)(void))(a62 + 8 * (int)(((2 * v184) | (8 * v184)) ^ (v172 - 724))))(v172);
}

uint64_t sub_1B02C19C4@<X0>(int a1@<W2>, void *a2@<X4>, int a3@<W5>, unsigned int a4@<W8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v30 = (*(_DWORD *)(a19 + 4 * (v22 + 1 + a1)) ^ a4)
      + HIDWORD(v21)
      + v29 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v22 + 1 + a1)) ^ a4);
  BOOL v31 = v23 > v24;
  *(_DWORD *)(a19 + 4 * (v22 + a1)) = a4 + ((v19 - 2044) | v26) + v30 - (v20 & (2 * v30)) - 547;
  if (v31 != v22 + v27 < v28) {
    BOOL v32 = v31;
  }
  else {
    BOOL v32 = v22 + v27 < a3;
  }
  return (*(uint64_t (**)(void))(v25 + 8 * ((127 * v32) ^ v19)))();
}

uint64_t sub_1B02C1A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v7
                                                                                       + 8
                                                                                       * ((1003
                                                                                         * (((v6 - 471) & v5) != ((v6 - 351080928) & 0x14ED1857) - 2135)) ^ v6)))(a1, a2, a3, a4, (v4 - a4), (v6 + 1738));
}

uint64_t sub_1B02C1AA4()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((56 * (v0 == (((v1 ^ 0x336u) - 279) ^ 0x23ELL))) ^ v1 ^ 0x38)))();
}

uint64_t sub_1B02C1AE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(&a25 + v25 + a2) = -48;
  return (*(uint64_t (**)(void))(v27 + 8 * ((1897 * ((unint64_t)(v25 + 1 + a2) < 0x40)) ^ (a7 + v26 + 156))))();
}

void sub_1B02C1B24()
{
}

uint64_t sub_1B02C1B84()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((440 * (v1 == 1)) ^ v0)))();
}

uint64_t sub_1B02C1B8C@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 340));
  return v3(v1);
}

void sub_1B02C1BBC()
{
}

void sub_1B02C1FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v27 = (v23 ^ (v25 + 131) ^ v22) + (a22 ^ v25);
  *(_DWORD *)(v26 - 164) = v27 + v25 - (v24 & (2 * v27));
  JUMPOUT(0x1B02C200CLL);
}

void sub_1B02C2090()
{
}

void sub_1B02C20E8()
{
}

void sub_1B02C2504()
{
}

void sub_1B02C25E4(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) + 235795823 * ((a1 - 514923366 - 2 * (a1 & 0xE14EE49A)) ^ 0x75E3ADC3) + 858;
  __asm { BRAA            X6, X17 }
}

void sub_1B02C2740(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10, uint64_t a11)
{
  (*(void (**)(void, uint64_t, void))(v11 + 8 * (v12 ^ 0x8B8)))(**(unsigned int **)(v13 + 8 * (v12 ^ 0x185)), a11, a10);
  JUMPOUT(0x1B02C2770);
}

uint64_t sub_1B02C27B0(uint64_t a1)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, void))(v5 + 8 * (v6 ^ 0xD46)))(a1, 0);
  if (result == 16)
  {
    int v3 = -874447916;
    goto LABEL_7;
  }
  if (result == 12)
  {
LABEL_7:
    uint64_t result = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v2 + 1123)))(a1);
    goto LABEL_8;
  }
  if (result)
  {
    int v3 = 1946190755;
    goto LABEL_7;
  }
  void *v4 = a1;
  int v3 = 190152817;
LABEL_8:
  *(_DWORD *)(v1 + 16) = 1879302353 * v3 - 42187841;
  return result;
}

uint64_t sub_1B02C2850(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((11
                                * (a14
                                 + v15
                                 - (unint64_t)((((v16 + 542686094) | 0xA0330AD) ^ (a7 + v16 + 1573442281))
                                                    + v14) < 0x10)) ^ v16)))();
}

uint64_t sub_1B02C28B4(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (int)(((((v2 - 504) | 0x102) + ((v2 + 1966713654) & 0x8AC652EB) - 192) * (v3 == a2)) ^ v2)))();
}

uint64_t sub_1B02C2910@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, unint64_t a5@<X8>)
{
  uint64_t v9 = (a2 + a1 + a3);
  unint64_t v10 = a5 + v9 + (((a4 ^ 0xEA4u) - 1096) ^ 0x40ELL);
  uint64_t v11 = (a2 + a1) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v7 + v12;
  unint64_t v14 = v11 + v7 + 1;
  unint64_t v15 = v12 + v5 + 2;
  unint64_t v16 = v11 + v5 + 3;
  unint64_t v17 = v12 + v6 + 4;
  unint64_t v18 = v11 + v6 + 5;
  BOOL v20 = v14 > a5 && v13 < v10;
  if (v16 > a5 && v15 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * ((469 * v23) ^ a4)))();
}

void sub_1B02C29A8()
{
}

uint64_t sub_1B02C29B0(int a1, int a2)
{
  unsigned int v6 = v5[396] ^ ((*v5 & 0x7FFFFFFE | v5[623] & 0x80000000) >> 1);
  v5[623] = (v6 + a1 - ((v6 << ((v2 + 8) ^ 0x72)) & a2)) ^ *(_DWORD *)(v4 + 4 * (*v5 & 1));
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((8 * (LODWORD(STACK[0x50C]) < 0x270)) | (16 * (LODWORD(STACK[0x50C]) < 0x270))) ^ v2)))();
}

uint64_t sub_1B02C2A1C@<X0>(unsigned int a1@<W0>, int a2@<W1>, uint64_t a3@<X7>, int a4@<W8>)
{
  BOOL v12 = v5 < v6;
  *(unsigned char *)(v11 - 252 + (a4 + v7)) = *(unsigned char *)(a3 + v4 + (v9 ^ 0x836 ^ (v10 - 51)))
                                                  - ((2 * *(unsigned char *)(a3 + v4 + (v9 ^ 0x836 ^ (v10 - 51)))) & 0xA0)
                                                  - 48;
  unsigned int v13 = v4 + 1 + a2;
  int v14 = v12 ^ (v13 < a1);
  BOOL v15 = v13 < v5;
  if (!v14) {
    BOOL v12 = v15;
  }
  return (*(uint64_t (**)(void))(v8 + 8 * ((31 * v12) ^ v9)))();
}

uint64_t sub_1B02C2A98()
{
  LODWORD(STACK[0x2D8]) = v0;
  return sub_1B02C2AD8();
}

uint64_t sub_1B02C2AD8()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((30
                                * ((v0 ^ (*(unsigned __int8 *)(v1 + v3 + v6 + (v0 ^ v5)) == *(unsigned __int8 *)(v2 + v3 + v6 + (v0 ^ v5)))) & 1)) ^ v0)))();
}

uint64_t sub_1B02C2B84(int a1, uint64_t a2, int a3)
{
  unsigned int v7 = v4 - 32;
  uint64_t v8 = a2 + v7;
  long long v9 = *(_OWORD *)(v8 - 31);
  uint64_t v10 = v3 + v7;
  *(_OWORD *)(v10 - 15) = *(_OWORD *)(v8 - 15);
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 == 32) * a3) ^ a1)))();
}

uint64_t sub_1B02C2B90@<X0>(uint64_t a1@<X8>)
{
  *(void *)(v4 - 252 + a1 - 728585860) = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2242 * (((2 * v2) ^ 0xAu) - 146 == (v1 & 0x38))) ^ v2)))();
}

void sub_1B02C2BE4()
{
  LODWORD(STACK[0x374]) = v0;
  JUMPOUT(0x1B02C2BECLL);
}

uint64_t sub_1B02C2C3C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * ((2030 * (v6 + 1 != v7 + 44)) ^ a4)))(v4);
}

uint64_t sub_1B02C2CF8@<X0>(uint64_t a1@<X0>, int a2@<W3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, void))(a3
                                                    + 8
                                                    * ((4014 * (v3 - 1 > (int)((3 * (a2 ^ 0x574)) ^ 0xFFFFF8F4))) ^ a2)))(a1, a2 ^ 0x4E4u);
}

uint64_t sub_1B02C2D40@<X0>(int a1@<W5>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1005 * (a2 == (((v2 + 169016482) | 0xD5000A05) ^ v2 ^ (a1 + 768)))) ^ v2)))();
}

uint64_t sub_1B02C2D84(int a1, int a2, unint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  int v38 = a1 + a5;
  int v39 = a1 + 1;
  uint64_t v40 = 4 * (v39 + a5);
  unint64_t v41 = (*(_DWORD *)(a25 + v40) ^ v26) + (a4 ^ HIDWORD(v30));
  unint64_t v42 = HIDWORD(v25)
      + v28 * (unint64_t)(*(_DWORD *)(*v36 + v40) ^ v26)
      + ((a2 + ((v34 - 711) | v32) + v41 - (v35 & (2 * v41)) - 1524) ^ a3);
  *(_DWORD *)(a25 + 4 * v38) = v42 + v26 - (v27 & (2 * v42));
  BOOL v44 = v39 + a7 <= v31 + 1524 && v39 + a7 >= v37;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v44 * v29) ^ v34)))();
}

uint64_t sub_1B02C2E8C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6 = *(uint64_t (**)(void))(v15 + 8 * (v16 - 298));
  uint64_t v7 = *v17;
  unsigned int v8 = v10 + a1;
  *(unsigned char *)(*v17 + v8 + 1) = (v12 ^ BYTE2(v11)) - (v18 & (v11 >> 15)) - 48;
  *(unsigned char *)(v7 + v8) = (a6 ^ HIBYTE(v11)) - (v18 & (2 * (a6 ^ HIBYTE(v11)))) - 48;
  *(unsigned char *)(v7 + v8 + 2) = (v14 ^ BYTE1(v11)) - (v18 & (2 * (v14 ^ BYTE1(v11)))) - 48;
  *(unsigned char *)(v7 + (v10 + a1 + 3)) = v11 ^ v13;
  return v6();
}

uint64_t sub_1B02C2E9C(_DWORD *a1)
{
  unsigned int v2 = *a1 ^ (535753261 * ((2 * (a1 & 0x3DFCD1FD) - a1 + 1107504642) ^ 0x48F7202D));
  uint64_t result = (*(uint64_t (**)(char *, void (*)()))((char *)*(&off_1F08D3590 + (int)(v2 ^ 0xE1F269CD))
                                                         + 8 * (int)(v2 ^ 0xE1F2603F)
                                                         - 12))((char *)*(&off_1F08D3590 + (int)(v2 + 504207210)) - 12, sub_1B02BC5E4);
  int v4 = *(_DWORD *)*(&off_1F08D3590 + (int)(v2 ^ 0xE1F26962));
  if (result) {
    int v4 = -1904968230;
  }
  a1[1] = v4;
  return result;
}

void sub_1B02C2F7C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 32) + 108757529 * (((a1 | 0xFA9FB8B3) - (a1 & 0xFA9FB8B3)) ^ 0x1A03DA98);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02C3060@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((870
                                * (((v4
                                   + ((v3 + 2) ^ (2 * a1))
                                   + ~((((v3 + 2) ^ (2 * a1)) << (((v5 + 4) | 0x58) ^ 0x59)) & v3)
                                   + 2) ^ (v4 + 1)) > v1)) ^ v5)))();
}

uint64_t sub_1B02C30BC()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 - 783296701) & 0x2EB028BF ^ 0xFBFC9B86)
                                 + (v3 ^ 0x3797F5D3)
                                 - 865374466
                                 + (v0 & 0x6F2FEBA6) < 0x7FFFFFFF)
                                * (((v1 + 1460) | 0x20) - 444)) ^ v1)))();
}

uint64_t sub_1B02C314C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 8
                                                                   * (((95 * (v4 ^ 0x679) - 235) * (v3 != 0)) ^ v4)))(a1, a2, a3);
}

uint64_t sub_1B02C3184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,unint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,unsigned int a37,uint64_t a38,uint64_t a39,int a40,char a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,char a50)
{
  int v53 = 628203409 * ((~((v52 - 168) | 0xCF9A1693) + ((v52 - 168) & 0xCF9A1693)) ^ 0xB2EDE55F);
  *(_DWORD *)(v52 - 160) = v53 + v50 + 1909;
  *(_DWORD *)(v52 - 156) = a17 - v53;
  STACK[0x328] = a25;
  uint64_t v54 = (*(uint64_t (**)(uint64_t))(v51 + 8 * (v50 ^ 0x933)))(v52 - 168);
  uint64_t v55 = a50 & 0x3F;
  *(&a41 + (v55 ^ 0x11)) = 80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v51
                                                                      + 8
                                                                      * ((((v55 ^ 0x11) > 0x37)
                                                                        * ((v50 + 16) ^ 0x7A2)) ^ v50)))(v54, 26, 3966232327, a37);
}

uint64_t sub_1B02C3288()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v1 + 975 + ((v1 - 525327149) & 0x1F4FDEFB) - 3287)
                                * ((v0 - 1017008127) < 2)) ^ v1)))();
}

uint64_t sub_1B02C32D8(double a1, double a2, double a3, double a4, double a5, int8x16_t a6)
{
  int v9 = (v6 - 1972110875) | 0x413;
  int8x16_t v10 = (int8x16_t)vld1q_dup_f32((const float *)v8);
  v11.i64[0] = 0x8000000080000000;
  v11.i64[1] = 0x8000000080000000;
  a6.i64[0] = *(void *)(v8 + 4);
  a6.i32[2] = *(_DWORD *)(v8 + 12);
  int8x16_t v12 = vextq_s8(v10, a6, 0xCuLL);
  int8x16_t v13 = a6;
  v13.i32[3] = *(_DWORD *)(v8 + 16);
  int32x4_t v14 = (int32x4_t)veorq_s8((int8x16_t)vshrq_n_u32((uint32x4_t)vorrq_s8(vandq_s8(v13, (int8x16_t)vdupq_n_s32(0x7FFFFFFEu)), vandq_s8(v12, v11)), 1uLL), *(int8x16_t *)(v8 + 1588));
  v12.i32[0] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v8 + 4) & 1));
  v12.i32[1] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v8 + 8) & 1));
  v12.i32[2] = *((_DWORD *)&STACK[0x4F8] + (*(_DWORD *)(v8 + 12) & ((v9 + 2048335866) & 0x85E8DFFF ^ 0x50C)));
  v12.i32[3] = *((_DWORD *)&STACK[0x4F8] + (v13.i8[12] & 1));
  *(int8x16_t *)uint64_t v8 = veorq_s8((int8x16_t)vaddq_s32(vsubq_s32(v14, (int32x4_t)vandq_s8((int8x16_t)vaddq_s32(v14, v14), (int8x16_t)vdupq_n_s32(0x1F89C6A0u))), vdupq_n_s32(0xFC4E350u)), v12);
  return (*(uint64_t (**)(void))(v7 + 8 * v9))();
}

void sub_1B02C32E4(int a1@<W8>)
{
  (*(void (**)(void, void, unint64_t))(v4 + 8 * (a1 ^ 0xE4F)))(LODWORD(STACK[0x524]), (v1 ^ (v3 + 903)) + v2, STACK[0x378]);
  JUMPOUT(0x1B02B183CLL);
}

uint64_t sub_1B02C3348(uint64_t a1)
{
  int v4 = *(unsigned __int8 *)(*(void *)(a1 + 40) + (v2 - 987723168));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((28 * (((v4 - ((v4 << (((v3 + 40) ^ 0xA2) + 20)) & 0x94) + 216761674) & 0x1F) != 21)) ^ v3)))();
}

uint64_t sub_1B02C33B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v13
                                                                       + 8
                                                                       * (int)((((a13 - 1769776104) > 0xFFFFFFFA)
                                                                              * (((a4 ^ 0x3DE) - 900) ^ 0x22)) ^ (a4 + 1625))))(a1, a2, a3, a4);
}

uint64_t sub_1B02C3408(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x381) - 497) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1B02C3438()
{
  uint64_t v17 = *MEMORY[0x1E4F143B8];
  uint64_t v0 = (uint64_t)*(&off_1F08D3590
                + (*((unsigned char *)off_1F08D3940
                                    + (*((unsigned __int8 *)off_1F08D3B88
                                       + (-51 * ((qword_1E9B30C18 + dword_1E9B30BB8) ^ 0x84))
                                       - 8) ^ 0x8Bu)) ^ (-51 * ((qword_1E9B30C18 + dword_1E9B30BB8) ^ 0x84)))
                - 103);
  uint64_t v1 = *(void *)(v0 - 4);
  uint64_t v2 = (char *)off_1F08D3B98 - 4;
  uint64_t v3 = off_1F08D37E0;
  int v4 = (unint64_t *)*(&off_1F08D3590
                           + ((*off_1F08D37E0)[*((unsigned __int8 *)off_1F08D3B98
                                                                              + (-51
                                                                                                * (v1 ^ qword_1E9B30C18 ^ 0x84))
                                                                              - 4) ^ 0xCD] ^ (-51
                                                                                            * (v1 ^ qword_1E9B30C18 ^ 0x84)))
                           + 39);
  unint64_t v5 = (*v4 ^ v1) - (void)&v14;
  uint64_t v6 = 1358147533 * v5 - 0xEB3E64746BB5B7CLL;
  unint64_t v7 = 1358147533 * (v5 ^ 0xF14C19B8B944A484);
  *(void *)(v0 - 4) = v6;
  unint64_t *v4 = v7;
  LOBYTE(v7) = -51 * ((v7 - *(_DWORD *)(v0 - 4)) ^ 0x84);
  uint64_t v8 = (char *)off_1F08D3760 - 4;
  int v9 = off_1F08D3678;
  int v16 = (char *)*(&off_1F08D3590
                + (*((unsigned char *)off_1F08D3678
                                    + (*((unsigned __int8 *)off_1F08D3760 + v7 - 4) ^ 0x8Bu)) ^ v7)
                - 58)
      - 4;
  v15[0] = 1755732067 * (((v15 | 0x34BABF21) - (v15 & 0x34BABF21)) ^ 0xEA7C02FA) + 1229;
  int8x16_t v10 = (char *)*(&off_1F08D3590
                + ((-51 * ((qword_1E9B30C18 - dword_1E9B30BB8) ^ 0x84)) ^ byte_1B04CE8A0[byte_1B04D9DA0[(-51 * ((qword_1E9B30C18 - dword_1E9B30BB8) ^ 0x84))] ^ 0x8B])
                - 111)
      - 12;
  (*(void (**)(_DWORD *))&v10[8
                                       * ((-51 * (*(unsigned char *)(v0 - 4) ^ 0x84 ^ *(unsigned char *)v4)) ^ (*v3)[v2[(-51 * (*(unsigned char *)(v0 - 4) ^ 0x84 ^ *(unsigned char *)v4))] ^ 0x97])
                                       + 17880])(v15);
  int v16 = (char *)*(&off_1F08D3590
                + ((-51 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x84)) ^ v9[v8[(-51 * ((*(_DWORD *)v4 - *(_DWORD *)(v0 - 4)) ^ 0x84))] ^ 0xA3])
                - 62)
      - 4;
  v15[0] = 1755732067 * (v15 ^ 0xDEC6BDDB) + 1229;
  int8x16_t v11 = (char *)off_1F08D38C0 - 4;
  int8x16_t v12 = (char *)off_1F08D3828 - 4;
  (*(void (**)(_DWORD *))&v10[8
                                       * (*((unsigned char *)off_1F08D3828
                                                           + (*((unsigned __int8 *)off_1F08D38C0
                                                              + (-51
                                                                                * ((*(_DWORD *)v4 + *(_DWORD *)(v0 - 4)) ^ 0x84))
                                                              - 4) ^ 0xA4u)
                                                           - 4) ^ (-51 * ((*(_DWORD *)v4 + *(_DWORD *)(v0 - 4)) ^ 0x84)))
                                       + 17560])(v15);
  LOBYTE(v15[0]) = 51 * ((2 * (v15 & 0x50) - v15 - 82) ^ 0x79) + 98;
  v15[1] = 1224239923 * ((2 * (v15 & 0x42DA9D50) - v15 + 1025860270) ^ 0xCF969F79) + 1970;
  return (*(uint64_t (**)(_DWORD *))&v10[8
                                                 * ((-51
                                                                    * ((*(_DWORD *)v4 + *(_DWORD *)(v0 - 4)) ^ 0x84)) ^ v12[v11[(-51 * ((*(_DWORD *)v4 + *(_DWORD *)(v0 - 4)) ^ 0x84))] ^ 0xA5])
                                                 + 17520])(v15);
}

uint64_t sub_1B02C37C0(unsigned int a1)
{
  BOOL v4 = v1 < 0x29F5BBD7;
  if (v4 == v2 - 0x7D99D3FA9DDC70D9 < (unint64_t)((a1 ^ 0x190) - 266) + 703969880) {
    BOOL v4 = v2 - 0x7D99D3FA9DDC70D9 < v1;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((1575 * v4) ^ a1)))();
}

uint64_t sub_1B02C382C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  *(void *)(v16 - 136) = v10;
  *(void *)(v16 - 128) = v11;
  *(_DWORD *)(v16 - 120) = v13
                         + 1225351577 * ((2 * ((v16 - 144) & 0x5F851580) - (v16 - 144) + 544926330) ^ 0x3E0326C)
                         + 890;
  *(void *)(v16 - 112) = v12;
  *(void *)(v16 - 104) = a10;
  *(void *)(v16 - 144) = v10;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v14 + 8 * (v13 + 1696)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v14
                                            + 8
                                            * (int)((252
                                                   * ((((v15 - 1) < 0x7FFFFFFF) ^ (((v13 + 88) & 0x7A) - 1)) & 1)) ^ (v13 + 296866648) & 0xEE4E2F7A)))(v17);
}

uint64_t sub_1B02C38E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,unint64_t a30)
{
  int v37 = v31 + v30 - 736;
  *int v35 = v35[623];
  int v38 = v31 + v30 - 1344853900;
  STACK[0x588] = (v32 + 594375519) ^ v34;
  *(_DWORD *)(v36 - 120) = v38 & 0xF567BA06 ^ v34;
  *(_DWORD *)(v36 - 116) = 821170321 - v34 + v37;
  *(_DWORD *)(v36 - 112) = v38 - v34;
  *(_DWORD *)(v36 - 128) = 1 - v34;
  *(_DWORD *)(v36 - 124) = (v38 ^ 0x2C) - v34;
  STACK[0x578] = a30;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v33 + 8 * (v37 ^ (v31 + 1837))))(v36 - 152);
  return (*(uint64_t (**)(uint64_t))(v33 + 8 * *(int *)(v36 - 144)))(v39);
}

void sub_1B02C399C(uint64_t a1, uint64_t a2)
{
  uint64_t v14 = *MEMORY[0x1E4F143B8];
  uint64_t v3 = *(&off_1F08D3590
       + ((-51 * (dword_1E9B30C20 ^ 0x84 ^ qword_1E9B30C18)) ^ byte_1B04D36C0[byte_1B04CE6A0[(-51 * (dword_1E9B30C20 ^ 0x84 ^ qword_1E9B30C18))] ^ 0xCD])
       - 57);
  unsigned __int8 v4 = -51 * ((qword_1E9B30C18 + *v3) ^ 0x84);
  unint64_t v5 = *(&off_1F08D3590
       + (*((unsigned char *)off_1F08D3678 + (*((unsigned __int8 *)off_1F08D3760 + v4 - 4) ^ 0xCu)) ^ v4)
       - 69);
  uint64_t v6 = (*v5 ^ *v3) - (void)&v9;
  void *v3 = 1358147533 * (v6 + 0xEB3E64746BB5B7CLL);
  void *v5 = 1358147533 * (v6 ^ 0xF14C19B8B944A484);
  **(_DWORD **)(a1 + 96) = *(_DWORD *)(a2 + 16);
  LODWORD(v6) = 1178560073 * (((&v11 | 0x5999BFA4) - (&v11 & 0x5999BFA4)) ^ 0xE30DC7C6);
  int v13 = -1882357464 - v6;
  uint64_t v12 = &STACK[0x2B41EA7AD2F8E8ED];
  int v11 = -17177217 - v6;
  LODWORD(v5) = 1358147533 * ((*(_DWORD *)v5 + *(_DWORD *)v3) ^ 0xB944A484);
  unint64_t v7 = (char *)*(&off_1F08D3590
               + ((-51 * (dword_1E9B30C20 ^ 0x84 ^ qword_1E9B30C18)) ^ byte_1B04D36C0[byte_1B04CE6A0[(-51 * (dword_1E9B30C20 ^ 0x84 ^ qword_1E9B30C18))] ^ 0x97])
               + 3)
     - 12;
  (*(void (**)(int *))&v7[8
                                   * (*((unsigned char *)off_1F08D39B8
                                                       + (*((unsigned __int8 *)off_1F08D3808 + v5 - 8) ^ 0x87u)
                                                       - 8) ^ v5)
                                   + 17912])(&v11);
  BOOL v8 = *(_DWORD *)(a2 + 16) + 2145609312 + ((2 * (v10 & 0x1F)) ^ 0x22) + (v10 & 0x3F ^ 0x5FFFEDCEu) < 0xFFFFFFC0;
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02C3C88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(*(void *)(a8 + 96) + 1544) = *(void *)(a2 + 8);
  *(_DWORD *)(*(void *)(a8 + 96) + 1536) = *(_DWORD *)(a2 + 4);
  return v8 ^ v9;
}

uint64_t sub_1B02C3CE0@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  unsigned int v5 = ((*(_DWORD *)(*(void *)(v2 - 0x6155FFFFEB445CBDLL) + 4 * v3) ^ 0xC15A1193) >> a2) ^ 0x43E2814D;
  unsigned int v6 = v5 & 0x10EA1161 ^ 0xDA268DCD ^ (v4 - (v5 & 0x10C00000 | 0x253B7372) + (v5 & 0x2A1160 | 0xDAC48C8D) + 624652494);
  *(_DWORD *)(result + 8) = ((v6 | 0xC9987A1B) - (v6 | 0x366785E4) + 912754148) ^ 0xECC5F821;
  return result;
}

uint64_t sub_1B02C3E20(uint64_t a1)
{
  return sub_1B02C3E28(a1, *v1);
}

uint64_t sub_1B02C3E28(uint64_t a1, uint64_t a2)
{
  uint64_t result = (*(uint64_t (**)(void, uint64_t, void))(v4 + 8 * (v2 ^ 0x198)))(*v6, a2, ((v2 - 2112) | 0x18Eu) - 2073933204 + *(_DWORD *)(v3 - 0x7DA9E0EFFB1E3626));
  *unsigned int v9 = v8;
  *(_DWORD *)(v3 - 0x7DA9E0EFFB1E3626) = v7;
  _DWORD *v5 = v7;
  return result;
}

uint64_t sub_1B02C3EAC@<X0>(int a1@<W8>)
{
  *(_DWORD *)(*v4 + 4 * (v8 + v5)) = *(_DWORD *)(*v4 + 4 * (a1 + v8));
  BOOL v11 = v8 + v6 > v7 || v8 + v6 < v1;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v11 * v2) ^ v3)))();
}

uint64_t sub_1B02C3EE8@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (613 * ((v2 + a1) < 0x7FFFFFFF)))))();
}

uint64_t sub_1B02C3F24()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1165
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 2) - 72)))
                                 + ((*(unsigned __int8 *)(v2 + 2) - 72) ^ v0) == v0 + (v3 ^ 0xAA) - 259)) ^ v3)))();
}

uint64_t sub_1B02C3F6C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v6
                                                             + 8
                                                             * (((((v4 == a4) ^ v5) & 1) * (v5 ^ 0x57E)) ^ v5)))(a1, a2, v5 ^ 0x7ECu);
}

uint64_t sub_1B02C3FA8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 - 1972110556) ^ (191 * (v0 >= v3)))))();
}

uint64_t sub_1B02C3FE0@<X0>(int a1@<W3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  BOOL v18 = a16 - a12 != a2 - 412460704 || a15 != a1 + 10;
  return (*(uint64_t (**)(void))(v16 + 8 * ((v18 * (a2 - 159)) ^ a2)))();
}

uint64_t sub_1B02C4028(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(v18 - 136) = (v17 ^ 0x5A) + ((v18 - 136) ^ 0xE09C622B) * v16 + 1021;
  *(void *)(v18 - 128) = v14;
  *(void *)(v18 - 120) = a14;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * ((v17 ^ 0x5A) + 1763)))(v18 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((21
                                              * (*(_DWORD *)(v18 - 132) <= (((v17 ^ 0x5A) + 745) ^ 0xAB00D6 ^ v17 ^ 0x6A9u))) ^ v17 ^ 0x5A)))(v19);
}

uint64_t sub_1B02C4034(char a1, int a2, char a3, int a4, int a5, int8x16_t a6, int8x8_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  int v67 = a5 - 8;
  uint64_t v68 = (a4 + v67 + a2);
  v70.val[0].i64[0] = ((_BYTE)a4 + (_BYTE)v67 + (_BYTE)a2) & 0xF;
  v70.val[0].i64[1] = (v65 + (_BYTE)v67) & 0xF;
  v70.val[1].i64[0] = (a1 + (_BYTE)v67) & 0xF;
  v70.val[1].i64[1] = (v64 + (_BYTE)v67) & 0xF;
  v70.val[2].i64[0] = (v63 + (_BYTE)v67) & 0xF;
  v70.val[2].i64[1] = (v62 + (_BYTE)v67) & 0xF;
  v70.val[3].i64[0] = (a3 + (_BYTE)v67) & 0xF;
  v70.val[3].i64[1] = (*(_DWORD *)(v66 - 136) + (_BYTE)v67) & 0xF;
  *(int8x8_t *)(*(void *)(v66 - 128) + v68) = veor_s8(veor_s8(veor_s8(*(int8x8_t *)(v59 + (v68 & 0xF) - 7), *(int8x8_t *)(*(void *)(v66 - 120) + v68)), veor_s8(*(int8x8_t *)(v58 + (v68 & 0xF) - 7), *(int8x8_t *)((v68 & 0xF) + v60 - 6))), vrev64_s8(vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v70, a6), a7)));
  return (*(uint64_t (**)(void))(a58 + 8 * ((1308 * (*(_DWORD *)(v66 - 132) == v67)) ^ v61)))();
}

void sub_1B02C4040()
{
  LODWORD(STACK[0x2E0]) = 1701297651;
  JUMPOUT(0x1B02C1468);
}

uint64_t sub_1B02C405C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (((23 * (((v1 - 1808) | 9) ^ 0x83) - 966) ^ v0) > 7)) ^ (v1 - 619))))();
}

uint64_t sub_1B02C40A8(uint64_t a1)
{
  int v9 = (v7 + 549727081) | 0xA2A0081;
  uint64_t v10 = v6 + (v9 ^ (v1 + 668) ^ (v4 + 1211));
  long long v11 = *(_OWORD *)(v2 + v10 - 15);
  long long v12 = *(_OWORD *)(v2 + v10 - 31);
  uint64_t v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v8 + 8 * ((14 * ((v5 & 0xFFFFFFE0) == 32)) ^ (v9 + v3))))();
}

uint64_t sub_1B02C411C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(void *)(v29 - 136) = v23;
  *(void *)(v29 - 128) = v28;
  *(void *)(v29 - 112) = v23;
  *(void *)(v29 - 144) = v27;
  *(_DWORD *)(v29 - 120) = v26
                         + 460628867
                         * ((((v29 - 144) | 0xAC916108) - (v29 - 144) + ((v29 - 144) & 0x536E9EF0)) ^ 0xE007E375)
                         + 1527;
  (*(void (**)(uint64_t))(v25 + 8 * (v26 ^ 0x8F3)))(v29 - 144);
  int v30 = 1759421093 * ((796897940 - ((v29 - 144) | 0x2F7FB294) + ((v29 - 144) | 0xD0804D6B)) ^ 0x63FDFD3F);
  *(void *)(v29 - 144) = a23;
  *(_DWORD *)(v29 - 132) = v30 + v26 + 201;
  *(_DWORD *)(v29 - 128) = v24 - 1334526198 + v30 + 2;
  uint64_t v31 = (*(uint64_t (**)(uint64_t))(v25 + 8 * (v26 ^ 0x89D)))(v29 - 144);
  return (*(uint64_t (**)(uint64_t))(v25 + 8 * ((37 * (*(_DWORD *)(v29 - 136) == v26 + 633307566)) ^ v26)))(v31);
}

uint64_t sub_1B02C4248(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34)
{
  return sub_1B02B8F70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           0);
}

uint64_t sub_1B02C4250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v19 = 628203409 * ((((v18 - 152) | 0x8533020C) - ((v18 - 152) & 0x8533020C)) ^ 0x7BB0E3F);
  *(void *)(v18 - 112) = v17;
  *(void *)(v18 - 104) = a12;
  *(_DWORD *)(v18 - 136) = v15 - v19 - 14;
  *(_DWORD *)(v18 - 132) = v14 - v19 + 186887302;
  *(void *)(v18 - 128) = a14;
  *(void *)(v18 - 152) = a13;
  *(void *)(v18 - 144) = a11;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v15 + 1896)))(v18 - 152);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v18 - 120) == ((v15 - 536884820) & 0xFF133FFF ^ 0xAE982CC3))
                                              * (v15 + 1855)) ^ v15)))(v20);
}

uint64_t sub_1B02C4350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((113
                                * (((*(void *)(v5 + 24) == 0x2DC0098902ACAEB6) ^ (a5 + 1)) & 1)) ^ a5)))();
}

uint64_t sub_1B02C4390@<X0>(unsigned int a1@<W2>, int a2@<W6>, unsigned int a3@<W8>)
{
  *(unsigned char *)(*v10 + (a2 + v4 + 159)) = -48;
  unsigned int v11 = v3 + v4 + 1;
  int v12 = (a1 > v7) ^ (v11 < a3);
  BOOL v13 = v11 < v5;
  if (v12) {
    BOOL v13 = a1 > v7;
  }
  return (*(uint64_t (**)(void))(v9 + 8 * ((v13 * v8) ^ v6)))();
}

uint64_t sub_1B02C43F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8 * (((v8 + 1 == v10 + 20) * v11) ^ a6)))(v7, a2, v6);
}

uint64_t sub_1B02C44C4@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((*(_DWORD *)(v1 + 4 * (a1 + v4 + 2)) != ((v3 + 1860188145) & 0x911FC1FF ^ v2))
                                * (v3 - 1984)) | (v3 - 1555))))();
}

uint64_t sub_1B02C4514(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * ((((((a5 + 9) ^ 0x25D ^ (v5 == a3)) & 1) == 0) * (((a5 + 9) | 0x40) - 1275)) ^ a5)))();
}

uint64_t sub_1B02C4554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  *(unsigned char *)(v7 + (v11 + v8)) = a5 ^ v10 ^ *(unsigned char *)(v6 + (v11 + v8));
  return (*(uint64_t (**)(void))(v12 + 8 * (v9 | (8 * (v11 - 1 != v5)))))();
}

uint64_t sub_1B02C4584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v8
                                                     + 8
                                                     * (((((v7 - 88) | 0x4C) ^ (a6 + 1930) ^ ((v7 + 1225001661) | 0xC120D0))
                                                       * (v6 == 63)) ^ v7)))(a1, -1918934476);
}

uint64_t sub_1B02C45D8(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v2 + 352);
  unsigned int v6 = *(_DWORD *)(a1 + 16) - v1 + 393224535;
  if (v5 > 0xA08DF0D5 != v6 < 0x5F720F2A) {
    BOOL v7 = v5 > 0xA08DF0D5;
  }
  else {
    BOOL v7 = v5 + 1601310506 > v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((v7 * ((v4 - 2036978533) & 0x7969CF1F ^ 0x225)) ^ v4)))();
}

uint64_t sub_1B02C4660@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (int)(((((v1 + 1014417496) & 0xC38937AF) + 2077) * (a1 == 1400183660)) ^ v1)))(4294925278);
}

uint64_t sub_1B02C46A4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v4 - a1 - (a3 ^ 0x6B8uLL) < 0x20) * ((3 * (a3 ^ 0x487)) ^ 0x6C8)) ^ a3)))();
}

uint64_t sub_1B02C46F0(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a2 ^ ((v4 == v5) * v2))))();
}

uint64_t sub_1B02C4710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6, _DWORD *a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, int a20)
{
  *a6 = 0;
  *a7 = 0;
  a19 = (535753261 * ((&a19 & 0x95716CF5 | ~(&a19 | 0x95716CF5)) ^ 0x607A9D25)) ^ 0xE1F2694A;
  uint64_t v22 = (*(uint64_t (**)(unsigned int *))(v21 + 18864))(&a19);
  return (*(uint64_t (**)(uint64_t))(v21 + 8 * ((1234 * (a20 == v20)) ^ 0x3C6u)))(v22);
}

uint64_t sub_1B02C47B4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  unsigned int v4 = v2 + 1397730803;
  BOOL v5 = v4 < 0x9B519BC6;
  BOOL v6 = v3 - 1689150522 < v4;
  if (v3 > 0x64AE6439 != v5) {
    BOOL v6 = v5;
  }
  if (v6) {
    int v7 = a2;
  }
  else {
    int v7 = a2 + 1;
  }
  *(_DWORD *)(result + 8) = v7;
  return result;
}

uint64_t sub_1B02C4864@<X0>(int a1@<W4>, int a2@<W5>, char a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,_DWORD *a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  uint64_t v40 = &a35 + (a2 - 1369176607);
  unsigned int v41 = 2003914383 * ((*(_DWORD *)(*v37 + (*a24 & 0xEFFE8D4)) ^ v40) & 0x7FFFFFFF);
  unint64_t v42 = 2003914383 * (v41 ^ HIWORD(v41));
  unint64_t v43 = v42 >> (((v35 - 117) & 0xAFu) + 109);
  char v44 = *((unsigned char *)*(&off_1F08D3590 + v35 - 452) + v43) ^ ((v36 ^ v39) >> a3) ^ *((unsigned char *)*(&off_1F08D3590
                                                                                           + (v35 ^ 0x2F9))
                                                                                + v43
                                                                                - 12) ^ *((unsigned char *)*(&off_1F08D3590 + (v35 ^ 0x2D7))
                                                                                        + v43
                                                                                        - 5) ^ v42 ^ (15 * v43);
  *uint64_t v40 = v44;
  return (*(uint64_t (**)(void))(v38 + 8 * ((1893 * (a2 - (v44 != 0) == a1)) ^ v35)))();
}

uint64_t sub_1B02C4960(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, int a18)
{
  a17 = (535753261 * ((&a17 & 0xC060732F | ~(&a17 | 0xC060732F)) ^ 0x356B82FF)) ^ 0xE1F2694A;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v18 + 18864))(&a17);
  return (*(uint64_t (**)(uint64_t))(v18 + 8 * ((1766 * (a18 == 1904944996)) ^ 0x188u)))(v19);
}

uint64_t sub_1B02C4A00(uint64_t a1)
{
  unint64_t v3 = STACK[0x550];
  unint64_t v4 = LODWORD(STACK[0x52C]);
  STACK[0x460] = v4;
  return (*(uint64_t (**)(uint64_t, unint64_t))(v2
                                                              + 8
                                                              * (int)(((v4 == ((v1 - 779) | 0x231) - 567)
                                                                     * (((v1 + 1804700902) & 0x946E74BF) - 1115)) ^ v1)))(a1, v3);
}

uint64_t sub_1B02C4A54@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*(void *)(v3 - 0x6155FFFFEB445CBDLL) + 4 * (v5 - 1969185401)) = *(_DWORD *)(*(void *)(v4 - 0x6155FFFFEB445CBDLL)
                                                                                            + 4 * (v5 - 1969185401));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v5 - 1 == v1) * (2 * (v2 ^ 0x485) - 1398)) | v2)))();
}

void sub_1B02C4AB8()
{
  _DWORD *v2 = 0x80000000;
  (*(void (**)(unint64_t))(v1 + 8 * (v0 ^ 0x94A)))(STACK[0x2E8]);
  JUMPOUT(0x1B02C4AE4);
}

void sub_1B02C4BEC()
{
}

uint64_t sub_1B02C4BFC@<X0>(int a1@<W2>, uint64_t a2@<X5>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(v4
                                            + 8
                                            * ((119 * (a3 - a2 - 1452 >= (unint64_t)((a1 - 1049) | 0x22Eu) - 927)) ^ a1)))(v3);
}

uint64_t sub_1B02C4C38()
{
  unint64_t v2 = STACK[0x3E0];
  unint64_t v6 = STACK[0x468];
  STACK[0x358] = *(void *)(v1 + 8 * (v0 - 868));
  STACK[0x328] = STACK[0x260] + 112;
  STACK[0x3D0] = v6;
  if (v6) {
    BOOL v3 = v2 == 0;
  }
  else {
    BOOL v3 = 1;
  }
  int v4 = v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((v4 * ((v0 + 1352) ^ 0xB32)) ^ (v0 + 618))))();
}

uint64_t sub_1B02C4C4C@<X0>(int a1@<W8>)
{
  int v7 = (v1 - 70780836) & 0x5EFDC7FF;
  void *v2 = (v7 + a1) ^ v11;
  uint64_t v14 = v9;
  unsigned int v13 = v7
      - 1522909557
      + ((-1144322031 - (v12 | 0xBBCB0811) + (v12 | 0x4434F7EE)) ^ 0x4EC0F9C1) * v5;
  (*(void (**)(unsigned char *))(v4 + 8 * (v7 - 1522907744)))(v12);
  uint64_t v14 = v10;
  unsigned int v13 = ((v12 - 152771804 - 2 * ((unint64_t)v12 & 0xF6E4E324)) ^ 0xFC10ED0B) * v5 - 1522909557 + v7;
  (*(void (**)(unsigned char *))(v4 + 8 * (v7 ^ (v6 + 2884))))(v12);
  return v3 ^ 0x718B2764u;
}

uint64_t sub_1B02C4D80()
{
  *(void *)(v6 - 128) = v5;
  *(void *)(v6 - 120) = v1;
  *(_DWORD *)(v6 - 136) = v0
                        + ((((v6 - 136) ^ 0x927293B2) - 470279805 - 2 * (((v6 - 136) ^ 0x927293B2) & 0xE3F81983)) ^ 0x9116E81A)
                        * v3
                        + 276;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 ^ 0xC1A)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((610 * (*(_DWORD *)(v6 - 132) > (v0 ^ 0x6AD ^ (v4 + 445)))) ^ v0)))(v7);
}

uint64_t sub_1B02C4E28@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((((v2 - 24) ^ 0x511) * (v1 != 0)) | v2)))();
}

uint64_t sub_1B02C4E50()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((7 * (((v0 + 1196) ^ 0xB074B79C) + v2 < ((v0 + 131) ^ v1))) ^ v0)))();
}

uint64_t sub_1B02C4E90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((((a5 ^ 0xB0C) - 1449) ^ 0x75C) * ((v5 & 0x18) == 0)) ^ a5)))();
}

uint64_t sub_1B02C4EC4(__n128 a1)
{
  a1.n128_u16[0] = -12080;
  a1.n128_u8[2] = -48;
  a1.n128_u8[3] = -48;
  a1.n128_u8[4] = -48;
  a1.n128_u8[5] = -48;
  a1.n128_u8[6] = -48;
  a1.n128_u8[7] = -48;
  return sub_1B02C4F00(a1);
}

uint64_t sub_1B02C4F00@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, double a3@<D0>)
{
  *(double *)(v6 + a2 + a1 + v3) = a3;
  return (*(uint64_t (**)(void))(v8 + 8 * (((4 * (v7 + v3 != v4)) | (8 * (v7 + v3 != v4))) ^ v5)))();
}

uint64_t sub_1B02C4F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,unsigned int a26,uint64_t a27,unsigned int a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33)
{
  int v207 = v33 ^ 0xF72;
  uint64_t v41 = ((v33 ^ 0xF72u) - 173 - 0x67607172A2474C7) ^ v34;
  unint64_t v42 = (v41 + v40 - ((2 * v41) & 0xEA176A3CF1E4AC5CLL)) ^ v37;
  uint64_t v43 = __ROR8__(__ROR8__(v36 ^ a27, 12) ^ 0xA9F5355D327AAF0FLL, 52);
  uint64_t v44 = v43 ^ 0x322397601515A6F7;
  uint64_t v45 = ((v43 ^ 0x322397601515A6F7)
       + 0x111878BD3E018578
       - (((((v33 ^ 0xF72) - 1188) | 0x80u) + 0x2230F17A7C03080ALL) & (2 * (v43 ^ 0x322397601515A6F7)))) ^ v35;
  uint64_t v46 = v41 ^ v39;
  unint64_t v47 = v41 ^ v39 ^ 0xAB9B7AF28A67F905;
  unint64_t v48 = (v42 ^ 0x97FBFBAE09CFCCD0) & (v43 ^ 0x322397601515A6F7);
  uint64_t v49 = v42 ^ 0x68040451F630332FLL;
  unint64_t v50 = (v45 ^ 0xE4C1C31231B4037DLL) & (v43 ^ 0xCDDC689FEAEA5908) ^ v42 ^ 0x68040451F630332FLL;
  uint64_t v51 = 2 * v48;
  uint64_t v52 = (2 * v48) & 0x1F97617F9BEE2E2CLL;
  v48 += 0x4FCBB0BFCDF71716;
  uint64_t v53 = ((v48 - v52) ^ v47) & 0x6F210F75C9897C29;
  unint64_t v54 = v45 ^ 0xE4C1C31231B4037DLL ^ (v46 ^ 0xE450CA4D4790EE13) & (v39 ^ 0x1BAF35B2B86F11ECLL);
  uint64_t v55 = __ROR8__(v50, 38);
  *((void *)&v56 + 1) = v39 ^ 0xEE13;
  *(void *)&long long v56 = v39 ^ 0xE450CA4D47900000;
  unint64_t v57 = ((v48 - (v51 & 0x9F97617F9BEE2E2CLL)) ^ v47) & 0x90DEF08A367683D6 | v53;
  unint64_t v58 = (v45 ^ 0x1B3E3CEDCE4BFC82) & (v39 ^ 0xE450CA4D4790EE13) ^ v44 ^ v50;
  uint64_t v59 = v49 & (v46 ^ 0x1BAF35B2B86F11ECLL);
  unint64_t v60 = __ROR8__(v55 ^ __ROR8__(v57, 38) ^ 0xB8AB4977971512F1, 26);
  LOBYTE(v55) = *(unsigned char *)(a29 + ((((v58 >> 61) ^ 4) + 241) ^ 0x78));
  char v61 = 4 * (v55 ^ 0xDD) - ((8 * (v55 ^ 0xDD)) & 0xEF) + 117;
  char v62 = (v55 ^ 0xDD) - ((2 * (v55 ^ 0xDD)) & 0xEA) + 117;
  char v63 = v55 ^ 0xE5;
  char v64 = v63 + (v62 ^ v61 ^ 0xC7) + 1;
  unint64_t v65 = v54 ^ __ROR8__((v56 >> 16) ^ 0x4D81525DA35B383ALL, 48) ^ v59;
  char v66 = (v61 ^ 0x8A) - 78;
  char v67 = v66 - ((2 * (v61 ^ 0x8A) + 2) & 0x60) + (v64 & 0x40);
  if ((v64 & 0x40 & ((v61 ^ 0x8A) + 1)) != 0) {
    char v67 = v66 - (v64 & 0x40) - ((2 * ((v61 ^ 0x8A) + 1)) & 0x60);
  }
  char v68 = v67 ^ ((v64 & 0xBF) - ((2 * v64) & 0x62) - 79);
  unsigned __int8 v69 = ((v68 - ((2 * v68) & 0xEA) + 117) ^ v61) + v63;
  *((void *)&v70 + 1) = ~v54;
  *(void *)&long long v70 = v54 ^ 0x92CFC162FD513142;
  unint64_t v71 = __ROR8__(v54, 57) & 0xFFFFFFFFFFFFE07FLL;
  *((void *)&v70 + 1) = v54 ^ 0x5A3A852E907FBA55 ^ ((v70 >> 1)
                                                      - ((2 * (v70 >> 1)) & 0x91EA8898DA5D162CLL)
                                                      - 0x370ABBB392D174EALL);
  *(void *)&long long v70 = *((void *)&v70 + 1) ^ (v54 << 58) ^ 0xC00000000000000;
  uint64_t v72 = v70 >> 51;
  uint64_t v73 = v58 ^ (v58 >> 39) ^ (8 * v58) ^ (((v69 >> 1) | (v69 << 7)) | (v58 << 25));
  uint64_t v74 = v73 ^ 0x7AF20784637AFADELL;
  v71 ^= 0x8F8AC7F1FBA51795;
  uint64_t v75 = v72 + v71;
  unint64_t v76 = v72 & v71;
  unint64_t v77 = (v57 << 23) ^ 0xFBA827E079000000;
  unint64_t v78 = (((v60 << 45) ^ (v60 << 36)) & 0xFFFFFFF000000000 | (v60 >> 28)) ^ (v60 >> 19) ^ 0xD0A2B87327B31AB3;
  unint64_t v79 = (v78 - ((2 * v78) & 0xB5E2A01A69FA3A2ELL) - 0x250EAFF2CB02E2E9) ^ v60;
  unint64_t v80 = v57 ^ (v57 >> 41) ^ (v57 >> 7) ^ 0x6CBDCE865EDD8FACLL ^ (((v57 << 57) ^ 0xE400000000000000)
                                                               - ((2 * ((v57 << 57) ^ 0xE400000000000000)) & 0xB400000000000000)
                                                               - 0x251564C11F96B3B4);
  unint64_t v81 = (v80 & 0x10000000000000 ^ 0xDDF7EFDAFFFFDEFBLL) + 2 * (v80 & 0x10000000000000);
  unint64_t v82 = v80 & 0xFFEFFFFFFFFFFFFFLL;
  uint64_t v83 = __ROR8__(v75 - 2 * v76, 13);
  unint64_t v84 = v65 ^ (v65 >> 10) ^ (v65 << 47) ^ ((v65 >> 17) | (v65 << 54));
  unint64_t v85 = 0x3BCB7B6BCFADA5D4 - v81;
  if (((v81 + 0x2208102500002105) & v77) == 0) {
    unint64_t v85 = v81 + 0x7FDB9BB5CFADE7DELL;
  }
  uint64_t v86 = (v77 - 0x5DD38B90CFADC6D9 + v85) ^ v82;
  unint64_t v87 = (v86 - ((2 * v86) & 0xE83322F0C561AFD6) + 0x7419917862B0D7EBLL) ^ v84;
  uint64_t v88 = __ROR8__(__ROR8__(v87 ^ 0x4371A346D1DAB852, 23) ^ 0x6C4FE5A873E441B7, 41);
  unint64_t v89 = v74 ^ (v83 + 0x5CAB2D85C0212E33 - ((2 * v83) & 0xB9565B0B80425C66));
  unint64_t v90 = v79 ^ v86;
  unint64_t v91 = v88 & (v84 ^ 0x1CAE3FE19723B7B4) ^ v89;
  unint64_t v92 = (v90 ^ 0x108D53942DEF1104 | ~v88)
      + ((v88 + 0x7B1CE14CB6508342 - ((2 * v88) & 0xF639C2996CA10684)) ^ v90 ^ 0x6B91B2D89BBF9246)
      + 1;
  unint64_t v93 = v90 ^ 0x6B91B2D89BBF9246 ^ (((v89 ^ 0xBEE74353B47A99EDLL) & (v73 ^ 0xD9A6D5FE5CA42B12))
                                    + 0x7B1CE14CB6508342
                                    - ((2 * ((v89 ^ 0xBEE74353B47A99EDLL) & (v73 ^ 0xD9A6D5FE5CA42B12))) & 0xF639C2996CA10684));
  unint64_t v94 = v87 ^ (v90 ^ 0xEF72AC6BD210EEFBLL) & (v73 ^ 0x26592A01A35BD4EDLL);
  unint64_t v95 = ((v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))
       + 0x5CAB2D85C0212E33
       - ((2 * (v93 ^ (v89 ^ 0x4118BCAC4B856612) & (v84 ^ 0xE351C01E68DC484BLL))) & 0xB9565B0B80425C66)) ^ v74;
  *((void *)&v97 + 1) = v94 ^ v93 ^ 0xB49FA43;
  *(void *)&long long v97 = v94 ^ v93 ^ 0x3B345E9200000000;
  uint64_t v96 = v97 >> 28;
  unint64_t v98 = v92 ^ __ROR8__(((v91 ^ 0xBEE74353B47A99EDLL) >> 27) ^ __ROR8__(v84 ^ 0xE1DE6585B59498FDLL, 27) ^ (((v91 ^ 0xBEE74353B47A99EDLL) << 37)- (((v91 ^ 0xBEE74353B47A99EDLL) << 38) & 0x1379170000000000)- 0x7643747485F20715), 37);
  *(void *)&long long v97 = __ROR8__(v94 ^ v93, 19);
  uint64_t v99 = (v96 ^ v97 ^ 0x3F4867668BD24169)
      - ((2 * (v96 ^ v97 ^ 0x3F4867668BD24169)) & 0x45CF323E1E4ADDEELL)
      + 0x22E7991F0F256EF7;
  *((void *)&v97 + 1) = v95 ^ 0x1747C156E755AED6;
  *(void *)&long long v97 = v95 ^ 0x4000000000000000;
  unint64_t v100 = (v94 >> 7) ^ (v94 >> 41);
  uint64_t v101 = v95 ^ __ROR8__(v95, 39) ^ (v97 >> 61);
  uint64_t v102 = v101 ^ 0x7EDC56B564AFA7CELL;
  uint64_t v103 = v101 & 0x7C09B5691D153F3ALL;
  uint64_t v104 = (v100 | (v94 << 57)) ^ (v94 << 23) ^ 0x55F16AE4F9161E3;
  uint64_t v105 = v104 + 0x3E12CE91C39ADC2ALL - 2 * (v104 & 0x3E12CE91C39ADC3ELL ^ v100 & 0x14);
  uint64_t v106 = v94 ^ 0x3362A30F487636CFLL ^ v105;
  unint64_t v107 = v99 ^ v93 ^ v105;
  unint64_t v108 = v98 ^ (v98 << 47) ^ (v98 >> 10) ^ (v98 >> 17) ^ (v98 << 54);
  unint64_t v109 = (v106 & 0x100000000 ^ 0xE72B8FBF1E6FDBBFLL) + 2 * (v106 & 0x100000000);
  unint64_t v110 = v109 + 0x38DEFBDBE3FE3754;
  unint64_t v111 = v106 & 0xFFFFFFFEFFFFFFFFLL;
  unint64_t v112 = ((v91 ^ 0xD1A234CC1D2559D7) >> 6) ^ (v91 >> 1) ^ (((v91 ^ 0xD1A234CC1D2559D7) << 58) | v91 ^ 0xD1A234CC1D2559D7) ^ ((((v91 ^ 0xD1A234CC1D2559D7) << 58) & (v91 ^ 0xD000000000000000) ^ ((v91 ^ 0xD1A234CC1D2559D7) << 63)) - 0x7BAAC341D0AB7966 - ((2 * (((v91 ^ 0xD1A234CC1D2559D7) << 58) & (v91 ^ 0xD000000000000000))) & 0x800000000000000)) ^ v101 ^ 0x7EDC56B564AFA7CELL;
  unint64_t v113 = v109 + 0x18D47040E1902441;
  unint64_t v114 = 0x7361B5A20DDEED2 - v109;
  if (((v108 ^ 0xBEE8B63400000000) & v113) == 0) {
    unint64_t v114 = v110;
  }
  unint64_t v115 = ((v108 ^ 0xBEE8B6349A795903) - 0x200A8B9B026E1313 + v114) ^ v111;
  *((void *)&v116 + 1) = v107 ^ 0x4C1AA27B;
  *(void *)&long long v116 = v107 ^ 0x2AB1648200000000;
  uint64_t v117 = (v107 ^ 0x2AB164824C1AA27BLL) & ~v115;
  char v118 = v115 & 1;
  *(void *)&long long v116 = __ROR8__((v116 >> 33) ^ __ROR8__((v112 ^ 0x68D11A660E92ACEBLL) & (v101 ^ 0x57695F4B404DEABLL), 33) ^ 0xCF4F457632C10184, 31);
  uint64_t v119 = v115 & (v108 ^ 0x411749CB6586A6FCLL);
  unint64_t v120 = v115 ^ (((v107 ^ 0xD54E9B7DB3E55D84) & (v101 ^ 0xFA896A0B4BFB2154))
               - ((2 * ((v107 ^ 0xD54E9B7DB3E55D84) & (v101 ^ 0xFA896A0B4BFB2154))) & 0x726BA671F6562B62)
               - 0x46CA2CC704D4EA4FLL);
  unint64_t v121 = v112 ^ 0x972EE599F16D5314;
  uint64_t v122 = v119 ^ v112 ^ 0x68D11A660E92ACEBLL;
  unint64_t v123 = (v108 ^ 0xBEE8B6349A795903) & v121;
  unint64_t v124 = v122 ^ v108 ^ (v117 - 0x1F4EE9B6CA3DD07DLL + (~(2 * v117) | 0x3E9DD36D947BA0FBLL));
  unint64_t v125 = v120 ^ v116;
  unint64_t v126 = v116 ^ v102 ^ (v123 - 0x7BAAC341D0AB7966 - ((2 * v123) & 0x8AA797C5EA90D34));
  unint64_t v127 = (v120 ^ (unint64_t)v116) << 36;
  unint64_t v128 = (v122 ^ 0x7955EAEC4D48B80CuLL) >> v118 >> (v118 ^ 1u);
  unint64_t v129 = v126 ^ 0x9C11E0FFA770857ELL ^ (((v126 >> 61) ^ (v126 >> 39) ^ 0xAFF5F4)
                                      - ((2 * ((v126 >> 61) ^ (v126 >> 39) ^ 0xAFF5F4)) & 0x35BBA5C)
                                      - 0x3414E431385222D2);
  uint64_t v130 = (((v126 << 25) ^ 0x62C1BAB0A0000000 ^ -(uint64_t)((v126 << 25) ^ 0x62C1BAB0A0000000) ^ (v129
                                                                                                  - (v129 ^ (v126 << 25) ^ 0x62C1BAB0A0000000)))
        + v129) ^ (8 * v126);
  uint64_t v131 = ((v120 >> 41) | (v120 << 57)) ^ (v120 >> 7) ^ (((v120 << 23) ^ 0x10559A9F52800000)
                                                      - ((2 * ((v120 << 23) ^ 0x10559A9F52800000)) & 0x7E2DA2DD8B000000)
                                                      + 0x3F16D16EC5C91AC9);
  unint64_t v132 = v131 ^ v120;
  unint64_t v133 = (v124 >> 10) ^ (v124 << 47) ^ (v124 >> 17) ^ (v124 << 54) ^ 0xD68BDCD783751D2ALL;
  unint64_t v134 = (v133 - ((2 * v133) & 0x9B66FB60C7A89B02) - 0x324C824F9C2BB27FLL) ^ v124;
  unint64_t v135 = v134 ^ 0x850171A59C5FF036;
  unint64_t v136 = v127 ^ (v125 << 45) ^ (v125 >> 19) ^ (v125 >> 28) ^ 0xC2CB632D491C1884;
  unint64_t v137 = v132 ^ v134;
  unint64_t v138 = v131 ^ v116 ^ (v136 - ((2 * v136) & 0xF9D1345D3640A9A0) + 0x7CE89A2E9B2054D0);
  *(void *)&long long v116 = __ROR8__(v122, 6);
  uint64_t v139 = v122 ^ 0x42401F91F19F6255 ^ ((((v122 << 63) | 0x31E557ABB13522E0) ^ v116 ^ v128)
                                      - ((2 * (((v122 << 63) | 0x31E557ABB13522E0) ^ v116 ^ v128)) & 0x762BEAFB79AFB4B2)
                                      + 0x3B15F57DBCD7DA59);
  unint64_t v140 = v130 ^ 0x7B8040C2E425D1BALL ^ (v139 - 0x3BA866B61D30ECC6 - ((2 * v139) & 0x88AF3293C59E2674));
  uint64_t v141 = (v130 ^ 0x40282674F9153D7FLL) & v139;
  uint64_t v142 = v134 ^ 0x7AFE8E5A63A00FC9;
  uint64_t v143 = v132 ^ v134 ^ 0x6E8A7DDBB3BA6F6BLL;
  unint64_t v144 = ((v135 & ~v140) - 0x3BA866B61D30ECC6 - ((2 * (v135 & ~v140)) & 0x88AF3293C59E2674)) ^ v130 ^ 0x7B8040C2E425D1BALL;
  unint64_t v145 = v143 & v142 ^ v140;
  unint64_t v146 = (v141 - ((v141 + 0x1C540D4967B2F6CDLL - ((2 * v141) & 0x38A81A92CF65ED9ALL)) ^ v138 ^ 0x39848A71A3692417)) ^ ((v138 ^ 0xDA2F78C73B242D25) + 1);
  unint64_t v147 = ((v146 + 0x1C540D4967B2F6CDLL - ((2 * v146) & 0x38A81A92CF65ED9ALL)) ^ v138 ^ 0x39848A71A3692417) + v141;
  unint64_t v148 = v144 ^ v147;
  uint64_t v149 = (((2 * v137) ^ 0x22EB0448988B2129) + v143) & (v138 ^ 0x25D08738C4DBD2DALL);
  unint64_t v150 = (((v130 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xDA2F78C73B242D25))
        - ((2 * ((v130 ^ 0xBFD7D98B06EAC280) & (v138 ^ 0xDA2F78C73B242D25))) & 0x56368B31CE6A6C96)
        + 0x2B1B4598E735364BLL) ^ v137;
  unint64_t v151 = v147 ^ v150;
  *((void *)&v116 + 1) = v144 ^ v147 ^ 0x1877DA25;
  *(void *)&long long v116 = v144 ^ v147 ^ 0x425764BB40000000;
  uint64_t v152 = v116 >> 30;
  *((void *)&v116 + 1) = v147 ^ v150 ^ 0x7ACAA;
  *(void *)&long long v116 = v147 ^ v150 ^ 0xD2679FA6A2600000;
  unint64_t v153 = v145 ^ v135 ^ v149;
  uint64_t v154 = ((v144 ^ v147) << 25) ^ 0x76B0EFB44A000000;
  unint64_t v155 = v145 & 0xFDFEEACE34F5F11BLL ^ 0x3BDA1E3360BF843ALL ^ (v145 & 0x2011531CB0A0EE4 | (v145 << 58));
  unint64_t v156 = v152 ^ ((v144 ^ v147) >> 61 << 34) ^ 0x84F57132E3442245;
  uint64_t v157 = (v150 >> 41) ^ 0x1AAB48;
  uint64_t v158 = (v116 >> 19) ^ ((v147 ^ v150 ^ 0x45913843548F5920) << 36) ^ ((v147 ^ v150 ^ 0x45913843548F5920) >> 28) ^ 0x6E8F58A97F6A7E5FLL;
  unint64_t v159 = v151 ^ 0xF21A789784A8EA0ALL ^ (v158 - ((2 * v158) & 0x40FBCE624D9E8D40) + 0x207DE73126CF46A0);
  unint64_t v160 = ((v145 >> 1) ^ 0xB94404C26E3F6AB3) & 0x7C021EBF7A23BD58 ^ 0x1AA593D689AE3BC0 ^ (((2
                                                                                               * (((v145 >> 1) ^ 0xB94404C26E3F6AB3) & 0x7C0216BF7A23BD58 ^ 0xCBE37E8C58B4FCAELL)) | 0x28DDF831674DECCLL)
                                                                                             - (((v145 >> 1) ^ 0xB94404C26E3F6AB3) & 0x7C0216BF7A23BD58 ^ 0xCBE37E8C58B4FCAELL)
                                                                                             + 0x7EB9103E74C5909ALL);
  unint64_t v161 = v160 - ((2 * v160) & 0xD693BBA5CFDE75EELL) - 0x14B6222D1810C509;
  uint64_t v162 = __ROR8__(v156, 34);
  *((void *)&v116 + 1) = v150 ^ 0xDDDDDDDD;
  *(void *)&long long v116 = v150 ^ 0x35569090A7EB6480;
  uint64_t v163 = v150 ^ 0x30FD2789F297DFCDLL ^ ((v116 >> 7) - ((2 * (v116 >> 7)) & 0xB576E32AAF97620) + 0x5ABB719557CBB10);
  uint64_t v164 = (v162 ^ (v148 >> 39) ^ 0x84AEC9) + v154;
  uint64_t v165 = v162 & v154;
  uint64_t v166 = v163 & v157;
  uint64_t v167 = v163 + v157;
  unint64_t v168 = v155 ^ (v145 << 63);
  uint64_t v169 = v164 - 2 * v165;
  unint64_t v170 = v161 ^ 0x40E1CFA910F37051 ^ (v168 - ((2 * v155) & 0xF75031C15A79C55CLL) - 0x457E71F52C31D52);
  BOOL v171 = v103 == 0x7809200909112110;
  uint64_t v172 = v170 ^ 0x457E71F52C31D51;
  if (v171) {
    uint64_t v172 = v161 ^ 0x40E1CFA910F37051;
  }
  uint64_t v173 = v169 ^ (8 * v148);
  uint64_t v174 = v170 + 2 * ((v172 ^ 0x7BA818E0AD3CE2AELL) & v155) + 0x2B15C54B31C311D7;
  if (((v161 ^ 0xBB49D749BDCF92FFLL) & v168) != 0) {
    uint64_t v174 = ((v168 + (v161 ^ 0x44B628B642306D00) + 1) ^ 0xAF9DC75BF7CB31DFLL)
  }
         + 0x7B77FDEF39F7DFF8
         + ((2 * (v168 + (v161 ^ 0x44B628B642306D00) + 1)) & 0x5F3B8EB7EF9663BELL);
  uint64_t v175 = (v167 - 2 * v166) ^ (v150 << 23);
  unint64_t v176 = v153 ^ (v153 >> 10) ^ (v153 >> 17) ^ (v153 << 47) ^ (v153 << 54);
  uint64_t v177 = v175 ^ v176;
  *((void *)&v178 + 1) = v174 + 0x14EA3AB4CE3CEE29;
  *(void *)&long long v178 = v174 - 0x2B15C54B31C311D7;
  unint64_t v179 = v173 ^ 0xAA6A2D4BA2838D66;
  uint64_t v180 = __ROR8__(__ROR8__(v175, 57) ^ __ROR8__(v159, 57) ^ 0x5703AD7E27C8672FLL, 7);
  unint64_t v181 = v173 ^ 0xAA6A2D4BA2838D66 ^ (v145 >> 6) ^ __ROR8__(__ROR8__(v145, 62) & 0xFFFFBFFFFFFFFFFBLL ^ 0x4F1EC6363424B53DLL ^ (v178 >> 61), 3);
  *((void *)&v178 + 1) = v180 ^ 0x16FDF2E892CF90CELL;
  *(void *)&long long v178 = v180;
  unint64_t v182 = (v181 ^ 0x3CBE485844A65555) & (v176 ^ 0x5156C560131506D7) ^ v173 ^ 0xAA6A2D4BA2838D66;
  unint64_t v183 = (v181 ^ 0xC341B7A7BB59AAAALL) & (v173 ^ 0x5595D2B45D7C7299) ^ v180 ^ 0x16FDF2E892CF90CELL;
  unint64_t v184 = v181 ^ 0xC341B7A7BB59AAAALL ^ (v175 ^ 0x4853F5B26E800000) & (v176 ^ 0xAEA93A9FECEAF928);
  unint64_t v185 = (v180 ^ 0x16FDF2E892CF90CELL) & (v177 ^ 0xE6FACF2D826AF928);
  unint64_t v186 = (__ROR8__((v178 >> 38) ^ 0x2F851D43D911B5B3, 26) ^ 0xAD6F61F41EB8AF09) & v179 ^ v177;
  unint64_t v187 = v183 ^ v186;
  *((void *)&v178 + 1) = v183 ^ v186 ^ 0x3D2C8;
  *(void *)&long long v178 = v183 ^ v186 ^ 0x1039139166E00000;
  uint64_t v188 = v178 >> 19;
  *(void *)&long long v178 = __ROR8__(v184 ^ 0x616B258C5FF13C26, 27);
  unint64_t v189 = v184 ^ 0x6DC4FB0BD4FFFF44;
  uint64_t v190 = (v184 ^ v185) - ((2 * (v184 ^ v185)) & 0x20CCDCC0B3EBB780);
  unint64_t v191 = __ROR8__(v178 ^ 0x61D86C4195FBD0F1, 37);
  unint64_t v192 = (v190 - 0x6F99919FA60A2440) ^ v176;
  uint64_t v193 = v182 ^ v183 ^ ((v182 ^ v183) >> 39) ^ (8 * (v182 ^ v183)) ^ ((v182 ^ v183) << 25) ^ ((v182 ^ v183) >> 61);
  unint64_t v194 = v188 ^ ((v183 ^ v186 ^ 0x190530D27D9506D7) << 36) ^ ((v183 ^ v186 ^ 0x190530D27D9506D7) >> 28) ^ 0xB76D41F000000000;
  uint64_t v195 = (v194 - ((2 * v194) & 0x55AAA03E0CFD77E8) + 0x2AD5501F067EBBF4) ^ v187;
  *((void *)&v178 + 1) = v186 ^ 0x27DFA634586;
  *(void *)&long long v178 = v186 ^ 0x4CBCA80000000000 ^ (((v186 << 57) ^ 0xC00000000000000)
                                                  - (((v186 << 57) ^ 0xC00000000000000) >> 59 << 60)
                                                  + 0x780C2F2851B0554ELL);
  uint64_t v196 = ((v193 ^ 0xABCF8FE7C463E5DLL)
        + (v189 ^ (v189 >> 1) ^ (v191 << 58))
        - 2 * ((v193 ^ 0xABCF8FE7C463E5DLL) & (v189 ^ (v189 >> 1) ^ (v191 << 58)))) ^ ((v191 >> 6) | (v191 << 63));
  uint64_t v197 = __ROR8__(__ROR8__(v186, 49) & 0xFFFFFFFFFFC07FFFLL ^ 0x99F018EF68E2856ALL ^ (v178 >> 42), 22);
  unint64_t v198 = v192 ^ (v192 >> 10) ^ (((v192 << 54) ^ (v192 << 47)) & 0xFFFF800000000000 | (v192 >> 17));
  unint64_t v199 = v198 ^ 0xE51AD4C169E5F9B5;
  BOOL v171 = v75 == 0;
  unint64_t v200 = 0x228B35C087A7C481;
  if (!v171) {
    unint64_t v200 = v197 ^ 0xDD74CA3F78583B7ELL;
  }
  unint64_t v201 = v197 & 0xDD74CA3F78583B7ELL ^ __ROR8__(v186, 41) ^ v200 & v197 ^ 0xB481FAC9F88D236BLL;
  unint64_t v202 = (v201 - 0x2D87281FCA9CF238 - ((2 * v201) & 0xA4F1AFC06AC61B90)) ^ v199;
  unint64_t v203 = v201 & (v198 ^ 0xC89DFCDEA3790B82) ^ v196 ^ v199 ^ (((v195 ^ v201 ^ 0x3AEC438EF35F5D0DLL) & ~v202)
                                                             - 0x2D87281FCA9CF238
                                                             - ((2 * ((v195 ^ v201 ^ 0x3AEC438EF35F5D0DLL) & ~v202)) & 0xA4F1AFC06AC61B90));
  BOOL v204 = a28 > 0xA2393DEE;
  if (v204 == (a33 + 1247349206) < 0x5DC6C211) {
    BOOL v204 = a33 + 1247349206 < a26;
  }
  *((void *)&v205 + 1) = v203 ^ 0x149E7;
  *(void *)&long long v205 = v203 ^ 0x29E1AB0124FE0000;
  return (*(uint64_t (**)(void))(v38 + 8 * (v207 ^ (31 * v204))))(v203 ^ __ROR8__(v203, 10) ^ (v205 >> 17));
}

uint64_t sub_1B02C67EC@<X0>(int a1@<W3>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1830 * (a2 + 1 == v3 + 64)) ^ a1)))();
}

uint64_t sub_1B02C68AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  BOOL v10 = v8 != ((v7 ^ a7) - 112);
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 | (4 * v10)) ^ v7)))();
}

uint64_t sub_1B02C68D0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v14 = v10 > 0x415FD164;
  uint64_t v15 = (a1 - 1125271914);
  *(unsigned char *)(a5 + v15) = *(unsigned char *)(v13 + v15) ^ *(unsigned char *)(v6 + (v15 & 0xF)) ^ *(unsigned char *)(v7 + (v15 & 0xF)) ^ (-73 * (v15 & 0xF)) ^ *(unsigned char *)(v5 + (v15 & 0xF) + ((33 * (v9 ^ 0x270u)) ^ 0x148)) ^ 0xD0;
  LODWORD(v15) = a1 + 2072896818;
  uint64_t v16 = (a1 + 1);
  int v17 = v14 ^ (v15 < v8);
  BOOL v18 = v15 < v11;
  if (!v17) {
    BOOL v14 = v18;
  }
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * ((2612 * v14) ^ v9)))(v16);
}

uint64_t sub_1B02C6988@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)(((a1 == v1 - 751) * (((v1 + 1549562830) & 0xA3A38B67) + 1498)) ^ v1)))();
}

uint64_t sub_1B02C69C8()
{
  BOOL v4 = v1[8] == 0x2E015889EE853F5ALL || (v1[5] | v1[2]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((((v0 ^ 0x97 ^ v4) & 1) * (v0 - 199)) ^ v0)))();
}

uint64_t sub_1B02C6A24()
{
  return sub_1B02C6A3C();
}

uint64_t sub_1B02C6A3C@<X0>(char a1@<W0>, int a2@<W1>, int a3@<W3>, uint64_t a4@<X8>)
{
  int v10 = (*(unsigned __int8 *)(v6 + a4) ^ a2) - (((v4 + v8) & a1) + *(unsigned char *)(v5 + a4));
  return (*(uint64_t (**)(void))(v9 + 8 * ((2076 * ((a3 & (2 * v10)) + (v10 ^ v7) == v7)) ^ v4)))();
}

uint64_t sub_1B02C6A88(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  int v13 = (*(unsigned __int8 *)(v8 + (v10 + 1)) | (a2 << 8)) + a7;
  return (*(uint64_t (**)(uint64_t, void))(v9 + 8 * (((a6 != 1) * a3) ^ a4)))(a1, (v13 ^ a8) + ((a4 + 111) ^ v12) + (v11 & (2 * v13)));
}

uint64_t sub_1B02C6A94(int a1)
{
  BOOL v5 = a1 + 1153571876 <= (int)(((v2 + 1772206042) & 0x965E45FE) + 732028597) && a1 + 1153571876 >= v3;
  return (*(uint64_t (**)(void))(v1 + 8 * ((51 * v5) ^ v2)))();
}

void sub_1B02C6AF8()
{
}

void sub_1B02C6B44()
{
}

void zxcm2Qme0x(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02C6DC4()
{
  STACK[0x500] = STACK[0x300];
  LODWORD(STACK[0x508]) = STACK[0x43C];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((61 * (LODWORD(STACK[0x564]) - 1017008128 + ((v0 - 598) | 0x304u) - 666 - 234 < 2)) ^ (v0 + 764))))();
}

uint64_t sub_1B02C6E20()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((v0 >= LODWORD(STACK[0x2C0])) * (((STACK[0x2F0] - 835) | 0x808) - 2072)) ^ (STACK[0x2F0] - 690))))();
}

void sub_1B02C6E5C()
{
}

uint64_t sub_1B02C6E7C(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (int)((((((v21 + 1351978965) & 0xAF6A6DE9) + 338) ^ 0x1C3) * (a21 == a4 + 10)) ^ v21)))();
}

uint64_t sub_1B02C6EC4()
{
  int v2 = *(_DWORD *)(STACK[0x228] + 56);
  *(_DWORD *)(STACK[0x228] + 56) = v2 + 1;
  return (*(uint64_t (**)(void))(v1 + 8 * ((2118 * (((v0 - 823) ^ 0x9BAA586F) + v2 < 0xFFFFFFFA)) ^ (v0 - 823))))();
}

uint64_t sub_1B02C6F08()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((14
                                * (*(unsigned char *)(v3 - 0x7DA9E0EFFB1E361ALL) & ((*(_DWORD *)(v2 + 16) ^ v0) - 1142171605 < ((((v1 - 1368140889) ^ 0xAE73D70A) - 1141) ^ (v1 - 1368140889) & 0x518C2BC1)))) ^ v1)))();
}

void sub_1B02C6F9C(uint64_t a1)
{
  uint64_t v5 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)a1 - 628203409 * (a1 ^ 0x82880C33);
  uint64_t v4 = *(void *)(a1 + 8);
  v3[1] = (460628867
         * ((2 * ((v3 ^ 0xB8B0F087) & 0x6A3FC9C7) - (v3 ^ 0xB8B0F087) - 1782565320) ^ 0x61E644C2)) ^ (v1 + 282);
  uint64_t v2 = (char *)*(&off_1F08D3590 + (v1 ^ 0x63)) - 12;
  (*(void (**)(_DWORD *))&v2[8 * v1 + 17096])(v3);
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02C70D4(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unsigned int a20)
{
  BOOL v22 = v21 - 224096060 < (int)(a20 + 221511899);
  if (v21 - 224096060 < -1925971749 != a20 > ((a1 - 1809) | 0x498u) + 1925970314) {
    BOOL v22 = a20 > ((a1 - 1809) | 0x498u) + 1925970314;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((v22 * (((a1 - 1935) | 0x131) - 423)) ^ a1)))();
}

uint64_t sub_1B02C7158@<X0>(int a1@<W8>)
{
  unsigned int v5 = (((v7 | 0x7CABEC2E) - v7 + (v7 & 0x835413D0)) ^ 0x27EC9D8) * a1;
  unsigned int v10 = v5 + 1193549491;
  v7[0] = v5 + 1584941602;
  v7[1] = v5 + v1 - 1023;
  uint64_t v8 = 0x72FA7492185D929CLL;
  uint64_t v9 = v3;
  uint64_t result = (*(uint64_t (**)(_DWORD *))(v4 + 8 * (v1 + 800)))(v7);
  _DWORD *v2 = *(_DWORD *)(v3 - 0x7DA9E0EFFB1E3616);
  return result;
}

uint64_t sub_1B02C71E0@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  int v6 = *(_DWORD *)(v3 + 1428);
  if (v6 == 568732680 || v6 == a2) {
    return (*(uint64_t (**)(void))(v5
  }
                                + 8 * (((*(_DWORD *)(a3 + 476) == 2050283967) * ((a1 + 271) ^ 0x6DA)) ^ (a1 + 271))))();
  STACK[0x328] = STACK[0x260];
  return v4(1554);
}

uint64_t sub_1B02C72F4(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((23 * (a4 + a3 + ((v4 + 810) ^ 0x1065C902u) < 8)) ^ v4)))();
}

uint64_t sub_1B02C7370@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)(*v3 + 4 * (v7 + v5)) = *(_DWORD *)(*v4 + 4 * (v7 + v5));
  return (*(uint64_t (**)(void))(a1 + 8 * (((v7 - 1 == v1) * v6) | v2)))();
}

uint64_t sub_1B02C73A8@<X0>(int a1@<W1>, uint64_t a2@<X2>, int a3@<W8>)
{
  int v5 = a3 - 999;
  uint64_t v6 = (a1 - 490610670 + a3 - 999);
  BOOL v8 = v3 - 1878669732 > ((a3 - 999) ^ 0x62C1E031) || v3 - 1878669732 < (int)v6;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void, uint64_t))(v4 + 8 * ((1735 * v8) ^ v5)))(0xB635F045AA5D931, 4159438842, a2, (a2 + 676251709), v6);
}

uint64_t sub_1B02C74B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  unsigned int v24 = ((a3 - 235729183) & 0xFFFFFFF0) + v21 - 316 - 34;
  int v25 = 1759421093 * ((v23 - 136) ^ 0xB37DB054);
  *(void *)(v23 - 128) = a21;
  *(_DWORD *)(v23 - 120) = v21 - v25 + 1478;
  *(_DWORD *)(v23 - 136) = (v24 ^ 0x2EFED7F1) - v25 + ((2 * v24) & 0x5DFDAFE0) - 145227776;
  *(_DWORD *)(v23 - 132) = v25 + a3 - a14 + 1980301827;
  int v28 = v21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v21 + 2045)))(v23 - 136);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((2159 * (*a15 == 1904944996)) ^ v28)))(v26);
}

uint64_t sub_1B02C7598()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((495
                                * (((v3 + 23) ^ (((v1 + v3 + 617 - 853) & (2
                                                                                          * (*(unsigned __int8 *)(v2 + 6)
                                                                                           - 1)))
                                                                + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)) & 1)) ^ v3)))();
}

void sub_1B02C75E4(_DWORD *a1)
{
  unsigned int v1 = *a1 - 1755732067 * ((((2 * a1) | 0xA1541F8) - a1 - 84582652) ^ 0xDBCC1D27);
  __asm { BRAA            X8, X17 }
}

void sub_1B02C7690()
{
}

uint64_t sub_1B02C773C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v10 = a2 + v7 + v8 + v9 - 2042984217 + 2100615796;
  unsigned int v11 = v5 - 1561651094;
  int v12 = (v11 < 0x183E053) ^ (v10 < 0x183E053);
  BOOL v13 = v10 > v11;
  if (v12) {
    BOOL v13 = v10 < 0x183E053;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((v13 * (((a5 + 985970062) & 0xC53B4DF6) - 1347)) ^ (a5 + 880))))();
}

uint64_t sub_1B02C77D4(uint64_t a1)
{
  uint64_t v7 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * (((a1 | 0x81A8D923) - (a1 & 0x81A8D923)) ^ 0x8B5CD70C);
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)a1;
  unsigned int v5 = (535753261 * ((((2 * &v4) | 0xAC6182C2) - &v4 + 701447839) ^ 0xDCC4CF4E)) ^ (v1 - 426520787);
  uint64_t v6 = v2;
  return (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08D3590 + (v1 ^ 0x196C390E))
                                              + 8 * (v1 ^ 0x196C30C8)
                                              - 12))(&v4);
}

_DWORD *sub_1B02C78DC(_DWORD *result)
{
  *uint64_t result = 1073812325;
  return result;
}

uint64_t sub_1B02C78E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v18 = 3804331 * ((((2 * &a10) | 0xC1487368) - &a10 + 526108236) ^ 0x9E711C42);
  a10 = v18 + (v16 ^ 0xDE78CA63) + 2147450815 + ((v16 << (((v17 - 28) ^ 0x59) + 18)) & 0x3CF194C6);
  a11 = v18 + v17 + 60;
  a14 = v18 + 1207118207;
  a12 = &STACK[0x72FA7492185D929C];
  a13 = v14;
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v15 + 8 * (v17 + 1883)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((1317 * (*(_DWORD *)(v14 - 0x7DA9E0EFFB1E3616) == 1904944996)) ^ v17)))(v19);
}

uint64_t sub_1B02C79E8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((27 * (((((v2 ^ 0x7B2) + 444) ^ ((v1 + v0 - 2095036159) < 8)) & 1) == 0)) ^ v2)))();
}

void sub_1B02C7A58(uint64_t a1)
{
  int v2 = (uint64_t *)*(&off_1F08D3590
                  + ((-51 * ((qword_1E9B30C18 - dword_1E9B309D0) ^ 0x84)) ^ byte_1B04D8230[byte_1B04D35C0[(-51 * ((qword_1E9B30C18 - dword_1E9B309D0) ^ 0x84))] ^ 0xC0])
                  + 82);
  unsigned __int8 v3 = -51 * ((qword_1E9B30C18 - *v2) ^ 0x84);
  uint64_t v4 = (unint64_t *)*(&off_1F08D3590
                           + ((*off_1F08D37E0)[*((unsigned __int8 *)off_1F08D3B98 + v3 - 4) ^ 0x97] ^ v3)
                           + 8);
  unint64_t v5 = *v2 ^ (unint64_t)&v9 ^ *v4;
  uint64_t v6 = 1358147533 * v5 + 0xEB3E64746BB5B7CLL;
  unint64_t v7 = 1358147533 * (v5 ^ 0xF14C19B8B944A484);
  uint64_t *v2 = v6;
  unint64_t *v4 = v7;
  int v8 = (char *)*(&off_1F08D3590
               + ((-51 * ((qword_1E9B30C18 - dword_1E9B309D0) ^ 0x84)) ^ byte_1B04CE9A0[byte_1B04D9EA0[(-51 * ((qword_1E9B30C18 - dword_1E9B309D0) ^ 0x84))] ^ 0xA3])
               + 71)
     - 12;
  (*(void (**)(void, uint64_t (*)()))&v8[8
                                                   * (*((unsigned char *)off_1F08D3940
                                                                       + (*((unsigned __int8 *)off_1F08D3B88
                                                                          + (-51
                                                                                            * ((v7 + *(unsigned char *)v2) ^ 0x84))
                                                                          - 8) ^ 0x8Bu)) ^ (-51
                                                                                          * ((v7 + *(unsigned char *)v2) ^ 0x84)))
                                                   + 17400])(*(&off_1F08D3590+ (*((unsigned char *)off_1F08D3678+ (*((unsigned __int8 *)off_1F08D3760 + (-51 * ((v7 + *(unsigned char *)v2) ^ 0x84))- 4) ^ 0x3Bu)) ^ (-51 * ((v7 + *(unsigned char *)v2) ^ 0x84)))- 88), sub_1B02ABB40);
  __asm { BRAA            X10, X17 }
}

void sub_1B02C7C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  if (v5 == v7 + ((a5 + 378) | 0x104) - 1430) {
    uint64_t v9 = 0;
  }
  else {
    uint64_t v9 = v8;
  }
  *(void *)(v6 - 0x2DC0098902ACAEB6) = v9;
  JUMPOUT(0x1B02C7C68);
}

uint64_t sub_1B02C7CA8@<X0>(int a1@<W0>, uint64_t a2@<X2>, unint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, unsigned int a6@<W8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v33 = v26 + a4;
  int v34 = v26 + 1;
  uint64_t v35 = 4 * (v34 + a4);
  unint64_t v36 = (*(_DWORD *)(a21 + v35) ^ a6) + (a2 ^ HIDWORD(v28));
  unint64_t v37 = HIDWORD(v22)
      + v23 * (unint64_t)(*(_DWORD *)(*v29 + v35) ^ a6)
      + ((v36 + (v27 ^ a1) - (v24 & (2 * v36))) ^ a3);
  *(_DWORD *)(a21 + 4 * v33) = v37 + a6 - (v21 & (2 * v37));
  BOOL v39 = v34 + a5 <= v32 && v34 + a5 >= v31;
  return (*(uint64_t (**)(void))(v25 + 8 * (v30 ^ (8 * v39))))();
}

uint64_t sub_1B02C7D2C@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21,_DWORD *a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v29 = 112 * (a1 ^ 0x6BE);
  uint64_t v30 = 4 * (v26 - 2147152570);
  unsigned int v31 = 2003914383 * ((*(_DWORD *)(*a21 + (*a22 & 0x28649C28)) ^ (a25 + v30)) & (v29 ^ 0x7FFFF81F));
  int v32 = v31 ^ HIWORD(v31);
  *(_DWORD *)(a26 + v30) ^= *(_DWORD *)(a25 + v30) ^ *((_DWORD *)*(&off_1F08D3590 + (a1 ^ 0x6AD))
                                                     + ((2003914383 * v32) >> 24)) ^ *((_DWORD *)*(&off_1F08D3590 + (a1 ^ 0x6E9)) + ((2003914383 * v32) >> 24) + 1) ^ *((_DWORD *)*(&off_1F08D3590 + (a1 ^ 0x62A)) + ((2003914383 * v32) >> 24) - 1) ^ (1317994496 * v32) ^ (2003914383 * v32) ^ (-512782329 * ((2003914383 * v32) >> 24));
  return (*(uint64_t (**)(void))(v27 + 8 * ((3872 * (v28 + v29 - 2017 == 1006538323)) ^ v29)))();
}

uint64_t sub_1B02C7EB8(uint64_t a1)
{
  int v1 = (*(_DWORD *)a1 ^ (1178560073 * ((-2 - ((a1 | 0xBD34F701) + (~a1 | 0x42CB08FE))) ^ 0xF85F709C))) + 663;
  signed int v2 = (v1 ^ 0xAD43E030) + *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1);
  if (v2 < 0) {
    signed int v2 = -v2;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v1 - 855)
                              + 8
                              * ((2767
                                * ((v2 ^ 0xBFEF5FF3) + ((2 * v2) & 0x7FDEBFE6) + 1074831372 < ((109 * (v1 ^ 0x3DD)) ^ 0x7FFFFF83u)
                                                                                            + v1
                                                                                            - 675)) ^ v1)
                              - 12))();
}

uint64_t sub_1B02C7FDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,char a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,char a35)
{
  int v37 = 628203409 * ((((v36 - 120) | 0x1BC83C0B) - ((v36 - 120) & 0x1BC83C0B)) ^ 0x99403038);
  *(_DWORD *)(v36 - 112) = v37 + a5 + 1905;
  *(_DWORD *)(v36 - 108) = a14 - v37 + a5 - a7 - 1184876074;
  *(void *)(v36 - 120) = a11;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (a5 + 2251)))(v36 - 120);
  uint64_t v40 = a35 & 0x3F;
  *(&a26 + (v40 ^ 0x11)) = 80;
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * ((2126 * ((v40 ^ 0x11) > 0x37)) ^ a5)))(v39);
}

uint64_t sub_1B02C80E8(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((112 * (v2 < ((3 * ((a2 - 190357179) & 0xB589EFF ^ 0xA52)) ^ 0x817u))) ^ a2)))();
}

uint64_t sub_1B02C8138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34)
{
  HIDWORD(a33) = *(_DWORD *)(a31 + 24 * (((v34 + 1397254747) & 0xACB7979F ^ 0xC894552E) + a8) + 16);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v36 + 8 * ((112 * ((((int)a1 + *(_DWORD *)(a31 + 24 * (a8 - 929802701)) + 1761) & 0xFFFFFFFFFFFFFFDLL) != 0)) ^ v34)))(a1, a2, a3, a4, a5, a6, a7, *(void *)(v35 + 24 * (a8 - 929802701) + 16), a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_1B02C820C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a4 + (v9 + v6)) = *(void *)(v8 + (v9 + v6));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a6 == 0) * v7) ^ a3)))();
}

uint64_t sub_1B02C823C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  BOOL v22 = v19 + 37514009 < (a19 - 636595010);
  if (a19 - 636595010 < ((v21 - 2002) ^ 0x2D837011u) != (v19 + 37514009) < 0x2D837022) {
    BOOL v22 = a19 - 636595010 < ((v21 - 2002) ^ 0x2D837011u);
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((31 * v22) ^ v21)))();
}

uint64_t sub_1B02C82B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((((a7 - 834) | 0x98) + 1274) ^ (a7 - 853635948) & 0x32E175BE) * (v7 > 0x1F)) ^ a7)))();
}

uint64_t sub_1B02C8300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((22 * (v7 != ((v6 - v9 - 615) ^ (a6 - 359) ^ (v10 - 421)))) ^ v6)))();
}

void sub_1B02C834C(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 8) ^ (628203409 * ((-2 - ((~a1 | 0x16878567) + (a1 | 0xE9787A98))) ^ 0x940F8954));
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02C8490@<X0>(int a1@<W0>, int a2@<W1>, unint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, unsigned int a6@<W5>, void *a7@<X7>, int a8@<W8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v39 = 4 * (a1 + 1 + a5);
  unint64_t v40 = ((a8 + v29) & v34 ^ v38 ^ *(_DWORD *)(a25 + v39))
      + (a4 ^ HIDWORD(v31))
      + a6 * (unint64_t)(*(_DWORD *)(*a7 + v39) ^ v26);
  unint64_t v41 = HIDWORD(v25)
      + v28 * (unint64_t)(*(_DWORD *)(*v36 + v39) ^ v26)
      + ((v40 + a2 - ((2 * v40) & 0x924BA742)) ^ a3);
  *(_DWORD *)(a25 + 4 * (a1 + a5)) = v41 + v26 - (v27 & (2 * v41));
  BOOL v43 = a1 + v35 > v32 || a1 + v35 < v37;
  return (*(uint64_t (**)(void))(v33 + 8 * ((v43 * v30) ^ a8)))();
}

uint64_t sub_1B02C8548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v6 + 8 * ((389 * (v5 < ((a5 - 709) | 2u) - 1011)) ^ a5)))();
}

uint64_t sub_1B02C8578@<X0>(uint64_t a1@<X0>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v51 = *(_DWORD *)(&a35 + ((v49 + v47) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v49 + v47)) = v51 ^ 0xBE;
  *(unsigned char *)(a1 + (v49 + v47 + 1)) = 3 * (v48 ^ 0x58)
                                                 + (BYTE1(v51) ^ 7)
                                                 + (~(v51 >> 7) | 0x5F)
                                                 - 104;
  *(unsigned char *)(a1 + (v49 + v47 + 2)) = (BYTE2(v51) ^ 0x4A)
                                                 - 2 * ((BYTE2(v51) ^ 0x4A) & 0x55 ^ BYTE2(v51) & 5)
                                                 - 48;
  *(unsigned char *)(a1 + (v49 + v47 + 3)) = (HIBYTE(v51) ^ 0x74)
                                                 - 2 * ((HIBYTE(v51) ^ 0x74) & 0x58 ^ HIBYTE(v51) & 8)
                                                 - 48;
  BOOL v52 = v49 - 1833853253 < (a47 - 2055450415);
  if (v49 - 1833853253 < a2 != a47 - 2055450415 < a2) {
    BOOL v52 = a47 - 2055450415 < a2;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((v52 | (16 * v52)) ^ v48)))();
}

uint64_t sub_1B02C8678()
{
  BOOL v4 = ((v1 + 1275) ^ 0x86FC029F ^ ((v1 + 1380246147) | 0x1B21)) + v0 < v0 + v3;
  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * v4) | (32 * v4)) ^ v1)))();
}

uint64_t sub_1B02C86DC@<X0>(int a1@<W5>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((a2 == v3) * ((v2 + 1380252684) ^ a1 ^ 0xCD)) ^ v2)))();
}

uint64_t sub_1B02C8718(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  a17 = &STACK[0xFBD18CA084591A0];
  a19 = 1989 - 460628867 * (&a17 ^ 0x4C96827D);
  uint64_t v21 = (*(uint64_t (**)(unint64_t **))(v20 + 19064))(&a17);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((121 * (a18 == 1904944996)) ^ v19)))(v21);
}

uint64_t sub_1B02C87A0()
{
  int v4 = (v3 - 164) | 0x260;
  unsigned int v10 = (v3 + 87) ^ (1374699841
                   * ((((2 * &v10) | 0x6A3AD96A) - &v10 - 891120821) ^ 0x58E974BC));
  int v12 = &STACK[0x571B6222F4470C36];
  BOOL v13 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 ^ 0x865)))(&v10);
  int v12 = v7;
  unsigned int v10 = (v3 + 612) ^ (1755732067
                    * (((&v10 ^ 0x96199D4)
                      + 874547561
                      - 2 * ((&v10 ^ 0x96199D4) & 0x34208969)) ^ 0xE387AD66));
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 2040)))(&v10);
  if (v13 == v4 + v0) {
    int v5 = v8;
  }
  else {
    int v5 = (int)v13;
  }
  unsigned int v11 = v3
      + ((2 * ((&v10 ^ 0xDD206B1B) & 0x570861) - (&v10 ^ 0xDD206B1B) - 5703778) ^ 0x287C92AA)
      * v2
      + 190;
  int v12 = v7;
  (*(void (**)(unsigned int *))(v1 + 8 * (v3 + 2003)))(&v10);
  int v12 = v9;
  unsigned int v11 = v4 + ((2 * (&v10 & 0x3E516768) - &v10 - 1045522284) ^ 0xCB5A96BB) * v2 - 254;
  (*(void (**)(unsigned int *))(v1 + 8 * (v4 ^ 0xA17)))(&v10);
  return v5 ^ (v0 + 744);
}

uint64_t sub_1B02C899C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, unsigned int a17, unint64_t *a18, unint64_t *a19, unint64_t *a20,unsigned int a21)
{
  a21 = (v21 + 1698) ^ (1225351577
                      * ((2 * (&a17 & 0x1AED1870) - &a17 + 1695737736) ^ 0x46883F9E));
  a18 = a16;
  a19 = &STACK[0x4868F96DDF288FD4];
  a20 = &STACK[0x3B842D404CB6A8D4];
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0x984)))(&a17);
  a17 = (v21 + 144) ^ (1374699841
                     * ((((2 * &a17) | 0x4DE91C44) - &a17 - 653561378) ^ 0x4B00962B));
  a18 = &STACK[0x571B6222F4470CDA];
  a19 = a16;
  (*(void (**)(unsigned int *))(v22 + 8 * (v21 ^ 0x9BA)))(&a17);
  a17 = (v21 + 669) ^ (1755732067 * ((&a17 & 0x7F19FE2D | ~(&a17 | 0x7F19FE2D)) ^ 0x5E20BC09));
  a18 = a16;
  uint64_t v23 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v21 + 2097)))(&a17);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((1681 * (a19 == ((v21 + 650) ^ a9))) ^ v21)))(v23);
}

uint64_t sub_1B02C8B3C@<X0>(int a1@<W4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(&a19 + (v19 + a2)) = *(unsigned char *)(v20 + v23 - 1568719261)
                                     - ((2 * *(unsigned char *)(v20 + v23 - 1568719261)) & 0xA0)
                                     - 48;
  return (*(uint64_t (**)(void))(v22 + 8 * ((505 * ((a1 + v19 + 1) > 0x3F)) ^ v21)))();
}

uint64_t sub_1B02C8BAC()
{
  *(_DWORD *)(*(void *)(v4 - 0x6155FFFFEB445CBDLL) + 4 * (v0 + v1 + 1)) = -1051061869;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v0 + v1) > 0x7FFFFFFE) * (31 * (v2 ^ 0x323) - 1329)) ^ (v2 + 912))))();
}

void sub_1B02C8C10(uint64_t a1)
{
  uint64_t v9 = *MEMORY[0x1E4F143B8];
  int v2 = *(_DWORD *)(a1 + 24) - 535753261 * (a1 ^ 0xAF40E2F);
  if (*(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1) - 1388059666 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1) - 1388059666;
  }
  else {
    unsigned int v3 = 1388059666 - *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1);
  }
  uint64_t v1 = *(void *)(a1 + 8);
  if (*(_DWORD *)(v1 - 0x6155FFFFEB445CC1) - 1388059666 >= 0) {
    unsigned int v4 = *(_DWORD *)(v1 - 0x6155FFFFEB445CC1) - 1388059666;
  }
  else {
    unsigned int v4 = 1388059666 - *(_DWORD *)(v1 - 0x6155FFFFEB445CC1);
  }
  uint64_t v7 = *(void *)a1;
  unsigned int v8 = v2 - 628203409 * (((&v7 | 0x7CA2084D) - (&v7 & 0x7CA2084D)) ^ 0xFE2A047E) - 787;
  int v5 = (char *)*(&off_1F08D3590 + (v2 ^ 0x7C6)) - 12;
  (*(void (**)(uint64_t *))&v5[8 * v2 + 4144])(&v7);
  if (v3 >= v4) {
    unsigned int v6 = v4;
  }
  else {
    unsigned int v6 = v3;
  }
  __asm { BRAA            X12, X17 }
}

void sub_1B02C8D84(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  JUMPOUT(0x1B02B5C1CLL);
}

uint64_t sub_1B02C8D8C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v2 + v3) ^ 0x7F7) * (a1 == v4)) ^ (v2 + v3))))();
}

uint64_t sub_1B02C8DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void, uint64_t, void))(v9
                                                            + 8
                                                            * ((901
                                                              * ((v7 & 0x18) == ((a5 - 4757852) & 0x4897BF ^ 0x3BF))) ^ a5)))((v8 - a7), a2, (a5 - 990));
}

uint64_t sub_1B02C8DFC@<X0>(int a1@<W8>)
{
  BOOL v5 = *(_DWORD *)(v2 + 48) + a1 != ((v1 - 765) ^ 0x445) + 1618564739
    && (*(void *)(v2 + 56) | *(void *)(v2 + 32)) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((4 * v5) | (8 * v5) | v1)))();
}

uint64_t sub_1B02C8E54(uint64_t a1, int a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((1833 * (a2 + 8 == a4 - 170)) ^ a4)))();
}

uint64_t sub_1B02C8E84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  unsigned int v15 = (v13 + ((v12 + 844932434) & 0xCDA3577B) - 345) ^ a12;
  BOOL v16 = ((2 * (v15 - ((2 * v15) & 0xA8FAF634) - 729973990)) & 0xDFDFBD6E ^ (((v12 - 349564045) & 0x14D5EBAD) - 1998933896))
      + ((v15 - ((2 * v15) & 0xA8FAF634) - 729973990) ^ 0xBB92A5AD)
      - 34347012 != 1843644083;
  return (*(uint64_t (**)(void))(v14 + 8 * ((v16 | (2 * v16)) ^ (v12 + 302))))();
}

uint64_t sub_1B02C8F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58)
{
  BOOL v59 = ((((STACK[0x2F0] - 867) | 9) + 22) ^ 0x62395CCB) != 1647926426;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v58
                                                              + 8
                                                              * (int)((2 * v59) | (8 * v59) | (STACK[0x2F0] - 564))))(a1, a2, a58);
}

uint64_t sub_1B02C8FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  *(_DWORD *)(a14 + 4 * (v15 - 757 + v17 - 279524411)) = v14;
  BOOL v20 = v17 + 448149670 > -1419810320 && v17 + 448149670 < v16;
  return (*(uint64_t (**)(void))(v18 + 8 * ((29 * v20) ^ v15)))();
}

uint64_t sub_1B02C9000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v24 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 8 * ((v23 - 359) ^ (1185 * ((a22 & 0x20000000) == 0))));
  return v24(v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17);
}

uint64_t sub_1B02C9030()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3759 * (v3 + v1 + (v0 ^ 0x11Du) - 1879 < ((v0 - 965784172) & 0x3990AF95u) - 918)) ^ v0)))();
}

uint64_t sub_1B02C9080@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v7 = a2 - 1481 + v4;
  uint64_t v8 = (v4 - 44209640);
  *(unsigned char *)(v2 + v8) = *(unsigned char *)(a1 + v8) ^ (99 * (v8 & 0xF)) ^ *(unsigned char *)(*(void *)(v5 + 8 * (a2 - 1654))
                                                                           + (v8 & 0xF)
                                                                           - 10) ^ *(unsigned char *)(*(void *)(v5 + 8 * (a2 ^ 0x705))
                                                                                            + (v8 & 0xF)
                                                                                            - 12) ^ *(unsigned char *)(*(void *)(v5 + 8 * (a2 ^ 0x75B)) + (v8 & 0xF) - 9) ^ 0xD0;
  return (*(uint64_t (**)(void))(v6 + 8 * (a2 ^ (16 * (v7 - 327 != v3)))))();
}

void sub_1B02C9118(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v13 = v11 | 0x104;
  uint64_t v14 = (*(uint64_t (**)(uint64_t, void))(v12 + 8 * ((v11 | 0x104) + 2127)))(a11, 0);
  (*(void (**)(uint64_t))(v12 + 8 * (v13 ^ 0x857)))(v14);
  (*(void (**)(void))(v12 + 8 * (v13 + 2093)))();
  JUMPOUT(0x1B02C9190);
}

uint64_t sub_1B02C9294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  unsigned int v24 = v20 - 1954282942;
  if (v24 <= 0x40) {
    unsigned int v24 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v23
                                                                                         + 8
                                                                                         * (a20 ^ (212
                                                                                                 * (1954282942 - v21 - v22 + v24 > 0xE)))))(a1, a2, a3, a4, 849, -1267802054);
}

void sub_1B02C9314()
{
}

void sub_1B02C9320(uint64_t a1)
{
  int v1 = *(_DWORD *)a1 - 235795823 * ((((2 * a1) | 0xF440C25A) - a1 + 98541267) ^ 0x6E8D2874);
  uint64_t v2 = *(void *)(a1 + 8);
  int v3 = (char *)*(&off_1F08D3590 + v1 - 1058) - 12;
  (*(void (**)(void, uint64_t (*)()))&v3[8 * (v1 ^ 0xDDC)])(*(&off_1F08D3590 + v1 - 1143), sub_1B02ABB40);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02C93D8(int a1)
{
  v7.i64[0] = 0xA0A0A0A0A0A0A0A0;
  v7.i64[1] = 0xA0A0A0A0A0A0A0A0;
  v8.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v8.i64[1] = 0xD0D0D0D0D0D0D0D0;
  uint64_t v9 = (v4 + v3);
  int8x16_t v10 = vrev64q_s8(*(int8x16_t *)(v2 + v9 - 15));
  int8x16_t v11 = vextq_s8(v10, v10, 8uLL);
  int8x16_t v12 = vrev64q_s8(*(int8x16_t *)(v2 + v9 - 31));
  int8x16_t v13 = vextq_s8(v12, v12, 8uLL);
  uint64_t v14 = v1 + v9;
  int8x16_t v15 = vrev64q_s8(vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), v7)), v8));
  *(int8x16_t *)(v14 - 15) = vextq_s8(v15, v15, 8uLL);
  int8x16_t v16 = vrev64q_s8(vaddq_s8(vsubq_s8(v13, vandq_s8(vaddq_s8(v13, v13), v7)), v8));
  *(int8x16_t *)(v14 - 31) = vextq_s8(v16, v16, 8uLL);
  return (*(uint64_t (**)(void))(v6 + 8 * ((908 * (((12 * (a1 ^ 0x8DC)) ^ 0x244) == (v5 & 0xFFFFFFE0))) | (a1 - 1246))))();
}

void sub_1B02C9488(uint64_t a1)
{
  int v1 = 1224239923 * ((-435756335 - (a1 | 0xE606E2D1) + (a1 | 0x19F91D2E)) ^ 0xEB4AE0F9);
  __asm { BRAA            X9, X17 }
}

void sub_1B02C95C8(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(_DWORD *)(v6 - 140) = v4;
  unsigned int v7 = v4 & 0xFFFFFFF8;
  *(void *)(v6 - 120) = v3 - 7;
  *(void *)(v6 - 128) = a3 - 7;
  *(_DWORD *)(v6 - 144) = v7;
  *(_DWORD *)(v6 - 132) = 8 - v7;
  *(_DWORD *)(v6 - 136) = v5 + a2 + a1 + 11;
  JUMPOUT(0x1B02C9638);
}

uint64_t sub_1B02C9770()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 + 1) < 0x14) * v2) ^ v1)))();
}

uint64_t sub_1B02C9788@<X0>(uint64_t a1@<X2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v51 = *(_DWORD *)(&a35 + ((v49 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v49 + a2)) = (HIBYTE(v51) ^ 0x74)
                                            + ((v48 + 55) ^ 0x96)
                                            - ((2 * (HIBYTE(v51) ^ 0x74)) & 0xA0);
  *(unsigned char *)(a1 + (v49 + a2 + 2)) = (BYTE1(v51) ^ 7) - ((v51 >> 7) & 0xA0) - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 1)) = (BYTE2(v51) ^ 0x4A)
                                                - 2 * ((BYTE2(v51) ^ 0x4A) & 0x55 ^ BYTE2(v51) & 5)
                                                - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 3)) = v51 ^ 0xBE;
  BOOL v52 = v49 + 1952886016 < (a47 + 932885086);
  if (v49 + 1952886016 < v47 != a47 + 932885086 < v47) {
    BOOL v52 = a47 + 932885086 < v47;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((3038 * v52) ^ v48)))();
}

uint64_t sub_1B02C9878@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((a1 - 1793883136 >= v1 + ((v2 - 1137) | 0x100u) + 881)
                                * (((v2 - 2079385788) & 0x7BF0E777) - 1104)) ^ v2)))();
}

uint64_t sub_1B02C98D8@<X0>(int a1@<W8>)
{
  uint64_t v7 = v2 - 1;
  *(unsigned char *)(v5 + v7) = ((v1 - 68) ^ v4) * (v1 - 51);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 == 0) * (3 * v3 + 1428)) ^ a1)))();
}

uint64_t sub_1B02C98E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((189
                                * ((*(_DWORD *)(v8 + (v10 + a6) * (uint64_t)v7 + 40) & 8) == ((v6 - 754702762) & 0x2CFBDBAF ^ 0xFFFFFB9E)
                                                                                          + v6
                                                                                          + 1638)) ^ v6)))();
}

uint64_t sub_1B02C9940@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  *(void *)(a2 + v5 + v6) = v8;
  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + v4 - 839 == v3) * a1) ^ v2)))();
}

uint64_t sub_1B02C996C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  BOOL v21 = a18 < 0xF5553118;
  unsigned int v22 = ((v19 + 1102974231) & 0xBE41F1BF) + v18 - 507701271;
  int v23 = v21 ^ (v22 < 0xF5553118);
  BOOL v24 = v22 < a18;
  if (!v23) {
    BOOL v21 = v24;
  }
  return (*(uint64_t (**)(void))(v20 + 8 * ((38 * v21) ^ v19)))();
}

uint64_t sub_1B02C99F8()
{
  *(void *)(v4 - 252 + v2 - 728585860) = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v1 & 0xFFFFFFFFFFFFFFF8) == 8) * ((v0 - 1841514441) & 0x6DC347EF ^ 0x38F)) ^ v0)))();
}

uint64_t sub_1B02C9A5C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((604
                                * ((((v2 + 594) ^ (v1 - 723)) & (2 * (*(unsigned __int8 *)(v3 + 8) - 5)))
                                 + (((v2 + 254) | 0x40) ^ (v0 - 575) ^ (*(unsigned __int8 *)(v3 + 8) - 5)) == v0)) | v2)))();
}

uint64_t sub_1B02C9AAC(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * ((((v2 - 824) ^ 0x548) + 1277) ^ (v2 - 824))))(a1);
}

uint64_t sub_1B02C9B18()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((v0 - 526690010) & 0x1F64A55F ^ 0x2B3) * (v1 == v2)) ^ v0)))();
}

uint64_t sub_1B02C9B58(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v5 + v7) = v9;
  return (*(uint64_t (**)(void))(v8 + 8 * ((((v3 ^ (v6 == v7)) & 1) * a3) ^ v4)))();
}

uint64_t sub_1B02C9B84@<X0>(uint64_t a1@<X2>, int a2@<W3>, uint64_t a3@<X8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return (*(uint64_t (**)(void, uint64_t))(v18
                                                    + 8
                                                    * (((((a2 - 125984153) & 0x7825FF8) - 1607)
                                                      * ((unint64_t)(a17 - a3 - a1 - 0x3142CE0E119B3373) < 0x20)) ^ a2)))(a2 ^ 0x644u, v17);
}

void sub_1B02C9BE8()
{
}

void sub_1B02C9BF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v10 = *(unsigned __int8 *)(v8 - 0x2B41EA7AD2F8E811) ^ 0xAE;
  if (v10 == 1)
  {
    unsigned int v17 = *(_DWORD *)(v8 - 0x2B41EA7AD2F8E82DLL);
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E839) = ((8 * v17) ^ 0x88) - ((16 * v17) & 0xAA) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E838) = ((v17 >> 5) ^ 0x88) - ((v17 >> 5 << (a8 + 124)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E837) = ((v17 >> 13) ^ 0x6D) - ((2 * ((v17 >> 13) ^ 0x6D)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E836) = (~(v17 >> 20) | 0x5F) + (v17 >> 21) + 81;
    unsigned int v18 = *(_DWORD *)(v8 - 0x2B41EA7AD2F8E831);
    HIDWORD(v19) = v18 ^ 0x11;
    LODWORD(v19) = v17 ^ 0xC0000000;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E835) = (v19 >> 29) - ((2 * (v19 >> 29)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E834) = ((v18 >> 5) ^ 0xCF) - ((2 * ((v18 >> 5) ^ 0xCF)) & 0xA0) - 48;
    int v12 = a8 + 687;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E833) = ((v18 >> 13) ^ 0x93)
                                          - 2 * (((v18 >> 13) ^ 0x93) & 0x58 ^ (v18 >> 13) & 8)
                                          - 48;
    unsigned int v16 = (v18 >> 21) ^ 0xFFFFFFCB;
    char v15 = 2 * v16;
  }
  else
  {
    int v11 = a8;
    if (v10 != 2)
    {
LABEL_6:
      STACK[0x340] = *(void *)(v9 + 8 * (v11 - 853));
      JUMPOUT(0x1B02B8B5CLL);
    }
    unsigned int v16 = *(_DWORD *)(v8 - 0x2B41EA7AD2F8E831);
    int v12 = (a8 - 389) | 0x434;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E839) = ((v16 >> 21) ^ 0xCB)
                                          - ((((v16 >> 21) ^ 0xFFFFFFCB) << (((a8 + 123) | 0x34) - 51)) & 0xA0)
                                          - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E838) = ((v16 >> 13) ^ 0x93) - ((2 * ((v16 >> 13) ^ 0x93)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E837) = ((v16 >> 5) ^ 0xCF) - ((2 * ((v16 >> 5) ^ 0xCF)) & 0xA0) - 48;
    unsigned int v13 = *(_DWORD *)(v8 - 0x2B41EA7AD2F8E82DLL);
    HIDWORD(v14) = v16 ^ 0x11;
    LODWORD(v14) = v13 ^ 0xC0000000;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E836) = (v14 >> 29) - ((2 * (v14 >> 29)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E835) = (~(v13 >> 20) | 0x5F) + (v13 >> 21) + 81;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E834) = ((v13 >> 13) ^ 0x6D) - ((2 * ((v13 >> 13) ^ 0x6D)) & 0xA0) - 48;
    *(unsigned char *)(v8 - 0x2B41EA7AD2F8E833) = ((v13 >> 5) ^ 0x88) - ((v13 >> 4) & 0xA0) - 48;
    char v15 = 16 * v13;
    LOBYTE(v16) = (8 * v13) ^ 0x88;
  }
  int v11 = 17 * (v12 ^ 0x601);
  *(unsigned char *)(v8 - 0x2B41EA7AD2F8E832) = v16 - (v15 & 0xA0) + v11 + 75;
  goto LABEL_6;
}

void sub_1B02C9F58()
{
}

void sub_1B02C9F6C(_DWORD *a1@<X8>)
{
  uint64_t v4 = *(void *)(v3 + 16);
  *(void *)(*(void *)(v3 + 24) - 0x3B842D404CB6A8ACLL) = v1;
  *(_DWORD *)(v4 - 0x4868F96DDF288FB0) = v2;
  *(_DWORD *)uint64_t v3 = *a1;
}

void sub_1B02C9FD4(uint64_t a1)
{
  int v1 = 235795823 * ((-2 - ((a1 ^ 0x29040430 | 0x96E8ABCB) + (a1 ^ 0x10C0A082 | 0x69175434))) ^ 0x52961214);
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1B02CA0F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((1265
                                * (*(_DWORD *)(a14 + 4 * (v16 + v18 + 1)) == v14
                                                                                           + (v15 ^ 0xA93)
                                                                                           - 255
                                                                                           - 294)) ^ (v15 - 1681))))();
}

uint64_t sub_1B02CA140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, int a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,int a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  unint64_t v34 = (v28 >> (((v33 - 78) ^ 0xABu) + v33 + 31)) + (a4 ^ HIDWORD(v31)) + (*(_DWORD *)(a28 + a13) ^ v29);
  *(_DWORD *)(a28 + 4 * a14) = v34 + v29 - (v30 & (2 * v34));
  *(_DWORD *)(a28 + a13) = HIDWORD(v34) + v29 - ((2 * HIDWORD(v34)) & 0x2B42336);
  BOOL v35 = a25 - 443821383 < a19;
  if (a20 > a18 != a25 - 443821383 < -2145697073) {
    BOOL v35 = a20 > a18;
  }
  return (*(uint64_t (**)(void))(v32 + 8 * (v33 ^ (989 * v35))))();
}

uint64_t sub_1B02CA20C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v27 - 136) = v22;
  *(void *)(v27 - 128) = a22;
  *(void *)(v27 - 112) = v22;
  *(_DWORD *)(v27 - 120) = v25
                         + 460628867 * ((((2 * (v27 - 144)) | 0xE2DD6A8C) - (v27 - 144) - 1903080774) ^ 0x3DF8373B)
                         + 1789;
  *(void *)(v27 - 144) = v26;
  (*(void (**)(uint64_t))(v24 + 8 * (v25 + 2167)))(v27 - 144);
  *(void *)(v27 - 144) = v22;
  *(void *)(v27 - 136) = v22;
  *(void *)(v27 - 128) = a22;
  *(_DWORD *)(v27 - 120) = v25
                         + 1225351577 * ((2 * ((v27 - 144) & 0x2F436E90) - (v27 - 144) - 792948375) ^ 0xF326497F)
                         + 1368;
  *(void *)(v27 - 112) = v26;
  *(void *)(v27 - 104) = a16;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v25 ^ 0x982)))(v27 - 144);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * ((255
                                              * (((v23 + ((v25 - 1172849961) & 0x45E84CF7u) - 1334528396 < 0x7FFFFFFF) ^ (((v25 - 41) & 0xF7 ^ 0x32) + 41)) & 1)) ^ (((v25 - 1172849961) & 0x45E84CF7) - 1822))))(v28);
}

uint64_t sub_1B02CA344@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  unsigned int v10 = v2 - 2073932710;
  int v11 = v2 - 1;
  int v12 = *(unsigned __int8 *)(v5 + v10);
  if (v12 == 208) {
    __asm { BRAA            X11, X17 }
  }
  if (v12 == 80)
  {
    int v13 = 1904944996;
    uint64_t v14 = *(void *)(v3 + 8);
    int v15 = *(unsigned __int8 *)(v3 + 16) ^ v4;
    *(void *)uint64_t result = v5;
    *(_DWORD *)(result + 8) = v6;
    *(_DWORD *)(result + 12) = v11;
    if (v15 == 86) {
      int v16 = 948410250;
    }
    else {
      int v16 = 948410251;
    }
    *(_DWORD *)(result + 16) = 775263486;
    *(_DWORD *)(result + 20) = v16;
    *(_DWORD *)(result + 24) = 1904944996;
    *(void *)(v14 - 0x3599686F4D71263BLL) = a2;
  }
  else
  {
    uint64_t result = (*(uint64_t (**)(void))(v9 + 8 * (v8 ^ 0xCAC)))();
    int v13 = -1904968515;
  }
  *(_DWORD *)uint64_t v3 = v13;
  return result;
}

void sub_1B02CA42C(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  *(unsigned char *)(a5 + (((v40 - 718) | 0x90) ^ (a1 - 361)) + v39) = a39;
  JUMPOUT(0x1B02CA470);
}

uint64_t sub_1B02CA4E4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((a5 - 372) ^ (v5 + 1231) ^ a5 ^ v5) * (v6 == a4)) ^ a5)))();
}

uint64_t sub_1B02CA51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _DWORD *a14)
{
  int v18 = v14 ^ 0x278;
  int v19 = (*(_DWORD *)(*(void *)(a10 + 8) - 0x296CA2447D59DC44) - 1459773623) * (*a14 ^ ((v14 ^ 0x278) - 1051062897));
  int v20 = 535753261 * ((((v17 - 128) | 0x3F718813) - (v17 - 128) + ((v17 - 128) & 0xC08E77E8)) ^ 0x3585863C);
  *(_DWORD *)(v17 - 128) = v20 + (v14 ^ 0x278) + 870;
  *(_DWORD *)(v17 - 124) = 1388059666 - v20;
  *(void *)(v17 - 112) = a11;
  *(void *)(v17 - 120) = a12;
  *(_DWORD *)(v17 - 104) = (v19 ^ 0xFAD4E5BF) - v20 + ((2 * v19) & 0xF5A9CB7E) + 1303379708;
  uint64_t v21 = (*(uint64_t (**)(uint64_t))(v16 + 8 * (v14 ^ 0xF22)))(v17 - 128);
  BOOL v22 = (int)(v15 + 1684784050) > 1684784051;
  if (v15 > 0x1B943C4D) {
    BOOL v22 = 1;
  }
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((!v22 | (16 * !v22)) ^ v18)))(v21);
}

void sub_1B02CA69C()
{
  int v1 = (const float *)(v0 + 908);
  vld1q_dup_f32(v1);
  JUMPOUT(0x1B02CA6E8);
}

uint64_t sub_1B02CA78C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((((v11 + v10 + 1155) ^ 0x445) * (a9 == v12)) ^ (v11 + v10 + 949))))(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t sub_1B02CA7CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                       + 8
                                                                       * (int)((((a16 - 1769776104) > 0xFFFFFFFA)
                                                                              * (((a4 ^ 0x3DE) - 900) ^ 0x22)) ^ (a4 + 1625))))(a1, a2, a3, a4);
}

uint64_t sub_1B02CA824(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((((a6 + 1873830604) & 0x39FEB) - 1060)
                                                                                  * ((unint64_t)(v8 - v9 - 1167) > 0x1F)) ^ a6)))(a1, a2, a3, a4, v7);
}

void sub_1B02CA868()
{
}

uint64_t sub_1B02CA874@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((*(unsigned __int8 *)(v3 + v5 + v2 + ((v1 - 1689) | 0x481u) - 1698) != 208)
                                * (((v1 ^ 0x8BB) * a1) ^ 0x310)) ^ v1)))();
}

void sub_1B02CA8C8()
{
}

uint64_t sub_1B02CA8EC@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  uint64_t v3 = *(uint64_t (**)(void))(v2
                           + 8
                           * (int)((((*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (a2 + 82)))(a1, 4182676990) == 0)* (((a2 + 135787314) & 0xF7E8076D) - 764)) ^ (a2 - 24)));
  return v3();
}

void sub_1B02CA948()
{
}

void sub_1B02CA9B8()
{
  uint64_t v3 = *(void *)(v0 + 48);
  *(void *)(*(void *)(v0 + 40) - 0x7672B12460B7525CLL) = v2;
  *(_DWORD *)(v3 - 0x7815B46F882D647BLL) = v4;
  *(_DWORD *)(v0 + 8) = v1;
}

void sub_1B02CA9EC()
{
  _DWORD *v1 = v0;
  JUMPOUT(0x1B02DADC4);
}

void sub_1B02CA9F4()
{
}

uint64_t sub_1B02CAA4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, int a13, unint64_t *a14, int a15)
{
  unsigned int v19 = 1755732067
      * ((((&a11 | 0x3DCF04DE) ^ 0xFFFFFFFE) - (~&a11 | 0xC230FB21)) ^ 0x1CF646FA);
  a13 = (v18 - 230) ^ v19;
  a14 = &STACK[0x486D4A085FE6BE4A];
  a15 = v19 ^ 0x6B0623F5;
  a11 = &STACK[0x460F4FD2677B792];
  a12 = v17;
  uint64_t v20 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v18 ^ 0xBDE)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((*(_DWORD *)(v17 - 0x7DA9E0EFFB1E3616) == v15)
                                              * (((v18 - 1320703391) & 0x4EB856EF) + 262)) ^ v18)))(v20);
}

void sub_1B02CAB44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32,_DWORD *a33)
{
  *a33 ^= a32;
  JUMPOUT(0x1B02C7E28);
}

uint64_t sub_1B02CAB64()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((21 * (STACK[0x3E0] == 0)) | (v0 + 485))))();
}

uint64_t sub_1B02CAB94@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 == v1) ^ (v3 - 95)) & 1) * (v3 - 1925)) ^ v3)))();
}

uint64_t sub_1B02CABC8(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((a6 + 1 == (((v7 ^ v6) - 279) | a4) - 1187) * a5) ^ v7 ^ v6)))();
}

void Mib5yocT(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  if (a2) {
    BOOL v8 = a3 == 0;
  }
  else {
    BOOL v8 = 1;
  }
  int v12 = v8 || a6 == 0 || a7 == 0 || a8 == 0;
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02CAC94@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1265
                                * (*(_DWORD *)(a1 + 4 * (v3 + v5 + 1)) == v1 + (v2 ^ 0xA93) - 255 - 294)) ^ (v2 - 1681))))();
}

uint64_t sub_1B02CACDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  *(_DWORD *)(STACK[0x228] + 360) = 1017008128;
  uint64_t v64 = (*(uint64_t (**)(uint64_t, uint64_t, unint64_t *, unint64_t, void, uint64_t, unint64_t *, unint64_t *))(v62 + 8 * (v57 ^ 0xA0Au)))(v60, 2, &STACK[0x4DC], STACK[0x518], (v58 - 1400183651), a6, &STACK[0x450], &STACK[0x3EC]);
  unint64_t v67 = STACK[0x2F0];
  int v68 = ((2 * v64) & 0x3BEBFEFE) + (v64 ^ 0x9DF5FF7F);
  LODWORD(STACK[0x40C]) = v68 + 1803247543;
  unint64_t v69 = STACK[0x260];
  if (v68 == -1644822657)
  {
    LODWORD(STACK[0x3B4]) = 512728301;
    unint64_t v71 = STACK[0x450];
    unsigned int v72 = (LODWORD(STACK[0x3EC]) ^ 0xD77FBFEF) + 2079677300 + ((2 * LODWORD(STACK[0x3EC])) & 0xAEFF7FDE);
    STACK[0x4E8] = v61;
    STACK[0x398] = v59;
    uint64_t v73 = (char *)&STACK[0x5D0] + v69 - 0x9872DDC1BE05C48;
    STACK[0x410] = (unint64_t)v73;
    STACK[0x338] = (unint64_t)&STACK[0x5D0] + v69 - 0x9872DDC1BE05BC8;
    unint64_t v74 = v69 + 4144;
    *(void *)uint64_t v73 = 0x6370646600;
    v73[8] = 1;
    STACK[0x328] = v74 + 64;
    uint64_t v75 = *(void *)(v62 + 8 * ((int)v67 - 876));
    unint64_t v76 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, unint64_t *, unint64_t *, unint64_t *, unint64_t *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 8 * (int)((v67 - 590) ^ (8 * ((((v67 + 1765708858) & 0x96C16D6B ^ 0x5CF) & 0xEE) != 109))));
    STACK[0x260] = v74;
    LODWORD(STACK[0x2C8]) = v72;
    return v76(v71, 0x5DFDDB7EFF9FF611, 556282579, v66, v67, 3738684716, 2389998781, 1895590900, &STACK[0x418], &STACK[0x4CC], &STACK[0x4FC], &STACK[0x524], a13, a14, a15, a16, a17, a18, a19,
             a20,
             a21,
             a22,
             a23,
             a24,
             a25,
             a26,
             a27,
             a28,
             a29,
             a30,
             a31,
             a32,
             a33,
             a34,
             a35,
             a36,
             a37,
             a38,
             a39,
             a40,
             v75,
             v71,
             a43,
             a44,
             a45,
             a46,
             a47,
             a48,
             a49,
             a50,
             a51,
             a52,
             a53,
             a54,
             a55,
             a56,
             a57);
  }
  else if (v68 == -1376387198)
  {
    LODWORD(STACK[0x314]) = -1904968612;
    return (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v62
                                                                                  + 8
                                                                                  * (int)(((STACK[0x450] == 0)
                                                                                         * (((v67 + 867) ^ 0xFFFFF813)
                                                                                          + (v67 ^ 0x2A1))) ^ (v67 + 1192))))(v64, STACK[0x450], v65, v66);
  }
  else
  {
    int v77 = 3804331 * ((1877976559 - ((v63 - 192) | 0x6FEFA5EF) + ((v63 - 192) | 0x90105A10)) ^ 0xEEC57FE6);
    *(_DWORD *)(v63 - 192) = v68 - v77 - ((2 * (v68 + 1803247543) - 316849772) & 0xE3164EC8) - 745199643;
    *(_DWORD *)(v63 - 188) = v77 + v67 + 299;
    *(void *)(v63 - 184) = a39;
    int v78 = v67;
    uint64_t v79 = (*(uint64_t (**)(uint64_t))(v62 + 8 * (int)(v67 ^ 0xACD)))(v63 - 192);
    return (*(uint64_t (**)(uint64_t))(v62
                                              + 8
                                              * (int)(((STACK[0x450] == 0) * (((v78 + 867) ^ 0xFFFFF813) + (v78 ^ 0x2A1))) ^ (v78 + 1192))))(v79);
  }
}

uint64_t sub_1B02CB054()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v0 - 1835) | 0xAC) + ((v0 - 1086) | v3) - 1445) * (v2 != 0)) ^ v0)))();
}

uint64_t sub_1B02CB08C@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1490 * (a2 + 1 == v3 + 24)) ^ a1)))();
}

uint64_t sub_1B02CB1C8(uint64_t a1, uint64_t a2, int a3)
{
  *(_DWORD *)(v5 + 4 * (v3 - 700666238)) = 700666238
                                                         - v3
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v5 + 4 * (v3 - 700666239)) ^ (*(_DWORD *)(v5 + 4 * (v3 - 700666239)) >> 30))) ^ *(_DWORD *)(v5 + 4 * (v3 - 700666238)));
  unint64_t v8 = 1224239923
     * ((0x9FD45557963A06FCLL - ((v7 - 152) | 0x9FD45557963A06FCLL) + ((v7 - 152) | 0x602BAAA869C5F903)) ^ 0x48711FC19B7604D4);
  STACK[0x578] = v8 + 722451339;
  *(_DWORD *)(v7 - 120) = (v6 + 502718583) ^ v8;
  *(_DWORD *)(v7 - 116) = 821170321 - v8 + v6;
  *(_DWORD *)(v7 - 128) = 1 - v8;
  *(_DWORD *)(v7 - 124) = ((v6 + 502718664) ^ 0x1E) - v8;
  *(_DWORD *)(v7 - 112) = v6 + 502718664 - v8;
  STACK[0x588] = (v3 + 21785102) ^ v8;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v4 + 8 * (a3 + v6 + 2388)))(v7 - 152);
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * *(int *)(v7 - 144)))(v9);
}

void sub_1B02CB30C()
{
}

uint64_t sub_1B02CB318(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(void *)(v17 - 120) = a12;
  *(void *)(v17 - 112) = v15;
  *(_DWORD *)(v17 - 128) = v12
                         + ((((v17 - 128) ^ 0x35ACBE93 | 0xCAF119E9) - (((v17 - 128) ^ 0x35ACBE93) & 0xCAF119E9)) ^ 0x1FC1C551)
                         * v16
                         - 278;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v13 + 8 * (v12 ^ 0xFF0)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((*(_DWORD *)(v17 - 124) > (v14 + 756)) * (v12 - 1704)) ^ v12)))(v18);
}

uint64_t sub_1B02CB3A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v9 = (a5 + 578) | 0x48;
  _DWORD *v6 = v5;
  uint64_t v15 = v12;
  unsigned int v14 = v9
      + (((v13 | 0x65632D70) - v13 + (v13 & 0x9A9CD288)) ^ 0x6F97235F) * v7
      - 403;
  (*(void (**)(unsigned char *))(v8 + 8 * (v9 + 1410)))(v13);
  uint64_t v15 = v11;
  unsigned int v14 = (v9 ^ 0x2F5) + (v13 ^ 0xAF40E2F) * v7 + 98;
  (*(void (**)(unsigned char *))(v8 + 8 * (v9 ^ 0xB82)))(v13);
  return 0;
}

void sub_1B02CB4A4(uint64_t a1, int a2)
{
  if ((v2 + v3 + a2 - 970) >= 0x7FFFFFFF) {
    int v7 = -v4;
  }
  else {
    int v7 = v6;
  }
  int *v5 = v7;
  JUMPOUT(0x1B02CB4C8);
}

uint64_t sub_1B02CB4D8@<X0>(uint64_t a1@<X1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * (((((a2 - 180) ^ 0x667793C) + a16 - *(_DWORD *)(a1 + 4) == -305014858)
                                * (((a2 - 633) | 0x29) - 77)) ^ a2)))();
}

uint64_t sub_1B02CB534@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x314]) = v2;
  STACK[0x518] = STACK[0x2E8];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((*(_DWORD *)STACK[0x228] != ((a1 + 113043504) & 0x94317EE) - 1768)
                                * (((a1 - 1545) | 0x632) - 1773)) ^ a1)))();
}

uint64_t sub_1B02CB598()
{
  return v0();
}

uint64_t sub_1B02CB5A0(_DWORD *a1)
{
  unsigned int v1 = 108757529 * ((2 * (a1 & 0xA7DF62A) - a1 + 1971456469) ^ 0x951E6BFE);
  int v2 = a1[4] ^ v1;
  int v3 = *a1 ^ v1;
  unsigned int v5 = v3 - 749416918;
  BOOL v4 = v3 - 749416918 < 0;
  LODWORD(v6) = 749416918 - v3;
  if (v4) {
    uint64_t v6 = v6;
  }
  else {
    uint64_t v6 = v5;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v2 - 1500)
                              + 8 * (((v6 != ((2 * v6) & 0xDD3E654E)) * (v2 - 1608)) ^ v2)
                              - 12))();
}

void sub_1B02CB654(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  uint64_t v14 = *(void *)(v11 - 0x6155FFFFEB445CBDLL);
  unsigned int v15 = (*(_DWORD *)(v14 + 4 * (v13 - 1)) ^ v7) >> v5;
  uint64_t v16 = 4 * (v9 + v4 + 1);
  *(_DWORD *)(v14 + v16) = v15 + v7 - (v8 & (2 * v15));
  int v17 = v6 - (*(_DWORD *)(*(void *)(v11 - 0x6155FFFFEB445CBDLL) + v16) == ((a4 - 241) ^ (v7 - 28)));
  if ((*v10 + v12) >= 0x7FFFFFFF) {
    int v17 = -1518847964 - v17;
  }
  _DWORD *v10 = v17;
}

uint64_t sub_1B02CB710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v20
                                                                                         + 8
                                                                                         * ((830
                                                                                           * (*(_DWORD *)(a20 - 0x7DA9E0EFFB1E3616) == v21 + 1904944630)) ^ v21)))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B02CB764@<X0>(int a1@<W1>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (a1 ^ (464 * (a2 - v2 != -656081624)))))();
}

void sub_1B02CB7E8()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 848));
  JUMPOUT(0x1B029B6B0);
}

void sub_1B02CB80C()
{
}

uint64_t sub_1B02CB8A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, unsigned int a18, uint64_t a19)
{
  unsigned int v24 = 1178560073 * ((2 * (&a15 & 0xFE33470) - &a15 + 1880935304) ^ 0xCA88B3EA);
  a16 = v24 + 1531045867 * v21 + 81978470;
  a17 = a11;
  a18 = (v23 + 520) ^ v24;
  (*(void (**)(int *))(v22 + 8 * (v23 + 1215)))(&a15);
  unsigned int v25 = 1178560073 * ((&a15 - 1111803618 - 2 * (&a15 & 0xBDBB391E)) ^ 0x72F417C);
  a17 = a11;
  a19 = v19;
  a16 = v25 + v23 + 386;
  a18 = ((v20 ^ 0xF4F47FBC) + 1327474648 + ((v20 << ((v23 + 77) ^ 0xD9)) & 0xE9E8FF78)) ^ v25;
  uint64_t v26 = (*(uint64_t (**)(int *))(v22 + 8 * (v23 + 1256)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * ((41 * (a15 == 1904944996)) ^ v23)))(v26);
}

uint64_t sub_1B02CB9F4@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W7>, uint64_t a6@<X8>, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54)
{
  *(_DWORD *)(v61 - 120) = v60;
  int v62 = (a5 - 625) & v58;
  int v63 = -a4;
  *(_DWORD *)(v61 - 132) = v62;
  *(_DWORD *)(v61 - 128) = v58;
  char v64 = v59 + a2 + a3;
  uint64_t v65 = (v63 + a2 + a3 + a1);
  v67.val[0].i64[0] = ((_BYTE)v63 + (_BYTE)a2 + (_BYTE)a3 + (_BYTE)a1) & 0xF;
  v67.val[0].i64[1] = ((_BYTE)v63 + v64 + 12) & 0xF;
  v67.val[1].i64[0] = ((_BYTE)v63 + v64 + 11) & 0xF;
  v67.val[1].i64[1] = ((_BYTE)v63 + v64 + 10) & 0xF;
  v67.val[2].i64[0] = ((_BYTE)v63 + v64 + 9) & 0xF;
  v67.val[2].i64[1] = ((_BYTE)v63 + v64 + 8) & 0xF;
  v67.val[3].i64[0] = ((_BYTE)v63 + v57 + ((a5 - 64) ^ 0xE)) & 0xF;
  v67.val[3].i64[1] = ((_BYTE)v63 + v64 + 6) & 0xF;
  *(int8x8_t *)(a6 - 7 + v65) = vrev64_s8(veor_s8(veor_s8(vrev64_s8(veor_s8(veor_s8(*(int8x8_t *)(a6 - 7 + v65), *(int8x8_t *)(v55 + (v65 & 0xF) - 7)), veor_s8(*(int8x8_t *)(v54 + (v65 & 0xF) - 7), *(int8x8_t *)(v56 + (v65 & 0xF) - 7)))), (int8x8_t)0xD0D0D0D0D0D0D0D0), vmul_s8((int8x8_t)*(_OWORD *)&vqtbl4q_s8(v67, (int8x16_t)xmmword_1B04C9C00), (int8x8_t)0x505050505050505)));
  return (*(uint64_t (**)(__n128))(a54 + 8 * ((79 * (v63 != 8 - v62)) ^ (a5 - 67))))((__n128)xmmword_1B04C9C00);
}

uint64_t sub_1B02CBB30@<X0>(int a1@<W8>)
{
  LODWORD(STACK[0x364]) = STACK[0x2D8];
  LODWORD(STACK[0x4AC]) = STACK[0x2E0];
  STACK[0x330] = STACK[0x2C0];
  STACK[0x378] = STACK[0x2C8];
  STACK[0x540] = STACK[0x2D0];
  STACK[0x328] = v3;
  LODWORD(STACK[0x4DC]) = 2;
  STACK[0x450] = 0;
  LODWORD(STACK[0x3EC]) = 0;
  LODWORD(STACK[0x524]) = 0;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((a1 - 758666123) & 0x2D3853ED) - 887) * ((v2 & 2) == 0)) ^ a1)))();
}

uint64_t sub_1B02CBBA8@<X0>(int a1@<W4>, int a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + (a1 ^ (v6 + 90)) + a2) = *(unsigned char *)(v5 + (a1 ^ (v6 + 90)) + a2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((351 * (a2 - 1 == v4)) ^ a1)))(0);
}

uint64_t sub_1B02CBBE4()
{
  int v5 = *(_DWORD *)(v3 + v1 * (uint64_t)v2 + 36) - 100699322 + ((v0 - 21488356) & 0x147E3DF);
  BOOL v7 = v5 > -1691899490 && v5 < SLODWORD(STACK[0x2B0]);
  return (*(uint64_t (**)(void))(v4 + 8 * ((1065 * v7) ^ v0)))();
}

uint64_t sub_1B02CBC5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  *uint64_t v36 = v36[623];
  return (*(uint64_t (**)(void))(v35 + 8 * ((44 * (v34 - 1 != a32 + 131433267)) ^ (v32 + v33 + 789))))();
}

void sub_1B02CBCB0(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 16) ^ (1755732067 * ((a1 - 2 * (a1 & 0x7A08EF3) + 127962867) ^ 0xD9663328));
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02CBD44@<X0>(int a1@<W8>)
{
  v7.i64[0] = 0xA0A0A0A0A0A0A0A0;
  v7.i64[1] = 0xA0A0A0A0A0A0A0A0;
  v8.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v8.i64[1] = 0xD0D0D0D0D0D0D0D0;
  *(int8x16_t *)(v4 + (v1 + a1)) = vaddq_s8(vsubq_s8(*v6, vandq_s8(vaddq_s8(*v6, *v6), v7)), v8);
  return (*(uint64_t (**)(void))(v5 + 8 * (((((v2 + 1) & 0x1FFFFFFF0) == 16) * ((v3 - 154) ^ 0x5FA)) ^ v3)))();
}

uint64_t sub_1B02CBDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  uint64_t v13 = v9 + (v8 ^ v11) + 462 - 1828;
  BOOL v15 = v10 == 21 || v13 == a3 + 200;
  return (*(uint64_t (**)(void))(v12 + 8 * (int)((v15 * ((((v8 ^ v11) + a8) & 0x286CF83B) - 1492)) ^ v8 ^ v11)))();
}

uint64_t sub_1B02CBDF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((((v8 & 0x18) == ((a7 - 271) | 0x221) - 609) * ((a7 + 1378) ^ 0x53B)) ^ a7)))();
}

uint64_t sub_1B02CBE30()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v1 ^ 0x227) - 716) ^ 0x13C) * ((v2 - 1) >= 0x7FFFFFFD)) ^ v1 ^ 0x61B)))();
}

uint64_t sub_1B02CBE78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  return (*(uint64_t (**)(void))(v12
                              + 8
                              * ((1618
                                * (a12 - 1197603782 < ((v13 - 1466753478) & 0x576CE7D4 ^ (v13 + 2147481222)))) ^ v13)))();
}

void sub_1B02CBED8()
{
}

void sub_1B02CBF64()
{
  STACK[0x2D8] = v0;
  *(_DWORD *)(STACK[0x5B8] + ((LODWORD(STACK[0x56C]) - 729270108) & 0xFFFFFFFC)) = v1;
  JUMPOUT(0x1B02B8CD8);
}

void sub_1B02CBF94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  uint64_t v35 = (*(uint64_t (**)(uint64_t, void))(v34 + 8 * (v33 ^ 0xE84)))(a22, 0);
  uint64_t v36 = *(void *)(a33 + 16);
  *(_DWORD *)(a33 + 4) = *(_DWORD *)(a33 + 24);
  *(_DWORD *)(a33 + 8) = v36;
  *(_DWORD *)(a33 + 12) = (*(uint64_t (**)(uint64_t))(v34 + 8 * (v33 + 354)))(v35);
  *(_DWORD *)a33 = (*(uint64_t (**)(void))(v34 + 8 * (v33 ^ 0xEA2)))();
  JUMPOUT(0x1B02CC0ECLL);
}

uint64_t sub_1B02CC1D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  unint64_t v77 = STACK[0x2F0];
  unint64_t v78 = STACK[0x2B0];
  STACK[0x230] = STACK[0x2B0] + 49;
  STACK[0x210] = v74 + 49;
  STACK[0x200] = v78 + 29;
  a72 = v78 + 9;
  a73 = v74 + 29;
  a71 = v74 + 9;
  STACK[0x2C0] = (unint64_t)(&a9 - 0x130E5BB837C0BF7);
  STACK[0x270] = ((unint64_t)&STACK[0x368] ^ 0x7FEDAEBDC7BCDF25)
               - 0x1040840300925
               + ((2 * (void)&STACK[0x368]) & 0xFFDB5D7B8F79BE40);
  LODWORD(STACK[0x2A8]) = v77 - 713;
  LODWORD(STACK[0x2A0]) = (v77 - 713) ^ 0xB8;
  LODWORD(STACK[0x240]) = (v77 - 1632762072) & 0x6151F7DA;
  a70 = v77 + 358423610;
  a67 = v77 + 868340344;
  LODWORD(STACK[0x2D0]) = (v77 + 97664046) & 0xFA2DC3DE;
  LODWORD(STACK[0x2E8]) = (v77 - 144811022) & 0x8A1A3CF;
  *(int32x4_t *)&STACK[0x250] = vdupq_n_s32(0x718B2764u);
  *(int32x4_t *)&STACK[0x260] = vdupq_n_s32(0xE3164EC8);
  STACK[0x278] = (int)v77 ^ 0x396;
  LODWORD(STACK[0x2B8]) = v77 - 771554953;
  a65 = (int)v77;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8 * (v75 - 885)))(140, 117);
}

uint64_t sub_1B02CC374()
{
  int v6 = (v0 - 108) | 0x80;
  _DWORD *v4 = v4[623];
  *(void *)(v5 - 192) = STACK[0x2E0];
  *(void *)(v5 - 176) = (v3 - 57373176) ^ v1;
  *(_DWORD *)(v5 - 152) = v6 - v1 - 1287627313;
  *(_DWORD *)(v5 - 168) = 1 - v1;
  *(_DWORD *)(v5 - 164) = v6 - v1 - 1287627221;
  *(_DWORD *)(v5 - 160) = (v6 - 1287627344) ^ v1;
  *(_DWORD *)(v5 - 156) = -1501686745 - v1 + v6;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 + 1486)))(v5 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v5 - 184)))(v7);
}

uint64_t sub_1B02CC414@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unsigned int v55 = LODWORD(STACK[0x43C]) ^ 0xFF9F65B7;
  unsigned int v56 = (LODWORD(STACK[0x43C]) << (v52 + 22)) & 0xFF3ECB6E;
  int v57 = 535753261 * ((((2 * (v54 - 192)) | 0xA5657554) - (v54 - 192) + 760038742) ^ 0xD846B485);
  unint64_t v58 = STACK[0x500];
  *(_DWORD *)(v54 - 192) = v52 - v57 + 368399942;
  *(void *)(v54 - 184) = a51;
  *(void *)(v54 - 176) = a50;
  *(_DWORD *)(v54 - 164) = (v51 - ((2 * v51 - 2034016252) & 0xE7249376) + 921958845) ^ v57;
  *(_DWORD *)(v54 - 160) = v55 - v57 + 1602027132 + v56;
  *(void *)(v54 - 152) = v58;
  *(void *)(v54 - 144) = a1;
  uint64_t v59 = (*(uint64_t (**)(uint64_t))(v53 + 8 * (v52 + 2144)))(v54 - 192);
  int v60 = *(_DWORD *)(v54 - 168);
  LODWORD(STACK[0x374]) = v60;
  return (*(uint64_t (**)(uint64_t))(v53 + 8 * ((1484 * (v60 == 1904944996)) ^ v52)))(v59);
}

uint64_t sub_1B02CC534(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  STACK[0x328] -= 1616;
  LODWORD(STACK[0x314]) = a7 - 106;
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (int)(((STACK[0x450] == 0) * (((a8 + 867) ^ 0xFFFFF813) + (a8 ^ 0x2A1))) ^ (a8 + 1192))))();
}

uint64_t sub_1B02CC588(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,uint64_t a21)
{
  a20 = v24;
  a21 = a16;
  a19 = (v22 - 98) ^ (((2 * (&a19 & 0x661E85A0) - &a19 + 434207323) ^ 0x74156252) * v23);
  (*(void (**)(unsigned int *))(v25 + 8 * (v22 + 1892)))(&a19);
  a19 = (v22 - 98) ^ (((((2 * &a19) | 0x8EA60170) - &a19 - 1196622008) ^ 0x2AA718B1) * v23);
  a20 = v21;
  a21 = a16;
  (*(void (**)(unsigned int *))(v25 + 8 * (v22 + 1892)))(&a19);
  a19 = (v22 + 427) ^ (1755732067
                     * (((&a19 | 0x3543FCEF) - &a19 + (&a19 & 0xCABC0310)) ^ 0xEB854134));
  a20 = a16;
  uint64_t v26 = (*(uint64_t (**)(unsigned int *))(v25 + 8 * (v22 + 1855)))(&a19);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * (((a21 == 1904944996) * (((v22 - 1552911351) & 0x5C8F8E7F) - 337)) ^ v22)))(v26);
}

void sub_1B02CC6D8()
{
}

uint64_t sub_1B02CC704@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((55
                                * (((v3 + 104) ^ ((v2 - 1388059927 + ((v3 - 1437) | 5))
                                                                 * (v1 - 1388059666) >= 0)) & 1)) ^ v3)))();
}

uint64_t sub_1B02CC758(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((((a3 - 565) ^ (a3 - 79) ^ 0x6EE) * (v3 > 0x1F)) ^ (a3 - 79))))();
}

uint64_t sub_1B02CC790(uint64_t a1)
{
  int v8 = (v6 ^ 0x914) - 23;
  uint64_t v9 = v4 + v3 + v5 + ((v8 + 1244) | 0x3Cu);
  long long v10 = *(_OWORD *)(v1 + v9 - 15);
  long long v11 = *(_OWORD *)(v1 + v9 - 31);
  uint64_t v12 = a1 + v9;
  *(_OWORD *)(v12 - 15) = v10;
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v7 + 8 * ((25 * (((v8 ^ 0xFFFFFEC7) & v2) != 32)) ^ v8)))();
}

uint64_t sub_1B02CC800@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  unint64_t v8 = v2 - 1;
  STACK[0x478] = v8;
  *(unsigned char *)(a1 + v8) = ((v3 + 28) ^ v5) * (v3 + 45);
  return (*(uint64_t (**)(void))(v7 + 8 * (((STACK[0x478] == 0) * ((v4 | 0x80) ^ v6)) ^ a2)))();
}

uint64_t sub_1B02CC808(uint64_t a1)
{
  int v1 = 1759421093 * ((-870162447 - (a1 | 0xCC225FF1) + (a1 | 0x33DDA00E)) ^ 0x80A0105A);
  int v2 = *(_DWORD *)(a1 + 12) - v1;
  int v3 = *(_DWORD *)(a1 + 16) - v1;
  if (v3 < 0) {
    int v3 = -v3;
  }
  int v4 = *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1);
  unsigned int v6 = v4 - 1388059666;
  BOOL v5 = v4 - 1388059666 < 0;
  unsigned int v7 = 1388059666 - v4;
  if (!v5) {
    unsigned int v7 = v6;
  }
  return (*(uint64_t (**)(void))((char *)*(&off_1F08D3590 + v2 - 527)
                              + 8 * (int)(((v3 >> 5 >= v7) * ((v2 + 81416479) & 0xFB25AEEE ^ 0x296)) ^ v2)
                              - 12))();
}

uint64_t sub_1B02CC8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  if (a14 - 1388059666 >= 0) {
    int v16 = a14 - 1388059666;
  }
  else {
    int v16 = ~(a14 - 1388059667);
  }
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((((v16 ^ 0x72BF9E77)
                                 - 537100901
                                 + ((((v14 - 243) | 0xC4) - 444646870) & (2 * v16))
                                 - 1388059667 >= 0)
                                * (((v14 - 243) | 0xC4) - 700)) ^ ((v14 - 243) | 0xC4))))();
}

uint64_t sub_1B02CC964(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v8
                                                             + 8
                                                             * (((((9 * (a7 ^ 0x7C) + 873) | 0x78) - 909)
                                                               * ((v7 & 0x18) == 0)) ^ a7)))(a1, a2, (a1 - a4));
}

uint64_t sub_1B02CC998(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, void))(v5 + 8 * ((((a4 + 1284) ^ 0x855) * (v4 > 0x1F)) ^ a4)))(a1, 0);
}

uint64_t sub_1B02CC9C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(qword_1F08D39C8
                                            - 12
                                            + 8 * ((1001 * (*(_DWORD *)(a2 + 4) == 1400183664)) ^ 0x1E4u)))(4294925278);
}

uint64_t sub_1B02CCA08()
{
  uint64_t v4 = (*(uint64_t (**)(void))(v3 + 8 * (v2 + 1451)))();
  LODWORD(STACK[0x314]) = v0;
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * ((((401 * (v2 ^ 0x387)) ^ 0x33E) * v1) ^ (v2 - 572))))(v4);
}

void sub_1B02CCA60()
{
}

uint64_t sub_1B02CCAB0(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 == (((v4 - 429) | 0x32B) ^ (a3 - 219))) * (v4 + 1165)) ^ v4)))();
}

void sub_1B02CCAEC(uint64_t a1)
{
  int v1 = 628203409 * (((a1 | 0x89B748DF) - a1 + (a1 & 0x7648B720)) ^ 0xB3F44EC);
  unsigned int v2 = *(_DWORD *)(*(void *)(a1 + 24) - 0x1E5BC71B799A3D56) - 2053901620;
  unsigned int v3 = *(_DWORD *)(a1 + 20) + v1 + 1641717890;
  BOOL v4 = v2 < 0xC073686B;
  BOOL v5 = v2 > v3;
  if (v3 < 0xC073686B != v4) {
    BOOL v5 = v4;
  }
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02CCBDC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, unsigned char *a5, int a6, char a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  *a5 = a7 ^ 0x64;
  return (*(uint64_t (**)(void))(v13
                              + 8 * ((((((a1 - 124) ^ (a12 == v12)) & 1) == 0) * (((a1 - 124) ^ 0x1B2) - 458)) ^ a1)))();
}

uint64_t sub_1B02CCC3C()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1113
                                * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 3) - 134)))
                                 + ((*(unsigned __int8 *)(v2 + 3) - 134) ^ v0) == v0
                                                                                + ((v3 + 763046981) & 0xD284D3DD)
                                                                                - 853)) ^ v3)))();
}

uint64_t sub_1B02CCC90@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, uint64_t a4@<X8>)
{
  int v11 = *(_DWORD *)(a4 + 4 * ((((v4 + 356) | a1) ^ (v8 + 361)) + v6));
  int v12 = v8 + v6;
  int v13 = *(_DWORD *)(a4 + 4 * (v12 - 8)) ^ v11;
  int v14 = *(_DWORD *)(a4 + 4 * (v12 - 16)) ^ *(_DWORD *)(a4 + 4 * (v12 - 14)) ^ (v13 + v10 - (a3 & (2 * v13)));
  HIDWORD(v15) = v14 ^ v10;
  LODWORD(v15) = v14;
  *(_DWORD *)(a4 + 4 * (v5 + v7)) = (v15 >> 31) + v10 - (a3 & (2 * (v15 >> 31)));
  return (*(uint64_t (**)(void))(v9 + 8 * ((((v5 + 1 + v8) > 0x4F) * a2) ^ v4)))();
}

uint64_t sub_1B02CCD20()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v1 & (2 * (*(unsigned __int8 *)(v2 + 4) - 247)))
                                 + ((*(unsigned __int8 *)(v2 + 4) - 247) ^ v0) == v0)
                                * (v3 + 718)) ^ v3)))();
}

uint64_t sub_1B02CCD5C@<X0>(uint64_t a1@<X2>, int a2@<W3>, int a3@<W4>, char a4@<W5>, int a5@<W6>, char a6@<W7>, uint64_t a7@<X8>)
{
  int v16 = (v10 + a3) & a5;
  uint64_t v17 = (v11 + v14);
  *(unsigned char *)(a1 + v17 + v15) = *(unsigned char *)(v12 + v17) ^ *(unsigned char *)(v7 + ((v16 - 886) & v17)) ^ *(unsigned char *)(((v16 - 886) & v17) + a7 + 1) ^ *(unsigned char *)(v8 + ((v16 - 886) & v17)) ^ (((v16 - 118) & v17) * a6) ^ a4;
  return (*(uint64_t (**)(void))(v13
                              + 8
                              * ((2 * (v11 - 1 != ((((v16 - 867) | a2) + 22) ^ v9))) | (8
                                                                                      * (v11 - 1 != ((((v16 - 867) | a2) + 22) ^ v9))) | (v16 - 564))))();
}

uint64_t sub_1B02CCDDC@<X0>(uint64_t a1@<X8>)
{
  return sub_1B02CCE5C(a1 - 0x6155FFFFEB445CBDLL, 107235173, 0x2CE3FFFFFFFBE7DBLL, 0x1FFF7CFB6, 0xF7FD65E5EDFFD97FLL, 1901686383, 4187732122);
}

uint64_t sub_1B02CCE5C(void *a1, unsigned int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  uint64_t v19 = 4 * (v17 + v13);
  int v20 = v7 + v15 + (*(_DWORD *)(*v11 + v19) ^ v16) + (*(_DWORD *)(*v12 + v19) ^ v16);
  *(_DWORD *)(*a1 + v19) = v20 + v16 - ((v14 + v10 - 360 - 523) & (2 * v20));
  BOOL v21 = v8 > a2;
  if (v21 == v17 + a6 < a7) {
    BOOL v21 = v17 + a6 < v9;
  }
  return (*(uint64_t (**)(void))(v18 + 8 * ((v21 | (4 * v21)) ^ v10)))();
}

uint64_t sub_1B02CCEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>)
{
  uint64_t v13 = *(void *)(v11 + 56);
  *(_DWORD *)(v9 - 0x59CFADC5C538BCA7) = 0;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * ((v13 != 0x6155FFFFEB445CC5) | (8 * (v13 != 0x6155FFFFEB445CC5)) | a9)))(a1, a2, a3, a4, a5, a6, a7, a8, v10);
}

void sub_1B02CCFB8(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 - 0x195FBC68F38D742ELL) = 1;
  JUMPOUT(0x1B02B8844);
}

uint64_t sub_1B02CCFD4()
{
  uint64_t v2 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xC29)))();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v1
                                                                                                  + 8 * (((((v0 - 22) ^ (v2 == 0)) & 1) * (((v0 - 958) | 0x204) ^ 0x3E5)) ^ v0)))(v2, v3, v4, v5, 2389998768, v6, 2389998781);
}

uint64_t sub_1B02CD068()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 - 1972110556) ^ (191 * (v0 <= v3 + 623)))))();
}

void sub_1B02CD0A4()
{
}

uint64_t sub_1B02CD0AC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2;
  uint64_t v6 = a2 + v2;
  if ((unint64_t)(v6 + 1) > 0x38) {
    uint64_t v7 = v6 + 1;
  }
  else {
    uint64_t v7 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((13
                                * (v7 - v5 + (unint64_t)(((v3 + 1275558700) & 0xB3F885DF) - 852) + 1759092904 < 8)) | v3)))();
}

uint64_t sub_1B02CD12C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * (int)((((STACK[0x2F0] - 20) ^ 0x75E) * (v0 < 0xAA7562D1)) ^ (STACK[0x2F0] - 20))))();
}

uint64_t sub_1B02CD164@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, char a19)
{
  *(void *)(&a19 + a2 + (v20 ^ 0x66 ^ (unint64_t)(a1 + 174))) = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(void))(v21 + 8 * ((78 * ((v19 & 0x38) == 8)) | v20)))();
}

void sub_1B02CD1B4(_DWORD *a1)
{
  unsigned int v1 = 235795823 * ((a1 - 1876425126 - 2 * (a1 & 0x9028065A)) ^ 0x4854F03);
  unsigned int v2 = a1[9] + v1;
  int v3 = *a1 ^ v1;
  BOOL v5 = (~v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 335544320;
  __asm { BRAA            X11, X17 }
}

uint64_t sub_1B02CD298()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((v1 ^ 0xAD ^ (*(void *)(v0 + 8) == 0x72FA7492185D929CLL)) & 1)
                                * ((v1 - 36) ^ 0x25D)) ^ v1)))();
}

void sub_1B02CD2F4()
{
}

uint64_t sub_1B02CD300(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a2 + v3) = v2;
  *(void *)(v8 - 144) = v5;
  *(void *)(v8 - 136) = a2;
  *(_DWORD *)(v8 - 128) = (((v7 + 44) ^ 0x932) - 796) ^ (((((v8 - 144) | 0xB6904353)
                                                         - (v8
                                                          - 144)
                                                         + ((v8 - 144) & 0x496FBCA8)) ^ 0xBC644D7C)
                                                       * v4);
  return (*(uint64_t (**)(uint64_t))(v6 + 8 * ((v7 + 44) ^ 0x8FF)))(v8 - 144);
}

void sub_1B02CD3AC()
{
}

uint64_t sub_1B02CD3D8(uint64_t result)
{
  uint64_t v2 = *v1;
  *(void *)uint64_t result = 0;
  *(void *)(result + 8) = 0x7B9DB3A57B9DB3A5;
  *(void *)(result + 16) = 0x388797892E3594FELL;
  *(_DWORD *)(result + 24) = 1904944996;
  *(void *)(v2 - 0xFBD18CA08459170) = result + 0x7DA9E0EFFB1E362ELL;
  *((_DWORD *)v1 + 2) = 1904944996;
  return result;
}

uint64_t sub_1B02CD44C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  return (*(uint64_t (**)(void))(v15 + 8 * (((a13 == v14) * (((v13 + 682) | 0x88) ^ 0xD7C)) ^ v13)))();
}

uint64_t sub_1B02CD480(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v10 = ((v8 + 419) ^ (a1 - 1613)) + v7 < (v8 ^ (a7 + 1295) ^ 0x8824CC8C) + v7;
  return (*(uint64_t (**)(void))(v9 + 8 * ((v10 | (4 * v10)) ^ v8)))();
}

uint64_t sub_1B02CD4C8@<X0>(int a1@<W3>, uint64_t a2@<X5>, uint64_t a3@<X7>, int a4@<W8>)
{
  int v12 = a4 + 1;
  *(unsigned char *)(v9 + (v4 + v12 + 322)) = *(unsigned char *)(a2 + a3 + v6)
                                                  - ((*(unsigned char *)(a2 + a3 + v6) << v7) & v8)
                                                  - 48;
  return (*(uint64_t (**)(void))(v11 + 8 * ((((a1 + v12 + 1) < 0x40) * v10) ^ v5)))();
}

uint64_t sub_1B02CD4D0@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v7 + v5)) = *(unsigned char *)(v4 + (v7 + v5));
  return (*(uint64_t (**)(void))(v1 + 8 * ((((v3 ^ (v7 - 1 == v2)) & 1) * v6) ^ v3)))(0);
}

uint64_t sub_1B02CD508(uint64_t a1, int a2)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((((a2 + 313) ^ v2) + a1) & 0x7FFFFFFC) == v4) * v3) ^ a2)))();
}

uint64_t sub_1B02CD538()
{
  uint64_t v15 = v9;
  uint64_t v16 = 0x2DC0098902ACAEB6;
  unsigned int v17 = v5
      - 108757529 * ((2 * (&v12 & 0x712D7700) - &v12 + 248678649) ^ 0xEE4EEAD2)
      + v1
      + 1430;
  uint64_t v14 = v0;
  (*(void (**)(unsigned int *))(v3 + 8 * (v5 + v1 + 2461)))(&v12);
  int v7 = 125 * (v1 ^ (v6 + 1826));
  unsigned int v12 = (v5 + v1 + 912) ^ (1755732067
                         * (((&v12 | 0x49B91C0F) - &v12 + (&v12 & 0xB646E3F0)) ^ 0x977FA1D4));
  uint64_t v14 = v9;
  (*(void (**)(unsigned int *))(v3 + 8 * (v1 ^ v6)))(&v12);
  unsigned int v13 = v5 + v1 + (&v12 ^ 0xAF40E2F) * v4 + 490;
  uint64_t v14 = v9;
  (*(void (**)(unsigned int *))(v3 + 8 * (v5 + v1 + 2303)))(&v12);
  unsigned int v13 = v7 + ((&v12 - 1554405098 - 2 * ((unint64_t)&v12 & 0xA359A916)) ^ 0xA9ADA739) * v4 - 260;
  uint64_t v14 = v11;
  (*(void (**)(unsigned int *))(v3 + 8 * (v7 ^ 0xA11)))(&v12);
  return v10 ^ v2;
}

uint64_t sub_1B02CD5B8(uint64_t a1)
{
  unsigned int v5 = *(_DWORD *)(v2 + 348);
  unsigned int v6 = v4 + (*(_DWORD *)(a1 + 12) ^ v1) + 1599170125;
  if (v5 > 0x2D29CF80 != v6 < ((v4 + 69) ^ 0xD2D6361F)) {
    BOOL v7 = v5 > 0x2D29CF80;
  }
  else {
    BOOL v7 = v5 - 757714817 > v6;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((43 * v7) ^ v4)))();
}

uint64_t sub_1B02CD634@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v7 = (a2 - 1825812693) & 0x6CD3B63A;
  unsigned int v8 = ((2 * (a1 + v4 + (v6 ^ v3) + 202)) & 0xDEEBFBFE) + ((a1 + v4 + (v6 ^ v3) + 202) ^ 0xEF75FDFF) - 1074974854;
  unsigned int v9 = ((v7 - 1477582443) & 0x58121DEF ^ 0x33C57C7B) + v5;
  int v10 = (v8 < 0xAF632D79) ^ (v9 < 0xAF632D79);
  BOOL v11 = v8 > v9;
  if (v10) {
    BOOL v11 = v8 < 0xAF632D79;
  }
  return (*(uint64_t (**)(void))(a3 + 8 * ((79 * v11) ^ v7)))();
}

uint64_t sub_1B02CD6F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W4>, uint64_t a5@<X8>)
{
  v19.val[1].i64[0] = ((_BYTE)v8 + 11) & 0xF;
  v19.val[1].i64[1] = ((_BYTE)v8 + 10) & 0xF;
  v19.val[2].i64[0] = ((_BYTE)v8 + 9) & 0xF;
  v19.val[2].i64[1] = ((_BYTE)v8 + 8) & 0xF;
  v19.val[3].i64[0] = ((_BYTE)v8 + 7) & 0xF;
  v19.val[3].i64[1] = ((_BYTE)v8 + 6) & 0xF;
  v20.val[0].i64[0] = ((_BYTE)v8 + 5) & 0xF;
  v20.val[0].i64[1] = ((_BYTE)v8 + 4) & 0xF;
  v20.val[1].i64[0] = (v8 + 3) & 0xF;
  v20.val[1].i64[1] = (v8 + 2) & 0xF;
  v20.val[2].i64[0] = ((_BYTE)v8 + 1) & 0xF;
  v20.val[2].i64[1] = v8 & 0xF;
  v20.val[3].i64[0] = ((_BYTE)v8 - 1) & 0xF;
  v20.val[3].i64[1] = ((_BYTE)v8 + 14) & 0xF;
  unsigned int v11 = a2 + a3 + a1;
  v12.i64[0] = 0x505050505050505;
  v12.i64[1] = 0x505050505050505;
  v13.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v13.i64[1] = 0xD0D0D0D0D0D0D0D0;
  uint64_t v14 = v11 & ((a4 + 348) - 1416);
  v19.val[0].i64[0] = v14;
  v19.val[0].i64[1] = ((_BYTE)v8 + 12) & 0xF;
  v15.i64[0] = vqtbl4q_s8(v19, (int8x16_t)xmmword_1B04C9C20).u64[0];
  v15.i64[1] = vqtbl4q_s8(v20, (int8x16_t)xmmword_1B04C9C20).u64[0];
  int8x16_t v16 = vrev64q_s8(veorq_s8(veorq_s8(*(int8x16_t *)(a5 - 15 + v11), *(int8x16_t *)(v6 + v14 - 15)), veorq_s8(*(int8x16_t *)(v5 + v14 - 15), *(int8x16_t *)(v7 + v14 - 15))));
  int8x16_t v17 = vrev64q_s8(veorq_s8(veorq_s8(vextq_s8(v16, v16, 8uLL), v13), vmulq_s8(v15, v12)));
  *(int8x16_t *)(a5 - 15 + v11) = vextq_s8(v17, v17, 8uLL);
  return (*(uint64_t (**)(void))(v10 + 8 * ((497 * ((v9 & 0xFFFFFFF0) == 16)) ^ a4)))();
}

uint64_t sub_1B02CD84C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v14 = (unsigned int *)(v13 + 4 * v9);
  uint64_t v15 = v9 + 1;
  int v16 = *(_DWORD *)(v13 + 4 * v15);
  unsigned int v17 = v14[397] ^ ((v16 & 0x7FFFFFFE | (a3 + v7 - 388 + 1477) & v8) >> 1);
  *uint64_t v14 = (v17 + v12 - (a4 & (2 * v17))) ^ *(_DWORD *)(v11 + 4 * (v16 & 1));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v15 == 227) * a7) ^ v7)))();
}

uint64_t sub_1B02CD8B4()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((v2 - 1405) ^ 0x8A1) - 2179) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02CD8E8@<X0>(int a1@<W8>, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  int v12 = ((&a3 - 326276740 - 2 * ((unint64_t)&a3 & 0xEC8D697C)) ^ 0x92584C8A) * a1;
  a3 = v12 + 1584941614;
  a4 = v12 + v11 + 282;
  a7 = v12 + 1730420403;
  a5 = v7;
  a6 = v8;
  uint64_t v13 = (*(uint64_t (**)(int *))(v9 + 8 * (v11 + 2105)))(&a3);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * ((478
                                              * (*(_DWORD *)(v8 - 0x7DA9E0EFFB1E3616) == v11 + v10 + v11 - 97 + 1305)) ^ v11)))(v13);
}

uint64_t sub_1B02CD9A0(uint64_t a1)
{
  int v7 = 421 * ((v2 - 719) ^ 0x567);
  void *v4 = a1;
  *uint64_t v9 = v1;
  uint64_t v14 = v10;
  unsigned int v13 = v7 + ((v12 + 2115814188 - 2 * ((unint64_t)v12 & 0x7E1CC32C)) ^ 0x74E8CD03) * v6 - 352;
  (*(void (**)(unsigned char *))(v5 + 8 * (v7 ^ 0xBB5)))(v12);
  unsigned int v13 = v7 - 149 + ((((2 * v12) | 0xAD83A968) - v12 + 691940172) ^ 0xDC35DA9B) * v6 - 203;
  uint64_t v14 = v11;
  (*(void (**)(unsigned char *))(v5 + 8 * (v7 + 1461)))(v12);
  return v3 ^ 0x718B2764u;
}

uint64_t sub_1B02CD9AC()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7DA9E0EFFB1E361ELL)
     - (((*(_DWORD *)(v1 - 0x7DA9E0EFFB1E361ELL) << ((v0 + 86) & 0xE3)) - 1550526972) & 0xAEA493C0)
     + 689747170;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((169
                                * (((2 * v3) & 0x899ED77C ^ 0x88849340) + (v3 ^ 0x939D225E) + 1069391448 == 76352022)) ^ v0)))();
}

void sub_1B02CDA5C(uint64_t a1)
{
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02CDB80(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 24) = a5;
  return result;
}

void sub_1B02CDBD8()
{
}

uint64_t sub_1B02CDBE4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2386
                                * ((v6 & (2 * (*(unsigned __int8 *)(v7 + 3) - 137)))
                                 + ((*(unsigned __int8 *)(v7 + 3) - 137) ^ v5) == ((a4 - 2013262041) | 0x32488656)
                                                                                + 592895265)) ^ a4)))();
}

uint64_t sub_1B02CDC40()
{
  BOOL v4 = v2 + 1490997850 < ((v3 + 1522495150) & 0xA5408DEF ^ 0x93BE4615);
  if ((v0 + 891650063) < 0x93BE47F8 == v4) {
    BOOL v4 = v2 + 1490997850 > (v0 + 891650063);
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((39 * v4) ^ v3)))();
}

void sub_1B02CDCBC()
{
}

uint64_t sub_1B02CDCC8()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v1 + v0 - 1877991095 >= 11 * (v2 ^ 0x3C7u) - 718) * ((17 * (v2 ^ 0x3B0)) ^ 0x3FC)) ^ v2 ^ 0xB93)))();
}

uint64_t sub_1B02CDD34()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((23
                                * ((((v0 ^ 0x763) + 1292549) ^ (2 * v1) & 0x2F97FD3E)
                                 + ((479 * (v0 ^ 0x763) - 1210966818) ^ v1) != 399244959)) ^ v0)))();
}

uint64_t sub_1B02CDDA4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, int a16)
{
  *a4 = 0;
  *a5 = 0;
  a15 = (535753261 * ((2 * (&a15 & 0x59698DE8) - &a15 + 647393808) ^ 0x2C627C3F)) ^ 0xE1F2694A;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 18864))(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((a16 == v17) | (16 * (a16 == v17)) | 0x2C8u)))(v18);
}

uint64_t sub_1B02CDE40()
{
  int v6 = ((v5 - 365201354 - 2 * ((v5 - 144) & 0xEA3B78C6)) ^ 0x5946C892) * v4;
  *(_DWORD *)(v5 - 132) = v6 + v3 - 1536;
  *(_DWORD *)(v5 - 128) = v1 - 1334526198 + v6;
  *(void *)(v5 - 144) = v0;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x1C6)))(v5 - 144);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((2 * (*(_DWORD *)(v5 - 136) == 633308027)) | (4
                                                                                           * (*(_DWORD *)(v5 - 136) == 633308027)) | (v3 - 1358))))(v7);
}

uint64_t sub_1B02CDEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,int a23,int a24,int a25,int a26)
{
  *uint64_t v26 = v26[623];
  return sub_1B02ABD70(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

void sub_1B02CDEF8()
{
}

void sub_1B02CE100()
{
}

uint64_t sub_1B02CE10C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  int v61 = STACK[0x508];
  int v62 = 1178560073 * ((((v60 - 192) ^ 0x7DF756FF) & 0x1E35DE2F | ~((v60 - 192) ^ 0x7DF756FF | 0x1E35DE2F)) ^ 0x26A90F4D);
  int v63 = v62 + *(_DWORD *)(STACK[0x228] + 52) - 762492844;
  *(_DWORD *)(v60 - 184) = (a44 ^ 0x9F9601B)
                         + ((2 * a44) & 0xFAEEDA6 ^ 0xC0C2D80)
                         + v62
                         + (((v58 - 179) | 0x2C5) ^ 0x7B2FFD7D);
  *(_DWORD *)(v60 - 180) = ((v61 ^ 0x378D2FFC) - 33565880 + ((v61 << (((v58 - 100) & 0xFD) + 124)) & 0x6F1A5FF8)) ^ v62;
  *(void *)(v60 - 192) = a57;
  *(void *)(v60 - 168) = v57;
  *(void *)(v60 - 160) = &STACK[0x1870];
  *(_DWORD *)(v60 - 176) = v62 + v58 - 165;
  *(_DWORD *)(v60 - 172) = v63;
  uint64_t v64 = (*(uint64_t (**)(uint64_t))(v59 + 8 * (v58 ^ 0x9F5)))(v60 - 192);
  int v65 = *(_DWORD *)(v60 - 152);
  LODWORD(STACK[0x374]) = v65;
  return (*(uint64_t (**)(uint64_t))(v59 + 8 * ((579 * (v65 == 1904944996)) ^ v58)))(v64);
}

uint64_t sub_1B02CE280(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  *(void *)(a6 + (v8 - v9)) = *(void *)(a2 + (v8 - v9));
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + v9 == a4) * a8) ^ a3)))();
}

void sub_1B02CE2AC()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 839));
  JUMPOUT(0x1B029B6B0);
}

uint64_t sub_1B02CE2D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8 * ((7 * (a7 + 1 != v8 + 32)) ^ v7)))(a2, v10);
}

uint64_t sub_1B02CE39C@<X0>(uint64_t a1@<X1>, int a2@<W6>, unsigned int a3@<W8>)
{
  uint64_t v5 = a1 + a3;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 - a2 + 1958756680) & 0x417A8CBF ^ 0x817)
                                * (v6 - (unint64_t)a3 + 1918934476 < 8)) ^ v3)))();
}

void sub_1B02CE408()
{
}

void sub_1B02CE410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v14 - 108) = v12
                         + 776
                         - 628203409 * (((v14 - 120) & 0xEE6858EC | ~((v14 - 120) | 0xEE6858EC)) ^ 0x931FAB20);
  *(void *)(v14 - 120) = a11;
  (*(void (**)(uint64_t))(v13 + 8 * (v12 ^ 0x861)))(v14 - 120);
  *(_DWORD *)(v14 - 108) = v12
                         + 776
                         - 628203409
                         * ((((v14 - 120) | 0x6B5AE742) - (v14 - 120) + ((v14 - 120) & 0x94A518B8)) ^ 0xE9D2EB71);
  *(void *)(v14 - 120) = a12;
  (*(void (**)(uint64_t))(v13 + 8 * (v12 ^ 0x861)))(v14 - 120);
  *(void *)(v14 - 120) = a9;
  *(void *)(v14 - 112) = a12;
  *(_DWORD *)(v14 - 104) = (v12 + 1108) ^ (535753261
                                         * ((((2 * (v14 - 120)) | 0x772DCFEC) - (v14 - 120) - 999745526) ^ 0x3162E9D9));
  (*(void (**)(uint64_t))(v13 + 8 * (v12 + 2101)))(v14 - 120);
  JUMPOUT(0x1B02A45A8);
}

uint64_t sub_1B02CE564(int a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  uint64_t v11 = (unsigned int *)(v10 + 4 * v7);
  uint64_t v12 = v7 + 1;
  int v13 = *(_DWORD *)(v10 + 4 * v12);
  unsigned int v14 = v11[397] ^ ((v13 & 0x7FFFFFFE | v6 & 0x80000000) >> 1);
  unsigned int *v11 = (v14 + a1 - (a2 & (2 * v14))) ^ *(_DWORD *)(v9 + 4 * (v13 & (3 * (v5 ^ a5) - 1136)));
  return (*(uint64_t (**)(void))(v8 + 8 * ((60 * (v12 == 227)) ^ v5)))();
}

uint64_t sub_1B02CE5D0(uint64_t a1)
{
  LODWORD(STACK[0x374]) = v1 - 50;
  return sub_1B02C4A00(a1);
}

uint64_t sub_1B02CE5E4()
{
  BOOL v5 = v2 < v0;
  if (v5 == v3 - 0x5E791855227FEE10 < v0) {
    BOOL v5 = v3 - 0x5E791855227FEE10 < v2;
  }
  return (*(uint64_t (**)(void))(v4 + 8 * ((((139 * ((v1 - 31) ^ 0x43C)) ^ 0x1EE) * !v5) ^ (v1 - 31))))();
}

uint64_t sub_1B02CE660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, void))(v8
                                                                      + 8
                                                                      * (((((a7 ^ 0x71C) + 466) ^ 0x4C8) * (v7 > 0xF)) ^ a7)))(a1, a2, a3, 0);
}

void sub_1B02CE694()
{
}

uint64_t sub_1B02CE6A0()
{
  BOOL v3 = v2 + v0 - 1 >= ((v2 + 1) ^ 0x7FFFFB75u);
  return (*(uint64_t (**)(void))(*(void *)(v1 + 8 * (v2 - 1026)) - 12 + 8 * ((v3 | (2 * v3)) ^ v2)))();
}

uint64_t sub_1B02CE6E4()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((13 * (v0 + 1 != v2 + 48)) ^ v3)))();
}

uint64_t sub_1B02CE7B0(uint64_t a1, int a2, int a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * (((((v12 + 575 + v11) & (v9 + 1187) ^ a3) + (((a8 + v9) | 0x200) ^ a2) + v10 >= 0) * a4) ^ (v12 + 575))))();
}

uint64_t sub_1B02CE7C8()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v2 > 0x82) ^ (v0 - 391))))();
}

uint64_t sub_1B02CE864@<X0>(int a1@<W0>, void *a2@<X1>, int a3@<W2>, unsigned int a4@<W4>, char a5@<W5>, int a6@<W6>, int a7@<W7>, int a8@<W8>)
{
  int v15 = a3 + 1;
  unsigned int v16 = ((2 * (*(_DWORD *)(*a2 + 4 * (v15 + a8 + a1 + 1)) ^ v9)) << a5) | ((*(_DWORD *)(*a2 + 4 * (v15 + a8 + a1)) ^ (v9 + (v11 ^ a4) - 469)) >> v8);
  *(_DWORD *)(*a2 + 4 * (v15 + a6)) = v9 + v16 - (v10 & (2 * v16));
  BOOL v18 = v15 + a7 < v14 && v15 + a7 >= v12;
  return (*(uint64_t (**)(void))(v13 + 8 * ((v11 + 1342) ^ (4 * v18))))();
}

uint64_t sub_1B02CE86C()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((38 * (v0 ^ 0x5A9) - 1373) * (v1 != 0xA956177F)) ^ v0)))();
}

uint64_t sub_1B02CE8BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((27
                                * (v5 - v6 >= ((a5 - 1991757676) & 0xEFF)
                                            + (unint64_t)((a5 - 25369309) & 0x567CEF7B)
                                            - 1451028905)) ^ a5)))();
}

uint64_t sub_1B02CE920(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((100
                                * (v8 < ((a7 + 625799882) & 0x10E6B ^ 0xE4502CEA) + ((a7 + 1069544658) & 0x1BEFDB97))) ^ a7)))();
}

uint64_t sub_1B02CE98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * (int)((((((a6 - 1086362738) & 0xA45AFBE3) + 1541773962) ^ 0xC93) * (v7 > 0x1F)) ^ (a6 + 1664))))();
}

uint64_t sub_1B02CE9DC@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((((7 * (((a1 - 524) | 0x10) ^ 0xBB)) ^ 0x100) * (v2 == 1534202760)) ^ a1)))();
}

uint64_t sub_1B02CEA38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return sub_1B02C86DC(a6, 1904944996);
}

uint64_t sub_1B02CEA60@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((3275 * (*(_DWORD *)(a1 + 532) - 1388059667 < 53 * (v1 ^ 0x485u) + 2147482746)) ^ v1)))();
}

void sub_1B02CEAB0()
{
}

void sub_1B02CEABC()
{
}

uint64_t sub_1B02CEAEC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + v2 + 930 - 1419) * (v0 - v1 == 532263925)) ^ v2)))();
}

uint64_t sub_1B02CEB34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a3 + 8 * (int)(((v4 - 1 >= 0) * (a2 ^ 0xEB7)) ^ v3)))(a1, a2, a2);
}

uint64_t sub_1B02CEB70(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((*(_DWORD *)(v6 + v4 * (uint64_t)v5 + 36) == a3) * (v3 + 59 * (v3 ^ 0x28E) - 1282)) ^ v3)))();
}

uint64_t sub_1B02CEBB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(v17 - 136) = v13
                         + ((-598511553 - ((v17 - 136) | 0xDC53703F) + ((v17 - 136) | 0x23AC8FC0)) ^ 0xC330EDEB) * v14
                         + 712;
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = v16;
  uint64_t v18 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 + 1454)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((69 * (*(_DWORD *)(v17 - 132) > 417 * (v13 ^ 0x33Fu) + 11205616)) ^ v13)))(v18);
}

void sub_1B02CEC5C()
{
}

void sub_1B02CEC68()
{
  int v6 = ((~((v5 - 136) | 0x28C25B7A) + ((v5 - 136) & 0x28C25B7A)) ^ 0x37A1C6AE) * v2;
  *(_DWORD *)(v5 - 136) = v6 + v3 + 1282;
  *(void *)(v5 - 128) = v4;
  *(_DWORD *)(v5 - 120) = (((v3 - 86) ^ 0xCBEAD562) + v0) ^ v6;
  (*(void (**)(uint64_t))(v1 + 8 * (v3 + 1666)))(v5 - 136);
  JUMPOUT(0x1B02CECE0);
}

uint64_t sub_1B02CED60@<X0>(char a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((v1 + 6) ^ 0x5AE) - 655) * ((a1 & 0x18) == 0)) ^ (v1 + 6))))();
}

void sub_1B02CED94()
{
}

uint64_t sub_1B02CED9C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_1B02CEE24(a2 - 0x6155FFFFEB445CBDLL, a1 - 0x6155FFFFEB445CBDLL, 547210431, 0xFAFC7D7DEFB7FA7ELL, 0x7DA3BFFBB6E9EFE4, 989853520, 3747756864, 4007);
}

uint64_t sub_1B02CEE24(void *a1, void *a2, unsigned int a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v19 = v8
      + v11
      + (*(_DWORD *)(*v13 + 4 * (v14 + v17 + ((v12 - 1806) | 0x600) - 1586)) ^ v15)
      - (*(_DWORD *)(*a1 + 4 * (v14 + v17 + ((v12 - 1806) | 0x600) - 1586)) ^ v15);
  *(_DWORD *)(*a2 + 4 * (v14 + v17 + ((v12 - 1806) | 0x600) - 1586)) = v19 + v15 - (v18 & (2 * v19));
  BOOL v20 = v17 + a6 < v10;
  if (v9 > a3 != v17 + a6 < a7) {
    BOOL v20 = v9 > a3;
  }
  return (*(uint64_t (**)(void))(v16 + 8 * ((v20 * a8) ^ v12)))();
}

uint64_t sub_1B02CEEBC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((973 * (v1 + 1 == v2 + 44)) ^ v0)))();
}

uint64_t sub_1B02CEF94()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)((((v0 ^ 0x468 ^ (((v1 - 1431) | 0x512u) - 212)) < 8)
                                     * ((((v1 - 1431) | 0x512) + 208263901) & 0xF39623DC ^ 0x3EB)) ^ ((v1 - 1431) | 0x512))))();
}

uint64_t sub_1B02CEFF0@<X0>(int a1@<W8>)
{
  _DWORD *v1 = STACK[0x524];
  v1[85] = STACK[0x3B4];
  v1[86] = STACK[0x418];
  v1[87] = STACK[0x4CC];
  v1[88] = STACK[0x4FC];
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((STACK[0x450] == 0)
                                     * (((53 * (a1 ^ 0xA5) + 867) ^ 0xFFFFF813) + ((53 * (a1 ^ 0xA5)) ^ 0x2A1))) ^ (53 * (a1 ^ 0xA5) + 1192))))();
}

uint64_t sub_1B02CF064(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(void *)(v23 - 120) = a19;
  *(void *)(v23 - 112) = v22;
  *(_DWORD *)(v23 - 104) = (v19 + 903) ^ (535753261
                                        * ((2 * ((v23 - 120) & 0x20AFEE48) - (v23 - 120) - 548400717) ^ 0xD5A41F9C));
  (*(void (**)(uint64_t))(v20 + 8 * (v19 + 1896)))(v23 - 120);
  *(void *)(v23 - 112) = a19;
  *(void *)(v23 - 104) = v21;
  *(_DWORD *)(v23 - 120) = v19
                         + 108757529 * (((v23 - 120) & 0x627A41C4 | ~((v23 - 120) | 0x627A41C4)) ^ 0x7D19DC10)
                         + 1041;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0x919)))(v23 - 120);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((*(_DWORD *)(v23 - 116) > 0xAB00D2u)
                                              * ((7 * (((v19 + 542) | 0x88) ^ 0x48E)) ^ 0xA7)) ^ v19)))(v24);
}

uint64_t sub_1B02CF188@<X0>(int a1@<W7>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((((a1 - 900) & a2) != 0) | (16 * (((a1 - 900) & a2) != 0))) ^ (a1 + 194))))();
}

uint64_t sub_1B02CF1AC()
{
  unsigned int v5 = v3 + (v2 ^ 0xF7C) + (v2 ^ 0x291) + 419426837;
  if (v5 <= 0x40) {
    int v6 = 64;
  }
  else {
    int v6 = v5;
  }
  BOOL v7 = (-v1 - 419430434 - v0 + v6) < 0xF;
  return (*(uint64_t (**)(void))(v4 + 8 * ((2 * v7) | (4 * v7) | v2)))();
}

uint64_t sub_1B02CF230(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v1
                                                     + 8 * (int)((STACK[0x2F0] - 899) ^ 0x1C ^ (STACK[0x2F0] + 1252))))(a1, 388);
}

uint64_t sub_1B02CF294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  STACK[0x2A0] = v7;
  return (*(uint64_t (**)(void))(v5 + 8 * ((1720 * (v6 == v8 + ((a5 + 343541866) & 0xEB85F459) - 73)) ^ (a5 - 838))))();
}

void sub_1B02CF2E0()
{
}

uint64_t sub_1B02CF2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,int a27)
{
  return (*(uint64_t (**)(void))(v27 + 8 * ((1266 * (v28 < (a27 ^ 0x758C071Bu) - 1047279329)) ^ (v29 + 1972111868))))();
}

uint64_t sub_1B02CF338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_1B02CF34C(a1, a2, a3, a4, a5, 1804, a7, 973);
}

uint64_t sub_1B02CF34C@<X0>(int a1@<W3>, int a2@<W5>, int a3@<W7>, uint64_t a4@<X8>)
{
  uint64_t v10 = (v5 + a1 - v7);
  long long v11 = *(_OWORD *)(v4 + v10 - 15);
  long long v12 = *(_OWORD *)(v4 + v10 - 31);
  uint64_t v13 = a4 + v10;
  *(_OWORD *)(v13 - 15) = v11;
  *(_OWORD *)(v13 - 31) = v12;
  return (*(uint64_t (**)(void))(v9 + 8 * (((((v8 + 935) ^ a2) + v7 == v6) * a3) ^ (v8 + 166))))();
}

uint64_t sub_1B02CF398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5
                                                                       + 8
                                                                       * ((92
                                                                         * ((int)a3 <= ((95 * (v4 ^ 0x2BA)) ^ (v4 + 164)))) ^ v4)))(a1, a2, a3, a4);
}

uint64_t sub_1B02CF404(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  int v20 = (v17 - 732) | 0x483;
  int v21 = ((((v19 - 136) ^ 0x262AC662 | 0x338F488D) - (((v19 - 136) ^ 0x262AC662) & 0x338F488D)) ^ 0xF539ECC4) * v13;
  *(void *)(v19 - 128) = v18;
  *(_DWORD *)(v19 - 136) = v21 + v17 + 1059;
  *(_DWORD *)(v19 - 120) = (v16 - 988522202 + v20) ^ v21;
  (*(void (**)(uint64_t))(v15 + 8 * (v17 + 1443)))(v19 - 136);
  *(_DWORD *)(v19 - 136) = v20 + 108757529 * ((v19 - 1584050008 - 2 * ((v19 - 136) & 0xA1955130)) ^ 0x4109331B) + 289;
  *(void *)(v19 - 128) = a13;
  *(void *)(v19 - 120) = v14;
  uint64_t v22 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v20 + 1031)))(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((((((v20 + 17) ^ (*(_DWORD *)(v19 - 132) > 0xAB00D2u)) & 1) == 0)
                                              * (v20 - 1244)) ^ v20)))(v22);
}

uint64_t sub_1B02CF538()
{
  STACK[0x260] = v1 - 112;
  STACK[0x328] = v1 - 112;
  return v0();
}

void sub_1B02CF554(int a1@<W8>)
{
  BOOL v7 = *(_DWORD *)(*v4 + 4 * (a1 + v2)) == v3;
  _DWORD *v6 = v1 + v1 * (v2 + a1 - v7) + (a1 - v7) * ((v5 ^ 0x79F) - 1181130951) + 1859287242;
}

uint64_t sub_1B02CF5D8@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1B02CF628(a4 - 0x6155FFFFEB445CBDLL, a1 - 0x6155FFFFEB445CBDLL, 1639, 0xE4E7EFF5EDFFD75BLL, 0x1DBFFAEB6, 0x3FF975EFFFFBE9FFLL, 58);
}

uint64_t sub_1B02CF628(void *a1, void *a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v20 = v17 > v12;
  uint64_t v21 = 4 * (v18 + v13);
  int v22 = v7 + v15 + (*(_DWORD *)(*a1 + v21) ^ (v16 + (v8 ^ a3) - 1011));
  *(_DWORD *)(*a2 + v21) = v22 + v16 - (v14 & (2 * v22));
  LODWORD(v21) = v18 + 1 + v9;
  int v23 = v20 ^ ((int)v21 < v10);
  BOOL v24 = (int)v21 < v11;
  if (!v23) {
    BOOL v20 = v24;
  }
  return (*(uint64_t (**)(void))(v19 + 8 * ((!v20 * a7) ^ v8)))();
}

void sub_1B02CF6BC()
{
}

void sub_1B02CF6C4()
{
}

uint64_t sub_1B02CF758()
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v4 - 1 + v2 < v0 + ((v1 - 989220870) & 0x3AF64FFFu) + 1979) * (v1 + 1883)) ^ v1)))();
}

uint64_t sub_1B02CF7A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(uint64_t, void))(v8
                                                    + 8
                                                    * ((((((a6 - 1561) | 0x220) ^ (v6 + 340)) + a6 - v6 - 1388)
                                                      * (v7 < 0x20)) ^ a6)))(a1, 0);
}

uint64_t sub_1B02CF7E0@<X0>(uint64_t a1@<X1>, char a2@<W5>, uint64_t a3@<X8>)
{
  *(unsigned char *)(a3 + v4 + a1) = a2;
  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((((v3 ^ ((unint64_t)(v4 + 1 + a1) < 0x38)) & 1) * v5) ^ v3)))();
}

uint64_t sub_1B02CF814@<X0>(int a1@<W8>)
{
  int v4 = a1 + 18;
  int v5 = (v4 + 283) | 0x14;
  uint64_t v6 = (*(uint64_t (**)(void))(v1 + 8 * (v4 ^ 0xA6D)))(*v3);
  return (*(uint64_t (**)(uint64_t))(v1 + 8 * (v5 | ((*v2 == ((v5 + 1387013050) & 0xAD53DFBB) - 1970) << 6))))(v6);
}

void sub_1B02CF878()
{
}

uint64_t sub_1B02CF9A8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = v5 + v8;
  *(unsigned char *)(v10 + a5 - 1) = a2;
  return (*(uint64_t (**)(void))(v9 + 8 * (int)(((v10 < (v6 ^ v7 ^ 0x38DuLL)) * v7) ^ v6 ^ v7)))();
}

uint64_t sub_1B02CF9E4(uint64_t a1, uint64_t a2, unsigned int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((124 * ((a8 + 1 + v9) > 0x1F)) ^ a3)))();
}

void sub_1B02CFAC4()
{
  STACK[0x518] = STACK[0x4F0];
  JUMPOUT(0x1B02B17A8);
}

void sub_1B02CFAE4()
{
}

uint64_t sub_1B02CFB58@<X0>(int a1@<W0>, int a2@<W1>, unsigned int a3@<W2>, int a4@<W3>, unsigned int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,char a22)
{
  BOOL v28 = a5 < v24;
  char v29 = *(unsigned char *)(v27 + a2 + v23 + ((v25 - 100) | 8u) - 77);
  *(&a22 + (v22 + a1)) = v29 - ((2 * v29) & 0xA0) - 48;
  unsigned int v30 = v23 + 1 + a4;
  int v31 = v28 ^ (v30 < a3);
  BOOL v32 = v30 < a5;
  if (!v31) {
    BOOL v28 = v32;
  }
  return (*(uint64_t (**)(void))(v26 + 8 * ((!v28 | (16 * !v28)) ^ v25)))();
}

uint64_t sub_1B02CFBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, int a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10
                                                              + 8
                                                              * ((23 * (v8 + ((v9 - a7 + 993) ^ 0x877BA7AE) < 0x38)) ^ (a8 + v9 + 111))))(a1, a2, -2021940145);
}

uint64_t sub_1B02CFC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20,int a21)
{
  unsigned int v30 = &a21 + 6 * v22;
  v30[2] = v24;
  v30[3] = v23;
  *((void *)v30 + 2) = v29;
  v30[6] = a19;
  a21 = v21 + a9 + 999 - 1348;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 8 * ((776 * (*(_DWORD *)(v27 + 48 * v25 + 32) + 685743161 < ((a9 - v28) ^ 0x5F130BA3u))) ^ a9)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11);
}

uint64_t sub_1B02CFCEC()
{
  *(_DWORD *)(v6 - 120) = v3
                        - 1759421093 * ((((2 * (v6 - 136)) | 0x21AB298E) - (v6 - 136) + 1865050937) ^ 0x23A82493)
                        + 1805;
  *(void *)(v6 - 136) = v5;
  *(void *)(v6 - 128) = v1;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 + 1877)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((v4 == (v0 ^ 0x3C5DC9A1)) * (((v3 + 96) | 0x100) + 85)) ^ v3)))(v7);
}

uint64_t sub_1B02CFD88@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int a43,int a44,uint64_t a45)
{
  STACK[0x5C8] = 0x7BCD24C3B76801CCLL;
  STACK[0x5C0] = 0x90730115DBF552B0;
  int v47 = a1 + 588;
  int v48 = STACK[0x474];
  LODWORD(STACK[0x564]) = STACK[0x474];
  int v49 = (v46 - 192) & 0xFCDA55E6;
  int v50 = 1759421093 * ((v46 - 52800218 - 2 * v49) ^ 0x4FA7E5B2);
  *(void *)(v46 - 192) = &STACK[0x7E7E4A92A462C03];
  *(void *)(v46 - 152) = &STACK[0x7672B12460B7575C];
  *(void *)(v46 - 144) = &STACK[0x7815B46F882D6983];
  *(void *)(v46 - 176) = &STACK[0x5C0];
  *(void *)(v46 - 168) = a45;
  *(_DWORD *)(v46 - 160) = -1759421093 * ((v46 - 52800218 - 2 * v49) ^ 0x4FA7E5B2) + 576921569 * a44 - 1782971892;
  *(_DWORD *)(v46 - 156) = v50 + 1724261345 * v48 + 596626900;
  *(_DWORD *)(v46 - 180) = v50 + a1 + 883 - 516;
  uint64_t v51 = (*(uint64_t (**)(uint64_t))(v45 + 8 * (a1 + 2428)))(v46 - 192);
  int v52 = *(_DWORD *)(v46 - 184);
  LODWORD(STACK[0x374]) = v52;
  return (*(uint64_t (**)(uint64_t))(v45 + 8 * ((1881 * (v52 == 1904944996)) ^ v47)))(v51);
}

uint64_t sub_1B02CFDC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8 * (int)(((a11 != v11) * ((v13 + 1662400097) & 0x9CE9C99E ^ 0x9E)) ^ (v13 + 217))))();
}

uint64_t sub_1B02CFF68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, unsigned int a8)
{
  BOOL v13 = v11 < v10;
  unsigned int v14 = v9 + 1;
  if (v13 == v14 > a8) {
    BOOL v13 = v14 + v10 < v11;
  }
  return (*(uint64_t (**)(void))(v12 + 8 * ((!v13 * a6) ^ v8)))();
}

uint64_t sub_1B02CFFE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((((29 * (v1 ^ 0x589)) ^ 0xAA) - 209) * (v2 != a1)) ^ v1)))();
}

uint64_t sub_1B02D0024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int v10 = STACK[0x2F0] ^ 0x398;
  unint64_t v5 = STACK[0x4A0];
  STACK[0x4B0] = *(void *)(v9 + 8 * (int)(STACK[0x2F0] - 858));
  STACK[0x4D0] = v5;
  STACK[0x548] = v8;
  uint64_t v6 = *(_DWORD *)(v5 - 0x2B41EA7AD2F8E82DLL) & 0x3F ^ (53 * (v10 ^ 0xCu) - 884);
  *(unsigned char *)(v5 - 0x2B41EA7AD2F8E871 + v6) = 80;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v9
                                                                                                  + 8 * ((2250 * (v6 > (((v10 ^ 0xC) + 1957) ^ 0x781u))) ^ v10)))(a1, -1759093154, 29, a4, a5, 208, 2389998781);
}

uint64_t sub_1B02D0038(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((a1 ^ 0x144) - 1610) * (v1 != v2)) ^ a1)))();
}

void sub_1B02D0064()
{
}

uint64_t sub_1B02D0080@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8 * ((25 * (v1 == 1400183651)) ^ 0x7AAu)))();
}

uint64_t sub_1B02D00B8@<X0>(int a1@<W0>, unsigned int a2@<W1>, unsigned int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  BOOL v28 = v22 > a2;
  unint64_t v29 = (*(_DWORD *)(v21 + v26) ^ a3) + HIDWORD(v20);
  *(_DWORD *)(v21 + 4 * v24) = v29 + (v19 ^ (a3 + 541)) - (v18 & (2 * v29));
  *(_DWORD *)(a18 + v26) = (v29 >> (((v19 - 121) | 5u) + 113)) + a3 - 2 * (v29 >> (((v19 - 121) | 5u) + 113));
  if (v28 == v25 + 338530142 < -642246661) {
    BOOL v28 = v25 + 338530142 < a1;
  }
  return (*(uint64_t (**)(void))(v23 + 8 * ((v19 + 722) ^ (!v28 * v27))))();
}

void sub_1B02D015C()
{
  uint64_t v0 = MEMORY[0x1F4188790]();
  if (*(void *)v0) {
    BOOL v2 = *(void *)(v0 + 16) == 0x53B515D5D604607FLL;
  }
  else {
    BOOL v2 = 1;
  }
  int v3 = v2;
  int v1 = *(_DWORD *)(v0 + 28) ^ (1225351577 * (((v0 | 0x49F0B3C) - (v0 | 0xFB60F4C3) - 77531965) ^ 0x2705D32A));
  __asm { BRAA            X8, X17 }
}

uint64_t sub_1B02D029C()
{
  int v5 = 108757529 * ((((2 * (v4 - 144)) | 0x48D9DF62) - (v4 - 144) - 611119025) ^ 0xC4F08D9A);
  *(void *)(v4 - 128) = v9;
  *(void *)(v4 - 144) = v3;
  *(_DWORD *)(v4 - 136) = (((v0 - 884) ^ 0xD080427E) + v8) ^ v5;
  *(_DWORD *)(v4 - 132) = v0 - v5 - 147;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v0 + 1317)))(v4 - 144);
  *(_DWORD *)(v7 - 0x2E015889EE853F5ALL) = v8;
  *(_DWORD *)(v1 + 24) = 1904944996;
  return result;
}

_DWORD *sub_1B02D037C(_DWORD *result)
{
  *uint64_t result = v1;
  return result;
}

uint64_t sub_1B02D0384(uint64_t result)
{
  *(_DWORD *)(result + 4) = 1334526195;
  return result;
}

void sub_1B02D0394()
{
}

uint64_t sub_1B02D03F8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  *(_DWORD *)(result + 4) = a5;
  return result;
}

uint64_t sub_1B02D0404@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  a8 = (v12 - 264) ^ ((((&a8 | 0xADF4F21E) - (&a8 & 0xADF4F21E)) ^ 0xC000EA17) * v13);
  a9 = (uint64_t)&a7 + a1 + 4;
  a10 = a3;
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 8 * (v12 ^ 0xBC2)))(&a8);
  return sub_1B02AF8C0(v15, v16, v17, v18, v19, v20, v21, v22, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1B02D0478@<X0>(uint64_t a1@<X6>, uint64_t a2@<X7>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * (((4 * (a3 + 1 == v4 + 24)) | (16 * (a3 + 1 == v4 + 24))) ^ v3)))(a1, a2);
}

uint64_t sub_1B02D0548()
{
  unsigned int v3 = *(_DWORD *)(v1 - 0x7DA9E0EFFB1E361ELL) - 2147094091;
  unsigned int v4 = ((4 * (v2 ^ 0x21)) ^ 0x329DD09E) + *(_DWORD *)(v1 - 0x7DA9E0EFFB1E3622);
  BOOL v5 = v4 < 0xAE3B86B3;
  BOOL v6 = v3 < v4;
  if (v3 < 0xAE3B86B3 != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((26 * (((v2 + 26) ^ v6) & 1)) | v2)))();
}

uint64_t sub_1B02D0628()
{
  int v3 = v1 + 754;
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((87
                                * (((2 * (((v3 - 918) & v0) - ((2 * ((v3 - 918) & v0)) & 0xA8FAF634) - 729973990)) & 0xDFDFBD6E ^ 0x88DAB424)
                                 + ((((v3 - 918) & v0) - ((2 * ((v3 - 918) & v0)) & 0xA8FAF634) - 729973990) ^ ((v3 ^ 0x137) - 1148017909))
                                 - 34347012 == 1843644083)) ^ v3)))();
}

uint64_t sub_1B02D06BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_1B02D0758(a1, 2771990134, 2041929660, 1282504119, a5, 212, 1819804648, 2475161529);
}

uint64_t sub_1B02D0758(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6)
{
  BOOL v12 = v7 + a3 > ((v10 + v9) & a2) + a4 || v7 + a3 < v6;
  return (*(uint64_t (**)(void))(v8 + 8 * ((v12 * a6) ^ v10)))();
}

uint64_t sub_1B02D079C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8 * ((((*(unsigned char *)(v2 - 0x7DA9E0EFFB1E361ALL) & 1) == 0) * ((v0 ^ 0x3D9) - 261)) ^ v0)))();
}

uint64_t sub_1B02D07D8()
{
  return 0;
}

void sub_1B02D0818()
{
}

void sub_1B02D0898()
{
}

uint64_t sub_1B02D0920@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, int a5, uint64_t a6, uint64_t a7)
{
  a4 = (v10 - 315) ^ (((((2 * &a4) | 0x3A443308) - &a4 + 1658709628) ^ 0xF0D6018D) * v8);
  a6 = a1;
  a7 = a3;
  uint64_t v11 = (*(uint64_t (**)(unsigned int *))(v9 + 8 * (v10 ^ 0xBF7u)))(&a4);
  return (*(uint64_t (**)(uint64_t))(v9
                                            + 8
                                            * (((a5 == v7) * (((2 * (v10 ^ 0x3F) - 1105620776) & 0x41E66F26) - 775)) ^ v10)))(v11);
}

uint64_t sub_1B02D09C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  int v27 = ((2 * ((v26 - 144) & 0x9DEAFE8) - (v26 - 144) - 165588971) ^ 0x455CE041) * v25;
  *(void *)(v26 - 144) = a23;
  *(_DWORD *)(v26 - 132) = v27 + v24 - 667;
  *(_DWORD *)(v26 - 128) = v27;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 1055)))(v26 - 144);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v26 - 136) == (((v24 - 1134) | 4) ^ 0x25BF83BC))
                                              * ((v24 - 1134) ^ 0xA8)) ^ v24)))(v28);
}

uint64_t sub_1B02D09CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unsigned int a14, int a15)
{
  a14 = (535753261 * (&a14 ^ 0xAF40E2F)) ^ 0xE1F2694A;
  uint64_t v17 = (*(uint64_t (**)(unsigned int *))(v16 + 18864))(&a14);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((3400 * (a15 == v15)) ^ 0x50Fu)))(v17);
}

uint64_t sub_1B02D0A38()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (((v0 + ((v1 - 1859) | 0x508u) - 1422 < 0x9C) * ((v1 ^ 0x3D5) - 1012)) ^ v1)))();
}

uint64_t sub_1B02D0A7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t *a11, uint64_t a12, uint64_t a13, unsigned int a14, unint64_t *a15, unint64_t *a16)
{
  a14 = (v16 - 341) ^ (1374699841 * ((&a14 & 0x77BAA81D | ~(&a14 | 0x77BAA81D)) ^ 0xE5B14FEB));
  a15 = &STACK[0x571B6222F4470CDA];
  a16 = a11;
  (*(void (**)(unsigned int *))(v17 + 8 * (v16 + 1649)))(&a14);
  a15 = &STACK[0x571B6222F4470CDE];
  a16 = a11;
  a14 = (v16 - 341) ^ (1374699841
                     * ((&a14 + 1375784868 - 2 * (&a14 & 0x5200CFA4)) ^ 0x3FF4D7AD));
  (*(void (**)(unsigned int *))(v17 + 8 * (v16 + 1649)))(&a14);
  a15 = a11;
  a14 = (v16 + 184) ^ (1755732067
                     * (((&a14 | 0x8C52E80E) - &a14 + (&a14 & 0x73AD17F0)) ^ 0x529455D5));
  uint64_t v19 = (*(uint64_t (**)(unsigned int *))(v17 + 8 * (v16 + 1612)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * ((475
                                              * ((v16 ^ 0xDB ^ (a16 == ((v18 + v16 + 43) ^ 0x2B4EE43B))) & 1)) ^ v16)))(v19);
}

uint64_t sub_1B02D0C0C()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((252 * ((((v1 - 1) < 0x7FFFFFFF) ^ (v2 - 79)) & 1)) ^ (v2 + 690))))();
}

void sub_1B02D0C4C()
{
}

uint64_t sub_1B02D0FE4@<X0>(uint64_t a1@<X8>)
{
  int v8 = (_DWORD *)(v2 + 4 * (a1 + v6));
  int v9 = *(v8 - 8) ^ *(v8 - 3);
  int v10 = *(v8 - 16) ^ *(v8 - 14) ^ (v9 + v4 - (v1 & (2 * v9)));
  HIDWORD(v11) = v10 ^ v4;
  LODWORD(v11) = v10;
  _DWORD *v8 = (v11 >> 31) + v4 - (v1 & (2 * (v11 >> 31)));
  return (*(uint64_t (**)(void))(v3 + 8 * ((57 * (a1 + 1 != v7 + 64)) ^ v5)))();
}

void sub_1B02D1060()
{
}

uint64_t sub_1B02D1140(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t *a16, unsigned int a17, int a18, uint64_t a19, int a20,int a21)
{
  if (((v22 - 285247202) & 0xE417A6AB) - 930626429 + a10 >= 0x206ABC57) {
    int v25 = -289118292;
  }
  else {
    int v25 = -1487096439;
  }
  unsigned int v26 = 628203409 * (((&a16 | 0x8624EE2B) - (&a16 & 0x8624EE2B)) ^ 0x4ACE218);
  a16 = &STACK[0x53B515D5D6046087];
  a19 = a12;
  a21 = v26 ^ 0x7F04DECD;
  a17 = v25 - v26;
  a18 = v24 - v26 - 2024874246;
  uint64_t v27 = (*(uint64_t (**)(unint64_t **))(v23 + 8 * (v24 + 1178)))(&a16);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((a20 == ((v24 + 1799842387) & 0x94B895F9 ^ (v21 - 936)))
                                              * ((v24 ^ 0x600) - 303)) ^ v24)))(v27);
}

void sub_1B02D126C()
{
}

uint64_t sub_1B02D1280@<X0>(char a1@<W4>, uint64_t a2@<X6>, int a3@<W8>)
{
  unsigned int v9 = *(_DWORD *)(v8 - 252 + ((v6 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a2 + (v6 + a3)) = (HIBYTE(v9) ^ 0x74) - ((2 * (HIBYTE(v9) ^ 0x74)) & 0xA0) - 48;
  *(unsigned char *)(a2 + (v6 + a3 + 2)) = (BYTE1(v9) ^ 7) - ((v9 >> 7) & 0xA0) - 48;
  *(unsigned char *)(a2 + (v6 + a3 + 1)) = ((v9 >> ((v4 - a1 + 120) ^ 0x39)) ^ 0x4A)
                                               - 2
                                               * (((v9 >> ((v4 - a1 + 120) ^ 0x39)) ^ 0x4A) & 0x55 ^ (v9 >> ((v4 - a1 + 120) ^ 0x39)) & 5)
                                               - 48;
  *(unsigned char *)(a2 + (v6 + a3 + 3)) = v9 ^ 0xBE;
  unsigned int v10 = *(_DWORD *)(v8 - 160) - 457830047;
  BOOL v11 = v10 < v3;
  BOOL v12 = v6 + 355570000 < v10;
  if (v6 + 355570000 < v3 != v11) {
    BOOL v12 = v11;
  }
  return (*(uint64_t (**)(void))(v7 + 8 * ((v12 * v5) ^ v4)))();
}

uint64_t sub_1B02D1378(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((74
                                * (((a5 + 110) ^ ((v7 & (2 * (*(unsigned __int8 *)(v8 + 5) - 242)))
                                                                 + ((*(unsigned __int8 *)(v8 + 5) - 242) ^ (((a5 - 1092952501) & 0xBA48B777) + a2)) == v6)) & 1)) ^ a5)))();
}

void sub_1B02D13D8()
{
}

uint64_t sub_1B02D1440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,uint64_t a21,unint64_t *a22,unint64_t *a23,unsigned int a24)
{
  a21 = a17;
  a22 = &STACK[0x4868F96DDF288FF4];
  a24 = (v25 + 565) ^ (1225351577
                     * ((((&a20 | 0xCA8B45DE) ^ 0xFFFFFFFE) - (~&a20 | 0x3574BA21)) ^ 0x16EE6237));
  a23 = &STACK[0x3B842D404CB6A8DC];
  uint64_t v27 = (*(uint64_t (**)(char *))(v26 + 8 * (v25 ^ 0xC17)))(&a20);
  return (*(uint64_t (**)(uint64_t))(v26 + 8 * ((((v25 ^ 0x485) + 414) * (a11 < v24)) ^ v25)))(v27);
}

uint64_t sub_1B02D1530(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  BOOL v16 = a13 < 0x3AC964EA;
  unsigned int v17 = ((v14 - 2019) | 0x10) + v13 - 281525005;
  int v18 = v16 ^ (v17 < 0x3AC964EA);
  BOOL v19 = v17 < a13;
  if (!v18) {
    BOOL v16 = v19;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v15 + 8 * ((77 * !v16) ^ v14)))(a1, 3027165185);
}

void sub_1B02D15A0()
{
}

uint64_t sub_1B02D15AC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * (a1 ^ 0x13F ^ (28 * (v2 > (a1 ^ 0x13Fu) - 1188)))))();
}

void sub_1B02D16AC()
{
  if (v0 == 1612863066) {
    int v1 = 1904944996;
  }
  else {
    int v1 = -1904968516;
  }
  *(_DWORD *)(v2 + 32) = v1;
}

uint64_t sub_1B02D1710@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((a1 - 208) | 0x40E) ^ 0x5FC) * ((v1 - 1400183716) < 0xFFFFFFBF)) ^ a1)))();
}

uint64_t sub_1B02D1758@<X0>(int a1@<W0>, int a2@<W8>)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((v3 + a2 - 1574 + a1 >= 0) * v4) ^ v2)))();
}

uint64_t sub_1B02D1784@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(a2 + 8 * ((a1 + 149) ^ 0x33)))();
}

uint64_t sub_1B02D17C0(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v6 + 8 * (((v7 ^ a6 ^ ((v7 + 1396) | 0x1D) ^ 0x68F) * (a1 == 0)) ^ (v7 + 819))))();
}

void sub_1B02D17FC(uint64_t a1@<X8>, int a2, uint64_t a3, int a4)
{
  unsigned int v6 = 628203409
     * (((&a2 | 0xE48DBFD8) - &a2 + (&a2 & 0x1B724020)) ^ 0x6605B3EB);
  a2 = v6 + v5 - 148 - 884;
  a4 = v4 - v6 - 2 * ((v5 ^ 0x4E9) & v4 ^ (v4 + 40633928) & 0x6CAAE0EF) + 1863771954;
  a3 = a1;
  JUMPOUT(0x1B029B984);
}

void sub_1B02D189C()
{
}

void sub_1B02D18A8()
{
}

uint64_t sub_1B02D1998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  *(void *)(v23 - 136) = v18;
  *(void *)(v23 - 128) = v22;
  *(void *)(v23 - 144) = v18;
  *(void *)(v23 - 112) = v21;
  *(void *)(v23 - 104) = a14;
  *(_DWORD *)(v23 - 120) = v19 + 1225351577 * ((v23 - 144) ^ 0x239AD816) + 1368;
  uint64_t v24 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 + 2174)))(v23 - 144);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((255
                                              * ((((a18 - 1334526196) < 0x7FFFFFFF) ^ (((75 * (v19 ^ 0xC5)) ^ 0x32) + 41)) & 1)) ^ (1099 * (v19 ^ 0xC5) - 1822))))(v24);
}

uint64_t sub_1B02D1A40@<X0>(int a1@<W8>)
{
  int v6 = a1 + 1507737071;
  int v7 = v2 ^ 0x3E3;
  if (*v3 + 759423982 < 0) {
    int v6 = 936506845 - a1;
  }
  _DWORD *v3 = v7 + *v3 + v6 - 1222122186;
  **(_DWORD **)(v4 - 0x6155FFFFEB445CBDLL) = *(_DWORD *)(*(void *)(v4 - 0x6155FFFFEB445CBDLL) + 4 * (a1 + 285615113));
  return (*(uint64_t (**)(void))(v5 + 8 * ((995 * (v1 - 417244876 > -131629762)) ^ v7)))();
}

uint64_t sub_1B02D1B14(uint64_t a1, uint64_t a2)
{
  return sub_1B02D1B30(a1, a2, v2 & 0xFFFFFFE0);
}

uint64_t sub_1B02D1B30(uint64_t a1, int a2, int a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v12 = (a2 + v10 - a6);
  long long v13 = *(_OWORD *)(v9 + v12 - 15);
  long long v14 = *(_OWORD *)(v9 + v12 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11 + 8 * (((a7 + a6 == a3) * a8) ^ (v8 + a4 + 953))))();
}

void sub_1B02D1B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13)
{
  a10 = v14;
  a11 = v13;
  a12 = v14;
  a13 = v15 + 535753261 * (((&a10 | 0x2A2E2859) + (~&a10 | 0xD5D1D7A6)) ^ 0x20DA2677) + 1596;
  JUMPOUT(0x1B02A8A34);
}

uint64_t sub_1B02D1BCC()
{
  int v5 = v3 - 559;
  int v6 = v3 + 35 + *(unsigned __int8 *)(v2 + 4) - 1100;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1542 * ((v1 & (2 * v6)) + (v6 ^ v0) == v0)) ^ v5)))();
}

void sub_1B02D1C0C()
{
  int v6 = 1224239923 * ((((v5 - 144) | 0x4FABCA26) - (v5 - 144) + ((v5 - 144) & 0xB05435D8)) ^ 0xBD1837F1);
  *(void *)(v5 - 120) = v4;
  *(void *)(v5 - 136) = v0;
  *(_DWORD *)(v5 - 128) = v2 - v6 - 84363784 + (v1 ^ 0x1F0);
  *(_DWORD *)(v5 - 140) = (v1 + 1121) ^ v6;
  (*(void (**)(uint64_t))(v3 + 8 * (v1 + 1442)))(v5 - 144);
  JUMPOUT(0x1B02B7F98);
}

uint64_t sub_1B02D1C90@<X0>(uint64_t a1@<X0>, int a2@<W5>, int a3@<W6>, int a4@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4
                                                     + 8
                                                     * ((((a4 - 1918934476) < 0x38)
                                                       * ((v5 ^ (a2 + 430)) - 119)) ^ (a3 + v5 + 759))))(a1, -1918934476);
}

uint64_t sub_1B02D1CD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, unsigned int a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,int a26,int a27,int a28)
{
  int v30 = (((a26 ^ a8) + a27) ^ 0x4FE55FF9) - 8392320 + ((2 * ((a26 ^ a8) + a27)) & 0x9FCABFF2);
  BOOL v31 = a20 < a19;
  if (v31 == v30 + 939579672 < (((a18 - 574) | 1u) ^ HIDWORD(a18))) {
    BOOL v31 = v30 + 939579672 < a20;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * (int)((v31 * (((a18 - 286) | 0x4E) - 261)) ^ a18)))(a1, a2, (HIDWORD(a17) ^ (a28 + (v28 ^ a8)))- 825361120+ ((2 * (a28 + (v28 ^ a8))) & 0x7E7DE7FE), a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17,
           a18);
}

uint64_t sub_1B02D1DA8@<X0>(int a1@<W1>, int a2@<W2>, int a3@<W3>, int a4@<W4>, uint64_t a5@<X8>)
{
  uint64_t v10 = (a3 + a1 + a2 + 963);
  uint64_t v11 = v10 + v5;
  uint64_t v12 = v10 + a5;
  unint64_t v13 = v11 - v12;
  uint64_t v14 = (((a4 + 1925229580) & 0x8D3F57CA) - 1915) & (a1 + a2);
  uint64_t v15 = v7 - v12;
  unint64_t v16 = (v14 | v6) - v12;
  uint64_t v17 = (((a4 - 943) | 0x459u) ^ 0x45CLL) - v12;
  BOOL v19 = v13 >= 0x10 && (unint64_t)(v15 + v14) >= 0x10 && v16 >= 0x10;
  unint64_t v20 = v17 + (v14 | v8);
  int v22 = !v19 || v20 < 0x10;
  return (*(uint64_t (**)(void))(v9 + 8 * ((112 * v22) ^ a4)))();
}

uint64_t sub_1B02D1E44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v9
                                                                                                 + 8
                                                                                                 * ((((v8 & 8) == (((v6 + 526) | 4) ^ 0x426)) * (((v6 - 527) | 0x852) - 2087)) ^ v6)))(a1, a2, a3, a4, a5, a6, (v7 - a6));
}

void sub_1B02D1E88()
{
}

uint64_t sub_1B02D1EA4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  unsigned int v17 = a1 & 0xF4A2C5F7;
  int v18 = v17 ^ 0x851;
  *(_DWORD *)(v16 - 120) = v17
                         + 1225351577
                         * ((((v16 - 144) | 0xC33E8D0D) - (v16 - 144) + ((v16 - 144) & 0x3CC172F0)) ^ 0xE0A4551B)
                         + 1368;
  *(void *)(v16 - 144) = a13;
  *(void *)(v16 - 136) = a13;
  *(void *)(v16 - 128) = a15;
  *(void *)(v16 - 112) = a14;
  *(void *)(v16 - 104) = a4;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (int)(v17 + 2174)))(v16 - 144);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((255
                                              * ((((a11 - 1334526196) < 0x7FFFFFFF) ^ ((v18 ^ 0x32) + 41)) & 1)) ^ (v18 - 1822))))(v19);
}

void sub_1B02D1F78()
{
}

uint64_t sub_1B02D2040()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((((v2 - 822424227) & 0x31052F1B ^ 0xCD5A5501) + v1 > 0xFFFFFFFD)
                                * (((v2 - 1958086027) & 0x74B5FFBF) - 579)) ^ v2)))();
}

uint64_t sub_1B02D20A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t))(v10 + 8 * ((451 * (a8 + 1 == v9 + 64)) ^ v8)))(a7);
}

uint64_t sub_1B02D2184()
{
  *(_DWORD *)(v3 - 104) = (v2 + 225) ^ (535753261 * (((v3 - 120) & 0x5E7B2452 | ~((v3 - 120) | 0x5E7B2452)) ^ 0xAB70D582));
  *(void *)(v3 - 120) = v1;
  *(void *)(v3 - 112) = v5;
  return (*(uint64_t (**)(uint64_t))(v0 + 8 * (v2 + 1218)))(v3 - 120);
}

uint64_t sub_1B02D2220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v9 = 97 * (a6 ^ 0x771);
  int v10 = (v9 - 850801254) & 0x32B634EE;
  *unint64_t v13 = a1;
  int *v6 = (v7 + v9 - 485) ^ v16;
  int v11 = 2 * (v10 ^ 0x58D);
  unsigned int v18 = v10
      + 535753261
      * (((v17 | 0xF9E1E3D5) - v17 + (v17 & 0x61E1C28)) ^ 0xF315EDFA)
      - 644;
  uint64_t v19 = v15;
  (*(void (**)(unsigned char *))(v8 + 8 * (v10 + 1169)))(v17);
  unsigned int v18 = v11
      + 535753261
      * (((v17 | 0x2FD635A4) - v17 + (v17 & 0xD029CA58)) ^ 0x25223B8B)
      - 476;
  uint64_t v19 = v14;
  (*(void (**)(unsigned char *))(v8 + 8 * (v11 ^ 0xB39)))(v17);
  return v7 ^ 0x718B2764u;
}

void sub_1B02D237C()
{
}

uint64_t sub_1B02D2388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  *(void *)(&a25 + v25 + ((v27 - 596) ^ (unint64_t)(a2 - 46))) = 0xD0D0D0D0D0D0D0D0;
  return (*(uint64_t (**)(void))(v28 + 8 * ((2710 * ((v26 & 0x38) == 8)) ^ v27)))();
}

uint64_t sub_1B02D23D4()
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((55 * (*(_DWORD *)(v1 + 4 * v2) == v3)) ^ v0)))();
}

uint64_t sub_1B02D2400@<X0>(int a1@<W8>)
{
  int v3 = *(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xB5Cu));
  return v3(v1);
}

void sub_1B02D2434()
{
}

uint64_t sub_1B02D2440()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((v0 - 285615115 < ((v1 - 1105) ^ 0x7FFFFE2Au)) * ((76 * (v1 ^ 0x625)) ^ 0x17)) ^ v1)))();
}

uint64_t sub_1B02D24AC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,char a39)
{
  *(unsigned char *)(a5 + v42 + ((v39 - 10) ^ 0x16u) - 850 + 1) = *(&a39 + (v41 - 1769776161));
  return (*(uint64_t (**)(void))(v43 + 8 * ((v39 - 10) ^ (22 * ((v40 & 0xFFFFFFFC) != a1)))))();
}

uint64_t sub_1B02D2500@<X0>(uint64_t a1@<X2>, unsigned int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, int a13, int a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unint64_t v24 = (a1 ^ HIDWORD(v23)) + HIDWORD(v20) + (*(_DWORD *)(a19 + a6) ^ a2);
  *(_DWORD *)(a19 + 4 * a7) = v24 + a2 - (((((v22 + 770371403) & 0xD2150F79) + 1080) ^ (v19 + 761)) & (2 * v24));
  *(_DWORD *)(a19 + a6) = HIDWORD(v24) + a2 - ((2 * HIDWORD(v24)) & 0x2B42326);
  BOOL v26 = a14 + 1735446214 > 754669410 || a14 + 1735446214 < a12;
  return (*(uint64_t (**)(void))(v21 + 8 * (v22 ^ (464 * v26))))();
}

uint64_t sub_1B02D25BC(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((a7 ^ 0x4FD) + 1035) ^ a7 ^ 0xE1) * (v7 == a2)) ^ a7)))();
}

uint64_t sub_1B02D25F0()
{
  int v6 = 1759421093 * ((v5 - 504908027 - 2 * ((v5 - 144) & 0xE1E7B795)) ^ 0x529A07C1);
  *(void *)(v5 - 128) = v8;
  *(void *)(v5 - 120) = v4;
  *(_DWORD *)(v5 - 144) = (((v3 + 1193586093) & 0xB8DB4FBA ^ 0x8D0E01D) + v1) ^ v6;
  *(_DWORD *)(v5 - 136) = v3 - v6 - 650;
  uint64_t result = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0xD70)))(v5 - 144);
  _DWORD *v10 = v9;
  *(_DWORD *)(v0 + 32) = 1904944996;
  return result;
}

uint64_t sub_1B02D26D8@<X0>(uint64_t a1@<X8>)
{
  return 0;
}

uint64_t sub_1B02D26F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,unsigned int a34,uint64_t a35,uint64_t a36,int a37,int a38)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v38 + 8 * (((int)a2 + a38 + 84 >= a34) ^ ((int)a3 + 1661))))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_1B02D2730()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v3 ^ 0x32D ^ (v1 - 644)) & (2 * (*(unsigned __int8 *)(v2 + 6) - 1)))
                                 + ((*(unsigned __int8 *)(v2 + 6) - 1) ^ v0) == v0)
                                * ((v3 - 177896030) & 0xA9A79B7 ^ 0x2C1)) ^ v3)))();
}

uint64_t sub_1B02D2794()
{
  unsigned int v5 = ((v2 - 422969343) & 0x1935FFFE ^ 0x666DCF36)
     + (((v4 + v3) >> 4) & 0xDF3B7EE ^ 0xCC2A60E)
     + (((v4 + v3) >> 5) ^ 0xE99C8CF0);
  BOOL v7 = v5 > 0x5567ABC8 && v5 < v1 + 1432857545;
  return (*(uint64_t (**)(void))(v0 + 8 * ((983 * v7) ^ (v2 + 241))))();
}

uint64_t sub_1B02D2820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  unsigned int v14 = (a11 ^ v11) - (((a11 ^ v11) << (((v12 - 67) & 0xBE) - 51)) & 0xA8FAF634) - 729973990;
  BOOL v15 = ((2 * v14) & 0xDFDFBD6E ^ 0x88DAB424) + (v14 ^ 0xBB92A5AD) - 34347012 == 1843644083;
  return (*(uint64_t (**)(void))(v13 + 8 * (v15 | (2 * v15) | v12)))();
}

void sub_1B02D28BC()
{
}

uint64_t sub_1B02D296C(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((10 * (((a3 + 870) | 0x8F) ^ 0x827) - 1681) * (v3 == a2)) ^ a3)))();
}

void sub_1B02D29A8()
{
}

uint64_t sub_1B02D29B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((((a8 & 0xFFFFFFF0) == 593 * (a6 ^ 0x1DC) - 4337395) * ((7 * (a6 ^ 0xEE)) ^ 0xC09)) ^ a6)))();
}

uint64_t sub_1B02D2A04()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (v0 | ((*v2 == ((v0 + 1387013050) & 0xAD53DFBB) - 1970) << 6))))();
}

uint64_t sub_1B02D2A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9, uint64_t a10, uint64_t a11)
{
  int v15 = 3804331 * ((((2 * (v14 - 128)) | 0x661ADA48) - (v14 - 128) + 1290965724) ^ 0xCDD848D2);
  *(void *)(v14 - 120) = a11;
  *(_DWORD *)(v14 - 128) = (v13 + 785) ^ v15;
  *(_DWORD *)(v14 - 124) = v15
                         + ((2 * (v13 ^ 0xCF) - 5243496) & (v11 << 6))
                         + (((v13 ^ 0xCF) + 479) ^ (32 * v11) ^ 0xFFD7FD0E)
                         + 2109471163;
  uint64_t v16 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v13 ^ 0x8A1)))(v14 - 128);
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8 * ((1011 * ((*a9 - 1388059667) > 0x7FFFFFFE)) ^ v13)))(v16);
}

uint64_t sub_1B02D2B1C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                                           + 8
                                           * (((((v5 == a4) ^ (67 * (v6 ^ 0xEA))) & 1) * (v6 - 1270)) ^ v6)))(0);
}

uint64_t sub_1B02D2B58(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4 + 8 * (((v5 == 24) * ((a4 ^ 0x548) + 1277)) ^ a4)))();
}

uint64_t sub_1B02D2B88(uint64_t a1, uint64_t a2, int a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((2252
                                * ((v6 & (2 * (*(unsigned __int8 *)(v7 + 7) - 100)))
                                 + ((a4 - a3) ^ (*(unsigned __int8 *)(v7 + 7) - 100) ^ 0x67D7E321) == v5)) ^ a4)))();
}

uint64_t sub_1B02D2BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unint64_t *a12, int a13, unsigned int a14)
{
  a14 = 1989 - 460628867 * ((2 * (&a12 & 0x65FAE758) - &a12 - 1710942046) ^ 0xD6939ADF);
  a12 = &STACK[0xFBD18CA08459180];
  uint64_t v15 = (*(uint64_t (**)(unint64_t **))(v14 + 19064))(&a12);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((15 * (a13 != 1904944996)) ^ 0x2E7)))(v15);
}

void sub_1B02D2C90(_DWORD *a1, uint64_t a2, int a3)
{
  *((unsigned char *)a1 + v4 + 4) = 106;
  *((unsigned char *)a1 + (v3 + v5) + 4) = 94;
  *a1 = v3 + 5;
  uint64_t v7 = a1 + 1;
  *((unsigned char *)v7 + (v5 + 1 + v3)) = 89;
  *((unsigned char *)v7 + (((a3 ^ (v6 - 199)) - 1169648259) ^ 0x4182C82Eu) + v3) = 68;
  *((unsigned char *)v7 + (v3 - 70623364)) = 82;
  *((unsigned char *)v7 + (v3 - 70623363)) = 21;
  JUMPOUT(0x1B02BA880);
}

uint64_t sub_1B02D2CBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,int a33,unsigned int a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,char a41,__int16 a42,char a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,char a52)
{
  int v59 = 3 * (a8 ^ 0x178);
  int v54 = 628203409 * ((~((v53 - 160) | 0x6E00B697) + ((v53 - 160) & 0x6E00B697)) ^ 0x1377455B);
  *(void *)(v53 - 160) = a28;
  *(_DWORD *)(v53 - 152) = v54 + a8 + 1914;
  *(_DWORD *)(v53 - 148) = a12 - v54;
  uint64_t v55 = (*(uint64_t (**)(uint64_t))(v52 + 8 * (a8 + 2260)))(v53 - 160);
  uint64_t v56 = a52 & 0x3F;
  *(&a43 + (v56 ^ 0x11)) = 80;
  return (*(uint64_t (**)(uint64_t, uint64_t, void, char *))(v52
                                                                     + 8
                                                                     * ((((v56 ^ 0x11) > 0x37)
                                                                       * (v59 + 911)) ^ a8)))(v55, 2412802768, a34, &a41);
}

uint64_t sub_1B02D2DC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9 + 8 * ((118 * (a8 + 1 != v8 + 48)) ^ a4)))();
}

uint64_t sub_1B02D2EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t *, uint64_t))(v68 + 14904))(a1, a2, a3, a4, a5, 3742567335, 2833226809, 2278508382, &a68, a10);
}

uint64_t sub_1B02D2FE8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  uint64_t v38 = *(int8x16_t **)(a1 + 40);
  uint64_t v39 = *(void *)(a1 + 24);
  *(_DWORD *)(v36 - 256) = a8 + 111;
  *(int8x16_t *)(v36 - 112) = veorq_s8(*v38, (int8x16_t)xmmword_1B04DA0B0);
  if (a9) {
    BOOL v40 = v39 == 0x7E7E4A92A461383;
  }
  else {
    BOOL v40 = 1;
  }
  int v41 = v40;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v37 + 8 * (int)((939 * v41) ^ a8)))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36);
}

void sub_1B02D304C()
{
}

uint64_t sub_1B02D319C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  int v25 = a2 - 1705704709;
  if ((a2 - 1705704709) <= 0x40) {
    int v25 = 64;
  }
  return (*(uint64_t (**)(void))(v24
                              + 8
                              * (a22 ^ (8 * (-v23 - v22 + ((a22 - 36312305) & 0x4BEF3FF5u) + 468044048 + v25 < 0xF)))))();
}

uint64_t sub_1B02D3220()
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (v3 | (16
                                     * ((v1 & (2 * (*(unsigned __int8 *)(v2 + 5) - 13)))
                                      + ((v3 - 166) ^ (v0 - 257) ^ (*(unsigned __int8 *)(v2 + 5) - 13)) == v0)))))();
}

uint64_t sub_1B02D325C()
{
  BOOL v4 = v0 + v2 + 403768069 < (v1 ^ 0xC7Fu) - 2185;
  return (*(uint64_t (**)(void))(v3 + 8 * (((4 * v4) | (16 * v4)) ^ v1)))((v1 ^ 0xC7Fu) - 193);
}

uint64_t sub_1B02D32B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, unsigned int a14, int a15, uint64_t a16, int a17, int a18)
{
  unsigned int v21 = 628203409
      * (((&a13 | 0x56A0C086) - &a13 + (&a13 & 0xA95F3F78)) ^ 0xD428CCB5);
  a18 = v21 ^ 0x1E980D91;
  a13 = &STACK[0x53B515D5D6046087];
  a16 = a12;
  a14 = -1487096439 - v21;
  a15 = v20 - v21 - 2024874713;
  uint64_t v22 = (*(uint64_t (**)(unint64_t **))(v19 + 8 * (v20 + 711)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((a17 == v18 + ((v20 - 542) | 0x205) - 1605)
                                              * ((v20 + 845365665) & 0x1AEE ^ 0xCE1)) ^ v20)))(v22);
}

uint64_t sub_1B02D33A4@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(*(void *)(a2 + 96) + 448) = *(unsigned char *)(*(void *)(a1 + 8) + 12);
  return (*(uint64_t (**)(void))(v2 + 16064))(0);
}

uint64_t sub_1B02D3404()
{
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * ((699 * (v1 + 1 == v4 + 4)) ^ v3)))(v0);
}

uint64_t sub_1B02D34D8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((60 * (a8 + 1 == v9 + 64)) ^ a2)))();
}

uint64_t sub_1B02D35A0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W5>, unint64_t a5@<X8>)
{
  uint64_t v9 = a2 + a3 + ((a4 + 1010) ^ 0xC12 ^ (a1 + 1093));
  unint64_t v10 = v9 + a5 + 1;
  uint64_t v11 = ((_BYTE)a2 + (_BYTE)a3 + ((a4 - 14) ^ 0x12 ^ (a1 + 69))) & 0xF;
  uint64_t v12 = v11 - v9;
  unint64_t v13 = v6 + v12;
  ++v11;
  unint64_t v14 = v6 + v11;
  unint64_t v15 = v5 + v12;
  unint64_t v16 = v5 + v11;
  unint64_t v17 = v7 + v12;
  unint64_t v18 = v7 + v11;
  BOOL v20 = v14 > a5 && v13 < v10;
  if (v16 > a5 && v15 < v10) {
    BOOL v20 = 1;
  }
  int v23 = v18 > a5 && v17 < v10 || v20;
  return (*(uint64_t (**)(void))(v8 + 8 * (((v23 ^ 1) * (((a4 - 1017) | 0x511) - 1189)) ^ (a4 + 1010))))();
}

uint64_t sub_1B02D3638()
{
  return sub_1B02D364C();
}

uint64_t sub_1B02D364C@<X0>(int a1@<W4>, int a2@<W6>, uint64_t a3@<X7>, int a4@<W8>, int8x16_t a5@<Q2>, int8x16_t a6@<Q3>)
{
  int8x16_t v11 = *(int8x16_t *)(a3 + (v6 + v10 + v7));
  *(int8x16_t *)(v8 + v7) = vaddq_s8(vsubq_s8(v11, vandq_s8(vaddq_s8(v11, v11), a6)), a5);
  return (*(uint64_t (**)(void))(v9 + 8 * (((v7 == 48) * a2) ^ (a1 + a4 + 853))))();
}

void sub_1B02D3694()
{
}

uint64_t sub_1B02D373C@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W4>, int a4@<W5>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  *(_DWORD *)(a20 + 4 * a4) = a5;
  int v22 = a4 + 1 + a1;
  BOOL v24 = v22 < v20 && v22 > a2;
  return (*(uint64_t (**)(void))(v21 + 8 * ((v24 | (16 * v24)) ^ a3)))();
}

uint64_t sub_1B02D376C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  *(void *)(a3 + (v6 + a6)) = *(void *)(v7 + (v6 + a6));
  return (*(uint64_t (**)(void))(v9 + 8 * (((a2 == a6) * a5) ^ v8)))();
}

uint64_t sub_1B02D3798(int a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  unsigned int v18 = *(_DWORD *)(v17 - 140);
  int v6 = *(uint64_t (**)(void))(v13 + 8 * (v14 - 316));
  uint64_t v7 = *v15;
  unsigned int v8 = a2 + 8 + a1;
  *(unsigned char *)(*v15 + v8 + 1) = (v10 ^ BYTE2(v18)) - (v16 & (v18 >> 15)) - 48;
  *(unsigned char *)(v7 + v8) = (a6 ^ HIBYTE(v18)) - (v16 & (2 * (a6 ^ HIBYTE(v18)))) - 48;
  *(unsigned char *)(v7 + v8 + 2) = (v12 ^ BYTE1(v18)) - (v16 & (2 * (v12 ^ BYTE1(v18)))) - 48;
  *(unsigned char *)(v7 + v8 + 3) = v18 ^ v11;
  return v6();
}

uint64_t sub_1B02D37A8()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((25 * ((v0 ^ v2) < ((v1 - 783176366) & 0x2EAE53FB ^ 0x2B1u))) ^ v1)))();
}

uint64_t sub_1B02D37F0(int a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((199
                                * (((a1 - 124) ^ (((((a1 - 875) | 0x440) - 1108) & (a3 - (v3 & 3u))) > a3 + 3)) & 1)) ^ a1)))();
}

uint64_t sub_1B02D384C()
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (int)(((*(void *)(v0 - 0x7DA9E0EFFB1E362ELL) != 0)
                                     * ((v2 + 764012236) & 0xD27613EF ^ 0x2C0)) ^ v2)))();
}

uint64_t sub_1B02D38B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * (((a7 + ((a6 + v9 - 17041160) | 0x10403E4) - 37) * (v7 == v8)) ^ v9)))();
}

uint64_t sub_1B02D38F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,uint64_t a21)
{
  a19 = (v21 - 989) ^ ((((&a19 | 0x8EADD9B1) - &a19 + (&a19 & 0x71522648)) ^ 0xE359C1B8)
                     * v22);
  a20 = (uint64_t)&a18 + v23 + 4;
  a21 = a16;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v24 + 8 * (v21 + 1001)))(&a19);
  return sub_1B02CC588(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21);
}

void sub_1B02D3964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned __int8 *a10)
{
  int v13 = a10[3] ^ 0xD0;
  int v14 = ((*a10 ^ 0xD0) << 24) | (((v10 - 91) ^ a10[1] ^ 0x53) << 16) | ((a10[2] ^ 0xD0) << 8) | v13;
  *(_DWORD *)(*(void *)(v11 + 8) - 0x571B6222F4470CBALL) = v14 + v12 - 2 * (v14 & (v12 + 2) ^ v13 & 2);
  JUMPOUT(0x1B02D39E0);
}

uint64_t sub_1B02D3A1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6)
{
  return (*(uint64_t (**)(void))(v7 + 8 * ((94 * (v6 + 1 == v8 + 16)) ^ a6)))();
}

uint64_t sub_1B02D3B08(uint64_t a1, void *a2, int a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  unint64_t v35 = (*(_DWORD *)(a25 + 4 * (v33 + 1 + v29)) ^ v26)
      + (a6 >> ((v34 ^ v25) + 92))
      + v27 * (unint64_t)(*(_DWORD *)(*a2 + 4 * (v33 + 1 + v29)) ^ v26);
  *(_DWORD *)(a25 + 4 * (v33 + v29)) = v35 + v26 - (v28 & (2 * v35));
  BOOL v37 = v33 + a8 < v30 && v33 + a8 >= a3;
  return (*(uint64_t (**)(void))(v32 + 8 * ((v37 * v31) | v34)))();
}

uint64_t sub_1B02D3B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return sub_1B02D3BCC((v5 - 633) ^ 0x5AFu, 0x7CF76FF7EFFFEFFFLL, 0x1DFFFDFFELL, 0xA7E9F5EDFDFBD15BLL, (a5 + 1454), 13);
}

uint64_t sub_1B02D3BCC(char a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v18 = 4 * (v16 + v12);
  int v19 = v6 + v14 + (*(_DWORD *)(*v8 + v18) ^ v15);
  *(_DWORD *)(*v10 + v18) = v19 + v15 - ((v19 << a1) & v13);
  int v20 = v7 + v16 + 2088;
  BOOL v22 = v20 <= a5 && v20 >= v9;
  return (*(uint64_t (**)(void))(v17 + 8 * ((v22 * a6) ^ v11)))();
}

uint64_t sub_1B02D3C3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  *uint64_t v18 = v18[623];
  return (*(uint64_t (**)(void))(v21 + 8 * ((2801 * (v19 - 1 == ((5 * a18) ^ 0x7D))) ^ (v20 - 1476))))();
}

uint64_t sub_1B02D3D0C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((3195 * (a1 + 1 == v3 + 48)) ^ v1)))();
}

uint64_t sub_1B02D3DF4()
{
  *(void *)(v7 - 136) = v2;
  *(void *)(v7 - 128) = v3;
  *(void *)(v7 - 112) = v2;
  *(_DWORD *)(v7 - 120) = v6
                        + 460628867 * ((~((v7 - 144) | 0xCAFFCADD) + ((v7 - 144) & 0xCAFFCADD)) ^ 0x7996B75F)
                        + 1278;
  *(void *)(v7 - 144) = v4;
  (*(void (**)(uint64_t))(v5 + 8 * (v6 ^ 0xBF8)))(v7 - 144);
  int v8 = 1759421093 * ((((v7 - 144) | 0x5FD26FEB) + (~(v7 - 144) | 0xA02D9014)) ^ 0xECAFDFBE);
  *(void *)(v7 - 144) = v1;
  *(_DWORD *)(v7 - 132) = v8 + v6 - 48;
  *(_DWORD *)(v7 - 128) = v8 + v0 - 1334526196;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v6 ^ 0xB96)))(v7 - 144);
  return (*(uint64_t (**)(uint64_t))(v5
                                            + 8
                                            * ((15 * (*(_DWORD *)(v7 - 136) != ((v6 + 633306904) ^ (v6 - 33)))) ^ v6)))(v9);
}

uint64_t sub_1B02D3F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int a7)
{
  *(unsigned char *)(*v13 + v11 + ((v9 - 521) ^ a7)) = *(unsigned char *)(*v13 + (v8 + 539534303));
  return (*(uint64_t (**)(void))(v12 + 8 * (((v7 == 13647927) * v10) ^ v9)))();
}

uint64_t sub_1B02D3F68(uint64_t a1, int a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8 * ((((v3 + 960) ^ 0x3CC) * ((a2 + a3 - 399244959) > 7)) ^ (v3 + 1806))))();
}

void sub_1B02D3FBC()
{
}

uint64_t sub_1B02D4074(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (a7 ^ (8 * (((v7 == a4) ^ (((a7 + 67) & 0x3F) - 113)) & 1)))))();
}

uint64_t sub_1B02D40B0()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((471 * (v0 + 1 != v2 + 4)) ^ v1)))();
}

uint64_t sub_1B02D417C(__n128 a1, __n128 a2)
{
  a1.n128_u16[0] = -24416;
  a1.n128_u8[2] = -96;
  a1.n128_u8[3] = -96;
  a1.n128_u8[4] = -96;
  a1.n128_u8[5] = -96;
  a1.n128_u8[6] = -96;
  a1.n128_u8[7] = -96;
  a2.n128_u16[0] = -12080;
  a2.n128_u8[2] = -48;
  a2.n128_u8[3] = -48;
  a2.n128_u8[4] = -48;
  a2.n128_u8[5] = -48;
  a2.n128_u8[6] = -48;
  a2.n128_u8[7] = -48;
  return sub_1B02D41A0(v2 - 7, a1, a2);
}

uint64_t sub_1B02D41A0(uint64_t a1, int a2, int a3, uint64_t a4, int a5, int8x8_t a6, int8x8_t a7)
{
  uint64_t v12 = (v8 + v7 - v9);
  int8x8_t v13 = vrev64_s8(*(int8x8_t *)(a1 + v12));
  *(int8x8_t *)(a4 + v12) = vrev64_s8(vadd_s8(vsub_s8(v13, vand_s8(vadd_s8(v13, v13), a6)), a7));
  return (*(uint64_t (**)(void))(v11 + 8 * (((v9 + a3 - 1266 == a2) * a5) ^ v10)))();
}

uint64_t sub_1B02D4260@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8)
{
  *a8 = 1;
  int v11 = 1755732067 * (((v9 | (v10 - 152)) - ((v10 - 152) & v9)) ^ 0x6E7CEF1F);
  *(_DWORD *)(v10 - 124) = v11;
  *(_DWORD *)(v10 - 152) = a1 + 1077032149 + v11;
  *(_DWORD *)(v10 - 148) = (a1 + 2104630324) ^ v11;
  *(_DWORD *)(v10 - 144) = (a1 + 1077032149) & 0x4C7A7D63 ^ v11;
  *(_DWORD *)(v10 - 140) = (a1 + 1077032149) & 0xE0BAFC00 ^ v11;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v8 + 8 * (a1 + 342)))(v10 - 152);
  return (*(uint64_t (**)(uint64_t))(v8 + 8 * *(int *)(v10 - 128)))(v12);
}

uint64_t sub_1B02D433C@<X0>(uint64_t a1@<X3>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,int a47)
{
  unsigned int v51 = *(_DWORD *)(&a35 + ((v49 + a2) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v49 + a2)) = ((v51 >> (v48 ^ 0x53)) ^ 0x74)
                                            - ((2 * ((v51 >> (v48 ^ 0x53)) ^ 0x74)) & 0xA0)
                                            - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 2)) = (BYTE1(v51) ^ 7) - ((v51 >> 7) & 0xA0) - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 1)) = (BYTE2(v51) ^ 0x4A)
                                                - 2 * ((BYTE2(v51) ^ 0x4A) & 0x55 ^ BYTE2(v51) & 5)
                                                - 48;
  *(unsigned char *)(a1 + (v49 + a2 + 3)) = v51 ^ 0xBE;
  BOOL v52 = v49 - 481057521 < (a47 - 799735484);
  if (v49 - 481057521 < v47 != a47 - 799735484 < v47) {
    BOOL v52 = a47 - 799735484 < v47;
  }
  return (*(uint64_t (**)(void))(v50 + 8 * ((1614 * v52) ^ v48)))();
}

void sub_1B02D4430()
{
}

uint64_t sub_1B02D44EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, int a3@<W4>, int a4@<W6>, int a5@<W8>)
{
  *(unsigned char *)(v8 + (a3 + v7)) = *(unsigned char *)(v6 + (a3 + v7));
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v5
                                                             + 8 * (((a3 - 1 != a5) * ((a4 - 44) ^ v9)) ^ (a4 - 44))))(a1, a2, (a4 - 44) ^ 0x10Cu);
}

void sub_1B02D4528(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  int v26 = 1759421093 * ((v25 - 144) ^ 0xB37DB054);
  *(void *)(v25 - 128) = a10;
  *(void *)(v25 - 120) = v24;
  *(_DWORD *)(v25 - 136) = v22 - v26 - 698;
  *(_DWORD *)(v25 - 144) = (((v22 - 884) ^ 0xF8884363) + a22) ^ v26;
  (*(void (**)(uint64_t))(v23 + 8 * (v22 + 1280)))(v25 - 144);
  JUMPOUT(0x1B02D031CLL);
}

uint64_t sub_1B02D4590(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unint64_t *a12, char a13, unsigned int a14, uint64_t a15, int a16)
{
  char v23 = *(unsigned char *)(v16 + 48) ^ v21;
  unsigned int v24 = 1759421093 * ((((2 * &a11) | 0x139BAC78) - &a11 - 164484668) ^ 0xBAB06668);
  a15 = v20;
  a13 = (v23 + 38) ^ (-91 * ((((2 * &a11) | 0x78) - &a11 - 60) ^ 0x68));
  a12 = &STACK[0x3599686F4D712643];
  a14 = v24 + (v22 ^ 0x336B9DBA) - 73549848 + ((2 * v22) & 0xFFFFF77A ^ 0x9928C40A);
  a16 = v19 - v24 + 154;
  uint64_t v25 = (*(uint64_t (**)(int *))(v18 + 8 * (v19 + 1145)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((669 * (a11 == v17 + ((v19 + 1733751993) & 0x98A90ECD) - 2185)) ^ v19)))(v25);
}

uint64_t sub_1B02D4698@<X0>(uint64_t a1@<X8>)
{
  int v4 = *(_DWORD *)(v3 - 0x6155FFFFEB445CC1);
  int v5 = v4 - 1388059666;
  if (v4 - 1388059666 < 0) {
    int v5 = 1388059666 - v4;
  }
  *(_DWORD *)(v2 - 0x6155FFFFEB445CC1) = v4;
  int v6 = (v5 ^ 0xF57F62FF) + 2145386361 + ((v5 << (((v1 ^ 0x1C) + 20) ^ 0x7B)) & 0xEAFEC5FE) == 1969185400;
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((((((v1 ^ 0x1C) - 46) ^ v6) & 1) == 0) << 6) & 0x7F | (((((v1 ^ 0x21C) - 302) ^ ~v6) & 1) << 7)) ^ v1 ^ 0x21C)))();
}

uint64_t sub_1B02D4744()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((**(void **)(v2 + 8 * (v1 ^ 0x43A)) == 0) * (((v1 + 343) | 0x1A) - 761)) ^ v1)))();
}

uint64_t sub_1B02D4780(int a1)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((a1 - 138930131) & 0x847E3F8 ^ (a1 + 924017325) & 0xC8EC9E8D ^ 0x6CF)
                                     * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1B02D47D8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((v3 + v4 + 282) ^ (32 * (v1 < v0)))))();
}

uint64_t sub_1B02D4804(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  a17 = v23;
  a18 = v24;
  a19 = (v19 + 560) ^ (1225351577
                     * (((&a15 | 0x3538A075) - &a15 + (&a15 & 0xCAC75F88)) ^ 0x16A27863));
  a16 = a11;
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 ^ 0xC12)))(&a15);
  a15 = (v19 - 994) ^ (((-1380882350 - (&a15 | 0xADB16852) + (&a15 | 0x524E97AD)) ^ 0x3FBA8FA4)
                     * v21);
  a16 = v20;
  a17 = a11;
  (*(void (**)(unsigned int *))(v22 + 8 * (v19 + 996)))(&a15);
  a15 = (v19 - 469) ^ (1755732067
                     * ((((2 * &a15) | 0x7F475C2) - &a15 + 2080752927) ^ 0x5D3C873A));
  a16 = a11;
  uint64_t v25 = (*(uint64_t (**)(unsigned int *))(v22 + 8 * (v19 ^ 0xC41)))(&a15);
  return (*(uint64_t (**)(uint64_t))(v22 + 8 * (((a17 == 1904944996) * (v19 - 1128)) ^ v19)))(v25);
}

uint64_t sub_1B02D4960@<X0>(int a1@<W3>, int a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20)
{
  *(&a20 + (a3 + v20)) = *(unsigned char *)(v21 + v24 - 1133395)
                                     - ((2 * *(unsigned char *)(v21 + v24 - 1133395)) & 0xA0)
                                     - 48;
  return (*(uint64_t (**)(void))(v23 + 8 * ((112 * ((a1 + a3 + 1) < 0x40)) ^ (a2 + v22 + 1404))))();
}

uint64_t sub_1B02D49D4@<X0>(int a1@<W5>, int a2@<W6>, int a3@<W8>)
{
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((((v4 == v3) ^ (a3 + 31)) & 1) * (a2 + (a3 ^ (a1 - 210)) - 43)) ^ a3)))();
}

uint64_t sub_1B02D4A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(void))(v12
                              + 8 * ((248 * (((v13 + 18) ^ ((a11 ^ v11) > v13 - 1109)) & 1)) ^ v13)))();
}

uint64_t sub_1B02D4A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((v5 ^ 0x5244FF07 ^ (((v6 + 1674389624) & 0x9C32D05F) - a5 - 63)) < 8) ^ v6)))();
}

uint64_t sub_1B02D4AE4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  *(void *)(v9 - 7 + (v8 + v7 - 1877991096 - a2)) = *(void *)(v5
                                                                              - 7
                                                                              + (v8 + v7 - 1877991096 - a2));
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * (((((((a5 - 100) | 0x31) ^ 0xFFFFFDCB) & v6) - a2 != 8) * (((a5 - 100) | 0x31) - 478)) ^ ((a5 - 100) | 0x31))))();
}

void sub_1B02D4B54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  int v25 = 108757529 * ((v24 - 144) ^ 0xE09C622B);
  *(_DWORD *)(v24 - 144) = v25 ^ 0x2CAB31D7;
  *(void *)(v24 - 136) = a19;
  *(_DWORD *)(v24 - 128) = (v23 + 1215) ^ v25;
  (*(void (**)(uint64_t))(v20 + 8 * (v23 + 1952)))(v24 - 144);
  *(_DWORD *)(v24 - 120) = v23
                         + 1225351577 * (((v24 - 144) & 0x5BC398BF | ~((v24 - 144) | 0x5BC398BF)) ^ 0x87A6BF56)
                         + 1147;
  *(void *)(v24 - 136) = v19;
  *(void *)(v24 - 128) = v22;
  *(void *)(v24 - 144) = v19;
  *(void *)(v24 - 112) = v21;
  *(void *)(v24 - 104) = a19;
  (*(void (**)(uint64_t))(v20 + 8 * (v23 ^ 0x8E1)))(v24 - 144);
  JUMPOUT(0x1B02CD310);
}

uint64_t sub_1B02D4C30()
{
  BOOL v2 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 + 1972)))(200, 1616997413) == 0;
  return (*(uint64_t (**)(void))(v0 + 8 * (int)((v2 * (((v1 - 214) | 0x441) + ((v1 + 875) ^ 0xFFFFF8D4))) ^ v1)))();
}

void sub_1B02D4C8C()
{
}

uint64_t sub_1B02D4E40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(_DWORD *)(a11 - 0x296CA2447D59DC44) = -983710806 - v13;
  int v18 = 108757529
      * ((((v17 - 136) ^ 0xE5FA149A | 0xBBDC5D56)
        - ((v17 - 136) ^ 0xE5FA149A)
        + (((v17 - 136) ^ 0xE5FA149A) & 0x4423A2A8)) ^ 0xBEBA2BE7);
  *(_DWORD *)(v17 - 120) = (v16 + 416) ^ v18;
  *(void *)(v17 - 128) = a12;
  *(_DWORD *)(v17 - 136) = v18 ^ 0x2CAB31D7;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1153)))(v17 - 136);
  int v19 = 108757529 * ((((v17 - 136) | 0x56446835) - (v17 - 136) + ((v17 - 136) & 0xA9BB97C8)) ^ 0xB6D80A1E);
  *(void *)(v17 - 128) = a12;
  *(_DWORD *)(v17 - 120) = (((v14 << 6) & 0x63FD7140) + 1332965352 + ((v14 << (v16 + 66)) ^ (v16 - 1308707846))) ^ v19;
  *(_DWORD *)(v17 - 136) = v19 + v16 + 668;
  (*(void (**)(uint64_t))(v15 + 8 * (v16 ^ 0xC1C)))(v17 - 136);
  *(_DWORD *)(v17 - 120) = (v16 + 183) ^ (535753261
                                        * ((((v17 - 136) | 0x35ECD69F) - (v17 - 136) + ((v17 - 136) & 0xCA132960)) ^ 0x3F18D8B0));
  *(void *)(v17 - 136) = a13;
  *(void *)(v17 - 128) = &STACK[0x6155FFFFEB445CF5];
  (*(void (**)(uint64_t))(v15 + 8 * (v16 + 1176)))(v17 - 136);
  *(_DWORD *)(v17 - 136) = v16
                         + 108757529 * ((((v17 - 136) | 0xEF1AAFD9) - ((v17 - 136) & 0xEF1AAFD9)) ^ 0xF86CDF2)
                         + 321;
  *(void *)(v17 - 128) = a13;
  *(void *)(v17 - 120) = a12;
  uint64_t v20 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v16 ^ 0xC29)))(v17 - 136);
  return (*(uint64_t (**)(uint64_t))(v15 + 8 * ((15 * (*(_DWORD *)(v17 - 132) <= 0xAB00D2u)) ^ v16)))(v20);
}

uint64_t sub_1B02D5084(uint64_t a1, uint64_t a2, int a3)
{
  BOOL v5 = v3 >= ((a3 - 1643) ^ 0x1F4u) - 259;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v5 | (8 * v5)) ^ (a3 - 1643))))();
}

uint64_t sub_1B02D50B4@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  return sub_1B02AABD8(a1, 0, (a3 - 1273026784) & 0x4BE0DC75, *(_DWORD *)(*v5 + 4 * (int)(((a3 - 1273026784) & 0x4BE0DC75 ^ 0xC3E2A3D9) + a2)), v4, a4);
}

uint64_t sub_1B02D50F4@<X0>(uint64_t a1@<X8>)
{
  BOOL v3 = v1 == ((((v2 + 1542211570) & 0xA413B2BB) - 372) ^ (7 * (v2 ^ 0x7D8)));
  return (*(uint64_t (**)(void))(a1 + 8 * (((2 * v3) | (8 * v3)) ^ v2)))();
}

uint64_t sub_1B02D5144()
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v2 ^ 0x8C2)))((((v2 + 697001505) & 0xD6749FEE ^ (v1 - 594)) + ((v2 + 588) | 0x4E)) ^ v0, 1644418179) == 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((49 * v4) ^ v2)))();
}

uint64_t sub_1B02D51BC@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,int a31,int a32)
{
  uint64_t v36 = (unsigned __int8 *)(a1 + a2 + v34);
  LODWORD(v36) = *v36 ^ 0xD0 | (((((a32 + 64) & 0x77) - 118) ^ v36[1]) << 8) | ((v36[2] ^ 0xD0) << 16) | ((v36[3] ^ 0xD0) << 24);
  *(_DWORD *)(v35 + a2 + v34) = v36 + v32 - ((2 * v36) & 0xE3164EC8);
  return (*(uint64_t (**)(void))(v33 + 8 * ((1225 * ((unint64_t)(a2 + 4 + v34) < 0x40)) ^ a32)))();
}

uint64_t sub_1B02D5260(uint64_t a1, uint64_t a2)
{
  *(_DWORD *)(a1 + 16) = (**(unsigned __int8 **)(a2 + 8) ^ 0xD39E7C71)
                       + 2113795072
                       + ((2 * **(unsigned __int8 **)(a2 + 8)) & 0xE2);
  return 0;
}

void sub_1B02D5298()
{
}

uint64_t sub_1B02D5490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(void))(v20 + 8 * (((((v19 + 670) | 0x15) ^ 0x3DB) * ((v21 & 0xFFFFFFFC) - a19 != -4)) ^ v19)))();
}

uint64_t sub_1B02D54CC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v5 + 8 * (((((a4 ^ 0x617) + 620) ^ 0x4E1) * ((v4 & 0x18) == 0)) ^ a4)))();
}

uint64_t sub_1B02D5500()
{
  BOOL v4 = v2 - 14133483 < (int)(v1 + 124428609);
  if (v2 - 14133483 < -2023055039 != v1 > ((v0 + 1131484753) & 0xBC8EE7F3 ^ 0x78955D4D)) {
    BOOL v4 = v1 > ((v0 + 1131484753) & 0xBC8EE7F3 ^ 0x78955D4D);
  }
  return (*(uint64_t (**)(void))(v3 + 8 * ((3411 * v4) ^ v0)))();
}

void sub_1B02D5580()
{
}

uint64_t sub_1B02D558C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,int a25,uint64_t a26,int a27)
{
  LODWORD(STACK[0x520]) ^= a27;
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * ((1252
                                * (v28 - 1972111132 + (((a25 & 0x6D1AA2BF) + 1978477924) & 0xFF9ED71F) == 1674825488)) ^ a25 & 0x6D1AA2BF)))();
}

uint64_t sub_1B02D55C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6
                                                              + 8
                                                              * (((v4
                                                                 - v5
                                                                 - (unint64_t)(a4 - 392)
                                                                 + 1142 > 0x1F)
                                                                * ((167 * (a4 ^ 0x607)) ^ 0x35D)) ^ a4)))(a1, a2, a1);
}

uint64_t sub_1B02D560C(_DWORD *a1)
{
  *((unsigned char *)a1 + ((v3 + v2) ^ 0x182F9B9u) + v1 + 4) = 21;
  *a1 = v1;
  return 0;
}

void sub_1B02D5638(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v22 = 108757529 * (((v21 - 144) & 0xBD3D6B8B | ~((v21 - 144) | 0xBD3D6B8B)) ^ 0xA25EF65F);
  *(void *)(v21 - 128) = a17;
  *(void *)(v21 - 144) = v20;
  *(_DWORD *)(v21 - 136) = (v17 - 523706608 + v19 - 664) ^ v22;
  *(_DWORD *)(v21 - 132) = v19 - v22 - 99;
  (*(void (**)(uint64_t))(v18 + 8 * (v19 + 1365)))(v21 - 144);
  JUMPOUT(0x1B02D2684);
}

uint64_t sub_1B02D56B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v18 = ((((v17 - 128) | 0x4D4EACC4) - (v17 - 128) + ((v17 - 128) & 0xB2B15338)) ^ 0xADD2CEEF) * v16;
  *(void *)(v17 - 120) = v15;
  *(_DWORD *)(v17 - 128) = v18 + v12 + 69;
  *(_DWORD *)(v17 - 112) = (v12 - 1266 + v14 - 1188198167) ^ v18;
  (*(void (**)(uint64_t))(v13 + 8 * (v12 ^ 0xFC5)))(v17 - 128);
  *(_DWORD *)(v17 - 128) = v12
                         - 1266
                         + ((~((v17 - 128) | 0x2AA557C4) + ((v17 - 128) & 0x2AA557C4)) ^ 0x35C6CA10) * v16
                         + 988;
  *(void *)(v17 - 120) = a12;
  *(void *)(v17 - 112) = a11;
  uint64_t v19 = (*(uint64_t (**)(uint64_t))(v13 + 8 * ((v12 - 1266) ^ 0xAC2)))(v17 - 128);
  return (*(uint64_t (**)(uint64_t))(v13
                                            + 8
                                            * (((*(_DWORD *)(v17 - 124) > 0xAB00D2u) * ((v12 - 1083) ^ 0x4EB)) ^ (v12 - 1266))))(v19);
}

uint64_t sub_1B02D57E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,int a30,int a31,uint64_t a32,uint64_t a33,unint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39,int a40,uint64_t a41,int a42,int a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,int a52,uint64_t a53,unsigned int a54,uint64_t a55,int a56,unsigned __int8 a57)
{
  int v57 = a57 ^ 0xAE;
  if (v57 == 2)
  {
    BOOL v62 = (unint64_t)&a43 < a34 && v64 < (unint64_t)&a52;
    return (*(uint64_t (**)(void, uint64_t))(v63 + 8 * (((a40 - 1115) * v62) ^ (a38 + 961))))(a54, 71960430);
  }
  else
  {
    if (v57 != 1) {
      JUMPOUT(0x1B02A9EA8);
    }
    BOOL v59 = (unint64_t)&a43 < a34 && v64 < (unint64_t)&a52;
    return (*(uint64_t (**)(void))(v63 + 8 * (((((a38 ^ v59) & 1) == 0) * a31) ^ (a38 + 2071))))(a54);
  }
}

void sub_1B02D57EC(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  *(_DWORD *)(a1 + a2) = 1388059666;
  JUMPOUT(0x1B02D21E4);
}

uint64_t sub_1B02D57FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v6
                                                                                        + 8
                                                                                        * (((v5 - 430)
                                                                                          * (*(_DWORD *)(v7 - 128) == *(_DWORD *)(v7 - 132))) ^ v5)))(a1, a2, a3, a4, a5, (v5 + 564));
}

uint64_t sub_1B02D5828(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  int v25 = v17 - 1438;
  int v26 = ((2 * ((v24 - 144) & 0x2DFA6058) - (v24 - 144) + 1376100259) ^ 0x58F1918C) * v21;
  *(_DWORD *)(v24 - 144) = v26 + v17 - 1732;
  *(_DWORD *)(v24 - 120) = v18 - v26 + 230056921 + v17 - 1438;
  *(void *)(v24 - 136) = v22;
  *(void *)(v24 - 128) = v23;
  (*(void (**)(uint64_t))(v19 + 8 * (v17 + 257)))(v24 - 144);
  *(_DWORD *)(v24 - 136) = v25 - 235795823 * ((v24 - 1535003166 - 2 * ((v24 - 144) & 0xA481B672)) ^ 0x302CFF2B) - 357;
  *(void *)(v24 - 128) = a14;
  *(void *)(v24 - 144) = v20;
  (*(void (**)(uint64_t))(v19 + 8 * (v25 + 1661)))(v24 - 144);
  *(void *)(v24 - 136) = a15;
  *(void *)(v24 - 128) = v22;
  *(void *)(v24 - 112) = a13;
  *(void *)(v24 - 104) = v20;
  *(void *)(v24 - 120) = a14;
  *(_DWORD *)(v24 - 144) = v25
                         - 1374699841 * (((v24 - 144) & 0xF661D896 | ~((v24 - 144) | 0xF661D896)) ^ 0x646A3F60)
                         + 699;
  uint64_t v27 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v25 + 1650)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v19
                                            + 8
                                            * (((((a17 == 0) ^ (v25 + 110)) & 1) * (v25 - 586)) ^ v25)))(v27);
}

void sub_1B02D58A0()
{
}

void sub_1B02D58BC()
{
  _DWORD *v0 = -1904968623;
}

uint64_t sub_1B02D58D0()
{
  BOOL v4 = v0 != v1 + (v3 ^ 0x480) - 1436;
  return (*(uint64_t (**)(void))(v2 + 8 * ((8 * v4) | (32 * v4) | v3 ^ 0x319)))();
}

void sub_1B02D5920()
{
}

uint64_t sub_1B02D59A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  BOOL v17 = v14 + 1082664813 < (a14 + 2112634249);
  if (a14 + 2112634249 < ((v15 - 157) | 0x41u) - 1643583299 != (v14 + 1082664813) < 0x9E08E90A) {
    BOOL v17 = a14 + 2112634249 < ((v15 - 157) | 0x41u) - 1643583299;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8 * ((!v17 | (16 * !v17)) ^ v15)))(2745930545, 2726248035);
}

void sub_1B02D5A28()
{
}

uint64_t sub_1B02D5A30()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((100
                                * ((((v1 ^ 0x558) - 1938226931) ^ (v2 - (v3 & 0x572FF200) + 1805121792))
                                 + 1509373919
                                 + ((2 * (v2 - (v3 & 0x572FF200) + 1805121792)) & 0xCFDDF9F6 ^ 0xC70DF000) == ((v1 - 201) | 0x802) + 1105603563)) ^ v1)))();
}

uint64_t sub_1B02D5AC4()
{
  _DWORD *v3 = v3[623];
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((((((v0 ^ 0x1CC) - 1616) | 0xF) ^ 0xFFFFFFB0) + v2 != (((v0 ^ 0x1CC) - 6375089) & 0x75ED473B)
                                                                                     - 718111615) ^ v0 ^ 0x1CC)))();
}

uint64_t sub_1B02D5B2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, int a6)
{
  *(void *)(a5 + v8 - 8 + (v7 ^ (v6 + 145))) = *(void *)(a2 + v8 - 8 + (v7 ^ (v6 + 145)));
  return (*(uint64_t (**)(void))(v10 + 8 * (((v9 == -8) * a3) ^ a6)))();
}

uint64_t sub_1B02D5B38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a21) = 987723168;
  unsigned int v34 = 628203409
      * (((&a22 ^ 0x19AA2783 | 0x7366A4B0) - ((&a22 ^ 0x19AA2783) & 0x7366A4B0)) ^ 0xE8448F00);
  a27 = a19;
  a28 = a13;
  a25 = a15;
  LODWORD(a18) = a21;
  LODWORD(a24) = v29 - v34 + 266;
  HIDWORD(a24) = 186887302 - v34 + a21;
  a22 = a14;
  a23 = a12;
  uint64_t v35 = (*(uint64_t (**)(uint64_t *))(v30 + 8 * (v29 ^ 0x980)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((1219 * (a26 == v28 + 1904943903)) ^ v29)))(v35, v32, 44587773, 1400183661, v33, HIDWORD(a16), a16, v31, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

uint64_t sub_1B02D5C3C(uint64_t a1)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3
                                                     + 8
                                                     * (((((v1 == 63) ^ (v2 - 45)) & 1) * (v2 - 10)) ^ (v2 + 1385))))(a1, 208);
}

void sub_1B02D5C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,int a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33)
{
  *(_DWORD *)(a33 + 4 * v33) ^= a26;
  JUMPOUT(0x1B02D5CACLL);
}

void sub_1B02D5D10()
{
}

uint64_t sub_1B02D5D58@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((a1 == ((v3 + v2 - 97) ^ (v4 + 99))) * ((v3 + v2 + 769) ^ 0x7A)) ^ (v3 + v2 - 97))))();
}

uint64_t sub_1B02D5D94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,int a29,int a30,int a31,int a32,int a33)
{
  *uint64_t v36 = v36[623];
  uint64_t v38 = 1755732067
      * ((~((v37 - 152) | 0x2D8C51AC12296225) + ((v37 - 152) & 0x2D8C51AC12296225)) ^ 0xFD8096C33102001);
  *(_DWORD *)(v37 - 144) = a31 ^ v38;
  *(_DWORD *)(v37 - 140) = v38 ^ a29;
  STACK[0x598] = v38 ^ 3;
  *(_DWORD *)(v37 - 152) = a33 + v38;
  *(_DWORD *)(v37 - 148) = (v33 + 132521259) ^ v38;
  STACK[0x588] = (v34 + 1) + v38;
  *(_DWORD *)(v37 - 124) = v38;
  uint64_t v39 = (*(uint64_t (**)(uint64_t))(v35 + 8 * (v33 ^ 0x758C0E73)))(v37 - 152);
  return (*(uint64_t (**)(uint64_t))(v35 + 8 * *(int *)(v37 - 128)))(v39);
}

uint64_t sub_1B02D5E6C(uint64_t a1, uint64_t a2, int a3, int a4)
{
  BOOL v7 = v4 > 0x5B6A2AE6;
  if (v7 == a3 - 961583840 < (int)(a4 ^ 0xA495D487)) {
    BOOL v7 = a3 - 961583840 < v6;
  }
  return (*(uint64_t (**)(void))(v5 + 8 * ((60 * v7) ^ a4)))();
}

uint64_t sub_1B02D5EDC()
{
  uint64_t v6 = *(void *)(v9 + 8);
  int v7 = 108757529 * (((v5 - 144) & 0x3203ED9B | ~((v5 - 144) | 0x3203ED9B)) ^ 0x2D60704F);
  *(_DWORD *)(v5 - 128) = (v0 + 235) ^ v7;
  *(_DWORD *)(v5 - 144) = v7 ^ 0x2CAB31D7;
  *(void *)(v5 - 136) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC3C)))(v5 - 144);
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v1;
  *(void *)(v5 - 128) = v2;
  *(_DWORD *)(v5 - 120) = v0
                        + 1225351577
                        * ((366398014 - ((v5 - 144) | 0x15D6CA3E) + ((v5 - 144) | 0xEA2935C1)) ^ 0xC9B3EDD7)
                        + 167;
  *(void *)(v5 - 112) = v3;
  *(void *)(v5 - 104) = v10;
  (*(void (**)(uint64_t))(v4 + 8 * (v0 ^ 0xC3D)))(v5 - 144);
  *(_DWORD *)(v5 - 128) = (v0 + 2) ^ (535753261
                                    * ((((v5 - 144) | 0xD392A014) - (v5 - 144) + ((v5 - 144) & 0x2C6D5FE8)) ^ 0xD966AE3B));
  *(void *)(v5 - 144) = v1;
  *(void *)(v5 - 136) = v6;
  return (*(uint64_t (**)(uint64_t))(v4 + 8 * (v0 + 995)))(v5 - 144);
}

uint64_t sub_1B02D605C()
{
  *(void *)(v6 - 128) = v5;
  *(void *)(v6 - 120) = v4;
  *(_DWORD *)(v6 - 136) = v3 + ((v6 - 136) ^ 0xE09C622B) * v0 + 1064;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v3 ^ 0x936)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8 * ((2329 * (*(_DWORD *)(v6 - 132) > v1 + (v3 ^ 0x2E0u) - 828)) ^ v3)))(v7);
}

uint64_t sub_1B02D60D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1B02D60E4(a1, a2, a3, v3 & 0xFFFFFFE0, 0, 2183);
}

uint64_t sub_1B02D60E4(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  uint64_t v12 = (v10 + v9 - a5);
  long long v13 = *(_OWORD *)(v8 + v12 - 15);
  long long v14 = *(_OWORD *)(v8 + v12 - 31);
  uint64_t v15 = a1 + v12;
  *(_OWORD *)(v15 - 15) = v13;
  *(_OWORD *)(v15 - 31) = v14;
  return (*(uint64_t (**)(void))(v11 + 8 * ((28 * ((a3 ^ (v6 + 2981) ^ a6) + a5 == a4)) ^ (v7 + a3 + 963))))();
}

uint64_t sub_1B02D613C@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  _DWORD *v2 = a2;
  *(_DWORD *)(result + 16) = -1904968623;
  return result;
}

void sub_1B02D6150()
{
}

void sub_1B02D615C(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(_DWORD *)(v8 - 140) = a1 ^ *(_DWORD *)(a8 + 24) ^ 0x2D7C7224;
  JUMPOUT(0x1B02D1D3CLL);
}

uint64_t sub_1B02D6278@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((27 * (a2 + 1 == v3 + 40)) ^ a1)))();
}

uint64_t sub_1B02D6348()
{
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((((v1 + 444822562) & 0xE57C8DF2 ^ 0x383) * ((v0 & 0x18) == 0)) ^ v1)))();
}

uint64_t sub_1B02D638C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                                         + 8
                                                                                         * (((((v6 - 1243) ^ 0x325)
                                                                                            + v6
                                                                                            - 2090)
                                                                                           * (v4 == v5)) ^ v6)))(3414509283, a2, a3, a4, 849, -1267802054);
}

uint64_t sub_1B02D63E0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1
                              + 8
                              * (((*(_DWORD *)(v2 - 0x7DA9E0EFFB1E3616) == ((v1 + 59) ^ 0x718B2509)) * (v1 ^ 0x525)) ^ (v1 - 201))))();
}

uint64_t sub_1B02D6438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void))(v8
                                                                                                + 8
                                                                                                * ((31
                                                                                                  * (((v7 - 80) ^ ((v6 & 8) == v7 - 1709)) & 1)) ^ v7)))(a1, a2, a3, a4, a5, (v7 - 1275), (v5 - a5));
}

uint64_t sub_1B02D64A4(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((((v5 & (2 * (*(unsigned __int8 *)(v6 + 1) - 146)))
                                 + ((*(unsigned __int8 *)(v6 + 1) - 146) ^ v4) == v4)
                                * (a3 - 1169645702)) ^ 0x1D9)))();
}

uint64_t sub_1B02D64FC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned int a12)
{
  a8 = (v12 - 1328) ^ (((2 * (&a8 & 0x4295DD50) - &a8 - 1117117778) ^ 0xD09E3AA7) * v13);
  a9 = (uint64_t)&a5 + a1 + 4;
  a10 = a4;
  uint64_t v15 = (*(uint64_t (**)(unsigned int *))(v14 + 8 * (v12 ^ 0xFFAu)))(&a8);
  return sub_1B02D4804(v15, v16, v17, v18, v19, v20, v21, v22, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12);
}

uint64_t sub_1B02D656C@<X0>(uint64_t a1@<X8>)
{
  *(unsigned char *)(a1 + (v6 + v4)) = *(unsigned char *)(v3 + (v6 + v4));
  return (*(uint64_t (**)(void))(v1 + 8 * (((v6 - 1 == v2) * v5) ^ v7)))(0);
}

uint64_t sub_1B02D659C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((56 * ((((a1 - 502) | 1) ^ 0x30E) == 0x355)) ^ ((a1 - 502) | 1))))();
}

uint64_t sub_1B02D65E4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4
                                                              + 8
                                                              * ((119 * (v3 & ~((v5 + 1972112812) ^ (v2 < 0x2B0FBB8B)))) ^ (v5 + 1972112967))))(a1, a2, 2322856164);
}

uint64_t sub_1B02D6638()
{
  unsigned int v4 = v1 + 93073787 + 521 * (v3 ^ 0x540);
  BOOL v5 = v4 < 0x73D48705;
  BOOL v6 = ((v3 - 814) ^ 0x73D48510) + v2 < v4;
  if (v2 > 0x8C2B78FA != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((203 * !v6) ^ v3)))();
}

void sub_1B02D66C0()
{
}

uint64_t sub_1B02D66D4@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  *(unsigned char *)(a1 + (v7 + v6)) = *(unsigned char *)(v4 + (v7 + v6));
  return (*(uint64_t (**)(void))(v8
                              + 8
                              * ((221 * (((v7 - 1 == a3) ^ (-23 * (a2 ^ (v3 - 44)))) & 1)) ^ (v5 + a2 + 195))))();
}

uint64_t sub_1B02D6724(uint64_t a1, unsigned int a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  *(void *)(a5 + a2) = *(void *)(v7 + a2);
  return (*(uint64_t (**)(uint64_t, void, uint64_t, void))(v8 + 8 * (((a4 == 0) * v6) ^ a6)))(a1, a2 - 8, a3, (a4 + 8));
}

void sub_1B02D6754()
{
  *(_DWORD *)(v1 + 20) = v0;
}

uint64_t sub_1B02D6798@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, int a6@<W8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v6
                                                                                + 8
                                                                                * (((((v7 == 0) ^ (a6 - 28) ^ 0x51) & 1)
                                                                                  * ((713 * ((a6 - 284) ^ 0x409)) ^ 0x86B)) ^ (a6 + 693))))(a1, a2, a3, a4, a5);
}

void sub_1B02D67E8()
{
}

void sub_1B02D67F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  *int v33 = 0x80000000;
  (*(void (**)(uint64_t))(v32 + 8 * (a32 ^ 0x9B8u)))(a27);
  JUMPOUT(0x1B02D682CLL);
}

uint64_t sub_1B02D6950()
{
  BOOL v4 = v0 - 703526778 < (int)(v2 + 1266886417);
  if (v2 > 0x347CD8EE != v0 - 703526778 < -880597231) {
    BOOL v4 = v2 > 0x347CD8EE;
  }
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 | (8 * (((v1 ^ v4) & 1) == 0)))))();
}

uint64_t sub_1B02D69DC()
{
  int v6 = (((~(v5 - 120) & 0x21D28976) - (~(v5 - 120) | 0x21D28977)) ^ 0xC14EEB5C) * v3;
  *(_DWORD *)(v5 - 104) = (((71 * (v0 ^ 0x63B)) ^ 0xF6E7CABB) + v4) ^ v6;
  *(void *)(v5 - 112) = v2;
  *(_DWORD *)(v5 - 120) = v6 + v0 + 290;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xEE2)))(v5 - 120);
  return sub_1B02D6A60(v7);
}

uint64_t sub_1B02D6A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v27 - 120) = v23 + ((((v27 - 120) | 0x8BBB1853) - ((v27 - 120) & 0x8BBB1853)) ^ 0x6B277A78) * v26 + 1114;
  *(void *)(v27 - 112) = a23;
  *(void *)(v27 - 104) = a21;
  uint64_t v28 = (*(uint64_t (**)(uint64_t))(v24 + 8 * (v23 ^ 0x940)))(v27 - 120);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((*(_DWORD *)(v27 - 116) > v25 + (v23 ^ 0x27Bu) + 4) * (v23 - 330)) ^ v23)))(v28);
}

uint64_t sub_1B02D6AFC()
{
  *(_DWORD *)(v6 - 128) = v0 + (((~(v6 - 128) & 0x72C950EC) - (~(v6 - 128) | 0x72C950ED)) ^ 0x925532C6) * v5 + 805;
  *(void *)(v6 - 120) = v4;
  *(void *)(v6 - 112) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 ^ 0xA35)))(v6 - 128);
  return (*(uint64_t (**)(uint64_t))(v1
                                            + 8
                                            * (((*(_DWORD *)(v6 - 124) > ((v0 - 3) ^ (v3 + 1071)))
                                              * ((202 * (v0 ^ 0x2D6)) ^ 0x5B)) ^ v0)))(v7);
}

uint64_t sub_1B02D6BA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v5 == a5 + ((v6 + 2126) ^ 0x5244F7A8) + 54) * (((v6 + 2126) ^ 0xFF1) - 1871)) ^ (v6 + 2126))))();
}

uint64_t sub_1B02D6CFC(uint64_t a1, unsigned int a2)
{
  return (*(uint64_t (**)(void))(v4 + 8 * ((30 * (v3 + v2 + (((a2 ^ 0x2C2) + 1451025567) ^ 0xC66CCA23) > 7)) ^ a2)))();
}

uint64_t sub_1B02D6D5C(uint64_t result)
{
  unint64_t v1 = 1224239923 * (((result | 0xAF58CA7FD3C89FD7) - (result & 0xAF58CA7FD3C89FD7)) ^ 0x87027F16217B6200);
  unint64_t v2 = *(void *)(result + 16) ^ v1;
  unint64_t v3 = *(void *)result - v1;
  BOOL v4 = v3 > v2;
  BOOL v5 = v3 == v2;
  int v6 = v4;
  if ((*(_DWORD *)(result + 24) + v1)) {
    int v7 = v6;
  }
  else {
    int v7 = v5;
  }
  BOOL v8 = v7 == 0;
  uint64_t v9 = 28;
  if (!v8) {
    uint64_t v9 = 40;
  }
  *(_DWORD *)(result + 8) = *(_DWORD *)(result + 32) ^ v1 ^ (*(_DWORD *)(result + v9) + v1);
  return result;
}

void sub_1B02D6DF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,int a60,int a61,int a62,int a63)
{
  STACK[0x358] = *(void *)(v73 + 8 * (a5 - 845));
  a72 = ((unint64_t)&STACK[0x3F0] ^ 0xEFF7FF9D4FF2F6DFLL)
      + a2
      + (((void)&STACK[0x3F0] << ((a5 + 106) ^ 0xEEu)) & 0xDFEFFF3A9FE5EDB0);
  a73 = (char *)&a9 - 0x9872DDC1BE06316;
  a71 = a72 + 1569;
  a64 = a5 - 424;
  a60 = 148 * (a5 ^ 0x38D);
  a62 = a60 ^ 0x602;
  a70 = a5 ^ 0x789;
  a66 = (2 * (a5 ^ 0x789)) ^ 0xE08;
  LODWORD(STACK[0x250]) = a5 + 91177466;
  JUMPOUT(0x1B02D6EBCLL);
}

uint64_t sub_1B02D6EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  (*(void (**)(void, unint64_t *, uint64_t))(v65 + 8 * (int)(v66 + 1429)))(*a64, &STACK[0x518], 2048);
  int v67 = (*(uint64_t (**)(void, unint64_t *, void, uint64_t))(v65 + 8 * (v66 ^ 0xAA4)))(*a64, &STACK[0x4F0], (LODWORD(STACK[0x3FC]) + v64), 1);
  return (*(uint64_t (**)(void))(v65 + 8 * ((1661 * (v67 == 53 * (v66 ^ 0x3B5) - 901)) ^ v66)))();
}

void sub_1B02D6F94()
{
}

void sub_1B02D6F9C()
{
}

uint64_t sub_1B02D6FA4(uint64_t a1, uint64_t a2, int a3, int a4, int a5, int a6)
{
  unsigned int v9 = a3 - 32;
  uint64_t v10 = v7 + v9;
  long long v11 = *(_OWORD *)(v10 - 31);
  uint64_t v12 = v8 + v9;
  *(_OWORD *)(v12 - 15) = *(_OWORD *)(v10 - 15);
  *(_OWORD *)(v12 - 31) = v11;
  return (*(uint64_t (**)(void))(v6 + 8 * (((a5 == 32) * a6) ^ (a4 + 543))))();
}

void sub_1B02D6FB0(uint64_t a1)
{
  BOOL v4 = *(void *)(a1 + 40) != 0x7DA9E0EFFB1E362ELL
    && *(void *)(a1 + 16) != 0x7A71FA3516B26441
    && *(void *)a1 != 0x5B62222C33553D11;
  int v1 = *(_DWORD *)(a1 + 8) + 535753261 * ((((2 * a1) | 0xD63BF148) - a1 - 1797126308) ^ 0x61E9F68B);
  __asm { BRAA            X9, X17 }
}

uint64_t sub_1B02D70CC(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((3748 * (a8 + 1 == v9 + 32)) ^ a1)))();
}

uint64_t sub_1B02D719C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  *(void *)(v16 - 128) = a13;
  *(void *)(v16 - 120) = a12;
  *(_DWORD *)(v16 - 136) = v13 + ((v16 - 136) ^ 0xE09C622B) * v14 + 1196;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v15 + 8 * (v13 + 1938)))(v16 - 136);
  return (*(uint64_t (**)(uint64_t))(v15
                                            + 8
                                            * ((15
                                              * (((v13 - 57) ^ (*(_DWORD *)(v16 - 132) > 0xAB00D2u)) & 1)) ^ (v13 + 875))))(v17);
}

void sub_1B02D71A4(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  unint64_t v55 = STACK[0x300];
  unsigned int v56 = ((a1 - 673) | 0xC8) + LODWORD(STACK[0x43C]) - ((2 * LODWORD(STACK[0x43C])) & 0x9940B9A2) - 861905927;
  int v57 = 3804331 * ((v54 - 2059516704 - 2 * ((v54 - 192) & 0x853E45A0)) ^ 0xFBEB6056);
  *(void *)(v54 - 168) = a50;
  *(void *)(v54 - 160) = a51;
  *(_DWORD *)(v54 - 152) = a1 - v57 + 1695026763;
  *(_DWORD *)(v54 - 148) = (1946793341 * v51 - 1025742592) ^ v57;
  *(_DWORD *)(v54 - 144) = v56 ^ v57;
  *(void *)(v54 - 192) = v55;
  *(void *)(v54 - 184) = v52;
  (*(void (**)(uint64_t))(v53 + 8 * (a1 + 1733)))(v54 - 192);
  LODWORD(STACK[0x374]) = *(_DWORD *)(v54 - 176);
  JUMPOUT(0x1B029ACD0);
}

void sub_1B02D7284()
{
}

uint64_t sub_1B02D728C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22)
{
  return (*(uint64_t (**)(void))(v23
                              + 8
                              * ((951 * (((v22 + 866) ^ 0x522F26D4) + a22 - *(_DWORD *)(a2 + 4) == 966360270)) ^ v22)))();
}

uint64_t sub_1B02D72D4()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((427 * (v0 ^ 0x1D5) + 897) ^ (v0 + 1671))
                                * (*(_DWORD *)(v1 - 128) == *(_DWORD *)(v1 - 136))) ^ v0)))();
}

uint64_t sub_1B02D7318@<X0>(int a1@<W8>)
{
  *(_DWORD *)(v3 + 4 * (v1 - 398551987)) = 398551987
                                                         - v1
                                                         + ((1566083941
                                                           * (*(_DWORD *)(v3 + 4 * (v1 - 398551988)) ^ (*(_DWORD *)(v3 + 4 * (v1 - 398551988)) >> 30))) ^ *(_DWORD *)(v3 + 4 * (v1 - 398551987)));
  uint64_t v5 = 1224239923 * ((((v4 - 192) | 0x68543E538743D3C8) - ((v4 - 192) & 0x68543E538743D3C8)) ^ 0x400E8B3A75F02E1FLL);
  int v6 = a1 + 1240662105 - v5;
  *(_DWORD *)(v4 - 152) = v6;
  *(_DWORD *)(v4 - 168) = 1 - v5;
  *(_DWORD *)(v4 - 164) = v6 - 31;
  *(_DWORD *)(v4 - 160) = v5 ^ (a1 + 1240662105) ^ 0x18;
  *(_DWORD *)(v4 - 156) = -1501686745 - v5 + a1;
  *(void *)(v4 - 192) = v5 + 449117344;
  *(void *)(v4 - 176) = (v1 + 50565358) ^ (unint64_t)v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 + 1486)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * *(int *)(v4 - 184)))(v7);
}

uint64_t sub_1B02D742C(_DWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, unsigned int a12, uint64_t a13, int a14)
{
  unsigned int v20 = 1759421093 * ((-674533834 - (&a11 | 0xD7CB6E36) + (&a11 | 0x283491C9)) ^ 0x9B49219D);
  a11 = 6 * (v19 ^ 0x249) - v20 + *a1 - v18 + *(_DWORD *)(v14 - 0x7DA9E0EFFB1E361ELL) - 1584941594 - 132038471;
  a12 = v20 + 1440767524;
  a14 = v19 - v20 + 1310;
  a13 = v14;
  uint64_t v21 = (*(uint64_t (**)(int *))(v17 + 8 * (v19 + 1877)))(&a11);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((476 * (*v15 == v16)) ^ v19)))(v21);
}

uint64_t sub_1B02D7524(uint64_t a1, int a2, uint64_t a3, int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,char a40)
{
  int v45 = v43 + a2;
  if ((v43 + a2) <= 0x40) {
    int v45 = 64;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 8 * (((((v40 - 2004293956) & 0x777717A7) - 667) * ((a4 - v41 - v42 + v45 + 678) < 0xF)) ^ v40)))(a1, 2412802768, a3, &a40, 2113917222, a6, a7, 3841521650, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a5,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           1882164503);
}

uint64_t sub_1B02D75B8()
{
  *(_DWORD *)(v6 - 136) = v4 + ((v6 + 296281824 - 2 * ((v6 - 136) & 0x11A8E768)) ^ 0xF1348543) * v3 + 935;
  *(void *)(v6 - 128) = v0;
  *(void *)(v6 - 120) = v5;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v4 ^ 0xAB7)))(v6 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * (((*(_DWORD *)(v6 - 132) > (v1 + 1)) * (v4 ^ 0x2F6)) ^ v4)))(v7);
}

uint64_t sub_1B02D763C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v24 - 120) = v19 + ((v24 - 120) ^ 0xE09C622B) * v22 - 43;
  *(void *)(v24 - 112) = a19;
  *(void *)(v24 - 104) = v21;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 ^ 0xEC5)))(v24 - 120);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (int)(((*(_DWORD *)(v24 - 116) <= (v23 + 1584))
                                                   * ((v19 + 2130788816) ^ 0x7F0141C4 ^ (v19 + 2130788816) & 0x80FEB9F3 ^ 0x7DC)) ^ v19)))(v25);
}

uint64_t sub_1B02D76CC()
{
  int v4 = v2 + 478814465 + ((v0 - 1430) | 0x449);
  int v5 = (v3 > 0x3F1395C4) ^ (v4 < -1058248133);
  BOOL v6 = v4 < (int)(v3 + 1089235515);
  if (v5) {
    BOOL v6 = v3 > 0x3F1395C4;
  }
  return (*(uint64_t (**)(void))(v1 + 8 * ((49 * v6) ^ v0)))();
}

uint64_t sub_1B02D7740@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  *(unsigned char *)(a1 + (a2 - 1566298315)) = *(unsigned char *)(v5 + (v4 - 1882164501));
  return (*(uint64_t (**)(void))(v6 + 8 * ((93 * (((((v2 - 1377) | 0x18) - 61) & v3) == 1882164500)) ^ v2)))();
}

uint64_t sub_1B02D77A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(_DWORD *)(v39 - 192) = ((v39 - 192) ^ 0x239AD816) * v37 + 2138962459 + v36 + 823;
  (*(void (**)(uint64_t))(v38 + 8 * (v36 ^ 0x94A)))(v39 - 192);
  *(_DWORD *)(v39 - 184) = 1759421093
                         * ((-2 - (((v39 - 192) ^ 0x40124F0 | 0xA9EED30A) + ((v39 - 192) ^ 0x28D102 | 0x56112CF5))) ^ 0x48ABBA59)
                         + v36
                         + 523;
  *(void *)(v39 - 192) = a35;
  *(void *)(v39 - 176) = a36;
  LOBYTE(STACK[0x191C]) = -91 * ((-2 - (((v39 + 64) ^ 0xF0 | 0xA) + ((v39 + 64) ^ 2 | 0xF5))) ^ 0x59) + 68;
  uint64_t v40 = (*(uint64_t (**)(uint64_t))(v38 + 8 * (v36 + 2304)))(v39 - 192);
  return (*(uint64_t (**)(uint64_t))(v38
                                            + 8
                                            * (int)(((STACK[0x500] == 0)
                                                   * ((((v36 ^ 0x3CB) + 152953850) & 0xF6E21DE7) - 1338)) ^ ((v36 ^ 0x3CB) + 453))))(v40);
}

uint64_t sub_1B02D7884(int a1)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((((461 * (a1 ^ 0x3D8)) ^ 0x231) * (v1 == v2)) ^ a1)))();
}

uint64_t sub_1B02D78C0(uint64_t a1)
{
  BOOL v4 = 35 * ((v3 + 1660) ^ 0x789) + *(_DWORD *)(v2 - 0x7DA9E0EFFB1E3622) - 2073933199 == ((v3 - 105) | 0x340) - 994;
  return (*(uint64_t (**)(uint64_t, void))(v1 + 8 * (((2 * v4) | (32 * v4)) ^ (v3 + 1660))))(a1, *(void *)(v2 - 0x7DA9E0EFFB1E362ELL));
}

uint64_t sub_1B02D7944(uint64_t a1, uint64_t a2, int a3)
{
  *(void *)(v3 - 7 + (v6 + v4 - v7)) = *(void *)(a2 - 7 + (v6 + v4 - v7));
  return (*(uint64_t (**)(void))(v8 + 8 * ((3075 * (((a3 - 55) ^ 0x3D4) + v7 == (v5 & 0xFFFFFFF8))) ^ a3)))();
}

uint64_t sub_1B02D7994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  uint64_t v68 = (*(uint64_t (**)(uint64_t))(v66 + 8 * (v65 + 1451)))(a65);
  STACK[0x328] = STACK[0x2A0] - 1824;
  LODWORD(STACK[0x314]) = v67;
  return (*(uint64_t (**)(uint64_t))(v66
                                            + 8
                                            * (int)(((STACK[0x450] == 0) * (((v65 + 867) ^ 0xFFFFF813) + (v65 ^ 0x2A1))) ^ (v65 + 1192))))(v68);
}

uint64_t sub_1B02D7A04()
{
  STACK[0x298] = (unint64_t)&STACK[0x1E5BC71B799A40D6];
  STACK[0x290] = (unint64_t)&STACK[0x634ED76D4AB8862D];
  STACK[0x288] = (unint64_t)&STACK[0x5EA78D1E4BF8D545];
  STACK[0x280] = (unint64_t)&STACK[0x4562AF39A4DDDE36];
  *(void *)(v2 - 184) = &STACK[0x3FC5690792BAE6F7];
  *(_WORD *)(v2 - 176) = 16705 * ((((v2 - 192) | 0xE068) - ((v2 - 192) & 0xE068)) ^ 0xF861) + 4016;
  *(_DWORD *)(v2 - 192) = 1374699841 * ((((v2 - 192) | 0xD330E068) - ((v2 - 192) & 0xD330E068)) ^ 0xBEC4F861)
                        + v0
                        + 1872;
  uint64_t v3 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 2244)))(v2 - 192);
  int v4 = LOBYTE(STACK[0x44F]);
  int v5 = (LOBYTE(STACK[0x44C]) << 24) | (LOBYTE(STACK[0x44D]) << 16) | (LOBYTE(STACK[0x44E]) << 8) | v4;
  LODWORD(STACK[0x45C]) = v5 - 2 * (v5 & (v0 ^ 0xC72D0AF) ^ v4 & 1) + 208851052;
  int v6 = *(uint64_t (**)(uint64_t))(v1 + 8 * ((44 * ((STACK[0x394] & 8) == 0)) ^ v0));
  STACK[0x228] = (unint64_t)*(&off_1F08D3590 + v0 - 163);
  return v6(v3);
}

uint64_t sub_1B02D7D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  a15 = v17
      - 460628867 * ((-1521014046 - (&a13 | 0xA5572AE2) + (&a13 | 0x5AA8D51D)) ^ 0x163E5760)
      + 1239;
  a13 = &STACK[0xFBD18CA08459188];
  uint64_t v18 = (*(uint64_t (**)(unint64_t **))(v16 + 8 * (v17 + 1633)))(&a13);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((494 * (a14 == v15 + v17 + v17 + 880 - 2380)) ^ v17)))(v18);
}

uint64_t sub_1B02D7DC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  *(_DWORD *)(v28 - 120) = v24 + ((((2 * (v28 - 120)) | 0xAAF27EC8) - (v28 - 120) + 713474204) ^ 0x35E55D4F) * v27 - 57;
  *(void *)(v28 - 112) = a23;
  *(void *)(v28 - 104) = v26;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v23 + 8 * (v24 + 685)))(v28 - 120);
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((*(_DWORD *)(v28 - 116) > (v25 + 982))
                                              * (((v24 - 842743870) & 0x323B3BAA) - 111)) ^ v24)))(v29);
}

void sub_1B02D7E60()
{
}

uint64_t sub_1B02D7E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return (*(uint64_t (**)(void))(v22
                              + 8
                              * (((((unint64_t)(~a19 + v20 - v21) < 0x10) ^ (v19 - a5 - 51)) & 1 | (2 * ((((unint64_t)(~a19 + v20 - v21) < 0x10) ^ (v19 - a5 - 51)) & 1))) ^ v19)))();
}

uint64_t sub_1B02D7EBC()
{
  return (*(uint64_t (**)(void))(v1 + 8 * (int)(((STACK[0x2F0] + 170) * (v0 > 0xAA756540)) ^ (STACK[0x2F0] - 20))))();
}

void sub_1B02D7EF4(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) - 1225351577 * ((-396133807 - (a1 | 0xE8637A51) + (a1 | 0x179C85AE)) ^ 0x34065DB8);
  if (*(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1) - 1388059666 >= 0) {
    unsigned int v2 = *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1) - 1388059666;
  }
  else {
    unsigned int v2 = 1388059666 - *(_DWORD *)(*(void *)a1 - 0x6155FFFFEB445CC1);
  }
  if (*(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1) - 1388059666 >= 0) {
    unsigned int v3 = *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1) - 1388059666;
  }
  else {
    unsigned int v3 = 1388059666 - *(_DWORD *)(*(void *)(a1 + 8) - 0x6155FFFFEB445CC1);
  }
  uint64_t v6 = *(void *)a1;
  unsigned int v7 = v1 - 628203409 * ((&v6 & 0x8466BF79 | ~(&v6 | 0x8466BF79)) ^ 0xF9114CB5) - 1017;
  int v4 = (char *)*(&off_1F08D3590 + v1 - 1952) - 12;
  (*(void (**)(uint64_t *))&v4[8 * v1 + 2304])(&v6);
  if (v2 >= v3) {
    unsigned int v5 = v3;
  }
  else {
    unsigned int v5 = v2;
  }
  __asm { BRAA            X12, X17 }
}

uint64_t sub_1B02D809C()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((67
                                * (v1 - 1781971141 < ((((v0 + 350) | 0x212) + 2147481581) ^ (v0 + 1486336336) & 0xA7684DF3))) ^ v0)))();
}

uint64_t sub_1B02D811C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((((a19 - 1355080478) < 0x10) * (14 * (v19 ^ (a6 + 23)) - 181)) ^ (v19 + v21))))();
}

uint64_t sub_1B02D816C@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((2308 * ((((v2 ^ 0x7A9) + 216761346) ^ a1) == v1 + (v2 ^ 0x7A9) - 1661478102)) ^ v2 ^ 0x7A9)))();
}

uint64_t sub_1B02D81CC@<X0>(int a1@<W8>)
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((a1 != (((v1 + 6) | 0x10) ^ 0x50C4E10F))
                                     * (v3 + ((v1 - 545568260) & 0xFF97BFAF) + 624)) ^ v1)))();
}

uint64_t sub_1B02D8228()
{
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * (((61 * (v2 ^ (v2 - 20)) + 7 * (v2 ^ (v2 - 20) ^ 0xE8) - 3401) * (v1 <= 0xA368661C)) ^ (v2 - 1972109899))))();
}

void sub_1B02D8288(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  *uint64_t v18 = 0x80000000;
  (*(void (**)(uint64_t))(v19 + 8 * (a1 + 2227)))(a18);
  JUMPOUT(0x1B02D82C4);
}

uint64_t sub_1B02D8370@<X0>(int a1@<W8>)
{
  BOOL v4 = (*(uint64_t (**)(void, uint64_t))(v3 + 8 * (v1 ^ 0xD85)))(a1 ^ v2, 1812636846) != 0;
  return (*(uint64_t (**)(void))(v3 + 8 * ((v4 * ((v1 ^ 0x18) - 1123)) | v1)))();
}

uint64_t sub_1B02D83BC()
{
  STACK[0x488] = v1;
  return (*(uint64_t (**)(void))(v2 + 8 * ((222 * (STACK[0x468] == 0)) ^ (17 * (v0 ^ 0xA) - 308))))();
}

void sub_1B02D83D0()
{
}

void sub_1B02D83F8()
{
}

void sub_1B02D8408(uint64_t a1)
{
  uint64_t v8 = *MEMORY[0x1E4F143B8];
  int v1 = *(_DWORD *)(a1 + 16) - 1178560073 * ((2 * (a1 & 0x7B1A53C3) - a1 - 2065322948) ^ 0x3E71D45E);
  unsigned int v2 = 1178560073 * (((&v5 | 0x40A2FF9F) - (&v5 & 0x40A2FF9F)) ^ 0xFA3687FD);
  unsigned int v5 = -17177217 - v2;
  int v7 = v1 - v2 - 1882357534;
  uint64_t v6 = &STACK[0x2B41EA7AD2F8E96D];
  uint64_t v3 = (char *)*(&off_1F08D3590 + (v1 ^ 0xC1)) - 12;
  (*(void (**)(unsigned int *))&v3[8 * v1 + 18432])(&v5);
  __asm { BRAA            X10, X17 }
}

void sub_1B02D86FC()
{
}

uint64_t sub_1B02D884C@<X0>(int a1@<W5>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57)
{
  if (!a2) {
    return (*(uint64_t (**)(void))(v59
  }
                                + 8
                                * ((((a13 - 1355080478) < 0x10) * (14 * (a1 ^ (a1 + 23)) - 181)) ^ (a1 + v61))))();
  if (a2 != 3) {
    return (*(uint64_t (**)(void))(v59
  }
                                + 8
                                * (int)((((*(_DWORD *)(v60 + 48 * v57 + 36) + 685743161) < 0x80000004)
                                       * (25 * ((a1 + 2) ^ 0xDF130BA7) + 1587)) ^ (v61 - 552399961))))();
  int v62 = a1 + v61;
  uint64_t v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v60 + 48 * v57 + 8))(a4, a3);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 8 * ((1118 * (v63 + v58 - ((2 * v63) & 0xE3164EC8) == v58)) ^ v62)))(v63, v64, v65, v66, v67, 3742567335, 2833226809, 2278508382, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48,
           a49,
           a50,
           a51,
           a52,
           a53,
           a54,
           a55,
           a56,
           a57);
}

uint64_t sub_1B02D89C8()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((2801 * (v0 - 1 == ((5 * (v1 ^ 0x80B)) ^ 0x7D))) ^ (v1 - 1476))))();
}

void sub_1B02D8A08()
{
}

void sub_1B02D8B2C()
{
}

void sub_1B02D8B38()
{
}

uint64_t sub_1B02D8B44@<X0>(int a1@<W0>, _OWORD *a2@<X3>, uint64_t a3@<X6>, int a4@<W8>)
{
  uint64_t v7 = 169 * (v4 ^ 0x56Eu);
  *(_OWORD *)(a3 + (a4 + a1 + v7 - 532)) = *a2;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((46 * (((v7 ^ 0x1FFFFFAB8) & (v5 + 1)) != 16)) ^ v7)))();
}

uint64_t sub_1B02D8BAC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,int a34,char a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,int a53)
{
  if (a35 == 2) {
    return (*(uint64_t (**)(void))(v53 + 8 * (((a53 != 1242902621) * ((a3 ^ 0x272) + 1027)) ^ (a3 + 530))))();
  }
  if (a35 != 1) {
    JUMPOUT(0x1B02D8CCCLL);
  }
  return (*(uint64_t (**)(uint64_t))(v53 + 8 * (((a53 != 1242902621) * (a3 - 40)) ^ (a3 + 530))))(a13);
}

uint64_t sub_1B02D8D04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unsigned int v9 = v6 & 0xD12A33D7;
  int v10 = 2 * v7 + 1494599994;
  LODWORD(STACK[0x2E8]) = v10;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v8
                                                                                         + 8
                                                                                         * (int)(v9 | (2 * ((((v9 ^ 0x286) - 807536273) & (2 * (v7 - (v10 & 0xD72FF200) + 404938141)) ^ (v9 - 955388417)) + ((v7 - (v10 & 0xD72FF200) + 404938141) ^ 0x8C7905FB) + 1509373919 == 1105605850)))))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_1B02D8DA8@<X0>(int a1@<W8>)
{
  *(unsigned char *)(v6 + (v1 + a1)) = *(unsigned char *)(v2 + (v1 + a1))
                                           - ((2 * *(unsigned char *)(v2 + (v1 + a1))) & 0xA0)
                                           - 48;
  return (*(uint64_t (**)(void))(v5 + 8 * ((2018 * (v1 + ((v4 - 455768206) & 0x1B2A758F) - 136 == v3)) ^ (v4 + 74))))();
}

uint64_t sub_1B02D8E48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v25 - 120) = v19 + ((v23 - ((v25 - 120) | v23) + ((v25 - 120) | 0xB6313F85)) ^ 0x56AD5DAE) * v24 + 563;
  *(void *)(v25 - 112) = a19;
  *(void *)(v25 - 104) = v21;
  uint64_t v26 = (*(uint64_t (**)(uint64_t))(v20 + 8 * (v19 + 1305)))(v25 - 120);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((*(_DWORD *)(v25 - 116) <= (v19 + 4 + v22)) * (v19 - 973)) ^ v19)))(v26);
}

void sub_1B02D8ED4()
{
}

uint64_t sub_1B02D8EE0()
{
  return sub_1B02D8EEC();
}

uint64_t sub_1B02D8EEC(int a1, int8x16_t a2, double a3, double a4, double a5, int8x16_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int8x16_t v20 = *(int8x16_t *)(v18 + (v14 + a1 + v13));
  *(int8x16_t *)(v16 + v13) = vaddq_s8(vsubq_s8(v20, vandq_s8(vaddq_s8(v20, v20), a6)), a2);
  return (*(uint64_t (**)(void))(v17 + 8 * (((v13 == 48) * v19) ^ (a13 + v15 + 1713))))();
}

void sub_1B02D8F34()
{
}

uint64_t sub_1B02D8F3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (((((10 * (v11 ^ 0x2FA)) ^ 0xD60) + 3 * (v11 ^ 0x247)) * (a11 > a10)) ^ v11)))(a1);
}

uint64_t sub_1B02D8FAC()
{
  return sub_1B029B2A4();
}

void sub_1B02D8FDC()
{
}

void sub_1B02D9030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36)
{
  *(_DWORD *)(v38 - 192) = v36
                         + 666
                         + 1225351577 * ((2 * ((v38 - 192) & 0x44D76B20) - (v38 - 192) + 992515292) ^ 0x18B24CCA)
                         + 2138962459;
  (*(void (**)(uint64_t))(v37 + 8 * (v36 + 2073)))(v38 - 192);
  LODWORD(STACK[0x2D8]) += (v36 + 666) ^ 0x384;
  *(_DWORD *)(v38 - 184) = 1759421093 * ((v38 - 192) ^ 0xB37DB054) + v36 + 366;
  *(void *)(v38 - 192) = a35;
  *(void *)(v38 - 176) = a36;
  LOBYTE(STACK[0x191C]) = -91 * ((v38 + 64) ^ 0x54) + 68;
  (*(void (**)(uint64_t))(v37 + 8 * (v36 ^ 0x9A5)))(v38 - 192);
  JUMPOUT(0x1B02C1468);
}

uint64_t sub_1B02D911C(uint64_t a1, uint64_t a2, int a3)
{
  LODWORD(STACK[0x4F8]) = v4;
  LODWORD(STACK[0x4FC]) = -1764994161;
  uint64_t v9 = *v7;
  unint64_t v10 = ((((v8 - 152) | 0x4F8945475793ED39) - (v8 - 152) + ((v8 - 152) & 0xB076BAB8A86C12C0)) ^ 0x4185DB4B3A67F530)
      * v6;
  int v11 = v3 - 2116849796 + v10;
  *(_DWORD *)(v8 - 128) = 49252646 - v10 + v3;
  *(_DWORD *)(v8 - 124) = ((v3 - 2116849796) ^ 0x51) - v10;
  STACK[0x580] = v9 + v10;
  STACK[0x598] = v10;
  *(_DWORD *)(v8 - 136) = v11;
  *(_DWORD *)(v8 - 132) = v10;
  *(_DWORD *)(v8 - 152) = v11 - 14;
  uint64_t v12 = (*(uint64_t (**)(uint64_t))(v5 + 8 * (v3 ^ (a3 + 1811))))(v8 - 152);
  return (*(uint64_t (**)(uint64_t))(v5 + 8 * *(int *)(v8 - 148)))(v12);
}

uint64_t sub_1B02D920C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10 + 8 * ((((505 * (v7 ^ 0x6C)) ^ (a7 - 466) ^ (a7 - 360)) * (v9 == v8)) ^ v7)))();
}

uint64_t sub_1B02D9248(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 8 * ((56 * (a8 + 1 != v8 + 16)) ^ a6)))(a2, v10, a3, a2);
}

uint64_t sub_1B02D9330(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(void))(v10
                              + 8
                              * ((((((v8 - v7 - 427) ^ (v9 == a7)) & 1) == 0) | (8
                                                                               * ((((v8 - v7 - 427) ^ (v9 == a7)) & 1) == 0))) ^ v8)))();
}

uint64_t sub_1B02D936C@<X0>(int a1@<W8>)
{
  int v3 = a1 ^ 0x746;
  int v4 = a1 ^ 0x454;
  int v5 = (a1 ^ 0x746) + 474;
  BOOL v7 = v1[8] == 0x59CFADC5C538BCA7 || (v1[1] | v1[6]) == 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((v7 * (v5 + 11 * v4 - 2298)) ^ v3)))();
}

void sub_1B02D93D4()
{
}

void sub_1B02D9490()
{
}

uint64_t sub_1B02D95D8()
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8 * (v1 - 870)))(140, 117);
}

uint64_t sub_1B02D961C(double a1)
{
  double *v2 = a1;
  return (*(uint64_t (**)(void))(v5 + 8 * (((v4 == 0) * v3) ^ v1)))();
}

void sub_1B02D9640()
{
}

void sub_1B02D9648()
{
}

uint64_t sub_1B02D967C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  unsigned int v36 = v30 + 1232;
  int v37 = (v30 + 1232) ^ 0x210;
  int v38 = (v30 + 1232) ^ 0x5D0;
  int v39 = v32 + v31;
  int v40 = v39 - 2113917900;
  if ((v39 - 2113917900) <= 0x40) {
    int v40 = 64;
  }
  BOOL v41 = __CFADD__(v39 + (v37 ^ 0x82002955), v33 + a5 + v34 + v38 + v40);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 8 * ((15 * v41) ^ v36)))(a1, a2, a3, a4, a5, 64, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30);
}

uint64_t sub_1B02D96FC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  *(_DWORD *)(*(void *)(a2 + 96) + 24) = v4;
  unsigned int v5 = *(_DWORD *)(a1 + 4) - ((2 * *(_DWORD *)(a1 + 4) + 1494599994) & 0xA8FAF634) - 2130157641;
  BOOL v6 = ((2 * v5) & 0xDFDFBD6E ^ 0x88DAB424) + (v5 ^ 0xBB92A5AD) - 34347012 != 1843644083;
  return (*(uint64_t (**)(void))(v2 + 8 * (((8 * v6) | (16 * v6)) ^ v3)))(0);
}

uint64_t sub_1B02D9790(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  LODWORD(STACK[0x314]) = v4;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, unint64_t))(v7
                                                                                         + 8
                                                                                         * ((((401 * (v6 ^ 0x387)) ^ 0x33E)
                                                                                           * v5) ^ (v6 - 572))))(a1, a2, a3, a4, STACK[0x2F0]);
}

uint64_t sub_1B02D97D0()
{
  LODWORD(STACK[0x1868]) = v2;
  LODWORD(STACK[0x186C]) = 294357428;
  int v5 = *(_DWORD **)(v1 + 8 * (v0 - 800));
  STACK[0x270] = (unint64_t)v5;
  LODWORD(STACK[0x50C]) = *v5;
  int v6 = *(unsigned int **)(v1 + 8 * (v0 ^ 0x383u));
  STACK[0x278] = (unint64_t)v6;
  unint64_t v7 = STACK[0x250];
  *(void *)(v4 - 184) = *v6 + STACK[0x250];
  *(_DWORD *)(v4 - 192) = ((v0 + 731903484) | 0x22) + v7;
  *(void *)(v4 - 160) = v7;
  *(_DWORD *)(v4 - 168) = 2021362876 - v7 + v0;
  *(_DWORD *)(v4 - 164) = v0 + 731903484 - v7 + 88;
  *(_DWORD *)(v4 - 176) = v0 + 731903484 + v7;
  *(_DWORD *)(v4 - 172) = v7;
  uint64_t v8 = (*(uint64_t (**)(uint64_t))(v3 + 8 * (v0 + 1456)))(v4 - 192);
  return (*(uint64_t (**)(uint64_t))(v3 + 8 * *(int *)(v4 - 188)))(v8);
}

uint64_t sub_1B02D988C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, void *a17)
{
  *a17 = 0x2F2F2F2F2F2F2F2FLL;
  a17[1] = 0xD0D0D0D0D6D0D0C2;
  int v21 = 235795823 * ((v20 - 192) ^ 0x94AD4959);
  STACK[0x3C8] = v19;
  *(_DWORD *)(v20 - 188) = v21 - 167768409;
  *(_DWORD *)(v20 - 184) = v17 - v21 + 1064656556;
  (*(void (**)(uint64_t))(v18 + 8 * (v17 + 2225)))(v20 - 192);
  LODWORD(STACK[0x448]) = a15;
  uint64_t v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8 * (v17 ^ 0x991)))(a16, 1925803308);
  STACK[0x400] = v22;
  return (*(uint64_t (**)(void))(v18
                              + 8
                              * (int)(((v22 != 0) * (((53 * (v17 ^ 0x96)) ^ 0xFFFFFF13) + ((v17 + 781) | 0x20))) ^ v17)))();
}

uint64_t sub_1B02D9974()
{
  STACK[0x328] -= 16;
  return (*(uint64_t (**)(void))(v3
                              + 8 * (int)((((v0 + 575) ^ 0xC1C ^ (v0 + 1491975737) & 0xA71246DB) * (v2 == v1)) ^ v0)))();
}

void sub_1B02D99C8()
{
}

uint64_t sub_1B02D9A1C(uint64_t a1, uint64_t a2)
{
  int v6 = **(unsigned __int8 **)(a2 + 8) - 42;
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * ((2854 * ((v3 & (2 * v6)) + (v6 ^ (v2 + ((v4 + 87213970) & 0xFACD3759) - 577)) == v2)) ^ v4)))();
}

void sub_1B02D9A74()
{
}

uint64_t sub_1B02D9A7C@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  *(unsigned char *)(a2 + (v5 + v4)) = *(unsigned char *)(v2 + (v5 + v4));
  return (*(uint64_t (**)(void))(v6 + 8 * (((v5 - 1 == v3) * ((a1 ^ 0x247) - 1510)) ^ (a1 - 436))))();
}

uint64_t sub_1B02D9AB8(unint64_t a1)
{
  STACK[0x328] = STACK[0x2A0] - 176;
  STACK[0x3A8] = a1;
  return (*(uint64_t (**)(void))(v1 + 8 * (((((v2 - 676) ^ 0x30D) - 421) * (v3 > a1)) ^ v2)))();
}

uint64_t sub_1B02D9B78()
{
  int v2 = v1 - ((2 * v1 + 1494599992) & 0x5FA5E28E) - 597830173;
  return (*(uint64_t (**)(void))(v0
                              + 8
                              * ((49
                                * (((2 * v2) & 0xD7BAFEDA ^ 0x57A0E28A) + (v2 ^ 0x440F8E2A) - 672473449 == 1137204740)) | 0x2C0u)))();
}

uint64_t sub_1B02D9C18()
{
  int v6 = *(unsigned __int8 *)(*(void *)(v1 + 8) + v0 - 0x197D23A751720F9ELL)
     - *(unsigned __int8 *)(v5 + v0 - 0x197D23A751720F9ELL);
  uint64_t v7 = v0 + 1;
  BOOL v9 = ((v4 - 317) ^ 0x7EFF3DB6 ^ v6) - 708848896 + ((2 * v6) & 0xFDFE7B1E) != 1421807759 || v7 == v2 + 16;
  return (*(uint64_t (**)(void))(v3 + 8 * ((2472 * v9) ^ v4)))();
}

uint64_t sub_1B02D9CA0()
{
  unsigned int v4 = v2 + 1922249434;
  BOOL v5 = v4 < ((v1 - 1120) | 0x15u) - 434637604;
  BOOL v6 = v3 - 434637071 < v4;
  if (v3 > 0x19E8090E != v5) {
    BOOL v6 = v5;
  }
  return (*(uint64_t (**)(void))(v0 + 8 * ((v6 * ((v1 - 6) ^ 0x65C)) ^ v1)))();
}

uint64_t sub_1B02D9D54()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (v1 ^ (1210 * ((v0 + v2 + 107) < 0x7FFFFFFF)))))();
}

void sub_1B02D9D94()
{
  *(_DWORD *)(v1 - 120) = v0 + 10;
  *(_DWORD *)(v1 - 128) = v0 + 9;
  JUMPOUT(0x1B02D9EA4);
}

void sub_1B02D9F18(uint64_t a1)
{
  int v1 = *(_DWORD *)(a1 + 4) - 535753261 * (a1 ^ 0xAF40E2F);
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02D9FC8()
{
  return sub_1B02D9FD4();
}

uint64_t sub_1B02D9FD4@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  *(void *)(a1 + v2 + v5 + v4) = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * ((274 * (((a2 - 327) ^ 0x17ALL) + v4 == v3)) ^ a2)))();
}

uint64_t sub_1B02DA010()
{
  int v8 = ((v7 - 136) ^ 0xE09C622B) * v3;
  *(_DWORD *)(v7 - 120) = v8 ^ 0x17228A6;
  *(_DWORD *)(v7 - 136) = v8 + v6 + 1368;
  *(void *)(v7 - 128) = v1;
  (*(void (**)(uint64_t))(v2 + 8 * (v6 ^ 0xAD8)))(v7 - 136);
  *(_DWORD *)(v7 - 120) = (v6 + 883) ^ (535753261
                                      * ((((v7 - 136) | 0x501EB096) - ((v7 - 136) & 0x501EB096)) ^ 0x5AEABEB9));
  *(void *)(v7 - 136) = v0;
  *(void *)(v7 - 128) = v5;
  (*(void (**)(uint64_t))(v2 + 8 * (v6 + 1876)))(v7 - 136);
  *(_DWORD *)(v7 - 136) = v6 + (((~(v7 - 136) & 0x51B2B828) - (~(v7 - 136) | 0x51B2B829)) ^ 0xB12EDA02) * v3 + 1021;
  *(void *)(v7 - 128) = v0;
  *(void *)(v7 - 120) = v1;
  uint64_t v9 = (*(uint64_t (**)(uint64_t))(v2 + 8 * (v6 ^ 0xAED)))(v7 - 136);
  return (*(uint64_t (**)(uint64_t))(v2
                                            + 8
                                            * ((21 * ((((v6 + 745) ^ (*(_DWORD *)(v7 - 132) > v4)) & 1) == 0)) ^ v6)))(v9);
}

uint64_t sub_1B02DA144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  return (*(uint64_t (**)(void))(v7 + 8 * (((((v9 < v10) ^ ((v8 ^ a7) + 1)) & 1) * (v8 - 103)) ^ v8)))();
}

uint64_t sub_1B02DA174()
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((v0 - 321) ^ (8 * (STACK[0x3C8] == 0)))))();
}

uint64_t sub_1B02DA23C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * (int)(((*(_DWORD *)(v8 + (v10 + a6) * (uint64_t)v7) != 360560825)
                                     * ((((v6 ^ 0x17F) + 415160819) & 0xE7412CFD) - 1269)) ^ v6 ^ 0x17F)))();
}

uint64_t sub_1B02DA2A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v8 = ((a5 - 932590029) & 0x3796377E ^ 0x168955ED) + v5;
  int v9 = *v7 + 378098311;
  BOOL v10 = v8 < -381325671;
  BOOL v11 = v8 > v9;
  if (v9 < -381325671 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((116 * !v11) ^ a5)))();
}

uint64_t sub_1B02DA324@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char a9, int a10)
{
  unsigned int v11 = 1224239923
      * (((&a9 ^ 0x280F4004) & 0x293F5204 | (&a9 ^ 0x86C00D20) & 0xD6C0ADF9) ^ 0x5C7CB0F3);
  a10 = v11 + a1 + 1824;
  a9 = v11 + 99;
  uint64_t v12 = (*(uint64_t (**)(char *))(v10 + 8 * (a1 + 2213)))(&a9);
  return sub_1B02DA3A8(v12);
}

uint64_t sub_1B02DA3A8()
{
  BOOL v3 = **(_DWORD **)(v2 + 8 * (v0 - 344)) == ((v0 + 289) ^ 0x2E2);
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((8 * (((v0 - 104) ^ v3) & 1)) & 0xDF | (32
                                                                                        * (((v0 - 104) ^ v3) & 1)) | v0)))();
}

void sub_1B02DA3FC(uint64_t a1)
{
  uint64_t v41 = *MEMORY[0x1E4F143B8];
  int v3 = 535753261 * ((-2 - ((a1 ^ 0x110 | 0x5DFBDAC6) + (a1 ^ 0x18EA88C4 | 0xA2042539))) ^ 0xEDE17804);
  int v4 = *(_DWORD *)(a1 + 16) + v3;
  int v5 = *(_DWORD *)(a1 + 48) + v3;
  int v6 = *(_DWORD *)(a1 + 4);
  unint64_t v20 = 535753261
      * ((-2
        - ((a1 ^ 0x962A604B00000110 | 0x29419FB45DFBDAC6)
         + (a1 ^ 0x2100953418EA88C4 | 0xD6BE604BA2042539))) ^ 0xBD3757EDEDE17804);
  int v7 = v6 ^ v3;
  unsigned int v8 = 1178560073 * ((2 * (&v38 & 0x7852AE28) - &v38 + 128799186) ^ 0xBD3929B0);
  int v40 = v4 - v8 - 1882357521;
  unsigned int v38 = -17177217 - v8;
  int v27 = &STACK[0x2B41EA7AD2F8E96D];
  int v39 = &STACK[0x2B41EA7AD2F8E96D];
  int v9 = (char *)*(&off_1F08D3590 + v4 + 78) - 12;
  (*(void (**)(unsigned int *))&v9[8 * v4 + 18536])(&v38);
  int v19 = v7 + 1594196095;
  int v18 = -2027386490;
  int v17 = v7 + 1667299578;
  int v14 = v7 + 312892387;
  int v13 = v7 - 81850299;
  v10[1] = (char *)&v10[-13968400] + 7;
  int v21 = v4 ^ 0xE3;
  int v22 = v4 ^ 0x860;
  int v15 = 166 * (v4 ^ 0x31);
  unsigned int v31 = v15 ^ 0xFFFFFACB;
  unsigned int v29 = (v4 + 1676875678) & 0x9C0CEAEF ^ 0x2C9;
  int v30 = v4;
  int v12 = v4 + 1155954470;
  int v11 = v4 - 1586222234;
  uint64_t v16 = (v4 - 1586222234);
  uint64_t v32 = v16;
  int32x4_t v25 = vdupq_n_s32(0x718B2764u);
  int32x4_t v26 = vdupq_n_s32(0x718B2766u);
  int32x4_t v24 = vdupq_n_s32(0xE3164EC8);
  uint64_t v23 = a1;
  uint64_t v28 = *(void *)(a1 + 40);
  unsigned int v1 = v5 - (((v5 << ((5 * (v4 ^ 0xE3)) ^ 0x43)) - 2078086566) & 0x9E0AA314) + 286705335;
  char v33 = (HIBYTE(v1) ^ 0x4F) - (((HIBYTE(v1) ^ 0x4F) << (((v4 ^ 0xE3) - 30) ^ 0xBD)) & 0xA0) - 48;
  char v34 = (BYTE2(v1) ^ 5) - ((v1 >> 15) & 0xA0) - 48;
  char v35 = (BYTE1(v1) ^ 0x51) - ((2 * (BYTE1(v1) ^ 0x51)) & 0xA0) - 48;
  char v36 = (v5 - ((((_BYTE)v5 << ((5 * (v4 ^ 0xE3)) ^ 0x43)) + 90) & 0x14) - 73) ^ 0x5A;
  __asm { BRAA            X14, X17 }
}

uint64_t sub_1B02DA6DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  return (*(uint64_t (**)(void))(v22 + 8 * ((958 * (a21 == ((v21 + 1543551228) & 0xA3FF46FD ^ 0xCEB8517))) ^ v21)))();
}

uint64_t sub_1B02DA734(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (v8 ^ 0x357u) + v10 - 1661006394;
  *(unsigned char *)(a5 + v13) = *(unsigned char *)(v12 + v13) ^ *(unsigned char *)(v6 + (v13 & 0xF)) ^ *(unsigned char *)(v7 + (v13 & 0xF)) ^ *(unsigned char *)((v13 & 0xF) + v5 + 2) ^ (-73 * (v13 & 0xF)) ^ 0xD0;
  return (*(uint64_t (**)(void))(v11 + 8 * ((103 * (v10 - 1 == v9)) ^ v8)))();
}

void sub_1B02DA7B0(uint64_t a1@<X8>)
{
  *(void *)(a1 - 0x38BB74075792D150) = v2;
  *(_DWORD *)(v1 + 32) = 1904944996;
}

uint64_t sub_1B02DA808()
{
  BOOL v4 = ((13 * (v0 ^ 0x367)) ^ (v2 + 688)) + v1 < 2;
  return (*(uint64_t (**)(void))(v3 + 8 * (v4 | (8 * v4) | v0)))();
}

uint64_t sub_1B02DA840@<X0>(uint64_t a1@<X3>, char a2@<W6>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,int a32)
{
  unsigned int v37 = *(_DWORD *)(&a20 + ((v35 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v35 + a3)) = a2
                                            + v33
                                            + 64
                                            + (HIBYTE(v37) ^ 0x74)
                                            - ((2 * (HIBYTE(v37) ^ 0x74)) & 0xA0)
                                            - 31;
  *(unsigned char *)(a1 + (v35 + a3 + 2)) = (BYTE1(v37) ^ 7) - ((v37 >> 7) & 0xA0) - 48;
  *(unsigned char *)(a1 + (v35 + a3 + 1)) = (BYTE2(v37) ^ 0x4A)
                                                - 2 * ((BYTE2(v37) ^ 0x4A) & 0x55 ^ BYTE2(v37) & 5)
                                                - 48;
  *(unsigned char *)(a1 + (v35 + a3 + 3)) = v37 ^ 0xBE;
  BOOL v38 = v35 + 1093482268 < (a32 + 195932404);
  if (v35 + 1093482268 < v32 != a32 + 195932404 < v32) {
    BOOL v38 = a32 + 195932404 < v32;
  }
  return (*(uint64_t (**)(void))(v36 + 8 * ((v38 * v34) ^ v33)))();
}

uint64_t sub_1B02DA92C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,int a24,char a25)
{
  return (*(uint64_t (**)(void))(v27
                              + 8
                              * (((((a7 + a6 + (a2 & 0x67B8D5FF) - 1502 - 10) | 0x102) ^ 0x10D)
                                * ((unint64_t)(&a25 + a14 + (v25 + v26 - 1)) < 0x10)) ^ a2 & 0x67B8D5FF)))();
}

void sub_1B02DA98C(unint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned char *a19, uint64_t a20,uint64_t a21,unsigned char *a22,uint64_t a23,unsigned char *a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  a22[3] = (HIBYTE(a3) ^ 0x6E) - ((((a25 - 75) & 0x7F) + 31) & (2 * (HIBYTE(a3) ^ 0x6E))) - 99;
  a19[9] = BYTE5(v29) ^ 0x86;
  a19[15] = BYTE1(a3) ^ 0x9E;
  a24[8] = a3 ^ 0x58;
  a22[9] = (BYTE2(a3) ^ 0x82) + (~(2 * BYTE2(a3)) | 0xC5) - 98;
  a24[26] = BYTE4(v29) ^ 0x20;
  char v35 = (v33 ^ 0x84) - ((2 * (v33 ^ 0x84) - 6) & 0xC8) + 97;
  if ((v33 ^ 0xC75D2E76CDF96A84) < 0x8134422366A90F03) {
    char v35 = v32;
  }
  char v36 = v35 ^ 0x64;
  if ((v33 ^ 0xC75D2E76CDF96A84) >= 0x8134422366A90F03) {
    char v37 = 3;
  }
  else {
    char v37 = 0;
  }
  LOBYTE(v29) = *(unsigned char *)(a29 + 531 + (BYTE6(v29) ^ 0xDLL));
  a19[7] = HIBYTE(v29) ^ 0x5C;
  a24[27] = BYTE1(v33) ^ 0x6A;
  a22[10] = 7 * (v29 ^ 0x9C) - ((16 * v29 - 2 * (v29 ^ 0x9C)) & 0x3A) - 99;
  a19[10] = v36 + v37;
  HIDWORD(v38) = *(unsigned __int8 *)(a29 + (((BYTE2(v33) ^ 0xF9) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  LODWORD(v38) = (HIDWORD(v38) << 26) ^ (HIDWORD(v38) << 24);
  a24[10] = BYTE4(v33) ^ 0x76;
  a22[14] = (BYTE3(v33) ^ 0xCD) - ((2 * (BYTE3(v33) ^ 0xCD)) & 0x3A) - 99;
  a22[20] = (v38 >> 25) ^ 0x81;
  a22[4] = (BYTE6(v33) ^ 0x5D) - ((2 * (BYTE6(v33) ^ 0x5D)) & 0x3A) - 99;
  a22[16] = (BYTE5(v33) ^ 0x2E) - ((2 * (BYTE5(v33) ^ 0x2E)) & 0x3A) - 99;
  unsigned int v39 = *(unsigned __int8 *)(a29 + (((HIBYTE(v33) ^ 0xC7) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[20] = v31 ^ 0x42;
  HIDWORD(v38) = v39;
  LODWORD(v38) = (v39 << 26) ^ (v39 << 24);
  a22[15] = (v38 >> 25) ^ 0x81;
  unsigned int v40 = *(unsigned __int8 *)(a17 + (((v31 >> 1) & 0x80 | ((unsigned __int16)v31 >> 9)) ^ 0xE1));
  a24[17] = BYTE3(v31) ^ 0x48;
  a19[14] = BYTE4(v31) ^ 0xCC;
  *a22 = BYTE5(v31) + (~(2 * BYTE5(v31)) | 0xC5) + 30;
  a24[21] = HIBYTE(v31) ^ 0x1F;
  a24[13] = BYTE2(v31) ^ 0x50;
  a24[3] = (v40 ^ 0x8A ^ (v40 >> 2) & 0x17) + 32;
  a19[12] = BYTE6(v31) ^ 6;
  char v41 = *(unsigned char *)(a29 + 531 + (a1 ^ 0x35) + 2 * (a1 & 0xD5 ^ 0x15) - 4 * (a1 & 0xD5 ^ 0x15) + 213);
  a24[11] = BYTE2(a1) ^ 0xB6;
  a22[5] = 7 * (v41 ^ 0x9C) - ((16 * v41 - 2 * (v41 ^ 0x9C)) & 0x3A) - 99;
  a22[2] = (BYTE3(a1) ^ 0xE4) - 2 * ((BYTE3(a1) ^ 0xE4) & 0x1F ^ BYTE3(a1) & 2) - 99;
  a24[25] = BYTE1(a1) ^ 0x76;
  unsigned int v42 = *(unsigned __int8 *)(a17 + (((a1 >> 25) & 0x80 | (a1 >> 33) & 0x7F) ^ 0xB1));
  a24[22] = BYTE5(a1) ^ 0xD3;
  a24[18] = HIBYTE(a1) ^ 0x50;
  a24[2] = BYTE1(v34) ^ 0x56;
  a22[1] = v34 ^ 0xCD;
  a24[30] = BYTE3(v30) ^ 0x5F;
  a24[9] = BYTE2(v34) ^ 0xBE;
  a24[19] = (v42 ^ 0x8A ^ (v42 >> 2) & 0x17) + 32;
  a22[7] = (BYTE6(a1) ^ 0x2B) - ((2 * (BYTE6(a1) ^ 0x2B)) & 0x3A) - 99;
  unsigned int v43 = *(unsigned __int8 *)(a29 + (((BYTE4(v30) ^ 0xF6) - 15) ^ 0x78)) ^ 0xFFFFFFDD;
  a24[24] = BYTE6(v30) ^ 0x81;
  a24[12] = BYTE5(v30) ^ 0xFD;
  HIDWORD(v38) = v43;
  LODWORD(v38) = (v43 << 26) ^ (v43 << 24);
  a24[1] = HIBYTE(v30) ^ 0x9D;
  a24[23] = (v38 >> 25) ^ 0x1C;
  JUMPOUT(0x1B02DADC0);
}

uint64_t sub_1B02DAE00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((((((v8 + 74497631) | 0x520C2902) ^ (v6 + 1497)) + ((v8 - 792) | 2)) * (v7 == a6)) ^ v8)))();
}

void sub_1B02DAE48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  *int v34 = 0x80000000;
  (*(void (**)(uint64_t))(v33 + 8 * (v32 + 2273)))(a32);
  JUMPOUT(0x1B02DAEA4);
}

uint64_t sub_1B02DAFD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  BOOL v10 = ((a7 + ((v8 + 1224813064) | 0xC40191) + ((v8 - 394108574) & 0x177D96F1) - 188) ^ v7) < 8;
  return (*(uint64_t (**)(void))(v9 + 8 * (((16 * v10) | (32 * v10)) ^ v8)))();
}

void sub_1B02DB034()
{
}

uint64_t sub_1B02DB040@<X0>(int a1@<W8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 8 * (a1 ^ 0xA9B)))(*v4);
  _DWORD *v3 = 0;
  *(_DWORD *)uint64_t v1 = 0;
  *(void *)(v1 + 344) = 0;
  *(void *)(v1 + 352) = 0;
  *(_DWORD *)(v1 + 360) = 1017008126;
  *(_DWORD *)(v1 + 56) = 1683335130;
  return result;
}

uint64_t sub_1B02DB090()
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((731 * (v1 + 1 == v3 + 44)) ^ v0)))();
}

uint64_t sub_1B02DB160(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(v9
                                                             + 8
                                                             * (int)(((v8 < v7 + ((a7 + 583039708) | 0x88087A84) + 314)
                                                                    * (((a7 + 1601179314) & 0xA08FEFFF) - 985)) ^ a7)))(a1, a2, 0);
}

uint64_t sub_1B02DB1C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t *a14, unsigned int a15, int a16, uint64_t a17, int a18, unsigned int a19)
{
  unsigned int v23 = 628203409 * (&a14 ^ 0x82880C33);
  a15 = -1487096439 - v23;
  a16 = v22 - v23 - 2024873292;
  a17 = a12;
  a19 = v23 ^ 0xA2713883;
  a14 = &STACK[0x53B515D5D604608F];
  uint64_t v24 = (*(uint64_t (**)(unint64_t **))(v20 + 8 * (v22 ^ 0x9F4u)))(&a14);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a18 == v19) * ((v21 + ((v22 - 556271826) & 0x5AC5CB5F) + 238) ^ 0x4C7)) ^ v22)))(v24);
}

uint64_t sub_1B02DB290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * ((50 * ((v9 & 0x18) == (((a8 - 871) | 0x401) ^ 0x429))) ^ a8)))();
}

uint64_t sub_1B02DB2D0@<X0>(unsigned int a1@<W8>)
{
  uint64_t v3 = a1;
  uint64_t v4 = a1 - 728585860;
  if ((unint64_t)(v4 + 1) > 0x38) {
    uint64_t v5 = v4 + 1;
  }
  else {
    uint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v1 ^ 0x7D) + 1380253161) ^ 0x5244FF73)
                                * ((unint64_t)(v5 - v3 + 728585860) < 8)) ^ v1)))();
}

uint64_t sub_1B02DB340(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _DWORD *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, uint64_t a19, unsigned int a20,uint64_t a21)
{
  unsigned int v28 = 1178560073 * (&a17 ^ 0xBA947862);
  a20 = v28 ^ 0x693;
  a19 = a15;
  a18 = v28 + 1531045867 * v26 + 81978470;
  (*(void (**)(int *))(v27 + 19024))(&a17);
  unsigned int v29 = 1178560073
      * ((((&a17 | 0xDF15DF52) ^ 0xFFFFFFFE) - (~&a17 | 0x20EA20AD)) ^ 0x9A7E58CF);
  a18 = v29 + 1531045867 * v25 + 81978470;
  a20 = v29 ^ 0x693;
  a19 = a15;
  (*(void (**)(int *))(v27 + 19024))(&a17);
  unsigned int v30 = 1178560073
      * (((&a17 | 0x1512CA7D) - &a17 + (&a17 & 0xEAED3580)) ^ 0xAF86B21F);
  a18 = v30 + 1549;
  a21 = v23;
  a19 = a15;
  a20 = v30 ^ ((v24 ^ 0x4CB5F7F6) - 144822370 + ((2 * v24) & 0x996BEFEC));
  (*(void (**)(int *))(v27 + 19352))(&a17);
  unsigned int v31 = 1178560073
      * (((&a17 | 0x2D3C8000) - &a17 + (&a17 & 0xD2C37FF8)) ^ 0x97A8F862);
  a20 = v31 ^ ((v22 ^ 0xEF36BF9C) + 1423796216 + ((2 * v22) & 0xDE6D7F38));
  a19 = a15;
  a18 = v31 + 1549;
  a21 = v21;
  (*(void (**)(int *))(v27 + 19352))(&a17);
  unsigned int v32 = 1178560073 * ((-46026529 - (&a17 | 0xFD41B0DF) + (&a17 | 0x2BE4F20)) ^ 0xB82A3742);
  a18 = v32 + 1531045867 * *a12 + 81978470;
  a20 = v32 ^ 0x693;
  a19 = a15;
  uint64_t v33 = (*(uint64_t (**)(int *))(v27 + 19024))(&a17);
  return (*(uint64_t (**)(uint64_t))(v27 + 8 * ((1873 * (a17 == 1904944996)) ^ 0x37Du)))(v33);
}

uint64_t sub_1B02DB644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7)
{
  int v11 = *(unsigned __int8 *)(v7 + v9 + v10 + (a7 ^ 0x769u));
  return (*(uint64_t (**)(uint64_t, void))(v8 + 8 * (a7 | (2 * (a6 == 1874848760)))))(a1, ((a7 - 1263) ^ 0xF3757AF1) + 2 * v11 + (v11 ^ 0x5FFF9FFF));
}

uint64_t sub_1B02DB6A4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((((v6 + a4) & a6) - 786) * (v7 != 21)) ^ v6)))();
}

uint64_t sub_1B02DB6CC()
{
  uint64_t v4 = v0;
  unint64_t v5 = v0 + v2;
  if (v5 <= 0x38) {
    unint64_t v5 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v5 - v4 + ((172 * (v1 ^ 0x2B3u)) ^ 0x6C79A3B0) > 7) * (((v1 - 436) | 0x61) ^ 0x131)) ^ v1)))();
}

uint64_t sub_1B02DB744@<X0>(int a1@<W4>, uint64_t a2@<X8>)
{
  *(unsigned char *)(v4 - 252 + a2 - 728585860) = -48;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((unint64_t)(a2 - 728585859) < 0x38) | (16
                                                                              * ((unint64_t)(a2 - 728585859) < 0x38)) | (a1 + v2 + 1155))))();
}

void sub_1B02DB788()
{
}

void sub_1B02DB794()
{
  unint64_t v3 = STACK[0x4A0];
  int v4 = 1178560073 * ((v2 + 1663869797 - 2 * ((v2 - 192) & 0x632CA425)) ^ 0xD9B8DC47);
  *(_DWORD *)(v2 - 176) = -1882357529 - v4 + v1;
  *(_DWORD *)(v2 - 192) = -17177217 - v4;
  *(void *)(v2 - 184) = v3;
  (*(void (**)(uint64_t))(v0 + 8 * (v1 ^ 0x907)))(v2 - 192);
  JUMPOUT(0x1B029B690);
}

void sub_1B02DB830()
{
}

void sub_1B02DB84C()
{
}

uint64_t sub_1B02DB8F4@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return (*(uint64_t (**)(void))(v19
                              + 8
                              * ((2615
                                * (*(_DWORD *)(a16 + 4 * ((((3 * (v18 ^ 0x6FA) - 317) | 0x81) ^ v16) + v17)) == a1)) ^ (v18 - 880))))();
}

void sub_1B02DB944()
{
}

uint64_t sub_1B02DBA24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  return (*(uint64_t (**)(void))(v20
                              + 8 * ((((113 * (v19 ^ 0x1E7) - 551827940) & 0x20E43D6F ^ 0x3D9) * (a18 == v18)) ^ v19)))();
}

void sub_1B02DBA74()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 846));
  JUMPOUT(0x1B029B6B0);
}

void sub_1B02DBD44(int a1@<W8>)
{
  int v6 = 1224239923 * ((2 * ((v5 - 144) & 0x28B277F8) - (v5 - 144) + 1464698880) ^ 0xA5FE75D7);
  *(void *)(v5 - 136) = v3;
  *(_DWORD *)(v5 - 128) = v1 - v6 + 188830639 + ((a1 + 1139769188) & 0xBC107AFD);
  *(_DWORD *)(v5 - 140) = (a1 - 96) ^ v6;
  *(void *)(v5 - 120) = v4;
  (*(void (**)(uint64_t))(v2 + 8 * (a1 + 225)))(v5 - 144);
  JUMPOUT(0x1B02DBDD8);
}

uint64_t sub_1B02DBEE8()
{
  int v3 = (v6 - 141) | 0x19;
  unsigned int v10 = (v6 - 272) ^ (1374699841
                    * ((((2 * &v10) | 0x109CD300) - &v10 + 2008127104) ^ 0xE5BA7189));
  uint64_t v12 = &STACK[0x571B6222F4470C26];
  uint64_t v13 = v7;
  (*(void (**)(unsigned int *))(v2 + 8 * (v6 + 1718)))(&v10);
  unsigned int v10 = (v6 + 253) ^ (1755732067 * ((&v10 & 0x83B82CC5 | ~(&v10 | 0x83B82CC5)) ^ 0xA2816EE1));
  uint64_t v12 = v7;
  (*(void (**)(unsigned int *))(v2 + 8 * (v6 + 1681)))(&v10);
  if (v13 == v0 + v3 - 543) {
    int v4 = v9;
  }
  else {
    int v4 = (int)v13;
  }
  unsigned int v11 = v6 + (((&v10 | 0x7A3BC9FC) - (&v10 & 0x7A3BC9FC)) ^ 0x70CFC7D3) * v1 - 169;
  uint64_t v12 = v7;
  (*(void (**)(unsigned int *))(v2 + 8 * (v6 ^ 0xA6C)))(&v10);
  uint64_t v12 = v8;
  unsigned int v11 = v3 + ((174149367 - (&v10 | 0xA614EF7) + (&v10 | 0xF59EB108)) ^ 0xFF6ABF27) * v1 - 53;
  (*(void (**)(unsigned int *))(v2 + 8 * (v3 ^ 0xAE0)))(&v10);
  return v4 ^ v0;
}

uint64_t sub_1B02DC0DC(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v6
                              + 8 * (int)(((((3 * (a4 ^ 0x7A2)) ^ 0xFFFFFDE8) + 5 * (a4 ^ 0x760)) * (v4 == v5)) ^ a4)))();
}

uint64_t sub_1B02DC11C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void))(v7
                                                                                        + 8
                                                                                        * (((((v5 + 506) | 0x20) ^ 0x43E)
                                                                                          * (v6 < 0x10)) ^ v5)))(a1, a2, a3, a4, a5, 0);
}

uint64_t sub_1B02DC14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, int a11, unint64_t *a12, uint64_t a13, unsigned int a14)
{
  unsigned int v17 = 3804331 * (&a10 ^ 0x7ED525F6);
  a14 = v17 + 1199621987;
  a10 = v17 + 1584941606;
  a11 = v17 + v14 - 553;
  a12 = &STACK[0x72FA7492185D929C];
  a13 = v15;
  uint64_t v18 = (*(uint64_t (**)(unsigned int *))(v16 + 8 * (v14 ^ 0xD1A)))(&a10);
  return (*(uint64_t (**)(uint64_t))(v16
                                            + 8
                                            * (((((v14 + 30) ^ (*(_DWORD *)(v15 - 0x7DA9E0EFFB1E3616) == 1904944996)) & 1)
                                              * ((v14 + 604) ^ 0x6F1)) ^ v14)))(v18);
}

uint64_t sub_1B02DC218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,int a51,__int16 a52,char a53,char a54,int a55)
{
  if (BYTE4(a34) == 2) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v55
  }
                                                                + 8
                                                                * ((25
                                                                  * (((a55 == 1242902621) ^ (a4 - 55)) & 1)) ^ ((int)a4 + 2185))))(a1, a2, a19);
  if (BYTE4(a34) == 1) {
    return (*(uint64_t (**)(uint64_t))(v55
  }
                                              + 8
                                              * (int)(((a55 == 1242902621) * (((a4 + 58) | 0x274) - 249)) ^ (a4 + 686))))(a19);
  unint64_t v57 = ((unint64_t)&a39 ^ 0x4FF2ABFEF7FBBF5FLL)
      - 0x862A0A057B3B05FLL
      + (((void)&a39 << (((a4 - 68) | 0xC0) ^ 0xC3)) & 0x9FE557FDEFF77EB0);
  a54 = (v57 ^ 0xBA) * (v57 + 17);
  int v58 = *(uint64_t (**)(void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v55 + 8 * (int)((464 * ((((a4 + 956) | 0x2C0) ^ 0x684) == 161)) ^ ((a4 + 956) | 0x2C0)));
  return v58(v58, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_1B02DC384(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  *(_DWORD *)(v16 - 120) = v15
                         - 1759421093 * ((((v16 - 136) | 0x7FD3A098) - ((v16 - 136) & 0x7FD3A098)) ^ 0xCCAE10CC)
                         + 973;
  *(void *)(v16 - 136) = v14;
  *(void *)(v16 - 128) = a12;
  uint64_t v17 = (*(uint64_t (**)(uint64_t))(v12 + 8 * (v15 + 1045)))(v16 - 136);
  BOOL v18 = v13 != (((v15 - 980) | 0x10) ^ 0x2F62CB8B);
  return (*(uint64_t (**)(uint64_t))(v12 + 8 * (v18 | (2 * v18) | v15)))(v17);
}

uint64_t sub_1B02DC438(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  LODWORD(STACK[0x588]) = v10;
  return (*(uint64_t (**)(void))(v9 + 8 * (a8 - 874)))();
}

uint64_t sub_1B02DC458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,_DWORD *a23)
{
  *a23 = -1051061869;
  BOOL v27 = v24 + 25854315 > -2121627765 && v23 - 2121627766 < -2121627765;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8 * ((v27 | (16 * v27)) ^ (v24 - 1113))))(a1, 3946823638);
}

uint64_t sub_1B02DC4D4(uint64_t a1, uint64_t a2, unsigned int a3)
{
  return (*(uint64_t (**)(void))(v5 + 8 * ((21 * (v4 + v3 - 1877991095 < ((a3 + 1244) ^ 0x880))) ^ a3)))();
}

uint64_t sub_1B02DC53C@<X0>(int a1@<W8>)
{
  int v4 = v2 + a1 + v1 - 1564;
  if (v4 >= 0) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = -v4;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((2 * ((((v1 + 1) ^ (v5 > 0x82)) & 1) == 0)) & 0xFB | (4
                                                                                      * (((v1 + 1) ^ ~(v5 > 0x82)) & 1))) ^ v1)))();
}

uint64_t sub_1B02DC580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  BOOL v24 = v20 != v22 || a19 != ((v19 - 765291036) & 0x2D9D6BE5) + 1355079513;
  return (*(uint64_t (**)(void))(v21 + 8 * ((1724 * v24) ^ v19)))();
}

uint64_t sub_1B02DC5D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  *(void *)(v24 - 144) = a20;
  *(void *)(v24 - 136) = a20;
  *(_DWORD *)(v24 - 120) = v23
                         + 104
                         + 1225351577 * (((~(v24 - 144) & 0x1CA1066C) - (~(v24 - 144) | 0x1CA1066D)) ^ 0x3F3BDE7B)
                         - 631;
  *(void *)(v24 - 112) = a21;
  *(void *)(v24 - 104) = a9;
  *(void *)(v24 - 128) = a22;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v22 + 8 * (v23 + 279)))(v24 - 144);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((255
                                              * ((((a18 - 1334526196) < 0x7FFFFFFF) ^ (((v23 + 104) ^ 0x32) + 41)) & 1)) ^ (v23 - 1718))))(v25);
}

void sub_1B02DC698()
{
}

void sub_1B02DC6FC()
{
}

uint64_t sub_1B02DC764(uint64_t a1, uint64_t a2, int a3)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((((v3 & 0x18) == (((a3 - 1127) | 0x184) ^ 0x385)) * (((a3 - 1607) | 0x108) ^ 0x1EE)) ^ a3)))();
}

uint64_t sub_1B02DC7B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,int a22,uint64_t a23,unsigned int a24,uint64_t a25)
{
  unsigned int v33 = 1178560073 * ((743035438 - (&a21 | 0x2C49D22E) + (&a21 | 0xD3B62DD1)) ^ 0x692255B3);
  a24 = (v25 + 1104) ^ v33;
  a23 = a18;
  a22 = v33 + 1531045867 * v30 + ((v25 - 36) ^ 0x8C) + 81977811;
  (*(void (**)(int *))(v32 + 8 * (v25 ^ 0xB09)))(&a21);
  unsigned int v34 = 1178560073 * ((&a21 & 0x68507647 | ~(&a21 | 0x68507647)) ^ 0x2D3BF1DA);
  a24 = (v25 + 1104) ^ v34;
  a23 = a18;
  a22 = v34 + 1531045867 * v29 + 81978470;
  (*(void (**)(int *))(v32 + 8 * (v25 ^ 0xB09)))(&a21);
  unsigned int v35 = 1178560073 * ((&a21 + 949611407 - 2 * (&a21 & 0x3899EB8F)) ^ 0x820D93ED);
  a25 = a14;
  a22 = v25 + 970 + v35;
  a23 = a18;
  a24 = v35 ^ ((v28 ^ 0x5735EFDE) - 320981066 + ((2 * v28) & 0xAE6BDFBC));
  (*(void (**)(int *))(v32 + 8 * (v25 ^ 0xB30)))(&a21);
  unsigned int v36 = 1178560073 * ((&a21 & 0xFC120CA | ~(&a21 | 0xFC120CA)) ^ 0x4AAAA757);
  a23 = a18;
  a22 = v25 + 970 + v36;
  a25 = v31;
  a24 = v36 ^ ((a16 ^ 0xDD54EFB7) + 1723807709 + ((2 * a16) & 0xBAA9DF6E));
  (*(void (**)(int *))(v32 + 8 * (v25 + 1840)))(&a21);
  unsigned int v37 = 1178560073 * ((&a21 + 1839421071 - 2 * (&a21 & 0x6DA3568F)) ^ 0xD7372EED);
  a22 = v25 + 970 + v37;
  a23 = a18;
  a25 = v27;
  a24 = v37 ^ ((v26 ^ 0xFDBDF7B4) + 1180053472 + ((2 * v26) & 0xFB7BEF68));
  uint64_t v38 = (*(uint64_t (**)(int *))(v32 + 8 * (v25 ^ 0xB30)))(&a21);
  return (*(uint64_t (**)(uint64_t))(v32 + 8 * ((208 * (a21 != 1904944996)) ^ v25)))(v38);
}

void sub_1B02DCAB0()
{
}

uint64_t sub_1B02DCB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(v9
                              + 8
                              * ((392
                                * (*(_DWORD *)(a8 + 72) == ((((v8 - 437) | 0x148) - 1000988364) ^ (v8 - 1619838923) & 0xF7AFFFF7))) | (v8 + 651))))();
}

uint64_t sub_1B02DCC08(uint64_t a1)
{
  return (*(uint64_t (**)(void))(v2 + 8 * ((1986 * (a1 + 1 == v3 + 64)) ^ v1)))();
}

uint64_t sub_1B02DCCB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  return (*(uint64_t (**)(void))(v8 + 8 * (((2 * (v9 + 1 == v10 + 32)) | (32 * (v9 + 1 == v10 + 32))) ^ a8)))();
}

uint64_t sub_1B02DCD90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return (*(uint64_t (**)(uint64_t))(v12
                                            + 8
                                            * (int)(((((*(void *)(v11 - 168) - 1174) | 0x500)
                                                    + ((*(void *)(v11 - 168) + 641386909) & 0xD9C5397F)
                                                    - 2799)
                                                   * (*(_DWORD *)(v11 - 152) == *(_DWORD *)(v11 - 160))) ^ *(void *)(v11 - 168))))(a11);
}

uint64_t sub_1B02DCDE8@<X0>(uint64_t a1@<X2>, int a2@<W8>)
{
  uint64_t v4 = v2;
  uint64_t v5 = a1 + v2;
  if ((unint64_t)(v5 + 1) > 0x38) {
    uint64_t v6 = v5 + 1;
  }
  else {
    uint64_t v6 = 56;
  }
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (((v6 - v4 + 2021940145 >= (unint64_t)((a2 + 613) ^ 0x71Bu) - 341)
                                * (((a2 + 613) | 9) - 1586)) ^ a2)))();
}

uint64_t sub_1B02DCE4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,int a50,int a51)
{
  return (*(uint64_t (**)(void))(v53
                              + 8
                              * ((54
                                * ((LODWORD(STACK[0x41C]) ^ v51) != ((53 * ((v52 - 24888281) & 0x17BBFBF ^ 0x394)) ^ 0xBCD24EB0)
                                                                  + a51)) ^ v52)))();
}

void sub_1B02DCEC0()
{
  int v6 = ((((v5 - 136) | 0xC2AB5DA) - ((v5 - 136) & 0xC2AB5DA)) ^ 0xECB6D7F1) * v0;
  *(_DWORD *)(v5 - 136) = v6 + v2 + 1543;
  *(_DWORD *)(v5 - 120) = (v3 - 770744877) ^ v6;
  *(void *)(v5 - 128) = v4;
  (*(void (**)(uint64_t))(v1 + 8 * (v2 ^ 0x987)))(v5 - 136);
  JUMPOUT(0x1B02DCF30);
}

void sub_1B02DCFC4()
{
}

void sub_1B02DCFD0(uint64_t a1, uint64_t a2)
{
  __asm { BRAA            X10, X17 }
}

uint64_t sub_1B02DD01C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unsigned int a6, unsigned int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  HIDWORD(a21) = 987723168;
  uint64_t v30 = *(void *)(a2 + 8);
  unsigned int v31 = 628203409 * (((&a22 | 0x1FCD66E8) - (&a22 & 0x1FCD66E8)) ^ 0x9D456ADB);
  int v32 = 186887302 - v31 + *(_DWORD *)(a2 + 4);
  LODWORD(a24) = v28 - v31 + 266;
  HIDWORD(a24) = v32;
  a25 = a15;
  a22 = a14;
  a23 = a12;
  a27 = v30;
  a28 = a13;
  unint64_t v38 = __PAIR64__(a6, a7);
  uint64_t v36 = (*(uint64_t (**)(uint64_t *))(v29 + 8 * (v28 ^ 0x980)))(&a22);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void, void, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((1809 * (a26 == ((v28 + 866) ^ 0x718B2321))) ^ v28)))(v36, a2, 44587773, 1400183661, a5, HIDWORD(v38), v38, a8, a9, a10, a11, a12, a13, a14, a15, v38, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28);
}

void sub_1B02DD128()
{
}

uint64_t sub_1B02DD1EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  STACK[0x558] = 0;
  int v71 = 235795823 * ((~((v70 - 192) | 0x5119DB49) + ((v70 - 192) & 0x5119DB49)) ^ 0x3A4B6DEF);
  *(void *)(v70 - 184) = 0x2C2F364FA24C5109;
  *(void *)(v70 - 176) = a67;
  *(_DWORD *)(v70 - 156) = v68 - v71 - 674;
  *(void *)(v70 - 168) = a68;
  *(_DWORD *)(v70 - 192) = v71 ^ 0x1474BF4F;
  uint64_t v72 = (*(uint64_t (**)(uint64_t))(v69 + 8 * (v68 + 578)))(v70 - 192);
  return (*(uint64_t (**)(uint64_t))(v69
                                            + 8
                                            * ((((v68 ^ 0xAB ^ (*(_DWORD *)(v70 - 160) == 1904944996)) & 1)
                                              * (((v68 - 883910542) & 0x34AF64DB) - 1082)) ^ v68)))(v72);
}

void sub_1B02DD2D4()
{
}

void sub_1B02DD2E0()
{
}

void sub_1B02DD2F0()
{
  STACK[0x440] = *(void *)(v0 + 8 * (int)(STACK[0x2F0] - 901));
  JUMPOUT(0x1B02DD30CLL);
}

void sub_1B02DD318()
{
  v0[31] = 0x52BC1C127FF78995;
  v0[32] = v0 + 33;
  v0[65] = 0x52BC1C127FF78995;
  v0[66] = v0 + 67;
  STACK[0x2A0] = (unint64_t)v0 + 0x6155FFFFEB445ECDLL;
  v0[99] = 0x52BC1C127FF78995;
  v0[100] = v0 + 101;
  STACK[0x2A8] = (unint64_t)v0 + 0x6155FFFFEB445FDDLL;
  v0[133] = 0x52BC1C127FF78995;
  v0[134] = v0 + 135;
  STACK[0x2B8] = (unint64_t)v0 + 0x6155FFFFEB4460EDLL;
  v0[167] = 0x52BC1C127FF78995;
  v0[168] = v0 + 169;
  STACK[0x2C0] = (unint64_t)v0 + 0x6155FFFFEB4461FDLL;
  unint64_t v6 = STACK[0x510] + 4;
  LODWORD(STACK[0x2E8]) = 2 * v3;
  LODWORD(STACK[0x2D0]) = v4 + 1833;
  int v7 = 1224239923 * ((-216727799 - ((v5 - 192) | 0xF314FF09) + ((v5 - 192) | 0xCEB00F6)) ^ 0xFE58FD21);
  *(_DWORD *)(v5 - 176) = (v3 ^ 0xAAF91899) - v7 + 2147472267 + ((2 * v3) & 0xB6E47FFA ^ 0xA2044EC8);
  *(void *)(v5 - 168) = (char *)v0 + 0x6155FFFFEB445DBDLL;
  *(void *)(v5 - 184) = v6;
  *(_DWORD *)(v5 - 188) = (v4 + 1833) ^ v7;
  uint64_t v8 = 8 * (v4 + 2154);
  STACK[0x2D8] = v8;
  (*(void (**)(uint64_t))(v2 + v8))(v5 - 192);
  uint64_t v9 = v6 + v1;
  STACK[0x278] = v6 + v1;
  LODWORD(v6) = STACK[0x2E8];
  int v10 = 1224239923 * ((v5 - 622119360 - 2 * ((v5 - 192) & 0xDAEB3700)) ^ 0x2858CAD7);
  *(_DWORD *)(v5 - 188) = LODWORD(STACK[0x2D0]) ^ v10;
  *(void *)(v5 - 168) = STACK[0x2A0];
  *(_DWORD *)(v5 - 176) = (v6 & 0xF6EFEF10 ^ 0xE2064E00) - v10 + ((((v4 + 563) | 0x80) + 184339815) ^ v3) - 537256960;
  *(void *)(v5 - 184) = v9;
  (*(void (**)(uint64_t))(v2 + STACK[0x2D8]))(v5 - 192);
  unint64_t v11 = STACK[0x278] + v1;
  STACK[0x2A0] = v11;
  int v12 = v6 & 0xFFFC77DC ^ 0xE31446C8;
  int v13 = 1224239923 * (((v5 - 192) & 0x930A1A47 | ~((v5 - 192) | 0x930A1A47)) ^ 0x9E46186F);
  LODWORD(v6) = STACK[0x2D0];
  *(_DWORD *)(v5 - 188) = LODWORD(STACK[0x2D0]) ^ v13;
  *(void *)(v5 - 168) = STACK[0x2A8];
  *(_DWORD *)(v5 - 176) = (v3 ^ 0x8E751C8A) - v13 + 1534318490 + v12;
  *(void *)(v5 - 184) = v11;
  uint64_t v14 = 8 * (v4 ^ 0x9EE);
  STACK[0x2A8] = v14;
  (*(void (**)(uint64_t))(v2 + v14))(v5 - 192);
  uint64_t v15 = STACK[0x2A0] + v1;
  unsigned int v16 = STACK[0x2E8] & 0xB7ED375E ^ 0xA3040648;
  int v17 = 1224239923 * (((v5 - 192) & 0xE2A24F85 | ~((v5 - 192) | 0xE2A24F85)) ^ 0xEFEE4DAD);
  *(void *)(v5 - 168) = STACK[0x2B8];
  *(void *)(v5 - 184) = v15;
  *(_DWORD *)(v5 - 188) = v6 ^ v17;
  *(_DWORD *)(v5 - 176) = (v3 ^ 0xAA7DBCCB) - v17 + 2138798041 + v16;
  (*(void (**)(uint64_t))(v2 + STACK[0x2A8]))(v5 - 192);
  unsigned int v18 = STACK[0x2E8] & 0xFFFE3F9A ^ 0xE3160E88;
  int v19 = 1224239923 * ((((2 * (v5 - 192)) | 0x2A591B26) - (v5 - 192) - 355241363) ^ 0xE79F7044);
  *(_DWORD *)(v5 - 188) = v6 ^ v19;
  *(_DWORD *)(v5 - 176) = (v3 ^ 0xE7438A9) - v19 - 613223493 + v18;
  *(void *)(v5 - 184) = v15 + v1;
  *(void *)(v5 - 168) = STACK[0x2C0];
  (*(void (**)(uint64_t))(v2 + STACK[0x2D8]))(v5 - 192);
  JUMPOUT(0x1B02DD750);
}

uint64_t sub_1B02DD790@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v1 + 8 * ((204 * (a1 + 1 == v2 + 4)) ^ v3)))();
}

void sub_1B02DD86C()
{
}

uint64_t sub_1B02DD8C4@<X0>(uint64_t a1@<X2>, char a2@<W4>, int a3@<W8>)
{
  unsigned int v8 = *(_DWORD *)(v7 - 252 + ((v5 + a3) & 0xFFFFFFFC) + 72);
  *(unsigned char *)(a1 + (v5 + a3)) = v8 ^ (v4 - a2 + 38);
  *(unsigned char *)(a1 + (v5 + a3 + 1)) = (BYTE1(v8) ^ 7) + (~(v8 >> 7) | 0x5F) - 47;
  *(unsigned char *)(a1 + (v5 + a3 + 2)) = (BYTE2(v8) ^ 0x4A)
                                               - 2 * ((BYTE2(v8) ^ 0x4A) & 0x55 ^ BYTE2(v8) & 5)
                                               - 48;
  *(unsigned char *)(a1 + (v5 + a3 + 3)) = (HIBYTE(v8) ^ 0x74)
                                               - 2 * ((HIBYTE(v8) ^ 0x74) & 0x58 ^ HIBYTE(v8) & 8)
                                               - 48;
  unsigned int v9 = *(_DWORD *)(v7 - 160) + 648671688;
  BOOL v10 = v9 < v3;
  BOOL v11 = v5 + 599306455 < v9;
  if (v5 + 599306455 < v3 != v10) {
    BOOL v11 = v10;
  }
  return (*(uint64_t (**)(void))(v6 + 8 * ((233 * !v11) ^ v4)))();
}

uint64_t sub_1B02DD9C4(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  return (*(uint64_t (**)(void))(v4
                              + 8
                              * ((1928
                                * ((((a4 - 25365122) & 0xBBCB9FFE ^ 0x1767FB8) & (2 * (*(unsigned __int8 *)(v6 + 8) - 1)))
                                 + ((*(unsigned __int8 *)(v6 + 8) - 1) ^ v5) == v5)) ^ a4)))();
}

uint64_t sub_1B02DDA20(double a1, double a2, double a3, double a4, int8x16_t a5, int8x16_t a6, uint64_t a7, uint64_t a8, int a9)
{
  unsigned int v15 = v13 - 2095036160 + v12;
  uint64_t v16 = v10 + v15;
  int8x16_t v17 = vrev64q_s8(*(int8x16_t *)(v16 - 15));
  int8x16_t v18 = vextq_s8(v17, v17, 8uLL);
  int8x16_t v19 = vrev64q_s8(*(int8x16_t *)(v16 - 31));
  int8x16_t v20 = vextq_s8(v19, v19, 8uLL);
  uint64_t v21 = v9 + v15;
  int8x16_t v22 = vrev64q_s8(vaddq_s8(vsubq_s8(v18, vandq_s8(vaddq_s8(v18, v18), a5)), a6));
  *(int8x16_t *)(v21 - 15) = vextq_s8(v22, v22, 8uLL);
  int8x16_t v23 = vrev64q_s8(vaddq_s8(vsubq_s8(v20, vandq_s8(vaddq_s8(v20, v20), a5)), a6));
  *(int8x16_t *)(v21 - 31) = vextq_s8(v23, v23, 8uLL);
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((((v11 & 0xFFFFFFE0) == 32) * (((a9 - 209934573) & 0xC8357AF) + 810)) ^ (a9 - 209934573) & 0xC8357AFu)))();
}

uint64_t sub_1B02DDACC()
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((1050 * (v2 + v1 + 171 < ((v0 - 850) ^ 0x42u))) ^ v0)))();
}

void sub_1B02DDB00()
{
}

uint64_t sub_1B02DDB0C()
{
  return (*(uint64_t (**)(void))(v3 + 8 * (((v2 + ((71 * (v2 ^ 0x2B3)) ^ 0x704) - 624) * (v0 == v1)) ^ v2)))();
}

uint64_t sub_1B02DDB5C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return (*(uint64_t (**)(uint64_t))(v23
                                            + 8
                                            * (((((a2 ^ 0x79E) + 320) ^ 0x17F)
                                              * (*(_DWORD *)(v24 - 140) == *(_DWORD *)(v24 - 144))) ^ a2)))(a23);
}

uint64_t sub_1B02DDB94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  return (*(uint64_t (**)(uint64_t))(v10
                                            + 8
                                            * ((((a7 + 323 * (v9 ^ 0x1B5) - 1626) ^ ((v9 + 671301437) | 0x258B202))
                                              * (v7 == v8)) | v9)))(2726248035);
}

void sub_1B02DDBEC()
{
}

uint64_t sub_1B02DDC00()
{
  int v6 = ((((v5 - 120) | 0x4921454F) + (~(v5 - 120) | 0xB6DEBAB0)) ^ 0xA9BD2765) * v4;
  *(_DWORD *)(v5 - 120) = v6 + v0 + 292;
  *(_DWORD *)(v5 - 104) = (v0 - 1096 + v3 - 1267298490) ^ v6;
  *(void *)(v5 - 112) = v2;
  uint64_t v7 = (*(uint64_t (**)(uint64_t))(v1 + 8 * (v0 + 676)))(v5 - 120);
  return sub_1B02DDC74(v7);
}

uint64_t sub_1B02DDC74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  *(_DWORD *)(v24 - 120) = v22 + ((((v24 - 120) | 0x33FA9591) + (~(v24 - 120) | 0xCC056A6E)) ^ 0xD366F7BB) * v21 + 1041;
  *(void *)(v24 - 112) = a19;
  *(void *)(v24 - 104) = v20;
  uint64_t v25 = (*(uint64_t (**)(uint64_t))(v19 + 8 * (v22 ^ 0x919)))(v24 - 120);
  BOOL v26 = *(_DWORD *)(v24 - 116) > ((11 * (v22 ^ 0x198)) ^ (v23 + 2472));
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * (((2 * v26) | (4 * v26)) ^ v22)))(v25);
}

uint64_t sub_1B02DDD14()
{
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((100
                                * (*(_DWORD *)(v3
                                             + 48
                                             * (int)(((35 * (v1 ^ 0x1F1)) ^ ((v1 ^ 0x4DA) - 545826090) & 0xFF9BABAF ^ 0x77CC96C0)
                                                   + v0)
                                             + 36) == v0)) ^ v1 ^ 0x4DA)))();
}

void sub_1B02DDD8C()
{
}

uint64_t sub_1B02DDDA4()
{
  uint64_t v3 = (*(uint64_t (**)(void))(v1 + 8 * (v0 ^ 0xAB5)))();
  return (*(uint64_t (**)(uint64_t))(v1 + 8
                                                 * (((159 * (v0 ^ 0x386) + 183) * (v2 == 1904944996)) ^ (v0 - 424))))(v3);
}

uint64_t sub_1B02DDDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (int)((511
                                                   * (((a19 - 1400183651) ^ 0x7FFFF577FEC6FCFDLL)
                                                    - 0x7FFFF577FC1EA20ALL
                                                    + ((2 * (a19 - 1400183651)) & 0x1FD8DF9FALL) != a5)) ^ (v19 - 2085646809) & 0x9D3D66FF)))(0x2A8E1CD60C1EF3DALL);
}

void sub_1B02DDEC4()
{
}

void sub_1B02DDECC()
{
  *(_DWORD *)(v2 - 128) = v1;
  *(_DWORD *)(v2 - 116) = v0 ^ 0xC72;
  JUMPOUT(0x1B02DED44);
}

void sub_1B02E11A4()
{
}

uint64_t sub_1B02E11B0()
{
  return sub_1B02E11B8();
}

uint64_t sub_1B02E11B8@<X0>(unint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(v3 + 8 * ((500 * (v1 + 3 >= a1)) ^ v2)))();
}

void sub_1B02E122C()
{
}

uint64_t sub_1B02E1234@<X0>(uint64_t a1@<X6>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t (*a23)(uint64_t))
{
  *(unsigned char *)(a1 + (a2 + 2)) = *(unsigned char *)(v25 + (v24 - 1882164557 + v23 - 1353));
  int v28 = 628203409 * ((~((v27 - 160) | 0x7D52706F) + ((v27 - 160) & 0x7D52706F)) ^ 0x2583A3);
  *(void *)(v27 - 160) = a22;
  *(_DWORD *)(v27 - 152) = v28 + v23 - 1353 + 1906;
  *(_DWORD *)(v27 - 148) = 591534416 - v28;
  uint64_t v29 = (*(uint64_t (**)(uint64_t))(v26 + 8 * (v23 + 899)))(v27 - 160);
  return a23(v29);
}

uint64_t sub_1B02E12D0(uint64_t a1)
{
  uint64_t v15 = *MEMORY[0x1E4F143B8];
  int v2 = 628203409 * (((a1 | 0x79E46C7E) - a1 + (a1 & 0x861B9381)) ^ 0xFB6C604D);
  int v3 = *(_DWORD *)(a1 + 12) + v2;
  int v4 = *(_DWORD *)(a1 + 28) ^ v2;
  uint64_t v5 = *(void *)a1;
  int v6 = 552045963 * (*(_DWORD *)(a1 + 8) + v2) + 571341214;
  unsigned int v7 = 1225351577 * (&v9 ^ 0x239AD816);
  uint64_t v9 = *(void *)(a1 + 16);
  unsigned int v11 = (v6 ^ 0x6F3FB7FB) - v7 + ((2 * v6) & 0xDE7F6FF6) - 739378480;
  uint64_t v12 = v5;
  int v13 = 715197155 * v4 - ((356652486 * v4 + 411987506) & 0x1C5C2D90) - v7 + 1517637089;
  int v14 = v7 ^ (v3 + 2024873984);
  uint64_t result = (*(uint64_t (**)(uint64_t *))((char *)*(&off_1F08D3590 + (int)(v3 ^ 0x874EE302))
                                                + 8 * v3
                                                + 0x3C5892F2CLL))(&v9);
  *(_DWORD *)(a1 + 24) = v10;
  return result;
}

uint64_t sub_1B02E146C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(qword_1F08D39C8 + 8 * ((1315 * (*(_DWORD *)(a2 + 4) == 1400183652)) ^ 0x275u) - 12))();
}

unsigned char *sub_1B02E14A8(unsigned char *result, unsigned int a2, unint64_t a3)
{
  unint64_t v3 = -(int)result & 7;
  if (v3 > a3) {
    LODWORD(v3) = a3;
  }
  switch((int)v3)
  {
    case 1:
      goto LABEL_10;
    case 2:
      goto LABEL_9;
    case 3:
      goto LABEL_8;
    case 4:
      goto LABEL_7;
    case 5:
      goto LABEL_6;
    case 6:
      goto LABEL_5;
    case 7:
      *result++ = a2;
LABEL_5:
      *result++ = a2;
LABEL_6:
      *result++ = a2;
LABEL_7:
      *result++ = a2;
LABEL_8:
      *result++ = a2;
LABEL_9:
      *result++ = a2;
LABEL_10:
      *result++ = a2;
      break;
    default:
      break;
  }
  unint64_t v4 = a3 - v3;
  if (v4 >= 8)
  {
    uint64_t v5 = 0x101010101010101 * a2;
    unint64_t v6 = ((v4 >> 3) + 7) >> 3;
    switch((v4 >> 3) & 7)
    {
      case 1uLL:
        goto LABEL_20;
      case 2uLL:
        goto LABEL_19;
      case 3uLL:
        goto LABEL_18;
      case 4uLL:
        goto LABEL_17;
      case 5uLL:
        goto LABEL_16;
      case 6uLL:
        goto LABEL_15;
      case 7uLL:
        goto LABEL_14;
      default:
        do
        {
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_14:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_15:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_16:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_17:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_18:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_19:
          *(void *)uint64_t result = v5;
          result += 8;
LABEL_20:
          *(void *)uint64_t result = v5;
          result += 8;
          --v6;
        }
        while (v6);
        break;
    }
  }
  switch(v4 & 7)
  {
    case 1uLL:
      goto LABEL_28;
    case 2uLL:
      goto LABEL_27;
    case 3uLL:
      goto LABEL_26;
    case 4uLL:
      goto LABEL_25;
    case 5uLL:
      goto LABEL_24;
    case 6uLL:
      goto LABEL_23;
    case 7uLL:
      *result++ = a2;
LABEL_23:
      *result++ = a2;
LABEL_24:
      *result++ = a2;
LABEL_25:
      *result++ = a2;
LABEL_26:
      *result++ = a2;
LABEL_27:
      *result++ = a2;
LABEL_28:
      *uint64_t result = a2;
      break;
    default:
      return result;
  }
  return result;
}

os_log_t _ML3LogCategoryDefault()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Default");

  return v0;
}

os_log_t _ML3LogCategoryDefault_Oversize()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Default_Oversize");

  return v0;
}

os_log_t _ML3LogCategoryWriter()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Writer");

  return v0;
}

os_log_t _ML3LogCategoryService()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Service");

  return v0;
}

os_log_t _ML3LogCategoryMigration()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Migration");

  return v0;
}

os_log_t _ML3LogCategoryValidation()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Validation");

  return v0;
}

os_log_t _ML3LogCategoryCacheManagement()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "CacheManagement");

  return v0;
}

os_log_t _ML3LogCategoryLibrary()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Library");

  return v0;
}

os_log_t _ML3LogCategoryImport()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "Import");

  return v0;
}

os_log_t _ML3LogCategoryMultiUser()
{
  os_log_t v0 = os_log_create("com.apple.amp.medialibrary", "MultiUser");

  return v0;
}

void sub_1B02E1DD4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose_(uint64_t a1)
{
}

void sub_1B02E20BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t ML3DAAPCodeForImportPropertyKey(uint64_t a1)
{
  int v2 = 1634025833;
  if ((int)a1 > 0x8000000)
  {
    if ((int)a1 > 201326592)
    {
      if ((int)a1 > 301989888)
      {
        if ((int)a1 <= 369098752)
        {
          switch((int)a1)
          {
            case 301989889:
LABEL_40:
              unsigned __int16 v4 = 24946;
              return v4 | 0x61730000u;
            case 301989890:
LABEL_53:
              unsigned __int16 v4 = 29537;
              return v4 | 0x61730000u;
            case 301989891:
            case 301989892:
            case 301989894:
            case 301989895:
            case 301989896:
            case 301989897:
            case 301989898:
            case 301989900:
            case 301989902:
              goto LABEL_208;
            case 301989893:
              return (v2 - 32);
            case 301989899:
              return 1634888036;
            case 301989901:
LABEL_52:
              unsigned __int16 v5 = 16741;
              return v5 | 0x616A0000u;
            case 301989903:
LABEL_49:
              int v6 = 1634036850;
              return v6 | 1u;
            case 301989904:
LABEL_50:
              unsigned __int16 v7 = 27762;
              return v7 | 0x61650000u;
            case 301989905:
              goto LABEL_9;
            default:
              switch((int)a1)
              {
                case 318767105:
                  goto LABEL_40;
                case 318767106:
                  goto LABEL_53;
                case 318767107:
LABEL_63:
                  unsigned __int16 v7 = 21326;
                  return v7 | 0x61650000u;
                case 318767108:
LABEL_64:
                  int v8 = 18;
LABEL_65:
                  unsigned __int16 v10 = 29537;
LABEL_108:
                  int v15 = v10 | 0x61730000;
                  return v15 | v8;
                case 318767111:
LABEL_51:
                  unsigned __int16 v7 = 16745;
                  return v7 | 0x61650000u;
                case 318767118:
                  goto LABEL_52;
                case 318767120:
                  goto LABEL_9;
                default:
                  goto LABEL_208;
              }
          }
        }
        switch((int)a1)
        {
          case 369098753:
            return 1936746852;
          case 369098754:
            uint64_t result = 1936746593;
            break;
          case 369098755:
            uint64_t result = 1936748129;
            break;
          case 369098756:
            uint64_t result = 1936748661;
            break;
          case 369098757:
            uint64_t result = 1936748660;
            break;
          case 369098758:
            uint64_t result = 1936749167;
            break;
          case 369098759:
            uint64_t result = 1936747625;
            break;
          case 369098760:
            uint64_t result = 1936746860;
            break;
          default:
            switch((int)a1)
            {
              case 385875969:
                uint64_t result = 1634353740;
                break;
              case 385875970:
                uint64_t result = 1634353774;
                break;
              case 385875971:
                uint64_t result = 1634353761;
                break;
              case 385875972:
                uint64_t result = 1634353764;
                break;
              case 385875973:
                uint64_t result = 1634353779;
                break;
              case 385875974:
LABEL_9:
                uint64_t result = 0;
                break;
              default:
                goto LABEL_208;
            }
            break;
        }
      }
      else if ((int)a1 > 0x10000000)
      {
        if ((int)a1 <= 285212672)
        {
          switch(a1)
          {
            case 0x10000001:
              return 1936746852;
            case 0x10000002:
              int v8 = 17;
LABEL_231:
              int v15 = 1634357828;
              return v15 | v8;
            case 0x10000003:
              unsigned __int16 v5 = 21060;
              return v5 | 0x616A0000u;
            default:
LABEL_208:
              uint64_t v16 = [MEMORY[0x1E4F28B00] currentHandler];
              int8x16_t v17 = [NSString stringWithUTF8String:"uint32_t ML3DAAPCodeForImportPropertyKey(MLImportPropertyKey)"];
              objc_msgSend(v16, "handleFailureInFunction:file:lineNumber:description:", v17, @"ML3DAAPImportUtils.m", 461, @"ML3DAAPCodeForImportPropertyKey - unhandled property key %x", a1);

              return 0;
          }
        }
        else
        {
          switch((int)a1)
          {
            case 285212673:
LABEL_31:
              uint64_t result = 1634951532;
              break;
            case 285212674:
LABEL_61:
              int v8 = 20;
              goto LABEL_65;
            case 285212677:
            case 285212678:
            case 285212682:
            case 285212687:
              goto LABEL_9;
            case 285212680:
              goto LABEL_49;
            case 285212681:
              uint64_t result = 1634952047;
              break;
            case 285212683:
LABEL_68:
              int v11 = 1634030414;
LABEL_200:
              uint64_t result = (v11 + 7);
              break;
            case 285212693:
              goto LABEL_52;
            case 285212695:
              goto LABEL_50;
            case 285212696:
              goto LABEL_51;
            case 285212697:
LABEL_69:
              uint64_t result = 1634353513;
              break;
            case 285212699:
LABEL_62:
              int v9 = 1634951538;
LABEL_255:
              uint64_t result = (v9 - 17);
              break;
            default:
              goto LABEL_208;
          }
        }
      }
      else if ((int)a1 <= 234881024)
      {
        switch((int)a1)
        {
          case 218103810:
          case 218103811:
            goto LABEL_9;
          case 218103812:
            uint64_t result = 1634759535;
            break;
          case 218103813:
            int v11 = 1634353509;
            goto LABEL_200;
          case 218103814:
            uint64_t result = 1634357356;
            break;
          default:
            if (a1 != 201326593 && a1 != 201326594) {
              goto LABEL_208;
            }
            goto LABEL_9;
        }
      }
      else
      {
        switch((int)a1)
        {
          case 234881025:
          case 234881026:
          case 234881027:
          case 234881034:
            goto LABEL_9;
          case 234881028:
            uint64_t result = 1634354005;
            break;
          case 234881029:
            uint64_t result = 1634357365;
            break;
          case 234881030:
LABEL_55:
            uint64_t result = 1835624804;
            break;
          case 234881031:
            goto LABEL_208;
          case 234881032:
            goto LABEL_51;
          case 234881033:
            uint64_t result = 1634362194;
            break;
          default:
            if (a1 != 251658243) {
              goto LABEL_208;
            }
            uint64_t result = 1634357859;
            break;
        }
      }
    }
    else if ((int)a1 <= 184549376)
    {
      switch((int)a1)
      {
        case 167772161:
          goto LABEL_40;
        case 167772162:
          goto LABEL_63;
        case 167772163:
          goto LABEL_62;
        case 167772164:
          goto LABEL_31;
        case 167772165:
          uint64_t result = 1634952048;
          break;
        case 167772166:
          uint64_t result = 1634953070;
          break;
        case 167772167:
          goto LABEL_53;
        case 167772168:
          goto LABEL_64;
        case 167772169:
          int v14 = 1634956129;
LABEL_176:
          uint64_t result = (v14 + 11);
          break;
        case 167772170:
          goto LABEL_61;
        case 167772171:
          uint64_t result = 1634956131;
          break;
        case 167772172:
        case 167772189:
          goto LABEL_208;
        case 167772173:
        case 167772187:
        case 167772188:
          return 0;
        case 167772174:
          uint64_t result = 1936017732;
          break;
        case 167772175:
          uint64_t result = 1936015689;
          break;
        case 167772176:
          uint64_t result = 1936020041;
          break;
        case 167772177:
          uint64_t result = 1936020553;
          break;
        case 167772178:
          int v13 = 1936015689;
LABEL_183:
          uint64_t result = v13 | 0x200u;
          break;
        case 167772179:
          uint64_t result = 1936017225;
          break;
        case 167772180:
          return (v2 - 32);
        case 167772181:
          uint64_t result = 1634357345;
          break;
        case 167772182:
          uint64_t result = 1634361708;
          break;
        case 167772183:
LABEL_60:
          uint64_t result = 1634026324;
          break;
        case 167772184:
          uint64_t result = 1634354547;
          break;
        case 167772185:
          uint64_t result = 1634954354;
          break;
        case 167772186:
          int v6 = 1634951538;
          return v6 | 1u;
        case 167772190:
          uint64_t result = 1634354532;
          break;
        case 167772191:
          uint64_t result = 1634355536;
          break;
        default:
          switch((int)a1)
          {
            case 150994945:
            case 150994946:
            case 150994947:
              return 0;
            case 150994948:
              uint64_t result = 1634364537;
              break;
            case 150994949:
              uint64_t result = 1634358355;
              break;
            default:
              if (a1 != 134217729) {
                goto LABEL_208;
              }
              uint64_t result = 1634026308;
              break;
          }
          break;
      }
    }
    else
    {
      switch((int)a1)
      {
        case 184549377:
          return 1836082546;
        case 184549378:
          return 1936020297;
        case 184549379:
          return 0;
        case 184549380:
          return 1835362657;
        case 184549381:
          return 1634356309;
        case 184549382:
          return 1835362672;
        case 184549383:
        case 184549385:
        case 184549390:
        case 184549393:
        case 184549394:
        case 184549395:
        case 184549396:
        case 184549397:
        case 184549398:
        case 184549399:
        case 184549400:
        case 184549401:
        case 184549402:
        case 184549403:
        case 184549404:
        case 184549405:
        case 184549406:
        case 184549407:
        case 184549412:
        case 184549413:
        case 184549414:
        case 184549415:
        case 184549416:
        case 184549426:
        case 184549430:
        case 184549431:
        case 184549433:
        case 184549434:
        case 184549435:
        case 184549436:
        case 184549437:
        case 184549438:
        case 184549439:
        case 184549440:
        case 184549441:
        case 184549442:
        case 184549446:
        case 184549449:
        case 184549454:
        case 184549457:
        case 184549458:
          goto LABEL_9;
        case 184549384:
          return 1835626093;
        case 184549386:
          return 1634037860;
        case 184549387:
          return 1634357327;
        case 184549388:
          return 1634357317;
        case 184549389:
          return 1634037859;
        case 184549391:
          goto LABEL_49;
        case 184549392:
          return 1836082031;
        case 184549408:
          goto LABEL_55;
        case 184549409:
          return 1634029683;
        case 184549410:
          return 1634029682;
        case 184549417:
          int v2 = 1634353509;
          goto LABEL_140;
        case 184549418:
          int v8 = 273;
          goto LABEL_231;
        case 184549419:
          return 1634358088;
        case 184549420:
          return 1634363766;
        case 184549422:
          return 1634353481;
        case 184549423:
          return 1634353486;
        case 184549424:
          return 1634353525;
        case 184549425:
          return 1634357833;
        case 184549427:
          return 1634358115;
        case 184549428:
          return 1634358128;
        case 184549429:
          return 1634366316;
        case 184549432:
LABEL_140:
          uint64_t result = (v2 + 3810);
          break;
        case 184549443:
          uint64_t result = 1634358889;
          break;
        case 184549444:
          int v8 = 1066;
          goto LABEL_231;
        case 184549445:
          int v8 = 1072;
          goto LABEL_231;
        case 184549447:
          unsigned __int16 v5 = 29518;
          return v5 | 0x616A0000u;
        case 184549448:
          uint64_t result = 1634358856;
          break;
        case 184549450:
          goto LABEL_60;
        case 184549451:
          uint64_t result = 1634353480;
          break;
        case 184549452:
LABEL_67:
          uint64_t result = 1970039140;
          break;
        case 184549453:
          uint64_t result = 1634362473;
          break;
        case 184549455:
          uint64_t result = 1634357315;
          break;
        case 184549456:
          uint64_t result = 1634358091;
          break;
        case 184549459:
          uint64_t result = 1634357332;
          break;
        case 184549460:
          goto LABEL_50;
        case 184549461:
          uint64_t result = 1634353490;
          break;
        case 184549462:
          int v13 = 1634353509;
          goto LABEL_183;
        case 184549463:
          uint64_t result = 1634353999;
          break;
        case 184549464:
          int v14 = 1634365541;
          goto LABEL_176;
        case 184549465:
          uint64_t result = 1634354025;
          break;
        case 184549466:
          uint64_t result = 1634354040;
          break;
        case 184549467:
          uint64_t result = 1634357840;
          break;
        case 184549468:
          uint64_t result = 1634354035;
          break;
        default:
          goto LABEL_208;
      }
    }
  }
  else
  {
    uint64_t result = 1634028907;
    if ((int)a1 > 83886080)
    {
      switch((int)a1)
      {
        case 100663297:
          uint64_t result = 1634030409;
          break;
        case 100663298:
          uint64_t result = 1634026313;
          break;
        case 100663299:
          uint64_t result = 1634027337;
          break;
        case 100663300:
          uint64_t result = 1634029641;
          break;
        case 100663301:
          uint64_t result = 1634030406;
          break;
        case 100663302:
          uint64_t result = 1835625572;
          break;
        case 100663303:
          unsigned __int16 v7 = 29807;
          return v7 | 0x61650000u;
        case 100663304:
        case 100663306:
        case 100663310:
        case 100663315:
        case 100663322:
        case 100663324:
        case 100663326:
        case 100663327:
        case 100663328:
        case 100663334:
        case 100663340:
        case 100663341:
        case 100663342:
        case 100663345:
        case 100663346:
        case 100663347:
        case 100663353:
          return 0;
        case 100663305:
        case 100663309:
          uint64_t result = 1835624804;
          break;
        case 100663307:
          uint64_t result = 1634026317;
          break;
        case 100663308:
          return 1936020297;
        case 100663311:
        case 100663316:
          uint64_t result = 1634026582;
          break;
        case 100663312:
          uint64_t result = 1634026578;
          break;
        case 100663313:
          uint64_t result = 1634026572;
          break;
        case 100663314:
          uint64_t result = 1634027073;
          break;
        case 100663317:
          uint64_t result = 1634026576;
          break;
        case 100663318:
          uint64_t result = 1634028337;
          break;
        case 100663319:
          uint64_t result = 1634028338;
          break;
        case 100663320:
          uint64_t result = 1634952304;
          break;
        case 100663321:
          uint64_t result = 1634952306;
          break;
        case 100663323:
          uint64_t result = 1634955381;
          break;
        case 100663325:
          uint64_t result = 1634031684;
          break;
        case 100663329:
        case 100663335:
          goto LABEL_208;
        case 100663330:
          uint64_t result = 1634354517;
          break;
        case 100663331:
          int v8 = 1064;
          goto LABEL_231;
        case 100663332:
          int v8 = 1067;
          goto LABEL_231;
        case 100663333:
          int v8 = 1056;
          goto LABEL_231;
        case 100663336:
          uint64_t result = 1634365554;
          break;
        case 100663337:
          uint64_t result = 1634366305;
          break;
        case 100663338:
        case 100663349:
          unsigned __int16 v5 = 28773;
          return v5 | 0x616A0000u;
        case 100663339:
          uint64_t result = 1634028873;
          break;
        case 100663343:
          uint64_t result = 1634353493;
          break;
        case 100663344:
          uint64_t result = 1835103852;
          break;
        case 100663348:
          goto LABEL_69;
        case 100663350:
          goto LABEL_67;
        case 100663351:
          uint64_t result = 1634366049;
          break;
        case 100663352:
          uint64_t result = 1634361697;
          break;
        case 100663354:
          uint64_t result = 1634358849;
          break;
        case 100663355:
          uint64_t result = 1634362217;
          break;
        case 100663356:
          uint64_t result = 1634365539;
          break;
        case 100663357:
          uint64_t result = 1634366579;
          break;
        default:
          switch((int)a1)
          {
            case 117440513:
              uint64_t result = 1634027588;
              break;
            case 117440514:
              return result;
            case 117440515:
              uint64_t result = 1634027587;
              break;
            case 117440516:
              goto LABEL_68;
            case 117440517:
              uint64_t result = 1634026830;
              break;
            case 117440518:
              uint64_t result = 1634029134;
              break;
            case 117440519:
              uint64_t result = 1634026322;
              break;
            case 117440520:
              uint64_t result = 1634028888;
              break;
            case 117440521:
            case 117440522:
            case 117440523:
            case 117440524:
            case 117440525:
            case 117440526:
            case 117440527:
            case 117440532:
            case 117440534:
            case 117440539:
            case 117440547:
            case 117440548:
            case 117440549:
            case 117440550:
              return 0;
            case 117440528:
              uint64_t result = 1634030148;
              break;
            case 117440529:
              uint64_t result = 1634030165;
              break;
            case 117440530:
              uint64_t result = 1634030160;
              break;
            case 117440531:
              uint64_t result = 1634030163;
              break;
            case 117440533:
              uint64_t result = 1634355312;
              break;
            case 117440535:
              int v9 = 1634353509;
              goto LABEL_255;
            case 117440536:
              int v2 = 1634353509;
              return (v2 - 32);
            case 117440537:
              uint64_t result = 1634353484;
              break;
            case 117440538:
              uint64_t result = 1634353491;
              break;
            case 117440540:
              uint64_t result = 1634357330;
              break;
            case 117440541:
              uint64_t result = 1634026319;
              break;
            case 117440542:
              uint64_t result = 1634026312;
              break;
            case 117440543:
              uint64_t result = 1634029889;
              break;
            case 117440544:
              uint64_t result = 1634363509;
              break;
            case 117440545:
              uint64_t result = 1634025807;
              break;
            case 117440546:
              uint64_t result = 1634025800;
              break;
            default:
              switch((int)a1)
              {
                case 83886081:
                  uint64_t result = 1634956658;
                  break;
                case 83886082:
                case 83886083:
                case 83886085:
                case 83886090:
                case 83886092:
                case 83886096:
                case 83886098:
                  return 0;
                case 83886084:
                  uint64_t result = 1634955363;
                  break;
                case 83886086:
                  uint64_t result = 1634953328;
                  break;
                case 83886087:
                case 83886089:
                  uint64_t result = 1634955372;
                  break;
                case 83886088:
                  uint64_t result = 1634954084;
                  break;
                case 83886091:
                  uint64_t result = 1634954096;
                  break;
                case 83886093:
                  uint64_t result = 1634951787;
                  break;
                case 83886094:
                  uint64_t result = 1634951791;
                  break;
                case 83886095:
                  uint64_t result = 1835624553;
                  break;
                case 83886097:
                  int v6 = 1634036850;
                  return v6 | 1u;
                case 83886099:
                  uint64_t result = 1634955891;
                  break;
                case 83886100:
                  unsigned __int16 v7 = 27762;
                  return v7 | 0x61650000u;
                default:
                  goto LABEL_208;
              }
              break;
          }
          break;
      }
    }
    else if ((int)a1 <= 0x2000000)
    {
      switch((int)a1)
      {
        case 16777217:
          return result;
        case 16777218:
        case 16777219:
        case 16777220:
        case 16777221:
        case 16777222:
        case 16777223:
        case 16777224:
        case 16777225:
        case 16777226:
        case 16777227:
        case 16777228:
        case 16777229:
        case 16777230:
        case 16777231:
        case 16777232:
        case 16777233:
        case 16777234:
        case 16777235:
        case 16777236:
        case 16777240:
        case 16777241:
        case 16777243:
        case 16777244:
        case 16777245:
        case 16777250:
        case 16777251:
        case 16777252:
        case 16777253:
          return 0;
        case 16777237:
          uint64_t result = 1634952302;
          break;
        case 16777238:
          uint64_t result = 1634956398;
          break;
        case 16777239:
          uint64_t result = 1634026835;
          break;
        case 16777242:
          int v8 = 1025;
LABEL_107:
          unsigned __int16 v10 = 24946;
          goto LABEL_108;
        case 16777246:
          uint64_t result = 1634952047;
          break;
        case 16777247:
          uint64_t result = 1634952289;
          break;
        case 16777248:
          uint64_t result = 1634362177;
          break;
        case 16777249:
          uint64_t result = 1634353494;
          break;
        default:
          goto LABEL_208;
      }
    }
    else
    {
      switch((int)a1)
      {
        case 33554433:
          return 1835626093;
        case 33554434:
          return 1634956142;
        case 33554435:
          return 1634952291;
        case 33554436:
          unsigned __int16 v12 = 29537;
          goto LABEL_83;
        case 33554437:
          return 1634956397;
        case 33554438:
          return 1634957682;
        case 33554439:
        case 33554441:
        case 33554442:
        case 33554449:
        case 33554456:
        case 33554457:
        case 33554458:
          return 0;
        case 33554440:
          return 1634954355;
        case 33554443:
          return 1634952301;
        case 33554444:
          return result;
        case 33554445:
          int v13 = 1634951538;
          goto LABEL_183;
        case 33554446:
          return 1634026322;
        case 33554447:
          return 1634952290;
        case 33554448:
          unsigned __int16 v12 = 24946;
LABEL_83:
          uint64_t result = (v12 | 0x61730000u) + 258;
          break;
        case 33554450:
          uint64_t result = 1634952045;
          break;
        case 33554451:
          uint64_t result = 1634169456;
          break;
        case 33554452:
          uint64_t result = 1634952308;
          break;
        case 33554453:
          uint64_t result = 1634954339;
          break;
        case 33554454:
          uint64_t result = 1634034544;
          break;
        case 33554455:
          uint64_t result = 1634026354;
          break;
        case 33554459:
          goto LABEL_208;
        case 33554460:
          uint64_t result = 1634037878;
          break;
        case 33554461:
          uint64_t result = 1634029668;
          break;
        case 33554462:
          uint64_t result = 1635218027;
          break;
        case 33554463:
          uint64_t result = 1634563693;
          break;
        case 33554464:
          uint64_t result = 1634563683;
          break;
        case 33554465:
          int v14 = 1634563683;
          goto LABEL_176;
        case 33554466:
          uint64_t result = 1634363760;
          break;
        default:
          switch((int)a1)
          {
            case 50331649:
            case 50331650:
              uint64_t result = 1634951794;
              break;
            case 50331651:
              uint64_t result = 1634952036;
              break;
            case 50331652:
              int v8 = 513;
              goto LABEL_107;
            case 50331653:
              uint64_t result = 1634952299;
              break;
            case 50331654:
              uint64_t result = 1634956652;
              break;
            case 50331655:
              uint64_t result = 1634027349;
              break;
            case 50331656:
              uint64_t result = 1634952561;
              break;
            case 50331657:
              uint64_t result = 1634952813;
              break;
            case 50331658:
              uint64_t result = 1634027336;
              break;
            case 50331659:
              uint64_t result = 1634027333;
              break;
            case 50331660:
              uint64_t result = 1634027332;
              break;
            case 50331661:
              uint64_t result = 1634027346;
              break;
            case 50331662:
              uint64_t result = 1634027606;
              break;
            case 50331663:
              uint64_t result = 1634955894;
              break;
            case 50331664:
              uint64_t result = 1634956146;
              break;
            case 50331665:
              uint64_t result = 1634956148;
              break;
            case 50331666:
              uint64_t result = 1634956144;
              break;
            case 50331667:
              uint64_t result = 1634029142;
              break;
            case 50331668:
              uint64_t result = 1634037872;
              break;
            default:
              switch((int)a1)
              {
                case 67108864:
                case 67108865:
                case 67108866:
                case 67108867:
                case 67108868:
                case 67108869:
                  return 0;
                default:
                  goto LABEL_208;
              }
              return 0;
          }
          break;
      }
    }
  }
  return result;
}

uint64_t TrackOrderForITDBTrackOrder(uint64_t result)
{
  switch((int)result)
  {
    case 1:
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
      return result;
    case 3:
    case 4:
    case 18:
    case 24:
    case 29:
    case 30:
    case 31:
    case 34:
    case 37:
    case 40:
    case 41:
      goto LABEL_4;
    case 20:
      uint64_t result = 21;
      break;
    case 21:
      uint64_t result = 22;
      break;
    case 22:
      uint64_t result = 23;
      break;
    case 23:
      uint64_t result = 24;
      break;
    case 25:
      uint64_t result = 26;
      break;
    case 26:
      uint64_t result = 27;
      break;
    case 27:
      uint64_t result = 28;
      break;
    case 28:
      uint64_t result = 29;
      break;
    case 32:
      uint64_t result = 40;
      break;
    case 33:
      uint64_t result = 41;
      break;
    case 35:
      uint64_t result = 43;
      break;
    case 36:
      uint64_t result = 20;
      break;
    case 38:
      uint64_t result = 44;
      break;
    case 39:
      uint64_t result = 45;
      break;
    case 42:
      uint64_t result = 49;
      break;
    case 43:
      uint64_t result = 50;
      break;
    case 44:
      uint64_t result = 51;
      break;
    case 45:
      uint64_t result = 52;
      break;
    case 46:
      uint64_t result = 53;
      break;
    default:
      if (result == 123) {
        uint64_t result = 112;
      }
      else {
LABEL_4:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t ITDBTrackOrderForTrackOrder(uint64_t result)
{
  switch((int)result)
  {
    case 1:
    case 2:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 19:
      return result;
    case 3:
    case 4:
    case 18:
    case 25:
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 42:
    case 46:
    case 47:
    case 48:
      goto LABEL_4;
    case 20:
      uint64_t result = 36;
      break;
    case 21:
      uint64_t result = 20;
      break;
    case 22:
      uint64_t result = 21;
      break;
    case 23:
      uint64_t result = 22;
      break;
    case 24:
      uint64_t result = 23;
      break;
    case 26:
      uint64_t result = 25;
      break;
    case 27:
      uint64_t result = 26;
      break;
    case 28:
      uint64_t result = 27;
      break;
    case 29:
      uint64_t result = 28;
      break;
    case 40:
      uint64_t result = 32;
      break;
    case 41:
      uint64_t result = 33;
      break;
    case 43:
      uint64_t result = 35;
      break;
    case 44:
      uint64_t result = 38;
      break;
    case 45:
      uint64_t result = 39;
      break;
    case 49:
      uint64_t result = 42;
      break;
    case 50:
      uint64_t result = 43;
      break;
    case 51:
      uint64_t result = 44;
      break;
    case 52:
      uint64_t result = 45;
      break;
    case 53:
      uint64_t result = 46;
      break;
    default:
      if (result == 112) {
        uint64_t result = 123;
      }
      else {
LABEL_4:
      }
        uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t TrackOrderForDAAPSortType(int a1)
{
  if ((a1 - 1) > 0x4B) {
    return 1;
  }
  else {
    return dword_1B04DA460[a1 - 1];
  }
}

uint64_t ITDBPlaylistLimitFromSmartPlaylistLimit(unsigned int a1)
{
  if (a1 < 5) {
    return (a1 + 1);
  }
  else {
    return 0;
  }
}

unint64_t SmartPlaylistLimitFromITDBPlaylistLimit(unsigned int a1)
{
  unint64_t v1 = 0x40302010000uLL >> (8 * a1);
  if (a1 >= 6) {
    LOBYTE(v1) = 0;
  }
  return v1 & 7;
}

void MLParsedSmartInfoFromData(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v11 = *MEMORY[0x1E4F143B8];
  id v3 = a1;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(_OWORD *)(a2 + 32) = 0u;
  *(_OWORD *)(a2 + 48) = 0u;
  *(_OWORD *)(a2 + 64) = 0u;
  *(_OWORD *)(a2 + 80) = 0u;
  *(_OWORD *)(a2 + 96) = 0u;
  if ((unint64_t)[v3 length] < 0x10)
  {
    int v8 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      int v9 = 138543362;
      id v10 = v3;
      _os_log_impl(&dword_1B022D000, v8, OS_LOG_TYPE_ERROR, "Bogus smart playlist info: %{public}@", (uint8_t *)&v9, 0xCu);
    }
  }
  else
  {
    uint64_t v4 = [v3 bytes];
    *(unsigned char *)a2 = *(unsigned char *)v4 != 0;
    *(unsigned char *)(a2 + 1) = *(unsigned char *)(v4 + 1) != 0;
    *(unsigned char *)(a2 + 2) = *(unsigned char *)(v4 + 2) != 0;
    unint64_t v5 = *(unsigned __int8 *)(v4 + 3);
    if (v5 >= 6) {
      char v6 = 0;
    }
    else {
      char v6 = 0x40302010000uLL >> (8 * v5);
    }
    *(unsigned char *)(a2 + 3) = v6;
    unsigned int v7 = bswap32(*(_DWORD *)(v4 + 8));
    *(_DWORD *)(a2 + 4) = bswap32(*(_DWORD *)(v4 + 4));
    *(_DWORD *)(a2 + 8) = v7;
    *(unsigned char *)(a2 + 12) = *(unsigned char *)(v4 + 12) != 0;
    *(unsigned char *)(a2 + 13) = *(unsigned char *)(v4 + 13) != 0;
    *(unsigned char *)(a2 + 14) = *(unsigned char *)(v4 + 14) != 0;
  }
}

__CFString *NSPersistentStringFromMLMediaType(int a1, int8x8_t a2)
{
  a2.i32[0] = a1;
  uint8x8_t v3 = (uint8x8_t)vcnt_s8(a2);
  v3.i16[0] = vaddlv_u8(v3);
  if (v3.i32[0] != 1)
  {
    unsigned __int16 v12 = [MEMORY[0x1E4F28B00] currentHandler];
    int v13 = [NSString stringWithUTF8String:"NSString *NSPersistentStringFromMLMediaType(MLMediaType)"];
    [v12 handleFailureInFunction:v13 file:@"MLTypes.m" lineNumber:69 description:@"This SPI may only be used with single types"];
  }
  if (a1 > 255)
  {
    unint64_t v5 = @"MLMediaTypeMovie";
    char v6 = @"MLMediaTypeVideoITunesU";
    unsigned int v7 = @"MLMediaTypeHomeVideo";
    if (a1 != 0x2000) {
      unsigned int v7 = 0;
    }
    if (a1 != 4096) {
      char v6 = v7;
    }
    if (a1 != 2048) {
      unint64_t v5 = v6;
    }
    int v8 = @"MLMediaTypeVideoPodcast";
    int v9 = @"MLMediaTypeTVShow";
    id v10 = @"MLMediaTypeMusicVideo";
    if (a1 != 1024) {
      id v10 = 0;
    }
    if (a1 != 512) {
      int v9 = v10;
    }
    if (a1 != 256) {
      int v8 = v9;
    }
    if (a1 <= 2047) {
      return v8;
    }
    else {
      return v5;
    }
  }
  else
  {
    uint64_t result = 0;
    switch(a1)
    {
      case 1:
        uint64_t result = @"MLMediaTypeMusicQuiz";
        break;
      case 2:
        uint64_t result = @"MLMediaTypeAudioBook";
        break;
      case 3:
      case 5:
      case 6:
      case 7:
        return result;
      case 4:
        uint64_t result = @"MLMediaTypePodcast";
        break;
      case 8:
        uint64_t result = @"MLMediaTypeSong";
        break;
      default:
        uint64_t v11 = @"MLMediaTypeITunesUAudio";
        if (a1 != 32) {
          uint64_t v11 = 0;
        }
        if (a1 == 16) {
          uint64_t result = @"MLMediaTypeVoiceMemo";
        }
        else {
          uint64_t result = v11;
        }
        break;
    }
  }
  return result;
}

id NSStringFromMLMediaType(uint64_t a1)
{
  if (!a1)
  {
    [NSString stringWithFormat:@"(%d => '%@')", 0, @"MLMediaTypeUndefined"];
    goto LABEL_5;
  }
  if (a1 != 0xFFFFFF)
  {
    id v3 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    uint64_t v4 = v3;
    if ((~a1 & 0xFF00) == 0)
    {
      unint64_t v5 = @"AnyVideo";
LABEL_21:
      [v4 addObject:v5];
      goto LABEL_22;
    }
    if ((a1 & 0x100) != 0)
    {
      [v3 addObject:@"VideoPodcast"];
      if ((a1 & 0x1000) == 0)
      {
LABEL_10:
        if ((a1 & 0x200) == 0) {
          goto LABEL_11;
        }
        goto LABEL_17;
      }
    }
    else if ((a1 & 0x1000) == 0)
    {
      goto LABEL_10;
    }
    [v4 addObject:@"VideoITunesU"];
    if ((a1 & 0x200) == 0)
    {
LABEL_11:
      if ((a1 & 0x400) == 0) {
        goto LABEL_12;
      }
      goto LABEL_18;
    }
LABEL_17:
    [v4 addObject:@"TVShow"];
    if ((a1 & 0x400) == 0)
    {
LABEL_12:
      if ((a1 & 0x800) == 0) {
        goto LABEL_13;
      }
      goto LABEL_19;
    }
LABEL_18:
    [v4 addObject:@"MusicVideo"];
    if ((a1 & 0x800) == 0)
    {
LABEL_13:
      if ((a1 & 0x2000) == 0)
      {
LABEL_22:
        if ((_BYTE)a1 == 0xFF)
        {
          char v6 = @"AnyAudio";
LABEL_37:
          [v4 addObject:v6];
          goto LABEL_38;
        }
        if (a1)
        {
          [v4 addObject:@"MusicQuiz"];
          if ((a1 & 2) == 0)
          {
LABEL_26:
            if ((a1 & 4) == 0) {
              goto LABEL_27;
            }
            goto LABEL_33;
          }
        }
        else if ((a1 & 2) == 0)
        {
          goto LABEL_26;
        }
        [v4 addObject:@"AudioBook"];
        if ((a1 & 4) == 0)
        {
LABEL_27:
          if ((a1 & 8) == 0) {
            goto LABEL_28;
          }
          goto LABEL_34;
        }
LABEL_33:
        [v4 addObject:@"Podcast"];
        if ((a1 & 8) == 0)
        {
LABEL_28:
          if ((a1 & 0x10) == 0) {
            goto LABEL_29;
          }
          goto LABEL_35;
        }
LABEL_34:
        [v4 addObject:@"Song"];
        if ((a1 & 0x10) == 0)
        {
LABEL_29:
          if ((a1 & 0x20) == 0) {
            goto LABEL_38;
          }
LABEL_36:
          char v6 = @"ITunesUAudio";
          goto LABEL_37;
        }
LABEL_35:
        [v4 addObject:@"VoiceMemo"];
        if ((a1 & 0x20) == 0)
        {
LABEL_38:
          uint64_t v7 = [v4 count];
          int v8 = NSString;
          if (v7 == 1)
          {
            int v9 = [v4 lastObject];
            [v8 stringWithFormat:@"MLMediaType%@", v9];
          }
          else
          {
            int v9 = [v4 componentsJoinedByString:@"|"];
            [v8 stringWithFormat:@"MLMediaType [%@]", v9];
          id v10 = };
          int v2 = [NSString stringWithFormat:@"(%d => '%@')", a1, v10];

          goto LABEL_42;
        }
        goto LABEL_36;
      }
      goto LABEL_20;
    }
LABEL_19:
    [v4 addObject:@"Movie"];
    if ((a1 & 0x2000) == 0) {
      goto LABEL_22;
    }
LABEL_20:
    unint64_t v5 = @"HomeVideo";
    goto LABEL_21;
  }
  [NSString stringWithFormat:@"(%d => '%@')", 0xFFFFFFLL, @"MLMediaTypeAny"];
  int v2 = LABEL_5:;
LABEL_42:

  return v2;
}

uint64_t MLMediaTypeByStandardizingMediaType(uint64_t result)
{
  if ((result & 0x100) != 0) {
    return 256;
  }
  if ((result & 0x1000) != 0) {
    return 4096;
  }
  if ((result & 0x800) == 0) {
    return result;
  }
  if ((result & 4) != 0) {
    return 256;
  }
  if ((result & 0x20) != 0) {
    return 4096;
  }
  if ((result & 0x200) != 0) {
    return 512;
  }
  if ((result & 0x2000) != 0) {
    return 0x2000;
  }
  if ((result & 0x400) != 0) {
    return 1024;
  }
  return result;
}

id MLEntityClassForType(unint64_t a1)
{
  if (a1 <= 7 && ((0xBFu >> a1) & 1) != 0)
  {
    int v2 = objc_opt_class();
  }
  else
  {
    int v2 = 0;
  }
  return v2;
}

void __IgnorableArticles_block_invoke()
{
  os_log_t v0 = ML3LocalizedSortingDetailsDictionary();
  id v3 = v0;
  if (v0)
  {
    uint64_t v1 = [v0 objectForKey:@"InsignificantSortPrefixes"];
    int v2 = (void *)IgnorableArticles_articles;
    IgnorableArticles_articles = v1;

    os_log_t v0 = v3;
  }
  if (!IgnorableArticles_articles)
  {
    IgnorableArticles_articles = (uint64_t)&unk_1F090E9E0;
    os_log_t v0 = v3;
  }
}

CFStringRef ML3CreateSanitizedString(const __CFString *result)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  if (result)
  {
    CFStringRef v1 = result;
    unint64_t Length = CFStringGetLength(result);
    MEMORY[0x1F4188790]();
    uint64_t v4 = (const UniChar *)((char *)v11 - ((v3 + 17) & 0xFFFFFFFFFFFFFFF0));
    int HasPrefix = CFStringHasPrefix(v1, @"﻿");
    unint64_t v6 = HasPrefix != 0;
    if (Length <= v6)
    {
      unsigned int v7 = 0;
    }
    else
    {
      unsigned int v7 = 0;
      if (HasPrefix) {
        unsigned int v8 = 2;
      }
      else {
        unsigned int v8 = 1;
      }
      do
      {
        int CharacterAtIndex = CFStringGetCharacterAtIndex(v1, v6);
        if ((CharacterAtIndex - 1) <= 0xFFFC) {
          v4[v7++] = CharacterAtIndex;
        }
        unint64_t v6 = v8;
      }
      while (Length > v8++);
    }
    if (Length >= v7) {
      v4[v7] = 0;
    }
    return CFStringCreateWithCharacters((CFAllocatorRef)*MEMORY[0x1E4F1CF80], v4, v7);
  }
  return result;
}

id MLNSStringForBuiltInPreset(int a1, int a2)
{
  uint64_t v3 = AllBuiltInPresetNames(a2);
  uint64_t v4 = [v3 objectAtIndex:(a1 - 100)];

  return v4;
}

char *AllBuiltInPresetNames(int a1)
{
  uint64_t v1 = AllBuiltInPresetNames_names;
  p_name = (char **)(&OBJC_PROTOCOL___MLMediaLibraryResourcesServiceProtocol + 8);
  if (!AllBuiltInPresetNames_names)
  {
    int v41 = a1;
    uint64_t v3 = objc_msgSend(objc_alloc(MEMORY[0x1E4F1C978]), "initWithObjects:", @"Acoustic", @"BassBooster", @"BassReducer", @"Classical", @"Dance", @"Deep", @"Electronic", @"Flat", @"HipHop", @"Jazz", @"Latin", @"Loudness", @"Lounge", @"Piano", @"Pop", @"R&B", @"Rock",
           @"SmallSpeakers",
           @"SpokenWord",
           @"TrebleBooster",
           @"TrebleReducer",
           @"VocalBooster",
           @"LateNightMode",
           0);
    uint64_t v4 = (void *)AllBuiltInPresetNames_names;
    AllBuiltInPresetNames_names = v3;

    id v34 = objc_alloc(MEMORY[0x1E4F1C978]);
    unsigned int v40 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v55 = [v40 localizedStringForKey:@"Acoustic" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v39 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unsigned int v56 = [v39 localizedStringForKey:@"Bass Booster" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unint64_t v38 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v54 = [v38 localizedStringForKey:@"Bass Reducer" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v37 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v53 = [v37 localizedStringForKey:@"Classical" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v36 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v52 = [v36 localizedStringForKey:@"Dance" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v35 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v51 = [v35 localizedStringForKey:@"Deep" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v33 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v50 = [v33 localizedStringForKey:@"Electronic" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v32 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v49 = [v32 localizedStringForKey:@"Flat" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v31 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unsigned int v47 = [v31 localizedStringForKey:@"Hip Hop" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v30 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v48 = [v30 localizedStringForKey:@"Jazz" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v29 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v46 = [v29 localizedStringForKey:@"Latin" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v28 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v45 = [v28 localizedStringForKey:@"Loudness" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v27 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v44 = [v27 localizedStringForKey:@"Lounge" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v26 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unsigned int v43 = [v26 localizedStringForKey:@"Piano" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v25 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unsigned int v42 = [v25 localizedStringForKey:@"Pop" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v24 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    uint64_t v20 = [v24 localizedStringForKey:@"R&B" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v23 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v19 = [v23 localizedStringForKey:@"Rock" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v22 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int8x16_t v17 = [v22 localizedStringForKey:@"Small Speakers" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int v21 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    int v15 = [v21 localizedStringForKey:@"Spoken Word" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    int8x16_t v18 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unint64_t v5 = [v18 localizedStringForKey:@"Treble Booster" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v16 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unint64_t v6 = [v16 localizedStringForKey:@"Treble Reducer" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    unsigned int v7 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    unsigned int v8 = [v7 localizedStringForKey:@"Vocal Booster" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    p_name = &OBJC_PROTOCOL___MLMediaLibraryResourcesServiceProtocol.name;
    int v9 = [MEMORY[0x1E4F28B50] bundleForClass:objc_opt_class()];
    id v10 = [v9 localizedStringForKey:@"Late Night Mode" value:&stru_1F08D4D70 table:@"MLLocalizable"];
    uint64_t v11 = objc_msgSend(v34, "initWithObjects:", v55, v56, v54, v53, v52, v51, v50, v49, v47, v48, v46, v45, v44, v43, v42, v20, v19,
            v17,
            v15,
            v5,
            v6,
            v8,
            v10,
            0);
    unsigned __int16 v12 = (void *)AllBuiltInPresetNames_localizedNames;
    AllBuiltInPresetNames_localizedNames = v11;

    a1 = v41;
    uint64_t v1 = AllBuiltInPresetNames_names;
  }
  if (a1) {
    int v13 = p_name[390];
  }
  else {
    int v13 = (char *)v1;
  }

  return v13;
}

id MLPresetNameForLocalizedPresetName(void *a1)
{
  id v1 = a1;
  int v2 = AllBuiltInPresetNames(1);
  uint64_t v3 = [v2 indexOfObject:v1];

  uint64_t v4 = v1;
  if (v3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    unint64_t v5 = AllBuiltInPresetNames(0);
    uint64_t v4 = [v5 objectAtIndex:v3];
  }

  return v4;
}

id MLLocalizedPresetNameForPresetName(void *a1)
{
  id v1 = a1;
  int v2 = AllBuiltInPresetNames(0);
  uint64_t v3 = [v2 indexOfObject:v1];

  uint64_t v4 = v1;
  if (v3 != 0x7FFFFFFFFFFFFFFFLL)
  {
    unint64_t v5 = AllBuiltInPresetNames(1);
    uint64_t v4 = [v5 objectAtIndex:v3];
  }

  return v4;
}

char *MLAllLocalizedPresetNames()
{
  return AllBuiltInPresetNames(1);
}

void ML3MatchContainerImportItem::_createImportItemValue(unsigned int a1@<W1>, void *a2@<X2>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  if (a1 == 218103812) {
    operator new();
  }
  uint64_t v3 = a2[1];
  v4[0] = *a2;
  v4[1] = v3;
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  ML3DAAPContainerImportItem::_createImportItemValue(a1, (uint64_t)v4, &v5);
}

void sub_1B02E6580(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B02E6598()
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  if (!v0) {
    JUMPOUT(0x1B02E6590);
  }
  JUMPOUT(0x1B02E6588);
}

void std::__shared_weak_count::__release_shared[abi:ne180100](std::__shared_weak_count *a1)
{
  if (!atomic_fetch_add(&a1->__shared_owners_, 0xFFFFFFFFFFFFFFFFLL))
  {
    ((void (*)(std::__shared_weak_count *))a1->__on_zero_shared)(a1);
    std::__shared_weak_count::__release_weak(a1);
  }
}

uint64_t std::__shared_ptr_pointer<ML3MatchImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3MatchImportItem>,std::allocator<ML3MatchImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_18ML3MatchImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

BOOL std::type_info::operator==[abi:ne180100](uint64_t a1, uint64_t a2)
{
  if (a1 == a2) {
    return 1;
  }
  if ((a2 & a1) < 0 != __OFSUB__(a1, a2)) {
    return strcmp((const char *)(a1 & 0x7FFFFFFFFFFFFFFFLL), (const char *)(a2 & 0x7FFFFFFFFFFFFFFFLL)) == 0;
  }
  return 0;
}

uint64_t std::__shared_ptr_pointer<ML3MatchImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3MatchImportItem>,std::allocator<ML3MatchImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3MatchImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3MatchImportItem>,std::allocator<ML3MatchImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

id ML3MatchImportItem::getDeduplicationPredicates(ML3MatchImportItem *this)
{
  v36[2] = *MEMORY[0x1E4F143B8];
  int v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:2];
  uint64_t v3 = (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663305);
  if (v3)
  {
    uint64_t v4 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:v3];
    [v2 addObject:v4];
  }
  uint64_t v5 = (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663308);
  if (v5)
  {
    unint64_t v6 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.sync_id" equalToInt64:v5];
    v36[0] = v6;
    unsigned int v7 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
    v36[1] = v7;
    unsigned int v8 = [MEMORY[0x1E4F1C978] arrayWithObjects:v36 count:2];
    int v9 = +[ML3CompoundPredicate predicateMatchingPredicates:v8];
    [v2 addObject:v9];
  }
  uint64_t v10 = (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  if (v10)
  {
    if ((*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663314))
    {
      uint64_t v11 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.account_id" equalToInt64:(*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663312)];
      v35[0] = v11;
      unsigned __int16 v12 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v10];
      v35[1] = v12;
      int v13 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
      v35[2] = v13;
      int v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v35 count:3];
      int v15 = +[ML3CompoundPredicate predicateMatchingPredicates:v14];
      [v2 addObject:v15];
    }
    else
    {
      uint64_t v11 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v10];
      v34[0] = v11;
      unsigned __int16 v12 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
      v34[1] = v12;
      int v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v34 count:2];
      int v14 = +[ML3CompoundPredicate predicateMatchingPredicates:v13];
      [v2 addObject:v14];
    }

    uint64_t v16 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v10];
    v33[0] = v16;
    int8x16_t v17 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:0];
    v33[1] = v17;
    int8x16_t v18 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
    v33[2] = v18;
    int v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v33 count:3];
    uint64_t v20 = +[ML3CompoundPredicate predicateMatchingPredicates:v19];
    [v2 addObject:v20];
  }
  uint64_t v21 = (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337);
  if (v21)
  {
    int v22 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v21];
    v32[0] = v22;
    int v23 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
    v32[1] = v23;
    int v24 = [MEMORY[0x1E4F1C978] arrayWithObjects:v32 count:2];
    uint64_t v25 = +[ML3CompoundPredicate predicateMatchingPredicates:v24];
    [v2 addObject:v25];

    if (!v10)
    {
      uint64_t v26 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v21];
      v31[0] = v26;
      uint64_t v27 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:0];
      v31[1] = v27;
      int v28 = [MEMORY[0x1E4F1C978] arrayWithObjects:v31 count:2];
      uint64_t v29 = +[ML3CompoundPredicate predicateMatchingPredicates:v28];
      [v2 addObject:v29];
    }
  }

  return v2;
}

void sub_1B02E6CF0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3MatchImportItem::getSourceIdentifiers@<X0>(ML3MatchImportItem *this@<X0>, BOOL *a2@<X1>, void *a3@<X8>)
{
  std::vector<long long>::vector(a3);
  *a2 = 0;
  uint64_t result = (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663305);
  if (result) {
    *(void *)(*a3 + 16) = result;
  }
  return result;
}

void sub_1B02E6ED8(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

void *std::vector<long long>::vector(void *a1)
{
  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0;
  int v2 = operator new(0x38uLL);
  a1[1] = (char *)v2 + 56;
  a1[2] = (char *)v2 + 56;
  _OWORD *v2 = 0u;
  v2[1] = 0u;
  v2[2] = 0u;
  *((void *)v2 + 6) = 0;
  *a1 = v2;
  return a1;
}

void std::vector<long long>::__throw_length_error[abi:ne180100]()
{
}

void std::__throw_bad_array_new_length[abi:ne180100]()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
  __cxa_throw(v1, MEMORY[0x1E4FBA350], MEMORY[0x1E4FBA1F8]);
}

void std::__throw_length_error[abi:ne180100](const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  std::length_error::length_error[abi:ne180100](exception, a1);
  __cxa_throw(exception, (struct type_info *)off_1E5FAF1E8, MEMORY[0x1E4FBA1C8]);
}

void sub_1B02E6FD8(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *std::length_error::length_error[abi:ne180100](std::logic_error *a1, const char *a2)
{
  uint64_t result = std::logic_error::logic_error(a1, a2);
  result->__vftable = (std::logic_error_vtbl *)(MEMORY[0x1E4FBA4D0] + 16);
  return result;
}

uint64_t ML3MatchImportItem::getDescription(ML3MatchImportItem *this)
{
  (*(void (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663305);
  (*(void (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  (*(void (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<ML3MatchImportItem ", 20);
  *(_DWORD *)((char *)&v8[1] + *(void *)(v8[0] - 24)) = *(_DWORD *)((unsigned char *)&v8[1] + *(void *)(v8[0] - 24)) & 0xFFFFFFB5 | 8;
  int v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" sagaId=", 8);
  *(_DWORD *)((char *)v3 + *(void *)(*v3 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(*v3 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v4 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)", storeId=", 10);
  uint64_t v5 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)", subscriptionId=", 17);
  unint64_t v6 = (void *)std::ostream::operator<<();
  char v11 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)&v11, 1);
  std::stringbuf::str();
  v8[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v8[1] = MEMORY[0x1E4FBA470] + 16;
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v10);
}

void sub_1B02E72CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

uint64_t std::ostringstream::basic_ostringstream[abi:ne180100](uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA498] + 64;
  *(void *)(a1 + 112) = MEMORY[0x1E4FBA498] + 64;
  uint64_t v3 = *(void *)(MEMORY[0x1E4FBA418] + 16);
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA418] + 8);
  *(void *)a1 = v4;
  *(void *)(a1 + *(void *)(v4 - 24)) = v3;
  uint64_t v5 = (std::ios_base *)(a1 + *(void *)(*(void *)a1 - 24));
  std::ios_base::init(v5, (void *)(a1 + 8));
  uint64_t v6 = MEMORY[0x1E4FBA498] + 24;
  v5[1].__vftable = 0;
  v5[1].__fmtflags_ = -1;
  *(void *)a1 = v6;
  *(void *)(a1 + 112) = v2;
  std::streambuf::basic_streambuf();
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  *(_OWORD *)(a1 + 72) = 0u;
  *(_OWORD *)(a1 + 88) = 0u;
  *(_DWORD *)(a1 + 104) = 16;
  return a1;
}

void sub_1B02E7450(_Unwind_Exception *a1)
{
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](v1);
  _Unwind_Resume(a1);
}

void *std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(void *a1, uint64_t a2, uint64_t a3)
{
  MEMORY[0x1B3E93480](v20, a1);
  if (v20[0])
  {
    uint64_t v6 = (char *)a1 + *(void *)(*a1 - 24);
    uint64_t v7 = *((void *)v6 + 5);
    int v8 = *((_DWORD *)v6 + 2);
    int v9 = *((_DWORD *)v6 + 36);
    if (v9 == -1)
    {
      std::ios_base::getloc((const std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)));
      uint64_t v10 = std::locale::use_facet(&__b, MEMORY[0x1E4FBA258]);
      int v9 = ((uint64_t (*)(const std::locale::facet *, uint64_t))v10->__vftable[2].~facet_0)(v10, 32);
      std::locale::~locale(&__b);
      *((_DWORD *)v6 + 36) = v9;
    }
    uint64_t v11 = a2 + a3;
    if ((v8 & 0xB0) == 0x20) {
      uint64_t v12 = a2 + a3;
    }
    else {
      uint64_t v12 = a2;
    }
    if (!v7) {
      goto LABEL_23;
    }
    uint64_t v13 = *((void *)v6 + 3);
    BOOL v14 = v13 <= a3;
    uint64_t v15 = v13 - a3;
    int64_t v16 = v14 ? 0 : v15;
    if (v12 - a2 >= 1
      && (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, a2, v12 - a2) != v12 - a2)
    {
      goto LABEL_23;
    }
    if (v16 >= 1)
    {
      std::string::basic_string[abi:ne180100](&__b, v16, (char)v9);
      int8x16_t v17 = v22 >= 0 ? &__b : (std::locale *)__b.__locale_;
      uint64_t v18 = (*(uint64_t (**)(uint64_t, std::locale *, int64_t))(*(void *)v7 + 96))(v7, v17, v16);
      if (v22 < 0) {
        operator delete(__b.__locale_);
      }
      if (v18 != v16) {
        goto LABEL_23;
      }
    }
    if (v11 - v12 < 1
      || (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)v7 + 96))(v7, v12, v11 - v12) == v11 - v12)
    {
      *((void *)v6 + 3) = 0;
    }
    else
    {
LABEL_23:
      std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 5);
    }
  }
  MEMORY[0x1B3E93490](v20);
  return a1;
}

void sub_1B02E76B8(void *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  MEMORY[0x1B3E93490](&a10);
  __cxa_begin_catch(a1);
  std::ios_base::__set_badbit_and_consider_rethrow((std::ios_base *)((char *)v17 + *(void *)(*v17 - 24)));
  __cxa_end_catch();
  JUMPOUT(0x1B02E7694);
}

void sub_1B02E7724(_Unwind_Exception *a1)
{
}

uint64_t std::ostringstream::~ostringstream(uint64_t a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA418];
  uint64_t v3 = *MEMORY[0x1E4FBA418];
  *(void *)a1 = *MEMORY[0x1E4FBA418];
  *(void *)(a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  *(void *)(a1 + 8) = MEMORY[0x1E4FBA470] + 16;
  if (*(char *)(a1 + 95) < 0) {
    operator delete(*(void **)(a1 + 72));
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](a1 + 112);
  return a1;
}

void __clang_call_terminate(void *a1)
{
}

void *std::string::basic_string[abi:ne180100](void *__b, size_t __len, int __c)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __b[1] = __len;
    __b[2] = v8 | 0x8000000000000000;
    *std::locale __b = v6;
  }
  else
  {
    *((unsigned char *)__b + 23) = __len;
    uint64_t v6 = __b;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memset(v6, __c, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __b;
}

void std::string::__throw_length_error[abi:ne180100]()
{
}

BOOL ML3MatchImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  if (a2 == 100663345) {
    return 1;
  }
  if ((a2 - 0x1000000) >> 25 > 4) {
    return 0;
  }
  return ML3DAAPImportItem::hasValue(this, a2);
}

unint64_t ML3MatchImportItem::getIntegerValue(ML3MatchImportItem *this, uint64_t a2)
{
  if (a2 == 100663345) {
    return (*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 100663338) == 3;
  }
  if (a2 == 100663347)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v4, *((void *)this + 8), 0x616A706Fu);
    if (v4) {
      BOOL v2 = ML3CPP::Element::integerValue(v4) == 0;
    }
    else {
      BOOL v2 = 1;
    }
    if (v5) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v5);
    }
    return v2;
  }

  return ML3DAAPTrackImportItem::getIntegerValue(this, a2);
}

void ML3MatchImportItem::getStringValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v5 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if (a2 != 100663306)
  {
    ML3DAAPImportItem::getStringValue(this, a2, (uint64_t)&v10);
    *(unsigned char *)(a3 + 8) = BYTE8(v10);
    std::string::operator=(v5, &v11);
    *(void *)&long long v10 = &unk_1F08C3230;
    if ((SHIBYTE(v11.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    size_t v7 = (void *)v11.__r_.__value_.__r.__words[0];
    goto LABEL_18;
  }
  memset(&__str, 0, sizeof(__str));
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v14, *((void *)this + 8), 0x6D61766Cu);
  if (v14 && ML3CPP::Element::integerValue(v14))
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v13, *((void *)this + 8), 0x61655270u);
    if ((void)v13)
    {
      std::string::basic_string[abi:ne180100](&v10, *(void **)(v13 + 48), *(void *)(v13 + 64));
      *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v10;
      __str.__r_.__value_.__r.__words[2] = v11.__r_.__value_.__r.__words[0];
      uint64_t v6 = (std::__shared_weak_count *)*((void *)&v13 + 1);
    }
    else
    {
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v10, *((void *)this + 8), 0x61655250u);
      size_t v8 = (std::__shared_weak_count *)*((void *)&v13 + 1);
      long long v13 = v10;
      uint64_t v6 = (std::__shared_weak_count *)*((void *)&v10 + 1);
      uint64_t v9 = v10;
      if (v8) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v8);
      }
      if (v9)
      {
        std::string::basic_string[abi:ne180100](&v10, *(void **)(v9 + 48), *(void *)(v9 + 64));
        *(_OWORD *)&__str.__r_.__value_.__l.__data_ = v10;
        __str.__r_.__value_.__r.__words[2] = v11.__r_.__value_.__r.__words[0];
      }
    }
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  std::string::operator=(v5, &__str);
  *(unsigned char *)(a3 + 8) = 1;
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
  {
    size_t v7 = (void *)__str.__r_.__value_.__r.__words[0];
LABEL_18:
    operator delete(v7);
  }
}

void sub_1B02E7BF4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,std::__shared_weak_count *a26)
{
  if (a26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a26);
  }
  unsigned int v31 = *(std::__shared_weak_count **)(v29 - 56);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  *(void *)uint64_t v26 = v27;
  if (*(char *)(v26 + 39) < 0) {
    operator delete(*v28);
  }
  _Unwind_Resume(exception_object);
}

void ML3ImportValue<std::string>::~ML3ImportValue(uint64_t a1)
{
  *(void *)a1 = &unk_1F08C3230;
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }

  JUMPOUT(0x1B3E93610);
}

uint64_t ML3ImportValue<std::string>::~ML3ImportValue(uint64_t a1)
{
  *(void *)a1 = &unk_1F08C3230;
  if (*(char *)(a1 + 39) < 0) {
    operator delete(*(void **)(a1 + 16));
  }
  return a1;
}

BOOL ML3MatchImportItem::isValid(ML3MatchImportItem *this)
{
  return ((*(uint64_t (**)(ML3MatchImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217) & 0xE08) != 0;
}

void ML3MatchImportItem::~ML3MatchImportItem(ML3DAAPImportItem *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

void ML3DAAPImportItem::~ML3DAAPImportItem(ML3DAAPImportItem *this)
{
  *(void *)this = &unk_1F08C3270;
  BOOL v2 = (std::__shared_weak_count *)*((void *)this + 9);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  *(void *)this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)this + 24);
}

{
  uint64_t vars8;

  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

id ML3MatchContainerImportItem::getDeduplicationPredicates(ML3MatchContainerImportItem *this)
{
  BOOL v2 = (void *)MEMORY[0x1E4F1CA48];
  uint64_t v3 = ML3DAAPContainerImportItem::getDeduplicationPredicates(this);
  uint64_t v4 = [v2 arrayWithArray:v3];

  (*(void (**)(void **__return_ptr, ML3MatchContainerImportItem *, uint64_t))(*(void *)this + 24))(&v10, this, 184549417);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v12, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    long long v10 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v12 = __p;
  }
  std::string::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  char v6 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    size_t v7 = ML3CPPBridgeString((const UInt8 *)&v12, 1);
    size_t v8 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_global_id" equalToValue:v7];
    [v4 addObject:v8];

    char v6 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  }
  if (v6 < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }

  return v4;
}

void sub_1B02E7FC4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  _Unwind_Resume(a1);
}

void std::string::__init_copy_ctor_external(std::string *this, const std::string::value_type *__s, std::string::size_type __sz)
{
  uint64_t v5 = this;
  if (__sz > 0x16)
  {
    if (__sz >= 0x7FFFFFFFFFFFFFF8) {
      std::string::__throw_length_error[abi:ne180100]();
    }
    std::string::size_type v6 = (__sz & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__sz | 7) != 0x17) {
      std::string::size_type v6 = __sz | 7;
    }
    std::string::size_type v7 = v6 + 1;
    size_t v8 = (std::string *)operator new(v6 + 1);
    v5->__r_.__value_.__l.__size_ = __sz;
    v5->__r_.__value_.__r.__words[2] = v7 | 0x8000000000000000;
    v5->__r_.__value_.__r.__words[0] = (std::string::size_type)v8;
    uint64_t v5 = v8;
  }
  else
  {
    *((unsigned char *)&this->__r_.__value_.__s + 23) = __sz;
  }

  memmove(v5, __s, __sz + 1);
}

void ML3MatchContainerImportItem::getDescription(ML3MatchContainerImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v23);
  (*(void (**)(ML3MatchContainerImportItem *, uint64_t))(*(void *)this + 32))(this, 184549408);
  (*(void (**)(void *__return_ptr, ML3MatchContainerImportItem *, uint64_t))(*(void *)this + 24))(v16, this, 184549417);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v22, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v16[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v22 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchContainerImportItem *, uint64_t))(*(void *)this + 24))(v16, this, 184549452);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v21, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v16[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v21 = __p;
  }
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v16);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)"<ML3MatchContainerImportItem ", 29);
  *(_DWORD *)((char *)&v16[1] + *(void *)(v16[0] - 24)) = *(_DWORD *)((unsigned char *)&v16[1] + *(void *)(v16[0] - 24)) & 0xFFFFFFB5 | 8;
  BOOL v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" global_id=", 11);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v4 = &v22;
  }
  else {
    uint64_t v4 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v22.__r_.__value_.__l.__size_;
  }
  std::string::size_type v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)v4, size);
  std::string::size_type v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)", cloud_universal_library_id=", 29);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    size_t v8 = &v21;
  }
  else {
    size_t v8 = (std::string *)v21.__r_.__value_.__r.__words[0];
  }
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v9 = v21.__r_.__value_.__l.__size_;
  }
  long long v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)v8, v9);
  std::string v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)", cloud_id=", 11);
  *(_DWORD *)((char *)v11 + *(void *)(*v11 - 24) + 8) = *(_DWORD *)((unsigned char *)v11 + *(void *)(*v11 - 24) + 8) & 0xFFFFFFB5 | 2;
  std::string v12 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)", name=", 7);
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v15, v24.__r_.__value_.__l.__data_, v24.__r_.__value_.__l.__size_);
  }
  else {
    std::string v15 = v24;
  }
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v13 = &v15;
  }
  else {
    long long v13 = (std::string *)v15.__r_.__value_.__r.__words[0];
  }
  if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v15.__r_.__value_.__l.__size_;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)v13, v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v15.__r_.__value_.__l.__data_);
  }
  if (!*((unsigned char *)this + 17)) {
    std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)", isCompleteItem=false", 22);
  }
  v15.__r_.__value_.__s.__data_[0] = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v16, (uint64_t)&v15, 1);
  std::stringbuf::str();
  v16[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v16 + *(void *)(v16[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v16[1] = MEMORY[0x1E4FBA470] + 16;
  if (v19 < 0) {
    operator delete(v18);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v20);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
  int v23 = &unk_1F08C3230;
  if (SHIBYTE(v24.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v24.__r_.__value_.__l.__data_);
  }
}

void sub_1B02E858C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  if (*(char *)(v22 - 121) < 0) {
    operator delete(*(void **)(v22 - 144));
  }
  if (*(char *)(v22 - 89) < 0) {
    operator delete(*(void **)(v22 - 112));
  }
  *(void *)(v22 - 88) = &unk_1F08C3230;
  if (*(char *)(v22 - 49) < 0) {
    operator delete(*(void **)(v22 - 72));
  }
  _Unwind_Resume(a1);
}

BOOL ML3MatchContainerImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  int v2 = a2;
  BOOL result = ML3DAAPContainerImportItem::hasValue(this, a2);
  if (*((unsigned char *)this + 288)
    && *((unsigned char *)this + 289)
    && ((v2 - 184549380) > 0x34 || ((1 << (v2 - 4)) & 0x1000E010008B85) == 0)
    && ((v2 - 184549452) > 0xA || ((1 << (v2 - 76)) & 0x701) == 0))
  {
    return 0;
  }
  return result;
}

uint64_t ML3MatchContainerImportItem::isValid(ML3DAAPImportItem *this)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  uint64_t result = ML3DAAPContainerImportItem::isValid(this);
  if (result)
  {
    if (ML3DAAPImportItem::getIntegerValue(this, 184549408) == 1)
    {
      uint64_t v3 = os_log_create("com.apple.amp.medialibrary", "Default");
      if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
      {
        int v4 = 134217984;
        uint64_t v5 = 1;
        _os_log_impl(&dword_1B022D000, v3, OS_LOG_TYPE_DEFAULT, "ignoring container with cloud id %lld", (uint8_t *)&v4, 0xCu);
      }

      return 0;
    }
    else
    {
      return 1;
    }
  }
  return result;
}

void ML3MatchContainerImportItem::~ML3MatchContainerImportItem(ML3MatchContainerImportItem *this)
{
  ML3DAAPContainerImportItem::~ML3DAAPContainerImportItem(this);

  JUMPOUT(0x1B3E93610);
}

void ML3DAAPContainerImportItem::~ML3DAAPContainerImportItem(ML3DAAPContainerImportItem *this)
{
  *(void *)this = &unk_1F08C4998;
  uint64_t v3 = (void **)((char *)this + 256);
  std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100](&v3);
  int v2 = (void *)*((void *)this + 27);
  if (v2)
  {
    *((void *)this + 28) = v2;
    operator delete(v2);
  }

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);
}

{
  uint64_t vars8;

  ML3DAAPContainerImportItem::~ML3DAAPContainerImportItem(this);

  JUMPOUT(0x1B3E93610);
}

void std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  int v2 = **a1;
  if (v2)
  {
    uint64_t v4 = (uint64_t)v1[1];
    uint64_t v5 = v2;
    if ((void *)v4 != v2)
    {
      do
        uint64_t v4 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v4 - 40);
      while ((void *)v4 != v2);
      uint64_t v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(uint64_t a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(*(void ***)(a1 + 16));
  int v2 = *(void **)a1;
  *(void *)a1 = 0;
  if (v2) {
    operator delete(v2);
  }
  return a1;
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(void **__p)
{
  if (__p)
  {
    uint64_t v1 = __p;
    do
    {
      int v2 = (void **)*v1;
      if (*((char *)v1 + 39) < 0) {
        operator delete(v1[2]);
      }
      operator delete(v1);
      uint64_t v1 = v2;
    }
    while (v2);
  }
}

id ML3MatchAlbumImportItem::getDeduplicationPredicates(ML3MatchAlbumImportItem *this)
{
  v54[5] = *MEMORY[0x1E4F143B8];
  id v44 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = (*(uint64_t (**)(ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  uint64_t v3 = (*(uint64_t (**)(ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212683);
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v48, this, 285212673);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v50, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v48[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v50 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v48, this, 285212699);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v47, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v48[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v47 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v48, this, 285212682);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v46, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v48[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v46 = __p;
  }
  std::string::size_type size = HIBYTE(v50.__r_.__value_.__r.__words[2]);
  if ((v50.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v50.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v5 = (void *)*((void *)this + 10);
    uint64_t v6 = ML3CPPBridgeString((const UInt8 *)&v50, 1);
    std::string::size_type v7 = [v5 groupingKeyForString:v6];
  }
  else
  {
    std::string::size_type v7 = 0;
  }
  std::string::size_type v8 = HIBYTE(v47.__r_.__value_.__r.__words[2]);
  if ((v47.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v8 = v47.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    std::string::size_type v9 = (void *)*((void *)this + 10);
    long long v10 = ML3CPPBridgeString((const UInt8 *)&v47, 1);
    unsigned int v42 = [v9 groupingKeyForString:v10];
  }
  else
  {
    unsigned int v42 = 0;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v48, this, 285212697);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v45, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v48[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v45 = __p;
  }
  std::string::size_type v11 = HIBYTE(v45.__r_.__value_.__r.__words[2]);
  if ((v45.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v11 = v45.__r_.__value_.__l.__size_;
  }
  if (v11)
  {
    std::string v12 = ML3CPPBridgeString((const UInt8 *)&v45, 1);
    long long v13 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" equalToValue:v12];
    [v44 addObject:v13];
  }
  if (v2)
  {
    if ([v7 length] && objc_msgSend(v42, "length"))
    {
      std::string::size_type v14 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v2];
      v54[0] = v14;
      std::string v15 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v54[1] = v15;
      int64_t v16 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v42];
      v54[2] = v16;
      int8x16_t v17 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
      v54[3] = v17;
      uint64_t v18 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
      v54[4] = v18;
      char v19 = [MEMORY[0x1E4F1C978] arrayWithObjects:v54 count:5];
      uint64_t v20 = +[ML3CompoundPredicate predicateMatchingPredicates:v19];

      [v44 addObject:v20];
    }
    else
    {
      std::string v21 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id", v2, v42 equalToInt64];
      v53[0] = v21;
      uint64_t v22 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v53[1] = v22;
      int v23 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v53[2] = v23;
      std::string v24 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v53[3] = v24;
      uint64_t v25 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
      v53[4] = v25;
      uint64_t v26 = [MEMORY[0x1E4F1C978] arrayWithObjects:v53 count:5];
      uint64_t v20 = +[ML3CompoundPredicate predicateMatchingPredicates:v26];

      [v44 addObject:v20];
    }
  }
  if (objc_msgSend(v7, "length", v42) && objc_msgSend(v43, "length"))
  {
    uint64_t v27 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v43];
    v52[0] = v27;
    int v28 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v52[1] = v28;
    uint64_t v29 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v52[2] = v29;
    uint64_t v30 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v52[3] = v30;
    unsigned int v31 = [MEMORY[0x1E4F1C978] arrayWithObjects:v52 count:4];
    int v32 = +[ML3CompoundPredicate predicateMatchingPredicates:v31];

    [v44 addObject:v32];
  }
  if ([v7 length])
  {
    if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v46.__r_.__value_.__l.__size_) {
        goto LABEL_47;
      }
      unsigned int v33 = (std::string *)v46.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (!*((unsigned char *)&v46.__r_.__value_.__s + 23)) {
        goto LABEL_47;
      }
      unsigned int v33 = &v46;
    }
    id v34 = [NSString stringWithUTF8String:v33];
    unsigned int v35 = +[ML3ComparisonPredicate predicateWithProperty:@"feed_url" equalToValue:v34];
    v51[0] = v35;
    uint64_t v36 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v51[1] = v36;
    unsigned int v37 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v51[2] = v37;
    unint64_t v38 = [MEMORY[0x1E4F1C978] arrayWithObjects:v51 count:3];
    unsigned int v39 = +[ML3CompoundPredicate predicateMatchingPredicates:v38];

    [v44 addObject:v39];
  }
LABEL_47:
  id v40 = v44;
  if (SHIBYTE(v45.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v45.__r_.__value_.__l.__data_);
  }

  if (SHIBYTE(v46.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v46.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v47.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v47.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v50.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v50.__r_.__value_.__l.__data_);
  }

  return v40;
}

void sub_1B02E92FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,int a35,__int16 a36,char a37,char a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44)
{
  if (a16 < 0) {
    operator delete(__p);
  }

  if (a23 < 0) {
    operator delete(a18);
  }
  if (a30 < 0) {
    operator delete(a25);
  }
  if (a44 < 0) {
    operator delete(a39);
  }

  _Unwind_Resume(a1);
}

void ML3MatchAlbumImportItem::getDescription(ML3MatchAlbumImportItem *this)
{
  (*(void (**)(void *__return_ptr))(*(void *)this + 24))(v21);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v29, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v29 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 285212699);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v28, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v28 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 285212701);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v27, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v27 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 285212697);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v26, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v26 = __p;
  }
  (*(void (**)(ML3MatchAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v21);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v21, (uint64_t)"<ML3MatchAlbumImportItem ", 25);
  *(_DWORD *)((char *)&v21[1] + *(void *)(v21[0] - 24)) = *(_DWORD *)((unsigned char *)&v21[1] + *(void *)(v21[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" name=", 6);
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v4 = &v29;
  }
  else {
    uint64_t v4 = (std::string *)v29.__r_.__value_.__r.__words[0];
  }
  if ((v29.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v29.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v29.__r_.__value_.__l.__size_;
  }
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)v4, size);
  std::string::size_type v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)" cloudID=", 9);
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v8 = &v26;
  }
  else {
    std::string::size_type v8 = (std::string *)v26.__r_.__value_.__r.__words[0];
  }
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v9 = v26.__r_.__value_.__l.__size_;
  }
  long long v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)v8, v9);
  std::string::size_type v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)" artistName=", 12);
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v12 = &v28;
  }
  else {
    std::string v12 = (std::string *)v28.__r_.__value_.__r.__words[0];
  }
  if ((v28.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = HIBYTE(v28.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v13 = v28.__r_.__value_.__l.__size_;
  }
  std::string::size_type v14 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)v12, v13);
  std::string v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)" artistCloudID=", 15);
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int64_t v16 = &v27;
  }
  else {
    int64_t v16 = (std::string *)v27.__r_.__value_.__r.__words[0];
  }
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v17 = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v17 = v27.__r_.__value_.__l.__size_;
  }
  uint64_t v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)v16, v17);
  char v19 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v18, (uint64_t)" storeId=", 9);
  *(_DWORD *)((char *)v19 + *(void *)(*v19 - 24) + 8) = *(_DWORD *)((unsigned char *)v19 + *(void *)(*v19 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v20 = (void *)std::ostream::operator<<();
  char v30 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)&v30, 1);
  std::stringbuf::str();
  v21[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v21 + *(void *)(v21[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v21[1] = MEMORY[0x1E4FBA470] + 16;
  if (v24 < 0) {
    operator delete(v23);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v25);
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v28.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v28.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v29.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v29.__r_.__value_.__l.__data_);
  }
}

void sub_1B02E9B38(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 - 121) < 0) {
    operator delete(*(void **)(v17 - 144));
  }
  if (*(char *)(v17 - 89) < 0) {
    operator delete(*(void **)(v17 - 112));
  }
  if (*(char *)(v17 - 57) < 0) {
    operator delete(*(void **)(v17 - 80));
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3MatchAlbumImportItem::hasValue(ML3MatchAlbumImportItem *this, int a2)
{
  int v2 = a2 - 285212673;
  return (a2 - 285212673) <= 0x1A
      && ((0x5D00D83u >> v2) & 1) != 0
      && std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, dword_1B04DA724[v2]) != 0;
}

unint64_t ML3MatchAlbumImportItem::getIntegerValue(ML3MatchAlbumImportItem *this, int a2)
{
  unint64_t v2 = 0;
  if (a2 <= 285212692)
  {
    switch(a2)
    {
      case 285212680:
        uint64_t v3 = *((void *)this + 8);
        unsigned int v5 = 1634036851;
        break;
      case 285212681:
        uint64_t v3 = *((void *)this + 8);
        unsigned int v5 = 1634952047;
        break;
      case 285212683:
        uint64_t v3 = *((void *)this + 8);
        unsigned __int16 v4 = 21333;
        goto LABEL_10;
      default:
        return v2;
    }
LABEL_14:
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v9, v3, v5);
    uint64_t v6 = v10;
    if (v9)
    {
      unint64_t v2 = ML3CPP::Element::integerValue(v9);
      goto LABEL_20;
    }
    goto LABEL_19;
  }
  if (a2 == 285212693)
  {
    uint64_t v3 = *((void *)this + 8);
    unsigned int v5 = 1634361669;
    goto LABEL_14;
  }
  if (a2 != 285212695)
  {
    if (a2 != 285212696) {
      return v2;
    }
    uint64_t v3 = *((void *)this + 8);
    unsigned __int16 v4 = 16745;
LABEL_10:
    unsigned int v5 = v4 | 0x61650000;
    goto LABEL_14;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v9, *((void *)this + 8), 0x61656C72u);
  uint64_t v6 = v10;
  if (v9)
  {
    int64_t v7 = ML3CPP::Element::integerValue(v9);
    if (v7)
    {
      unint64_t v2 = (uint64_t)((double)v7 + -978307200.0);
      goto LABEL_20;
    }
  }
LABEL_19:
  unint64_t v2 = 0;
LABEL_20:
  if (v6) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  return v2;
}

void ML3MatchAlbumImportItem::getStringValue(ML3MatchAlbumImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  unsigned __int16 v4 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if (a2 > 285212696)
  {
    switch(a2)
    {
      case 285212697:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x616A4169u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_19;
        }
        break;
      case 285212699:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61736161u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_19;
        }
        break;
      case 285212701:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61726964u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_19;
        }
        break;
      default:
        return;
    }
  }
  else
  {
    switch(a2)
    {
      case 285212673:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x6173616Cu);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_19;
        }
        break;
      case 285212674:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737375u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0])
        {
LABEL_19:
          std::string::basic_string[abi:ne180100](&__str, *(void **)(__str.__r_.__value_.__r.__words[0] + 48), *(void *)(__str.__r_.__value_.__r.__words[0] + 64));
          std::string::operator=(v4, &__str);
          *(unsigned char *)(a3 + 8) = 1;
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
        }
        break;
      case 285212682:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737075u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (!__str.__r_.__value_.__r.__words[0]) {
          break;
        }
        goto LABEL_19;
      default:
        return;
    }
  }
  if (size) {
    std::__shared_weak_count::__release_shared[abi:ne180100](size);
  }
}

void sub_1B02EA0A0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3MatchAlbumImportItem::isValid(ML3MatchAlbumImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v5, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    uint64_t v3 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v5 = __p;
  }
  if ((SHIBYTE(v5.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return SHIBYTE(v5.__r_.__value_.__r.__words[2]) != 0;
  }
  BOOL v1 = v5.__r_.__value_.__l.__size_ != 0;
  operator delete(v5.__r_.__value_.__l.__data_);
  return v1;
}

void sub_1B02EA204(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ML3MatchAlbumImportItem::~ML3MatchAlbumImportItem(id *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t vars8;

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);
}

void ML3MatchArtistImportItem::getEffectiveSortAlbumArtist(ML3MatchArtistImportItem *this@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v8, (uint64_t)this, 301989890);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v10, v9.__r_.__value_.__l.__data_, v9.__r_.__value_.__l.__size_);
    *(void *)&long long v8 = &unk_1F08C3230;
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v10 = v9;
  }
  std::string::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  std::string::value_type v6 = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v10.__r_.__value_.__l.__size_;
  }
  if (size && (a2 & 1) != 0)
  {
    ML3CPPSanitizeString((std::string *)&v8, (uint64_t)&v10);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    v10.__r_.__value_.__r.__words[2] = v9.__r_.__value_.__r.__words[0];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v8;
    std::string::value_type v6 = v9.__r_.__value_.__s.__data_[7];
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  int64_t v7 = (std::string *)(a3 + 16);
  if (v6 < 0)
  {
    std::string::__init_copy_ctor_external(v7, v10.__r_.__value_.__l.__data_, v10.__r_.__value_.__l.__size_);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)&v10.__r_.__value_.__l.__data_;
    *(void *)(a3 + 32) = *((void *)&v10.__r_.__value_.__l + 2);
  }
}

void sub_1B02EA418(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ML3MatchArtistImportItem::getEffectiveAlbumArtist(ML3MatchArtistImportItem *this@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v8, (uint64_t)this, 301989889);
  if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v10, v9.__r_.__value_.__l.__data_, v9.__r_.__value_.__l.__size_);
    *(void *)&long long v8 = &unk_1F08C3230;
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v10 = v9;
  }
  std::string::size_type size = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  std::string::value_type v6 = HIBYTE(v10.__r_.__value_.__r.__words[2]);
  if ((v10.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v10.__r_.__value_.__l.__size_;
  }
  if (size && (a2 & 1) != 0)
  {
    ML3CPPSanitizeString((std::string *)&v8, (uint64_t)&v10);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
    v10.__r_.__value_.__r.__words[2] = v9.__r_.__value_.__r.__words[0];
    *(_OWORD *)&v10.__r_.__value_.__l.__data_ = v8;
    std::string::value_type v6 = v9.__r_.__value_.__s.__data_[7];
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  int64_t v7 = (std::string *)(a3 + 16);
  if (v6 < 0)
  {
    std::string::__init_copy_ctor_external(v7, v10.__r_.__value_.__l.__data_, v10.__r_.__value_.__l.__size_);
    if (SHIBYTE(v10.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v10.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v7->__r_.__value_.__l.__data_ = *(_OWORD *)&v10.__r_.__value_.__l.__data_;
    *(void *)(a3 + 32) = *((void *)&v10.__r_.__value_.__l + 2);
  }
}

void sub_1B02EA5B8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ML3MatchArtistImportItem::getSortStringValue(ML3MatchArtistImportItem *this@<X0>, int a2@<W2>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  std::string::value_type v6 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  uint64_t v7 = (*(uint64_t (**)(ML3MatchArtistImportItem *))(*(void *)this + 192))(this);
  if (v7)
  {
    if (a2) {
      ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v8, (uint64_t)this, v7);
    }
    else {
      (*(void (**)(void **__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(&v8, this, v7);
    }
    *(unsigned char *)(a3 + 8) = v9;
    std::string::operator=(v6, &__p);
    long long v8 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1B02EA74C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  *(void *)uint64_t v17 = v18;
  if (*(char *)(v17 + 39) < 0) {
    operator delete(*v19);
  }
  _Unwind_Resume(exception_object);
}

id ML3MatchArtistImportItem::getDeduplicationPredicates(ML3MatchArtistImportItem *this)
{
  v26[3] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  (*(void (**)(void *__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 301989899);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v23, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v23 = __p;
  }
  std::string::size_type size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v23.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    unsigned __int16 v4 = ML3CPPBridgeString((const UInt8 *)&v23, 1);
    std::string v5 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_universal_library_id" equalToValue:v4];
    [v2 addObject:v5];
  }
  uint64_t v6 = (*(uint64_t (**)(ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 301989893);
  (*(void (**)(void *__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 301989889);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v20, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v20 = __p;
  }
  uint64_t v7 = (void *)*((void *)this + 11);
  long long v8 = ML3CPPBridgeString((const UInt8 *)&v20, 0);
  char v9 = [v7 groupingKeyForString:v8];

  if (v6)
  {
    std::string v10 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v6];
    if (v9)
    {
      v26[0] = v10;
      std::string::size_type v11 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_universal_library_id" value:&stru_1F08D4D70 comparison:1];
      v26[1] = v11;
      std::string v12 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v9];
      v26[2] = v12;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:3];
    }
    else
    {
      v25[0] = v10;
      std::string::size_type v11 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_universal_library_id" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1];
      v25[1] = v11;
      std::string v12 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v25[2] = v12;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:3];
    std::string::size_type v13 = };
    std::string::size_type v14 = +[ML3CompoundPredicate predicateMatchingPredicates:v13];

    [v2 addObject:v14];
  }
  if (objc_msgSend(v9, "length", v20.__r_.__value_.__r.__words[0], v20.__r_.__value_.__l.__size_, v20.__r_.__value_.__r.__words[2], v21[0]))
  {
    uint64_t v15 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v9];
    v24[0] = v15;
    uint64_t v16 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_universal_library_id" value:&stru_1F08D4D70 comparison:1];
    v24[1] = v16;
    uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v24 count:2];
    uint64_t v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];

    [v2 addObject:v18];
  }

  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }

  return v2;
}

void sub_1B02EAC88(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  unsigned int v31 = v30;

  if (a14 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }

  _Unwind_Resume(a1);
}

uint64_t ML3MatchArtistImportItem::getDescription(ML3MatchArtistImportItem *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v24);
  (*(void (**)(void *__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 301989889);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v23, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v23 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 301989890);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v20, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v20 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 301989899);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v19, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v19 = __p;
  }
  (*(void (**)(ML3MatchArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 301989893);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v24, (uint64_t)"<ML3MatchArtistImportItem ", 26);
  *(_DWORD *)((char *)&v24[1] + *(void *)(v24[0] - 24)) = *(_DWORD *)((unsigned char *)&v24[1] + *(void *)(v24[0] - 24)) & 0xFFFFFFB5 | 8;
  id v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" name=", 6);
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    unsigned __int16 v4 = &v23;
  }
  else {
    unsigned __int16 v4 = (std::string *)v23.__r_.__value_.__r.__words[0];
  }
  if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v23.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v23.__r_.__value_.__l.__size_;
  }
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)v4, size);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)" artistType=", 12);
  uint64_t v7 = (void *)std::ostream::operator<<();
  long long v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)" sortName=", 10);
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    char v9 = &v20;
  }
  else {
    char v9 = (std::string *)v20.__r_.__value_.__r.__words[0];
  }
  if ((v20.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(v20.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = v20.__r_.__value_.__l.__size_;
  }
  std::string::size_type v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)v9, v10);
  std::string v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)" cloudLibraryID=", 16);
  if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v13 = &v19;
  }
  else {
    std::string::size_type v13 = (std::string *)v19.__r_.__value_.__r.__words[0];
  }
  if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v14 = HIBYTE(v19.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v14 = v19.__r_.__value_.__l.__size_;
  }
  uint64_t v15 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)v13, v14);
  uint64_t v16 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v15, (uint64_t)" storeID=", 9);
  *(_DWORD *)((char *)v16 + *(void *)(*v16 - 24) + 8) = *(_DWORD *)((unsigned char *)v16 + *(void *)(*v16 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v17 = (void *)std::ostream::operator<<();
  LOBYTE(v21[0]) = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)v21, 1);
  std::stringbuf::str();
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v19.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v20.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
  v24[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v24 + *(void *)(v24[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v24[1] = MEMORY[0x1E4FBA470] + 16;
  if (v25 < 0) {
    operator delete((void *)v24[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v26);
}

void sub_1B02EB2CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, void *a16, uint64_t a17, int a18, __int16 a19, char a20,char a21,uint64_t a22,uint64_t a23,void *__p,uint64_t a25,int a26,__int16 a27,char a28,char a29,void *a30,uint64_t a31,int a32,__int16 a33,char a34,char a35,char a36)
{
  if (a29 < 0) {
    operator delete(__p);
  }
  if (a21 < 0) {
    operator delete(a16);
  }
  if (a35 < 0) {
    operator delete(a30);
  }
  std::ostringstream::~ostringstream((uint64_t)&a36);
  _Unwind_Resume(a1);
}

BOOL ML3MatchArtistImportItem::hasValue(ML3MatchArtistImportItem *this, int a2)
{
  int v2 = a2 - 301989889;
  return (a2 - 301989889) <= 0xF
      && ((0xD413u >> v2) & 1) != 0
      && std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, dword_1B04DA790[v2]) != 0;
}

unint64_t ML3MatchArtistImportItem::getIntegerValue(ML3MatchArtistImportItem *this, int a2)
{
  unint64_t v2 = 0;
  if (a2 > 301989902)
  {
    if (a2 != 301989903)
    {
      if (a2 != 301989904) {
        return v2;
      }
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, *((void *)this + 8), 0x61656C72u);
      std::string v5 = v9;
      if (v8)
      {
        int64_t v6 = ML3CPP::Element::integerValue(v8);
        if (v6)
        {
          unint64_t v2 = (uint64_t)((double)v6 + -978307200.0);
          if (!v5) {
            return v2;
          }
          goto LABEL_15;
        }
      }
LABEL_17:
      unint64_t v2 = 0;
      if (!v5) {
        return v2;
      }
      goto LABEL_15;
    }
    uint64_t v3 = *((void *)this + 8);
    unsigned int v4 = 1634036851;
  }
  else if (a2 == 301989893)
  {
    uint64_t v3 = *((void *)this + 8);
    unsigned int v4 = 1634025833;
  }
  else
  {
    if (a2 != 301989901) {
      return v2;
    }
    uint64_t v3 = *((void *)this + 8);
    unsigned int v4 = 1634353509;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, v3, v4);
  std::string v5 = v9;
  if (!v8) {
    goto LABEL_17;
  }
  unint64_t v2 = ML3CPP::Element::integerValue(v8);
  if (v5) {
LABEL_15:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  return v2;
}

void ML3MatchArtistImportItem::getStringValue(ML3MatchArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  unsigned int v4 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if (a2 == 301989899)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61726964u);
    std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
    if (!__str.__r_.__value_.__r.__words[0]) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (a2 == 301989890)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737361u);
    std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
    if (!__str.__r_.__value_.__r.__words[0]) {
      goto LABEL_11;
    }
LABEL_9:
    std::string::basic_string[abi:ne180100](&__str, *(void **)(__str.__r_.__value_.__r.__words[0] + 48), *(void *)(__str.__r_.__value_.__r.__words[0] + 64));
    std::string::operator=(v4, &__str);
    *(unsigned char *)(a3 + 8) = 1;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
    goto LABEL_11;
  }
  if (a2 != 301989889) {
    return;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61736172u);
  std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
  if (__str.__r_.__value_.__r.__words[0]) {
    goto LABEL_9;
  }
LABEL_11:
  if (size) {
    std::__shared_weak_count::__release_shared[abi:ne180100](size);
  }
}

void sub_1B02EB6B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3MatchArtistImportItem::isValid(ML3MatchArtistImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v3);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v5, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    uint64_t v3 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v5 = __p;
  }
  if ((SHIBYTE(v5.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    return SHIBYTE(v5.__r_.__value_.__r.__words[2]) != 0;
  }
  BOOL v1 = v5.__r_.__value_.__l.__size_ != 0;
  operator delete(v5.__r_.__value_.__l.__data_);
  return v1;
}

void sub_1B02EB7F0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ML3MatchArtistImportItem::~ML3MatchArtistImportItem(id *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t vars8;

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);
}

id ML3MatchDeleteArtistImportItem::getDeduplicationPredicates(const UInt8 *this)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  BOOL v1 = ML3CPPBridgeString(this + 80, 1);
  unint64_t v2 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_universal_library_id" equalToValue:v1];
  v5[0] = v2;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v5 count:1];

  return v3;
}

void sub_1B02EB984(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3MatchDeleteArtistImportItem::getDescription(ML3MatchDeleteArtistImportItem *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v12);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)"<ML3MatchDeleteArtistImportItem ", 32);
  *(_DWORD *)((char *)&v12[1] + *(void *)(v12[0] - 24)) = *(_DWORD *)((unsigned char *)&v12[1] + *(void *)(v12[0] - 24)) & 0xFFFFFFB5 | 8;
  unint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" cloudId=", 9);
  uint64_t v6 = *((void *)this + 10);
  std::string v5 = (char *)this + 80;
  uint64_t v4 = v6;
  int v7 = v5[23];
  if (v7 >= 0) {
    uint64_t v8 = (uint64_t)v5;
  }
  else {
    uint64_t v8 = v4;
  }
  if (v7 >= 0) {
    uint64_t v9 = v5[23];
  }
  else {
    uint64_t v9 = *((void *)v5 + 1);
  }
  std::string::size_type v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, v8, v9);
  char v15 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)&v15, 1);
  std::stringbuf::str();
  v12[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v12 + *(void *)(v12[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v12[1] = MEMORY[0x1E4FBA470] + 16;
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v14);
}

void sub_1B02EBB64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL ML3MatchDeleteArtistImportItem::isValid(ML3MatchDeleteArtistImportItem *this)
{
  if (*((char *)this + 103) < 0) {
    uint64_t v1 = *((void *)this + 11);
  }
  else {
    uint64_t v1 = *((unsigned __int8 *)this + 103);
  }
  return v1 != 0;
}

void ML3MatchDeleteArtistImportItem::~ML3MatchDeleteArtistImportItem(void **this)
{
  *this = &unk_1F08C5A78;
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));

  JUMPOUT(0x1B3E93610);
}

{
  *this = &unk_1F08C5A78;
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));
}

id ML3MatchDeleteAlbumImportItem::getDeduplicationPredicates(const UInt8 *this)
{
  v5[1] = *MEMORY[0x1E4F143B8];
  uint64_t v1 = ML3CPPBridgeString(this + 80, 1);
  unint64_t v2 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" equalToValue:v1];
  v5[0] = v2;
  uint64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v5 count:1];

  return v3;
}

void sub_1B02EBD6C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3MatchDeleteAlbumImportItem::getDescription(ML3MatchDeleteAlbumImportItem *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v12);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v12, (uint64_t)"<ML3MatchDeleteAlbumImportItem ", 31);
  *(_DWORD *)((char *)&v12[1] + *(void *)(v12[0] - 24)) = *(_DWORD *)((unsigned char *)&v12[1] + *(void *)(v12[0] - 24)) & 0xFFFFFFB5 | 8;
  unint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" cloudId=", 9);
  uint64_t v6 = *((void *)this + 10);
  std::string v5 = (char *)this + 80;
  uint64_t v4 = v6;
  int v7 = v5[23];
  if (v7 >= 0) {
    uint64_t v8 = (uint64_t)v5;
  }
  else {
    uint64_t v8 = v4;
  }
  if (v7 >= 0) {
    uint64_t v9 = v5[23];
  }
  else {
    uint64_t v9 = *((void *)v5 + 1);
  }
  std::string::size_type v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, v8, v9);
  char v15 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)&v15, 1);
  std::stringbuf::str();
  v12[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v12 + *(void *)(v12[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v12[1] = MEMORY[0x1E4FBA470] + 16;
  if (v13 < 0) {
    operator delete((void *)v12[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v14);
}

void sub_1B02EBF4C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL ML3MatchDeleteAlbumImportItem::isValid(ML3MatchDeleteAlbumImportItem *this)
{
  if (*((char *)this + 103) < 0) {
    uint64_t v1 = *((void *)this + 11);
  }
  else {
    uint64_t v1 = *((unsigned __int8 *)this + 103);
  }
  return v1 != 0;
}

void ML3MatchDeleteAlbumImportItem::~ML3MatchDeleteAlbumImportItem(void **this)
{
  *this = &unk_1F08C5888;
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));

  JUMPOUT(0x1B3E93610);
}

{
  *this = &unk_1F08C5888;
  if (*((char *)this + 103) < 0) {
    operator delete(this[10]);
  }
  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));
}

void *std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(void *result, const void *a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    uint64_t v4 = result;
    if (a4 >> 61) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    uint64_t result = std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(a4);
    int v7 = result;
    void *v4 = result;
    v4[1] = result;
    void v4[2] = &result[v8];
    size_t v9 = a3 - (void)a2;
    if (v9) {
      uint64_t result = memmove(result, a2, v9);
    }
    v4[1] = (char *)v7 + v9;
  }
  return result;
}

void sub_1B02EC104(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<std::unordered_set<std::string>>::__init_with_size[abi:ne180100]<std::unordered_set<std::string>*,std::unordered_set<std::string>*>(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a4)
  {
    if (a4 >= 0x666666666666667) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v6 = (void *)result;
    uint64_t result = (uint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unordered_set<std::string>>>(a4);
    uint64_t v7 = result;
    void *v6 = result;
    v6[1] = result;
    _DWORD v6[2] = result + 40 * v8;
    if (a2 != a3)
    {
      uint64_t v9 = 0;
      do
      {
        uint64_t result = std::unordered_set<std::string>::unordered_set(v7 + v9, a2 + v9);
        v9 += 40;
      }
      while (a2 + v9 != a3);
      v7 += v9;
    }
    v6[1] = v7;
  }
  return result;
}

void sub_1B02EC1D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void **a9)
{
}

uint64_t std::unordered_set<std::string>::unordered_set(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_DWORD *)(a1 + 32) = *(_DWORD *)(a2 + 32);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(a1, *(void *)(a2 + 8));
  for (CFIndex i = *(unsigned __int8 **)(a2 + 16); i; CFIndex i = *(unsigned __int8 **)i)
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(a1, i + 16, (uint64_t)(i + 16));
  return a1;
}

void sub_1B02EC274(_Unwind_Exception *a1)
{
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(v1);
  _Unwind_Resume(a1);
}

void std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  unint64_t v7 = std::__string_hash<char>::operator()[abi:ne180100]((uint64_t)a2);
  unint64_t v8 = v7;
  unint64_t v9 = *(void *)(a1 + 8);
  if (v9)
  {
    uint8x8_t v10 = (uint8x8_t)vcnt_s8((int8x8_t)v9);
    v10.i16[0] = vaddlv_u8(v10);
    unint64_t v11 = v10.u32[0];
    if (v10.u32[0] > 1uLL)
    {
      unint64_t v3 = v7;
      if (v7 >= v9) {
        unint64_t v3 = v7 % v9;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v7;
    }
    std::string v12 = *(unsigned __int8 ***)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (CFIndex i = *v12; i; CFIndex i = *(unsigned __int8 **)i)
      {
        unint64_t v14 = *((void *)i + 1);
        if (v14 == v8)
        {
          if (std::equal_to<std::string>::operator()[abi:ne180100](i + 16, a2)) {
            return;
          }
        }
        else
        {
          if (v11 > 1)
          {
            if (v14 >= v9) {
              v14 %= v9;
            }
          }
          else
          {
            v14 &= v9 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  char v15 = operator new(0x28uLL);
  *char v15 = 0;
  v15[1] = v8;
  uint64_t v16 = (std::string *)(v15 + 2);
  if (*(char *)(a3 + 23) < 0)
  {
    std::string::__init_copy_ctor_external(v16, *(const std::string::value_type **)a3, *(void *)(a3 + 8));
  }
  else
  {
    *(_OWORD *)&v16->__r_.__value_.__l.__data_ = *(_OWORD *)a3;
    v15[4] = *(void *)(a3 + 16);
  }
  float v17 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v18 = *(float *)(a1 + 32);
  if (!v9 || (float)(v18 * (float)v9) < v17)
  {
    BOOL v19 = 1;
    if (v9 >= 3) {
      BOOL v19 = (v9 & (v9 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v9);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(a1, v22);
    unint64_t v9 = *(void *)(a1 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v8 >= v9) {
        unint64_t v3 = v8 % v9;
      }
      else {
        unint64_t v3 = v8;
      }
    }
    else
    {
      unint64_t v3 = (v9 - 1) & v8;
    }
  }
  uint64_t v23 = *(void *)a1;
  char v24 = *(void **)(*(void *)a1 + 8 * v3);
  if (v24)
  {
    *char v15 = *v24;
LABEL_41:
    *char v24 = v15;
    goto LABEL_42;
  }
  *char v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v23 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v25 = *(void *)(*v15 + 8);
    if ((v9 & (v9 - 1)) != 0)
    {
      if (v25 >= v9) {
        v25 %= v9;
      }
    }
    else
    {
      v25 &= v9 - 1;
    }
    char v24 = (void *)(*(void *)a1 + 8 * v25);
    goto LABEL_41;
  }
LABEL_42:
  ++*(void *)(a1 + 24);
}

void sub_1B02EC4C0(_Unwind_Exception *a1)
{
  std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](0, v1);
  _Unwind_Resume(a1);
}

unint64_t std::__string_hash<char>::operator()[abi:ne180100](uint64_t a1)
{
  int v1 = *(char *)(a1 + 23);
  unint64_t v2 = *(void *)(a1 + 8);
  BOOL v3 = v1 < 0;
  if (v1 >= 0) {
    uint64_t v4 = (uint64_t *)a1;
  }
  else {
    uint64_t v4 = *(uint64_t **)a1;
  }
  if (!v3) {
    unint64_t v2 = *(unsigned __int8 *)(a1 + 23);
  }
  if (v2 > 0x20)
  {
    if (v2 > 0x40)
    {
      unint64_t v34 = 0x9DDFEA08EB382D69;
      uint64_t v44 = *(uint64_t *)((char *)v4 + v2 - 48);
      uint64_t v43 = *(uint64_t *)((char *)v4 + v2 - 40);
      uint64_t v45 = *(uint64_t *)((char *)v4 + v2 - 24);
      uint64_t v47 = *(uint64_t *)((char *)v4 + v2 - 64);
      uint64_t v46 = *(uint64_t *)((char *)v4 + v2 - 56);
      uint64_t v48 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v49 = *(uint64_t *)((char *)v4 + v2 - 8);
      unint64_t v50 = v46 + v48;
      unint64_t v51 = 0x9DDFEA08EB382D69
          * (v45 ^ ((0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))) >> 47) ^ (0x9DDFEA08EB382D69 * (v45 ^ (v44 + v2))));
      unint64_t v52 = 0x9DDFEA08EB382D69 * (v51 ^ (v51 >> 47));
      unint64_t v53 = v47 + v2 + v46 + v44;
      uint64_t v54 = v53 + v43;
      unint64_t v55 = __ROR8__(v53, 44) + v47 + v2 + __ROR8__(v43 + v47 + v2 - 0x622015F714C7D297 * (v51 ^ (v51 >> 47)), 21);
      uint64_t v56 = v46 + v48 + *(uint64_t *)((char *)v4 + v2 - 32) - 0x4B6D499041670D8DLL;
      uint64_t v57 = v56 + v45 + v48;
      uint64_t v58 = __ROR8__(v57, 44);
      uint64_t v59 = v57 + v49;
      uint64_t v60 = v58 + v56 + __ROR8__(v56 + v43 + v49, 21);
      uint64_t v62 = *v4;
      int v61 = v4 + 4;
      unint64_t v63 = v62 - 0x4B6D499041670D8DLL * v43;
      uint64_t v64 = -(uint64_t)((v2 - 1) & 0xFFFFFFFFFFFFFFC0);
      do
      {
        uint64_t v65 = *(v61 - 3);
        uint64_t v66 = v63 + v54 + v50 + v65;
        uint64_t v67 = v61[2];
        uint64_t v68 = v61[3];
        uint64_t v69 = v61[1];
        unint64_t v50 = v69 + v54 - 0x4B6D499041670D8DLL * __ROR8__(v50 + v55 + v67, 42);
        uint64_t v70 = v52 + v59;
        uint64_t v71 = *(v61 - 2);
        uint64_t v72 = *(v61 - 1);
        uint64_t v73 = *(v61 - 4) - 0x4B6D499041670D8DLL * v55;
        uint64_t v74 = v73 + v59 + v72;
        uint64_t v75 = v73 + v65 + v71;
        uint64_t v54 = v75 + v72;
        uint64_t v76 = __ROR8__(v75, 44) + v73;
        unint64_t v77 = (0xB492B66FBE98F273 * __ROR8__(v66, 37)) ^ v60;
        unint64_t v63 = 0xB492B66FBE98F273 * __ROR8__(v70, 33);
        unint64_t v55 = v76 + __ROR8__(v74 + v77, 21);
        unint64_t v78 = v63 + v60 + *v61;
        uint64_t v59 = v78 + v69 + v67 + v68;
        uint64_t v60 = __ROR8__(v78 + v69 + v67, 44) + v78 + __ROR8__(v50 + v71 + v78 + v68, 21);
        v61 += 8;
        unint64_t v52 = v77;
        v64 += 64;
      }
      while (v64);
      unint64_t v79 = 0x9DDFEA08EB382D69
          * (v59 ^ ((0x9DDFEA08EB382D69 * (v59 ^ v54)) >> 47) ^ (0x9DDFEA08EB382D69 * (v59 ^ v54)));
      unint64_t v80 = v63
          - 0x622015F714C7D297
          * ((0x9DDFEA08EB382D69
            * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) ^ ((0x9DDFEA08EB382D69 * (v60 ^ ((0x9DDFEA08EB382D69 * (v60 ^ v55)) >> 47) ^ (0x9DDFEA08EB382D69 * (v60 ^ v55)))) >> 47));
      unint64_t v81 = 0x9DDFEA08EB382D69
          * (v80 ^ (v77 - 0x4B6D499041670D8DLL * (v50 ^ (v50 >> 47)) - 0x622015F714C7D297 * (v79 ^ (v79 >> 47))));
      unint64_t v35 = 0x9DDFEA08EB382D69 * (v80 ^ (v81 >> 47) ^ v81);
    }
    else
    {
      unint64_t v9 = (char *)v4 + v2;
      uint64_t v10 = *(uint64_t *)((char *)v4 + v2 - 16);
      uint64_t v11 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v12 = v4[1];
      uint64_t v13 = *v4 - 0x3C5A37A36834CED9 * (v10 + v2);
      uint64_t v16 = v4 + 2;
      uint64_t v14 = v4[2];
      uint64_t v15 = v16[1];
      uint64_t v17 = __ROR8__(v13 + v15, 52);
      uint64_t v18 = __ROR8__(v13, 37);
      uint64_t v19 = v13 + v12;
      uint64_t v20 = __ROR8__(v19, 7);
      uint64_t v21 = v19 + v14;
      uint64_t v22 = v20 + v18;
      uint64_t v23 = *((void *)v9 - 4) + v14;
      uint64_t v24 = v11 + v15;
      uint64_t v25 = __ROR8__(v24 + v23, 52);
      uint64_t v26 = v22 + v17;
      uint64_t v27 = __ROR8__(v23, 37);
      uint64_t v28 = *((void *)v9 - 3) + v23;
      uint64_t v29 = __ROR8__(v28, 7);
      uint64_t v30 = v26 + __ROR8__(v21, 31);
      uint64_t v31 = v28 + v10;
      uint64_t v32 = v31 + v24;
      uint64_t v33 = v21 + v15 + v27 + v29 + v25 + __ROR8__(v31, 31);
      unint64_t v34 = 0x9AE16A3B2F90404FLL;
      unint64_t v35 = v30
          - 0x3C5A37A36834CED9
          * ((0xC3A5C85C97CB3127 * (v32 + v30) - 0x651E95C4D06FBFB1 * v33) ^ ((0xC3A5C85C97CB3127 * (v32 + v30)
                                                                                 - 0x651E95C4D06FBFB1 * v33) >> 47));
    }
    return (v35 ^ (v35 >> 47)) * v34;
  }
  else
  {
    if (v2 > 0x10)
    {
      uint64_t v36 = v4[1];
      unint64_t v37 = 0xB492B66FBE98F273 * *v4;
      unint64_t v38 = 0x9AE16A3B2F90404FLL * *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v39 = __ROR8__(v38, 30) + __ROR8__(v37 - v36, 43);
      unint64_t v40 = v37 + v2 + __ROR8__(v36 ^ 0xC949D7C7509E6557, 20) - v38;
      unint64_t v41 = 0x9DDFEA08EB382D69 * (v40 ^ (v39 - 0x3C5A37A36834CED9 * *(uint64_t *)((char *)v4 + v2 - 16)));
      unint64_t v42 = v40 ^ (v41 >> 47) ^ v41;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    if (v2 >= 9)
    {
      uint64_t v5 = *v4;
      uint64_t v6 = *(uint64_t *)((char *)v4 + v2 - 8);
      uint64_t v7 = __ROR8__(v6 + v2, v2);
      return (0x9DDFEA08EB382D69
            * ((0x9DDFEA08EB382D69
              * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) ^ ((0x9DDFEA08EB382D69 * (v7 ^ ((0x9DDFEA08EB382D69 * (v7 ^ v5)) >> 47) ^ (0x9DDFEA08EB382D69 * (v7 ^ v5)))) >> 47))) ^ v6;
    }
    if (v2 >= 4)
    {
      int v82 = *(_DWORD *)v4;
      uint64_t v83 = *(unsigned int *)((char *)v4 + v2 - 4);
      unint64_t v84 = 0x9DDFEA08EB382D69 * ((v2 + (8 * v82)) ^ v83);
      unint64_t v42 = v83 ^ (v84 >> 47) ^ v84;
      return 0x9DDFEA08EB382D69 * ((0x9DDFEA08EB382D69 * v42) ^ ((0x9DDFEA08EB382D69 * v42) >> 47));
    }
    unint64_t result = 0x9AE16A3B2F90404FLL;
    if (v2)
    {
      unint64_t v85 = (0xC949D7C7509E6557 * (v2 + 4 * *((unsigned __int8 *)v4 + v2 - 1))) ^ (0x9AE16A3B2F90404FLL
                                                                                     * (*(unsigned __int8 *)v4 | ((unint64_t)*((unsigned __int8 *)v4 + (v2 >> 1)) << 8)));
      return 0x9AE16A3B2F90404FLL * (v85 ^ (v85 >> 47));
    }
  }
  return result;
}

BOOL std::equal_to<std::string>::operator()[abi:ne180100](unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2 = a1[23];
  if ((v2 & 0x80u) == 0) {
    uint64_t v3 = a1[23];
  }
  else {
    uint64_t v3 = *((void *)a1 + 1);
  }
  uint64_t v4 = a2[23];
  int v5 = (char)v4;
  if ((v4 & 0x80u) != 0) {
    uint64_t v4 = *((void *)a2 + 1);
  }
  if (v3 != v4) {
    return 0;
  }
  if (v5 < 0) {
    a2 = *(unsigned __int8 **)a2;
  }
  if ((v2 & 0x80) != 0) {
    return memcmp(*(const void **)a1, a2, *((void *)a1 + 1)) == 0;
  }
  if (!a1[23]) {
    return 1;
  }
  uint64_t v6 = v2 - 1;
  do
  {
    int v8 = *a1++;
    int v7 = v8;
    int v10 = *a2++;
    int v9 = v10;
    BOOL v12 = v6-- != 0;
    BOOL v13 = v7 == v9;
    BOOL v14 = v7 == v9;
  }
  while (v13 && v12);
  return v14;
}

void std::__hash_node_destructor<std::allocator<std::__hash_node<std::string,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 39) < 0) {
      operator delete(__p[2]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::unordered_set<std::string>>>(unint64_t a1)
{
  if (a1 >= 0x666666666666667) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(40 * a1);
}

uint64_t MIPTVShowReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  int v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  int v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(MIPArtist);
        objc_storeStrong((id *)(a1 + 8), v17);
        if PBReaderPlaceMark() && (MIPArtistReadFrom(v17, a2)) {
          goto LABEL_47;
        }
        goto LABEL_59;
      case 2u:
        uint64_t v17 = objc_alloc_init(MIPSeries);
        objc_storeStrong((id *)(a1 + 56), v17);
        if (!PBReaderPlaceMark() || (MIPSeriesReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_59;
        }
        goto LABEL_47;
      case 3u:
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 68) |= 1u;
        while (2)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
            *(void *)(a2 + v22) = v23 + 1;
            v21 |= (unint64_t)(v24 & 0x7F) << v19;
            if (v24 < 0)
            {
              v19 += 7;
              BOOL v14 = v20++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_51;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_51:
        uint64_t v33 = 48;
        goto LABEL_56;
      case 4u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 16;
        goto LABEL_44;
      case 5u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 24;
        goto LABEL_44;
      case 6u:
        char v27 = 0;
        unsigned int v28 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 68) |= 2u;
        while (2)
        {
          uint64_t v29 = *v3;
          unint64_t v30 = *(void *)(a2 + v29);
          if (v30 == -1 || v30 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v31 = *(unsigned char *)(*(void *)(a2 + *v7) + v30);
            *(void *)(a2 + v29) = v30 + 1;
            v21 |= (unint64_t)(v31 & 0x7F) << v27;
            if (v31 < 0)
            {
              v27 += 7;
              BOOL v14 = v28++ >= 9;
              if (v14)
              {
                LODWORD(v21) = 0;
                goto LABEL_55;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v21) = 0;
        }
LABEL_55:
        uint64_t v33 = 64;
LABEL_56:
        *(_DWORD *)(a1 + v33) = v21;
        goto LABEL_57;
      case 7u:
        uint64_t v25 = PBReaderReadString();
        uint64_t v26 = 40;
LABEL_44:
        uint64_t v32 = *(void **)(a1 + v26);
        *(void *)(a1 + v26) = v25;

        goto LABEL_57;
      case 8u:
        uint64_t v17 = objc_alloc_init(MIPGenre);
        objc_storeStrong((id *)(a1 + 32), v17);
        if PBReaderPlaceMark() && (MIPGenreReadFrom((uint64_t)v17, a2))
        {
LABEL_47:
          PBReaderRecallMark();

LABEL_57:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_59:

        return 0;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_57;
    }
  }
}

void ML3ExceptionUnknownException(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  unsigned int v9 = (void *)[[NSString alloc] initWithFormat:@"ML3DatabaseConnectionRaiseUnknownException" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  char v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUnknownException_block_invoke;
  char v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  BOOL v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UnknownException" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UnknownException", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptionUnknownException_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptionNilPath(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  unsigned int v9 = (void *)[[NSString alloc] initWithFormat:@"Tried to open a database without setting a path to a database file first." arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  char v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionNilPath_block_invoke;
  char v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  BOOL v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"NilPath" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"NilPath", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptionNilPath_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3DatabaseConnectionCheckDatabasePathAndRaiseIfNecessary(void *a1)
{
  id v16 = a1;
  if (!v16) {
    ML3DatabaseConnectionRaiseNilDatabasePath();
  }
  int v1 = MLMobileUserHomeDirectory();
  uint64_t v2 = [v1 stringByAppendingPathComponent:@"Media"];

  ML3DatabaseConnectionCheckPathMediaContainer(v2);
  uint64_t v3 = [NSString pathWithComponents:&unk_1F090E9F8];
  uint64_t v11 = [v16 rangeOfString:v3];
  uint64_t v12 = v4;
  if (v11 == 0x7FFFFFFFFFFFFFFFLL) {
    ML3ExceptionUnexpectedPath((uint64_t)v16, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v16);
  }
  char v13 = objc_msgSend(v16, "stringByReplacingCharactersInRange:withString:", v11, v12, &stru_1F08D4D70);
  if (MSVDeviceSupportsMultipleLibraries()) {
    ML3DatabaseConnectionCheckPathUserHashContainer(v13);
  }
  BOOL v14 = [v13 stringByAppendingPathComponent:@"iTunes_Control"];

  ML3DatabaseConnectionCheckPathiTunesControl(v14);
  dispatch_time_t v15 = [v14 stringByAppendingPathComponent:@"iTunes"];

  ML3DatabaseConnectionCheckPathiTunesContainer(v15);
  ML3DatabaseConnectionCheckPathDatabase(v16);
}

void ML3DatabaseConnectionCheckPathMediaContainer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v3 = [v2 fileExistsAtPath:v1];
  if (v3)
  {
    id v32 = 0;
    uint64_t v11 = [v2 attributesOfItemAtPath:v1 error:&v32];
    id v12 = v32;
    dispatch_semaphore_t v20 = v12;
    if (v12) {
      ML3RaiseExceptionWithError(v12);
    }
    if (!v11) {
      ML3ExceptionMediaContainerNilAttributes((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v1);
    }
    uint64_t v21 = getuid();
    uint64_t v22 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F28318]];
    uint64_t v23 = [v22 unsignedIntegerValue];

    if (v23 != v21)
    {
      if (v23) {
        ML3ExceptionMediaContainerOwnerMismatch(v24, v25, v26, v27, v28, v29, v30, v31, v21);
      }
      else {
        ML3ExceptionMediaContainerOwnerIsRoot(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v1);
      }
    }
  }
  else
  {
    ML3ExceptionMediaContainerDoesNotExist(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v1);
  }
}

void ML3ExceptionUnexpectedPath(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  uint64_t v9 = (void *)[[NSString alloc] initWithFormat:@"Encountered unexpected path: %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUnexpectedPath_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UnexpectedPath" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UnexpectedPath", v9, v16, v17, v18, v19 format];
}

void ML3DatabaseConnectionCheckPathUserHashContainer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v3 = [v2 fileExistsAtPath:v1];
  if (v3)
  {
    id v32 = 0;
    uint64_t v11 = [v2 attributesOfItemAtPath:v1 error:&v32];
    id v12 = v32;
    dispatch_semaphore_t v20 = v12;
    if (v12) {
      ML3RaiseExceptionWithError(v12);
    }
    if (!v11) {
      ML3ExceptionUserHashContainerNilAttributes((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v1);
    }
    uint64_t v21 = getuid();
    uint64_t v22 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F28318]];
    uint64_t v23 = [v22 unsignedIntegerValue];

    if (v23 != v21)
    {
      if (v23) {
        ML3ExceptionUserHashContainerOwnerMismatch(v24, v25, v26, v27, v28, v29, v30, v31, v21);
      }
      else {
        ML3ExceptionUserHashContainerOwnerIsRoot(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v1);
      }
    }
  }
  else
  {
    ML3ExceptionUserHashContainerDoesNotExist(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v1);
  }
}

void ML3DatabaseConnectionCheckPathiTunesControl(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v3 = [v2 fileExistsAtPath:v1];
  if (v3)
  {
    id v32 = 0;
    uint64_t v11 = [v2 attributesOfItemAtPath:v1 error:&v32];
    id v12 = v32;
    dispatch_semaphore_t v20 = v12;
    if (v12) {
      ML3RaiseExceptionWithError(v12);
    }
    if (!v11) {
      ML3ExceptioniTunesControlNilAttributes((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v1);
    }
    uint64_t v21 = getuid();
    uint64_t v22 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F28318]];
    uint64_t v23 = [v22 unsignedIntegerValue];

    if (v23 != v21)
    {
      if (v23) {
        ML3ExceptioniTunesControlOwnerMismatch(v24, v25, v26, v27, v28, v29, v30, v31, v21);
      }
      else {
        ML3ExceptioniTunesControlOwnerIsRoot(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v1);
      }
    }
  }
  else
  {
    ML3ExceptioniTunesControlDoesNotExist(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v1);
  }
}

void ML3DatabaseConnectionCheckPathiTunesContainer(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v3 = [v2 fileExistsAtPath:v1];
  if (v3)
  {
    id v32 = 0;
    uint64_t v11 = [v2 attributesOfItemAtPath:v1 error:&v32];
    id v12 = v32;
    dispatch_semaphore_t v20 = v12;
    if (v12) {
      ML3RaiseExceptionWithError(v12);
    }
    if (!v11) {
      ML3ExceptioniTunesContainerNilAttributes((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v1);
    }
    uint64_t v21 = getuid();
    uint64_t v22 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F28318]];
    uint64_t v23 = [v22 unsignedIntegerValue];

    if (v23 != v21)
    {
      if (v23) {
        ML3ExceptioniTunesContainerOwnerMismatch(v24, v25, v26, v27, v28, v29, v30, v31, v21);
      }
      else {
        ML3ExceptioniTunesContainerOwnerIsRoot(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v1);
      }
    }
  }
  else
  {
    ML3ExceptioniTunesContainerDoesNotExist(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v1);
  }
}

void ML3DatabaseConnectionCheckPathDatabase(void *a1)
{
  id v1 = a1;
  uint64_t v2 = [MEMORY[0x1E4F28CB8] defaultManager];
  uint64_t v3 = [v2 fileExistsAtPath:v1];
  if (v3)
  {
    id v32 = 0;
    uint64_t v11 = [v2 attributesOfItemAtPath:v1 error:&v32];
    id v12 = v32;
    dispatch_semaphore_t v20 = v12;
    if (v12) {
      ML3RaiseExceptionWithError(v12);
    }
    if (!v11) {
      ML3ExceptionDatabaseNilAttributes((uint64_t)v12, v13, v14, v15, v16, v17, v18, v19, (uint64_t)v1);
    }
    uint64_t v21 = getuid();
    uint64_t v22 = [v11 objectForKeyedSubscript:*MEMORY[0x1E4F28318]];
    uint64_t v23 = [v22 unsignedIntegerValue];

    if (v23 != v21)
    {
      if (v23) {
        ML3ExceptionDatabaseOwnerMismatch(v24, v25, v26, v27, v28, v29, v30, v31, v21);
      }
      else {
        ML3ExceptionDatabaseOwnerIsRoot(v24, v25, v26, v27, v28, v29, v30, v31, (uint64_t)v1);
      }
    }
  }
  else
  {
    ML3ExceptionDatabaseDoesNotExist(v3, v4, v5, v6, v7, v8, v9, v10, (uint64_t)v1);
  }
}

void ML3RaiseExceptionWithError(void *a1)
{
  id v5 = a1;
  id v1 = [v5 domain];
  int v2 = [v1 isEqual:*MEMORY[0x1E4F281F8]];

  uint64_t v3 = v5;
  if (v2)
  {
    uint64_t v4 = [v5 code];
    if (v4 > 511)
    {
      switch(v4)
      {
        case 512:
          ML3ExceptionNSFileWriteUnknownError(v5);
          break;
        case 513:
          ML3ExceptionNSFileWriteNoPermissionError(v5);
          break;
        case 514:
          ML3ExceptionNSFileWriteInvalidFileNameError(v5);
          break;
        case 515:
          goto LABEL_17;
        case 516:
          ML3ExceptionNSFileWriteFileExistsError(v5);
          break;
        case 517:
          ML3ExceptionNSFileWriteInapplicableStringEncodingError(v5);
          break;
        case 518:
          ML3ExceptionNSFileWriteUnsupportedSchemeError(v5);
          break;
        default:
          if (v4 == 640)
          {
            ML3ExceptionNSFileWriteOutOfSpaceError(v5);
          }
          else if (v4 == 642)
          {
            ML3ExceptionNSFileWriteVolumeReadOnlyError(v5);
          }
          else
          {
LABEL_17:
            ML3ExceptionUnexpectedNSCocoaError(v5);
          }
          break;
      }
    }
    else
    {
      switch(v4)
      {
        case 255:
          ML3ExceptionNSFileLockingError(v5);
          break;
        case 256:
          ML3ExceptionNSFileReadUnknownError(v5);
          break;
        case 257:
          ML3ExceptionNSFileReadNoPermissionError(v5);
          break;
        case 258:
          ML3ExceptionNSFileReadInvalidFileNameError(v5);
          break;
        case 259:
          ML3ExceptionNSFileReadCorruptFileError(v5);
          break;
        case 260:
          ML3ExceptionNSFileReadNoSuchFileError(v5);
          break;
        case 261:
          ML3ExceptionNSFileReadInapplicableStringEncodingError(v5);
          break;
        case 262:
          ML3ExceptionNSFileReadUnsupportedSchemeError(v5);
          break;
        case 263:
          ML3ExceptionNSFileReadTooLargeError(v5);
          break;
        case 264:
          ML3ExceptionNSFileReadUnknownStringEncodingError(v5);
          break;
        default:
          if (v4 != 4) {
            goto LABEL_17;
          }
          ML3ExceptionNSFileNoSuchFileError(v5);
          break;
      }
    }
    uint64_t v3 = v5;
  }
  ML3ExceptionUnexpectedError(v3);
}

void ML3ExceptionDatabaseNilAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  uint64_t v9 = (void *)[[NSString alloc] initWithFormat:@"Could not fetch attributes at path %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionDatabaseNilAttributes_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"DatabaseNilAttributes" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"DatabaseNilAttributes", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionDatabaseOwnerIsRoot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  uint64_t v9 = (void *)[[NSString alloc] initWithFormat:@"Owner is root. path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionDatabaseOwnerIsRoot_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"DatabaseOwnerIsRoot" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"DatabaseOwnerIsRoot", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionDatabaseOwnerMismatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  uint64_t v9 = (void *)[[NSString alloc] initWithFormat:@"Path owner mismatch. uid=%u ownerID=%lu path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionDatabaseOwnerMismatch_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"DatabaseOwnerMismatch" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"DatabaseOwnerMismatch", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionDatabaseDoesNotExist(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  uint64_t v9 = (void *)[[NSString alloc] initWithFormat:@"%@ does not exist" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionDatabaseDoesNotExist_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"DatabaseDoesNotExist" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"DatabaseDoesNotExist", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptionDatabaseDoesNotExist_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionDatabaseOwnerMismatch_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionDatabaseOwnerIsRoot_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionDatabaseNilAttributes_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptionNSFileNoSuchFileError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileNoSuchFileError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileNoSuchFileError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileNoSuchFileError", v1 format];
}

void ML3ExceptionNSFileLockingError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileLockingError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileLockingError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileLockingError", v1 format];
}

void ML3ExceptionNSFileReadUnknownError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadUnknownError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadUnknownError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadUnknownError", v1 format];
}

void ML3ExceptionNSFileReadNoPermissionError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadNoPermissionError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadNoPermissionError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadNoPermissionError", v1 format];
}

void ML3ExceptionNSFileReadInvalidFileNameError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadInvalidFileNameError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadInvalidFileNameError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadInvalidFileNameError", v1 format];
}

void ML3ExceptionNSFileReadCorruptFileError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadCorruptFileError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadCorruptFileError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadCorruptFileError", v1 format];
}

void ML3ExceptionNSFileReadNoSuchFileError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadNoSuchFileError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadNoSuchFileError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadNoSuchFileError", v1 format];
}

void ML3ExceptionNSFileReadInapplicableStringEncodingError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadInapplicableStringEncodingError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadInapplicableStringEncodingError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadInapplicableStringEncodingError", v1 format];
}

void ML3ExceptionNSFileReadUnsupportedSchemeError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadUnsupportedSchemeError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadUnsupportedSchemeError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadUnsupportedSchemeError", v1 format];
}

void ML3ExceptionNSFileReadTooLargeError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadTooLargeError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadTooLargeError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadTooLargeError", v1 format];
}

void ML3ExceptionNSFileReadUnknownStringEncodingError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileReadUnknownStringEncodingError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileReadUnknownStringEncodingError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileReadUnknownStringEncodingError", v1 format];
}

void ML3ExceptionNSFileWriteUnknownError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteUnknownError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteUnknownError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteUnknownError", v1 format];
}

void ML3ExceptionNSFileWriteNoPermissionError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteNoPermissionError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteNoPermissionError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteNoPermissionError", v1 format];
}

void ML3ExceptionNSFileWriteInvalidFileNameError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteInvalidFileNameError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteInvalidFileNameError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteInvalidFileNameError", v1 format];
}

void ML3ExceptionNSFileWriteFileExistsError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteFileExistsError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteFileExistsError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteFileExistsError", v1 format];
}

void ML3ExceptionNSFileWriteInapplicableStringEncodingError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteInapplicableStringEncodingError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteInapplicableStringEncodingError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteInapplicableStringEncodingError", v1 format];
}

void ML3ExceptionNSFileWriteUnsupportedSchemeError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteUnsupportedSchemeError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteUnsupportedSchemeError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteUnsupportedSchemeError", v1 format];
}

void ML3ExceptionNSFileWriteOutOfSpaceError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteOutOfSpaceError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteOutOfSpaceError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteOutOfSpaceError", v1 format];
}

void ML3ExceptionNSFileWriteVolumeReadOnlyError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionNSFileWriteVolumeReadOnlyError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"NSFileWriteVolumeReadOnlyError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"NSFileWriteVolumeReadOnlyError", v1 format];
}

void ML3ExceptionUnexpectedNSCocoaError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionUnexpectedNSCocoaError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"UnexpectedNSCocoaError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"UnexpectedNSCocoaError", v1 format];
}

void ML3ExceptionUnexpectedError(void *a1)
{
  v10[1] = *MEMORY[0x1E4F143B8];
  id v1 = a1;
  dispatch_semaphore_t v2 = dispatch_semaphore_create(0);
  uint64_t v3 = (void *)MEMORY[0x1E4F77950];
  uint64_t v4 = *MEMORY[0x1E4F778D0];
  v10[0] = v1;
  id v5 = [MEMORY[0x1E4F1C978] arrayWithObjects:v10 count:1];
  v8[0] = MEMORY[0x1E4F143A8];
  v8[1] = 3221225472;
  _DWORD v8[2] = __ML3ExceptionUnexpectedError_block_invoke;
  v8[3] = &unk_1E5FB8298;
  dispatch_semaphore_t v9 = v2;
  uint64_t v6 = v2;
  [v3 snapshotWithDomain:v4 type:@"Bug" subType:@"ML3FatalError" context:@"UnexpectedError" triggerThresholdValues:0 events:v5 completion:v8];

  dispatch_time_t v7 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v6, v7);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"ML3Exception%@ - Encountered error: %@", @"UnexpectedError", v1 format];
}

intptr_t __ML3ExceptionUnexpectedError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionUnexpectedNSCocoaError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteVolumeReadOnlyError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteOutOfSpaceError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteUnsupportedSchemeError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteInapplicableStringEncodingError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteFileExistsError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteInvalidFileNameError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteNoPermissionError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileWriteUnknownError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadUnknownStringEncodingError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadTooLargeError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadUnsupportedSchemeError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadInapplicableStringEncodingError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadNoSuchFileError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadCorruptFileError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadInvalidFileNameError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadNoPermissionError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileReadUnknownError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileLockingError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionNSFileNoSuchFileError_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptioniTunesContainerNilAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Could not fetch attributes at path %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesContainerNilAttributes_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesContainerNilAttributes" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesContainerNilAttributes", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesContainerOwnerIsRoot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Owner is root. path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesContainerOwnerIsRoot_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesContainerOwnerIsRoot" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesContainerOwnerIsRoot", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesContainerOwnerMismatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Path owner mismatch. uid=%u ownerID=%lu path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesContainerOwnerMismatch_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesContainerOwnerMismatch" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesContainerOwnerMismatch", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesContainerDoesNotExist(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"%@ does not exist" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesContainerDoesNotExist_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesContainerDoesNotExist" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesContainerDoesNotExist", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptioniTunesContainerDoesNotExist_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesContainerOwnerMismatch_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesContainerOwnerIsRoot_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesContainerNilAttributes_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptioniTunesControlNilAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Could not fetch attributes at path %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesControlNilAttributes_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesControlNilAttributes" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesControlNilAttributes", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesControlOwnerIsRoot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Owner is root. path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesControlOwnerIsRoot_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesControlOwnerIsRoot" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesControlOwnerIsRoot", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesControlOwnerMismatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Path owner mismatch. uid=%u ownerID=%lu path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesControlOwnerMismatch_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesControlOwnerMismatch" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesControlOwnerMismatch", v9, v16, v17, v18, v19 format];
}

void ML3ExceptioniTunesControlDoesNotExist(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"%@ does not exist" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptioniTunesControlDoesNotExist_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"iTunesControlDoesNotExist" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"iTunesControlDoesNotExist", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptioniTunesControlDoesNotExist_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesControlOwnerMismatch_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesControlOwnerIsRoot_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptioniTunesControlNilAttributes_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptionUserHashContainerNilAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Could not fetch attributes at path %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUserHashContainerNilAttributes_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UserHashContainerNilAttributes" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UserHashContainerNilAttributes", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionUserHashContainerOwnerIsRoot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Owner is root. path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUserHashContainerOwnerIsRoot_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UserHashContainerOwnerIsRoot" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UserHashContainerOwnerIsRoot", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionUserHashContainerOwnerMismatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Path owner mismatch. uid=%u ownerID=%lu path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUserHashContainerOwnerMismatch_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UserHashContainerOwnerMismatch" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UserHashContainerOwnerMismatch", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionUserHashContainerDoesNotExist(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"%@ does not exist" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionUserHashContainerDoesNotExist_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"UserHashContainerDoesNotExist" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"UserHashContainerDoesNotExist", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptionUserHashContainerDoesNotExist_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionUserHashContainerOwnerMismatch_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionUserHashContainerOwnerIsRoot_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionUserHashContainerNilAttributes_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionUnexpectedPath_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

void ML3ExceptionMediaContainerNilAttributes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Could not fetch attributes at path %@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionMediaContainerNilAttributes_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"MediaContainerNilAttributes" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"MediaContainerNilAttributes", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionMediaContainerOwnerIsRoot(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Owner is root. path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionMediaContainerOwnerIsRoot_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"MediaContainerOwnerIsRoot" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"MediaContainerOwnerIsRoot", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionMediaContainerOwnerMismatch(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"Path owner mismatch. uid=%u ownerID=%lu path=%@" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionMediaContainerOwnerMismatch_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"MediaContainerOwnerMismatch" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"MediaContainerOwnerMismatch", v9, v16, v17, v18, v19 format];
}

void ML3ExceptionMediaContainerDoesNotExist(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  v22[1] = *MEMORY[0x1E4F143B8];
  uint64_t v21 = &a9;
  dispatch_semaphore_t v9 = (void *)[[NSString alloc] initWithFormat:@"%@ does not exist" arguments:&a9];
  dispatch_semaphore_t v10 = dispatch_semaphore_create(0);
  uint64_t v11 = (void *)MEMORY[0x1E4F77950];
  uint64_t v12 = *MEMORY[0x1E4F778D0];
  v22[0] = v9;
  uint64_t v13 = [MEMORY[0x1E4F1C978] arrayWithObjects:v22 count:1];
  uint64_t v16 = MEMORY[0x1E4F143A8];
  uint64_t v17 = 3221225472;
  uint64_t v18 = __ML3ExceptionMediaContainerDoesNotExist_block_invoke;
  uint64_t v19 = &unk_1E5FB8298;
  dispatch_semaphore_t v20 = v10;
  uint64_t v14 = v10;
  [v11 snapshotWithDomain:v12 type:@"Bug" subType:@"Database Connection Exception" context:@"MediaContainerDoesNotExist" triggerThresholdValues:0 events:v13 completion:&v16];

  dispatch_time_t v15 = dispatch_time(0, 1000000000);
  dispatch_semaphore_wait(v14, v15);
  [MEMORY[0x1E4F1CA00] raise:*MEMORY[0x1E4F1C3A8], @"%@ %@", @"MediaContainerDoesNotExist", v9, v16, v17, v18, v19 format];
}

intptr_t __ML3ExceptionMediaContainerDoesNotExist_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionMediaContainerOwnerMismatch_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionMediaContainerOwnerIsRoot_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

intptr_t __ML3ExceptionMediaContainerNilAttributes_block_invoke(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 32));
}

uint64_t MIPSongReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  uint64_t v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) >= *(void *)(a2 + (int)*MEMORY[0x1E4F940E0])) {
    return *(unsigned char *)(a2 + *v5) == 0;
  }
  dispatch_time_t v7 = (int *)MEMORY[0x1E4F940B8];
  while (2)
  {
    if (*(unsigned char *)(a2 + *v5)) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    char v8 = 0;
    unsigned int v9 = 0;
    unint64_t v10 = 0;
    while (1)
    {
      uint64_t v11 = *v3;
      unint64_t v12 = *(void *)(a2 + v11);
      if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
        break;
      }
      char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
      *(void *)(a2 + v11) = v12 + 1;
      v10 |= (unint64_t)(v13 & 0x7F) << v8;
      if ((v13 & 0x80) == 0) {
        goto LABEL_12;
      }
      v8 += 7;
      BOOL v14 = v9++ >= 9;
      if (v14)
      {
        unint64_t v10 = 0;
        int v15 = *(unsigned __int8 *)(a2 + *v5);
        goto LABEL_14;
      }
    }
    *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
    int v15 = *(unsigned __int8 *)(a2 + *v5);
    if (*(unsigned char *)(a2 + *v5)) {
      unint64_t v10 = 0;
    }
LABEL_14:
    if (v15 || (v10 & 7) == 4) {
      return *(unsigned char *)(a2 + *v5) == 0;
    }
    switch((v10 >> 3))
    {
      case 1u:
        uint64_t v17 = objc_alloc_init(MIPAlbum);
        objc_storeStrong((id *)(a1 + 16), v17);
        if PBReaderPlaceMark() && (MIPAlbumReadFrom((uint64_t)v17, a2)) {
          goto LABEL_84;
        }
        goto LABEL_130;
      case 2u:
        uint64_t v17 = objc_alloc_init(MIPArtist);
        uint64_t v19 = 24;
        goto LABEL_26;
      case 3u:
        uint64_t v17 = objc_alloc_init(MIPArtist);
        uint64_t v19 = 40;
LABEL_26:
        objc_storeStrong((id *)(a1 + v19), v17);
        if (!PBReaderPlaceMark() || (MIPArtistReadFrom(v17, a2) & 1) == 0) {
          goto LABEL_130;
        }
        goto LABEL_84;
      case 4u:
        uint64_t v17 = objc_alloc_init(MIPGenre);
        objc_storeStrong((id *)(a1 + 56), v17);
        if (!PBReaderPlaceMark() || (MIPGenreReadFrom((uint64_t)v17, a2) & 1) == 0) {
          goto LABEL_130;
        }
        goto LABEL_84;
      case 5u:
        char v20 = 0;
        unsigned int v21 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 108) |= 4u;
        while (2)
        {
          uint64_t v23 = *v3;
          unint64_t v24 = *(void *)(a2 + v23);
          if (v24 == -1 || v24 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v25 = *(unsigned char *)(*(void *)(a2 + *v7) + v24);
            *(void *)(a2 + v23) = v24 + 1;
            v22 |= (unint64_t)(v25 & 0x7F) << v20;
            if (v25 < 0)
            {
              v20 += 7;
              BOOL v14 = v21++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_97;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_97:
        uint64_t v67 = 48;
        goto LABEL_127;
      case 6u:
        char v26 = 0;
        unsigned int v27 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 108) |= 0x10u;
        while (2)
        {
          uint64_t v28 = *v3;
          unint64_t v29 = *(void *)(a2 + v28);
          if (v29 == -1 || v29 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v30 = *(unsigned char *)(*(void *)(a2 + *v7) + v29);
            *(void *)(a2 + v28) = v29 + 1;
            v22 |= (unint64_t)(v30 & 0x7F) << v26;
            if (v30 < 0)
            {
              v26 += 7;
              BOOL v14 = v27++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_101;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_101:
        uint64_t v67 = 96;
        goto LABEL_127;
      case 7u:
        char v31 = 0;
        unsigned int v32 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 108) |= 0x20u;
        while (2)
        {
          uint64_t v33 = *v3;
          unint64_t v34 = *(void *)(a2 + v33);
          if (v34 == -1 || v34 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v35 = *(unsigned char *)(*(void *)(a2 + *v7) + v34);
            *(void *)(a2 + v33) = v34 + 1;
            v22 |= (unint64_t)(v35 & 0x7F) << v31;
            if (v35 < 0)
            {
              v31 += 7;
              BOOL v14 = v32++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_105;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_105:
        uint64_t v67 = 100;
        goto LABEL_127;
      case 8u:
        char v36 = 0;
        unsigned int v37 = 0;
        uint64_t v38 = 0;
        *(unsigned char *)(a1 + 108) |= 0x40u;
        while (2)
        {
          uint64_t v39 = *v3;
          unint64_t v40 = *(void *)(a2 + v39);
          if (v40 == -1 || v40 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v41 = *(unsigned char *)(*(void *)(a2 + *v7) + v40);
            *(void *)(a2 + v39) = v40 + 1;
            v38 |= (unint64_t)(v41 & 0x7F) << v36;
            if (v41 < 0)
            {
              v36 += 7;
              BOOL v14 = v37++ >= 9;
              if (v14)
              {
                uint64_t v38 = 0;
                goto LABEL_109;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v38 = 0;
        }
LABEL_109:
        BOOL v68 = v38 != 0;
        uint64_t v69 = 104;
        goto LABEL_122;
      case 9u:
        char v42 = 0;
        unsigned int v43 = 0;
        uint64_t v44 = 0;
        *(unsigned char *)(a1 + 108) |= 1u;
        while (2)
        {
          uint64_t v45 = *v3;
          unint64_t v46 = *(void *)(a2 + v45);
          if (v46 == -1 || v46 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v47 = *(unsigned char *)(*(void *)(a2 + *v7) + v46);
            *(void *)(a2 + v45) = v46 + 1;
            v44 |= (unint64_t)(v47 & 0x7F) << v42;
            if (v47 < 0)
            {
              v42 += 7;
              BOOL v14 = v43++ >= 9;
              if (v14)
              {
                uint64_t v44 = 0;
                goto LABEL_113;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v44 = 0;
        }
LABEL_113:
        *(void *)(a1 + 8) = v44;
        goto LABEL_128;
      case 0xAu:
        char v48 = 0;
        unsigned int v49 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 108) |= 2u;
        while (2)
        {
          uint64_t v50 = *v3;
          unint64_t v51 = *(void *)(a2 + v50);
          if (v51 == -1 || v51 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v52 = *(unsigned char *)(*(void *)(a2 + *v7) + v51);
            *(void *)(a2 + v50) = v51 + 1;
            v22 |= (unint64_t)(v52 & 0x7F) << v48;
            if (v52 < 0)
            {
              v48 += 7;
              BOOL v14 = v49++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_117;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_117:
        uint64_t v67 = 32;
        goto LABEL_127;
      case 0xBu:
        char v53 = 0;
        unsigned int v54 = 0;
        uint64_t v55 = 0;
        *(unsigned char *)(a1 + 108) |= 0x80u;
        while (2)
        {
          uint64_t v56 = *v3;
          unint64_t v57 = *(void *)(a2 + v56);
          if (v57 == -1 || v57 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v58 = *(unsigned char *)(*(void *)(a2 + *v7) + v57);
            *(void *)(a2 + v56) = v57 + 1;
            v55 |= (unint64_t)(v58 & 0x7F) << v53;
            if (v58 < 0)
            {
              v53 += 7;
              BOOL v14 = v54++ >= 9;
              if (v14)
              {
                uint64_t v55 = 0;
                goto LABEL_121;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v55 = 0;
        }
LABEL_121:
        BOOL v68 = v55 != 0;
        uint64_t v69 = 105;
LABEL_122:
        *(unsigned char *)(a1 + v69) = v68;
        goto LABEL_128;
      case 0xCu:
        uint64_t v59 = PBReaderReadString();
        uint64_t v60 = 72;
        goto LABEL_93;
      case 0xDu:
        uint64_t v17 = objc_alloc_init(MIPPlaybackInfo);
        objc_storeStrong((id *)(a1 + 88), v17);
        if PBReaderPlaceMark() && (MIPPlaybackInfoReadFrom((uint64_t)v17, a2))
        {
LABEL_84:
          PBReaderRecallMark();

LABEL_128:
          if (*(void *)(a2 + *v3) >= *(void *)(a2 + *v4)) {
            return *(unsigned char *)(a2 + *v5) == 0;
          }
          continue;
        }
LABEL_130:

        return 0;
      case 0xEu:
        char v61 = 0;
        unsigned int v62 = 0;
        uint64_t v22 = 0;
        *(unsigned char *)(a1 + 108) |= 8u;
        while (2)
        {
          uint64_t v63 = *v3;
          unint64_t v64 = *(void *)(a2 + v63);
          if (v64 == -1 || v64 >= *(void *)(a2 + *v4))
          {
            *(unsigned char *)(a2 + *v5) = 1;
          }
          else
          {
            char v65 = *(unsigned char *)(*(void *)(a2 + *v7) + v64);
            *(void *)(a2 + v63) = v64 + 1;
            v22 |= (unint64_t)(v65 & 0x7F) << v61;
            if (v65 < 0)
            {
              v61 += 7;
              BOOL v14 = v62++ >= 9;
              if (v14)
              {
                LODWORD(v22) = 0;
                goto LABEL_126;
              }
              continue;
            }
          }
          break;
        }
        if (*(unsigned char *)(a2 + *v5)) {
          LODWORD(v22) = 0;
        }
LABEL_126:
        uint64_t v67 = 80;
LABEL_127:
        *(_DWORD *)(a1 + v67) = v22;
        goto LABEL_128;
      case 0xFu:
        uint64_t v59 = PBReaderReadString();
        uint64_t v60 = 64;
LABEL_93:
        uint64_t v66 = *(void **)(a1 + v60);
        *(void *)(a1 + v60) = v59;

        goto LABEL_128;
      default:
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
        goto LABEL_128;
    }
  }
}

uint64_t ML3ImportExecuteVariadicStatement(void *a1, const UInt8 *a2, uint64_t *a3)
{
  id v5 = a1;
  uint64_t v6 = ML3CPPBridgeString(a2, 0);
  dispatch_time_t v7 = [v5 _prepareStatement:v6 error:0];
  char v8 = v7;
  if (v7)
  {
    id v9 = v7;
    unint64_t v10 = (sqlite3_stmt *)[v9 sqliteStatement];
    uint64_t v17 = v10;
    int v18 = 0;
    uint64_t v11 = *a3;
    uint64_t v12 = a3[1];
    if (*a3 != v12)
    {
      int v13 = 1;
      do
      {
        if (*(unsigned char *)(v11 + 32))
        {
          int v18 = v13;
          uint64_t v14 = *(unsigned int *)(v11 + 24);
          if (v14 == -1) {
            std::__throw_bad_variant_access[abi:ne180100]();
          }
          uint64_t v19 = &v17;
          ((void (*)(sqlite3_stmt ***, uint64_t))off_1F08D3BA8[v14])(&v19, v11);
        }
        else
        {
          sqlite3_bind_null(v10, v13);
        }
        v11 += 40;
        ++v13;
      }
      while (v11 != v12);
    }

    uint64_t v15 = [v5 _executeStatement:v9 withError:0];
  }
  else
  {
    uint64_t v15 = 0;
  }

  return v15;
}

void sub_1B02F53F0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__throw_bad_variant_access[abi:ne180100]()
{
  exception = __cxa_allocate_exception(8uLL);
  void *exception = MEMORY[0x1E4FBA4F0] + 16;
  __cxa_throw(exception, MEMORY[0x1E4FBA340], (void (*)(void *))std::bad_variant_access::~bad_variant_access);
}

void std::__variant_detail::__visitation::__base::__dispatcher<4ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<ML3StatementBindingVisitor &> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)1,long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>> const&>(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v4 = *a2;
  uint64_t v3 = (std::__shared_weak_count *)a2[1];
  if (v3) {
    atomic_fetch_add_explicit(&v3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (*(void *)v2)
  {
    if (!v4) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v5 = [MEMORY[0x1E4F28B00] currentHandler];
  uint64_t v6 = [NSString stringWithUTF8String:"void ML3StatementBindingVisitor::operator()(ML3CPPDataRef)"];
  [v5 handleFailureInFunction:v6 file:@"ML3ImportDatabaseUtilities.mm" lineNumber:112 description:@"Cannot bind data: no sqlite3_stmt*"];

  if (v4) {
LABEL_5:
  }
    sqlite3_bind_blob(*(sqlite3_stmt **)v2, *(_DWORD *)(v2 + 8), *(const void **)(v4 + 16), *(_DWORD *)(v4 + 8), 0);
LABEL_6:
  if (v3)
  {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
}

void sub_1B02F556C(_Unwind_Exception *a1)
{
  uint64_t v4 = v3;

  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<3ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<ML3StatementBindingVisitor &> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)1,long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>> const&>(sqlite3_stmt ***a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  if (!v4)
  {
    unint64_t v10 = [MEMORY[0x1E4F28B00] currentHandler];
    uint64_t v11 = [NSString stringWithUTF8String:"void ML3StatementBindingVisitor::operator()(const std::string &)"];
    [v10 handleFailureInFunction:v11 file:@"ML3ImportDatabaseUtilities.mm" lineNumber:106 description:@"Cannot bind string: no sqlite3_stmt*"];

    uint64_t v4 = *v3;
  }
  int v5 = *((_DWORD *)v3 + 2);
  int v6 = *(char *)(a2 + 23);
  if (v6 >= 0) {
    dispatch_time_t v7 = (const char *)a2;
  }
  else {
    dispatch_time_t v7 = *(const char **)a2;
  }
  if (v6 >= 0) {
    int v8 = *(unsigned __int8 *)(a2 + 23);
  }
  else {
    int v8 = *(_DWORD *)(a2 + 8);
  }

  return sqlite3_bind_text(v4, v5, v7, v8, 0);
}

void sub_1B02F5668(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<2ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<ML3StatementBindingVisitor &> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)1,long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>> const&>(sqlite3_stmt ***a1, unsigned __int8 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  if (!v4)
  {
    int v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = [NSString stringWithUTF8String:"void ML3StatementBindingVisitor::operator()(const BOOL &)"];
    [v8 handleFailureInFunction:v9 file:@"ML3ImportDatabaseUtilities.mm" lineNumber:100 description:@"Cannot bind BOOL: no sqlite3_stmt*"];

    uint64_t v4 = *v3;
  }
  int v5 = *((_DWORD *)v3 + 2);
  int v6 = *a2;

  return sqlite3_bind_int(v4, v5, v6);
}

void sub_1B02F5730(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<1ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<ML3StatementBindingVisitor &> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)1,long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>> const&>(sqlite3_stmt ***a1, float *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  if (!v4)
  {
    int v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = [NSString stringWithUTF8String:"void ML3StatementBindingVisitor::operator()(const float_t &)"];
    [v8 handleFailureInFunction:v9 file:@"ML3ImportDatabaseUtilities.mm" lineNumber:94 description:@"Cannot bind float: no sqlite3_stmt*"];

    uint64_t v4 = *v3;
  }
  int v5 = *((_DWORD *)v3 + 2);
  double v6 = *a2;

  return sqlite3_bind_double(v4, v5, v6);
}

void sub_1B02F57FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t std::__variant_detail::__visitation::__base::__dispatcher<0ul>::__dispatch[abi:ne180100]<std::__variant_detail::__visitation::__variant::__value_visitor<ML3StatementBindingVisitor &> &&,std::__variant_detail::__base<(std::__variant_detail::_Trait)1,long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>> const&>(sqlite3_stmt ***a1, sqlite3_int64 *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = **a1;
  if (!v4)
  {
    int v8 = [MEMORY[0x1E4F28B00] currentHandler];
    id v9 = [NSString stringWithUTF8String:"void ML3StatementBindingVisitor::operator()(const int64_t &)"];
    [v8 handleFailureInFunction:v9 file:@"ML3ImportDatabaseUtilities.mm" lineNumber:88 description:@"Cannot bind int64_t: no sqlite3_stmt*"];

    uint64_t v4 = *v3;
  }
  int v5 = *((_DWORD *)v3 + 2);
  sqlite3_int64 v6 = *a2;

  return sqlite3_bind_int64(v4, v5, v6);
}

void sub_1B02F58C4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

BOOL ML3StoreImportItem::canInsertIntoPurchasedPlaylist(ML3StoreImportItem *this)
{
  uint64_t v2 = (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663310);
  uint64_t v3 = (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217) & 0x40A;
  if (v2) {
    BOOL v4 = v3 == 0;
  }
  else {
    BOOL v4 = 1;
  }
  return !v4 && !*((unsigned char *)this + 16) && *((unsigned char *)this + 76) == 0;
}

id ML3StoreImportItem::getDeduplicationOrderingTerms(ML3StoreImportItem *this)
{
  v4[1] = *MEMORY[0x1E4F143B8];
  id v1 = +[ML3OrderingTerm orderingTermWithProperty:@"base_location_id" direction:1];
  v4[0] = v1;
  uint64_t v2 = [MEMORY[0x1E4F1C978] arrayWithObjects:v4 count:1];

  return v2;
}

void sub_1B02F5A3C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id ML3StoreImportItem::getDeduplicationPredicates(id *this)
{
  v40[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = [MEMORY[0x1E4F1CA48] arrayWithCapacity:1];
  uint64_t v3 = [this[8] objectForKey:&unk_1F0910A98];
  uint64_t v4 = [v3 longLongValue];

  if (v4)
  {
    int v5 = +[ML3ComparisonPredicate predicateWithProperty:@"ROWID" equalToInt64:v4];
    [v2 addObject:v5];
  }
  unint64_t v34 = [this[8] objectForKey:&unk_1F0910AB0];
  if (v34)
  {
    sqlite3_int64 v6 = +[ML3ComparisonPredicate predicateWithProperty:@"item_stats.download_identifier" equalToValue:v34];
    [v2 addObject:v6];
  }
  dispatch_time_t v7 = [this[8] objectForKey:&unk_1F0910AC8];
  uint64_t v8 = [v7 longLongValue];

  if (v8)
  {
    id v9 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_saga_id" equalToInt64:v8];
    [v2 addObject:v9];
  }
  unint64_t v10 = [this[8] objectForKey:&unk_1F0910AE0];
  if (v10)
  {
    uint64_t v11 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_xid" equalToValue:v10];
    [v2 addObject:v11];
  }
  uint64_t v12 = [this[8] objectForKey:&unk_1F0910AF8];
  uint64_t v13 = [v12 longLongValue];

  if (v13)
  {
    uint64_t v14 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v13];
    [v2 addObject:v14];

    uint64_t v15 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:0];
    v40[0] = v15;
    uint64_t v16 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v13];
    v40[1] = v16;
    uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v40 count:2];
    int v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];
    [v2 addObject:v18];
  }
  uint64_t v19 = [this[8] objectForKey:&unk_1F0910B10];
  uint64_t v20 = [v19 longLongValue];

  if (v20)
  {
    unsigned int v21 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v20];
    [v2 addObject:v21];

    if (!v13)
    {
      uint64_t v22 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v20];
      [v2 addObject:v22];
    }
  }
  [this[8] objectForKey:&unk_1F0910B28];
  long long v37 = 0u;
  long long v38 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v23 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v24 = [v23 countByEnumeratingWithState:&v35 objects:v39 count:16];
  if (v24)
  {
    uint64_t v25 = *(void *)v36;
    do
    {
      for (uint64_t i = 0; i != v24; ++i)
      {
        if (*(void *)v36 != v25) {
          objc_enumerationMutation(v23);
        }
        uint64_t v27 = [*(id *)(*((void *)&v35 + 1) + 8 * i) longLongValue];
        if (v27)
        {
          uint64_t v28 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v27];
          [v2 addObject:v28];
        }
      }
      uint64_t v24 = [v23 countByEnumeratingWithState:&v35 objects:v39 count:16];
    }
    while (v24);
  }

  unint64_t v29 = [this[8] objectForKey:&unk_1F0910B40];
  char v30 = [this[8] objectForKey:&unk_1F0910B58];
  char v31 = v30;
  if (v29 && ([v30 longLongValue] & 4) != 0)
  {
    unsigned int v32 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.external_guid" value:v29 comparison:1 caseInsensitive:1];
    [v2 addObject:v32];
  }

  return v2;
}

void sub_1B02F5F00(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, void *a10)
{
  _Unwind_Resume(a1);
}

uint64_t ML3StoreImportItem::getSourceIdentifiers@<X0>(ML3StoreImportItem *this@<X0>, BOOL *a2@<X1>, void *a3@<X8>)
{
  std::vector<long long>::vector(a3);
  *(void *)(*a3 + 40) = (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  uint64_t result = (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337);
  *(void *)(*a3 + 48) = result;
  if (a2) {
    *a2 = 0;
  }
  return result;
}

void sub_1B02F60E4(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3StoreImportItem::getDescription(ML3StoreImportItem *this)
{
  (*(void (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663305);
  (*(void (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  (*(void (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 167772174);
  (*(void (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v9);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)"<ML3StoreImportItem ", 20);
  *(_DWORD *)((char *)&v9[1] + *(void *)(v9[0] - 24)) = *(_DWORD *)((unsigned char *)&v9[1] + *(void *)(v9[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" item_pid=", 10);
  *(_DWORD *)((char *)v3 + *(void *)(*v3 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(*v3 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v4 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)", storeId=", 10);
  int v5 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)", sagaId=", 9);
  sqlite3_int64 v6 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)", subscriptionId=", 17);
  dispatch_time_t v7 = (void *)std::ostream::operator<<();
  char v12 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)&v12, 1);
  std::stringbuf::str();
  v9[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v9 + *(void *)(v9[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v9[1] = MEMORY[0x1E4FBA470] + 16;
  if (v10 < 0) {
    operator delete((void *)v9[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v11);
}

void sub_1B02F63F8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL ML3StoreImportItem::hasValue(ML3StoreImportItem *this, uint64_t a2)
{
  int v2 = a2;
  uint64_t v4 = (void *)*((void *)this + 8);
  int v5 = [NSNumber numberWithUnsignedInt:a2];
  sqlite3_int64 v6 = [v4 objectForKey:v5];

  if (v6) {
    return 1;
  }
  if ((v2 - 100663344) < 2) {
    return *((_DWORD *)this + 18) == 6;
  }
  if (v2 != 100663338) {
    return 0;
  }
  if (*((_DWORD *)this + 18) == 6) {
    return 1;
  }
  return (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663310) != 0;
}

void sub_1B02F64FC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3StoreImportItem::getDataValue(ML3StoreImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  uint64_t v3 = (void *)*((void *)this + 8);
  uint64_t v4 = [NSNumber numberWithUnsignedInt:a2];
  int v5 = [v3 objectForKey:v4];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v6 = v5;
    [v6 bytes];
    [v6 length];
    operator new();
  }
}

void sub_1B02F6600(_Unwind_Exception *a1)
{
  MEMORY[0x1B3E93610](v3, 0x1091C40934DB768);

  _Unwind_Resume(a1);
}

void std::shared_ptr<ML3CPPData>::shared_ptr[abi:ne180100]<ML3CPPData,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1B02F66B8(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<ML3CPPData *,std::shared_ptr<ML3CPPData>::__shared_ptr_default_delete<ML3CPPData,ML3CPPData>,std::allocator<ML3CPPData>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI10ML3CPPDataE27__shared_ptr_default_deleteIS1_S1_EE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3CPPData *,std::shared_ptr<ML3CPPData>::__shared_ptr_default_delete<ML3CPPData,ML3CPPData>,std::allocator<ML3CPPData>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3CPPData *,std::shared_ptr<ML3CPPData>::__shared_ptr_default_delete<ML3CPPData,ML3CPPData>,std::allocator<ML3CPPData>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

float ML3StoreImportItem::getFloatValue(ML3StoreImportItem *this, uint64_t a2)
{
  int v2 = (void *)*((void *)this + 8);
  uint64_t v3 = [NSNumber numberWithUnsignedInt:a2];
  uint64_t v4 = [v2 objectForKey:v3];

  if (objc_opt_respondsToSelector())
  {
    [v4 floatValue];
    float v6 = v5;
  }
  else
  {
    float v6 = 0.0;
    if (objc_opt_respondsToSelector())
    {
      [v4 doubleValue];
      float v6 = v7;
    }
  }

  return v6;
}

void sub_1B02F684C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3StoreImportItem::getIntegerValue(ML3StoreImportItem *this, uint64_t a2)
{
  int v2 = a2;
  uint64_t v4 = (void *)*((void *)this + 8);
  float v5 = [NSNumber numberWithUnsignedInt:a2];
  float v6 = [v4 objectForKey:v5];

  if (objc_opt_respondsToSelector()) {
    uint64_t v7 = [v6 longLongValue];
  }
  else {
    uint64_t v7 = 0;
  }
  int v8 = *((_DWORD *)this + 18);
  if (v8 != 6)
  {
    if (v2 != 16777247 || v8 != 5 || v7) {
      goto LABEL_26;
    }
    if (!*((unsigned char *)this + 16)) {
      goto LABEL_24;
    }
    goto LABEL_23;
  }
  if (v2 > 100663337)
  {
    if (v2 != 100663338)
    {
      if (v2 == 100663345) {
        uint64_t v7 = 1;
      }
      goto LABEL_26;
    }
    if (!(*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663310))
    {
      if ((*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337)) {
        uint64_t v7 = 3;
      }
      else {
        uint64_t v7 = 0;
      }
      goto LABEL_26;
    }
LABEL_23:
    uint64_t v7 = 0;
    goto LABEL_26;
  }
  if (v2 == 16777247)
  {
    if (!*((unsigned char *)this + 76)) {
      uint64_t v7 = 0;
    }
  }
  else if (v2 == 33554443)
  {
    if (v7)
    {
      double v9 = (double)v7;
LABEL_25:
      uint64_t v7 = (uint64_t)v9;
      goto LABEL_26;
    }
LABEL_24:
    [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
    goto LABEL_25;
  }
LABEL_26:

  return v7;
}

void sub_1B02F6A38(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3StoreImportItem::getStringValue(ML3StoreImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(void *)(a3 + 16) = 0;
  uint64_t v4 = (std::string *)(a3 + 16);
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  float v5 = (void *)*((void *)this + 8);
  float v6 = [NSNumber numberWithUnsignedInt:a2];
  uint64_t v7 = [v5 objectForKey:v6];

  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    std::string::basic_string[abi:ne180100]<0>(&__str, (char *)[v7 UTF8String]);
    std::string::operator=(v4, &__str);
    *(unsigned char *)(a3 + 8) = 1;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0)
    {
      int v8 = (void *)__str.__r_.__value_.__r.__words[0];
LABEL_6:
      operator delete(v8);
    }
  }
  else
  {
    __str.__r_.__value_.__s.__data_[8] = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
    __str.__r_.__value_.__r.__words[2] = 0;
    *(unsigned char *)(a3 + 8) = 0;
    std::string::operator=(v4, (const std::string *)&__str.__r_.__value_.__r.__words[2]);
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F08C3230;
    if (SHIBYTE(v11) < 0)
    {
      int v8 = (void *)__str.__r_.__value_.__r.__words[2];
      goto LABEL_6;
    }
  }
}

void sub_1B02F6BA0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }

  *(void *)uint64_t v17 = v18;
  if (*(char *)(v17 + 39) < 0) {
    operator delete(*v19);
  }
  _Unwind_Resume(a1);
}

void *std::string::basic_string[abi:ne180100]<0>(void *a1, char *__s)
{
  size_t v4 = strlen(__s);
  if (v4 >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  size_t v5 = v4;
  if (v4 >= 0x17)
  {
    uint64_t v7 = (v4 & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((v4 | 7) != 0x17) {
      uint64_t v7 = v4 | 7;
    }
    uint64_t v8 = v7 + 1;
    float v6 = operator new(v7 + 1);
    a1[1] = v5;
    a1[2] = v8 | 0x8000000000000000;
    *a1 = v6;
  }
  else
  {
    *((unsigned char *)a1 + 23) = v4;
    float v6 = a1;
    if (!v4) {
      goto LABEL_9;
    }
  }
  memmove(v6, __s, v5);
LABEL_9:
  *((unsigned char *)v6 + v5) = 0;
  return a1;
}

BOOL ML3StoreImportItem::isValid(ML3StoreImportItem *this)
{
  if ((*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297)
    || (*(uint64_t (**)(ML3StoreImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337))
  {
    return 1;
  }
  (*(void (**)(void **__return_ptr, ML3StoreImportItem *, uint64_t))(*(void *)this + 24))(&v10, this, 100663323);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v12, v11.__r_.__value_.__l.__data_, v11.__r_.__value_.__l.__size_);
  }
  else {
    std::string v12 = v11;
  }
  std::string::size_type size = HIBYTE(v12.__r_.__value_.__r.__words[2]);
  int v5 = SHIBYTE(v12.__r_.__value_.__r.__words[2]);
  if ((v12.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    BOOL v2 = 1;
  }
  else
  {
    (*(void (**)(void **__return_ptr, ML3StoreImportItem *, uint64_t))(*(void *)this + 24))(&v7, this, 100663341);
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&v9, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    }
    else {
      std::string v9 = __p;
    }
    std::string::size_type v6 = v9.__r_.__value_.__l.__size_;
    if ((v9.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
      std::string::size_type v6 = HIBYTE(v9.__r_.__value_.__r.__words[2]);
    }
    BOOL v2 = v6 != 0;
    if (SHIBYTE(v9.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v9.__r_.__value_.__l.__data_);
    }
    uint64_t v7 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  if (v5 < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
  uint64_t v10 = &unk_1F08C3230;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
  return v2;
}

void sub_1B02F6EE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (v28 < 0) {
    operator delete(*(void **)(v29 - 64));
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void ML3StoreImportItem::~ML3StoreImportItem(id *this)
{
  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));

  JUMPOUT(0x1B3E93610);
}

{

  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));
}

uint64_t ML3StoreAlbumImportItem::propertyKeyForSortPropertyKey(ML3StoreAlbumImportItem *this, int a2)
{
  if (a2 == 285212674) {
    return 285212673;
  }
  else {
    return 0;
  }
}

uint64_t ML3StoreAlbumImportItem::sortPropertyKeyForPropertyKey(ML3StoreAlbumImportItem *this, int a2)
{
  if (a2 == 285212673) {
    return 285212674;
  }
  else {
    return 0;
  }
}

id ML3StoreAlbumImportItem::getDeduplicationPredicates(ML3StoreAlbumImportItem *this)
{
  v46[5] = *MEMORY[0x1E4F143B8];
  id v37 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = (*(uint64_t (**)(ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  uint64_t v3 = (*(uint64_t (**)(ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212683);
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212673);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v42, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v42 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212699);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v39, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v39 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212682);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v38, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v38 = __p;
  }
  std::string::size_type size = HIBYTE(v42.__r_.__value_.__r.__words[2]);
  if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v42.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    int v5 = (void *)*((void *)this + 9);
    std::string::size_type v6 = ML3CPPBridgeString((const UInt8 *)&v42, 1);
    uint64_t v7 = [v5 groupingKeyForString:v6];
  }
  else
  {
    uint64_t v7 = 0;
  }
  std::string::size_type v8 = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v8 = v39.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    std::string v9 = (void *)*((void *)this + 9);
    uint64_t v10 = ML3CPPBridgeString((const UInt8 *)&v39, 1);
    std::string v11 = [v9 groupingKeyForString:v10];

    if (!v2) {
      goto LABEL_29;
    }
  }
  else
  {
    std::string v11 = 0;
    if (!v2) {
      goto LABEL_29;
    }
  }
  if ([v7 length] && objc_msgSend(v11, "length"))
  {
    std::string v12 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v2];
    v46[0] = v12;
    uint64_t v13 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1];
    v46[1] = v13;
    uint64_t v14 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v11];
    v46[2] = v14;
    uint64_t v15 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v46[3] = v15;
    uint64_t v16 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v46[4] = v16;
    uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v46 count:5];
    uint64_t v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];

    [v37 addObject:v18];
  }
  else
  {
    uint64_t v19 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v2];
    v45[0] = v19;
    uint64_t v20 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1];
    v45[1] = v20;
    unsigned int v21 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v45[2] = v21;
    uint64_t v22 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v45[3] = v22;
    id v23 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v45[4] = v23;
    uint64_t v24 = [MEMORY[0x1E4F1C978] arrayWithObjects:v45 count:5];
    uint64_t v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v24];

    [v37 addObject:v18];
  }

LABEL_29:
  if ([v7 length] && objc_msgSend(v11, "length"))
  {
    uint64_t v25 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v11];
    v44[0] = v25;
    char v26 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v44[1] = v26;
    uint64_t v27 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v44[2] = v27;
    int v28 = [MEMORY[0x1E4F1C978] arrayWithObjects:v44 count:3];
    uint64_t v29 = +[ML3CompoundPredicate predicateMatchingPredicates:v28];

    [v37 addObject:v29];
  }
  if ([v7 length])
  {
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v38.__r_.__value_.__l.__size_) {
        goto LABEL_39;
      }
      char v30 = (std::string *)v38.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (!*((unsigned char *)&v38.__r_.__value_.__s + 23)) {
        goto LABEL_39;
      }
      char v30 = &v38;
    }
    char v31 = [NSString stringWithUTF8String:v30];
    unsigned int v32 = +[ML3ComparisonPredicate predicateWithProperty:@"feed_url" equalToValue:v31];
    v43[0] = v32;
    uint64_t v33 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v43[1] = v33;
    unint64_t v34 = [MEMORY[0x1E4F1C978] arrayWithObjects:v43 count:2];
    long long v35 = +[ML3CompoundPredicate predicateMatchingPredicates:v34];

    [v37 addObject:v35];
  }
LABEL_39:

  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }

  return v37;
}

void sub_1B02F7800(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a37 < 0) {
    operator delete(a32);
  }

  _Unwind_Resume(a1);
}

void ML3StoreAlbumImportItem::getDescription(ML3StoreAlbumImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v10);
  (*(void (**)(ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v7);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"<ML3StoreAlbumImportItem ", 25);
  *(_DWORD *)((char *)&v7[1] + *(void *)(v7[0] - 24)) = *(_DWORD *)((unsigned char *)&v7[1] + *(void *)(v7[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v2 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" name=", 6);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&__p, v11.__r_.__value_.__l.__data_, v11.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v11;
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)p_p, size);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" storeID=", 9);
  *(_DWORD *)((char *)v2 + *(void *)(*v2 - 24) + 8) = *(_DWORD *)((unsigned char *)v2 + *(void *)(*v2 - 24) + 8) & 0xFFFFFFB5 | 2;
  int v5 = (void *)std::ostream::operator<<();
  char v12 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)&v12, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str();
  v7[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v7 + *(void *)(v7[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v7[1] = MEMORY[0x1E4FBA470] + 16;
  if (v8 < 0) {
    operator delete((void *)v7[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v9);
  uint64_t v10 = &unk_1F08C3230;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
}

void sub_1B02F7D80(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  *(void *)(v15 - 96) = &unk_1F08C3230;
  if (*(char *)(v15 - 57) < 0) {
    operator delete(*(void **)(v15 - 80));
  }
  _Unwind_Resume(a1);
}

BOOL ML3StoreAlbumImportItem::hasValue(ML3StoreAlbumImportItem *this, uint64_t a2)
{
  BOOL v3 = 0;
  if ((int)a2 <= 33554461)
  {
    if (a2 == 16777217 || a2 == 16777248) {
      goto LABEL_4;
    }
    unsigned __int16 v8 = 19;
LABEL_13:
    if (a2 != (v8 | 0x2000000)) {
      return v3;
    }
    goto LABEL_4;
  }
  if ((a2 - 285212673) > 0x17) {
    goto LABEL_12;
  }
  if (((1 << (a2 - 1)) & 0x920FC3) != 0)
  {
LABEL_4:
    size_t v4 = (void *)*((void *)this + 8);
    int v5 = [NSNumber numberWithUnsignedInt:a2];
    std::string::size_type v6 = [v4 objectForKey:v5];
    BOOL v3 = v6 != 0;

    return v3;
  }
  if (a2 != 285212688)
  {
LABEL_12:
    unsigned __int16 v8 = 30;
    goto LABEL_13;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v14, this, 33554462);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v14[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v14, this, 33554451);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v13, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v14[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v13 = __p;
  }
  uint64_t v9 = (*(uint64_t (**)(ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 16777248);
  std::string::size_type size = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  int v11 = SHIBYTE(v16.__r_.__value_.__r.__words[2]);
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v16.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    BOOL v3 = 1;
  }
  else if (v9)
  {
    std::string::size_type v12 = HIBYTE(v13.__r_.__value_.__r.__words[2]);
    if ((v13.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v12 = v13.__r_.__value_.__l.__size_;
    }
    BOOL v3 = v12 != 0;
  }
  else
  {
    BOOL v3 = 0;
  }
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v13.__r_.__value_.__l.__data_);
  }
  if (v11 < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  return v3;
}

void sub_1B02F8094(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 - 25) < 0) {
    operator delete(*(void **)(v22 - 48));
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3StoreAlbumImportItem::getIntegerValue(ML3StoreAlbumImportItem *this, uint64_t a2)
{
  uint64_t v3 = 0;
  if ((int)a2 <= 285212682)
  {
    if (a2 != 16777217)
    {
      int v4 = 16777248;
LABEL_7:
      int v5 = 0;
      if (a2 != v4) {
        goto LABEL_37;
      }
    }
LABEL_8:
    std::string::size_type v6 = (void *)*((void *)this + 8);
    uint64_t v7 = [NSNumber numberWithUnsignedInt:a2];
    int v5 = [v6 objectForKey:v7];

    if (_NSIsNSNumber()) {
      uint64_t v3 = [v5 longLongValue];
    }
    else {
      uint64_t v3 = 0;
    }
    goto LABEL_37;
  }
  if ((a2 - 285212683) < 2) {
    goto LABEL_8;
  }
  if (a2 != 285212688)
  {
    int v4 = 285212696;
    goto LABEL_7;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v16, this, 33554462);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v18, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v16[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v18 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 24))(v16, this, 33554451);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v15, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v16[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v15 = __p;
  }
  char v8 = (*(uint64_t (**)(ML3StoreAlbumImportItem *, uint64_t))(*(void *)this + 56))(this, 16777248);
  std::string::size_type size = HIBYTE(v18.__r_.__value_.__r.__words[2]);
  int v10 = SHIBYTE(v18.__r_.__value_.__r.__words[2]);
  if ((v18.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v18.__r_.__value_.__l.__size_;
  }
  BOOL v11 = size == 0;
  if (size) {
    char v12 = 0;
  }
  else {
    char v12 = v8;
  }
  if (v12)
  {
    std::string::size_type v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
    if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
      std::string::size_type v13 = v15.__r_.__value_.__l.__size_;
    }
    LODWORD(v3) = v13 != 0;
    if ((*((unsigned char *)&v15.__r_.__value_.__s + 23) & 0x80) == 0) {
      goto LABEL_34;
    }
    goto LABEL_33;
  }
  LODWORD(v3) = !v11;
  if ((*((unsigned char *)&v15.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_33:
  }
    operator delete(v15.__r_.__value_.__l.__data_);
LABEL_34:
  uint64_t v3 = v3;
  if (v10 < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  int v5 = 0;
LABEL_37:

  return v3;
}

void sub_1B02F8400(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,void *a23,uint64_t a24,int a25,__int16 a26,char a27,char a28)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (a28 < 0) {
    operator delete(a23);
  }
  _Unwind_Resume(exception_object);
}

void ML3StoreAlbumImportItem::getStringValue(ML3StoreAlbumImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(void *)(a3 + 16) = 0;
  int v4 = (std::string *)(a3 + 16);
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if ((a2 - 285212673) <= 0x1A && ((1 << (a2 - 1)) & 0x4000203) != 0
    || a2 == 33554462
    || (id v5 = 0, a2 == 33554451))
  {
    std::string::size_type v6 = (void *)*((void *)this + 8);
    uint64_t v7 = [NSNumber numberWithUnsignedInt:a2];
    id v5 = [v6 objectForKey:v7];

    if (_NSIsNSString())
    {
      id v5 = v5;
      std::string::basic_string[abi:ne180100]<0>(&__str, (char *)[v5 UTF8String]);
      std::string::operator=(v4, &__str);
      *(unsigned char *)(a3 + 8) = 1;
      if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
        operator delete(__str.__r_.__value_.__l.__data_);
      }
    }
  }
}

void sub_1B02F85F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(a1);
}

void ML3StoreAlbumImportItem::~ML3StoreAlbumImportItem(id *this)
{
  ML3StoreAlbumImportItem::~ML3StoreAlbumImportItem(this);

  JUMPOUT(0x1B3E93610);
}

{

  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));
}

uint64_t ML3StoreArtistImportItem::propertyKeyForSortPropertyKey(ML3StoreArtistImportItem *this, int a2)
{
  if (a2 == 318767106) {
    int v2 = 318767105;
  }
  else {
    int v2 = 0;
  }
  if (a2 == 318767108) {
    unsigned int v3 = 318767107;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a2 == 301989890) {
    return 301989889;
  }
  else {
    return v3;
  }
}

uint64_t ML3StoreArtistImportItem::sortPropertyKeyForPropertyKey(ML3StoreArtistImportItem *this, int a2)
{
  if (a2 == 318767105) {
    int v2 = 318767106;
  }
  else {
    int v2 = 0;
  }
  if (a2 == 318767107) {
    unsigned int v3 = 318767108;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a2 == 301989889) {
    return 301989890;
  }
  else {
    return v3;
  }
}

void ML3StoreArtistImportItem::getEffectiveSortSeriesName(ML3StoreArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)this + 24))(&v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v15;
  }
  (*(void (**)(long long *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 24))(&v14, this, 318767108);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v13, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v13 = v15;
  }
  int v6 = SHIBYTE(v13.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v14, v13.__r_.__value_.__l.__data_, v13.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v14 = *(_OWORD *)&v13.__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[0] = v13.__r_.__value_.__r.__words[2];
  }
  std::string::size_type v7 = v15.__r_.__value_.__s.__data_[7];
  int v8 = v15.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v14 + 1);
  if (v15.__r_.__value_.__s.__data_[7] >= 0) {
    uint64_t v10 = v15.__r_.__value_.__s.__data_[7];
  }
  else {
    uint64_t v10 = *((void *)&v14 + 1);
  }
  if (!v10)
  {
    ML3CPPSortableString(&v12, (const UInt8 *)&v16);
    if (v8 < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    std::string::size_type v7 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  if ((v8 & 0x80u) != 0) {
    std::string::size_type v7 = size;
  }
  if (v7 && a2)
  {
    ML3CPPSanitizeString(&v12, (uint64_t)&v14);
    if (v15.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  BOOL v11 = (std::string *)(a3 + 16);
  if ((v8 & 0x80) == 0)
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v14;
    *(void *)(a3 + 32) = v15.__r_.__value_.__r.__words[0];
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)v14, *((std::string::size_type *)&v14 + 1));
  if ((v15.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  operator delete((void *)v14);
  if (v6 < 0) {
LABEL_31:
  }
    operator delete(v13.__r_.__value_.__l.__data_);
LABEL_32:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1B02F8A10(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(a13);
  }
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  _Unwind_Resume(exception_object);
}

void ML3StoreArtistImportItem::getEffectiveSortArtist(ML3StoreArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)this + 24))(&v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v15;
  }
  (*(void (**)(long long *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 24))(&v14, this, 318767106);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v13, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v13 = v15;
  }
  int v6 = SHIBYTE(v13.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v14, v13.__r_.__value_.__l.__data_, v13.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v14 = *(_OWORD *)&v13.__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[0] = v13.__r_.__value_.__r.__words[2];
  }
  std::string::size_type v7 = v15.__r_.__value_.__s.__data_[7];
  int v8 = v15.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v14 + 1);
  if (v15.__r_.__value_.__s.__data_[7] >= 0) {
    uint64_t v10 = v15.__r_.__value_.__s.__data_[7];
  }
  else {
    uint64_t v10 = *((void *)&v14 + 1);
  }
  if (!v10)
  {
    ML3CPPSortableString(&v12, (const UInt8 *)&v16);
    if (v8 < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    std::string::size_type v7 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  if ((v8 & 0x80u) != 0) {
    std::string::size_type v7 = size;
  }
  if (v7 && a2)
  {
    ML3CPPSanitizeString(&v12, (uint64_t)&v14);
    if (v15.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  BOOL v11 = (std::string *)(a3 + 16);
  if ((v8 & 0x80) == 0)
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v14;
    *(void *)(a3 + 32) = v15.__r_.__value_.__r.__words[0];
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)v14, *((std::string::size_type *)&v14 + 1));
  if ((v15.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  operator delete((void *)v14);
  if (v6 < 0) {
LABEL_31:
  }
    operator delete(v13.__r_.__value_.__l.__data_);
LABEL_32:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1B02F8D5C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(a13);
  }
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  _Unwind_Resume(exception_object);
}

void ML3StoreArtistImportItem::getEffectiveSortAlbumArtist(ML3StoreArtistImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777246);
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 301989889);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v23, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v23 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 301989890);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v20, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v20 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 318767105);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v19, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v19 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 318767106);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v18, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v18 = v22;
  }
  int v7 = SHIBYTE(v20.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v17, v20.__r_.__value_.__l.__data_, v20.__r_.__value_.__l.__size_);
  }
  else {
    std::string v17 = v20;
  }
  std::string::size_type v8 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  int v9 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
  std::string::size_type size = v17.__r_.__value_.__l.__size_;
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v8 = v17.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    if (v6) {
      goto LABEL_56;
    }
    goto LABEL_28;
  }
  ML3CPPSortableString((std::string *)&v21, (const UInt8 *)&v23);
  if (v9 < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  v17.__r_.__value_.__r.__words[2] = v22.__r_.__value_.__r.__words[0];
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v21;
  LOBYTE(v9) = v22.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v21 + 1);
  if (!v6)
  {
LABEL_28:
    if ((v9 & 0x80u) == 0) {
      std::string::size_type v11 = v9;
    }
    else {
      std::string::size_type v11 = size;
    }
    if (!v11)
    {
      std::string::size_type v12 = HIBYTE(v23.__r_.__value_.__r.__words[2]);
      if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v12 = v23.__r_.__value_.__l.__size_;
      }
      if (!v12)
      {
        (*(void (**)(long long *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 168))(&v21, this, a2);
        if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v16, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
        }
        else {
          std::string v16 = v22;
        }
        if ((v9 & 0x80) != 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        std::string v17 = v16;
        *(void *)&long long v21 = &unk_1F08C3230;
        if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v22.__r_.__value_.__l.__data_);
        }
        std::string::size_type v13 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
        int v9 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
        std::string::size_type size = v17.__r_.__value_.__l.__size_;
        if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v13 = v17.__r_.__value_.__l.__size_;
        }
        if (!v13)
        {
          std::string::size_type v14 = HIBYTE(v19.__r_.__value_.__r.__words[2]);
          if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v14 = v19.__r_.__value_.__l.__size_;
          }
          if (!v14)
          {
            (*(void (**)(long long *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 176))(&v21, this, a2);
            if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v16, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
            }
            else {
              std::string v16 = v22;
            }
            if (v9 < 0) {
              operator delete(v17.__r_.__value_.__l.__data_);
            }
            std::string v17 = v16;
            *(void *)&long long v21 = &unk_1F08C3230;
            if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v22.__r_.__value_.__l.__data_);
            }
            LOBYTE(v9) = *((unsigned char *)&v17.__r_.__value_.__s + 23);
            std::string::size_type size = v17.__r_.__value_.__l.__size_;
          }
        }
      }
    }
  }
LABEL_56:
  if ((v9 & 0x80u) == 0) {
    std::string::size_type size = v9;
  }
  if (size && a2)
  {
    ML3CPPSanitizeString((std::string *)&v21, (uint64_t)&v17);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
    v17.__r_.__value_.__r.__words[2] = v22.__r_.__value_.__r.__words[0];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v21;
    LOBYTE(v9) = v22.__r_.__value_.__s.__data_[7];
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  std::string v15 = (std::string *)(a3 + 16);
  if ((v9 & 0x80) != 0)
  {
    std::string::__init_copy_ctor_external(v15, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
    *(void *)(a3 + 32) = *((void *)&v17.__r_.__value_.__l + 2);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v19.__r_.__value_.__l.__data_);
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_71;
    }
  }
  else if ((v7 & 0x80000000) == 0)
  {
    goto LABEL_71;
  }
  operator delete(v20.__r_.__value_.__l.__data_);
LABEL_71:
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
}

void sub_1B02F9370(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  *(void *)(v39 - 136) = &unk_1F08C3230;
  if (*(char *)(v39 - 97) < 0) {
    operator delete(*(void **)(v39 - 120));
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (*(char *)(v39 - 73) < 0) {
    operator delete(*(void **)(v39 - 96));
  }
  _Unwind_Resume(exception_object);
}

void ML3StoreArtistImportItem::getEffectiveAlbumArtist(ML3StoreArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777246);
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 318767105);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&__str, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string __str = v19;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 318767107);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v17, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v17 = v19;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 301989889);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v19;
  }
  int v7 = SHIBYTE(v16.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v18, v16.__r_.__value_.__l.__data_, v16.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v18 = *(_OWORD *)&v16.__r_.__value_.__l.__data_;
    v19.__r_.__value_.__r.__words[0] = v16.__r_.__value_.__r.__words[2];
  }
  if (!v6)
  {
    uint64_t v8 = v19.__r_.__value_.__s.__data_[7];
    std::string::value_type v9 = v19.__r_.__value_.__s.__data_[7];
    uint64_t v10 = *((void *)&v18 + 1);
    if (v19.__r_.__value_.__s.__data_[7] >= 0) {
      uint64_t v11 = v19.__r_.__value_.__s.__data_[7];
    }
    else {
      uint64_t v11 = *((void *)&v18 + 1);
    }
    if (!v11)
    {
      std::string::operator=((std::string *)&v18, &__str);
      uint64_t v8 = v19.__r_.__value_.__s.__data_[7];
      uint64_t v10 = *((void *)&v18 + 1);
      std::string::value_type v9 = v19.__r_.__value_.__s.__data_[7];
    }
    if (v9 < 0) {
      uint64_t v8 = v10;
    }
    if (!v8) {
      std::string::operator=((std::string *)&v18, &v17);
    }
  }
  uint64_t v12 = v19.__r_.__value_.__s.__data_[7];
  std::string::value_type v13 = v19.__r_.__value_.__s.__data_[7];
  if (v19.__r_.__value_.__s.__data_[7] < 0) {
    uint64_t v12 = *((void *)&v18 + 1);
  }
  if (v12 && a2)
  {
    ML3CPPSanitizeString(&v15, (uint64_t)&v18);
    if (v19.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v18);
    }
    v19.__r_.__value_.__r.__words[0] = v15.__r_.__value_.__r.__words[2];
    long long v18 = *(_OWORD *)&v15.__r_.__value_.__l.__data_;
    std::string::value_type v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  std::string::size_type v14 = (std::string *)(a3 + 16);
  if ((v13 & 0x80) == 0)
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v18;
    *(void *)(a3 + 32) = v19.__r_.__value_.__r.__words[0];
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  std::string::__init_copy_ctor_external(v14, (const std::string::value_type *)v18, *((std::string::size_type *)&v18 + 1));
  if ((v19.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  operator delete((void *)v18);
  if (v7 < 0) {
LABEL_38:
  }
    operator delete(v16.__r_.__value_.__l.__data_);
LABEL_39:
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1B02F9828(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  operator delete(__p);
  if (a22 < 0) {
    operator delete(a17);
  }
  if (*(char *)(v31 - 57) < 0) {
    operator delete(*(void **)(v31 - 80));
  }
  _Unwind_Resume(a1);
}

id ML3StoreArtistImportItem::getDeduplicationPredicates(ML3StoreArtistImportItem *this)
{
  v26[2] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unsigned int v3 = @"store_id";
  int v4 = @"grouping_key";
  memset(&__p, 0, sizeof(__p));
  if (*((void *)this + 10) == 2)
  {
    (*(void (**)(void *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 318767105);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__str, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    }
    else {
      std::string __str = v22;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = __str;
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
    uint64_t v5 = (*(uint64_t (**)(ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
    if ((MLMediaTypeByStandardizingMediaType(v5) & 8) == 0)
    {
      (*(void (**)(void *__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 24))(v21, this, 318767107);
      if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(&__str, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
        v21[0] = &unk_1F08C3230;
        if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v22.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string __str = v22;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      char v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        std::string::operator=(&__p, &__str);
        char v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      if (v8 < 0)
      {
        uint64_t v6 = (void *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_27;
      }
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, ML3StoreArtistImportItem *, void))(*(void *)this + 152))(v21, this, 0);
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__str, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    }
    else {
      std::string __str = v22;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = __str;
    v21[0] = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v6 = (void *)v22.__r_.__value_.__r.__words[0];
LABEL_27:
      operator delete(v6);
    }
  }
  std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
  }
  if (v9)
  {
    uint64_t v10 = (void *)*((void *)this + 11);
    uint64_t v11 = ML3CPPBridgeString((const UInt8 *)&__p, 1);
    uint64_t v12 = [v10 groupingKeyForString:v11];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (*((void *)this + 10) == 2) {
    uint64_t v13 = 318767111;
  }
  else {
    uint64_t v13 = 301989893;
  }
  uint64_t v14 = (*(uint64_t (**)(ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 32))(this, v13);
  if (v14)
  {
    if ([v12 length])
    {
      std::string v15 = +[ML3ComparisonPredicate predicateWithProperty:v3 equalToInt64:v14];
      v26[0] = v15;
      std::string v16 = +[ML3ComparisonPredicate predicateWithProperty:v4 equalToValue:v12];
      v26[1] = v16;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v26 count:2];
    }
    else
    {
      std::string v15 = +[ML3ComparisonPredicate predicateWithProperty:v3 equalToInt64:v14];
      v25[0] = v15;
      std::string v16 = +[ML3ComparisonPredicate predicateWithProperty:v4 value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v25[1] = v16;
      [MEMORY[0x1E4F1C978] arrayWithObjects:v25 count:2];
    std::string v17 = };
    long long v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];

    [v2 addObject:v18];
  }
  if ([v12 length])
  {
    std::string v19 = +[ML3ComparisonPredicate predicateWithProperty:v4 equalToValue:v12];
    [v2 addObject:v19];
  }
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }

  return v2;
}

void sub_1B02F9E9C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }

  _Unwind_Resume(a1);
}

void ML3StoreArtistImportItem::getDescription(ML3StoreArtistImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v15);
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v22, __p[0].__r_.__value_.__l.__data_, __p[0].__r_.__value_.__l.__size_);
    std::string v15 = &unk_1F08C3230;
    if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p[0].__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v22 = __p[0];
  }
  if (*((void *)this + 10) != 2)
  {
    std::string v15 = &unk_1F08C3230;
    LOBYTE(v16) = 0;
    memset(__p, 0, 24);
LABEL_9:
    std::string v21 = __p[0];
    goto LABEL_10;
  }
  (*(void (**)(void **__return_ptr, ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 24))(&v15, this, 318767107);
  if ((SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
    goto LABEL_9;
  }
  std::string::__init_copy_ctor_external(&v21, __p[0].__r_.__value_.__l.__data_, __p[0].__r_.__value_.__l.__size_);
  std::string v15 = &unk_1F08C3230;
  if (SHIBYTE(__p[0].__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p[0].__r_.__value_.__l.__data_);
  }
LABEL_10:
  if (*((void *)this + 10) == 2) {
    uint64_t v2 = 318767111;
  }
  else {
    uint64_t v2 = 301989893;
  }
  (*(void (**)(ML3StoreArtistImportItem *, uint64_t))(*(void *)this + 32))(this, v2);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)&v15);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(&v15, (uint64_t)"<ML3StoreArtistImportItem ", 26);
  *(_DWORD *)((char *)&v15 + *(v15 - 3) + 8) = *(_DWORD *)((unsigned char *)&v15 + *(v15 - 3) + 8) & 0xFFFFFFB5 | 8;
  unsigned int v3 = (void *)std::ostream::operator<<();
  int v4 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)" name=", 6);
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v5 = &v22;
  }
  else {
    uint64_t v5 = (std::string *)v22.__r_.__value_.__r.__words[0];
  }
  if ((v22.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v22.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v22.__r_.__value_.__l.__size_;
  }
  int v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)v5, size);
  char v8 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)" seriesName=", 12);
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = &v21;
  }
  else {
    std::string::size_type v9 = (std::string *)v21.__r_.__value_.__r.__words[0];
  }
  if ((v21.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v10 = HIBYTE(v21.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v10 = v21.__r_.__value_.__l.__size_;
  }
  uint64_t v11 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)v9, v10);
  uint64_t v12 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)" storeID=", 9);
  *(_DWORD *)((char *)v12 + *(void *)(*v12 - 24) + 8) = *(_DWORD *)((unsigned char *)v12 + *(void *)(*v12 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v13 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)" artist type=", 13);
  uint64_t v14 = (void *)std::ostream::operator<<();
  char v23 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)&v23, 1);
  std::stringbuf::str();
  std::string v15 = (void *)*MEMORY[0x1E4FBA418];
  *(void **)((char *)&v15 + *(v15 - 3)) = *(void **)(MEMORY[0x1E4FBA418] + 24);
  uint64_t v16 = MEMORY[0x1E4FBA470] + 16;
  if (v19 < 0) {
    operator delete(v18);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v20);
  if (SHIBYTE(v21.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v21.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v22.__r_.__value_.__l.__data_);
  }
}

void sub_1B02FA3FC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 - 73) < 0) {
    operator delete(*(void **)(v17 - 96));
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3StoreArtistImportItem::hasValue(ML3StoreArtistImportItem *this, uint64_t a2)
{
  BOOL v2 = 0;
  if ((int)a2 > 318767104)
  {
    if ((a2 - 318767105) > 0xD || ((1 << (a2 - 1)) & 0x204F) == 0) {
      return v2;
    }
LABEL_9:
    unsigned int v3 = (void *)*((void *)this + 8);
    int v4 = [NSNumber numberWithUnsignedInt:a2];
    uint64_t v5 = [v3 objectForKeyedSubscript:v4];

    BOOL v2 = v5 != 0;
    return v2;
  }
  if ((a2 - 301989889) <= 0xC && ((1 << (a2 - 1)) & 0x1013) != 0
    || a2 == 16777217
    || a2 == 16777246)
  {
    goto LABEL_9;
  }
  return v2;
}

void sub_1B02FA588(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3StoreArtistImportItem::getIntegerValue(ML3StoreArtistImportItem *this, uint64_t a2)
{
  BOOL v2 = (void *)*((void *)this + 8);
  unsigned int v3 = [NSNumber numberWithUnsignedInt:a2];
  int v4 = [v2 objectForKeyedSubscript:v3];

  if (_NSIsNSNumber()) {
    uint64_t v5 = [v4 longLongValue];
  }
  else {
    uint64_t v5 = 0;
  }

  return v5;
}

void sub_1B02FA618(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3StoreArtistImportItem::getStringValue(ML3StoreArtistImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(void *)(a3 + 16) = 0;
  int v4 = (std::string *)(a3 + 16);
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  uint64_t v5 = (void *)*((void *)this + 8);
  uint64_t v6 = [NSNumber numberWithUnsignedInt:a2];
  int v7 = [v5 objectForKeyedSubscript:v6];

  if (_NSIsNSString())
  {
    id v8 = v7;
    std::string::basic_string[abi:ne180100]<0>(&__str, (char *)[v8 UTF8String]);
    std::string::operator=(v4, &__str);
    *(unsigned char *)(a3 + 8) = 1;
    if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__str.__r_.__value_.__l.__data_);
    }
  }
}

void sub_1B02FA728(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }

  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(a1);
}

void ML3StoreArtistImportItem::~ML3StoreArtistImportItem(id *this)
{
  ML3StoreArtistImportItem::~ML3StoreArtistImportItem(this);

  JUMPOUT(0x1B3E93610);
}

{

  *this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)(this + 3));
}

void ML3StoreImportItem::ML3StoreImportItem(ML3StoreImportItem *this, NSDictionary *a2, int a3)
{
  uint64_t v5 = a2;
  *((_WORD *)this + 8) = 256;
  *((unsigned char *)this + 18) = 1;
  *(_OWORD *)((char *)this + 24) = 0u;
  *(_OWORD *)((char *)this + 40) = 0u;
  *((_DWORD *)this + 14) = 1065353216;
  *(void *)this = &unk_1F08C3688;
  *((void *)this + 1) = 0;
  uint64_t v6 = v5;
  *((void *)this + 8) = v6;
  *((_DWORD *)this + 18) = a3;
  *((unsigned char *)this + 76) = 0;
  *((unsigned char *)this + 17) = 0;
}

uint64_t ML3StoreArtistImportItem::ML3StoreArtistImportItem(uint64_t a1, void *a2, int a3, uint64_t a4, void *a5)
{
  id v9 = a2;
  id v10 = a5;
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C4610;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = [v9 copy];
  *(_DWORD *)(a1 + 72) = a3;
  *(void *)(a1 + 80) = a4;
  id v11 = v10;
  *(void *)(a1 + 88) = v11;
  *(unsigned char *)(a1 + 17) = 0;

  return a1;
}

void sub_1B02FA958(_Unwind_Exception *a1)
{
  void *v2 = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table(v4);

  _Unwind_Resume(a1);
}

void _track::~_track(void **this)
{
  _track::~_track(this);

  JUMPOUT(0x1B3E93610);
}

{
  void **v2;
  void *v3;

  *this = &unk_1F08C7438;
  free(this[2]);
  BOOL v2 = (void **)this[7];
  if (v2)
  {
    unsigned int v3 = *v2;
    if (*v2)
    {
      v2[1] = v3;
      operator delete(v3);
    }
    MEMORY[0x1B3E93610](v2, 0x10C402FEFCB83);
  }
}

void _constraint::reset(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)(a2 + 8) = 1;
  *(void *)(a2 + 16) = 0;
}

uint64_t _compatible_genre_constraint::relax()
{
  return 0;
}

uint64_t _compatible_genre_constraint::passes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t result = *(void *)(a3 + 40);
  if (result)
  {
    if (*(void *)(result + 24))
    {
      unint64_t v6 = *(unsigned int *)(a1 + 16);
      if (*(void *)(a4 + 24) - 1 >= v6) {
        uint64_t v7 = *(void *)(*(void *)(a4 + 16) + 8 * v6);
      }
      else {
        uint64_t v7 = 0;
      }
      return 2
           * (std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::find<unsigned long long>((void *)result, v7) == 0);
    }
    else
    {
      return 2;
    }
  }
  return result;
}

void *std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::find<unsigned long long>(void *a1, uint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
  unint64_t v4 = 9 * ((v3 + ~(v3 << 13)) ^ ((v3 + ~(v3 << 13)) >> 8));
  unint64_t v5 = (v4 ^ (v4 >> 15)) + ~((v4 ^ (v4 >> 15)) << 27);
  unint64_t v6 = v5 ^ (v5 >> 31);
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v8 = v6;
    if (v6 >= *(void *)&v2) {
      unint64_t v8 = v6 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v8 = v6 & (*(void *)&v2 - 1);
  }
  id v9 = *(void **)(*a1 + 8 * v8);
  if (!v9) {
    return 0;
  }
  uint64_t result = (void *)*v9;
  if (*v9)
  {
    do
    {
      unint64_t v11 = result[1];
      if (v6 == v11)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v7.u32[0] > 1uLL)
        {
          if (v11 >= *(void *)&v2) {
            v11 %= *(void *)&v2;
          }
        }
        else
        {
          v11 &= *(void *)&v2 - 1;
        }
        if (v11 != v8) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t _compatible_genre_constraint::in_effect()
{
  return 1;
}

uint64_t _compatible_genre_constraint::parse_config(_compatible_genre_constraint *this, unsigned __int8 *a2, unint64_t *a3)
{
  unint64_t v6 = (void *)*((void *)this + 1);
  uint64_t v7 = *a3;
  LODWORD(v22) = *(_DWORD *)&a2[*a3];
  *a3 = v7 + 4;
  (*(void (**)(void, uint64_t *, uint64_t, uint64_t))(*v6 + 72))(v6[1], &v22, 4, 1);
  *((_DWORD *)this + 4) = v22;
  unint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v9 = *a3;
  LODWORD(v22) = *(_DWORD *)&a2[*a3];
  *a3 = v9 + 4;
  uint64_t result = (*(uint64_t (**)(void, uint64_t *, uint64_t, uint64_t))(*v8 + 72))(v8[1], &v22, 4, 1);
  int v11 = v22;
  if (v22)
  {
    int v12 = 0;
    do
    {
      uint64_t v13 = (void *)*((void *)this + 1);
      uint64_t v14 = *a3;
      uint64_t v22 = *(void *)&a2[*a3];
      *a3 = v14 + 8;
      (*(void (**)(void, uint64_t *, uint64_t, uint64_t))(*v13 + 72))(v13[1], &v22, 8, 1);
      uint64_t v15 = v22;
      uint64_t v16 = (void *)*((void *)this + 1);
      uint64_t v17 = *a3;
      LODWORD(v22) = *(_DWORD *)&a2[*a3];
      *a3 = v17 + 4;
      (*(void (**)(void, uint64_t *, uint64_t, uint64_t))(*v16 + 72))(v16[1], &v22, 4, 1);
      int v18 = v22;
      uint64_t result = (uint64_t)std::__hash_table<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::equal_to<unsigned long long>,echo_hash_shift<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>>>::find<unsigned long long>(*((void **)this + 3), v15);
      if (!result) {
        operator new();
      }
      for (uint64_t i = *(void *)(result + 24); v18; --v18)
      {
        uint64_t v20 = (void *)*((void *)this + 1);
        uint64_t v21 = *a3;
        uint64_t v22 = *(void *)&a2[*a3];
        *a3 = v21 + 8;
        (*(void (**)(void, uint64_t *, uint64_t, uint64_t))(*v20 + 72))(v20[1], &v22, 8, 1);
        uint64_t result = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>(i, v22, v22);
      }
      ++v12;
    }
    while (v12 != v11);
  }
  return result;
}

void sub_1B02FB170(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p)
{
}

void *std::__hash_table<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::equal_to<unsigned long long>,echo_hash_shift<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>>>::find<unsigned long long>(void *a1, uint64_t a2)
{
  int8x8_t v2 = (int8x8_t)a1[1];
  if (!*(void *)&v2) {
    return 0;
  }
  unint64_t v3 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
  unint64_t v4 = 9 * ((v3 + ~(v3 << 13)) ^ ((v3 + ~(v3 << 13)) >> 8));
  unint64_t v5 = (v4 ^ (v4 >> 15)) + ~((v4 ^ (v4 >> 15)) << 27);
  unint64_t v6 = v5 ^ (v5 >> 31);
  uint8x8_t v7 = (uint8x8_t)vcnt_s8(v2);
  v7.i16[0] = vaddlv_u8(v7);
  if (v7.u32[0] > 1uLL)
  {
    unint64_t v8 = v6;
    if (v6 >= *(void *)&v2) {
      unint64_t v8 = v6 % *(void *)&v2;
    }
  }
  else
  {
    unint64_t v8 = v6 & (*(void *)&v2 - 1);
  }
  uint64_t v9 = *(void **)(*a1 + 8 * v8);
  if (!v9) {
    return 0;
  }
  uint64_t result = (void *)*v9;
  if (*v9)
  {
    do
    {
      unint64_t v11 = result[1];
      if (v11 == v6)
      {
        if (result[2] == a2) {
          return result;
        }
      }
      else
      {
        if (v7.u32[0] > 1uLL)
        {
          if (v11 >= *(void *)&v2) {
            v11 %= *(void *)&v2;
          }
        }
        else
        {
          v11 &= *(void *)&v2 - 1;
        }
        if (v11 != v8) {
          return 0;
        }
      }
      uint64_t result = (void *)*result;
    }
    while (result);
  }
  return result;
}

uint64_t std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
  unint64_t v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
  unint64_t v8 = (v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27);
  unint64_t v9 = v8 ^ (v8 >> 31);
  unint64_t v10 = *(void *)(a1 + 8);
  if (v10)
  {
    uint8x8_t v11 = (uint8x8_t)vcnt_s8((int8x8_t)v10);
    v11.i16[0] = vaddlv_u8(v11);
    if (v11.u32[0] > 1uLL)
    {
      unint64_t v3 = v8 ^ (v8 >> 31);
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
    }
    else
    {
      unint64_t v3 = v9 & (v10 - 1);
    }
    int v12 = *(void **)(*(void *)a1 + 8 * v3);
    if (v12)
    {
      for (uint64_t i = (void *)*v12; i; uint64_t i = (void *)*i)
      {
        unint64_t v14 = i[1];
        if (v14 == v9)
        {
          if (i[2] == a2) {
            return 0;
          }
        }
        else
        {
          if (v11.u32[0] > 1uLL)
          {
            if (v14 >= v10) {
              v14 %= v10;
            }
          }
          else
          {
            v14 &= v10 - 1;
          }
          if (v14 != v3) {
            break;
          }
        }
      }
    }
  }
  uint64_t v15 = operator new(0x18uLL);
  *uint64_t v15 = 0;
  v15[1] = v9;
  _DWORD v15[2] = a3;
  float v16 = (float)(unint64_t)(*(void *)(a1 + 24) + 1);
  float v17 = *(float *)(a1 + 32);
  if (!v10 || (float)(v17 * (float)v10) < v16)
  {
    BOOL v18 = 1;
    if (v10 >= 3) {
      BOOL v18 = (v10 & (v10 - 1)) != 0;
    }
    unint64_t v19 = v18 | (2 * v10);
    unint64_t v20 = vcvtps_u32_f32(v16 / v17);
    if (v19 <= v20) {
      size_t v21 = v20;
    }
    else {
      size_t v21 = v19;
    }
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(a1, v21);
    unint64_t v10 = *(void *)(a1 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v9 >= v10) {
        unint64_t v3 = v9 % v10;
      }
      else {
        unint64_t v3 = v9;
      }
    }
    else
    {
      unint64_t v3 = (v10 - 1) & v9;
    }
  }
  uint64_t v22 = *(void *)a1;
  char v23 = *(void **)(*(void *)a1 + 8 * v3);
  if (v23)
  {
    *uint64_t v15 = *v23;
LABEL_38:
    *char v23 = v15;
    goto LABEL_39;
  }
  *uint64_t v15 = *(void *)(a1 + 16);
  *(void *)(a1 + 16) = v15;
  *(void *)(v22 + 8 * v3) = a1 + 16;
  if (*v15)
  {
    unint64_t v24 = *(void *)(*v15 + 8);
    if ((v10 & (v10 - 1)) != 0)
    {
      if (v24 >= v10) {
        v24 %= v10;
      }
    }
    else
    {
      v24 &= v10 - 1;
    }
    char v23 = (void *)(*(void *)a1 + 8 * v24);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(a1 + 24);
  return 1;
}

void sub_1B02FB494(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

void _compatible_genre_constraint::initialize_state(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 8);
  unint64_t v3 = *(unsigned int *)(a1 + 16);
  if (*(void *)(v2 + 24) - 1 >= v3)
  {
    uint64_t v4 = *(void *)(*(void *)(v2 + 16) + 8 * v3);
    if (v4)
    {
      unint64_t v5 = std::__hash_table<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::equal_to<unsigned long long>,echo_hash_shift<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>>>::find<unsigned long long>(*(void **)(a1 + 24), v4);
      if (!v5 || !*(void *)(v5[3] + 24)) {
        operator new();
      }
    }
  }
  operator new();
}

void _compatible_genre_constraint_state::~_compatible_genre_constraint_state(_compatible_genre_constraint_state *this)
{
  _compatible_genre_constraint_state::~_compatible_genre_constraint_state(this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t v1;
  uint64_t v2;

  *(void *)this = &unk_1F08C67B8;
  uint64_t v1 = *((void *)this + 5);
  if (!*(void *)(v1 + 24))
  {
    uint64_t v2 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v1);
    MEMORY[0x1B3E93610](v2, 0x10A0C408EF24B1CLL);
  }
}

const char *_compatible_genre_constraint::name(_compatible_genre_constraint *this)
{
  return "compatible_genre";
}

void _compatible_genre_constraint::~_compatible_genre_constraint(_compatible_genre_constraint *this)
{
  _compatible_genre_constraint::~_compatible_genre_constraint(this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  void *v7;
  void *v8;

  *(void *)this = &unk_1F08C5648;
  uint64_t v2 = *((void *)this + 3);
  unint64_t v3 = *(void **)(v2 + 16);
  if (!v3)
  {
LABEL_8:
    unint64_t v8 = *(void **)v2;
    *(void *)uint64_t v2 = 0;
    if (v8) {
      operator delete(v8);
    }
    MEMORY[0x1B3E93610](v2, 0x10A0C408EF24B1CLL);
    return;
  }
  do
  {
    uint64_t v4 = v3[3];
    if (v4)
    {
      unint64_t v5 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v4);
      MEMORY[0x1B3E93610](v5, 0x10A0C408EF24B1CLL);
    }
    unint64_t v3 = (void *)*v3;
  }
  while (v3);
  uint64_t v2 = *((void *)this + 3);
  if (v2)
  {
    unint64_t v6 = *(void **)(v2 + 16);
    if (v6)
    {
      do
      {
        unint64_t v7 = (void *)*v6;
        operator delete(v6);
        unint64_t v6 = v7;
      }
      while (v7);
    }
    goto LABEL_8;
  }
}

uint64_t _distance_constraint::metadata_id_from_track(_distance_constraint *this, _track *a2)
{
  if (a2 && (unint64_t v2 = *((unsigned int *)this + 4), *((void *)a2 + 3) - 1 >= v2)) {
    return *(void *)(*((void *)a2 + 2) + 8 * v2);
  }
  else {
    return 0;
  }
}

uint64_t _distance_constraint::reset(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 40);
  *(void *)(a2 + 40) = *(void *)(result + 32);
  if (v2)
  {
    uint64_t result = (*(uint64_t (**)(void, uint64_t))(**(void **)(result + 8) + 64))(*(void *)(*(void *)(result + 8) + 8), v2);
    if (result >= v2) {
      uint64_t result = result % v2;
    }
    *(void *)(a2 + 40) += result;
  }
  return result;
}

void _distance_constraint::register_track(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, a3);
  uint64_t v6 = v5;
  unint64_t v7 = *(uint64_t **)(a2 + 48);
  unint64_t v9 = v7 + 2;
  unint64_t v8 = (uint64_t *)v7[2];
  if (!v8) {
    goto LABEL_9;
  }
  char v10 = 0;
  do
  {
    while (v8[2] == v5)
    {
      char v10 = 1;
      *((_DWORD *)v8 + 6) = 1;
      unint64_t v8 = (uint64_t *)*v8;
      if (!v8) {
        return;
      }
    }
    ++*((_DWORD *)v8 + 6);
    unint64_t v8 = (uint64_t *)*v8;
  }
  while (v8);
  if ((v10 & 1) == 0)
  {
LABEL_9:
    unint64_t v11 = (v5 + ~(v5 << 32)) ^ ((unint64_t)(v5 + ~(v5 << 32)) >> 22);
    unint64_t v12 = 9 * ((v11 + ~(v11 << 13)) ^ ((v11 + ~(v11 << 13)) >> 8));
    unint64_t v13 = (v12 ^ (v12 >> 15)) + ~((v12 ^ (v12 >> 15)) << 27);
    unint64_t v14 = v13 ^ (v13 >> 31);
    unint64_t v15 = v7[1];
    if (v15)
    {
      uint8x8_t v16 = (uint8x8_t)vcnt_s8((int8x8_t)v15);
      v16.i16[0] = vaddlv_u8(v16);
      if (v16.u32[0] > 1uLL)
      {
        unint64_t v3 = v13 ^ (v13 >> 31);
        if (v14 >= v15) {
          unint64_t v3 = v14 % v15;
        }
      }
      else
      {
        unint64_t v3 = v14 & (v15 - 1);
      }
      float v17 = *(void **)(*v7 + 8 * v3);
      if (v17)
      {
        for (uint64_t i = (void *)*v17; i; uint64_t i = (void *)*i)
        {
          unint64_t v19 = i[1];
          if (v19 == v14)
          {
            if (i[2] == v5) {
              return;
            }
          }
          else
          {
            if (v16.u32[0] > 1uLL)
            {
              if (v19 >= v15) {
                v19 %= v15;
              }
            }
            else
            {
              v19 &= v15 - 1;
            }
            if (v19 != v3) {
              break;
            }
          }
        }
      }
    }
    unint64_t v20 = operator new(0x20uLL);
    void *v20 = 0;
    v20[1] = v14;
    v20[2] = v6;
    *((_DWORD *)v20 + 6) = 1;
    float v21 = (float)(unint64_t)(v7[3] + 1);
    float v22 = *((float *)v7 + 8);
    if (v15 && (float)(v22 * (float)v15) >= v21)
    {
LABEL_72:
      uint64_t v38 = *v7;
      uint64_t v39 = *(void **)(*v7 + 8 * v3);
      if (v39)
      {
        void *v20 = *v39;
      }
      else
      {
        void *v20 = *v9;
        *unint64_t v9 = v20;
        *(void *)(v38 + 8 * v3) = v9;
        if (!*v20)
        {
LABEL_81:
          ++v7[3];
          return;
        }
        unint64_t v40 = *(void *)(*v20 + 8);
        if ((v15 & (v15 - 1)) != 0)
        {
          if (v40 >= v15) {
            v40 %= v15;
          }
        }
        else
        {
          v40 &= v15 - 1;
        }
        uint64_t v39 = (void *)(*v7 + 8 * v40);
      }
      *uint64_t v39 = v20;
      goto LABEL_81;
    }
    BOOL v23 = 1;
    if (v15 >= 3) {
      BOOL v23 = (v15 & (v15 - 1)) != 0;
    }
    unint64_t v24 = v23 | (2 * v15);
    unint64_t v25 = vcvtps_u32_f32(v21 / v22);
    if (v24 <= v25) {
      int8x8_t prime = (int8x8_t)v25;
    }
    else {
      int8x8_t prime = (int8x8_t)v24;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
      unint64_t v15 = v7[1];
    }
    if (*(void *)&prime > v15) {
      goto LABEL_38;
    }
    if (*(void *)&prime < v15)
    {
      unint64_t v33 = vcvtps_u32_f32((float)(unint64_t)v7[3] / *((float *)v7 + 8));
      if (v15 < 3 || (uint8x8_t v34 = (uint8x8_t)vcnt_s8((int8x8_t)v15), v34.i16[0] = vaddlv_u8(v34), v34.u32[0] > 1uLL))
      {
        unint64_t v33 = std::__next_prime(v33);
      }
      else
      {
        uint64_t v35 = 1 << -(char)__clz(v33 - 1);
        if (v33 >= 2) {
          unint64_t v33 = v35;
        }
      }
      if (*(void *)&prime <= v33) {
        int8x8_t prime = (int8x8_t)v33;
      }
      if (*(void *)&prime >= v15)
      {
        unint64_t v15 = v7[1];
      }
      else
      {
        if (prime)
        {
LABEL_38:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          int v27 = operator new(8 * *(void *)&prime);
          uint64_t v28 = (void *)*v7;
          uint64_t *v7 = (uint64_t)v27;
          if (v28) {
            operator delete(v28);
          }
          uint64_t v29 = 0;
          v7[1] = (uint64_t)prime;
          do
            *(void *)(*v7 + 8 * v29++) = 0;
          while (*(void *)&prime != v29);
          char v30 = (void *)*v9;
          if (*v9)
          {
            unint64_t v31 = v30[1];
            uint8x8_t v32 = (uint8x8_t)vcnt_s8(prime);
            v32.i16[0] = vaddlv_u8(v32);
            if (v32.u32[0] > 1uLL)
            {
              if (v31 >= *(void *)&prime) {
                v31 %= *(void *)&prime;
              }
            }
            else
            {
              v31 &= *(void *)&prime - 1;
            }
            *(void *)(*v7 + 8 * v31) = v9;
            long long v36 = (void *)*v30;
            if (*v30)
            {
              do
              {
                unint64_t v37 = v36[1];
                if (v32.u32[0] > 1uLL)
                {
                  if (v37 >= *(void *)&prime) {
                    v37 %= *(void *)&prime;
                  }
                }
                else
                {
                  v37 &= *(void *)&prime - 1;
                }
                if (v37 != v31)
                {
                  if (!*(void *)(*v7 + 8 * v37))
                  {
                    *(void *)(*v7 + 8 * v37) = v30;
                    goto LABEL_63;
                  }
                  *char v30 = *v36;
                  *long long v36 = **(void **)(*v7 + 8 * v37);
                  **(void **)(*v7 + 8 * v37) = v36;
                  long long v36 = v30;
                }
                unint64_t v37 = v31;
LABEL_63:
                char v30 = v36;
                long long v36 = (void *)*v36;
                unint64_t v31 = v37;
              }
              while (v36);
            }
          }
          unint64_t v15 = (unint64_t)prime;
          goto LABEL_67;
        }
        char v41 = (void *)*v7;
        uint64_t *v7 = 0;
        if (v41) {
          operator delete(v41);
        }
        unint64_t v15 = 0;
        v7[1] = 0;
      }
    }
LABEL_67:
    if ((v15 & (v15 - 1)) != 0)
    {
      if (v14 >= v15) {
        unint64_t v3 = v14 % v15;
      }
      else {
        unint64_t v3 = v14;
      }
    }
    else
    {
      unint64_t v3 = (v15 - 1) & v14;
    }
    goto LABEL_72;
  }
}

void sub_1B02FBC34(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL _distance_constraint::relax(uint64_t a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a2 + 40);
  if (v2 < v3)
  {
    uint64_t v4 = *(void *)(a1 + 48);
    unint64_t v5 = v4 + v2;
    uint64_t v6 = v3 - v4;
    if (v3 <= v5) {
      uint64_t v6 = *(void *)(a1 + 24);
    }
    *(void *)(a2 + 40) = v6;
  }
  return v2 < v3;
}

BOOL _distance_constraint::passes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)a1 + 80))(a1, a4);
  uint64_t v6 = std::__hash_table<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::equal_to<unsigned long long>,echo_hash_shift<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>>>::find<unsigned long long>(*(void **)(a3 + 48), v5);
  return v6 && *(void *)(a3 + 40) > (unint64_t)*((unsigned int *)v6 + 6);
}

uint64_t _distance_constraint::in_effect()
{
  return 1;
}

uint64_t _distance_constraint::parse_config(_distance_constraint *this, unsigned __int8 *a2, unint64_t *a3)
{
  uint64_t v6 = (void *)*((void *)this + 1);
  uint64_t v7 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v7 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v6 + 72))(v6[1], &v15, 4, 1);
  *((_DWORD *)this + 4) = v15;
  unint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v9 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v9 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v8 + 72))(v8[1], &v15, 4, 1);
  *((void *)this + 3) = v15;
  char v10 = (void *)*((void *)this + 1);
  uint64_t v11 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v11 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &v15, 4, 1);
  *((void *)this + 4) = v15;
  unint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v13 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v13 + 4;
  uint64_t result = (*(uint64_t (**)(void, unsigned int *, uint64_t, uint64_t))(*v12 + 72))(v12[1], &v15, 4, 1);
  *((void *)this + 5) = v15;
  *((void *)this + 6) = 1;
  return result;
}

void _distance_constraint::initialize_state()
{
}

void sub_1B02FBEEC(_Unwind_Exception *a1)
{
  MEMORY[0x1B3E93610](v1, 0x10A1C408CCCB54ELL);
  _Unwind_Resume(a1);
}

void _distance_constraint_state::~_distance_constraint_state(_distance_constraint_state *this)
{
  _distance_constraint_state::~_distance_constraint_state(this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t v1;
  void *v2;
  void *v3;
  void *v4;

  *(void *)this = &unk_1F08C4A88;
  uint64_t v1 = *((void *)this + 6);
  if (v1)
  {
    unint64_t v2 = *(void **)(v1 + 16);
    if (v2)
    {
      do
      {
        unint64_t v3 = (void *)*v2;
        operator delete(v2);
        unint64_t v2 = v3;
      }
      while (v3);
    }
    uint64_t v4 = *(void **)v1;
    *(void *)uint64_t v1 = 0;
    if (v4) {
      operator delete(v4);
    }
    MEMORY[0x1B3E93610](v1, 0x10A0C408EF24B1CLL);
  }
}

const char *_distance_constraint::name(_distance_constraint *this)
{
  return "distance";
}

void _distance_constraint::~_distance_constraint(_distance_constraint *this)
{
}

uint64_t _already_added_constraint::metadata_id_from_track(_already_added_constraint *this, _track *a2)
{
  if (a2) {
    return *((void *)a2 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _already_added_constraint::relax(uint64_t a1, uint64_t a2)
{
  if (!*(unsigned char *)(*(void *)(a2 + 32) + 186)) {
    return 0;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  unint64_t v3 = *(void *)(a2 + 40);
  if (v2 >= v3) {
    return 0;
  }
  uint64_t v4 = *(void *)(a1 + 48);
  unint64_t v5 = v4 + v2;
  unint64_t v6 = v3 - v4;
  if (v3 > v5) {
    unint64_t v2 = v6;
  }
  *(void *)(a2 + 40) = v2;
  return 1;
}

BOOL _already_added_constraint::passes(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!*(unsigned char *)(*(void *)(a3 + 32) + 186)) {
    return std::__hash_table<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::__unordered_map_hasher<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,true>,std::__unordered_map_equal<unsigned long long,std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>,std::equal_to<unsigned long long>,echo_hash_shift<unsigned long long>,true>,std::allocator<std::__hash_value_type<unsigned long long,std::unordered_set<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>> *>>>::find<unsigned long long>(*(void **)(a3 + 48), *(void *)(a4 + 8)) != 0;
  }

  return _distance_constraint::passes(a1, a2, a3, a4);
}

uint64_t _already_added_constraint::parse_config(uint64_t this, unsigned __int8 *a2, unint64_t *a3, unsigned int a4)
{
  uint64_t v4 = (void *)this;
  if (a4 < 2)
  {
    *(_OWORD *)(this + 24) = xmmword_1B04DA380;
    uint64_t v15 = 10;
    *(void *)(this + 40) = 10;
  }
  else
  {
    uint64_t v7 = *(void **)(this + 8);
    uint64_t v8 = *a3;
    unsigned int v16 = *(_DWORD *)&a2[*a3];
    *a3 = v8 + 4;
    (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v7 + 72))(v7[1], &v16, 4, 1);
    v4[3] = v16;
    uint64_t v9 = (void *)v4[1];
    uint64_t v10 = *a3;
    unsigned int v16 = *(_DWORD *)&a2[*a3];
    *a3 = v10 + 4;
    (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v9 + 72))(v9[1], &v16, 4, 1);
    v4[4] = v16;
    uint64_t v11 = (void *)v4[1];
    uint64_t v12 = *a3;
    unsigned int v16 = *(_DWORD *)&a2[*a3];
    *a3 = v12 + 4;
    (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v11 + 72))(v11[1], &v16, 4, 1);
    v4[5] = v16;
    uint64_t v13 = (void *)v4[1];
    uint64_t v14 = *a3;
    unsigned int v16 = *(_DWORD *)&a2[*a3];
    *a3 = v14 + 4;
    this = (*(uint64_t (**)(void, unsigned int *, uint64_t, uint64_t))(*v13 + 72))(v13[1], &v16, 4, 1);
    uint64_t v15 = v16;
  }
  v4[6] = v15;
  return this;
}

const char *_already_added_constraint::name(_already_added_constraint *this)
{
  return "already_added";
}

void _already_added_constraint::~_already_added_constraint(_already_added_constraint *this)
{
}

uint64_t _skip_count_constraint::relax()
{
  return 0;
}

BOOL _skip_count_constraint::passes(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  if (*(unsigned char *)(a4 + 32))
  {
    unsigned int v6 = *(_DWORD *)(a4 + 48);
    int v7 = *(_DWORD *)(a4 + 40);
    if (!v6) {
      return 0;
    }
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v14 = 0;
    if ((*(unsigned int (**)(void, void, char *, char *))(*a2 + 40))(a2[1], *(void *)(a4 + 8), (char *)&v14 + 4, (char *)&v13 + 4))
    {
      HIDWORD(v14) = 0;
      HIDWORD(v13) = 0;
    }
    int v9 = (*(uint64_t (**)(void, void, uint64_t *, uint64_t *))(*a2 + 48))(a2[1], *(void *)(a4 + 8), &v14, &v13);
    int v7 = HIDWORD(v13);
    int v10 = v14;
    if (v9) {
      unsigned int v6 = 0;
    }
    else {
      unsigned int v6 = v13;
    }
    if (v9) {
      int v10 = 0;
    }
    *(_DWORD *)(a4 + 36) = HIDWORD(v14);
    *(_DWORD *)(a4 + 40) = v7;
    *(_DWORD *)(a4 + 44) = v10;
    *(_DWORD *)(a4 + 48) = v6;
    *(unsigned char *)(a4 + 32) = 1;
    if (!v6) {
      return 0;
    }
  }
  if (*(void *)(a1 + 16) < (unint64_t)v6)
  {
    int v11 = *(_DWORD *)(a4 + 44);
    if (*(_DWORD *)(a1 + 28) - 1 >= (*(_DWORD *)(a4 + 36) - v11)
      && (*(unsigned int (**)(void))(**(void **)(a1 + 8) + 56))(*(void *)(*(void *)(a1 + 8) + 8))
       - v11 < *(_DWORD *)(a1 + 24))
    {
      return 100 * v6 > *(_DWORD *)(a1 + 32) * (v7 + v6);
    }
  }
  return 0;
}

uint64_t _skip_count_constraint::in_effect()
{
  return 1;
}

uint64_t _skip_count_constraint::parse_config(_skip_count_constraint *this, unsigned __int8 *a2, unint64_t *a3)
{
  unsigned int v6 = (void *)*((void *)this + 1);
  uint64_t v7 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v7 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v6 + 72))(v6[1], &v15, 4, 1);
  *((void *)this + 2) = v15;
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v9 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v9 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v8 + 72))(v8[1], &v15, 4, 1);
  *((_DWORD *)this + 6) = v15;
  int v10 = (void *)*((void *)this + 1);
  uint64_t v11 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v11 + 4;
  (*(void (**)(void, unsigned int *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &v15, 4, 1);
  *((_DWORD *)this + 7) = v15;
  uint64_t v12 = (void *)*((void *)this + 1);
  uint64_t v13 = *a3;
  unsigned int v15 = *(_DWORD *)&a2[*a3];
  *a3 = v13 + 4;
  uint64_t result = (*(uint64_t (**)(void, unsigned int *, uint64_t, uint64_t))(*v12 + 72))(v12[1], &v15, 4, 1);
  *((_DWORD *)this + 8) = v15;
  return result;
}

void _skip_count_constraint::initialize_state()
{
}

void _constraint_state::~_constraint_state(_constraint_state *this)
{
}

const char *_skip_count_constraint::name(_skip_count_constraint *this)
{
  return "skip_count";
}

void _skip_count_constraint::~_skip_count_constraint(_skip_count_constraint *this)
{
}

BOOL _random_jitter_constraint::relax(_random_jitter_constraint *this, _constraint_state *a2)
{
  uint64_t v2 = *((void *)a2 + 2);
  if (!v2) {
    *((void *)a2 + 2) = 1;
  }
  return v2 == 0;
}

BOOL _random_jitter_constraint::passes(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v3 = 20;
  if (!*(void *)(a3 + 16)) {
    uint64_t v3 = 16;
  }
  unsigned int v4 = *(_DWORD *)(a1 + v3);
  unsigned int v5 = (*(uint64_t (**)(void, uint64_t))(*a2 + 64))(a2[1], 100);
  unsigned int v6 = v5 % 0x64;
  if (v5 < 0x64) {
    unsigned int v6 = v5;
  }
  return v6 > v4;
}

BOOL _random_jitter_constraint::in_effect(_random_jitter_constraint *this, _constraint_state *a2)
{
  return *((void *)a2 + 2) < 2uLL;
}

uint64_t _random_jitter_constraint::parse_config(_random_jitter_constraint *this, unsigned __int8 *a2, unint64_t *a3)
{
  unsigned int v6 = (void *)*((void *)this + 1);
  uint64_t v7 = *a3;
  int v11 = *(_DWORD *)&a2[*a3];
  *a3 = v7 + 4;
  (*(void (**)(void, int *, uint64_t, uint64_t))(*v6 + 72))(v6[1], &v11, 4, 1);
  *((_DWORD *)this + 4) = v11;
  uint64_t v8 = (void *)*((void *)this + 1);
  uint64_t v9 = *a3;
  int v12 = *(_DWORD *)&a2[*a3];
  *a3 = v9 + 4;
  uint64_t result = (*(uint64_t (**)(void, int *, uint64_t, uint64_t))(*v8 + 72))(v8[1], &v12, 4, 1);
  *((_DWORD *)this + 5) = v12;
  return result;
}

void _random_jitter_constraint::initialize_state()
{
}

const char *_random_jitter_constraint::name(_random_jitter_constraint *this)
{
  return "random_jitter";
}

void _random_jitter_constraint::~_random_jitter_constraint(_random_jitter_constraint *this)
{
}

uint64_t _echo_context::initialize_playlist(_echo_context *this, uint64_t a2)
{
  if (a2 && _echo_context::fetch_track(this, a2)) {
    operator new();
  }
  return 0;
}

void sub_1B02FC92C(_Unwind_Exception *a1)
{
  unsigned int v5 = *v2;
  if (*v2)
  {
    v1[20] = v5;
    operator delete(v5);
  }
  unsigned int v6 = (void *)v1[14];
  if (v6)
  {
    v1[15] = v6;
    operator delete(v6);
  }
  uint64_t v7 = (void *)v1[11];
  if (v7) {
    operator delete(v7);
  }
  uint64_t v8 = *v3;
  if (*v3)
  {
    v1[9] = v8;
    operator delete(v8);
  }
  MEMORY[0x1B3E93610](v1, 0x10B0C403C88389ELL);
  _Unwind_Resume(a1);
}

uint64_t _echo_context::fetch_track(_echo_context *this, uint64_t a2)
{
  unint64_t v14 = 0;
  uint64_t v4 = (*(uint64_t (**)(void, uint64_t, unint64_t *))(*(void *)this + 8))(*((void *)this + 1), a2, &v14);
  ++*((void *)this + 5);
  if (v4)
  {
    unint64_t v5 = v14;
    if (v14)
    {
      uint64_t v6 = v4;
      ++*((void *)this + 6);
      unint64_t v13 = v5 >> 3;
      (*(void (**)(void, uint64_t, uint64_t))(*(void *)this + 72))(*((void *)this + 1), v4, 8);
      uint64_t v7 = (FILE *)*((void *)this + 2);
      if (v7)
      {
        fprintf(v7, "fetch metadata: track id = %llu, ", a2);
        if (v5 >= 8)
        {
          uint64_t v8 = 0;
          if (v13 <= 1) {
            uint64_t v9 = 1;
          }
          else {
            uint64_t v9 = v5 >> 3;
          }
          do
          {
            if (v13 - 1 == v8) {
              int v10 = "\n";
            }
            else {
              int v10 = ", ";
            }
            fprintf(*((FILE **)this + 2), "id %d = %llu%s", v8, *(void *)(v6 + 8 * v8), v10);
            ++v8;
          }
          while (v9 != v8);
        }
      }
      operator new();
    }
    int v11 = (FILE *)*((void *)this + 2);
    if (v11) {
      fwrite("metadata_size not being set by metadata_for_global_id callback\n", 0x3FuLL, 1uLL, v11);
    }
  }
  return 0;
}

void sub_1B02FCB68(_Unwind_Exception *a1)
{
  MEMORY[0x1B3E93610](v1, 0x10B1C406069778BLL);
  _Unwind_Resume(a1);
}

void std::vector<unsigned long long>::reserve(void **a1, unint64_t a2)
{
  if (a2 > ((unsigned char *)a1[2] - (unsigned char *)*a1) >> 3)
  {
    int64_t v3 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v4 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(a2);
    unint64_t v5 = &v4[v3 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v7 = &v4[8 * v6];
    uint64_t v8 = (char *)*a1;
    uint64_t v9 = (char *)a1[1];
    int v10 = v5;
    if (v9 != *a1)
    {
      int v10 = v5;
      do
      {
        uint64_t v11 = *((void *)v9 - 1);
        v9 -= 8;
        *((void *)v10 - 1) = v11;
        v10 -= 8;
      }
      while (v9 != v8);
    }
    *a1 = v10;
    a1[1] = v5;
    a1[2] = v7;
    if (v8)
    {
      operator delete(v8);
    }
  }
}

void _playlist::add_track(_playlist *this, _track *a2)
{
  ++*((void *)this + 7);
  uint64_t v5 = *((void *)this + 17);
  uint64_t v6 = *((void *)a2 + 1);
  unint64_t v7 = (v6 + ~(v6 << 32)) ^ ((unint64_t)(v6 + ~(v6 << 32)) >> 22);
  unint64_t v8 = 9 * ((v7 + ~(v7 << 13)) ^ ((v7 + ~(v7 << 13)) >> 8));
  unint64_t v9 = (v8 ^ (v8 >> 15)) + ~((v8 ^ (v8 >> 15)) << 27);
  unint64_t v10 = v9 ^ (v9 >> 31);
  unint64_t v11 = *(void *)(v5 + 8);
  if (v11)
  {
    uint8x8_t v12 = (uint8x8_t)vcnt_s8((int8x8_t)v11);
    v12.i16[0] = vaddlv_u8(v12);
    if (v12.u32[0] > 1uLL)
    {
      unint64_t v2 = v9 ^ (v9 >> 31);
      if (v10 >= v11) {
        unint64_t v2 = v10 % v11;
      }
    }
    else
    {
      unint64_t v2 = v10 & (v11 - 1);
    }
    unint64_t v13 = *(void **)(*(void *)v5 + 8 * v2);
    if (v13)
    {
      for (uint64_t i = (void *)*v13; i; uint64_t i = (void *)*i)
      {
        unint64_t v15 = i[1];
        if (v15 == v10)
        {
          if (i[2] == v6) {
            goto LABEL_40;
          }
        }
        else
        {
          if (v12.u32[0] > 1uLL)
          {
            if (v15 >= v11) {
              v15 %= v11;
            }
          }
          else
          {
            v15 &= v11 - 1;
          }
          if (v15 != v2) {
            break;
          }
        }
      }
    }
  }
  unsigned int v16 = operator new(0x18uLL);
  void *v16 = 0;
  v16[1] = v10;
  void v16[2] = v6;
  float v17 = (float)(unint64_t)(*(void *)(v5 + 24) + 1);
  float v18 = *(float *)(v5 + 32);
  if (!v11 || (float)(v18 * (float)v11) < v17)
  {
    BOOL v19 = 1;
    if (v11 >= 3) {
      BOOL v19 = (v11 & (v11 - 1)) != 0;
    }
    unint64_t v20 = v19 | (2 * v11);
    unint64_t v21 = vcvtps_u32_f32(v17 / v18);
    if (v20 <= v21) {
      size_t v22 = v21;
    }
    else {
      size_t v22 = v20;
    }
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__rehash<true>(v5, v22);
    unint64_t v11 = *(void *)(v5 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v10 >= v11) {
        unint64_t v2 = v10 % v11;
      }
      else {
        unint64_t v2 = v10;
      }
    }
    else
    {
      unint64_t v2 = (v11 - 1) & v10;
    }
  }
  uint64_t v23 = *(void *)v5;
  unint64_t v24 = *(void **)(*(void *)v5 + 8 * v2);
  if (v24)
  {
    void *v16 = *v24;
LABEL_38:
    *unint64_t v24 = v16;
    goto LABEL_39;
  }
  void *v16 = *(void *)(v5 + 16);
  *(void *)(v5 + 16) = v16;
  *(void *)(v23 + 8 * v2) = v5 + 16;
  if (*v16)
  {
    unint64_t v25 = *(void *)(*v16 + 8);
    if ((v11 & (v11 - 1)) != 0)
    {
      if (v25 >= v11) {
        v25 %= v11;
      }
    }
    else
    {
      v25 &= v11 - 1;
    }
    unint64_t v24 = (void *)(*(void *)v5 + 8 * v25);
    goto LABEL_38;
  }
LABEL_39:
  ++*(void *)(v5 + 24);
LABEL_40:
  uint64_t v26 = *(void *)this;
  uint64_t v27 = *(void *)(*(void *)this + 72) - *(void *)(*(void *)this + 64);
  if (v27)
  {
    uint64_t v28 = 0;
    unint64_t v29 = v27 >> 3;
    if (v29 <= 1) {
      uint64_t v30 = 1;
    }
    else {
      uint64_t v30 = v29;
    }
    do
    {
      uint64_t v31 = *(void *)(*(void *)(v26 + 64) + 8 * v28);
      (*(void (**)(uint64_t, void, _track *))(*(void *)v31 + 64))(v31, *(void *)(*((void *)this + 19) + 8 * v28++), a2);
    }
    while (v30 != v28);
  }
  uint64_t v32 = *((void *)a2 + 1);
  uint8x8_t v34 = (char *)*((void *)this + 15);
  unint64_t v33 = *((void *)this + 16);
  if ((unint64_t)v34 >= v33)
  {
    long long v36 = (char *)*((void *)this + 14);
    uint64_t v37 = (v34 - v36) >> 3;
    unint64_t v38 = v37 + 1;
    if ((unint64_t)(v37 + 1) >> 61) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    uint64_t v39 = v33 - (void)v36;
    if (v39 >> 2 > v38) {
      unint64_t v38 = v39 >> 2;
    }
    BOOL v40 = (unint64_t)v39 >= 0x7FFFFFFFFFFFFFF8;
    unint64_t v41 = 0x1FFFFFFFFFFFFFFFLL;
    if (!v40) {
      unint64_t v41 = v38;
    }
    if (v41)
    {
      unint64_t v41 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v41);
      long long v36 = (char *)*((void *)this + 14);
      uint8x8_t v34 = (char *)*((void *)this + 15);
    }
    else
    {
      uint64_t v42 = 0;
    }
    unsigned int v43 = (void *)(v41 + 8 * v37);
    unint64_t v44 = v41 + 8 * v42;
    *unsigned int v43 = v32;
    uint64_t v35 = v43 + 1;
    while (v34 != v36)
    {
      uint64_t v45 = *((void *)v34 - 1);
      v34 -= 8;
      *--unsigned int v43 = v45;
    }
    *((void *)this + 14) = v43;
    *((void *)this + 15) = v35;
    *((void *)this + 16) = v44;
    if (v36) {
      operator delete(v36);
    }
  }
  else
  {
    *(void *)uint8x8_t v34 = v32;
    uint64_t v35 = v34 + 8;
  }
  *((void *)this + 15) = v35;
}

void sub_1B02FCF74(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

BOOL _playlist::add_more_candidates(_playlist *this)
{
  uint64_t v2 = 104;
  if (!*((unsigned char *)this + 187)) {
    uint64_t v2 = 100;
  }
  unsigned int v3 = *(_DWORD *)(*(void *)this + v2);
  uint64_t v5 = (void *)((char *)this + 32);
  uint64_t v4 = (void *)*((void *)this + 4);
  while (v4)
  {
    uint64_t v6 = v4[1];
    uint64_t v7 = v6 - *v4;
    if (v6 == *v4) {
      break;
    }
    unint64_t v8 = *((void *)this + 5);
    if (v8 >= v7 >> 3) {
      break;
    }
    uint64_t v9 = *(void *)(*v4 + 8 * v8);
    uint64_t track = _playlist::fetch_track(this, v9);
    BOOL v27 = 0;
    if (!track)
    {
      BOOL v27 = 1;
LABEL_11:
      uint8x8_t v12 = (void *)*((void *)this + 4);
      uint64_t v11 = *((void *)this + 5);
      uint64_t v13 = v12[1];
      uint64_t v14 = *v12 + 8 * v11;
      uint64_t v15 = v13 - (v14 + 8);
      if (v13 != v14 + 8) {
        memmove((void *)(*v12 + 8 * v11), (const void *)(v14 + 8), v13 - (v14 + 8));
      }
      v12[1] = v14 + v15;
      goto LABEL_14;
    }
    _playlist::add_candidate_id(this, v9);
    LOBYTE(track) = _playlist::add_candidates_from_track(this, (_track *)track, *((_DWORD *)this + 12), v3, &v27);
    if (v27) {
      goto LABEL_11;
    }
    ++*((void *)this + 5);
LABEL_14:
    uint64_t v4 = (void *)*v5;
    unsigned int v16 = *(void **)(*v5 + 8);
    uint64_t v17 = (uint64_t)v16 - *(void *)*v5;
    if (v17)
    {
      if (*((void *)this + 5) >= (unint64_t)(v17 >> 3))
      {
        uint64_t v18 = *((void *)this + 6) + 1;
        *((void *)this + 5) = 0;
        *((void *)this + 6) = v18;
      }
    }
    else
    {
      if (v16) {
        operator delete(v16);
      }
      MEMORY[0x1B3E93610](v4, 0x10C402FEFCB83);
      uint64_t v4 = 0;
      void *v5 = 0;
      v5[1] = 0;
      void v5[2] = 0;
    }
    if (track) {
      return 1;
    }
  }
  BOOL v19 = (uint64_t *)*((void *)this + 15);
  while (1)
  {
    unint64_t v20 = (uint64_t *)*((void *)this + 14);
    BOOL result = v19 != v20;
    if (v19 == v20) {
      break;
    }
    size_t v22 = (_track *)_playlist::fetch_track(this, *v20);
    if (v22) {
      int v23 = _playlist::add_candidates_from_track(this, v22, 0, 0, &v28);
    }
    else {
      int v23 = 0;
    }
    uint64_t v25 = *((void *)this + 14);
    uint64_t v24 = *((void *)this + 15);
    uint64_t v26 = v24 - (v25 + 8);
    if (v24 != v25 + 8) {
      memmove(*((void **)this + 14), (const void *)(v25 + 8), v24 - (v25 + 8));
    }
    BOOL v19 = (uint64_t *)(v25 + v26);
    *((void *)this + 15) = v25 + v26;
    if (v23) {
      return 1;
    }
  }
  return result;
}

uint64_t _playlist::add_candidates_from_track(_playlist *this, _track *a2, int a3, unsigned int a4, BOOL *a5)
{
  unint64_t v10 = *(void **)this;
  ++*(void *)(*(void *)this + 24);
  if (a2)
  {
    uint64_t v11 = (void *)*((void *)a2 + 7);
    if (!v11 || *(void *)(*((void *)a2 + 7) + 8) == *v11)
    {
      uint64_t v12 = *((void *)a2 + 1);
      if (v12)
      {
        uint64_t v13 = (char *)(*(uint64_t (**)(void, uint64_t, void))(*v10 + 24))(v10[1], v12, 0);
        if (v13)
        {
          uint64_t v14 = v13;
          ++v10[4];
          LODWORD(strm.next_in) = *(_DWORD *)v13;
          (*(void (**)(void, z_stream *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &strm, 4, 1);
          int next_in = (int)strm.next_in;
          LODWORD(strm.next_in) = *((_DWORD *)v14 + 1);
          (*(void (**)(void, z_stream *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &strm, 4, 1);
          unint64_t v41 = a5;
          if (next_in)
          {
            uint64_t next_in_low = LODWORD(strm.next_in);
            strm.int next_in = (Bytef *)(v14 + 8);
            strm.avail_in = next_in_low;
            strm.zalloc = 0;
            strm.zfree = 0;
            strm.uLong total_out = 0;
            uint64_t v17 = 0;
            if (!inflateInit_(&strm, "1.2.12", 112))
            {
              uLong v18 = 3 * next_in_low;
              uint64_t v17 = (char *)malloc_type_malloc(3 * next_in_low, 0xE2AAD2B4uLL);
              BOOL v19 = "encountered unexpected status %d while inflating\n";
              while (1)
              {
                uLong total_out = strm.total_out;
                if (strm.total_out >= v18)
                {
                  v18 += v18 >> 1;
                  uint64_t v17 = (char *)malloc_type_realloc(v17, v18, 0x1D83764EuLL);
                  uLong total_out = strm.total_out;
                }
                strm.next_out = (Bytef *)&v17[total_out];
                strm.avail_out = v18 - total_out;
                uint64_t v21 = inflate(&strm, 2);
                if (v21 == 1)
                {
                  uint64_t v22 = 1;
                  goto LABEL_19;
                }
                uint64_t v22 = v21;
                if (v21 == -5 && !strm.avail_in) {
                  break;
                }
                if (v21)
                {
                  a5 = v41;
                  goto LABEL_21;
                }
              }
              uint64_t v22 = 4294967291;
LABEL_19:
              a5 = v41;
              if (!inflateEnd(&strm)) {
                goto LABEL_22;
              }
              BOOL v19 = "encountered unexpected status %d while finishing inflating\n";
LABEL_21:
              fprintf((FILE *)*MEMORY[0x1E4F143C8], v19, v22);
              free(v17);
              uint64_t v17 = 0;
            }
LABEL_22:
            uint64_t v24 = *(void (**)(char *))(*v10 + 32);
            if (v24)
            {
              v24(v14);
              if (!v17) {
                goto LABEL_34;
              }
            }
            else
            {
              free(v14);
              if (!v17) {
                goto LABEL_34;
              }
            }
            uint64_t v23 = 0;
            uint64_t v14 = v17;
          }
          else
          {
            uint64_t v23 = 8;
          }
          LODWORD(strm.next_in) = *(_DWORD *)&v14[v23];
          uint64_t v25 = v23 | 4;
          (*(void (**)(void, z_stream *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &strm, 4, 1);
          uint64_t v26 = LODWORD(strm.next_in);
          BOOL v27 = (FILE *)v10[2];
          if (v27) {
            fprintf(v27, "fetch sims: track id = %llu, count = %lu\n", *((void *)a2 + 1), LODWORD(strm.next_in));
          }
          (*(void (**)(void, char *, uint64_t, uint64_t))(*v10 + 72))(v10[1], &v14[v25], 8, v26);
          uint64_t v28 = *((void *)a2 + 7);
          if (v28)
          {
            unint64_t v29 = *(void **)v28;
            if (*(void *)v28)
            {
              *(void *)(v28 + 8) = v29;
              operator delete(v29);
            }
            MEMORY[0x1B3E93610](v28, 0x10C402FEFCB83);
          }
          operator new();
        }
      }
    }
  }
LABEL_34:
  uint64_t v30 = (void **)*((void *)a2 + 7);
  if (v30)
  {
    unint64_t v31 = ((unsigned char *)v30[1] - (unsigned char *)*v30) >> 3;
    if (a4) {
      goto LABEL_36;
    }
LABEL_39:
    unsigned int v32 = 0;
    if (v31) {
      goto LABEL_40;
    }
LABEL_48:
    uint64_t v38 = 0;
    if (!v30) {
      return v38;
    }
    goto LABEL_49;
  }
  unint64_t v31 = 0;
  if (!a4) {
    goto LABEL_39;
  }
LABEL_36:
  unsigned int v32 = a4 * a3;
  if (v31 <= a4 + v32)
  {
    v31 -= v32;
    *a5 = 1;
    if (v31) {
      goto LABEL_40;
    }
    goto LABEL_48;
  }
  unint64_t v31 = a4;
  *a5 = 0;
LABEL_40:
  unsigned int v33 = 1;
  do
  {
    uint8x8_t v34 = (void *)*((void *)a2 + 7);
    if (v34) {
      uint64_t v35 = *(void *)(*v34 + 8 * (v32 + v33 - 1));
    }
    else {
      uint64_t v35 = 0;
    }
    uint64_t v36 = _playlist::add_candidate_id(this, v35);
  }
  while (v31 > v33++);
  uint64_t v38 = v36;
  uint64_t v30 = (void **)*((void *)a2 + 7);
  if (v30)
  {
LABEL_49:
    uint64_t v39 = *v30;
    if (*v30)
    {
      v30[1] = v39;
      operator delete(v39);
    }
    MEMORY[0x1B3E93610](v30, 0x10C402FEFCB83);
    *((void *)a2 + 7) = 0;
  }
  return v38;
}

void sub_1B02FD5A8(_Unwind_Exception *a1)
{
  unsigned int v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  MEMORY[0x1B3E93610](v1, 0x10C402FEFCB83);
  _Unwind_Resume(a1);
}

uint64_t _playlist::fetch_track(_playlist *this, uint64_t a2)
{
  uint64_t v5 = (void *)*((void *)this + 18);
  unint64_t v6 = (~(a2 << 32) + a2) ^ ((unint64_t)(~(a2 << 32) + a2) >> 22);
  unint64_t v7 = 9 * ((v6 + ~(v6 << 13)) ^ ((v6 + ~(v6 << 13)) >> 8));
  unint64_t v8 = ((v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27)) ^ (((v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27)) >> 31);
  int8x8_t v9 = (int8x8_t)v5[1];
  if (!*(void *)&v9) {
    goto LABEL_17;
  }
  uint8x8_t v10 = (uint8x8_t)vcnt_s8(v9);
  v10.i16[0] = vaddlv_u8(v10);
  if (v10.u32[0] > 1uLL)
  {
    unint64_t v11 = ((v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27)) ^ (((v7 ^ (v7 >> 15)) + ~((v7 ^ (v7 >> 15)) << 27)) >> 31);
    if (v8 >= *(void *)&v9) {
      unint64_t v11 = v8 % *(void *)&v9;
    }
  }
  else
  {
    unint64_t v11 = v8 & (*(void *)&v9 - 1);
  }
  uint64_t v12 = *(void **)(*v5 + 8 * v11);
  if (!v12 || (uint64_t v13 = (void *)*v12) == 0)
  {
LABEL_17:
    uint64_t track = _echo_context::fetch_track(*(_echo_context **)this, a2);
    uint64_t v15 = (float *)*((void *)this + 18);
    unint64_t v16 = *((void *)v15 + 1);
    if (v16)
    {
      uint8x8_t v17 = (uint8x8_t)vcnt_s8((int8x8_t)v16);
      v17.i16[0] = vaddlv_u8(v17);
      if (v17.u32[0] > 1uLL)
      {
        unint64_t v2 = v8;
        if (v8 >= v16) {
          unint64_t v2 = v8 % v16;
        }
      }
      else
      {
        unint64_t v2 = v8 & (v16 - 1);
      }
      uLong v18 = *(void **)(*(void *)v15 + 8 * v2);
      if (v18)
      {
        for (uint64_t i = (void *)*v18; i; uint64_t i = (void *)*i)
        {
          unint64_t v20 = i[1];
          if (v20 == v8)
          {
            if (i[2] == a2) {
              return track;
            }
          }
          else
          {
            if (v17.u32[0] > 1uLL)
            {
              if (v20 >= v16) {
                v20 %= v16;
              }
            }
            else
            {
              v20 &= v16 - 1;
            }
            if (v20 != v2) {
              break;
            }
          }
        }
      }
    }
    uint64_t v21 = operator new(0x20uLL);
    void *v21 = 0;
    v21[1] = v8;
    void v21[2] = a2;
    v21[3] = track;
    float v22 = (float)(unint64_t)(*((void *)v15 + 3) + 1);
    float v23 = v15[8];
    if (v16 && (float)(v23 * (float)v16) >= v22)
    {
LABEL_80:
      uint64_t v39 = *(void **)v15;
      BOOL v40 = *(void **)(*(void *)v15 + 8 * v2);
      if (v40)
      {
        void *v21 = *v40;
      }
      else
      {
        void *v21 = *((void *)v15 + 2);
        *((void *)v15 + 2) = v21;
        v39[v2] = v15 + 4;
        if (!*v21)
        {
LABEL_89:
          ++*((void *)v15 + 3);
          return track;
        }
        unint64_t v41 = *(void *)(*v21 + 8);
        if ((v16 & (v16 - 1)) != 0)
        {
          if (v41 >= v16) {
            v41 %= v16;
          }
        }
        else
        {
          v41 &= v16 - 1;
        }
        BOOL v40 = (void *)(*(void *)v15 + 8 * v41);
      }
      *BOOL v40 = v21;
      goto LABEL_89;
    }
    BOOL v24 = 1;
    if (v16 >= 3) {
      BOOL v24 = (v16 & (v16 - 1)) != 0;
    }
    unint64_t v25 = v24 | (2 * v16);
    unint64_t v26 = vcvtps_u32_f32(v22 / v23);
    if (v25 <= v26) {
      int8x8_t prime = (int8x8_t)v26;
    }
    else {
      int8x8_t prime = (int8x8_t)v25;
    }
    if (*(void *)&prime == 1)
    {
      int8x8_t prime = (int8x8_t)2;
    }
    else if ((*(void *)&prime & (*(void *)&prime - 1)) != 0)
    {
      int8x8_t prime = (int8x8_t)std::__next_prime(*(void *)&prime);
    }
    unint64_t v16 = *((void *)v15 + 1);
    if (*(void *)&prime > v16) {
      goto LABEL_46;
    }
    if (*(void *)&prime < v16)
    {
      unint64_t v34 = vcvtps_u32_f32((float)*((unint64_t *)v15 + 3) / v15[8]);
      if (v16 < 3 || (uint8x8_t v35 = (uint8x8_t)vcnt_s8((int8x8_t)v16), v35.i16[0] = vaddlv_u8(v35), v35.u32[0] > 1uLL))
      {
        unint64_t v34 = std::__next_prime(v34);
      }
      else
      {
        uint64_t v36 = 1 << -(char)__clz(v34 - 1);
        if (v34 >= 2) {
          unint64_t v34 = v36;
        }
      }
      if (*(void *)&prime <= v34) {
        int8x8_t prime = (int8x8_t)v34;
      }
      if (*(void *)&prime >= v16)
      {
        unint64_t v16 = *((void *)v15 + 1);
      }
      else
      {
        if (prime)
        {
LABEL_46:
          if (*(void *)&prime >> 61) {
            std::__throw_bad_array_new_length[abi:ne180100]();
          }
          uint64_t v28 = operator new(8 * *(void *)&prime);
          unint64_t v29 = *(void **)v15;
          *(void *)uint64_t v15 = v28;
          if (v29) {
            operator delete(v29);
          }
          uint64_t v30 = 0;
          *((int8x8_t *)v15 + 1) = prime;
          do
            *(void *)(*(void *)v15 + 8 * v30++) = 0;
          while (*(void *)&prime != v30);
          unint64_t v31 = (void *)*((void *)v15 + 2);
          if (v31)
          {
            unint64_t v32 = v31[1];
            uint8x8_t v33 = (uint8x8_t)vcnt_s8(prime);
            v33.i16[0] = vaddlv_u8(v33);
            if (v33.u32[0] > 1uLL)
            {
              if (v32 >= *(void *)&prime) {
                v32 %= *(void *)&prime;
              }
            }
            else
            {
              v32 &= *(void *)&prime - 1;
            }
            *(void *)(*(void *)v15 + 8 * v32) = v15 + 4;
            uint64_t v37 = (void *)*v31;
            if (*v31)
            {
              do
              {
                unint64_t v38 = v37[1];
                if (v33.u32[0] > 1uLL)
                {
                  if (v38 >= *(void *)&prime) {
                    v38 %= *(void *)&prime;
                  }
                }
                else
                {
                  v38 &= *(void *)&prime - 1;
                }
                if (v38 != v32)
                {
                  if (!*(void *)(*(void *)v15 + 8 * v38))
                  {
                    *(void *)(*(void *)v15 + 8 * v38) = v31;
                    goto LABEL_71;
                  }
                  *unint64_t v31 = *v37;
                  *uint64_t v37 = **(void **)(*(void *)v15 + 8 * v38);
                  **(void **)(*(void *)v15 + 8 * v38) = v37;
                  uint64_t v37 = v31;
                }
                unint64_t v38 = v32;
LABEL_71:
                unint64_t v31 = v37;
                uint64_t v37 = (void *)*v37;
                unint64_t v32 = v38;
              }
              while (v37);
            }
          }
          unint64_t v16 = (unint64_t)prime;
          goto LABEL_75;
        }
        unint64_t v44 = *(void **)v15;
        *(void *)uint64_t v15 = 0;
        if (v44) {
          operator delete(v44);
        }
        unint64_t v16 = 0;
        *((void *)v15 + 1) = 0;
      }
    }
LABEL_75:
    if ((v16 & (v16 - 1)) != 0)
    {
      if (v8 >= v16) {
        unint64_t v2 = v8 % v16;
      }
      else {
        unint64_t v2 = v8;
      }
    }
    else
    {
      unint64_t v2 = (v16 - 1) & v8;
    }
    goto LABEL_80;
  }
  while (1)
  {
    unint64_t v14 = v13[1];
    if (v14 == v8) {
      break;
    }
    if (v10.u32[0] > 1uLL)
    {
      if (v14 >= *(void *)&v9) {
        v14 %= *(void *)&v9;
      }
    }
    else
    {
      v14 &= *(void *)&v9 - 1;
    }
    if (v14 != v11) {
      goto LABEL_17;
    }
LABEL_16:
    uint64_t v13 = (void *)*v13;
    if (!v13) {
      goto LABEL_17;
    }
  }
  if (v13[2] != a2) {
    goto LABEL_16;
  }
  return v13[3];
}

void sub_1B02FDAA8(_Unwind_Exception *a1)
{
  operator delete(v1);
  _Unwind_Resume(a1);
}

uint64_t _playlist::add_candidate_id(_playlist *this, uint64_t a2)
{
  uint64_t v4 = (void *)*((void *)this + 2);
  if (!v4
    || (uint64_t result = (uint64_t)std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::find<unsigned long long>(v4, a2)) != 0)
  {
    unint64_t v6 = (void *)*((void *)this + 3);
    if (v6
      && std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::find<unsigned long long>(v6, a2)|| (std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::__emplace_unique_key_args<unsigned long long,unsigned long long const&>(*((void *)this + 17), a2, a2) & 1) == 0)
    {
      return 0;
    }
    else
    {
      unint64_t v8 = (uint64_t *)*((void *)this + 9);
      unint64_t v7 = *((void *)this + 10);
      if ((unint64_t)v8 >= v7)
      {
        uint8x8_t v10 = (uint64_t *)*((void *)this + 8);
        uint64_t v11 = v8 - v10;
        unint64_t v12 = v11 + 1;
        if ((unint64_t)(v11 + 1) >> 61) {
          std::vector<long long>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v13 = v7 - (void)v10;
        if (v13 >> 2 > v12) {
          unint64_t v12 = v13 >> 2;
        }
        BOOL v14 = (unint64_t)v13 >= 0x7FFFFFFFFFFFFFF8;
        unint64_t v15 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v14) {
          unint64_t v15 = v12;
        }
        if (v15)
        {
          unint64_t v15 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v15);
          uint8x8_t v10 = (uint64_t *)*((void *)this + 8);
          unint64_t v8 = (uint64_t *)*((void *)this + 9);
        }
        else
        {
          uint64_t v16 = 0;
        }
        uint8x8_t v17 = (uint64_t *)(v15 + 8 * v11);
        unint64_t v18 = v15 + 8 * v16;
        uint64_t *v17 = a2;
        int8x8_t v9 = v17 + 1;
        while (v8 != v10)
        {
          uint64_t v19 = *--v8;
          *--uint8x8_t v17 = v19;
        }
        *((void *)this + 8) = v17;
        *((void *)this + 9) = v9;
        *((void *)this + 10) = v18;
        if (v10) {
          operator delete(v10);
        }
      }
      else
      {
        uint64_t *v8 = a2;
        int8x8_t v9 = v8 + 1;
      }
      *((void *)this + 9) = v9;
      unint64_t v20 = *((void *)this + 12);
      uint64_t v21 = *((void *)this + 13);
      if (v20 == v21 << 6)
      {
        if ((uint64_t)(v20 + 1) < 0) {
          std::vector<long long>::__throw_length_error[abi:ne180100]();
        }
        unint64_t v22 = v21 << 7;
        if (v22 <= (v20 & 0xFFFFFFFFFFFFFFC0) + 64) {
          unint64_t v22 = (v20 & 0xFFFFFFFFFFFFFFC0) + 64;
        }
        if (v20 <= 0x3FFFFFFFFFFFFFFELL) {
          unint64_t v23 = v22;
        }
        else {
          unint64_t v23 = 0x7FFFFFFFFFFFFFFFLL;
        }
        std::vector<BOOL>::reserve((uint64_t)this + 88, v23);
        unint64_t v20 = *((void *)this + 12);
      }
      *((void *)this + 12) = v20 + 1;
      uint64_t result = 1;
      *(void *)(*((void *)this + 11) + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    }
  }
  return result;
}

void std::vector<BOOL>::reserve(uint64_t a1, unint64_t a2)
{
  if (a2 > *(void *)(a1 + 16) << 6)
  {
    if ((a2 & 0x8000000000000000) != 0) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    unint64_t v3 = ((a2 - 1) >> 6) + 1;
    uint64_t v4 = (uint64_t *)operator new(8 * v3);
    uint64_t v5 = *(void **)a1;
    unint64_t v6 = *(void *)(a1 + 8);
    int v7 = v6 & 0x3F;
    *(void *)&long long v8 = v6;
    *((void *)&v8 + 1) = v3;
    unint64_t v9 = (v6 - 1) >> 6;
    if (v6 < 0x41) {
      unint64_t v9 = 0;
    }
    v4[v9] = 0;
    if (v6 > 0x3F || (v6 & 0x3F) != 0)
    {
      int v10 = 0;
      int v11 = 0;
      unint64_t v12 = &v5[v6 >> 6];
      uint64_t v13 = v4;
      BOOL v14 = v5;
      do
      {
        uint64_t v15 = 1 << v10;
        if ((*v14 >> v11)) {
          uint64_t v16 = *v13 | v15;
        }
        else {
          uint64_t v16 = *v13 & ~v15;
        }
        *uint64_t v13 = v16;
        v14 += v11 == 63;
        if (v11 == 63) {
          int v11 = 0;
        }
        else {
          ++v11;
        }
        v13 += v10 == 63;
        if (v10 == 63) {
          int v10 = 0;
        }
        else {
          ++v10;
        }
      }
      while (v14 != v12 || v11 != v7);
    }
    *(void *)a1 = v4;
    *(_OWORD *)(a1 + 8) = v8;
    if (v5)
    {
      operator delete(v5);
    }
  }
}

uint64_t echo_playlist_close(uint64_t result)
{
  if (result)
  {
    uint64_t v1 = result;
    uint64_t v2 = *(void *)(result + 8);
    if (v2) {
      (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
    }
    uint64_t v3 = *(void *)(v1 + 136);
    if (v3)
    {
      uint64_t v4 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v3);
      MEMORY[0x1B3E93610](v4, 0x10A0C408EF24B1CLL);
    }
    uint64_t v5 = *(void *)(v1 + 160) - *(void *)(v1 + 152);
    if (v5)
    {
      uint64_t v6 = 0;
      unint64_t v7 = v5 >> 3;
      if (v7 <= 1) {
        uint64_t v8 = 1;
      }
      else {
        uint64_t v8 = v7;
      }
      do
      {
        uint64_t v9 = *(void *)(*(void *)(v1 + 152) + 8 * v6);
        if (v9) {
          (*(void (**)(uint64_t))(*(void *)v9 + 8))(v9);
        }
        ++v6;
      }
      while (v8 != v6);
    }
    if (*(unsigned char *)(v1 + 185))
    {
      uint64_t v10 = *(void *)(v1 + 144);
      int v11 = *(void **)(v10 + 16);
      if (!v11) {
        goto LABEL_19;
      }
      do
      {
        uint64_t v12 = v11[3];
        if (v12) {
          (*(void (**)(uint64_t))(*(void *)v12 + 8))(v12);
        }
        int v11 = (void *)*v11;
      }
      while (v11);
      uint64_t v10 = *(void *)(v1 + 144);
      if (v10)
      {
LABEL_19:
        uint64_t v13 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v10);
        MEMORY[0x1B3E93610](v13, 0x10A0C408EF24B1CLL);
      }
    }
    uint64_t v14 = *(void *)(v1 + 16);
    if (v14)
    {
      uint64_t v15 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v14);
      MEMORY[0x1B3E93610](v15, 0x10A0C408EF24B1CLL);
    }
    uint64_t v16 = *(void *)(v1 + 24);
    if (v16)
    {
      uint64_t v17 = std::__hash_table<unsigned long long,echo_hash_shift<unsigned long long>,std::equal_to<unsigned long long>,std::allocator<unsigned long long>>::~__hash_table(v16);
      MEMORY[0x1B3E93610](v17, 0x10A0C408EF24B1CLL);
    }
    uint64_t v18 = *(void *)(v1 + 32);
    if (v18)
    {
      uint64_t v19 = *(void **)v18;
      if (*(void *)v18)
      {
        *(void *)(v18 + 8) = v19;
        operator delete(v19);
      }
      MEMORY[0x1B3E93610](v18, 0x10C402FEFCB83);
    }
    unint64_t v20 = *(void **)(v1 + 152);
    if (v20)
    {
      *(void *)(v1 + 160) = v20;
      operator delete(v20);
    }
    uint64_t v21 = *(void **)(v1 + 112);
    if (v21)
    {
      *(void *)(v1 + 120) = v21;
      operator delete(v21);
    }
    unint64_t v22 = *(void **)(v1 + 88);
    if (v22) {
      operator delete(v22);
    }
    unint64_t v23 = *(void **)(v1 + 64);
    if (v23)
    {
      *(void *)(v1 + 72) = v23;
      operator delete(v23);
    }
    JUMPOUT(0x1B3E93610);
  }
  return result;
}

uint64_t echo_playlist_next_track(uint64_t this)
{
  if (!this) {
    return this;
  }
  uint64_t v1 = this;
  if (*(void *)(this + 56) == 0x7FFFFFFFLL)
  {
    *(void *)(this + 56) = 0;
    _playlist::add_track((_playlist *)this, *(_track **)(this + 8));
    if (*(unsigned char *)(v1 + 184)) {
      _playlist::add_more_candidates((_playlist *)v1);
    }
    else {
      _playlist::add_candidates_from_track((_playlist *)v1, *(_track **)(v1 + 8), 0, 0, &v39);
    }
    unint64_t v7 = *(_track **)(v1 + 8);
    return *((void *)v7 + 1);
  }
  uint64_t v35 = *(void *)(*(void *)this + 88);
  uint64_t v36 = 0x100000001;
  while (2)
  {
    uint64_t v2 = *(void *)(v1 + 72) - *(void *)(v1 + 64);
    if (!v2) {
      goto LABEL_30;
    }
    unint64_t v3 = 0;
    unint64_t v4 = v2 >> 3;
    if (v4 <= 1) {
      unint64_t v4 = 1;
    }
    unint64_t v37 = v4;
    do
    {
      unint64_t v5 = v3 >> 6;
      uint64_t v38 = 1 << v3;
      if ((*(void *)(*(void *)(v1 + 88) + 8 * (v3 >> 6)) & (1 << v3)) == 0) {
        goto LABEL_29;
      }
      uint64_t track = _playlist::fetch_track((_playlist *)v1, *(void *)(*(void *)(v1 + 64) + 8 * v3));
      if (!track)
      {
LABEL_28:
        *(void *)(*(void *)(v1 + 88) + 8 * v5) &= ~v38;
        goto LABEL_29;
      }
      unint64_t v7 = (_track *)track;
      uint64_t v8 = *(void *)v1;
      uint64_t v9 = *(void *)(*(void *)v1 + 72) - *(void *)(*(void *)v1 + 64);
      if (!v9) {
        goto LABEL_33;
      }
      uint64_t v10 = 0;
      unint64_t v11 = v9 >> 3;
      if (v11 <= 1) {
        uint64_t v12 = 1;
      }
      else {
        uint64_t v12 = v11;
      }
      while (1)
      {
        uint64_t v13 = *(void *)(*(void *)(v8 + 64) + 8 * v10);
        uint64_t v14 = *(void *)(*(void *)(v1 + 152) + 8 * v10);
        if (!(*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v13 + 40))(v13, v14))
        {
          uint64_t v18 = *(FILE **)(v8 + 16);
          if (v18)
          {
            uint64_t v19 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 16))(v13);
            fprintf(v18, "constraint not in effect: %s, track id = %llu\n", v19, *((void *)v7 + 1));
          }
          goto LABEL_23;
        }
        int v15 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, _track *))(*(void *)v13 + 48))(v13, v8, v14, v7);
        uint64_t v16 = *(FILE **)(v8 + 16);
        if (v16)
        {
          uint64_t v17 = (const char *)(*(uint64_t (**)(uint64_t))(*(void *)v13 + 16))(v13);
          fprintf(v16, "constraint eval: %s, track id = %llu, uint64_t result = %d\n", v17, *((void *)v7 + 1), v15);
        }
        if ((v15 - 3) >= 0xFFFFFFFE) {
          break;
        }
LABEL_23:
        if (v12 == ++v10) {
          goto LABEL_33;
        }
      }
      if (v15 == 2) {
        goto LABEL_28;
      }
      if (!v15)
      {
LABEL_33:
        _playlist::add_track((_playlist *)v1, v7);
        if (!*(unsigned char *)(v1 + 186)) {
          *(void *)(*(void *)(v1 + 88) + 8 * v5) &= ~v38;
        }
        uint64_t v20 = *(void *)v1;
        uint64_t v21 = *(void *)(*(void *)v1 + 72) - *(void *)(*(void *)v1 + 64);
        if (v21)
        {
          uint64_t v22 = 0;
          unint64_t v23 = v21 >> 3;
          if (v23 <= 1) {
            uint64_t v24 = 1;
          }
          else {
            uint64_t v24 = v23;
          }
          do
          {
            uint64_t v25 = *(void *)(*(void *)(v20 + 64) + 8 * v22);
            (*(void (**)(uint64_t, void))(*(void *)v25 + 72))(v25, *(void *)(*(void *)(v1 + 152) + 8 * v22++));
          }
          while (v24 != v22);
        }
        goto LABEL_53;
      }
LABEL_29:
      ++v3;
    }
    while (v3 != v37);
LABEL_30:
    if (*(unsigned char *)(v1 + 184) && _playlist::add_more_candidates((_playlist *)v1))
    {
      unint64_t v7 = 0;
      BYTE4(v36) = 1;
    }
    else
    {
      uint64_t v26 = *(void *)v1;
      uint64_t v27 = *(void *)(*(void *)v1 + 72) - *(void *)(*(void *)v1 + 64);
      if (v27)
      {
        unint64_t v28 = v27 >> 3;
        uint64_t v29 = *(void *)(v1 + 176);
        unint64_t v30 = v28 - 1;
        if (v28 <= 1) {
          uint64_t v31 = 1;
        }
        else {
          uint64_t v31 = v28;
        }
        while (1)
        {
          if (v29 == v30) {
            uint64_t v29 = 0;
          }
          else {
            ++v29;
          }
          uint64_t v32 = *(void *)(*(void *)(v26 + 64) + 8 * v29);
          uint64_t v33 = *(void *)(*(void *)(v1 + 152) + 8 * v29);
          if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v32 + 40))(v32, v33))
          {
            if ((*(unsigned int (**)(uint64_t, uint64_t))(*(void *)v32 + 56))(v32, v33)) {
              break;
            }
          }
          if (!--v31) {
            goto LABEL_51;
          }
        }
        unint64_t v7 = 0;
        *(void *)(v1 + 176) = v29;
        uint64_t v36 = 1;
      }
      else
      {
LABEL_51:
        unint64_t v7 = 0;
        uint64_t v36 = 0;
      }
    }
LABEL_53:
    if (v35)
    {
      char v34 = v36 & BYTE4(v36);
      if (v7) {
        goto LABEL_58;
      }
LABEL_57:
      if ((v34 & 1) == 0) {
        goto LABEL_58;
      }
      continue;
    }
    break;
  }
  char v34 = v36 | BYTE4(v36);
  if (!v7) {
    goto LABEL_57;
  }
LABEL_58:
  if (!v7) {
    return 0;
  }
  return *((void *)v7 + 1);
}

BOOL ML3PurchaseHistoryImportItem::canInsertIntoPurchasedPlaylist(ML3PurchaseHistoryImportItem *this)
{
  return ((*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217) & 0x408) != 0;
}

id ML3PurchaseHistoryImportItem::getDeduplicationPredicates(ML3PurchaseHistoryImportItem *this)
{
  v18[2] = *MEMORY[0x1E4F143B8];
  uint64_t v2 = (void *)[objc_alloc(MEMORY[0x1E4F1CA48]) initWithCapacity:2];
  uint64_t v3 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663302);
  uint64_t v4 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  uint64_t v5 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663337);
  if (v3)
  {
    uint64_t v6 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.purchase_history_id" equalToInt64:v3];
    [v2 addObject:v6];
  }
  if (v4)
  {
    unint64_t v7 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:v4];
    [v2 addObject:v7];

    uint64_t v8 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:0];
    v18[0] = v8;
    uint64_t v9 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v4];
    v18[1] = v9;
    uint64_t v10 = [MEMORY[0x1E4F1C978] arrayWithObjects:v18 count:2];
    unint64_t v11 = +[ML3CompoundPredicate predicateMatchingPredicates:v10];
    [v2 addObject:v11];
  }
  if (v5)
  {
    uint64_t v12 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.store_item_id" equalToInt64:0];
    v17[0] = v12;
    uint64_t v13 = +[ML3ComparisonPredicate predicateWithProperty:@"item_store.subscription_store_item_id" equalToInt64:v5];
    v17[1] = v13;
    uint64_t v14 = [MEMORY[0x1E4F1C978] arrayWithObjects:v17 count:2];
    int v15 = +[ML3CompoundPredicate predicateMatchingPredicates:v14];
    [v2 addObject:v15];
  }

  return v2;
}

void sub_1B02FEA24(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3PurchaseHistoryImportItem::getSourceIdentifiers@<X0>(ML3PurchaseHistoryImportItem *this@<X0>, BOOL *a2@<X1>, void *a3@<X8>)
{
  std::vector<long long>::vector(a3);
  *a2 = 0;
  uint64_t result = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663302);
  if (result) {
    *(void *)(*a3 + 32) = result;
  }
  return result;
}

void sub_1B02FEB2C(_Unwind_Exception *exception_object)
{
  uint64_t v3 = *(void **)v1;
  if (*(void *)v1)
  {
    *(void *)(v1 + 8) = v3;
    operator delete(v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3PurchaseHistoryImportItem::getDescription(ML3PurchaseHistoryImportItem *this)
{
  (*(void (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663302);
  (*(void (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 100663297);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v7);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"<ML3PurchaseHistoryImportItem ", 30);
  *(_DWORD *)((char *)&v7[1] + *(void *)(v7[0] - 24)) = *(_DWORD *)((unsigned char *)&v7[1] + *(void *)(v7[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" purchaseHistoryId=", 19);
  *(_DWORD *)((char *)v3 + *(void *)(*v3 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(*v3 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v4 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)", storeId=", 10);
  uint64_t v5 = (void *)std::ostream::operator<<();
  char v10 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)&v10, 1);
  std::stringbuf::str();
  v7[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v7 + *(void *)(v7[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v7[1] = MEMORY[0x1E4FBA470] + 16;
  if (v8 < 0) {
    operator delete((void *)v7[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v9);
}

void sub_1B02FEDA0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL ML3PurchaseHistoryImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  if (a2 == 33554442) {
    a2 = 16777217;
  }
  else {
    a2 = a2;
  }
  return (a2 - 0x1000000) >> 25 <= 4 && ML3DAAPImportItem::hasValue(this, a2);
}

void ML3PurchaseHistoryImportItem::getDataValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  if (a2 != 134217729)
  {
    ML3DAAPImportItem::getDataValue(this, a2, __p);
    *(_OWORD *)a3 = *(_OWORD *)__p;
    return;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v14, *((void *)this + 8), 0x61654375u);
  if (v14)
  {
    std::string::basic_string[abi:ne180100](__p, *(void **)(v14 + 48), *(void *)(v14 + 64));
    uint64_t v5 = ML3CPPBridgeString((const UInt8 *)__p, 1);
    if (v13 < 0) {
      operator delete(__p[0]);
    }
    uint64_t v6 = (void *)MEMORY[0x1E4F1C9E8];
    unint64_t v7 = [MEMORY[0x1E4F1CB10] URLWithString:v5];
    uint64_t v8 = [v6 dictionaryWithContentsOfURL:v7];

    if (v8)
    {
      id v9 = +[ML3Track flattenedChapterDataFromDAAPInfoDictionary:v8 trackPersistentID:*((void *)this + 1)];
      [v9 bytes];
      [v9 length];
      operator new();
    }
    long long v11 = 0u;
  }
  else
  {
    long long v11 = 0u;
  }
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (!(void)v11)
  {
    ML3DAAPImportItem::getDataValue(this, 134217729, __p);
    *(_OWORD *)a3 = *(_OWORD *)__p;
    char v10 = (std::__shared_weak_count *)*((void *)&v11 + 1);
    if (!*((void *)&v11 + 1)) {
      return;
    }
    goto LABEL_16;
  }
  char v10 = (std::__shared_weak_count *)*((void *)&v11 + 1);
  if (*((void *)&v11 + 1)) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v11 + 1) + 8), 1uLL, memory_order_relaxed);
  }
  *(_OWORD *)a3 = v11;
  if (*((void *)&v11 + 1)) {
LABEL_16:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
}

void sub_1B02FEFE8(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, long long a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (*((void *)&a9 + 1)) {
    std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&a9 + 1));
  }
  _Unwind_Resume(exception_object);
}

float ML3PurchaseHistoryImportItem::getFloatValue(ML3PurchaseHistoryImportItem **this, uint64_t a2)
{
  if (a2 == 33554437)
  {
    if (ML3PurchaseHistoryImportItem::_hasFlavorValue(this[12], (ML3PurchaseHistoryImportItem *)0x2000005))
    {
      return (float)(uint64_t)ML3PurchaseHistoryImportItem::_getIntegerFlavorValue(this[12], (ML3PurchaseHistoryImportItem *)0x2000005);
    }
    else
    {
      return ML3DAAPImportItem::getFloatValue((ML3DAAPImportItem *)this, 33554437);
    }
  }
  else
  {
    return ML3DAAPTrackImportItem::getFloatValue((ML3DAAPImportItem *)this, a2);
  }
}

uint64_t ML3PurchaseHistoryImportItem::_hasFlavorValue(ML3PurchaseHistoryImportItem *this, ML3PurchaseHistoryImportItem *a2)
{
  uint64_t v2 = (uint64_t)this;
  if (this)
  {
    unsigned int FlavorCode = ML3PurchaseHistoryImportItem::_getFlavorCode(a2);
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v5, v2, FlavorCode);
    uint64_t v2 = v5 != 0;
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  return v2;
}

ML3PurchaseHistoryImportItem *ML3PurchaseHistoryImportItem::_getIntegerFlavorValue(ML3PurchaseHistoryImportItem *this, ML3PurchaseHistoryImportItem *a2)
{
  uint64_t v2 = this;
  if (this)
  {
    unsigned int FlavorCode = ML3PurchaseHistoryImportItem::_getFlavorCode(a2);
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v5, (uint64_t)v2, FlavorCode);
    if (v5) {
      uint64_t v2 = (ML3PurchaseHistoryImportItem *)ML3CPP::Element::integerValue(v5);
    }
    else {
      uint64_t v2 = 0;
    }
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
  }
  return v2;
}

uint64_t ML3PurchaseHistoryImportItem::_getFlavorCode(ML3PurchaseHistoryImportItem *this)
{
  if ((int)this > 100663315)
  {
    switch((int)this)
    {
      case 100663316:
        uint64_t result = 1634026582;
        break;
      case 100663317:
        uint64_t result = 1634026576;
        break;
      case 100663318:
        uint64_t result = 1634028337;
        break;
      case 100663319:
      case 100663320:
      case 100663321:
      case 100663322:
      case 100663323:
        goto LABEL_11;
      case 100663324:
        uint64_t result = 1634026357;
        break;
      default:
        if (this == 117440513)
        {
          uint64_t result = 1634027588;
        }
        else
        {
LABEL_11:
          uint64_t v3 = [MEMORY[0x1E4F28B00] currentHandler];
          uint64_t v4 = [NSString stringWithUTF8String:"uint32_t ML3PurchaseHistoryImportItem::_getFlavorCode(MLImportPropertyKey) const"];
          objc_msgSend(v3, "handleFailureInFunction:file:lineNumber:description:", v4, @"ML3PurchaseHistoryImportItem.mm", 303, @"flavorDataForPropertyKey passed unknown key %d", this);

          uint64_t result = 0;
        }
        break;
    }
  }
  else
  {
    uint64_t result = 1634951794;
    switch((int)this)
    {
      case 50331650:
        return result;
      case 50331651:
        return 1634952036;
      case 50331652:
        return 1634952051;
      case 50331653:
        return 1634952299;
      case 50331654:
        return 1634956652;
      case 50331655:
        return 1634027349;
      case 50331656:
      case 50331662:
      case 50331665:
      case 50331666:
        goto LABEL_11;
      case 50331657:
        return 1634952813;
      case 50331658:
        return 1634027336;
      case 50331659:
        return 1634027333;
      case 50331660:
        return 1634027332;
      case 50331661:
        return 1634027346;
      case 50331663:
        return 1634955894;
      case 50331664:
        return 1634956146;
      case 50331667:
        return 1634029142;
      default:
        if (this == 33554437)
        {
          uint64_t result = 1634956397;
        }
        else
        {
          if (this != 33554440) {
            goto LABEL_11;
          }
          uint64_t result = 1634954355;
        }
        break;
    }
  }
  return result;
}

void sub_1B02FF43C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

unint64_t ML3PurchaseHistoryImportItem::getIntegerValue(ML3PurchaseHistoryImportItem *this, ML3PurchaseHistoryImportItem *a2)
{
  if ((int)a2 > 83886092)
  {
    if ((int)a2 > 100663315)
    {
      if ((a2 - 100663316) < 3) {
        goto LABEL_5;
      }
      if ((a2 - 117440530) >= 2)
      {
        if (a2 != 117440513) {
          goto LABEL_35;
        }
        goto LABEL_5;
      }
      IntegerCFArrayRef Value = ML3DAAPTrackImportItem::getIntegerValue(this, (uint64_t)a2);
      if (IntegerValue) {
        return (uint64_t)((double)IntegerValue + -978307200.0);
      }
      else {
        return 0;
      }
    }
    else
    {
      switch(a2)
      {
        case 0x500000D:
          uint64_t v10 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
          return (MLMediaTypeByStandardizingMediaType(v10) & 0x3B26) != 0;
        case 0x600000B:
          return 1;
        case 0x6000010:
          return *((void *)this + 11);
        default:
          goto LABEL_35;
      }
    }
  }
  if ((int)a2 <= 33554457)
  {
    switch(a2)
    {
      case 0x100001A:
        uint64_t v11 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
        BOOL v8 = (MLMediaTypeByStandardizingMediaType(v11) & 0x408) == 0;
        break;
      case 0x2000008:
        goto LABEL_5;
      case 0x200000A:
        uint64_t v7 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
        BOOL v8 = MLMediaTypeByStandardizingMediaType(v7) == 2;
        break;
      default:
        goto LABEL_35;
    }
    return v8;
  }
  if ((a2 - 50331650) > 0x11 || ((1 << ((_BYTE)a2 - 2)) & 0x26F2F) == 0)
  {
    if (a2 != 33554458) {
      goto LABEL_35;
    }
    ML3PurchaseHistoryImportItem::_getStringFlavorValue((ML3PurchaseHistoryImportItem *)__p, *((void *)this + 12), (ML3PurchaseHistoryImportItem *)0x3000009);
    IntegerFlavorCFArrayRef Value = ML3PurchaseHistoryImportItem::_getIntegerFlavorValue(*((ML3PurchaseHistoryImportItem **)this + 12), (ML3PurchaseHistoryImportItem *)0x3000003);
    if (SHIBYTE(v29) < 0)
    {
      if (__p[1] == (void *)3)
      {
        char v13 = (void **)__p[0];
LABEL_40:
        int v14 = *(unsigned __int16 *)v13;
        int v15 = *((unsigned __int8 *)v13 + 2);
        if (v14 == 13421 && v15 == 112)
        {
          uint64_t v6 = 13;
          goto LABEL_79;
        }
      }
    }
    else if (HIBYTE(v29) == 3)
    {
      char v13 = __p;
      goto LABEL_40;
    }
    if (IntegerFlavorValue == 1836069985)
    {
      uint64_t v6 = 14;
      goto LABEL_79;
    }
    if (IntegerFlavorValue == 1634492771)
    {
      uint64_t v6 = 26;
      goto LABEL_79;
    }
    if (v29 < 0)
    {
      if (__p[1] != (void *)3) {
        goto LABEL_58;
      }
      uint64_t v17 = (void **)__p[0];
    }
    else
    {
      if (HIBYTE(v29) != 3) {
        goto LABEL_58;
      }
      uint64_t v17 = __p;
    }
    int v18 = *(unsigned __int16 *)v17;
    int v19 = *((unsigned __int8 *)v17 + 2);
    if (v18 != 13421 || v19 != 118)
    {
LABEL_58:
      {
        qword_1E9B31C58 = 0;
        qword_1E9B31C50 = 0;
        ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats = (uint64_t)&qword_1E9B31C50;
        __cxa_atexit((void (*)(void *))std::map<std::string,long long>::~map[abi:ne180100], &ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats, &dword_1B022D000);
      }
      if (ML3PurchaseHistoryImportItem::_getLocationKind(void)const::onceToken != -1) {
        dispatch_once(&ML3PurchaseHistoryImportItem::_getLocationKind(void)const::onceToken, &__block_literal_global_813);
      }
      uint64_t v21 = (void *)qword_1E9B31C50;
      if (!qword_1E9B31C50)
      {
LABEL_66:
        uint64_t v6 = 0;
        goto LABEL_79;
      }
      while (1)
      {
        if (!std::less<std::string>::operator()[abi:ne180100](__p, v21 + 4))
        {
          if (!std::less<std::string>::operator()[abi:ne180100](v21 + 4, __p))
          {
            uint64_t v22 = std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__find_equal<std::string>((uint64_t **)&v26, __p);
            unint64_t v23 = (uint64_t *)*v22;
            if (!*v22)
            {
              uint64_t v24 = (uint64_t **)v22;
              unint64_t v23 = (uint64_t *)operator new(0x40uLL);
              uint64_t v25 = (std::string *)(v23 + 4);
              if (SHIBYTE(v29) < 0)
              {
                std::string::__init_copy_ctor_external(v25, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
              }
              else
              {
                *(_OWORD *)&v25->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
                v23[6] = v29;
              }
              v23[7] = 0;
              std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__insert_node_at((uint64_t)v26, v24, v23);
            }
            uint64_t v6 = v23[7];
            goto LABEL_79;
          }
          ++v21;
        }
        uint64_t v21 = (void *)*v21;
        if (!v21) {
          goto LABEL_66;
        }
      }
    }
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v26, *((void *)this + 8), 0x61654D6Bu);
    if (v26 && (ML3CPP::Element::integerValue(v26) & 0x20) != 0) {
      uint64_t v6 = 5;
    }
    else {
      uint64_t v6 = 3;
    }
    if (v27) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v27);
    }
LABEL_79:
    if (SHIBYTE(v29) < 0) {
      operator delete(__p[0]);
    }
    return v6;
  }
LABEL_5:
  if (ML3PurchaseHistoryImportItem::_hasFlavorValue(*((ML3PurchaseHistoryImportItem **)this + 12), a2))
  {
    uint64_t v4 = (ML3PurchaseHistoryImportItem *)*((void *)this + 12);
    return (unint64_t)ML3PurchaseHistoryImportItem::_getIntegerFlavorValue(v4, a2);
  }
LABEL_35:

  return ML3DAAPTrackImportItem::getIntegerValue(this, (uint64_t)a2);
}

void sub_1B02FF9D0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,long long>,void *>>>::operator()[abi:ne180100](0, v17);
  operator delete(__p);
  _Unwind_Resume(a1);
}

void ML3PurchaseHistoryImportItem::_getStringFlavorValue(ML3PurchaseHistoryImportItem *this, uint64_t a2, ML3PurchaseHistoryImportItem *a3)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  *((void *)this + 2) = 0;
  if (a2)
  {
    unsigned int FlavorCode = ML3PurchaseHistoryImportItem::_getFlavorCode(a3);
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, a2, FlavorCode);
    if (v8)
    {
      std::string::basic_string[abi:ne180100](&__dst, *(void **)(v8 + 48), *(void *)(v8 + 64));
      *(_OWORD *)this = __dst;
      *((void *)this + 2) = v7;
    }
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
  }
}

void sub_1B02FFA8C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

uint64_t *std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__find_equal<std::string>(uint64_t **a1, void *a2)
{
  uint64_t v3 = &qword_1E9B31C50;
  uint64_t v4 = qword_1E9B31C50;
  if (qword_1E9B31C50)
  {
    uint64_t v6 = &qword_1E9B31C50;
    do
    {
      while (1)
      {
        uint64_t v3 = (uint64_t *)v4;
        uint64_t v7 = (void *)(v4 + 32);
        if (!std::less<std::string>::operator()[abi:ne180100](a2, (void *)(v4 + 32))) {
          break;
        }
        uint64_t v4 = *v3;
        uint64_t v6 = v3;
        if (!*v3) {
          goto LABEL_10;
        }
      }
      if (!std::less<std::string>::operator()[abi:ne180100](v7, a2)) {
        break;
      }
      uint64_t v6 = v3 + 1;
      uint64_t v4 = v3[1];
    }
    while (v4);
  }
  else
  {
    uint64_t v6 = &qword_1E9B31C50;
  }
LABEL_10:
  *a1 = v3;
  return v6;
}

uint64_t *std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__insert_node_at(uint64_t a1, uint64_t **a2, uint64_t *a3)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = a1;
  *a2 = a3;
  if (*(void *)ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats)
  {
    ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats = *(void *)ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats;
    a3 = *a2;
  }
  uint64_t result = std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>((uint64_t *)qword_1E9B31C50, a3);
  ++qword_1E9B31C58;
  return result;
}

uint64_t *std::__tree_balance_after_insert[abi:ne180100]<std::__tree_node_base<void *> *>(uint64_t *result, uint64_t *a2)
{
  *((unsigned char *)a2 + 24) = a2 == result;
  if (a2 != result)
  {
    do
    {
      uint64_t v2 = (uint64_t *)a2[2];
      if (*((unsigned char *)v2 + 24)) {
        return result;
      }
      uint64_t v3 = (uint64_t *)v2[2];
      uint64_t v4 = (uint64_t *)*v3;
      if ((uint64_t *)*v3 == v2)
      {
        uint64_t v7 = v3[1];
        if (!v7 || (int v8 = *(unsigned __int8 *)(v7 + 24), v5 = (unsigned char *)(v7 + 24), v8))
        {
          if ((uint64_t *)*v2 == a2)
          {
            id v9 = (uint64_t **)a2[2];
          }
          else
          {
            id v9 = (uint64_t **)v2[1];
            uint64_t v10 = *v9;
            v2[1] = (uint64_t)*v9;
            if (v10)
            {
              void v10[2] = (uint64_t)v2;
              uint64_t v3 = (uint64_t *)v2[2];
            }
            v9[2] = v3;
            *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = v9;
            *id v9 = v2;
            v2[2] = (uint64_t)v9;
            uint64_t v3 = v9[2];
            uint64_t v2 = (uint64_t *)*v3;
          }
          *((unsigned char *)v9 + 24) = 1;
          *((unsigned char *)v3 + 24) = 0;
          uint64_t v13 = v2[1];
          uint64_t *v3 = v13;
          if (v13) {
            *(void *)(v13 + 16) = v3;
          }
          v2[2] = v3[2];
          *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
          v2[1] = (uint64_t)v3;
          goto LABEL_27;
        }
      }
      else if (!v4 || (v6 = *((unsigned __int8 *)v4 + 24), uint64_t v5 = v4 + 3, v6))
      {
        if ((uint64_t *)*v2 == a2)
        {
          uint64_t v11 = a2[1];
          uint64_t *v2 = v11;
          if (v11)
          {
            *(void *)(v11 + 16) = v2;
            uint64_t v3 = (uint64_t *)v2[2];
          }
          a2[2] = (uint64_t)v3;
          *(void *)(v2[2] + 8 * (*(void *)v2[2] != (void)v2)) = a2;
          a2[1] = (uint64_t)v2;
          v2[2] = (uint64_t)a2;
          uint64_t v3 = (uint64_t *)a2[2];
        }
        else
        {
          a2 = (uint64_t *)a2[2];
        }
        *((unsigned char *)a2 + 24) = 1;
        *((unsigned char *)v3 + 24) = 0;
        uint64_t v2 = (uint64_t *)v3[1];
        uint64_t v12 = *v2;
        v3[1] = *v2;
        if (v12) {
          *(void *)(v12 + 16) = v3;
        }
        v2[2] = v3[2];
        *(void *)(v3[2] + 8 * (*(void *)v3[2] != (void)v3)) = v2;
        uint64_t *v2 = (uint64_t)v3;
LABEL_27:
        _DWORD v3[2] = (uint64_t)v2;
        return result;
      }
      *((unsigned char *)v2 + 24) = 1;
      a2 = v3;
      *((unsigned char *)v3 + 24) = v3 == result;
      unsigned char *v5 = 1;
    }
    while (v3 != result);
  }
  return result;
}

void std::__tree_node_destructor<std::allocator<std::__tree_node<std::__value_type<std::string,long long>,void *>>>::operator()[abi:ne180100](char a1, void **__p)
{
  if (a1)
  {
    if (*((char *)__p + 55) < 0) {
      operator delete(__p[4]);
    }
  }
  else if (!__p)
  {
    return;
  }

  operator delete(__p);
}

BOOL std::less<std::string>::operator()[abi:ne180100](void *a1, void *a2)
{
  int v2 = *((char *)a2 + 23);
  int v3 = *((char *)a1 + 23);
  if (v3 >= 0) {
    size_t v4 = *((unsigned __int8 *)a1 + 23);
  }
  else {
    size_t v4 = a1[1];
  }
  if (v3 < 0) {
    a1 = (void *)*a1;
  }
  if (v2 >= 0) {
    size_t v5 = *((unsigned __int8 *)a2 + 23);
  }
  else {
    size_t v5 = a2[1];
  }
  if (v2 < 0) {
    a2 = (void *)*a2;
  }
  if (v5 >= v4) {
    size_t v6 = v4;
  }
  else {
    size_t v6 = v5;
  }
  int v7 = memcmp(a1, a2, v6);
  if (v7) {
    return v7 < 0;
  }
  else {
    return v4 < v5;
  }
}

void ___ZNK28ML3PurchaseHistoryImportItem16_getLocationKindEv_block_invoke()
{
  v24[4] = *MEMORY[0x1E4F143B8];
  std::string::basic_string[abi:ne180100]<0>(v19, "pdf");
  v19[3] = 55;
  std::string::basic_string[abi:ne180100]<0>(v20, "itlp");
  v20[3] = 54;
  std::string::basic_string[abi:ne180100]<0>(v21, "ite");
  v21[3] = 53;
  std::string::basic_string[abi:ne180100]<0>(v22, "m4b");
  v22[3] = 49;
  std::string::basic_string[abi:ne180100]<0>(v23, "aax");
  v23[3] = 35;
  std::string::basic_string[abi:ne180100]<0>(v24, ".epub");
  v24[3] = 51;
  if (!qword_1E9B31C58) {
    goto LABEL_18;
  }
  uint64_t v0 = ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats;
  ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats = (uint64_t)&qword_1E9B31C50;
  *(void *)(qword_1E9B31C50 + 16) = 0;
  qword_1E9B31C50 = 0;
  qword_1E9B31C58 = 0;
  if (*(void *)(v0 + 8)) {
    uint64_t v1 = *(void **)(v0 + 8);
  }
  else {
    uint64_t v1 = (void *)v0;
  }
  int v15 = &ML3PurchaseHistoryImportItem::_getLocationKind(void)const::__otherFormats;
  uint64_t v16 = v1;
  uint64_t v17 = v1;
  if (!v1)
  {
    std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v15);
LABEL_18:
    uint64_t v6 = 0;
    goto LABEL_21;
  }
  uint64_t v2 = 0;
  uint64_t v16 = std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::__detach_next((uint64_t)v1);
  int v3 = (std::string *)v19;
  while (1)
  {
    size_t v4 = std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__find_equal<std::string>(&v18, v3);
    if (!*v4) {
      break;
    }
    uint64_t v1 = v17;
LABEL_11:
    uint64_t v6 = v2 + 1;
    int v3 = (std::string *)((char *)v3 + 32);
    if (v1) {
      BOOL v7 = v2 == 5;
    }
    else {
      BOOL v7 = 1;
    }
    ++v2;
    if (v7) {
      goto LABEL_20;
    }
  }
  size_t v5 = (uint64_t **)v4;
  std::string::operator=((std::string *)(v1 + 4), v3);
  v1[7] = v3[1].__r_.__value_.__l.__data_;
  std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__insert_node_at((uint64_t)v18, v5, v1);
  uint64_t v1 = v16;
  uint64_t v17 = v16;
  if (v16)
  {
    uint64_t v16 = std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::__detach_next((uint64_t)v16);
    goto LABEL_11;
  }
  uint64_t v6 = v2 + 1;
LABEL_20:
  std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100]((uint64_t)&v15);
  if (v6 != 6)
  {
LABEL_21:
    uint64_t v8 = 4 * v6;
    do
    {
      id v9 = &v19[v8];
      uint64_t v10 = std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__find_equal<std::string>(&v15, &v19[v8]);
      if (!*v10)
      {
        uint64_t v11 = (uint64_t **)v10;
        uint64_t v12 = (uint64_t *)operator new(0x40uLL);
        uint64_t v13 = (std::string *)(v12 + 4);
        if (SHIBYTE(v19[v8 + 2]) < 0)
        {
          std::string::__init_copy_ctor_external(v13, (const std::string::value_type *)v19[v8], v19[v8 + 1]);
        }
        else
        {
          *(_OWORD *)&v13->__r_.__value_.__l.__data_ = *(_OWORD *)v9;
          v12[6] = v9[2];
        }
        v12[7] = v19[v8 + 3];
        std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::__insert_node_at((uint64_t)v15, v11, v12);
      }
      v8 += 4;
    }
    while (v8 != 24);
  }
  for (uint64_t i = 0; i != -24; i -= 4)
  {
    if (SHIBYTE(v24[i + 2]) < 0) {
      operator delete((void *)v24[i]);
    }
  }
}

void sub_1B03000BC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, uint64_t a13, char a14)
{
  while (1)
  {
    if (*(v14 - 9) < 0) {
      operator delete(*((void **)v14 - 4));
    }
    v14 -= 32;
    if (v14 == &a14) {
      _Unwind_Resume(exception_object);
    }
  }
}

void *std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::__detach_next(uint64_t a1)
{
  uint64_t result = *(void **)(a1 + 16);
  if (result)
  {
    int v3 = (void *)*result;
    if (*result == a1)
    {
      *uint64_t result = 0;
      while (1)
      {
        size_t v4 = (void *)result[1];
        if (!v4) {
          break;
        }
        do
        {
          uint64_t result = v4;
          size_t v4 = (void *)*v4;
        }
        while (v4);
      }
    }
    else
    {
      for (result[1] = 0; v3; int v3 = (void *)result[1])
      {
        do
        {
          uint64_t result = v3;
          int v3 = (void *)*v3;
        }
        while (v3);
      }
    }
  }
  return result;
}

uint64_t std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::_DetachedTreeCache::~_DetachedTreeCache[abi:ne180100](uint64_t a1)
{
  std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::destroy(*(char **)(a1 + 16));
  uint64_t v2 = *(void *)(a1 + 8);
  if (v2)
  {
    uint64_t v3 = *(void *)(v2 + 16);
    if (v3)
    {
      do
      {
        uint64_t v2 = v3;
        uint64_t v3 = *(void *)(v3 + 16);
      }
      while (v3);
      *(void *)(a1 + 8) = v2;
    }
    std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::destroy((char *)v2);
  }
  return a1;
}

void std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::destroy(char *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::destroy(*(void *)a1);
    std::__tree<std::__value_type<std::string,long long>,std::__map_value_compare<std::string,std::__value_type<std::string,long long>,std::less<std::string>,true>,std::allocator<std::__value_type<std::string,long long>>>::destroy(*((void *)a1 + 1));
    if (a1[55] < 0) {
      operator delete(*((void **)a1 + 4));
    }
    operator delete(a1);
  }
}

uint64_t std::map<std::string,long long>::~map[abi:ne180100](uint64_t a1)
{
  return a1;
}

void ML3PurchaseHistoryImportItem::getStringValue(ML3DAAPImportItem *this@<X0>, ML3PurchaseHistoryImportItem *a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  size_t v5 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if ((int)a2 <= 100663303)
  {
    if (a2 != 50331654 && a2 != 50331657) {
      goto LABEL_12;
    }
    goto LABEL_10;
  }
  if (a2 == 100663324)
  {
LABEL_10:
    ML3PurchaseHistoryImportItem::_getStringFlavorValue((ML3PurchaseHistoryImportItem *)&__str, *((void *)this + 12), a2);
    std::string::operator=(v5, &__str);
    *(unsigned char *)(a3 + 8) = 1;
    if ((SHIBYTE(__str.__r_.__value_.__r.__words[2]) & 0x80000000) == 0) {
      return;
    }
    id v9 = (void *)__str.__r_.__value_.__r.__words[0];
    goto LABEL_23;
  }
  if (a2 != 100663304)
  {
LABEL_12:
    ML3DAAPImportItem::getStringValue(this, (uint64_t)a2, (uint64_t)&__str);
    *(unsigned char *)(a3 + 8) = __str.__r_.__value_.__s.__data_[8];
    std::string::operator=(v5, (const std::string *)&__str.__r_.__value_.__r.__words[2]);
    __str.__r_.__value_.__r.__words[0] = (std::string::size_type)&unk_1F08C3230;
    if ((v12 & 0x80000000) == 0) {
      return;
    }
    id v9 = (void *)__str.__r_.__value_.__r.__words[2];
    goto LABEL_23;
  }
  memset(&v13, 0, sizeof(v13));
  uint64_t v6 = *((void *)this + 12);
  if (v6)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, v6, 0x61655270u);
    std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
    std::string::size_type v8 = __str.__r_.__value_.__r.__words[0];
    if (__str.__r_.__value_.__r.__words[0])
    {
LABEL_18:
      std::string::basic_string[abi:ne180100](&__str, *(void **)(v8 + 48), *(void *)(v8 + 64));
      std::string v13 = __str;
      goto LABEL_19;
    }
  }
  else
  {
    std::string::size_type size = 0;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61655270u);
  std::string::size_type v10 = __str.__r_.__value_.__l.__size_;
  std::string::size_type v8 = __str.__r_.__value_.__r.__words[0];
  if (size) {
    std::__shared_weak_count::__release_shared[abi:ne180100](size);
  }
  std::string::size_type size = (std::__shared_weak_count *)v10;
  if (v8) {
    goto LABEL_18;
  }
LABEL_19:
  if (size) {
    std::__shared_weak_count::__release_shared[abi:ne180100](size);
  }
  std::string::operator=(v5, &v13);
  *(unsigned char *)(a3 + 8) = 1;
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    id v9 = (void *)v13.__r_.__value_.__r.__words[0];
LABEL_23:
    operator delete(v9);
  }
}

void sub_1B0300478(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (v26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v26);
  }
  *(void *)uint64_t v23 = v24;
  if (*(char *)(v23 + 39) < 0) {
    operator delete(*v25);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3PurchaseHistoryImportItem::isValid(ML3PurchaseHistoryImportItem *this)
{
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v7, *((void *)this + 8), 0x6D61766Cu);
  if (v7) {
    BOOL v2 = ML3CPP::Element::integerValue(v7) != 0;
  }
  else {
    BOOL v2 = 0;
  }
  IntegerCFArrayRef Value = ML3DAAPImportItem::getIntegerValue((ML3DAAPImportItem *)this, 33554466);
  int v4 = (*(uint64_t (**)(ML3PurchaseHistoryImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  if (IntegerValue) {
    unsigned int v5 = 1;
  }
  else {
    unsigned int v5 = v2;
  }
  if ((*(void *)&v4 & 0x10E4ALL) != 0) {
    return v5;
  }
  else {
    return 0;
  }
}

void sub_1B03005E4(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void ML3PurchaseHistoryImportItem::~ML3PurchaseHistoryImportItem(ML3DAAPImportItem *this)
{
  *(void *)this = &unk_1F08C5388;
  BOOL v2 = (std::__shared_weak_count *)*((void *)this + 13);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }
  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

{
  std::__shared_weak_count *v2;
  uint64_t vars8;

  *(void *)this = &unk_1F08C5388;
  BOOL v2 = (std::__shared_weak_count *)*((void *)this + 13);
  if (v2) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v2);
  }

  ML3DAAPImportItem::~ML3DAAPImportItem(this);
}

void ML3DAAPImportItem::_createImportItemValue(unsigned int a1@<W1>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  if (a1 >> 1 == 184549379) {
    operator new();
  }
  operator new();
}

void sub_1B03008A8(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t ML3DAAPPersonImportItem::ML3DAAPPersonImportItem(uint64_t a1, uint64_t a2, std::__shared_weak_count *a3)
{
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C3270;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = a3;
  if (a3)
  {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](a3);
  }
  *(void *)a1 = &unk_1F08C3F98;
  return a1;
}

uint64_t std::__shared_ptr_pointer<ML3DAAPChildImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPChildImportItem>,std::allocator<ML3DAAPChildImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_22ML3DAAPChildImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPChildImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPChildImportItem>,std::allocator<ML3DAAPChildImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPChildImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPChildImportItem>,std::allocator<ML3DAAPChildImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

uint64_t ML3DAAPImportItem::canInsertIntoPurchasedPlaylist(ML3DAAPImportItem *this)
{
  return 0;
}

void ML3DAAPImportItem::getImportItemArrayValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  a3[2] = 0;
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)v42, (uint64_t)this, a2);
  uint64_t v6 = *(void *)v42;
  if (!*(void *)v42) {
    goto LABEL_36;
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v40, *(uint64_t *)v42, 0x6D6C636Cu);
  uint64_t v7 = v40;
  if (v40)
  {
    std::string::size_type v8 = v41;
    if (v41) {
      atomic_fetch_add_explicit(&v41->__shared_owners_, 1uLL, memory_order_relaxed);
    }
    id v9 = v43;
    unsigned int v43 = v8;
    if (v9) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v9);
    }
    uint64_t v6 = v7;
  }
  else
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v44, v6, 0x6D72636Fu);
    if (v44)
    {
      int64_t v33 = ML3CPP::Element::integerValue(v44);
      if (v45) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v45);
      }
      if (v33 <= 0) {
        goto LABEL_34;
      }
    }
    else if (v45)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v45);
    }
  }
  unint64_t v37 = 0;
  uint64_t v38 = 0;
  BOOL v39 = 0;
  uint64_t v10 = *(void *)(v6 + 72);
  uint64_t v11 = *(void *)(v6 + 80);
  unint64_t v44 = (ML3CPP::Element *)&v37;
  LOBYTE(v45) = 0;
  uint64_t v12 = v11 - v10;
  if (v11 != v10)
  {
    if (v12 < 0) {
      std::vector<long long>::__throw_length_error[abi:ne180100]();
    }
    std::string v13 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<ML3ImportItem>>>(v12 >> 4);
    int v14 = v13;
    uint64_t v15 = 0;
    unint64_t v37 = v13;
    uint64_t v38 = v13;
    BOOL v39 = &v13[16 * v16];
    do
    {
      uint64_t v17 = &v13[v15];
      uint64_t v18 = v10 + v15;
      *(void *)uint64_t v17 = *(void *)(v10 + v15);
      uint64_t v19 = *(void *)(v10 + v15 + 8);
      *((void *)v17 + 1) = v19;
      if (v19) {
        atomic_fetch_add_explicit((atomic_ullong *volatile)(v19 + 8), 1uLL, memory_order_relaxed);
      }
      v15 += 16;
    }
    while (v18 + 16 != v11);
    uint64_t v38 = &v13[v15];
    if (&v13[v15] != v13)
    {
      do
      {
        uint64_t v20 = *(void *)v14;
        uint64_t v21 = (std::__shared_weak_count *)*((void *)v14 + 1);
        if (v21)
        {
          atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
          uint64_t v35 = v21;
          atomic_fetch_add_explicit(&v21->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        else
        {
          uint64_t v35 = 0;
        }
        uint64_t v34 = v20;
        (*(void (**)(std::__shared_count *__return_ptr, ML3DAAPImportItem *, uint64_t, uint64_t *))(*(void *)this + 216))(&v36, this, a2, &v34);
        uint64_t v22 = (std::__shared_count *)a3[1];
        unint64_t v23 = a3[2];
        if ((unint64_t)v22 >= v23)
        {
          uint64_t v24 = ((uint64_t)v22 - *a3) >> 4;
          unint64_t v25 = v24 + 1;
          if ((unint64_t)(v24 + 1) >> 60) {
            std::vector<long long>::__throw_length_error[abi:ne180100]();
          }
          uint64_t v26 = v23 - *a3;
          if (v26 >> 3 > v25) {
            unint64_t v25 = v26 >> 3;
          }
          if ((unint64_t)v26 >= 0x7FFFFFFFFFFFFFF0) {
            unint64_t v27 = 0xFFFFFFFFFFFFFFFLL;
          }
          else {
            unint64_t v27 = v25;
          }
          char v48 = a3 + 2;
          unint64_t v28 = (ML3CPP::Element *)std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<ML3ImportItem>>>(v27);
          uint64_t v29 = (std::__shared_weak_count *)((char *)v28 + 16 * v24);
          unint64_t v44 = v28;
          uint64_t v45 = v29;
          char v47 = (char *)v28 + 16 * v30;
          v29->std::__shared_count = v36;
          std::__shared_count v36 = (std::__shared_count)0;
          p_shared_weak_owners = &v29->__shared_weak_owners_;
          std::vector<std::shared_ptr<ML3ImportItem>>::__swap_out_circular_buffer(a3, &v44);
          uint64_t v31 = a3[1];
          std::__split_buffer<std::shared_ptr<ML3ImportItem>>::~__split_buffer((uint64_t)&v44);
          shared_owners = (std::__shared_weak_count *)v36.__shared_owners_;
          a3[1] = v31;
          if (shared_owners) {
            std::__shared_weak_count::__release_shared[abi:ne180100](shared_owners);
          }
        }
        else
        {
          std::__shared_count *v22 = v36;
          std::__shared_count v36 = (std::__shared_count)0;
          a3[1] = v22 + 1;
        }
        if (v35) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v35);
        }
        if (v21) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v21);
        }
        v14 += 16;
      }
      while (v14 != v38);
    }
  }
  unint64_t v44 = (ML3CPP::Element *)&v37;
  std::vector<std::shared_ptr<ML3CPP::Element>>::__destroy_vector::operator()[abi:ne180100]((void ***)&v44);
LABEL_34:
  if (v41) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v41);
  }
LABEL_36:
  if (v43) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v43);
  }
}

void sub_1B0300D3C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void **a13, uint64_t a14, uint64_t a15, uint64_t a16, std::__shared_weak_count *a17, uint64_t a18, std::__shared_weak_count *a19)
{
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  if (a19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a19);
  }
  std::vector<std::shared_ptr<ML3ImportItem>>::__destroy_vector::operator()[abi:ne180100](&a13);
  _Unwind_Resume(a1);
}

double ML3DAAPImportItem::_getChildElement(ML3DAAPImportItem *this, uint64_t a2, uint64_t a3)
{
  *(void *)this = 0;
  *((void *)this + 1) = 0;
  unsigned int v5 = ML3DAAPCodeForImportPropertyKey(a3);
  if (v5)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v7, *(void *)(a2 + 64), v5);
    double result = *(double *)&v7;
    *(_OWORD *)this = v7;
  }
  return result;
}

void std::vector<std::shared_ptr<ML3CPP::Element>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v1 = *a1;
  uint64_t v2 = (char *)**a1;
  if (v2)
  {
    int v4 = (char *)v1[1];
    unsigned int v5 = **a1;
    if (v4 != v2)
    {
      do
      {
        uint64_t v6 = (std::__shared_weak_count *)*((void *)v4 - 1);
        if (v6) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v6);
        }
        v4 -= 16;
      }
      while (v4 != v2);
      unsigned int v5 = **a1;
    }
    v1[1] = v2;
    operator delete(v5);
  }
}

void *std::__allocate_at_least[abi:ne180100]<std::allocator<std::shared_ptr<ML3ImportItem>>>(unint64_t a1)
{
  if (a1 >> 60) {
    std::__throw_bad_array_new_length[abi:ne180100]();
  }
  return operator new(16 * a1);
}

void *std::vector<std::shared_ptr<ML3ImportItem>>::__swap_out_circular_buffer(void *result, void *a2)
{
  uint64_t v3 = (void *)*result;
  uint64_t v2 = (void *)result[1];
  uint64_t v4 = a2[1];
  while (v2 != v3)
  {
    long long v5 = *((_OWORD *)v2 - 1);
    v2 -= 2;
    *(_OWORD *)(v4 - 16) = v5;
    v4 -= 16;
    void *v2 = 0;
    v2[1] = 0;
  }
  a2[1] = v4;
  uint64_t v6 = (void *)*result;
  *double result = v4;
  a2[1] = v6;
  uint64_t v7 = result[1];
  result[1] = a2[2];
  a2[2] = v7;
  uint64_t v8 = result[2];
  result[2] = a2[3];
  a2[3] = v8;
  *a2 = a2[1];
  return result;
}

uint64_t std::__split_buffer<std::shared_ptr<ML3ImportItem>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  while (v2 != v3)
  {
    *(void *)(a1 + 16) = v2 - 16;
    uint64_t v4 = *(std::__shared_weak_count **)(v2 - 8);
    if (v4)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      uint64_t v2 = *(void *)(a1 + 16);
    }
    else
    {
      v2 -= 16;
    }
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

void std::vector<std::shared_ptr<ML3ImportItem>>::__destroy_vector::operator()[abi:ne180100](void ***a1)
{
  uint64_t v2 = *a1;
  if (*v2)
  {
    std::vector<std::shared_ptr<ML3ImportItem>>::__clear[abi:ne180100]((uint64_t *)v2);
    uint64_t v3 = **a1;
    operator delete(v3);
  }
}

void std::vector<std::shared_ptr<ML3ImportItem>>::__clear[abi:ne180100](uint64_t *a1)
{
  uint64_t v2 = *a1;
  for (uint64_t i = a1[1]; i != v2; i -= 16)
  {
    uint64_t v4 = *(std::__shared_weak_count **)(i - 8);
    if (v4) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  a1[1] = v2;
}

void ML3DAAPImportItem::getImportItemValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  v6.n128_f64[0] = ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v12, (uint64_t)this, a2);
  if (!v12)
  {
    uint64_t v7 = v13;
    if (!v13) {
      return;
    }
    goto LABEL_7;
  }
  uint64_t v7 = v13;
  uint64_t v9 = v12;
  uint64_t v10 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  (*(void (**)(long long *__return_ptr, ML3DAAPImportItem *, uint64_t, uint64_t *, __n128))(*(void *)this
                                                                                                  + 216))(&v11, this, a2, &v9, v6);
  long long v8 = v11;
  long long v11 = 0uLL;
  *(_OWORD *)a3 = v8;
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (v7) {
LABEL_7:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
}

void sub_1B0301110(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3DAAPImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v4, (uint64_t)this, a2);
  uint64_t v2 = v4;
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  return v2 != 0;
}

void ML3DAAPImportItem::getDataValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v3, (uint64_t)this, a2);
  if (v3) {
    operator new();
  }
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
}

void sub_1B030121C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  MEMORY[0x1B3E93610](v12, 0x1091C40934DB768);
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  _Unwind_Resume(a1);
}

float ML3DAAPImportItem::getFloatValue(ML3DAAPImportItem *this, uint64_t a2)
{
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v4, (uint64_t)this, a2);
  if (v4) {
    float v2 = (float)(uint64_t)ML3CPP::Element::integerValue(v4);
  }
  else {
    float v2 = 0.0;
  }
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  return v2;
}

uint64_t ML3DAAPChildImportItem::getIntegerValue(ML3DAAPImportItem *this, uint64_t a2)
{
  int v2 = a2;
  uint64_t result = ML3DAAPImportItem::getIntegerValue(this, a2);
  if (v2 == 385875974) {
    return *((void *)this + 10);
  }
  return result;
}

uint64_t ML3DAAPImportItem::getIntegerValue(ML3DAAPImportItem *this, uint64_t a2)
{
  int v2 = a2;
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v6, (uint64_t)this, a2);
  if (v6)
  {
    int64_t v3 = ML3CPP::Element::integerValue(v6);
    uint64_t v4 = v3;
    if (v2 == 268435459 && v3) {
      uint64_t v4 = (uint64_t)((double)(v3 / 1000) + -978307200.0);
    }
  }
  else
  {
    uint64_t v4 = 0;
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
  return v4;
}

void ML3DAAPImportItem::getStringValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  ML3DAAPImportItem::_getChildElement((ML3DAAPImportItem *)&v7, (uint64_t)this, a2);
  if (v7)
  {
    std::string::basic_string[abi:ne180100](__p, *(void **)(v7 + 48), *(void *)(v7 + 64));
    *(void *)a3 = &unk_1F08C3230;
    *(unsigned char *)(a3 + 8) = 1;
    uint64_t v4 = (std::string *)(a3 + 16);
    if (SHIBYTE(v6) < 0)
    {
      std::string::__init_copy_ctor_external(v4, (const std::string::value_type *)__p[0], (std::string::size_type)__p[1]);
      if (SHIBYTE(v6) < 0) {
        operator delete(__p[0]);
      }
    }
    else
    {
      *(_OWORD *)&v4->__r_.__value_.__l.__data_ = *(_OWORD *)__p;
      *(void *)(a3 + 32) = v6;
    }
  }
  else
  {
    *(void *)a3 = &unk_1F08C3230;
    *(unsigned char *)(a3 + 8) = 0;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = 0;
    *(void *)(a3 + 16) = 0;
  }
  if (v8) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
}

void sub_1B0301474(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15, uint64_t a16, std::__shared_weak_count *a17)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (a17) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a17);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3DAAPImportItem::isValid(ML3DAAPImportItem *this)
{
  return 1;
}

void ML3DAAPChildImportItem::~ML3DAAPChildImportItem(ML3DAAPImportItem *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_23ML3DAAPPersonImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

id ML3DAAPPersonImportItem::getDeduplicationPredicates(ML3DAAPPersonImportItem *this)
{
  v8[1] = *MEMORY[0x1E4F143B8];
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v5);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v7, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    long long v5 = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v7 = __p;
  }
  uint64_t v1 = ML3CPPBridgeString((const UInt8 *)&v7, 1);
  int v2 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_id" equalToValue:v1];
  v8[0] = v2;
  int64_t v3 = [MEMORY[0x1E4F1C978] arrayWithObjects:v8 count:1];

  if (SHIBYTE(v7.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v7.__r_.__value_.__l.__data_);
  }

  return v3;
}

void sub_1B0301700(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPPersonImportItem::getDescription(ML3DAAPPersonImportItem *this)
{
  (*(void (**)(void *__return_ptr))(*(void *)this + 24))(v11);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v11[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v17 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3DAAPPersonImportItem *, uint64_t))(*(void *)this + 24))(v11, this, 369098754);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v11[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = __p;
  }
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v11);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v11, (uint64_t)"<ML3DAAPPersonImportItem ", 25);
  *(_DWORD *)((char *)&v11[1] + *(void *)(v11[0] - 24)) = *(_DWORD *)((unsigned char *)&v11[1] + *(void *)(v11[0] - 24)) & 0xFFFFFFB5 | 8;
  int v2 = (void *)std::ostream::operator<<();
  int64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" profile_id=", 12);
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v4 = &v17;
  }
  else {
    uint64_t v4 = (std::string *)v17.__r_.__value_.__r.__words[0];
  }
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v17.__r_.__value_.__l.__size_;
  }
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)v4, size);
  std::string v7 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)", handle=", 9);
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    long long v8 = &v16;
  }
  else {
    long long v8 = (std::string *)v16.__r_.__value_.__r.__words[0];
  }
  if ((v16.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v9 = HIBYTE(v16.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v9 = v16.__r_.__value_.__l.__size_;
  }
  uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)v8, v9);
  char v18 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)&v18, 1);
  std::stringbuf::str();
  v11[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v11 + *(void *)(v11[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v11[1] = MEMORY[0x1E4FBA470] + 16;
  if (v14 < 0) {
    operator delete(v13);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v15);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
}

void sub_1B0301AAC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 - 57) < 0) {
    operator delete(*(void **)(v17 - 80));
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPPersonImportItem::~ML3DAAPPersonImportItem(ML3DAAPImportItem *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

BOOL ML3DAAPTrackImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  return (a2 - 0x1000000) >> 25 <= 4 && ML3DAAPImportItem::hasValue(this, a2);
}

float ML3DAAPTrackImportItem::getFloatValue(ML3DAAPImportItem *this, uint64_t a2)
{
  unsigned int v2 = a2;
  float result = ML3DAAPImportItem::getFloatValue(this, a2);
  if (v2 >> 1 == 58720265) {
    return ML3CFAbsoluteTimeFromUInt32MacTime(result);
  }
  return result;
}

unint64_t ML3DAAPTrackImportItem::getIntegerValue(ML3DAAPTrackImportItem *this, uint64_t a2)
{
  int v2 = a2;
  unint64_t result = ML3DAAPImportItem::getIntegerValue((ML3DAAPImportItem *)this, a2);
  int64_t v5 = result;
  if (v2 > 83886085)
  {
    if (v2 > 100663311)
    {
      if (v2 <= 117440513)
      {
        if (v2 == 100663312)
        {
          if (!result)
          {
            uint64_t v6 = *((void *)this + 8);
            unsigned int v7 = 1634029124;
LABEL_50:
            ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v23, v6, v7);
            if (v23) {
              int64_t v5 = ML3CPP::Element::integerValue(v23);
            }
            else {
              int64_t v5 = 0;
            }
            if (v24) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v24);
            }
          }
          return v5;
        }
        if (v2 != 100663320)
        {
          if (v2 != 100663321) {
            return v5;
          }
          if (ML3DAAPImportItem::getIntegerValue((ML3DAAPImportItem *)this, 33554466))
          {
            IntegerCFArrayRef Value = ML3DAAPImportItem::getIntegerValue((ML3DAAPImportItem *)this, 167772190);
            if (IntegerValue) {
              int64_t v5 = IntegerValue;
            }
          }
        }
        goto LABEL_9;
      }
      if (v2 == 117440514) {
        return (result >> 15) & 1;
      }
      if (v2 == 117440515) {
        return result != 0;
      }
      if (v2 != 167772186) {
        return v5;
      }
    }
    else
    {
      char v8 = v2 - 6;
      if ((v2 - 83886086) > 0xE) {
        return v5;
      }
      if (((1 << v8) & 0x400E) != 0)
      {
LABEL_9:
        if (v5) {
          return (uint64_t)((double)v5 + -978307200.0);
        }
        else {
          return 0;
        }
      }
      if (((1 << v8) & 0x201) != 0) {
        return result != 0;
      }
      if (v2 != 83886099) {
        return v5;
      }
    }
    return result == 32;
  }
  if (v2 > 33554439)
  {
    switch(v2)
    {
      case 33554440:
        if (result) {
          return v5;
        }
        uint64_t v6 = *((void *)this + 8);
        unsigned int v7 = 1634956154;
        goto LABEL_50;
      case 33554441:
      case 33554442:
        return v5;
      case 33554443:
        goto LABEL_9;
      case 33554444:
        return _MLDMediaTypeFromDAAPMediaKind(result);
      case 33554445:
        if (result) {
          return v5;
        }
        goto LABEL_45;
      case 33554446:
LABEL_45:
        uint64_t v10 = (ML3DAAPTrackImportItem *)*((void *)this + 8);
        return ML3DAAPTrackImportItem::_getItemRatingLevel(v10);
      case 33554447:
        return result != 0;
      default:
        if (v2 != 33554458)
        {
          if (v2 == 33554466 && !result)
          {
            return ML3DAAPImportItem::getIntegerValue((ML3DAAPImportItem *)this, 167772191);
          }
          return v5;
        }
        (*(void (**)(ML3CPP::Element **__return_ptr, ML3DAAPTrackImportItem *, uint64_t))(*(void *)this
                                                                                                  + 24))(&v23, this, 50331657);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(&v26, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          unint64_t v23 = (ML3CPP::Element *)&unk_1F08C3230;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          std::string v26 = __p;
        }
        int v11 = (*(uint64_t (**)(ML3DAAPTrackImportItem *, uint64_t))(*(void *)this + 32))(this, 50331651);
        int v12 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
        if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0)
        {
          if (v26.__r_.__value_.__l.__size_ != 3) {
            goto LABEL_66;
          }
          std::string v13 = (std::string *)v26.__r_.__value_.__r.__words[0];
        }
        else
        {
          if (HIBYTE(v26.__r_.__value_.__r.__words[2]) != 3) {
            goto LABEL_66;
          }
          std::string v13 = &v26;
        }
        int data_low = LOWORD(v13->__r_.__value_.__l.__data_);
        int v15 = v13->__r_.__value_.__s.__data_[2];
        if (data_low == 13421 && v15 == 112)
        {
          int64_t v5 = 13;
          goto LABEL_99;
        }
LABEL_66:
        if (v11 == 1634492771)
        {
          int64_t v5 = 26;
        }
        else if (v11 == 1836069985)
        {
          int v18 = (*(uint64_t (**)(ML3DAAPTrackImportItem *, uint64_t))(*(void *)this + 32))(this, 100663307);
          uint64_t v19 = 12;
          if (v18 == 2) {
            uint64_t v19 = 15;
          }
          if (v18 == 1) {
            int64_t v5 = 14;
          }
          else {
            int64_t v5 = v19;
          }
        }
        else if (v11 == 1836082535 {
               && (*(unsigned int (**)(ML3DAAPTrackImportItem *, uint64_t))(*(void *)this + 32))(this, 50331652) == 3)
        }
        {
          int64_t v5 = 42;
        }
        else
        {
          if ((v12 & 0x80) != 0)
          {
            if (v26.__r_.__value_.__l.__size_ != 3)
            {
              int64_t v5 = 0;
LABEL_100:
              operator delete(v26.__r_.__value_.__l.__data_);
              return v5;
            }
            uint64_t v17 = (std::string *)v26.__r_.__value_.__r.__words[0];
          }
          else
          {
            if (v12 != 3) {
              return 0;
            }
            uint64_t v17 = &v26;
          }
          int v20 = LOWORD(v17->__r_.__value_.__l.__data_);
          int v21 = v17->__r_.__value_.__s.__data_[2];
          if (v20 == 13421 && v21 == 118)
          {
            ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v23, *((void *)this + 8), 0x61654D6Bu);
            if (v23 && (ML3CPP::Element::integerValue(v23) & 0x20) != 0) {
              int64_t v5 = 5;
            }
            else {
              int64_t v5 = 3;
            }
            if (v24) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v24);
            }
          }
          else
          {
            int64_t v5 = 0;
          }
        }
LABEL_99:
        if ((v12 & 0x80) == 0) {
          return v5;
        }
        goto LABEL_100;
    }
  }
  if (v2 > 16777241)
  {
    if (v2 != 16777242 && v2 != 16777246)
    {
      if (v2 != 16777247) {
        return v5;
      }
      goto LABEL_9;
    }
    return result != 0;
  }
  if (v2 == 16777217) {
    return _MLDMediaTypeFromDAAPMediaKind(result);
  }
  if (v2 != 16777237) {
    return v5;
  }
  if (result <= 1) {
    return 1;
  }
  return result;
}

void sub_1B03021CC(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, __int16 a15, char a16, char a17, void *__p, uint64_t a19, int a20,__int16 a21,char a22,char a23)
{
  if (v23 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

uint64_t _MLDMediaTypeFromDAAPMediaKind(unsigned int a1)
{
  unsigned int v1 = (a1 >> 2) & 2 | (8 * (a1 & 1)) | ((int)(a1 << 26) >> 31) & 0x408 | ((a1 & 2) << 10) | (8 * a1) & 0x2200 | a1 & 4;
  if ((a1 & 2) != 0) {
    int v2 = 4096;
  }
  else {
    int v2 = 32;
  }
  if ((~v1 & 0x804) == 0) {
    unsigned int v1 = (a1 >> 2) & 2 | (8 * (a1 & 1)) & 0xE | ((int)(a1 << 26) >> 31) & 0x408 | ((a1 & 2) << 10) & 0x260E | (8 * a1) & 0x2200 | a1 & 4 | 0x100;
  }
  if ((a1 & 0x200000) != 0) {
    unsigned int v1 = v1 & 0xFFFFFEFB | v2;
  }
  if ((a1 & 0x400000) != 0) {
    unsigned int v1 = 0x10000;
  }
  if ((a1 & 0x10000) != 0) {
    return 64;
  }
  else {
    return v1;
  }
}

uint64_t ML3DAAPTrackImportItem::_getItemRatingLevel(ML3DAAPTrackImportItem *this)
{
  __p[0] = 0;
  __p[1] = 0;
  uint64_t v13 = 0;
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v10, (uint64_t)this, 0x61654352u);
  if (!v10) {
    goto LABEL_6;
  }
  std::string::basic_string[abi:ne180100](&__dst, *(void **)(v10 + 48), *(void *)(v10 + 64));
  *(_OWORD *)std::string __p = __dst;
  uint64_t v13 = v9;
  uint64_t v1 = HIBYTE(v9);
  if (v9 < 0) {
    uint64_t v1 = *((void *)&__dst + 1);
  }
  if (v1)
  {
    int v2 = [MLContentRating alloc];
    int64_t v3 = ML3CPPBridgeString((const UInt8 *)__p, 1);
    uint64_t v4 = [(MLContentRating *)v2 initWithStringRepresentation:v3];

    int64_t v5 = [(MLContentRating *)v4 ratingRank];
    uint64_t v6 = [v5 longLongValue];
  }
  else
  {
LABEL_6:
    uint64_t v6 = 0;
  }
  if (v11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v11);
  }
  if (SHIBYTE(v13) < 0) {
    operator delete(__p[0]);
  }
  return v6;
}

void sub_1B03023E4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14, void *__p, uint64_t a16, int a17, __int16 a18, char a19, char a20)
{
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  if (a20 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(a1);
}

void ML3DAAPTrackImportItem::~ML3DAAPTrackImportItem(ML3DAAPImportItem *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem(this);

  JUMPOUT(0x1B3E93610);
}

id ML3DAAPDeleteImportItem::getDeduplicationPredicates(ML3DAAPDeleteImportItem *this)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  int v2 = ML3TrackRulesIdentityPropertyForSource(*((unsigned int *)this + 18));
  int64_t v3 = +[ML3ComparisonPredicate predicateWithProperty:v2 equalToInt64:*((void *)this + 8)];
  v6[0] = v3;
  uint64_t v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];

  return v4;
}

void sub_1B0302540(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t ML3DAAPDeleteImportItem::getDescription(ML3DAAPDeleteImportItem *this)
{
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v5);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)"<ML3DAAPDeleteImportItem ", 25);
  *(_DWORD *)((char *)&v5[1] + *(void *)(v5[0] - 24)) = *(_DWORD *)((unsigned char *)&v5[1] + *(void *)(v5[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v1 = (void *)std::ostream::operator<<();
  int v2 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v1, (uint64_t)" sourceItemId=", 14);
  *(_DWORD *)((char *)v2 + *(void *)(*v2 - 24) + 8) = *(_DWORD *)((unsigned char *)v2 + *(void *)(*v2 - 24) + 8) & 0xFFFFFFB5 | 2;
  int64_t v3 = (void *)std::ostream::operator<<();
  char v8 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v3, (uint64_t)&v8, 1);
  std::stringbuf::str();
  v5[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v5 + *(void *)(v5[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v5[1] = MEMORY[0x1E4FBA470] + 16;
  if (v6 < 0) {
    operator delete((void *)v5[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  return MEMORY[0x1B3E935B0](&v7);
}

void sub_1B0302734(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void ML3DAAPDeleteImportItem::~ML3DAAPDeleteImportItem(ML3DAAPDeleteImportItem *this)
{
  *(void *)this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)this + 24);

  JUMPOUT(0x1B3E93610);
}

{
  *(void *)this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)this + 24);
}

void ML3DAAPContainerImportItem::_createImportItemValue(unsigned int a1@<W1>, uint64_t a2@<X2>, void *a3@<X8>)
{
  *a3 = 0;
  a3[1] = 0;
  if (a1 == 218103812) {
    operator new();
  }
  uint64_t v3 = *(void *)(a2 + 8);
  if (v3) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v3 + 8), 1uLL, memory_order_relaxed);
  }
  ML3DAAPImportItem::_createImportItemValue(a1, &v4);
}

void sub_1B030291C(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B0302934()
{
  (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  if (!v0) {
    JUMPOUT(0x1B030292CLL);
  }
  JUMPOUT(0x1B0302924);
}

uint64_t ML3DAAPTrackImportItem::ML3DAAPTrackImportItem(uint64_t a1, uint64_t a2, std::__shared_weak_count *a3)
{
  if (a3) {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C3270;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = a2;
  *(void *)(a1 + 72) = a3;
  if (a3)
  {
    atomic_fetch_add_explicit(&a3->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](a3);
  }
  *(void *)a1 = &unk_1F08C3B88;
  return a1;
}

uint64_t std::__shared_ptr_pointer<ML3DAAPTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPTrackImportItem>,std::allocator<ML3DAAPTrackImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_22ML3DAAPTrackImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPTrackImportItem>,std::allocator<ML3DAAPTrackImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3DAAPTrackImportItem>,std::allocator<ML3DAAPTrackImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

id ML3DAAPContainerImportItem::getDeduplicationPredicates(ML3DAAPContainerImportItem *this)
{
  int v2 = [MEMORY[0x1E4F1CA48] array];
  uint64_t v3 = (*(uint64_t (**)(ML3DAAPContainerImportItem *, uint64_t))(*(void *)this + 32))(this, 184549408);
  if (v3)
  {
    long long v4 = +[ML3ComparisonPredicate predicateWithProperty:@"store_cloud_id" equalToInt64:v3];
    [v2 addObject:v4];
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, *((void *)this + 8), 0x616A5069u);
  if (v8)
  {
    unint64_t v5 = ML3CPP::Element::integerValue(v8);
    if (v5)
    {
      char v6 = +[ML3ComparisonPredicate predicateWithProperty:@"store_cloud_id" equalToInt64:v5];
      [v2 addObject:v6];
    }
  }
  if (v9) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v9);
  }

  return v2;
}

void sub_1B0302BD8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }

  _Unwind_Resume(a1);
}

void ML3DAAPContainerImportItem::getDescription(ML3DAAPContainerImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v11);
  (*(void (**)(ML3DAAPContainerImportItem *, uint64_t))(*(void *)this + 32))(this, 184549408);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v8);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v8, (uint64_t)"<ML3DAAPContainerImportItem ", 28);
  *(_DWORD *)((char *)&v8[1] + *(void *)(v8[0] - 24)) = *(_DWORD *)((unsigned char *)&v8[1] + *(void *)(v8[0] - 24)) & 0xFFFFFFB5 | 8;
  int v2 = (void *)std::ostream::operator<<();
  uint64_t v3 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" store_cloud_id=", 16);
  *(_DWORD *)((char *)v3 + *(void *)(*v3 - 24) + 8) = *(_DWORD *)((unsigned char *)v3 + *(void *)(*v3 - 24) + 8) & 0xFFFFFFB5 | 2;
  long long v4 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)", name=", 7);
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&__p, v12.__r_.__value_.__l.__data_, v12.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v12;
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)p_p, size);
  char v13 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)&v13, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str();
  v8[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v8 + *(void *)(v8[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v8[1] = MEMORY[0x1E4FBA470] + 16;
  if (v9 < 0) {
    operator delete((void *)v8[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v10);
  int v11 = &unk_1F08C3230;
  if (SHIBYTE(v12.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v12.__r_.__value_.__l.__data_);
  }
}

void sub_1B0302EFC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  *(void *)(v15 - 96) = &unk_1F08C3230;
  if (*(char *)(v15 - 57) < 0) {
    operator delete(*(void **)(v15 - 80));
  }
  _Unwind_Resume(a1);
}

uint64_t ML3DAAPContainerImportItem::getPlaylistTrackPersonIdentifiers@<X0>(ML3DAAPContainerImportItem *this@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = 0;
  a2[2] = 0;
  return std::vector<std::unordered_set<std::string>>::__init_with_size[abi:ne180100]<std::unordered_set<std::string>*,std::unordered_set<std::string>*>((uint64_t)a2, *((void *)this + 32), *((void *)this + 33), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)this + 33) - *((void *)this + 32)) >> 3));
}

BOOL ML3DAAPContainerImportItem::hasValue(ML3DAAPImportItem *this, uint64_t a2)
{
  if ((a2 - 184549376) >> 24 > 2) {
    return 0;
  }
  int v2 = a2;
  hasCFArrayRef Value = ML3DAAPImportItem::hasValue(this, a2);
  if (v2 <= 184549429)
  {
    BOOL result = 1;
    switch(v2)
    {
      case 184549383:
        uint64_t v10 = *((void *)this + 8) + 96;
        if (std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v10, 0x61655073u))
        {
          return 1;
        }
        uint64_t v7 = v10;
        unsigned int v8 = 1634029682;
        break;
      case 184549388:
        if (*((_DWORD *)this + 60) == 1) {
          return result;
        }
        uint64_t v7 = *((void *)this + 8) + 96;
        unsigned int v8 = 1634357317;
        goto LABEL_37;
      case 184549396:
      case 184549398:
      case 184549399:
      case 184549401:
      case 184549402:
      case 184549403:
      case 184549404:
      case 184549405:
      case 184549406:
        goto LABEL_4;
      case 184549397:
        return *((_DWORD *)this + 60) == 4;
      case 184549400:
        if (*((_DWORD *)this + 60) == 3) {
          return result;
        }
LABEL_4:
        BOOL v6 = *((unsigned char *)this + 200) == 0;
        return !v6;
      case 184549407:
        if ((*((_DWORD *)this + 60) | 8) != 0xA) {
          return 0;
        }
        uint64_t v11 = *((void *)this + 26);
        goto LABEL_28;
      case 184549413:
        return result;
      default:
        return hasValue;
    }
    goto LABEL_37;
  }
  if (v2 > 201326592)
  {
    if (v2 > 218103812)
    {
      if (v2 == 218103813)
      {
        uint64_t v7 = *((void *)this + 8) + 96;
        unsigned int v8 = 1634353516;
        goto LABEL_37;
      }
      if (v2 == 218103814)
      {
        uint64_t v7 = *((void *)this + 8) + 96;
        unsigned int v8 = 1634357356;
        goto LABEL_37;
      }
    }
    else
    {
      if (v2 == 201326593)
      {
        uint64_t v11 = *((void *)this + 31);
LABEL_28:
        BOOL v6 = v11 == 0;
        return !v6;
      }
      if (v2 == 218103812)
      {
        uint64_t v7 = *((void *)this + 8) + 96;
        unsigned int v8 = 1634759535;
LABEL_37:
        BOOL v6 = std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v7, v8) == 0;
        return !v6;
      }
    }
    return hasValue;
  }
  switch(v2)
  {
    case 184549430:
      BOOL v9 = *((_DWORD *)this + 60) == 7;
      break;
    case 184549431:
      BOOL v9 = *((_DWORD *)this + 60) == 8;
      break;
    case 184549446:
      BOOL v9 = *((_DWORD *)this + 60) == 9;
      break;
    default:
      return hasValue;
  }
  return v9;
}

void ML3DAAPContainerImportItem::getDataValue(ML3DAAPImportItem *this@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  int v3 = a2;
  ML3DAAPImportItem::getDataValue(this, a2, a3);
  if (v3 == 184549407 && (*((_DWORD *)this + 60) | 8) == 0xA)
  {
    if (*((void *)this + 26)) {
      operator new();
    }
  }
}

void sub_1B0303330(_Unwind_Exception *exception_object)
{
  int v3 = *(std::__shared_weak_count **)(v1 + 8);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  _Unwind_Resume(exception_object);
}

uint64_t ML3DAAPContainerImportItem::getIntegerValue(ML3DAAPImportItem *this, uint64_t a2)
{
  int v2 = a2;
  uint64_t result = ML3DAAPImportItem::getIntegerValue(this, a2);
  uint64_t v5 = result;
  if (v2 > 184549445)
  {
    if (v2 > 184549459)
    {
      switch(v2)
      {
        case 184549460:
          goto LABEL_11;
        case 201326593:
          return *((void *)this + 31);
        case 184549466:
LABEL_11:
          if (v5) {
            return (uint64_t)((double)v5 + -978307200.0);
          }
          else {
            return 0;
          }
      }
    }
    else if (v2 == 184549446)
    {
      return *((_DWORD *)this + 60) == 9;
    }
    else
    {
      return v5;
    }
  }
  else
  {
    uint64_t result = 2;
    switch(v2)
    {
      case 184549379:
        unsigned int v6 = *((_DWORD *)this + 60) - 5;
        if (v6 >= 6) {
          return 0;
        }
        else {
          return *(void *)&asc_1B04DACF8[8 * v6];
        }
      case 184549380:
      case 184549381:
      case 184549382:
        goto LABEL_11;
      case 184549388:
        if (*((_DWORD *)this + 60) != 1
          || std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, 0x616A5045u))
        {
          return v5;
        }
        goto LABEL_35;
      case 184549395:
        return *((_DWORD *)this + 60) == 5;
      case 184549396:
        uint64_t v8 = *((unsigned int *)this + 26);
        goto LABEL_28;
      case 184549397:
        return *((_DWORD *)this + 60) == 4;
      case 184549398:
        return *((unsigned __int8 *)this + 88);
      case 184549399:
        return *((unsigned __int8 *)this + 89);
      case 184549400:
        if (*((_DWORD *)this + 60) == 3) {
          goto LABEL_35;
        }
        uint64_t result = *((unsigned char *)this + 102) != 0;
        break;
      case 184549401:
        return *((unsigned __int8 *)this + 100);
      case 184549402:
        return *((unsigned __int8 *)this + 90);
      case 184549403:
        return *((unsigned __int8 *)this + 91);
      case 184549404:
        uint64_t v8 = *((unsigned int *)this + 23);
LABEL_28:
        uint64_t result = TrackOrderForITDBTrackOrder(v8);
        break;
      case 184549405:
        uint64_t result = *((unsigned int *)this + 24);
        break;
      case 184549406:
        uint64_t result = *((unsigned __int8 *)this + 101);
        break;
      case 184549409:
        if ((v5 - 1) > 0x4B) {
LABEL_35:
        }
          uint64_t result = 1;
        else {
          uint64_t result = dword_1B04DA460[(v5 - 1)];
        }
        break;
      case 184549413:
        return result;
      case 184549430:
        return *((_DWORD *)this + 60) == 7;
      case 184549431:
        return *((_DWORD *)this + 60) == 8;
      default:
        return v5;
    }
  }
  return result;
}

uint64_t ML3DAAPContainerImportItem::isValid(ML3DAAPImportItem *this)
{
  uint64_t v6 = *MEMORY[0x1E4F143B8];
  IntegerCFArrayRef Value = ML3DAAPImportItem::getIntegerValue(this, 184549432);
  if (unint64_t)(IntegerValue - 1) < 0xA && ((0x2FFu >> (IntegerValue - 1))) {
    return 1;
  }
  int v2 = os_log_create("com.apple.amp.medialibrary", "Default");
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR))
  {
    int v4 = 134217984;
    uint64_t v5 = IntegerValue;
    _os_log_impl(&dword_1B022D000, v2, OS_LOG_TYPE_ERROR, "got unknown container type %lld", (uint8_t *)&v4, 0xCu);
  }

  return 0;
}

id ML3DAAPContainerDeleteImportItem::getDeduplicationPredicates(ML3DAAPContainerDeleteImportItem *this)
{
  v6[1] = *MEMORY[0x1E4F143B8];
  int v2 = ML3ContainerRulesIdentityPropertyForSource(*((unsigned int *)this + 18));
  int v3 = +[ML3ComparisonPredicate predicateWithProperty:v2 equalToInt64:*((void *)this + 8)];
  v6[0] = v3;
  int v4 = [MEMORY[0x1E4F1C978] arrayWithObjects:v6 count:1];

  return v4;
}

void sub_1B0303854(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void ML3DAAPContainerDeleteImportItem::~ML3DAAPContainerDeleteImportItem(ML3DAAPContainerDeleteImportItem *this)
{
  *(void *)this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)this + 24);

  JUMPOUT(0x1B3E93610);
}

{
  *(void *)this = off_1F08C3148;
  std::__hash_table<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::__unordered_map_hasher<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::hash<unsigned int>,std::equal_to<unsigned int>,true>,std::__unordered_map_equal<unsigned int,std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>,std::equal_to<unsigned int>,std::hash<unsigned int>,true>,std::allocator<std::__hash_value_type<unsigned int,ML3ImportValue<std::string>>>>::~__hash_table((uint64_t)this + 24);
}

uint64_t ML3DAAPAlbumImportItem::propertyKeyForSortPropertyKey(ML3DAAPAlbumImportItem *this, int a2)
{
  if (a2 == 285212674) {
    return 285212673;
  }
  else {
    return 0;
  }
}

uint64_t ML3DAAPAlbumImportItem::sortPropertyKeyForPropertyKey(ML3DAAPAlbumImportItem *this, int a2)
{
  if (a2 == 285212673) {
    return 285212674;
  }
  else {
    return 0;
  }
}

id ML3DAAPAlbumImportItem::getDeduplicationPredicates(ML3DAAPAlbumImportItem *this)
{
  v46[5] = *MEMORY[0x1E4F143B8];
  id v37 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  uint64_t v2 = (*(uint64_t (**)(ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  uint64_t v3 = (*(uint64_t (**)(ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212683);
  (*(void (**)(void *__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212673);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v42, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v42 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212699);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v39, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v39 = __p;
  }
  (*(void (**)(void *__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(v40, this, 285212682);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v38, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v40[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v38 = __p;
  }
  std::string::size_type size = HIBYTE(v42.__r_.__value_.__r.__words[2]);
  if ((v42.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type size = v42.__r_.__value_.__l.__size_;
  }
  if (size)
  {
    uint64_t v5 = (void *)*((void *)this + 10);
    uint64_t v6 = ML3CPPBridgeString((const UInt8 *)&v42, 1);
    uint64_t v7 = [v5 groupingKeyForString:v6];
  }
  else
  {
    uint64_t v7 = 0;
  }
  std::string::size_type v8 = HIBYTE(v39.__r_.__value_.__r.__words[2]);
  if ((v39.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v8 = v39.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    BOOL v9 = (void *)*((void *)this + 10);
    uint64_t v10 = ML3CPPBridgeString((const UInt8 *)&v39, 1);
    uint64_t v11 = [v9 groupingKeyForString:v10];

    if (!v2) {
      goto LABEL_29;
    }
  }
  else
  {
    uint64_t v11 = 0;
    if (!v2) {
      goto LABEL_29;
    }
  }
  if ([v7 length] && objc_msgSend(v11, "length"))
  {
    std::string v12 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v2];
    v46[0] = v12;
    char v13 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1];
    v46[1] = v13;
    char v14 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v11];
    v46[2] = v14;
    uint64_t v15 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v46[3] = v15;
    std::string v16 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v46[4] = v16;
    uint64_t v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v46 count:5];
    int v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];

    [v37 addObject:v18];
  }
  else
  {
    uint64_t v19 = +[ML3ComparisonPredicate predicateWithProperty:@"store_id" equalToInt64:v2];
    v45[0] = v19;
    int v20 = +[ML3ComparisonPredicate predicateWithProperty:@"cloud_library_id" value:&stru_1F08D4D70 comparison:1];
    v45[1] = v20;
    int v21 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v45[2] = v21;
    uint64_t v22 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
    v45[3] = v22;
    char v23 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v45[4] = v23;
    uint64_t v24 = [MEMORY[0x1E4F1C978] arrayWithObjects:v45 count:5];
    int v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v24];

    [v37 addObject:v18];
  }

LABEL_29:
  if ([v7 length] && objc_msgSend(v11, "length"))
  {
    unint64_t v25 = +[ML3ComparisonPredicate predicateWithProperty:@"album_artist.grouping_key" equalToValue:v11];
    v44[0] = v25;
    std::string v26 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v44[1] = v26;
    unint64_t v27 = +[ML3ComparisonPredicate predicateWithProperty:@"season_number" equalToInt64:v3];
    v44[2] = v27;
    unint64_t v28 = [MEMORY[0x1E4F1C978] arrayWithObjects:v44 count:3];
    uint64_t v29 = +[ML3CompoundPredicate predicateMatchingPredicates:v28];

    [v37 addObject:v29];
  }
  if ([v7 length])
  {
    if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0)
    {
      if (!v38.__r_.__value_.__l.__size_) {
        goto LABEL_39;
      }
      uint64_t v30 = (std::string *)v38.__r_.__value_.__r.__words[0];
    }
    else
    {
      if (!*((unsigned char *)&v38.__r_.__value_.__s + 23)) {
        goto LABEL_39;
      }
      uint64_t v30 = &v38;
    }
    uint64_t v31 = [NSString stringWithUTF8String:v30];
    uint64_t v32 = +[ML3ComparisonPredicate predicateWithProperty:@"feed_url" equalToValue:v31];
    v43[0] = v32;
    int64_t v33 = +[ML3ComparisonPredicate predicateWithProperty:@"grouping_key" equalToValue:v7];
    v43[1] = v33;
    uint64_t v34 = [MEMORY[0x1E4F1C978] arrayWithObjects:v43 count:2];
    uint64_t v35 = +[ML3CompoundPredicate predicateMatchingPredicates:v34];

    [v37 addObject:v35];
  }
LABEL_39:

  if (SHIBYTE(v38.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v38.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v39.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v39.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v42.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v42.__r_.__value_.__l.__data_);
  }

  return v37;
}

void sub_1B03040F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *a10, void *__p, uint64_t a12, int a13, __int16 a14, char a15, char a16, uint64_t a17, void *a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31,void *a32,uint64_t a33,int a34,__int16 a35,char a36,char a37)
{
  if (a16 < 0) {
    operator delete(__p);
  }
  if (a23 < 0) {
    operator delete(a18);
  }
  if (a37 < 0) {
    operator delete(a32);
  }

  _Unwind_Resume(a1);
}

void ML3DAAPAlbumImportItem::getDescription(ML3DAAPAlbumImportItem *this)
{
  (*(void (**)(void **__return_ptr))(*(void *)this + 24))(&v10);
  (*(void (**)(ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 32))(this, 285212696);
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v7);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v7, (uint64_t)"<ML3DAAPAlbumImportItem ", 24);
  *(_DWORD *)((char *)&v7[1] + *(void *)(v7[0] - 24)) = *(_DWORD *)((unsigned char *)&v7[1] + *(void *)(v7[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v2 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" name=", 6);
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&__p, v11.__r_.__value_.__l.__data_, v11.__r_.__value_.__l.__size_);
  }
  else {
    std::string __p = v11;
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    p_p = &__p;
  }
  else {
    p_p = (std::string *)__p.__r_.__value_.__r.__words[0];
  }
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = __p.__r_.__value_.__l.__size_;
  }
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)p_p, size);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v2, (uint64_t)" storeID=", 9);
  *(_DWORD *)((char *)v2 + *(void *)(*v2 - 24) + 8) = *(_DWORD *)((unsigned char *)v2 + *(void *)(*v2 - 24) + 8) & 0xFFFFFFB5 | 2;
  uint64_t v5 = (void *)std::ostream::operator<<();
  char v12 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)&v12, 1);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }
  std::stringbuf::str();
  v7[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v7 + *(void *)(v7[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v7[1] = MEMORY[0x1E4FBA470] + 16;
  if (v8 < 0) {
    operator delete((void *)v7[9]);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v9);
  uint64_t v10 = &unk_1F08C3230;
  if (SHIBYTE(v11.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v11.__r_.__value_.__l.__data_);
  }
}

void sub_1B0304678(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, void *__p, uint64_t a10, int a11, __int16 a12, char a13, char a14, char a15)
{
  std::ostringstream::~ostringstream((uint64_t)&a15);
  *(void *)(v15 - 96) = &unk_1F08C3230;
  if (*(char *)(v15 - 57) < 0) {
    operator delete(*(void **)(v15 - 80));
  }
  _Unwind_Resume(a1);
}

BOOL ML3DAAPAlbumImportItem::hasValue(ML3DAAPAlbumImportItem *this, int a2)
{
  BOOL v3 = 0;
  if (a2 > 285212672)
  {
    switch(a2)
    {
      case 285212673:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v5 = 24940;
        goto LABEL_9;
      case 285212674:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v5 = 29557;
LABEL_9:
        unsigned int v6 = v5 | 0x61730000;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212679:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634954354;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212680:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634361708;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212681:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634952047;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212682:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634955381;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212683:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634030421;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212684:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634957682;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212688:
        (*(void (**)(void *__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(v15, this, 33554462);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(&v17, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          v15[0] = &unk_1F08C3230;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          std::string v17 = __p;
        }
        (*(void (**)(void *__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(v15, this, 33554451);
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
        {
          std::string::__init_copy_ctor_external(&v14, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
          v15[0] = &unk_1F08C3230;
          if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__p.__r_.__value_.__l.__data_);
          }
        }
        else
        {
          std::string v14 = __p;
        }
        int v10 = (*(uint64_t (**)(ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 56))(this, 16777248);
        int v11 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
        std::string::size_type size = v17.__r_.__value_.__l.__size_;
        if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
          std::string::size_type size = HIBYTE(v17.__r_.__value_.__r.__words[2]);
        }
        BOOL v3 = size != 0;
        if (!size && ((v10 ^ 1) & 1) == 0)
        {
          if ((v14.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
            std::string::size_type v13 = HIBYTE(v14.__r_.__value_.__r.__words[2]);
          }
          else {
            std::string::size_type v13 = v14.__r_.__value_.__l.__size_;
          }
          BOOL v3 = v13 != 0;
        }
        if ((*((unsigned char *)&v14.__r_.__value_.__s + 23) & 0x80) != 0) {
          operator delete(v14.__r_.__value_.__l.__data_);
        }
        if (v11 < 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        return v3;
      case 285212690:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned int v6 = 1634951539;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212693:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v7 = 24901;
        goto LABEL_24;
      case 285212695:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v8 = 27762;
        goto LABEL_22;
      case 285212696:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v8 = 20553;
LABEL_22:
        unsigned int v6 = v8 | 0x61650000;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      case 285212697:
        uint64_t v4 = *((void *)this + 8) + 96;
        unsigned __int16 v7 = 16745;
LABEL_24:
        unsigned int v6 = v7 | 0x616A0000;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
      default:
        return v3;
    }
  }
  switch(a2)
  {
    case 16777248:
      uint64_t v4 = *((void *)this + 8) + 96;
      unsigned int v6 = 1634362177;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
    case 33554451:
      uint64_t v4 = *((void *)this + 8) + 96;
      unsigned int v6 = 1634169456;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
    case 33554462:
      uint64_t v4 = *((void *)this + 8) + 96;
      unsigned int v6 = 1635218027;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(v4, v6) != 0;
  }
  return v3;
}

void sub_1B0304A98(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 - 25) < 0) {
    operator delete(*(void **)(v22 - 48));
  }
  _Unwind_Resume(exception_object);
}

unint64_t ML3DAAPAlbumImportItem::getIntegerValue(ML3DAAPAlbumImportItem *this, int a2)
{
  unint64_t v3 = 0;
  if (a2 <= 285212678)
  {
    if (a2 == 16777217)
    {
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v16, *((void *)this + 8), 0x61654D6Bu);
      unsigned int v6 = v17;
      if (v16)
      {
        unsigned int v7 = ML3CPP::Element::integerValue(v16);
        unint64_t v3 = _MLDMediaTypeFromDAAPMediaKind(v7);
        goto LABEL_20;
      }
    }
    else
    {
      if (a2 != 16777248) {
        return v3;
      }
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634362177;
LABEL_14:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v16, v4, v5);
      unsigned int v6 = v17;
      if (v16)
      {
        unint64_t v3 = ML3CPP::Element::integerValue(v16);
        goto LABEL_20;
      }
    }
    unint64_t v3 = 0;
LABEL_20:
    if (v6) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v6);
    }
    return v3;
  }
  switch(a2)
  {
    case 285212679:
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634954354;
      goto LABEL_14;
    case 285212680:
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634361708;
      goto LABEL_14;
    case 285212681:
    case 285212682:
    case 285212685:
    case 285212686:
    case 285212687:
    case 285212689:
    case 285212690:
    case 285212691:
    case 285212692:
      return v3;
    case 285212683:
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634030421;
      goto LABEL_14;
    case 285212684:
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634957682;
      goto LABEL_14;
    case 285212688:
      (*(void (**)(ML3CPP::Element **__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(&v16, this, 33554462);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(&v19, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        std::string v16 = (ML3CPP::Element *)&unk_1F08C3230;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string v19 = __p;
      }
      (*(void (**)(ML3CPP::Element **__return_ptr, ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 24))(&v16, this, 33554451);
      if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(&v15, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
        std::string v16 = (ML3CPP::Element *)&unk_1F08C3230;
        if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__p.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string v15 = __p;
      }
      char v9 = (*(uint64_t (**)(ML3DAAPAlbumImportItem *, uint64_t))(*(void *)this + 56))(this, 16777248);
      std::string::size_type size = HIBYTE(v19.__r_.__value_.__r.__words[2]);
      int v11 = SHIBYTE(v19.__r_.__value_.__r.__words[2]);
      if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = v19.__r_.__value_.__l.__size_;
      }
      BOOL v12 = size == 0;
      if (size) {
        char v13 = 0;
      }
      else {
        char v13 = v9;
      }
      if (v13)
      {
        std::string::size_type v14 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
        if ((v15.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v14 = v15.__r_.__value_.__l.__size_;
        }
        LODWORD(v3) = v14 != 0;
        if ((*((unsigned char *)&v15.__r_.__value_.__s + 23) & 0x80) != 0) {
          goto LABEL_43;
        }
      }
      else
      {
        LODWORD(v3) = !v12;
        if ((*((unsigned char *)&v15.__r_.__value_.__s + 23) & 0x80) != 0) {
LABEL_43:
        }
          operator delete(v15.__r_.__value_.__l.__data_);
      }
      unint64_t v3 = v3;
      if (v11 < 0) {
        operator delete(v19.__r_.__value_.__l.__data_);
      }
      break;
    case 285212693:
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634361669;
      goto LABEL_14;
    default:
      if (a2 != 285212696) {
        return v3;
      }
      uint64_t v4 = *((void *)this + 8);
      unsigned int v5 = 1634029641;
      goto LABEL_14;
  }
  return v3;
}

void sub_1B0304EE0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, int a11, __int16 a12, char a13, char a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v22 - 25) < 0) {
    operator delete(*(void **)(v22 - 48));
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPAlbumImportItem::getStringValue(ML3DAAPAlbumImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 16) = 0;
  uint64_t v4 = (std::string *)(a3 + 16);
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  if (a2 <= 285212673)
  {
    switch(a2)
    {
      case 33554451:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61677270u);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_23;
        }
        break;
      case 33554462:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x6177726Bu);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (__str.__r_.__value_.__r.__words[0])
        {
LABEL_23:
          std::string::basic_string[abi:ne180100](&__str, *(void **)(__str.__r_.__value_.__r.__words[0] + 48), *(void *)(__str.__r_.__value_.__r.__words[0] + 64));
          std::string::operator=(v4, &__str);
          *(unsigned char *)(a3 + 8) = 1;
          if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
            operator delete(__str.__r_.__value_.__l.__data_);
          }
        }
        break;
      case 285212673:
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x6173616Cu);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (!__str.__r_.__value_.__r.__words[0]) {
          break;
        }
        goto LABEL_23;
      default:
        return;
    }
  }
  else if (a2 > 285212696)
  {
    if (a2 == 285212697)
    {
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x616A4169u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_23;
      }
    }
    else
    {
      if (a2 != 285212699) {
        return;
      }
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61736161u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_23;
      }
    }
  }
  else
  {
    if (a2 != 285212674)
    {
      if (a2 != 285212682) {
        return;
      }
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737075u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (!__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_25;
      }
      goto LABEL_23;
    }
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737375u);
    std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
    if (__str.__r_.__value_.__r.__words[0]) {
      goto LABEL_23;
    }
  }
LABEL_25:
  if (size) {
    std::__shared_weak_count::__release_shared[abi:ne180100](size);
  }
}

void sub_1B030527C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPAlbumImportItem::~ML3DAAPAlbumImportItem(id *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t vars8;

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);
}

uint64_t ML3DAAPArtistImportItem::propertyKeyForSortPropertyKey(ML3DAAPArtistImportItem *this, int a2)
{
  if (a2 == 318767106) {
    int v2 = 318767105;
  }
  else {
    int v2 = 0;
  }
  if (a2 == 318767108) {
    unsigned int v3 = 318767107;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a2 == 301989890) {
    return 301989889;
  }
  else {
    return v3;
  }
}

uint64_t ML3DAAPArtistImportItem::sortPropertyKeyForPropertyKey(ML3DAAPArtistImportItem *this, int a2)
{
  if (a2 == 318767105) {
    int v2 = 318767106;
  }
  else {
    int v2 = 0;
  }
  if (a2 == 318767107) {
    unsigned int v3 = 318767108;
  }
  else {
    unsigned int v3 = v2;
  }
  if (a2 == 301989889) {
    return 301989890;
  }
  else {
    return v3;
  }
}

void ML3DAAPArtistImportItem::getEffectiveSortSeriesName(ML3DAAPArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)this + 24))(&v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v15;
  }
  (*(void (**)(long long *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(&v14, this, 318767108);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v13, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v13 = v15;
  }
  int v6 = SHIBYTE(v13.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v14, v13.__r_.__value_.__l.__data_, v13.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v14 = *(_OWORD *)&v13.__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[0] = v13.__r_.__value_.__r.__words[2];
  }
  std::string::size_type v7 = v15.__r_.__value_.__s.__data_[7];
  int v8 = v15.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v14 + 1);
  if (v15.__r_.__value_.__s.__data_[7] >= 0) {
    uint64_t v10 = v15.__r_.__value_.__s.__data_[7];
  }
  else {
    uint64_t v10 = *((void *)&v14 + 1);
  }
  if (!v10)
  {
    ML3CPPSortableString(&v12, (const UInt8 *)&v16);
    if (v8 < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    std::string::size_type v7 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  if ((v8 & 0x80u) != 0) {
    std::string::size_type v7 = size;
  }
  if (v7 && a2)
  {
    ML3CPPSanitizeString(&v12, (uint64_t)&v14);
    if (v15.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  int v11 = (std::string *)(a3 + 16);
  if ((v8 & 0x80) == 0)
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v14;
    *(void *)(a3 + 32) = v15.__r_.__value_.__r.__words[0];
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)v14, *((std::string::size_type *)&v14 + 1));
  if ((v15.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  operator delete((void *)v14);
  if (v6 < 0) {
LABEL_31:
  }
    operator delete(v13.__r_.__value_.__l.__data_);
LABEL_32:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1B03056D0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(a13);
  }
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPArtistImportItem::getEffectiveSortArtist(ML3DAAPArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  (*(void (**)(long long *__return_ptr))(*(void *)this + 24))(&v14);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v15;
  }
  (*(void (**)(long long *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(&v14, this, 318767106);
  if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v13, v15.__r_.__value_.__l.__data_, v15.__r_.__value_.__l.__size_);
    *(void *)&long long v14 = &unk_1F08C3230;
    if (SHIBYTE(v15.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v15.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v13 = v15;
  }
  int v6 = SHIBYTE(v13.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v13.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v14, v13.__r_.__value_.__l.__data_, v13.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v14 = *(_OWORD *)&v13.__r_.__value_.__l.__data_;
    v15.__r_.__value_.__r.__words[0] = v13.__r_.__value_.__r.__words[2];
  }
  std::string::size_type v7 = v15.__r_.__value_.__s.__data_[7];
  int v8 = v15.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v14 + 1);
  if (v15.__r_.__value_.__s.__data_[7] >= 0) {
    uint64_t v10 = v15.__r_.__value_.__s.__data_[7];
  }
  else {
    uint64_t v10 = *((void *)&v14 + 1);
  }
  if (!v10)
  {
    ML3CPPSortableString(&v12, (const UInt8 *)&v16);
    if (v8 < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    std::string::size_type v7 = HIBYTE(v12.__r_.__value_.__r.__words[2]);
    std::string::size_type size = v12.__r_.__value_.__l.__size_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  if ((v8 & 0x80u) != 0) {
    std::string::size_type v7 = size;
  }
  if (v7 && a2)
  {
    ML3CPPSanitizeString(&v12, (uint64_t)&v14);
    if (v15.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v14);
    }
    v15.__r_.__value_.__r.__words[0] = v12.__r_.__value_.__r.__words[2];
    long long v14 = *(_OWORD *)&v12.__r_.__value_.__l.__data_;
    LOBYTE(v8) = *((unsigned char *)&v12.__r_.__value_.__s + 23);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  int v11 = (std::string *)(a3 + 16);
  if ((v8 & 0x80) == 0)
  {
    *(_OWORD *)&v11->__r_.__value_.__l.__data_ = v14;
    *(void *)(a3 + 32) = v15.__r_.__value_.__r.__words[0];
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  std::string::__init_copy_ctor_external(v11, (const std::string::value_type *)v14, *((std::string::size_type *)&v14 + 1));
  if ((v15.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v6 & 0x80000000) == 0) {
      goto LABEL_32;
    }
    goto LABEL_31;
  }
  operator delete((void *)v14);
  if (v6 < 0) {
LABEL_31:
  }
    operator delete(v13.__r_.__value_.__l.__data_);
LABEL_32:
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v16.__r_.__value_.__l.__data_);
  }
}

void sub_1B0305A1C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,int a24,__int16 a25,char a26,char a27)
{
  if (a22 < 0) {
    operator delete(__p);
  }
  if (v27 < 0) {
    operator delete(a13);
  }
  if (*(char *)(v28 - 41) < 0) {
    operator delete(*(void **)(v28 - 64));
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPArtistImportItem::getEffectiveSortAlbumArtist(ML3DAAPArtistImportItem *this@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777246);
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 301989889);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v23, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v23 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 301989890);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v20, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v20 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 318767105);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v19, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v19 = v22;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v21, (uint64_t)this, 318767106);
  if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v18, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
    *(void *)&long long v21 = &unk_1F08C3230;
    if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v22.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v18 = v22;
  }
  int v7 = SHIBYTE(v20.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v20.__r_.__value_.__r.__words[2]) < 0) {
    std::string::__init_copy_ctor_external(&v17, v20.__r_.__value_.__l.__data_, v20.__r_.__value_.__l.__size_);
  }
  else {
    std::string v17 = v20;
  }
  std::string::size_type v8 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
  int v9 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
  std::string::size_type size = v17.__r_.__value_.__l.__size_;
  if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v8 = v17.__r_.__value_.__l.__size_;
  }
  if (v8)
  {
    if (v6) {
      goto LABEL_56;
    }
    goto LABEL_28;
  }
  ML3CPPSortableString((std::string *)&v21, (const UInt8 *)&v23);
  if (v9 < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  v17.__r_.__value_.__r.__words[2] = v22.__r_.__value_.__r.__words[0];
  *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v21;
  LOBYTE(v9) = v22.__r_.__value_.__s.__data_[7];
  std::string::size_type size = *((void *)&v21 + 1);
  if (!v6)
  {
LABEL_28:
    if ((v9 & 0x80u) == 0) {
      std::string::size_type v11 = v9;
    }
    else {
      std::string::size_type v11 = size;
    }
    if (!v11)
    {
      std::string::size_type v12 = HIBYTE(v23.__r_.__value_.__r.__words[2]);
      if ((v23.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type v12 = v23.__r_.__value_.__l.__size_;
      }
      if (!v12)
      {
        (*(void (**)(long long *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 168))(&v21, this, a2);
        if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
          std::string::__init_copy_ctor_external(&v16, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
        }
        else {
          std::string v16 = v22;
        }
        if ((v9 & 0x80) != 0) {
          operator delete(v17.__r_.__value_.__l.__data_);
        }
        std::string v17 = v16;
        *(void *)&long long v21 = &unk_1F08C3230;
        if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v22.__r_.__value_.__l.__data_);
        }
        std::string::size_type v13 = HIBYTE(v17.__r_.__value_.__r.__words[2]);
        int v9 = SHIBYTE(v17.__r_.__value_.__r.__words[2]);
        std::string::size_type size = v17.__r_.__value_.__l.__size_;
        if ((v17.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
          std::string::size_type v13 = v17.__r_.__value_.__l.__size_;
        }
        if (!v13)
        {
          std::string::size_type v14 = HIBYTE(v19.__r_.__value_.__r.__words[2]);
          if ((v19.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
            std::string::size_type v14 = v19.__r_.__value_.__l.__size_;
          }
          if (!v14)
          {
            (*(void (**)(long long *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 176))(&v21, this, a2);
            if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v16, v22.__r_.__value_.__l.__data_, v22.__r_.__value_.__l.__size_);
            }
            else {
              std::string v16 = v22;
            }
            if (v9 < 0) {
              operator delete(v17.__r_.__value_.__l.__data_);
            }
            std::string v17 = v16;
            *(void *)&long long v21 = &unk_1F08C3230;
            if (SHIBYTE(v22.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v22.__r_.__value_.__l.__data_);
            }
            LOBYTE(v9) = *((unsigned char *)&v17.__r_.__value_.__s + 23);
            std::string::size_type size = v17.__r_.__value_.__l.__size_;
          }
        }
      }
    }
  }
LABEL_56:
  if ((v9 & 0x80u) == 0) {
    std::string::size_type size = v9;
  }
  if (size && a2)
  {
    ML3CPPSanitizeString((std::string *)&v21, (uint64_t)&v17);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
    v17.__r_.__value_.__r.__words[2] = v22.__r_.__value_.__r.__words[0];
    *(_OWORD *)&v17.__r_.__value_.__l.__data_ = v21;
    LOBYTE(v9) = v22.__r_.__value_.__s.__data_[7];
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  std::string v15 = (std::string *)(a3 + 16);
  if ((v9 & 0x80) != 0)
  {
    std::string::__init_copy_ctor_external(v15, v17.__r_.__value_.__l.__data_, v17.__r_.__value_.__l.__size_);
    if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v17.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    *(_OWORD *)&v15->__r_.__value_.__l.__data_ = *(_OWORD *)&v17.__r_.__value_.__l.__data_;
    *(void *)(a3 + 32) = *((void *)&v17.__r_.__value_.__l + 2);
  }
  if (SHIBYTE(v18.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v18.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    operator delete(v19.__r_.__value_.__l.__data_);
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_71;
    }
  }
  else if ((v7 & 0x80000000) == 0)
  {
    goto LABEL_71;
  }
  operator delete(v20.__r_.__value_.__l.__data_);
LABEL_71:
  if (SHIBYTE(v23.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v23.__r_.__value_.__l.__data_);
  }
}

void sub_1B0306030(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18, uint64_t a19, void *a20,uint64_t a21,int a22,__int16 a23,char a24,char a25,uint64_t a26,void *a27,uint64_t a28,int a29,__int16 a30,char a31,char a32,uint64_t a33,void *a34,uint64_t a35,int a36,__int16 a37,char a38,char a39)
{
  *(void *)(v39 - 136) = &unk_1F08C3230;
  if (*(char *)(v39 - 97) < 0) {
    operator delete(*(void **)(v39 - 120));
  }
  if (a18 < 0) {
    operator delete(__p);
  }
  if (a25 < 0) {
    operator delete(a20);
  }
  if (a32 < 0) {
    operator delete(a27);
  }
  if (a39 < 0) {
    operator delete(a34);
  }
  if (*(char *)(v39 - 73) < 0) {
    operator delete(*(void **)(v39 - 96));
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPArtistImportItem::getEffectiveAlbumArtist(ML3DAAPArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6 = (*(uint64_t (**)(ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777246);
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 318767105);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&__str, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string __str = v19;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 318767107);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v17, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v17 = v19;
  }
  ML3ImportItem::getSanitizedStringValue((ML3ImportItem *)&v18, (uint64_t)this, 301989889);
  if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v16, v19.__r_.__value_.__l.__data_, v19.__r_.__value_.__l.__size_);
    *(void *)&long long v18 = &unk_1F08C3230;
    if (SHIBYTE(v19.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v19.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v16 = v19;
  }
  int v7 = SHIBYTE(v16.__r_.__value_.__r.__words[2]);
  if (SHIBYTE(v16.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external((std::string *)&v18, v16.__r_.__value_.__l.__data_, v16.__r_.__value_.__l.__size_);
  }
  else
  {
    long long v18 = *(_OWORD *)&v16.__r_.__value_.__l.__data_;
    v19.__r_.__value_.__r.__words[0] = v16.__r_.__value_.__r.__words[2];
  }
  if (!v6)
  {
    uint64_t v8 = v19.__r_.__value_.__s.__data_[7];
    std::string::value_type v9 = v19.__r_.__value_.__s.__data_[7];
    uint64_t v10 = *((void *)&v18 + 1);
    if (v19.__r_.__value_.__s.__data_[7] >= 0) {
      uint64_t v11 = v19.__r_.__value_.__s.__data_[7];
    }
    else {
      uint64_t v11 = *((void *)&v18 + 1);
    }
    if (!v11)
    {
      std::string::operator=((std::string *)&v18, &__str);
      uint64_t v8 = v19.__r_.__value_.__s.__data_[7];
      uint64_t v10 = *((void *)&v18 + 1);
      std::string::value_type v9 = v19.__r_.__value_.__s.__data_[7];
    }
    if (v9 < 0) {
      uint64_t v8 = v10;
    }
    if (!v8) {
      std::string::operator=((std::string *)&v18, &v17);
    }
  }
  uint64_t v12 = v19.__r_.__value_.__s.__data_[7];
  std::string::value_type v13 = v19.__r_.__value_.__s.__data_[7];
  if (v19.__r_.__value_.__s.__data_[7] < 0) {
    uint64_t v12 = *((void *)&v18 + 1);
  }
  if (v12 && a2)
  {
    ML3CPPSanitizeString(&v15, (uint64_t)&v18);
    if (v19.__r_.__value_.__s.__data_[7] < 0) {
      operator delete((void *)v18);
    }
    v19.__r_.__value_.__r.__words[0] = v15.__r_.__value_.__r.__words[2];
    long long v18 = *(_OWORD *)&v15.__r_.__value_.__l.__data_;
    std::string::value_type v13 = HIBYTE(v15.__r_.__value_.__r.__words[2]);
  }
  *(void *)a3 = &unk_1F08C3230;
  *(unsigned char *)(a3 + 8) = 1;
  std::string::size_type v14 = (std::string *)(a3 + 16);
  if ((v13 & 0x80) == 0)
  {
    *(_OWORD *)&v14->__r_.__value_.__l.__data_ = v18;
    *(void *)(a3 + 32) = v19.__r_.__value_.__r.__words[0];
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  std::string::__init_copy_ctor_external(v14, (const std::string::value_type *)v18, *((std::string::size_type *)&v18 + 1));
  if ((v19.__r_.__value_.__s.__data_[7] & 0x80000000) == 0)
  {
    if ((v7 & 0x80000000) == 0) {
      goto LABEL_39;
    }
    goto LABEL_38;
  }
  operator delete((void *)v18);
  if (v7 < 0) {
LABEL_38:
  }
    operator delete(v16.__r_.__value_.__l.__data_);
LABEL_39:
  if (SHIBYTE(v17.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v17.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__str.__r_.__value_.__l.__data_);
  }
}

void sub_1B03064E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, uint64_t a18, int a19, __int16 a20,char a21,char a22,uint64_t a23,void *a24,uint64_t a25,uint64_t a26,uint64_t a27,int a28,__int16 a29,char a30,char a31)
{
  operator delete(__p);
  if (a22 < 0) {
    operator delete(a17);
  }
  if (*(char *)(v31 - 57) < 0) {
    operator delete(*(void **)(v31 - 80));
  }
  _Unwind_Resume(a1);
}

id ML3DAAPArtistImportItem::getDeduplicationPredicates(ML3DAAPArtistImportItem *this)
{
  v29[2] = *MEMORY[0x1E4F143B8];
  id v2 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
  unsigned int v3 = @"store_id";
  uint64_t v4 = @"grouping_key";
  memset(&__p, 0, sizeof(__p));
  if (*((void *)this + 10) == 2)
  {
    (*(void (**)(void *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(v24, this, 318767105);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__str, v25.__r_.__value_.__l.__data_, v25.__r_.__value_.__l.__size_);
    }
    else {
      std::string __str = v25;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = __str;
    v24[0] = &unk_1F08C3230;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(v25.__r_.__value_.__l.__data_);
    }
    uint64_t v5 = (*(uint64_t (**)(ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 32))(this, 16777217);
    if ((MLMediaTypeByStandardizingMediaType(v5) & 8) == 0)
    {
      (*(void (**)(void *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(v24, this, 318767107);
      if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
      {
        std::string::__init_copy_ctor_external(&__str, v25.__r_.__value_.__l.__data_, v25.__r_.__value_.__l.__size_);
        v24[0] = &unk_1F08C3230;
        if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(v25.__r_.__value_.__l.__data_);
        }
      }
      else
      {
        std::string __str = v25;
      }
      std::string::size_type size = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      char v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      if ((__str.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
        std::string::size_type size = __str.__r_.__value_.__l.__size_;
      }
      if (size)
      {
        std::string::operator=(&__p, &__str);
        char v8 = HIBYTE(__str.__r_.__value_.__r.__words[2]);
      }
      if (v8 < 0)
      {
        uint64_t v6 = (void *)__str.__r_.__value_.__r.__words[0];
        goto LABEL_27;
      }
    }
  }
  else
  {
    (*(void (**)(void *__return_ptr, ML3DAAPArtistImportItem *, void))(*(void *)this + 152))(v24, this, 0);
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
      std::string::__init_copy_ctor_external(&__str, v25.__r_.__value_.__l.__data_, v25.__r_.__value_.__l.__size_);
    }
    else {
      std::string __str = v25;
    }
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
    std::string __p = __str;
    v24[0] = &unk_1F08C3230;
    if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0)
    {
      uint64_t v6 = (void *)v25.__r_.__value_.__r.__words[0];
LABEL_27:
      operator delete(v6);
    }
  }
  std::string::size_type v9 = HIBYTE(__p.__r_.__value_.__r.__words[2]);
  if ((__p.__r_.__value_.__r.__words[2] & 0x8000000000000000) != 0) {
    std::string::size_type v9 = __p.__r_.__value_.__l.__size_;
  }
  if (v9)
  {
    uint64_t v10 = (void *)*((void *)this + 11);
    uint64_t v11 = ML3CPPBridgeString((const UInt8 *)&__p, 1);
    uint64_t v12 = [v10 groupingKeyForString:v11];
  }
  else
  {
    uint64_t v12 = 0;
  }
  if (*((void *)this + 10) == 2) {
    uint64_t v13 = 318767111;
  }
  else {
    uint64_t v13 = 301989893;
  }
  uint64_t v14 = (*(uint64_t (**)(ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 32))(this, v13);
  if (v14)
  {
    if (!v12)
    {
      std::string v20 = +[ML3ComparisonPredicate predicateWithProperty:v3 equalToInt64:v14];
      v28[0] = v20;
      long long v21 = +[ML3ComparisonPredicate predicateWithProperty:v4 value:&stru_1F08D4D70 comparison:1 caseInsensitive:1 treatNullAsString:&stru_1F08D4D70];
      v28[1] = v21;
      std::string v22 = [MEMORY[0x1E4F1C978] arrayWithObjects:v28 count:2];
      std::string v19 = +[ML3CompoundPredicate predicateMatchingPredicates:v22];

      [v2 addObject:v19];
      goto LABEL_42;
    }
    std::string v15 = +[ML3ComparisonPredicate predicateWithProperty:v3 equalToInt64:v14];
    v29[0] = v15;
    std::string v16 = +[ML3ComparisonPredicate predicateWithProperty:v4 equalToValue:v12];
    v29[1] = v16;
    std::string v17 = [MEMORY[0x1E4F1C978] arrayWithObjects:v29 count:2];
    long long v18 = +[ML3CompoundPredicate predicateMatchingPredicates:v17];

    [v2 addObject:v18];
  }
  else if (!v12)
  {
    goto LABEL_43;
  }
  std::string v19 = +[ML3ComparisonPredicate predicateWithProperty:v4 equalToValue:v12];
  [v2 addObject:v19];
LABEL_42:

LABEL_43:
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(__p.__r_.__value_.__l.__data_);
  }

  return v2;
}

void sub_1B0306B44(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17, uint64_t a18, uint64_t a19, int a20,__int16 a21,char a22,char a23,uint64_t a24,void *a25,uint64_t a26,int a27,__int16 a28,char a29,char a30)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (a30 < 0) {
    operator delete(a25);
  }

  _Unwind_Resume(a1);
}

void ML3DAAPArtistImportItem::getDescription(ML3DAAPArtistImportItem *this)
{
  (*(void (**)(void *__return_ptr))(*(void *)this + 24))(v20);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v27, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v20[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v27 = __p;
  }
  if (*((void *)this + 10) == 2) {
    uint64_t v2 = 318767106;
  }
  else {
    uint64_t v2 = 301989890;
  }
  (*(void (**)(void *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(v20, this, v2);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v26, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v20[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v26 = __p;
  }
  if (*((void *)this + 10) == 2) {
    uint64_t v3 = 318767111;
  }
  else {
    uint64_t v3 = 301989893;
  }
  (*(void (**)(ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 32))(this, v3);
  (*(void (**)(void *__return_ptr, ML3DAAPArtistImportItem *, uint64_t))(*(void *)this + 24))(v20, this, 318767107);
  if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0)
  {
    std::string::__init_copy_ctor_external(&v25, __p.__r_.__value_.__l.__data_, __p.__r_.__value_.__l.__size_);
    v20[0] = &unk_1F08C3230;
    if (SHIBYTE(__p.__r_.__value_.__r.__words[2]) < 0) {
      operator delete(__p.__r_.__value_.__l.__data_);
    }
  }
  else
  {
    std::string v25 = __p;
  }
  std::ostringstream::basic_ostringstream[abi:ne180100]((uint64_t)v20);
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v20, (uint64_t)"<ML3DAAPArtistImportItem ", 25);
  *(_DWORD *)((char *)&v20[1] + *(void *)(v20[0] - 24)) = *(_DWORD *)((unsigned char *)&v20[1] + *(void *)(v20[0] - 24)) & 0xFFFFFFB5 | 8;
  uint64_t v4 = (void *)std::ostream::operator<<();
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v4, (uint64_t)" entityType=", 12);
  uint64_t v5 = (void *)std::ostream::operator<<();
  uint64_t v6 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v5, (uint64_t)" name=", 6);
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    int v7 = &v27;
  }
  else {
    int v7 = (std::string *)v27.__r_.__value_.__r.__words[0];
  }
  if ((v27.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type size = HIBYTE(v27.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type size = v27.__r_.__value_.__l.__size_;
  }
  std::string::size_type v9 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v6, (uint64_t)v7, size);
  uint64_t v10 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v9, (uint64_t)" sortName=", 10);
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    uint64_t v11 = &v26;
  }
  else {
    uint64_t v11 = (std::string *)v26.__r_.__value_.__r.__words[0];
  }
  if ((v26.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v12 = HIBYTE(v26.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v12 = v26.__r_.__value_.__l.__size_;
  }
  uint64_t v13 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v10, (uint64_t)v11, v12);
  uint64_t v14 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v13, (uint64_t)" seriesName=", 12);
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string v15 = &v25;
  }
  else {
    std::string v15 = (std::string *)v25.__r_.__value_.__r.__words[0];
  }
  if ((v25.__r_.__value_.__r.__words[2] & 0x8000000000000000) == 0) {
    std::string::size_type v16 = HIBYTE(v25.__r_.__value_.__r.__words[2]);
  }
  else {
    std::string::size_type v16 = v25.__r_.__value_.__l.__size_;
  }
  std::string v17 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v14, (uint64_t)v15, v16);
  long long v18 = std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v17, (uint64_t)" storeID=", 9);
  *(_DWORD *)((char *)v18 + *(void *)(*v18 - 24) + 8) = *(_DWORD *)((unsigned char *)v18 + *(void *)(*v18 - 24) + 8) & 0xFFFFFFB5 | 2;
  std::string v19 = (void *)std::ostream::operator<<();
  char v28 = 62;
  std::__put_character_sequence[abi:ne180100]<char,std::char_traits<char>>(v19, (uint64_t)&v28, 1);
  std::stringbuf::str();
  v20[0] = *MEMORY[0x1E4FBA418];
  *(void *)((char *)v20 + *(void *)(v20[0] - 24)) = *(void *)(MEMORY[0x1E4FBA418] + 24);
  v20[1] = MEMORY[0x1E4FBA470] + 16;
  if (v23 < 0) {
    operator delete(v22);
  }
  std::streambuf::~streambuf();
  std::ostream::~ostream();
  MEMORY[0x1B3E935B0](&v24);
  if (SHIBYTE(v25.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v25.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v26.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v26.__r_.__value_.__l.__data_);
  }
  if (SHIBYTE(v27.__r_.__value_.__r.__words[2]) < 0) {
    operator delete(v27.__r_.__value_.__l.__data_);
  }
}

void sub_1B0307144(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, void *__p, uint64_t a13, int a14, __int16 a15, char a16, char a17)
{
  if (a17 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v17 - 105) < 0) {
    operator delete(*(void **)(v17 - 128));
  }
  if (*(char *)(v17 - 73) < 0) {
    operator delete(*(void **)(v17 - 96));
  }
  _Unwind_Resume(exception_object);
}

BOOL ML3DAAPArtistImportItem::hasValue(ML3DAAPArtistImportItem *this, int a2)
{
  uint64_t v3 = 0;
  unsigned int v4 = 1634951521;
  if (a2 > 301989903)
  {
    switch(a2)
    {
      case 318767105:
        unsigned int v4 = 1634951538;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
      case 318767106:
        unsigned int v4 = 1634956129;
        return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
      case 318767107:
        unsigned __int16 v5 = 21326;
        goto LABEL_20;
      case 318767108:
      case 318767109:
      case 318767110:
        return v3;
      case 318767111:
        unsigned __int16 v5 = 16713;
        goto LABEL_20;
      default:
        if (a2 == 301989904)
        {
          unsigned __int16 v5 = 27762;
LABEL_20:
          unsigned int v4 = v5 | 0x61650000;
          return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
        }
        if (a2 != 318767118) {
          return v3;
        }
        break;
    }
    goto LABEL_14;
  }
  if (a2 <= 301989892)
  {
    if (a2 == 301989889) {
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
    }
    if (a2 == 301989890)
    {
      unsigned int v4 = 1634956140;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
    }
    return v3;
  }
  switch(a2)
  {
    case 301989893:
      unsigned int v4 = 1634357345;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
    case 301989901:
LABEL_14:
      unsigned int v4 = 1634353509;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
    case 301989903:
      unsigned int v4 = 1634036851;
      return std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::__count_multi<unsigned int>(*((void *)this + 8) + 96, v4) != 0;
  }
  return v3;
}

unint64_t ML3DAAPArtistImportItem::getIntegerValue(ML3DAAPArtistImportItem *this, int a2)
{
  unint64_t v2 = 0;
  if (a2 > 301989900)
  {
    if (a2 != 318767118)
    {
      if (a2 == 318767111)
      {
        uint64_t v3 = *((void *)this + 8);
        unsigned int v4 = 1634025801;
        goto LABEL_15;
      }
      if (a2 != 301989901) {
        return v2;
      }
    }
    uint64_t v3 = *((void *)this + 8);
    unsigned int v4 = 1634353509;
    goto LABEL_15;
  }
  switch(a2)
  {
    case 16777217:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, *((void *)this + 8), 0x61654D6Bu);
      unsigned __int16 v5 = v9;
      if (v8)
      {
        unsigned int v6 = ML3CPP::Element::integerValue(v8);
        unint64_t v2 = _MLDMediaTypeFromDAAPMediaKind(v6);
        if (!v5) {
          return v2;
        }
        goto LABEL_17;
      }
      goto LABEL_19;
    case 16777246:
      uint64_t v3 = *((void *)this + 8);
      unsigned int v4 = 1634952047;
      break;
    case 301989893:
      uint64_t v3 = *((void *)this + 8);
      unsigned int v4 = 1634357345;
      break;
    default:
      return v2;
  }
LABEL_15:
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v8, v3, v4);
  unsigned __int16 v5 = v9;
  if (!v8)
  {
LABEL_19:
    unint64_t v2 = 0;
    if (!v5) {
      return v2;
    }
    goto LABEL_17;
  }
  unint64_t v2 = ML3CPP::Element::integerValue(v8);
  if (v5) {
LABEL_17:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  return v2;
}

void ML3DAAPArtistImportItem::getStringValue(ML3DAAPArtistImportItem *this@<X0>, int a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = &unk_1F08C3230;
  *(void *)(a3 + 16) = 0;
  unsigned int v4 = (std::string *)(a3 + 16);
  *(unsigned char *)(a3 + 8) = 0;
  *(void *)(a3 + 24) = 0;
  *(void *)(a3 + 32) = 0;
  switch(a2)
  {
    case 318767105:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61736172u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (!__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_17;
      }
      goto LABEL_15;
    case 318767106:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737361u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_15;
      }
      goto LABEL_17;
    case 318767107:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x6165534Eu);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_15;
      }
      goto LABEL_17;
    case 318767108:
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61737373u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0]) {
        goto LABEL_15;
      }
      goto LABEL_17;
    default:
      if (a2 == 301989890)
      {
        ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x6173736Cu);
        std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
        if (!__str.__r_.__value_.__r.__words[0]) {
          goto LABEL_17;
        }
        goto LABEL_15;
      }
      if (a2 != 301989889) {
        return;
      }
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)&__str, *((void *)this + 8), 0x61736161u);
      std::string::size_type size = (std::__shared_weak_count *)__str.__r_.__value_.__l.__size_;
      if (__str.__r_.__value_.__r.__words[0])
      {
LABEL_15:
        std::string::basic_string[abi:ne180100](&__str, *(void **)(__str.__r_.__value_.__r.__words[0] + 48), *(void *)(__str.__r_.__value_.__r.__words[0] + 64));
        std::string::operator=(v4, &__str);
        *(unsigned char *)(a3 + 8) = 1;
        if (SHIBYTE(__str.__r_.__value_.__r.__words[2]) < 0) {
          operator delete(__str.__r_.__value_.__l.__data_);
        }
      }
LABEL_17:
      if (size) {
        std::__shared_weak_count::__release_shared[abi:ne180100](size);
      }
      return;
  }
}

void sub_1B0307754(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, void *__p, uint64_t a11, int a12, __int16 a13, char a14, char a15)
{
  if (a15 < 0) {
    operator delete(__p);
  }
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  *(void *)uint64_t v15 = v16;
  if (*(char *)(v15 + 39) < 0) {
    operator delete(*v17);
  }
  _Unwind_Resume(exception_object);
}

void ML3DAAPArtistImportItem::~ML3DAAPArtistImportItem(id *this)
{
  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);

  JUMPOUT(0x1B3E93610);
}

{
  uint64_t vars8;

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)this);
}

uint64_t ML3DAAPContainerImportItem::ML3DAAPContainerImportItem(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v45 = *MEMORY[0x1E4F143B8];
  uint64_t v9 = *a2;
  char v8 = (std::__shared_weak_count *)a2[1];
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  long long v10 = 0uLL;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C3270;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  if (v8)
  {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
    long long v10 = 0uLL;
  }
  *(void *)a1 = &unk_1F08C4998;
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 208) = v10;
  *(_OWORD *)(a1 + 224) = v10;
  std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>((void *)(a1 + 216), *(const void **)a3, *(void *)(a3 + 8), (uint64_t)(*(void *)(a3 + 8) - *(void *)a3) >> 3);
  *(_OWORD *)(a1 + 248) = 0u;
  uint64_t v11 = (unint64_t *)(a1 + 248);
  *(_OWORD *)(a1 + 264) = 0u;
  std::vector<std::unordered_set<std::string>>::__init_with_size[abi:ne180100]<std::unordered_set<std::string>*,std::unordered_set<std::string>*>(a1 + 256, *a4, a4[1], 0xCCCCCCCCCCCCCCCDLL * ((a4[1] - *a4) >> 3));
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v35, *a2, 0x6D706572u);
  if (v35) {
    *(void *)(a1 + 280) = ML3CPP::Element::integerValue(v35);
  }
  ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v33, *a2, 0x6165504Bu);
  if (v33)
  {
    unsigned int v12 = ML3CPP::Element::integerValue(v33);
    *(_DWORD *)(a1 + 240) = v12;
  }
  else
  {
    unsigned int v12 = *(_DWORD *)(a1 + 240);
  }
  *(_OWORD *)(a1 + 88) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  if (v12 <= 0xA && ((1 << v12) & 0x40C) != 0)
  {
    ML3CPP::Element::childElementForCode((ML3CPP::Element *)&v44, *a2, 0x61655044u);
    if ((void)v44)
    {
      uint64_t v13 = [MEMORY[0x1E4F1C9B8] dataWithBytesNoCopy:*(void *)(v44 + 48) length:*(void *)(v44 + 64) freeWhenDone:0];
      if (v13)
      {
        uint64_t v14 = [MEMORY[0x1E4F28F98] propertyListWithData:v13 options:0 format:0 error:0];
        objc_opt_class();
        if (objc_opt_isKindOfClass())
        {
          objc_storeStrong((id *)(a1 + 80), v14);
          uint64_t v15 = [v14 objectForKey:@"contentFilter"];
          objc_opt_class();
          if (objc_opt_isKindOfClass()) {
            objc_storeStrong((id *)(a1 + 208), v15);
          }
          uint64_t v32 = [v14 objectForKey:@"smartInfo"];
          uint64_t v16 = v32;
          objc_opt_class();
          if (objc_opt_isKindOfClass())
          {
            MLParsedSmartInfoFromData(v32, (uint64_t)buf);
            long long v17 = v42;
            *(_OWORD *)(a1 + 152) = v41;
            *(_OWORD *)(a1 + 168) = v17;
            *(_OWORD *)(a1 + 184) = v43;
            long long v18 = v38;
            *(_OWORD *)(a1 + 88) = *(_OWORD *)buf;
            *(_OWORD *)(a1 + 104) = v18;
            long long v19 = v40;
            *(_OWORD *)(a1 + 120) = v39;
            *(_OWORD *)(a1 + 136) = v19;
            *(unsigned char *)(a1 + 200) = 1;
          }
          std::string v20 = objc_msgSend(v14, "objectForKey:", @"geniusSeedTrackIDs", v32, a1 + 216);
          objc_opt_class();
          if ((objc_opt_isKindOfClass() & 1) != 0 && [v20 count])
          {
            long long v21 = [v20 objectAtIndex:0];
            unint64_t *v11 = [v21 unsignedIntValue];
          }
        }
        else
        {
          uint64_t v15 = os_log_create("com.apple.amp.medialibrary", "Default");
          if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = 138543362;
            *(void *)&uint8_t buf[4] = v14;
            _os_log_impl(&dword_1B022D000, v15, OS_LOG_TYPE_ERROR, "got unexpected container properties element. properties=%{public}@", buf, 0xCu);
          }
        }
      }
    }
    if (*((void *)&v44 + 1)) {
      std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v44 + 1));
    }
    if (*(_DWORD *)(a1 + 240) == 3)
    {
      ML3CPP::Element::childElementForCode((ML3CPP::Element *)buf, *a2, 0x61654753u);
      uint64_t v22 = *(void *)buf;
      if (*(void *)buf)
      {
        for (unsigned int i = 0; ; unsigned int i = v24 + 1)
        {
          unint64_t v24 = i;
          uint64_t v25 = *(void *)(v22 + 72);
          if (v24 >= (*(void *)(v22 + 80) - v25) >> 4) {
            break;
          }
          long long v26 = *(_OWORD *)(v25 + 16 * v24);
          std::string v27 = *(std::__shared_weak_count **)(v25 + 16 * v24 + 8);
          if (v27)
          {
            atomic_fetch_add_explicit(&v27->__shared_owners_, 1uLL, memory_order_relaxed);
            char v28 = (ML3CPP::Element *)v26;
            if (*(_DWORD *)(v26 + 16) == 1835624804) {
              goto LABEL_38;
            }
            std::__shared_weak_count::__release_shared[abi:ne180100](v27);
            uint64_t v22 = *(void *)buf;
          }
          else
          {
            char v28 = *(ML3CPP::Element **)(v25 + 16 * v24);
            if (*(_DWORD *)(v26 + 16) == 1835624804)
            {
LABEL_38:
              unint64_t *v11 = ML3CPP::Element::integerValue(v28);
              uint64_t v29 = os_log_create("com.apple.amp.medialibrary", "Default");
              if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
              {
                unint64_t v30 = *v11;
                LODWORD(v44) = 134217984;
                *(void *)((char *)&v44 + 4) = v30;
                _os_log_impl(&dword_1B022D000, v29, OS_LOG_TYPE_ERROR, "parsed genius seed listing. id=%lld", (uint8_t *)&v44, 0xCu);
              }

              if (v27) {
                std::__shared_weak_count::__release_shared[abi:ne180100](v27);
              }
              break;
            }
          }
        }
      }
      if (*(void *)&buf[8]) {
        std::__shared_weak_count::__release_shared[abi:ne180100](*(std::__shared_weak_count **)&buf[8]);
      }
    }
  }
  if (v34) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v34);
  }
  if (v36) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v36);
  }
  return a1;
}

void sub_1B0307DBC(_Unwind_Exception *a1, void *a2, void **a3, uint64_t a4, std::__shared_weak_count *a5, uint64_t a6, std::__shared_weak_count *a7, ...)
{
  va_start(va, a7);

  uint64_t v15 = *(std::__shared_weak_count **)(v13 - 104);
  if (v15) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v15);
  }
  if (a5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a5);
  }
  if (a7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a7);
  }
  std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)va);
  uint64_t v16 = *a3;
  if (*a3)
  {
    *(void *)(v7 + 224) = v16;
    operator delete(v16);
  }

  ML3DAAPImportItem::~ML3DAAPImportItem((ML3DAAPImportItem *)v7);
  _Unwind_Resume(a1);
}

uint64_t ML3DAAPAlbumImportItem::ML3DAAPAlbumImportItem(uint64_t a1, uint64_t *a2, void *a3)
{
  id v5 = a3;
  uint64_t v7 = *a2;
  unsigned int v6 = (std::__shared_weak_count *)a2[1];
  if (v6) {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C3270;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v6;
  if (v6)
  {
    atomic_fetch_add_explicit(&v6->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v6);
  }
  *(void *)a1 = &unk_1F08C39A8;
  *(void *)(a1 + 80) = v5;
  return a1;
}

uint64_t ML3DAAPArtistImportItem::ML3DAAPArtistImportItem(uint64_t a1, uint64_t *a2, uint64_t a3, void *a4)
{
  id v7 = a4;
  uint64_t v9 = *a2;
  char v8 = (std::__shared_weak_count *)a2[1];
  if (v8) {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  *(_WORD *)(a1 + 16) = 256;
  *(unsigned char *)(a1 + 18) = 1;
  *(_OWORD *)(a1 + 24) = 0u;
  *(_OWORD *)(a1 + 40) = 0u;
  *(_DWORD *)(a1 + 56) = 1065353216;
  *(void *)a1 = &unk_1F08C3270;
  *(void *)(a1 + 8) = 0;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v8;
  if (v8)
  {
    atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
    std::__shared_weak_count::__release_shared[abi:ne180100](v8);
  }
  *(void *)a1 = &unk_1F08C3DC0;
  *(void *)(a1 + 80) = a3;
  *(void *)(a1 + 88) = v7;
  return a1;
}

void ML3CPP::Parser::parse(ML3CPP::Parser *this)
{
  if (*((unsigned char *)this + 24))
  {
    *((_DWORD *)this + 7) = 3;
    return;
  }
  if (*((_DWORD *)this + 7))
  {
    exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
    std::logic_error::logic_error(exception, "Cannot parse more than once.");
    __cxa_throw(exception, MEMORY[0x1E4FBA328], MEMORY[0x1E4FBA1B0]);
  }
  *((_DWORD *)this + 7) = 1;
  unint64_t v2 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v2)
  {
    uint64_t v3 = std::__shared_weak_count::lock(v2);
    if (v3)
    {
      unsigned int v4 = v3;
      id v5 = (void (***)(void))*((void *)this + 1);
      if (v5) {
        (**v5)(v5);
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v4);
    }
  }
  do
  {
    if (*((unsigned char *)this + 24))
    {
      int v156 = 3;
      goto LABEL_178;
    }
    uint64_t v6 = *((void *)this + 9);
    if (v6)
    {
      uint64_t v7 = *(void *)(*((void *)this + 5)
                     + (((unint64_t)(v6 + *((void *)this + 8) - 1) >> 5) & 0x7FFFFFFFFFFFFF8))
         + 16 * (v6 + *((unsigned char *)this + 64) - 1);
      uint64_t v9 = *(unsigned int **)v7;
      char v8 = *(std::__shared_weak_count **)(v7 + 8);
      if (v8) {
        atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
      }
    }
    else
    {
      uint64_t v9 = 0;
      char v8 = 0;
    }
    std::istream::read();
    if (*(void *)(*(void *)this + 8) == 4)
    {
      unsigned int size_4 = bswap32(0);
      std::istream::read();
      if (*(void *)(*(void *)this + 8) == 4)
      {
        unsigned int size = bswap32(0);
        if (v9) {
          v9[2] -= 8;
        }
        long long v10 = (std::__shared_weak_count *)*((void *)this + 2);
        if (!v10) {
          goto LABEL_40;
        }
        uint64_t v11 = std::__shared_weak_count::lock(v10);
        if (!v11) {
          goto LABEL_40;
        }
        unsigned int v12 = v11;
        uint64_t v13 = *((void *)this + 1);
        if (!v13)
        {
          std::__shared_weak_count::__release_shared[abi:ne180100](v12);
LABEL_40:
          std::istream::seekg();
          if (!v9 || (unsigned int v40 = v9[2] - size, (v9[2] = v40) != 0))
          {
LABEL_42:
            std::istream::peek();
            int v41 = 0;
            if (!v8) {
              continue;
            }
LABEL_58:
            std::__shared_weak_count::__release_shared[abi:ne180100](v8);
            continue;
          }
LABEL_143:
          unint64_t v128 = v8;
          while (2)
          {
            uint64_t v129 = *((void *)this + 9) - 1;
            unint64_t v130 = v129 + *((void *)this + 8);
            uint64_t v131 = *((void *)this + 5);
            unint64_t v132 = *(std::__shared_weak_count **)(*(void *)(v131 + ((v130 >> 5) & 0x7FFFFFFFFFFFFF8))
                                                + 16 * v130
                                                + 8);
            if (v132)
            {
              std::__shared_weak_count::__release_shared[abi:ne180100](v132);
              uint64_t v129 = *((void *)this + 9) - 1;
              uint64_t v131 = *((void *)this + 5);
              unint64_t v130 = v129 + *((void *)this + 8);
            }
            uint64_t v133 = *((void *)this + 6);
            *((void *)this + 9) = v129;
            if (v133 == v131) {
              uint64_t v134 = 0;
            }
            else {
              uint64_t v134 = 32 * (v133 - v131) - 1;
            }
            if (v134 - v130 >= 0x200)
            {
              operator delete(*(void **)(v133 - 8));
              *((void *)this + 6) -= 8;
            }
            unint64_t v135 = (std::__shared_weak_count *)*((void *)this + 2);
            if (v135)
            {
              uint64_t v136 = *v9;
              unint64_t v137 = std::__shared_weak_count::lock(v135);
              if (v137)
              {
                unint64_t v138 = v137;
                uint64_t v139 = *((void *)this + 1);
                if (v139) {
                  (*(void (**)(uint64_t, uint64_t))(*(void *)v139 + 48))(v139, v136);
                }
                std::__shared_weak_count::__release_shared[abi:ne180100](v138);
              }
            }
            unsigned int v140 = v9[1];
            uint64_t v141 = *((void *)this + 9);
            if (v141)
            {
              uint64_t v142 = *(void *)(*((void *)this + 5)
                               + (((unint64_t)(v141 + *((void *)this + 8) - 1) >> 5) & 0x7FFFFFFFFFFFFF8))
                   + 16 * (v141 + *((unsigned char *)this + 64) - 1);
              uint64_t v9 = *(unsigned int **)v142;
              char v8 = *(std::__shared_weak_count **)(v142 + 8);
              if (v8) {
                atomic_fetch_add_explicit(&v8->__shared_owners_, 1uLL, memory_order_relaxed);
              }
              if (v128) {
LABEL_160:
              }
                std::__shared_weak_count::__release_shared[abi:ne180100](v128);
            }
            else
            {
              uint64_t v9 = 0;
              char v8 = 0;
              if (v128) {
                goto LABEL_160;
              }
            }
            if (!v9) {
              goto LABEL_42;
            }
            unint64_t v128 = v8;
            unsigned int v143 = v9[2] - v140;
            v9[2] = v143;
            if (v143) {
              goto LABEL_42;
            }
            continue;
          }
        }
        int v14 = (*(uint64_t (**)(uint64_t, void))(*(void *)v13 + 16))(v13, size_4);
        std::__shared_weak_count::__release_shared[abi:ne180100](v12);
        if (!v14) {
          goto LABEL_40;
        }
        uint64_t v15 = (std::__shared_weak_count *)*((void *)this + 2);
        if (v15)
        {
          uint64_t v16 = std::__shared_weak_count::lock(v15);
          if (v16)
          {
            long long v17 = v16;
            uint64_t v18 = *((void *)this + 1);
            if (v18)
            {
              int v19 = (*(uint64_t (**)(uint64_t, void))(*(void *)v18 + 24))(v18, size_4);
              std::__shared_weak_count::__release_shared[abi:ne180100](v17);
              if (v19)
              {
                std::string v20 = (char *)operator new(0x28uLL);
                long long v21 = (char *)*((void *)this + 6);
                uint64_t v22 = (char *)*((void *)this + 5);
                uint64_t v23 = v21 - v22;
                *((void *)v20 + 1) = 0;
                uint64_t v166 = (atomic_ullong *)(v20 + 8);
                *((void *)v20 + 2) = 0;
                *(void *)std::string v20 = &unk_1F08C78A8;
                *((_DWORD *)v20 + 6) = size_4;
                uint64_t v9 = (unsigned int *)(v20 + 24);
                *((_DWORD *)v20 + 7) = size;
                *((_DWORD *)v20 + 8) = size;
                BOOL v171 = (std::__shared_weak_count *)v20;
                if (v21 == v22) {
                  uint64_t v24 = 0;
                }
                else {
                  uint64_t v24 = 32 * (v21 - v22) - 1;
                }
                unint64_t v26 = *((void *)this + 8);
                uint64_t v25 = *((void *)this + 9);
                unint64_t v27 = v25 + v26;
                if (v24 != v25 + v26) {
                  goto LABEL_134;
                }
                if (v26 < 0x100)
                {
                  uint64_t v47 = v23 >> 3;
                  char v48 = (char *)*((void *)this + 7);
                  unsigned int v49 = (char *)*((void *)this + 4);
                  uint64_t v50 = v48 - v49;
                  if (v23 >> 3 >= (unint64_t)((v48 - v49) >> 3))
                  {
                    if (v48 == v49) {
                      unint64_t v51 = 1;
                    }
                    else {
                      unint64_t v51 = v50 >> 2;
                    }
                    char v52 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v51);
                    uint64_t v162 = v53;
                    unsigned int v54 = v52;
                    uint64_t v55 = &v52[8 * v47];
                    *(void *)&long long v56 = v52;
                    *((void *)&v56 + 1) = v55;
                    long long v167 = v56;
                    unint64_t v57 = operator new(0x1000uLL);
                    *(void *)&long long v58 = v55;
                    *((void *)&v58 + 1) = &v54[8 * v162];
                    uint64_t v59 = v55;
                    if (v47 == v162)
                    {
                      uint64_t v60 = v55 - v54;
                      *(void *)&long long v61 = v167;
                      if (v21 - v22 < 1)
                      {
                        unint64_t v98 = v57;
                        uint64_t v99 = v60 >> 2;
                        if (v21 == v22) {
                          unint64_t v100 = 1;
                        }
                        else {
                          unint64_t v100 = v99;
                        }
                        uint64_t v101 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v100);
                        uint64_t v59 = &v101[8 * (v100 >> 2)];
                        *(void *)&long long v61 = v101;
                        *((void *)&v61 + 1) = v59;
                        *(void *)&long long v58 = v59;
                        *((void *)&v58 + 1) = &v101[8 * v102];
                        if (v54)
                        {
                          long long v168 = v61;
                          long long v163 = v58;
                          uint64_t v103 = &v101[8 * (v100 >> 2)];
                          operator delete(v54);
                          uint64_t v59 = v103;
                          long long v58 = v163;
                          long long v61 = v168;
                        }
                        unint64_t v57 = v98;
                      }
                      else
                      {
                        uint64_t v62 = v60 >> 3;
                        if (v62 >= -1) {
                          unint64_t v63 = v62 + 1;
                        }
                        else {
                          unint64_t v63 = v62 + 2;
                        }
                        uint64_t v59 = &v55[-8 * (v63 >> 1)];
                        *(void *)&long long v58 = v59;
                        *((void *)&v61 + 1) = v59;
                      }
                    }
                    else
                    {
                      long long v61 = v167;
                    }
                    *(void *)uint64_t v59 = v57;
                    *(void *)&long long v58 = v58 + 8;
                    for (uint64_t i = *((void *)this + 6); i != *((void *)this + 5); i -= 8)
                    {
                      uint64_t v105 = (void *)*((void *)&v61 + 1);
                      if (*((void *)&v61 + 1) == (void)v61)
                      {
                        unint64_t v107 = (unsigned char *)v58;
                        if ((unint64_t)v58 >= *((void *)&v58 + 1))
                        {
                          if (*((void *)&v58 + 1) == *((void *)&v61 + 1)) {
                            unint64_t v112 = 1;
                          }
                          else {
                            unint64_t v112 = (uint64_t)(*((void *)&v58 + 1) - *((void *)&v61 + 1)) >> 2;
                          }
                          unint64_t v113 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v112);
                          uint64_t v106 = &v113[(2 * v112 + 6) & 0xFFFFFFFFFFFFFFF8];
                          unint64_t v115 = v106;
                          uint64_t v116 = v107 - (unsigned char *)v105;
                          if (v107 != (unsigned char *)v105)
                          {
                            unint64_t v115 = &v106[v116 & 0xFFFFFFFFFFFFFFF8];
                            uint64_t v117 = 8 * (v116 >> 3);
                            char v118 = v106;
                            uint64_t v119 = v105;
                            do
                            {
                              uint64_t v120 = *v119++;
                              *(void *)char v118 = v120;
                              v118 += 8;
                              v117 -= 8;
                            }
                            while (v117);
                          }
                          *(void *)&long long v61 = v113;
                          *((void *)&v61 + 1) = v106;
                          *(void *)&long long v58 = v115;
                          *((void *)&v58 + 1) = &v113[8 * v114];
                          if (v105)
                          {
                            long long v170 = v61;
                            long long v164 = v58;
                            operator delete(v105);
                            long long v58 = v164;
                            long long v61 = v170;
                          }
                        }
                        else
                        {
                          uint64_t v108 = (uint64_t)(*((void *)&v58 + 1) - v58) >> 3;
                          if (v108 >= -1) {
                            uint64_t v109 = v108 + 1;
                          }
                          else {
                            uint64_t v109 = v108 + 2;
                          }
                          uint64_t v110 = v109 >> 1;
                          uint64_t v111 = v58 + 8 * (v109 >> 1);
                          uint64_t v106 = (char *)(v111 - (v58 - *((void *)&v61 + 1)));
                          if ((void)v58 == *((void *)&v61 + 1))
                          {
                            unint64_t v107 = (unsigned char *)*((void *)&v61 + 1);
                          }
                          else
                          {
                            uint64_t v169 = v61;
                            uint64_t v165 = *((void *)&v58 + 1);
                            memmove((void *)(v111 - (v58 - *((void *)&v61 + 1))), *((const void **)&v61 + 1), v58 - *((void *)&v61 + 1));
                            *((void *)&v58 + 1) = v165;
                            *(void *)&long long v61 = v169;
                          }
                          *((void *)&v61 + 1) = v106;
                          *(void *)&long long v58 = &v107[8 * v110];
                        }
                      }
                      else
                      {
                        uint64_t v106 = (char *)*((void *)&v61 + 1);
                      }
                      uint64_t v121 = *(void *)(i - 8);
                      *((void *)v106 - 1) = v121;
                      *((void *)&v61 + 1) -= 8;
                    }
                    uint64_t v122 = (void *)*((void *)this + 4);
                    *((_OWORD *)this + 2) = v61;
                    *((_OWORD *)this + 3) = v58;
                    if (v122) {
                      operator delete(v122);
                    }
                    goto LABEL_133;
                  }
                  if (v48 == v21)
                  {
                    unint64_t v77 = operator new(0x1000uLL);
                    if (v49 == v22)
                    {
                      if (v21 == v22) {
                        unint64_t v78 = 1;
                      }
                      else {
                        unint64_t v78 = v50 >> 2;
                      }
                      unint64_t v79 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v78);
                      uint64_t v22 = &v79[(2 * v78 + 6) & 0xFFFFFFFFFFFFFFF8];
                      unint64_t v81 = (uint64_t *)*((void *)this + 5);
                      int v82 = v22;
                      uint64_t v83 = *((void *)this + 6) - (void)v81;
                      if (v83)
                      {
                        int v82 = &v22[v83 & 0xFFFFFFFFFFFFFFF8];
                        uint64_t v84 = 8 * (v83 >> 3);
                        unint64_t v85 = v22;
                        do
                        {
                          uint64_t v86 = *v81++;
                          *(void *)unint64_t v85 = v86;
                          v85 += 8;
                          v84 -= 8;
                        }
                        while (v84);
                      }
                      unint64_t v87 = (void *)*((void *)this + 4);
                      *((void *)this + 4) = v79;
                      *((void *)this + 5) = v22;
                      *((void *)this + 6) = v82;
                      *((void *)this + 7) = &v79[8 * v80];
                      if (v87)
                      {
                        operator delete(v87);
                        uint64_t v22 = (char *)*((void *)this + 5);
                      }
                    }
                    *((void *)v22 - 1) = v77;
                    uint64_t v88 = (char *)*((void *)this + 5);
                    unint64_t v89 = (char *)*((void *)this + 6);
                    *((void *)this + 5) = v88 - 8;
                    uint64_t v90 = *((void *)v88 - 1);
                    *((void *)this + 5) = v88;
                    if (v89 == *((char **)this + 7))
                    {
                      unint64_t v91 = *((void *)this + 4);
                      uint64_t v92 = (uint64_t)&v88[-v91];
                      if ((unint64_t)v88 <= v91)
                      {
                        uint64_t v144 = (uint64_t)&v89[-v91];
                        BOOL v64 = v144 == 0;
                        uint64_t v145 = v144 >> 2;
                        if (v64) {
                          unint64_t v146 = 1;
                        }
                        else {
                          unint64_t v146 = v145;
                        }
                        unint64_t v147 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v146);
                        uint64_t v149 = &v147[8 * (v146 >> 2)];
                        unint64_t v150 = (uint64_t *)*((void *)this + 5);
                        unint64_t v89 = v149;
                        uint64_t v151 = *((void *)this + 6) - (void)v150;
                        if (v151)
                        {
                          unint64_t v89 = &v149[v151 & 0xFFFFFFFFFFFFFFF8];
                          uint64_t v152 = 8 * (v151 >> 3);
                          unint64_t v153 = &v147[8 * (v146 >> 2)];
                          do
                          {
                            uint64_t v154 = *v150++;
                            *(void *)unint64_t v153 = v154;
                            v153 += 8;
                            v152 -= 8;
                          }
                          while (v152);
                        }
                        unint64_t v155 = (void *)*((void *)this + 4);
                        *((void *)this + 4) = v147;
                        *((void *)this + 5) = v149;
                        *((void *)this + 6) = v89;
                        *((void *)this + 7) = &v147[8 * v148];
                        if (v155)
                        {
                          operator delete(v155);
                          unint64_t v89 = (char *)*((void *)this + 6);
                        }
                      }
                      else
                      {
                        uint64_t v93 = v92 >> 3;
                        BOOL v34 = v92 >> 3 < -1;
                        uint64_t v94 = (v92 >> 3) + 2;
                        if (v34) {
                          uint64_t v95 = v94;
                        }
                        else {
                          uint64_t v95 = v93 + 1;
                        }
                        uint64_t v96 = &v88[-8 * (v95 >> 1)];
                        int64_t v97 = v89 - v88;
                        if (v89 != v88)
                        {
                          memmove(&v88[-8 * (v95 >> 1)], v88, v89 - v88);
                          uint64_t v88 = (char *)*((void *)this + 5);
                        }
                        unint64_t v89 = &v96[v97];
                        *((void *)this + 5) = &v88[-8 * (v95 >> 1)];
                        *((void *)this + 6) = &v96[v97];
                      }
                    }
                    *(void *)unint64_t v89 = v90;
                  }
                  else
                  {
                    *(void *)long long v21 = operator new(0x1000uLL);
                  }
                }
                else
                {
                  *((void *)this + 8) = v26 - 256;
                  uint64_t v30 = *(void *)v22;
                  char v28 = v22 + 8;
                  uint64_t v29 = v30;
                  *((void *)this + 5) = v28;
                  if (*((char **)this + 7) == v21)
                  {
                    unint64_t v31 = *((void *)this + 4);
                    uint64_t v32 = (uint64_t)&v28[-v31];
                    if ((unint64_t)v28 <= v31)
                    {
                      uint64_t v65 = (uint64_t)&v21[-v31];
                      BOOL v64 = v65 == 0;
                      uint64_t v66 = v65 >> 2;
                      if (v64) {
                        unint64_t v67 = 1;
                      }
                      else {
                        unint64_t v67 = v66;
                      }
                      BOOL v68 = (char *)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v67);
                      uint64_t v70 = &v68[8 * (v67 >> 2)];
                      uint64_t v71 = (uint64_t *)*((void *)this + 5);
                      long long v21 = v70;
                      uint64_t v72 = *((void *)this + 6) - (void)v71;
                      if (v72)
                      {
                        long long v21 = &v70[v72 & 0xFFFFFFFFFFFFFFF8];
                        uint64_t v73 = 8 * (v72 >> 3);
                        uint64_t v74 = &v68[8 * (v67 >> 2)];
                        do
                        {
                          uint64_t v75 = *v71++;
                          *(void *)uint64_t v74 = v75;
                          v74 += 8;
                          v73 -= 8;
                        }
                        while (v73);
                      }
                      uint64_t v76 = (void *)*((void *)this + 4);
                      *((void *)this + 4) = v68;
                      *((void *)this + 5) = v70;
                      *((void *)this + 6) = v21;
                      *((void *)this + 7) = &v68[8 * v69];
                      if (v76)
                      {
                        operator delete(v76);
                        long long v21 = (char *)*((void *)this + 6);
                      }
                    }
                    else
                    {
                      uint64_t v33 = v32 >> 3;
                      BOOL v34 = v32 >> 3 < -1;
                      uint64_t v35 = (v32 >> 3) + 2;
                      if (v34) {
                        uint64_t v36 = v35;
                      }
                      else {
                        uint64_t v36 = v33 + 1;
                      }
                      id v37 = &v28[-8 * (v36 >> 1)];
                      int64_t v38 = v21 - v28;
                      if (v21 == v28)
                      {
                        long long v39 = v21;
                      }
                      else
                      {
                        memmove(&v28[-8 * (v36 >> 1)], v28, v21 - v28);
                        int64_t v38 = v21 - v28;
                        long long v39 = (char *)*((void *)this + 5);
                      }
                      long long v21 = &v37[v38];
                      *((void *)this + 5) = &v39[-8 * (v36 >> 1)];
                      *((void *)this + 6) = &v37[v38];
                    }
                  }
                  *(void *)long long v21 = v29;
                }
                *((void *)this + 6) += 8;
LABEL_133:
                uint64_t v22 = (char *)*((void *)this + 5);
                uint64_t v25 = *((void *)this + 9);
                unint64_t v27 = v25 + *((void *)this + 8);
LABEL_134:
                *(void *)&long long v123 = v9;
                *((void *)&v123 + 1) = v171;
                *(_OWORD *)(*(void *)&v22[(v27 >> 5) & 0x7FFFFFFFFFFFFF8] + 16 * v27) = v123;
                atomic_fetch_add_explicit(v166, 1uLL, memory_order_relaxed);
                *((void *)this + 9) = v25 + 1;
                atomic_fetch_add_explicit(v166, 1uLL, memory_order_relaxed);
                if (v8) {
                  std::__shared_weak_count::__release_shared[abi:ne180100](v8);
                }
                unint64_t v124 = (std::__shared_weak_count *)*((void *)this + 2);
                if (v124)
                {
                  unint64_t v125 = std::__shared_weak_count::lock(v124);
                  if (v125)
                  {
                    unint64_t v126 = v125;
                    uint64_t v127 = *((void *)this + 1);
                    if (v127) {
                      (*(void (**)(uint64_t, void, void))(*(void *)v127 + 32))(v127, size_4, size);
                    }
                    std::__shared_weak_count::__release_shared[abi:ne180100](v126);
                  }
                }
                char v8 = v171;
                std::__shared_weak_count::__release_shared[abi:ne180100](v171);
LABEL_142:
                if (!v9[2]) {
                  goto LABEL_143;
                }
                goto LABEL_42;
              }
            }
            else
            {
              std::__shared_weak_count::__release_shared[abi:ne180100](v17);
            }
          }
        }
        long long v42 = malloc_type_malloc(size, 0x9BD58CF0uLL);
        if (v42)
        {
          std::istream::read();
          if (*(void *)(*(void *)this + 8) == size)
          {
            if (v9) {
              v9[2] -= size;
            }
            long long v43 = (std::__shared_weak_count *)*((void *)this + 2);
            if (v43)
            {
              long long v44 = std::__shared_weak_count::lock(v43);
              if (v44)
              {
                uint64_t v45 = v44;
                uint64_t v46 = *((void *)this + 1);
                if (v46) {
                  (*(void (**)(uint64_t, void, void *, void))(*(void *)v46 + 40))(v46, size_4, v42, size);
                }
                std::__shared_weak_count::__release_shared[abi:ne180100](v45);
              }
            }
            free(v42);
            if (!v9) {
              goto LABEL_42;
            }
            goto LABEL_142;
          }
          free(v42);
        }
      }
    }
    *((_DWORD *)this + 7) = 4;
    int v41 = 2;
    if (v8) {
      goto LABEL_58;
    }
  }
  while (!v41 && (*(unsigned char *)(*(void *)this + *(void *)(**(void **)this - 24) + 32) & 2) == 0);
  if (*((_DWORD *)this + 7) == 1)
  {
    int v156 = 2;
LABEL_178:
    *((_DWORD *)this + 7) = v156;
  }
  uint64_t v157 = (std::__shared_weak_count *)*((void *)this + 2);
  if (v157)
  {
    uint64_t v158 = std::__shared_weak_count::lock(v157);
    if (v158)
    {
      unint64_t v159 = v158;
      uint64_t v160 = *((void *)this + 1);
      if (v160) {
        (*(void (**)(uint64_t, void))(*(void *)v160 + 8))(v160, *((unsigned int *)this + 7));
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v159);
    }
  }
}

void sub_1B0308BB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, long long a15, std::__shared_weak_count *a16)
{
  operator delete(v17);
  if ((void)a15) {
    operator delete((void *)a15);
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<ML3CPP::Parser::ParserContainer>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C78A8;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void std::__shared_ptr_emplace<ML3CPP::Parser::ParserContainer>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C78A8;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1B03091E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t MIPLibraryIdentifierReadFrom(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (int *)MEMORY[0x1E4F940E8];
  unsigned int v4 = (int *)MEMORY[0x1E4F940E0];
  id v5 = (int *)MEMORY[0x1E4F940C8];
  if (*(void *)(a2 + (int)*MEMORY[0x1E4F940E8]) < *(void *)(a2 + (int)*MEMORY[0x1E4F940E0]))
  {
    uint64_t v7 = (int *)MEMORY[0x1E4F940B8];
    do
    {
      if (*(unsigned char *)(a2 + *v5)) {
        break;
      }
      char v8 = 0;
      unsigned int v9 = 0;
      unint64_t v10 = 0;
      while (1)
      {
        uint64_t v11 = *v3;
        unint64_t v12 = *(void *)(a2 + v11);
        if (v12 == -1 || v12 >= *(void *)(a2 + *v4)) {
          break;
        }
        char v13 = *(unsigned char *)(*(void *)(a2 + *v7) + v12);
        *(void *)(a2 + v11) = v12 + 1;
        v10 |= (unint64_t)(v13 & 0x7F) << v8;
        if ((v13 & 0x80) == 0) {
          goto LABEL_12;
        }
        v8 += 7;
        BOOL v14 = v9++ >= 9;
        if (v14)
        {
          unint64_t v10 = 0;
          int v15 = *(unsigned __int8 *)(a2 + *v5);
          goto LABEL_14;
        }
      }
      *(unsigned char *)(a2 + *v5) = 1;
LABEL_12:
      int v15 = *(unsigned __int8 *)(a2 + *v5);
      if (*(unsigned char *)(a2 + *v5)) {
        unint64_t v10 = 0;
      }
LABEL_14:
      if (v15 || (v10 & 7) == 4) {
        break;
      }
      if ((v10 >> 3) == 2)
      {
        char v19 = 0;
        unsigned int v20 = 0;
        uint64_t v21 = 0;
        *(unsigned char *)(a1 + 24) |= 1u;
        while (1)
        {
          uint64_t v22 = *v3;
          unint64_t v23 = *(void *)(a2 + v22);
          if (v23 == -1 || v23 >= *(void *)(a2 + *v4)) {
            break;
          }
          char v24 = *(unsigned char *)(*(void *)(a2 + *v7) + v23);
          *(void *)(a2 + v22) = v23 + 1;
          v21 |= (unint64_t)(v24 & 0x7F) << v19;
          if ((v24 & 0x80) == 0) {
            goto LABEL_31;
          }
          v19 += 7;
          BOOL v14 = v20++ >= 9;
          if (v14)
          {
            uint64_t v21 = 0;
            goto LABEL_33;
          }
        }
        *(unsigned char *)(a2 + *v5) = 1;
LABEL_31:
        if (*(unsigned char *)(a2 + *v5)) {
          uint64_t v21 = 0;
        }
LABEL_33:
        *(void *)(a1 + 8) = v21;
      }
      else if ((v10 >> 3) == 1)
      {
        uint64_t v17 = PBReaderReadString();
        uint64_t v18 = *(void **)(a1 + 16);
        *(void *)(a1 + 16) = v17;
      }
      else
      {
        uint64_t result = PBReaderSkipValueWithTag();
        if (!result) {
          return result;
        }
      }
    }
    while (*(void *)(a2 + *v3) < *(void *)(a2 + *v4));
  }
  return *(unsigned char *)(a2 + *v5) == 0;
}

uint64_t ML3ItemStoreDatabaseImportDataSource::getDatabaseTableSchemaClass(ML3ItemStoreDatabaseImportDataSource *this)
{
  return objc_opt_class();
}

uint64_t ML3ItemStoreDatabaseImportDataSource::getImportPropertyGroupKey(ML3ItemStoreDatabaseImportDataSource *this)
{
  return 6;
}

void ML3ItemStoreDatabaseImportDataSource::~ML3ItemStoreDatabaseImportDataSource(id *this)
{
  ML3DatabaseImportDataSource::~ML3DatabaseImportDataSource(this);

  JUMPOUT(0x1B3E93610);
}

uint64_t ML3LogCopyCategoryDefaultsKey(void *a1, int a2)
{
  if (a2) {
    unint64_t v2 = @"ConsoleLoggingLevel";
  }
  else {
    unint64_t v2 = @"LogFileLoggingLevel";
  }
  [a1 stringByAppendingString:v2];
  return objc_claimAutoreleasedReturnValue();
}

void MLSetSQLiteAutoTraceEnabled(char a1)
{
  v1[0] = MEMORY[0x1E4F143A8];
  v1[1] = 3221225472;
  v1[2] = __MLSetSQLiteAutoTraceEnabled_block_invoke;
  v1[3] = &__block_descriptor_33_e5_v8__0l;
  char v2 = a1;
  _MLDispatchToSerialQueue(0, v1);
}

__CFString *MLSQLiteExtendedResultString(int a1)
{
  if (a1 > 2313)
  {
    if (a1 <= 3337)
    {
      if (a1 > 2825)
      {
        if (a1 == 2826) {
          return @"SQLITE_IOERR_BLOCKED";
        }
        if (a1 == 3082) {
          return @"SQLITE_IOERR_NOMEM";
        }
      }
      else
      {
        if (a1 == 2314) {
          return @"SQLITE_IOERR_RDLOCK";
        }
        if (a1 == 2570) {
          return @"SQLITE_IOERR_DELETE";
        }
      }
    }
    else if (a1 <= 3849)
    {
      if (a1 == 3338) {
        return @"SQLITE_IOERR_ACCESS";
      }
      if (a1 == 3594) {
        return @"SQLITE_IOERR_CHECKRESERVEDLOCK";
      }
    }
    else
    {
      switch(a1)
      {
        case 3850:
          return @"SQLITE_IOERR_LOCK";
        case 4106:
          return @"SQLITE_IOERR_CLOSE";
        case 4362:
          return @"SQLITE_IOERR_DIR_CLOSE";
      }
    }
  }
  else if (a1 <= 1033)
  {
    if (a1 > 521)
    {
      if (a1 == 522) {
        return @"SQLITE_IOERR_SHORT_READ";
      }
      if (a1 == 778) {
        return @"SQLITE_IOERR_WRITE";
      }
    }
    else
    {
      if (a1 == 262) {
        return @"SQLITE_LOCKED_SHAREDCACHE";
      }
      if (a1 == 266) {
        return @"SQLITE_IOERR_READ";
      }
    }
  }
  else if (a1 <= 1545)
  {
    if (a1 == 1034) {
      return @"SQLITE_IOERR_FSYNC";
    }
    if (a1 == 1290) {
      return @"SQLITE_IOERR_DIR_FSYNC";
    }
  }
  else
  {
    switch(a1)
    {
      case 1546:
        return @"SQLITE_IOERR_TRUNCATE";
      case 1802:
        return @"SQLITE_IOERR_FSTAT";
      case 2058:
        return @"SQLITE_IOERR_UNLOCK";
    }
  }
  return @"Unknown";
}

void ML3LogSQLiteProfilingMessage(void *a1)
{
  id v1 = a1;
  v3[0] = MEMORY[0x1E4F143A8];
  v3[1] = 3221225472;
  _DWORD v3[2] = __ML3LogSQLiteProfilingMessage_block_invoke;
  v3[3] = &unk_1E5FB8298;
  id v4 = v1;
  id v2 = v1;
  _MLDispatchToSerialQueue(1, v3);
}

void __ML3LogSQLiteProfilingMessage_block_invoke(uint64_t a1)
{
  if (!__MLProfileLogFileHandle)
  {
    id v2 = +[ML3MusicLibrary pathForResourceFileOrFolder:24];
    uint64_t v3 = [v2 stringByAppendingPathComponent:@"medialibrary_sqlite.log"];
    id v4 = [MEMORY[0x1E4F28CB8] defaultManager];
    if (([v4 fileExistsAtPath:v3 isDirectory:0] & 1) == 0)
    {
      id v5 = [v3 stringByDeletingLastPathComponent];
      if (([v4 fileExistsAtPath:v5 isDirectory:0] & 1) == 0) {
        [v4 createDirectoryAtPath:v5 withIntermediateDirectories:1 attributes:0 error:0];
      }
      [v4 createFileAtPath:v3 contents:0 attributes:0];
    }
    uint64_t v6 = [MEMORY[0x1E4F28CB0] fileHandleForWritingAtPath:v3];

    uint64_t v7 = (void *)__MLProfileLogFileHandle;
    __MLProfileLogFileHandle = v6;
  }
  id v10 = [NSString stringWithFormat:@"%@\n", *(void *)(a1 + 32)];
  objc_msgSend((id)__MLProfileLogFileHandle, "ml_lock");
  [(id)__MLProfileLogFileHandle seekToEndOfFile];
  char v8 = (void *)__MLProfileLogFileHandle;
  unsigned int v9 = [v10 dataUsingEncoding:4];
  [v8 writeData:v9];

  objc_msgSend((id)__MLProfileLogFileHandle, "ml_unlock");
}

void sub_1B030AD08(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030B8B8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12, std::__shared_weak_count *a13, void *a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29,uint64_t a30,int a31,__int16 a32,char a33,char a34,uint64_t a35,void *__p,uint64_t a37,int a38,__int16 a39,char a40,char a41)
{
  uint64_t v45 = *(std::__shared_weak_count **)(v43 - 160);
  if (v45) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v45);
  }
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }
  if (a41 < 0) {
    operator delete(__p);
  }
  if (*(char *)(v43 - 105) < 0) {
    operator delete(*(void **)(v43 - 128));
  }
  if (a13) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a13);
  }

  if (v42) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v42);
  }
  if (v41) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v41);
  }
  _Unwind_Resume(a1);
}

void sub_1B030CAC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,int a21,__int16 a22,char a23,char a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,void *__p,uint64_t a33,int a34,__int16 a35,char a36,char a37,uint64_t a38,void *a39,uint64_t a40,int a41,__int16 a42,char a43,char a44,uint64_t a45,uint64_t a46)
{
  *(void *)(v50 - 176) = &unk_1F08C3230;
  if (*(char *)(v50 - 137) < 0) {
    operator delete(*(void **)(v50 - 160));
  }
  if (v48 < 0) {
    operator delete(v49);
  }
  if (a37 < 0) {
    operator delete(__p);
  }
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }

  if (*(char *)(v50 - 105) < 0) {
    operator delete(*(void **)(v50 - 128));
  }
  if (v47) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v47);
  }
  if (v46) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v46);
  }
  _Unwind_Resume(a1);
}

void sub_1B030D048(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030D37C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, std::__shared_weak_count *a18)
{
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  if (a18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a18);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030DA2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  _Unwind_Resume(a1);
}

void sub_1B030DF1C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, std::__shared_weak_count *a10)
{
  if (v10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
  }
  if (a10) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a10);
  }
  _Unwind_Resume(a1);
}

void sub_1B030E0B0(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, std::__shared_weak_count *a14)
{
  if (v14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
  }
  if (a14) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a14);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030E264(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPContainerDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPContainerDeleteImportItem>,std::allocator<ML3DAAPContainerDeleteImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI23ML3DAAPDeleteImportItemE27__shared_ptr_default_deleteIS1_32ML3DAAPContainerDeleteImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPContainerDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPContainerDeleteImportItem>,std::allocator<ML3DAAPContainerDeleteImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPContainerDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPContainerDeleteImportItem>,std::allocator<ML3DAAPContainerDeleteImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B030E5FC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__p, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  if (v18) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v18);
  }
  uint64_t v21 = *(std::__shared_weak_count **)(v19 - 56);
  if (v21) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v21);
  }
  _Unwind_Resume(a1);
}

void sub_1B030E93C(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPDeleteImportItem>,std::allocator<ML3DAAPDeleteImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI23ML3DAAPDeleteImportItemE27__shared_ptr_default_deleteIS1_S1_EE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPDeleteImportItem>,std::allocator<ML3DAAPDeleteImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPDeleteImportItem *,std::shared_ptr<ML3DAAPDeleteImportItem>::__shared_ptr_default_delete<ML3DAAPDeleteImportItem,ML3DAAPDeleteImportItem>,std::allocator<ML3DAAPDeleteImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B030EC24(_Unwind_Exception *exception_object)
{
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030EE6C(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, std::__shared_weak_count *a16)
{
  if (v16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v16);
  }
  if (a16) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a16);
  }
  _Unwind_Resume(exception_object);
}

void sub_1B030F3A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, ...)
{
  va_start(va, a4);
  std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  std::ifstream::~ifstream((uint64_t *)va);

  _Unwind_Resume(a1);
}

uint64_t *std::ifstream::basic_ifstream(uint64_t *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA460] + 64;
  a1[53] = MEMORY[0x1E4FBA460] + 64;
  uint64_t v3 = a1 + 2;
  uint64_t v4 = *(void *)(MEMORY[0x1E4FBA3F8] + 16);
  uint64_t v5 = *(void *)(MEMORY[0x1E4FBA3F8] + 8);
  *a1 = v5;
  *(uint64_t *)((char *)a1 + *(void *)(v5 - 24)) = v4;
  a1[1] = 0;
  uint64_t v6 = (std::ios_base *)((char *)a1 + *(void *)(*a1 - 24));
  std::ios_base::init(v6, a1 + 2);
  uint64_t v7 = MEMORY[0x1E4FBA460] + 24;
  v6[1].__vftable = 0;
  v6[1].__fmtflags_ = -1;
  *a1 = v7;
  a1[53] = v2;
  MEMORY[0x1B3E93420](v3);
  if (!std::filebuf::open()) {
    std::ios_base::clear((std::ios_base *)((char *)a1 + *(void *)(*a1 - 24)), *(_DWORD *)((char *)a1 + *(void *)(*a1 - 24) + 32) | 4);
  }
  return a1;
}

void sub_1B030F568(_Unwind_Exception *a1)
{
  std::istream::~istream();
  MEMORY[0x1B3E935B0](v1);
  _Unwind_Resume(a1);
}

void *std::ifstream::~ifstream(void *a1)
{
  uint64_t v2 = MEMORY[0x1E4FBA3F8];
  uint64_t v3 = *MEMORY[0x1E4FBA3F8];
  *a1 = *MEMORY[0x1E4FBA3F8];
  *(void *)((char *)a1 + *(void *)(v3 - 24)) = *(void *)(v2 + 24);
  MEMORY[0x1B3E93430](a1 + 2);
  std::istream::~istream();
  MEMORY[0x1B3E935B0](a1 + 53);
  return a1;
}

uint64_t DAAPParserDelegate::DAAPParserDelegate(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  *(void *)a1 = &unk_1F08C3380;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = a3[1];
  *(void *)(a1 + 16) = *a3;
  *(void *)(a1 + 24) = v6;
  if (v6) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v6 + 16), 1uLL, memory_order_relaxed);
  }
  *(void *)(a1 + 80) = 0;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_DWORD *)(a1 + 88) = 1633968755;
  *(_WORD *)(a1 + 92) = 0;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 1065353216;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 168) = 0;
  return a1;
}

void DAAPParserDelegate::DAAPParserDidEndContainer(DAAPParserDelegate *this, int a2)
{
  uint64_t v87 = *MEMORY[0x1E4F143B8];
  if (a2 != 1936749167)
  {
    if (a2 != 1835821428)
    {
      if (a2 == 1634759535) {
        *((unsigned char *)this + 92) = 0;
      }
      int v4 = 1;
      goto LABEL_78;
    }
    uint64_t v5 = *((void *)this + 6);
    uint64_t v6 = *(std::__shared_weak_count **)(v5 + 32);
    if (v6)
    {
      uint64_t v7 = *(void *)(v5 + 24);
      atomic_fetch_add_explicit(&v6->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      char v8 = std::__shared_weak_count::lock(v6);
      std::__shared_weak_count::__release_weak(v6);
      if (v8) {
        BOOL v9 = v7 == 0;
      }
      else {
        BOOL v9 = 1;
      }
      if (!v9)
      {
        while (1)
        {
          if (*(_DWORD *)(v7 + 16) == 1835821428)
          {
            if (*((unsigned char *)this + 92))
            {
              uint64_t v6 = v8;
LABEL_14:
              std::unordered_set<std::string>::unordered_set((uint64_t)buf, (uint64_t)this + 128);
              unint64_t v10 = *((void *)this + 22);
              if (v10 >= *((void *)this + 23))
              {
                uint64_t v11 = std::vector<std::unordered_set<std::string>>::__push_back_slow_path<std::unordered_set<std::string> const&>((uint64_t *)this + 21, (uint64_t)buf);
              }
              else
              {
                std::unordered_set<std::string>::unordered_set(*((void *)this + 22), (uint64_t)buf);
                uint64_t v11 = v10 + 40;
                *((void *)this + 22) = v10 + 40;
              }
              *((void *)this + 22) = v11;
              if (*((void *)this + 19))
              {
                std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(*((void ***)this + 18));
                *((void *)this + 18) = 0;
                uint64_t v22 = *((void *)this + 17);
                if (v22)
                {
                  for (uint64_t i = 0; i != v22; ++i)
                    *(void *)(*((void *)this + 16) + 8 * i) = 0;
                }
                *((void *)this + 19) = 0;
              }
              std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__deallocate_node(v86);
              char v24 = *(void **)buf;
              *(void *)buf = 0;
              if (v24) {
                operator delete(v24);
              }
              int v4 = 1;
            }
            else
            {
              int v4 = 1;
              uint64_t v6 = v8;
            }
LABEL_75:
            if (v6)
            {
              BOOL v14 = v6;
              goto LABEL_77;
            }
            goto LABEL_78;
          }
          uint64_t v21 = *(std::__shared_weak_count **)(v7 + 32);
          if (v21)
          {
            uint64_t v7 = *(void *)(v7 + 24);
            atomic_fetch_add_explicit(&v21->__shared_weak_owners_, 1uLL, memory_order_relaxed);
            uint64_t v6 = std::__shared_weak_count::lock(v21);
            if (!v6) {
              uint64_t v7 = 0;
            }
            if (!v8) {
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v7 = 0;
            uint64_t v6 = 0;
            if (!v8) {
              goto LABEL_33;
            }
          }
          std::__shared_weak_count::__release_shared[abi:ne180100](v8);
LABEL_33:
          if (v21) {
            std::__shared_weak_count::__release_weak(v21);
          }
          char v8 = v6;
          if (!v7) {
            goto LABEL_13;
          }
        }
      }
      uint64_t v6 = v8;
    }
LABEL_13:
    if (*((unsigned char *)this + 92)) {
      goto LABEL_14;
    }
    int v15 = (void *)MEMORY[0x1B3E93C70]();
    int v16 = *((_DWORD *)this + 22);
    if (v16 == 1634757753)
    {
      uint64_t v25 = (void *)*((void *)this + 1);
      unint64_t v26 = (std::__shared_weak_count *)*((void *)this + 7);
      uint64_t v63 = *((void *)this + 6);
      BOOL v64 = v26;
      if (v26) {
        atomic_fetch_add_explicit(&v26->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      std::string __p = 0;
      long long v61 = 0;
      uint64_t v62 = 0;
      std::vector<long long>::__init_with_size[abi:ne180100]<long long *,long long *>(&__p, *((const void **)this + 13), *((void *)this + 14), (uint64_t)(*((void *)this + 14) - *((void *)this + 13)) >> 3);
      memset(v59, 0, sizeof(v59));
      std::vector<std::unordered_set<std::string>>::__init_with_size[abi:ne180100]<std::unordered_set<std::string>*,std::unordered_set<std::string>*>((uint64_t)v59, *((void *)this + 21), *((void *)this + 22), 0xCCCCCCCCCCCCCCCDLL * ((uint64_t)(*((void *)this + 22) - *((void *)this + 21)) >> 3));
      int v4 = [v25 _processContainerElement:&v63 withTrackIds:&__p trackPersonIdentifiers:v59];
      *(void *)buf = v59;
      std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)buf);
      if (__p)
      {
        long long v61 = __p;
        operator delete(__p);
      }
      if (v64) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v64);
      }
      *((void *)this + 14) = *((void *)this + 13);
      uint64_t v28 = *((void *)this + 21);
      for (uint64_t j = *((void *)this + 22);
            j != v28;
      *((void *)this + 22) = v28;
      goto LABEL_74;
    }
    if (v16 == 1633968755)
    {
      if (_os_feature_enabled_impl())
      {
        uint64_t v79 = 0;
        [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
        double v18 = v17;
        uint64_t v19 = (void *)*((void *)this + 1);
        unsigned int v20 = (std::__shared_weak_count *)*((void *)this + 7);
        uint64_t v77 = *((void *)this + 6);
        unint64_t v78 = v20;
        if (v20) {
          atomic_fetch_add_explicit(&v20->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        if (v19)
        {
          [v19 _trackImportItemWithTrackElement:&v77];
        }
        else
        {
          *(void *)buf = 0;
          unint64_t v85 = 0;
        }
        if (v78) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v78);
        }
        uint64_t v46 = (void *)*((void *)this + 1);
        uint64_t v47 = (std::__shared_weak_count *)*((void *)this + 7);
        uint64_t v75 = *((void *)this + 6);
        uint64_t v76 = v47;
        if (v47) {
          atomic_fetch_add_explicit(&v47->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        uint64_t v73 = *(void **)buf;
        uint64_t v74 = v85;
        if (v85) {
          atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        int v4 = [v46 _processArtistFromTrackElement:&v75 importItem:&v73 albumArtistPersistentID:&v79];
        if (v74) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v74);
        }
        if (v76) {
          std::__shared_weak_count::__release_shared[abi:ne180100](v76);
        }
        if (v4)
        {
          int v48 = (void *)*((void *)this + 1);
          unsigned int v49 = (std::__shared_weak_count *)*((void *)this + 7);
          uint64_t v71 = *((void *)this + 6);
          uint64_t v72 = v49;
          if (v49) {
            atomic_fetch_add_explicit(&v49->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v69 = *(void **)buf;
          uint64_t v70 = v85;
          if (v85) {
            atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          int v4 = [v48 _processAlbumFromTrackElement:&v71 importItem:&v69 albumArtistPersistentID:v79];
          if (v70) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v70);
          }
          if (v72)
          {
            std::__shared_weak_count::__release_shared[abi:ne180100](v72);
            if ((v4 & 1) == 0)
            {
              int v4 = 0;
              goto LABEL_129;
            }
          }
          else if (!v4)
          {
            goto LABEL_129;
          }
          uint64_t v50 = (void *)*((void *)this + 1);
          unint64_t v67 = *(void **)buf;
          BOOL v68 = v85;
          if (v85) {
            atomic_fetch_add_explicit(&v85->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          int v4 = [v50 _processTrackImportItem:&v67];
          if (v68) {
            std::__shared_weak_count::__release_shared[abi:ne180100](v68);
          }
        }
LABEL_129:
        unint64_t v51 = _ML3LogCategoryDefault();
        if (os_log_type_enabled(v51, OS_LOG_TYPE_DEFAULT))
        {
          [MEMORY[0x1E4F1C9C8] timeIntervalSinceReferenceDate];
          *(_DWORD *)int v82 = 134217984;
          double v83 = v52 - v18;
          _os_log_impl(&dword_1B022D000, v51, OS_LOG_TYPE_DEFAULT, "Import Metrics: Finished Processing Track Data Import in %2f seconds", v82, 0xCu);
        }

        uint64_t v32 = v85;
        if (!v85) {
          goto LABEL_74;
        }
        goto LABEL_73;
      }
      uint64_t v33 = (void *)*((void *)this + 1);
      BOOL v34 = (std::__shared_weak_count *)*((void *)this + 7);
      uint64_t v65 = *((void *)this + 6);
      uint64_t v66 = v34;
      if (v34) {
        atomic_fetch_add_explicit(&v34->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      int v4 = [v33 _processTrackElement:&v65];
      uint64_t v32 = v66;
      if (!v66) {
        goto LABEL_74;
      }
LABEL_73:
      std::__shared_weak_count::__release_shared[abi:ne180100](v32);
      goto LABEL_74;
    }
    if (_os_feature_enabled_impl()
      && [*((id *)this + 1) _getTrackSource] == 2)
    {
      int v29 = *((_DWORD *)this + 22);
      if (v29 == 1634165106)
      {
        uint64_t v53 = (void *)*((void *)this + 1);
        unsigned int v54 = (std::__shared_weak_count *)*((void *)this + 7);
        uint64_t v55 = *((void *)this + 6);
        long long v56 = v54;
        if (v54) {
          atomic_fetch_add_explicit(&v54->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        int v4 = [v53 _processAlbumArtistFromArtistElement:&v55];
        uint64_t v32 = v56;
        if (!v56) {
          goto LABEL_74;
        }
        goto LABEL_73;
      }
      if (v29 == 1634165100)
      {
        uint64_t v30 = (void *)*((void *)this + 1);
        unint64_t v31 = (std::__shared_weak_count *)*((void *)this + 7);
        uint64_t v57 = *((void *)this + 6);
        long long v58 = v31;
        if (v31) {
          atomic_fetch_add_explicit(&v31->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        int v4 = [v30 _processAlbumFromAlbumElement:&v57];
        uint64_t v32 = v58;
        if (!v58) {
          goto LABEL_74;
        }
        goto LABEL_73;
      }
    }
    int v4 = 1;
LABEL_74:
    goto LABEL_75;
  }
  unint64_t v12 = (void *)*((void *)this + 1);
  char v13 = (std::__shared_weak_count *)*((void *)this + 7);
  uint64_t v80 = *((void *)this + 6);
  unint64_t v81 = v13;
  if (v13) {
    atomic_fetch_add_explicit(&v13->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  int v4 = [v12 _processPersonElement:&v80];
  BOOL v14 = v81;
  if (v81) {
LABEL_77:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v14);
LABEL_78:
  uint64_t v35 = *((void *)this + 6);
  if (v35 && *(_DWORD *)(v35 + 16) == a2)
  {
    uint64_t v36 = *(std::__shared_weak_count **)(v35 + 32);
    if (v36)
    {
      uint64_t v37 = *(void *)(v35 + 24);
      char v38 = 1;
      atomic_fetch_add_explicit(&v36->__shared_weak_owners_, 1uLL, memory_order_relaxed);
      long long v39 = std::__shared_weak_count::lock(v36);
      std::__shared_weak_count::__release_weak(v36);
      if (v39)
      {
        char v38 = 0;
        atomic_fetch_add_explicit(&v39->__shared_owners_, 1uLL, memory_order_relaxed);
      }
      else
      {
        uint64_t v37 = 0;
      }
    }
    else
    {
      uint64_t v37 = 0;
      long long v39 = 0;
      char v38 = 1;
    }
    unsigned int v40 = (std::__shared_weak_count *)*((void *)this + 7);
    *((void *)this + 6) = v37;
    *((void *)this + 7) = v39;
    if (v40)
    {
      std::__shared_weak_count::__release_shared[abi:ne180100](v40);
      uint64_t v37 = *((void *)this + 6);
    }
    if (v37)
    {
      *((_DWORD *)this + 20) = *(_DWORD *)(v37 + 16);
    }
    else
    {
      *((_DWORD *)this + 20) = 0;
      int v41 = (std::__shared_weak_count *)*((void *)this + 5);
      *((void *)this + 4) = 0;
      *((void *)this + 5) = 0;
      if (v41) {
        std::__shared_weak_count::__release_shared[abi:ne180100](v41);
      }
    }
    if ((v38 & 1) == 0) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v39);
    }
  }
  if (!v4 || [*((id *)this + 1) isCancelled])
  {
    long long v42 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v42, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 67109120;
      *(_DWORD *)&uint8_t buf[4] = v4;
      _os_log_impl(&dword_1B022D000, v42, OS_LOG_TYPE_DEFAULT, "DAAP import success=%d. Cancelling parse operation.", buf, 8u);
    }

    uint64_t v43 = (std::__shared_weak_count *)*((void *)this + 3);
    if (v43)
    {
      long long v44 = std::__shared_weak_count::lock(v43);
      if (v44)
      {
        uint64_t v45 = *((void *)this + 2);
        if (v45) {
          *(unsigned char *)(v45 + 24) = 1;
        }
        std::__shared_weak_count::__release_shared[abi:ne180100](v44);
      }
    }
  }
}

void sub_1B030FE88(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, std::__shared_weak_count *a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35)
{
  if (a11) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a11);
  }
  if (v35) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::vector<std::unordered_set<std::string>>::__push_back_slow_path<std::unordered_set<std::string> const&>(uint64_t *a1, uint64_t a2)
{
  unint64_t v2 = 0xCCCCCCCCCCCCCCCDLL * ((a1[1] - *a1) >> 3);
  unint64_t v3 = v2 + 1;
  if (v2 + 1 > 0x666666666666666) {
    std::vector<long long>::__throw_length_error[abi:ne180100]();
  }
  uint64_t v6 = a1 + 2;
  if (0x999999999999999ALL * ((a1[2] - *a1) >> 3) > v3) {
    unint64_t v3 = 0x999999999999999ALL * ((a1[2] - *a1) >> 3);
  }
  if (0xCCCCCCCCCCCCCCCDLL * ((a1[2] - *a1) >> 3) >= 0x333333333333333) {
    unint64_t v7 = 0x666666666666666;
  }
  else {
    unint64_t v7 = v3;
  }
  uint64_t v19 = v6;
  if (v7) {
    unint64_t v7 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<std::unordered_set<std::string>>>(v7);
  }
  else {
    uint64_t v8 = 0;
  }
  unint64_t v16 = v7;
  v17.i64[0] = v7 + 40 * v2;
  v17.i64[1] = v17.i64[0];
  unint64_t v18 = v7 + 40 * v8;
  std::unordered_set<std::string>::unordered_set(v17.i64[0], a2);
  unint64_t v10 = (uint64_t *)*a1;
  BOOL v9 = (uint64_t *)a1[1];
  uint64_t v12 = v17.i64[0];
  uint64_t v11 = v17.i64[0];
  if (v9 == (uint64_t *)*a1)
  {
    int64x2_t v13 = vdupq_n_s64((unint64_t)v9);
  }
  else
  {
    do
    {
      v9 -= 5;
      uint64_t v11 = std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__hash_table(v11 - 40, v9);
    }
    while (v9 != v10);
    int64x2_t v13 = *(int64x2_t *)a1;
  }
  *a1 = v11;
  a1[1] = v12 + 40;
  int64x2_t v17 = v13;
  unint64_t v14 = a1[2];
  a1[2] = v18;
  unint64_t v18 = v14;
  unint64_t v16 = v13.i64[0];
  std::__split_buffer<std::unordered_set<std::string>>::~__split_buffer((uint64_t)&v16);
  return v12 + 40;
}

void sub_1B03100E0(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__split_buffer<std::unordered_set<std::string>>::~__split_buffer((uint64_t)va);
  _Unwind_Resume(a1);
}

uint64_t std::__split_buffer<std::unordered_set<std::string>>::~__split_buffer(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 8);
  for (uint64_t i = *(void *)(a1 + 16); i != v3; uint64_t i = *(void *)(a1 + 16))
  {
    *(void *)(a1 + 16) = i - 40;
    std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(i - 40);
  }
  if (*(void *)a1) {
    operator delete(*(void **)a1);
  }
  return a1;
}

uint64_t std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__hash_table(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a2 = 0;
  *(void *)uint64_t result = v2;
  *(void *)(result + 8) = a2[1];
  a2[1] = 0;
  uint64_t v5 = a2[2];
  uint64_t v3 = a2 + 2;
  uint64_t v4 = v5;
  *(void *)(result + 16) = v5;
  uint64_t v6 = v3[1];
  *(void *)(result + 24) = v6;
  *(_DWORD *)(result + 32) = *((_DWORD *)v3 + 4);
  if (v6)
  {
    unint64_t v7 = *(void *)(v4 + 8);
    unint64_t v8 = *(void *)(result + 8);
    if ((v8 & (v8 - 1)) != 0)
    {
      if (v7 >= v8) {
        v7 %= v8;
      }
    }
    else
    {
      v7 &= v8 - 1;
    }
    *(void *)(v2 + 8 * v7) = result + 16;
    void *v3 = 0;
    v3[1] = 0;
  }
  return result;
}

void DAAPParserDelegate::DAAPParserDidParseData(DAAPParserDelegate *this, int a2, unsigned __int8 *__src, size_t __len)
{
  unsigned int v4 = __len;
  uint64_t v48 = *MEMORY[0x1E4F143B8];
  if (a2 <= 1835625571)
  {
    if (a2 == 1634025833) {
      goto LABEL_12;
    }
    if (a2 != 1634353993)
    {
      if (a2 != 1835624804) {
        goto LABEL_71;
      }
      goto LABEL_12;
    }
    if (*((_DWORD *)this + 21) != 1836409964 || !_os_feature_enabled_impl()) {
      goto LABEL_71;
    }
    std::string::basic_string[abi:ne180100](__p, __src, v4);
    int v16 = *((_DWORD *)this + 22);
    if (v16 == 1634165106)
    {
      char v17 = [*((id *)this + 1) _processDeletedArtistId:__p];
    }
    else
    {
      if (v16 != 1634165100)
      {
        char v44 = 1;
LABEL_89:
        if (v47 < 0) {
          operator delete(__p[0]);
        }
        if ((v44 & 1) == 0) {
          goto LABEL_92;
        }
        goto LABEL_71;
      }
      char v17 = [*((id *)this + 1) _processDeletedAlbumId:__p];
    }
    char v44 = v17;
    goto LABEL_89;
  }
  if (a2 > 1836414072)
  {
    if (a2 == 1936746852)
    {
      std::string::basic_string[abi:ne180100](__p, __src, __len);
      std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::__emplace_unique_key_args<std::string,std::string const&>((uint64_t)this + 128, (unsigned __int8 *)__p, (uint64_t)__p);
      if (v47 < 0) {
        operator delete(__p[0]);
      }
      goto LABEL_71;
    }
    if (a2 != 1836414073) {
      goto LABEL_71;
    }
    int v13 = _os_feature_enabled_impl();
    int v14 = *((_DWORD *)this + 20);
    if (v13)
    {
      if (v14 > 1634165105)
      {
        if (v14 != 1634757753)
        {
          unsigned __int16 v15 = 24946;
          goto LABEL_54;
        }
      }
      else if (v14 != 1633968755)
      {
        unsigned __int16 v15 = 24940;
LABEL_54:
        int v23 = v15 | 0x61670000;
LABEL_55:
        if (v14 != v23) {
          goto LABEL_71;
        }
      }
    }
    else if (v14 != 1634757753)
    {
      int v23 = 1633968755;
      goto LABEL_55;
    }
    [*((id *)this + 1) _processUpdateType:*__src];
    goto LABEL_71;
  }
  if (a2 != 1835625572)
  {
    if (a2 != 1836344175 || !*((unsigned char *)this + 93)) {
      goto LABEL_71;
    }
    uint64_t v8 = bswap32(*(_DWORD *)__src);
    int v9 = *((_DWORD *)this + 22);
    if (v9 == 1634757753)
    {
      char v10 = [*((id *)this + 1) _processContainerItemCount:v8];
    }
    else if (v9 == 1633968755)
    {
      char v10 = [*((id *)this + 1) _processTrackItemCount:v8];
    }
    else
    {
      if (!_os_feature_enabled_impl()) {
        goto LABEL_71;
      }
      int v31 = *((_DWORD *)this + 22);
      if (v31 == 1634165106)
      {
        char v10 = [*((id *)this + 1) _processArtistCount:v8];
      }
      else
      {
        if (v31 != 1634165100) {
          goto LABEL_71;
        }
        char v10 = [*((id *)this + 1) _processAlbumCount:v8];
      }
    }
    goto LABEL_58;
  }
LABEL_12:
  int v11 = *((_DWORD *)this + 21);
  if (v11 != 1836409964 && !*((unsigned char *)this + 92)) {
    goto LABEL_71;
  }
  if (__len == 8)
  {
    unint64_t v12 = bswap64(*(void *)__src);
  }
  else if (__len == 4)
  {
    unint64_t v12 = (int)bswap32(*(_DWORD *)__src);
  }
  else
  {
    unint64_t v18 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR))
    {
      LODWORD(__p[0]) = 67109120;
      HIDWORD(__p[0]) = v4;
      _os_log_impl(&dword_1B022D000, v18, OS_LOG_TYPE_ERROR, "Invalid item ID length (%u) during import session", (uint8_t *)__p, 8u);
    }

    unint64_t v12 = 0;
    int v11 = *((_DWORD *)this + 21);
  }
  if (v11 != 1836409964)
  {
    if (*((unsigned char *)this + 92))
    {
      uint64_t v21 = (unint64_t *)*((void *)this + 14);
      unint64_t v20 = *((void *)this + 15);
      if ((unint64_t)v21 >= v20)
      {
        char v24 = (unint64_t *)*((void *)this + 13);
        uint64_t v25 = v21 - v24;
        unint64_t v26 = v25 + 1;
        if ((unint64_t)(v25 + 1) >> 61) {
          std::vector<long long>::__throw_length_error[abi:ne180100]();
        }
        uint64_t v27 = v20 - (void)v24;
        if (v27 >> 2 > v26) {
          unint64_t v26 = v27 >> 2;
        }
        BOOL v28 = (unint64_t)v27 >= 0x7FFFFFFFFFFFFFF8;
        unint64_t v29 = 0x1FFFFFFFFFFFFFFFLL;
        if (!v28) {
          unint64_t v29 = v26;
        }
        if (v29)
        {
          unint64_t v29 = (unint64_t)std::__allocate_at_least[abi:ne180100]<std::allocator<long long>>(v29);
          char v24 = (unint64_t *)*((void *)this + 13);
          uint64_t v21 = (unint64_t *)*((void *)this + 14);
        }
        else
        {
          uint64_t v30 = 0;
        }
        uint64_t v32 = (unint64_t *)(v29 + 8 * v25);
        unint64_t v33 = v29 + 8 * v30;
        *uint64_t v32 = v12;
        uint64_t v22 = v32 + 1;
        while (v21 != v24)
        {
          unint64_t v34 = *--v21;
          *--uint64_t v32 = v34;
        }
        *((void *)this + 13) = v32;
        *((void *)this + 14) = v22;
        *((void *)this + 15) = v33;
        if (v24) {
          operator delete(v24);
        }
      }
      else
      {
        unint64_t *v21 = v12;
        uint64_t v22 = v21 + 1;
      }
      *((void *)this + 14) = v22;
    }
    goto LABEL_71;
  }
  int v19 = *((_DWORD *)this + 22);
  if (v19 != 1634757753)
  {
    if (v19 != 1633968755) {
      goto LABEL_71;
    }
    char v10 = [*((id *)this + 1) _processDeletedTrackId:v12];
LABEL_58:
    if ((v10 & 1) == 0) {
      goto LABEL_92;
    }
    goto LABEL_71;
  }
  if (![*((id *)this + 1) _processDeletedContainerId:v12])
  {
LABEL_92:
    int v39 = 0;
    goto LABEL_78;
  }
LABEL_71:
  if (*((void *)this + 6))
  {
    uint64_t v35 = (std::__shared_weak_count *)operator new(0x90uLL);
    *(_OWORD *)&v35->__shared_owners_ = 0u;
    v35->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C7918;
    v35[1].std::__shared_count = 0u;
    LODWORD(v35[1].__shared_weak_owners_) = a2;
    v35[3].__vftable = 0;
    v35[2].std::__shared_count = 0u;
    LOBYTE(v35[2].__shared_weak_owners_) = 0;
    v35[4].__vftable = 0;
    LOBYTE(v35[3].__shared_owners_) = 1;
    *(_OWORD *)&v35[4].__shared_owners_ = 0u;
    *(_OWORD *)&v35[5].__shared_owners_ = 0u;
    v35[5].__vftable = (std::__shared_weak_count_vtbl *)&v35[5].__shared_owners_;
    uint64_t v36 = (std::__shared_weak_count_vtbl *)malloc_type_malloc(v4, 0xB07DB96FuLL);
    uint64_t v37 = v35[3].__vftable;
    v35[3].__vftable = v36;
    if (v37 && LOBYTE(v35[3].__shared_owners_))
    {
      free(v37);
      uint64_t v36 = v35[3].__vftable;
    }
    LOBYTE(v35[3].__shared_owners_) = 1;
    memcpy(v36, __src, v4);
    v35[3].__shared_weak_owners_ = v4;
    __p[0] = &v35[1];
    __p[1] = v35;
    std::shared_ptr<ML3CPP::Element>::__enable_weak_this[abi:ne180100]<ML3CPP::Element,ML3CPP::Element,void>((uint64_t)__p, &v35[1].__vftable, (uint64_t)&v35[1]);
    char v38 = (uint64_t *)*((void *)this + 6);
    v45[0] = v35 + 1;
    v45[1] = v35;
    atomic_fetch_add_explicit(&v35->__shared_owners_, 1uLL, memory_order_relaxed);
    ML3CPP::Element::appendChildElement(v38, v45);
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
    std::__shared_weak_count::__release_shared[abi:ne180100](v35);
  }
  if ([*((id *)this + 1) isCancelled])
  {
    int v39 = 1;
LABEL_78:
    unsigned int v40 = os_log_create("com.apple.amp.medialibrary", "Default");
    if (os_log_type_enabled(v40, OS_LOG_TYPE_DEFAULT))
    {
      LODWORD(__p[0]) = 67109120;
      HIDWORD(__p[0]) = v39;
      _os_log_impl(&dword_1B022D000, v40, OS_LOG_TYPE_DEFAULT, "DAAP import success=%d. Cancelling parse operation.", (uint8_t *)__p, 8u);
    }

    int v41 = (std::__shared_weak_count *)*((void *)this + 3);
    if (v41)
    {
      long long v42 = std::__shared_weak_count::lock(v41);
      if (v42)
      {
        uint64_t v43 = *((void *)this + 2);
        if (v43) {
          *(unsigned char *)(v43 + 24) = 1;
        }
        std::__shared_weak_count::__release_shared[abi:ne180100](v42);
      }
    }
  }
}

void sub_1B0310808(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *__p, uint64_t a14, int a15, __int16 a16, char a17, char a18)
{
  if (a18 < 0) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void *std::string::basic_string[abi:ne180100](void *__dst, void *__src, size_t __len)
{
  if (__len >= 0x7FFFFFFFFFFFFFF8) {
    std::string::__throw_length_error[abi:ne180100]();
  }
  if (__len >= 0x17)
  {
    size_t v7 = (__len & 0xFFFFFFFFFFFFFFF8) + 8;
    if ((__len | 7) != 0x17) {
      size_t v7 = __len | 7;
    }
    size_t v8 = v7 + 1;
    uint64_t v6 = operator new(v7 + 1);
    __dst[1] = __len;
    __dst[2] = v8 | 0x8000000000000000;
    *long long __dst = v6;
  }
  else
  {
    *((unsigned char *)__dst + 23) = __len;
    uint64_t v6 = __dst;
    if (!__len) {
      goto LABEL_9;
    }
  }
  memmove(v6, __src, __len);
LABEL_9:
  *((unsigned char *)v6 + __len) = 0;
  return __dst;
}

void std::shared_ptr<ML3CPP::Element>::__enable_weak_this[abi:ne180100]<ML3CPP::Element,ML3CPP::Element,void>(uint64_t a1, void *a2, uint64_t a3)
{
  if (a2)
  {
    unsigned int v4 = (std::__shared_weak_count *)a2[1];
    if (!v4 || v4->__shared_owners_ == -1)
    {
      uint64_t v5 = *(std::__shared_weak_count **)(a1 + 8);
      if (v5)
      {
        atomic_fetch_add_explicit(&v5->__shared_owners_, 1uLL, memory_order_relaxed);
        atomic_fetch_add_explicit(&v5->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        unsigned int v4 = (std::__shared_weak_count *)a2[1];
      }
      *a2 = a3;
      a2[1] = v5;
      if (v4) {
        std::__shared_weak_count::__release_weak(v4);
      }
      if (v5)
      {
        std::__shared_weak_count::__release_shared[abi:ne180100](v5);
      }
    }
  }
}

void std::__shared_ptr_emplace<ML3CPP::Element>::__on_zero_shared(uint64_t a1)
{
  std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::destroy(*(void **)(a1 + 128));
  uint64_t v5 = (void **)(a1 + 96);
  std::vector<std::shared_ptr<ML3CPP::Element>>::__destroy_vector::operator()[abi:ne180100](&v5);
  uint64_t v2 = *(void **)(a1 + 72);
  *(void *)(a1 + 72) = 0;
  if (v2 && *(unsigned char *)(a1 + 80)) {
    free(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 56);
  if (v3) {
    std::__shared_weak_count::__release_weak(v3);
  }
  unsigned int v4 = *(std::__shared_weak_count **)(a1 + 32);
  if (v4)
  {
    std::__shared_weak_count::__release_weak(v4);
  }
}

void std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::destroy(void *a1)
{
  if (a1)
  {
    std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::destroy(*a1);
    std::__tree<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::__map_value_compare<unsigned int,std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>,std::less<unsigned int>,true>,std::allocator<std::__value_type<unsigned int,std::shared_ptr<ML3CPP::Element>>>>::destroy(a1[1]);
    uint64_t v2 = (std::__shared_weak_count *)a1[6];
    if (v2) {
      std::__shared_weak_count::__release_shared[abi:ne180100](v2);
    }
    operator delete(a1);
  }
}

void std::__shared_ptr_emplace<ML3CPP::Element>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C7918;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void std::__shared_ptr_emplace<ML3CPP::Element>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C7918;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void DAAPParserDelegate::DAAPParserDidStartContainer(DAAPParserDelegate *this, int a2)
{
  int v2 = a2;
  BOOL v4 = 1;
  if (a2 != 1835821428) {
    goto LABEL_29;
  }
  int v5 = *((_DWORD *)this + 22);
  if (v5 > 1634165105)
  {
    BOOL v6 = v5 == 1634757753;
    unsigned __int16 v7 = 24946;
  }
  else
  {
    BOOL v6 = v5 == 1633968755;
    unsigned __int16 v7 = 24940;
  }
  int v8 = v7 | 0x61670000;
  if (!v6 && v5 != v8) {
    goto LABEL_29;
  }
  uint64_t v11 = *((void *)this + 6);
  char v10 = (std::__shared_weak_count *)*((void *)this + 7);
  if (v10) {
    atomic_fetch_add_explicit(&v10->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  if (v11)
  {
    while (1)
    {
      int v12 = *(_DWORD *)(v11 + 16);
      BOOL v4 = v12 == 1835821428;
      if (v12 == 1835821428) {
        goto LABEL_27;
      }
      int v13 = *(std::__shared_weak_count **)(v11 + 32);
      if (v13)
      {
        uint64_t v14 = *(void *)(v11 + 24);
        atomic_fetch_add_explicit(&v13->__shared_weak_owners_, 1uLL, memory_order_relaxed);
        unsigned __int16 v15 = std::__shared_weak_count::lock(v13);
        if (v15) {
          uint64_t v11 = v14;
        }
        else {
          uint64_t v11 = 0;
        }
        if (!v10) {
          goto LABEL_20;
        }
      }
      else
      {
        uint64_t v11 = 0;
        unsigned __int16 v15 = 0;
        if (!v10) {
          goto LABEL_20;
        }
      }
      std::__shared_weak_count::__release_shared[abi:ne180100](v10);
LABEL_20:
      if (v13) {
        std::__shared_weak_count::__release_weak(v13);
      }
      char v10 = v15;
      if (!v11)
      {
        BOOL v4 = 0;
        char v10 = v15;
        if (v15) {
          goto LABEL_28;
        }
        goto LABEL_29;
      }
    }
  }
  BOOL v4 = 0;
LABEL_27:
  if (v10) {
LABEL_28:
  }
    std::__shared_weak_count::__release_shared[abi:ne180100](v10);
LABEL_29:
  int v16 = (char *)operator new(0x90uLL);
  *(_OWORD *)(v16 + 8) = 0u;
  *(void *)int v16 = &unk_1F08C7918;
  *(_OWORD *)(v16 + 24) = 0u;
  char v17 = v16 + 24;
  *((_DWORD *)v16 + 10) = v2;
  *((_OWORD *)v16 + 3) = 0u;
  v16[64] = 1;
  *((void *)v16 + 9) = 0;
  *((_OWORD *)v16 + 8) = 0u;
  v16[80] = 1;
  *(_OWORD *)(v16 + 88) = 0u;
  *(_OWORD *)(v16 + 104) = 0u;
  *((void *)v16 + 15) = v16 + 128;
  v25[0] = v17;
  v25[1] = v16;
  std::shared_ptr<ML3CPP::Element>::__enable_weak_this[abi:ne180100]<ML3CPP::Element,ML3CPP::Element,void>((uint64_t)v25, v17, (uint64_t)v17);
  uint64_t v18 = *((void *)this + 6);
  if (!v18)
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)v16 + 1, 1uLL, memory_order_relaxed);
    uint64_t v22 = (std::__shared_weak_count *)*((void *)this + 5);
    *((void *)this + 4) = v17;
    *((void *)this + 5) = v16;
    if (!v22) {
      goto LABEL_40;
    }
    goto LABEL_39;
  }
  int v19 = (std::__shared_weak_count *)*((void *)this + 7);
  if (v19)
  {
    atomic_fetch_add_explicit(&v19->__shared_owners_, 1uLL, memory_order_relaxed);
    atomic_fetch_add_explicit(&v19->__shared_weak_owners_, 1uLL, memory_order_relaxed);
  }
  unint64_t v20 = (std::__shared_weak_count *)*((void *)v16 + 7);
  *((void *)v16 + 6) = v18;
  *((void *)v16 + 7) = v19;
  if (v20) {
    std::__shared_weak_count::__release_weak(v20);
  }
  if (v19) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v19);
  }
  if (v4)
  {
    uint64_t v21 = (uint64_t *)*((void *)this + 6);
    v24[0] = v16 + 24;
    v24[1] = v16;
    atomic_fetch_add_explicit((atomic_ullong *volatile)v16 + 1, 1uLL, memory_order_relaxed);
    ML3CPP::Element::appendChildElement(v21, v24);
    uint64_t v22 = (std::__shared_weak_count *)v16;
LABEL_39:
    std::__shared_weak_count::__release_shared[abi:ne180100](v22);
    goto LABEL_40;
  }
  atomic_fetch_add_explicit((atomic_ullong *volatile)v16 + 1, 1uLL, memory_order_relaxed);
  uint64_t v22 = (std::__shared_weak_count *)*((void *)this + 9);
  *((void *)this + 8) = v17;
  *((void *)this + 9) = v16;
  if (v22) {
    goto LABEL_39;
  }
LABEL_40:
  atomic_fetch_add_explicit((atomic_ullong *volatile)v16 + 1, 1uLL, memory_order_relaxed);
  int v23 = (std::__shared_weak_count *)*((void *)this + 7);
  *((void *)this + 6) = v17;
  *((void *)this + 7) = v16;
  if (v23) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v23);
  }
  if (v2 <= 1634757752)
  {
    if (v2 != 1633968755)
    {
      if (v2 == 1634165100)
      {
        int v2 = 1634165100;
        if (!_os_feature_enabled_impl()) {
          goto LABEL_61;
        }
      }
      else
      {
        if (v2 != 1634165106) {
          goto LABEL_61;
        }
        int v2 = 1634165106;
        if (!_os_feature_enabled_impl()) {
          goto LABEL_61;
        }
      }
    }
    goto LABEL_60;
  }
  if (v2 <= 1835819883)
  {
    if (v2 != 1634757753)
    {
      if (v2 == 1634759535)
      {
        if (*((_DWORD *)this + 22) == 1634757753) {
          *((unsigned char *)this + 92) = 1;
        }
        int v2 = 1634759535;
      }
      goto LABEL_61;
    }
LABEL_60:
    *((_DWORD *)this + 22) = v2;
    goto LABEL_61;
  }
  if (v2 == 1836409964 || v2 == 1835819884) {
    *((_DWORD *)this + 21) = v2;
  }
LABEL_61:
  *((_DWORD *)this + 20) = v2;

  std::__shared_weak_count::__release_shared[abi:ne180100]((std::__shared_weak_count *)v16);
}

void sub_1B0310EC8(_Unwind_Exception *a1)
{
  std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  _Unwind_Resume(a1);
}

uint64_t DAAPParserDelegate::DAAPParserShouldParseCodeAsContainer(DAAPParserDelegate *this, int a2)
{
  uint64_t result = 1;
  if (a2 <= 1634357355)
  {
    if (a2 > 1634165099)
    {
      if (a2 <= 1634353515)
      {
        if (a2 == 1634165100)
        {
          uint64_t result = _os_feature_enabled_impl();
          if (!result) {
            return result;
          }
          int v8 = *((_DWORD *)this + 24);
          return v8 == 0;
        }
        if (a2 == 1634165106)
        {
          uint64_t result = _os_feature_enabled_impl();
          if (!result) {
            return result;
          }
          return *((_DWORD *)this + 24) == 1;
        }
        return 0;
      }
      if (a2 == 1634353516 || a2 == 1634353740) {
        goto LABEL_32;
      }
      unsigned __int16 v5 = 17001;
      goto LABEL_21;
    }
    if (a2 > 1634035307)
    {
      if (a2 == 1634035308) {
        goto LABEL_32;
      }
      unsigned __int16 v6 = 26982;
    }
    else
    {
      if (a2 == 1633968755) {
        return result;
      }
      unsigned __int16 v6 = 18259;
    }
    int v4 = v6 | 0x61650000;
    goto LABEL_31;
  }
  if (a2 > 1835819883)
  {
    if (a2 <= 1836409963)
    {
      if (a2 == 1835819884) {
        goto LABEL_32;
      }
      int v4 = 1835821428;
    }
    else
    {
      if (a2 == 1836409964 || a2 == 1936747625) {
        goto LABEL_32;
      }
      int v4 = 1936749167;
    }
LABEL_31:
    if (a2 == v4) {
      goto LABEL_32;
    }
    return 0;
  }
  if (a2 <= 1634366289)
  {
    if (a2 != 1634357356)
    {
      unsigned __int16 v5 = 25426;
LABEL_21:
      int v4 = v5 | 0x616A0000;
      goto LABEL_31;
    }
LABEL_32:
    int v8 = *((unsigned __int8 *)this + 93);
    return v8 == 0;
  }
  if (a2 != 1634366290 && a2 != 1634757753)
  {
    int v4 = 1634759535;
    goto LABEL_31;
  }
  return result;
}

uint64_t DAAPParserDelegate::DAAPParserShouldParseCode(DAAPParserDelegate *this)
{
  int v2 = [*((id *)this + 1) isCancelled];
  if (v2)
  {
    uint64_t v3 = (std::__shared_weak_count *)*((void *)this + 3);
    if (v3)
    {
      int v4 = std::__shared_weak_count::lock(v3);
      if (v4)
      {
        uint64_t v5 = *((void *)this + 2);
        if (v5) {
          *(unsigned char *)(v5 + 24) = 1;
        }
        std::__shared_weak_count::__release_shared[abi:ne180100](v4);
      }
    }
  }
  return v2 ^ 1u;
}

void DAAPParserDelegate::DAAPParserDidFinish(uint64_t a1, int a2)
{
  v11[1] = *MEMORY[0x1E4F143B8];
  if (a2 == 4)
  {
    unsigned __int16 v6 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v8 = *MEMORY[0x1E4F28568];
    int v9 = @"Track parser failed (invalid DAAP payload).";
    int v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:&v9 forKeys:&v8 count:1];
    uint64_t v5 = [v6 errorWithDomain:@"ML3DAAPImportOperationErrorDomain" code:1 userInfo:v4];
  }
  else
  {
    if (a2 != 3)
    {
      unsigned __int16 v7 = 0;
      goto LABEL_7;
    }
    uint64_t v3 = (void *)MEMORY[0x1E4F28C58];
    uint64_t v10 = *MEMORY[0x1E4F28568];
    v11[0] = @"Track parser was canceled.";
    int v4 = [MEMORY[0x1E4F1C9E8] dictionaryWithObjects:v11 forKeys:&v10 count:1];
    uint64_t v5 = [v3 errorWithDomain:@"ML3DAAPImportOperationErrorDomain" code:1 userInfo:v4];
  }
  unsigned __int16 v7 = (void *)v5;

LABEL_7:
  [*(id *)(a1 + 8) _finishParsingWithError:v7];
}

void sub_1B0311290(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void std::__shared_ptr_emplace<DAAPParserDelegate>::__on_zero_shared(uint64_t a1)
{
  uint64_t v8 = (void **)(a1 + 192);
  std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100](&v8);
  std::__hash_table<std::string,std::hash<std::string>,std::equal_to<std::string>,std::allocator<std::string>>::~__hash_table(a1 + 152);
  int v2 = *(void **)(a1 + 128);
  if (v2)
  {
    *(void *)(a1 + 136) = v2;
    operator delete(v2);
  }
  uint64_t v3 = *(std::__shared_weak_count **)(a1 + 96);
  if (v3) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  }
  int v4 = *(std::__shared_weak_count **)(a1 + 80);
  if (v4) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v4);
  }
  uint64_t v5 = *(std::__shared_weak_count **)(a1 + 64);
  if (v5) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v5);
  }
  unsigned __int16 v6 = *(std::__shared_weak_count **)(a1 + 48);
  if (v6) {
    std::__shared_weak_count::__release_weak(v6);
  }
  unsigned __int16 v7 = *(void **)(a1 + 32);
}

void std::__shared_ptr_emplace<DAAPParserDelegate>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C7598;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void std::__shared_ptr_emplace<DAAPParserDelegate>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C7598;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void std::__shared_ptr_emplace<ML3CPP::Parser>::__on_zero_shared(void *a1)
{
  int v2 = (void **)a1[8];
  uint64_t v3 = (void **)a1[9];
  if (v3 == v2)
  {
    int v4 = a1 + 12;
    uint64_t v3 = (void **)a1[8];
  }
  else
  {
    int v4 = a1 + 12;
    unint64_t v5 = a1[11];
    unsigned __int16 v6 = &v2[v5 >> 8];
    uint64_t v7 = (uint64_t)*v6;
    uint64_t v8 = (uint64_t)*v6 + 16 * v5;
    uint64_t v9 = *(uint64_t *)((char *)v2 + (((a1[12] + v5) >> 5) & 0x7FFFFFFFFFFFFF8))
       + 16 * (*((unsigned char *)a1 + 96) + v5);
    if (v8 != v9)
    {
      do
      {
        uint64_t v10 = *(std::__shared_weak_count **)(v8 + 8);
        if (v10)
        {
          std::__shared_weak_count::__release_shared[abi:ne180100](v10);
          uint64_t v7 = (uint64_t)*v6;
        }
        v8 += 16;
        if (v8 - v7 == 4096)
        {
          uint64_t v11 = (uint64_t)v6[1];
          ++v6;
          uint64_t v7 = v11;
          uint64_t v8 = v11;
        }
      }
      while (v8 != v9);
      int v2 = (void **)a1[8];
      uint64_t v3 = (void **)a1[9];
    }
  }
  void *v4 = 0;
  unint64_t v12 = (char *)v3 - (char *)v2;
  if ((unint64_t)((char *)v3 - (char *)v2) >= 0x11)
  {
    do
    {
      operator delete(*v2);
      uint64_t v3 = (void **)a1[9];
      int v2 = (void **)(a1[8] + 8);
      a1[8] = v2;
      unint64_t v12 = (char *)v3 - (char *)v2;
    }
    while ((unint64_t)((char *)v3 - (char *)v2) > 0x10);
  }
  unint64_t v13 = v12 >> 3;
  if (v13 == 1)
  {
    uint64_t v14 = 128;
    goto LABEL_16;
  }
  if (v13 == 2)
  {
    uint64_t v14 = 256;
LABEL_16:
    a1[11] = v14;
  }
  if (v2 != v3)
  {
    do
    {
      unsigned __int16 v15 = *v2++;
      operator delete(v15);
    }
    while (v2 != v3);
    uint64_t v17 = a1[8];
    uint64_t v16 = a1[9];
    if (v16 != v17) {
      a1[9] = v16 + ((v17 - v16 + 7) & 0xFFFFFFFFFFFFFFF8);
    }
  }
  uint64_t v18 = (void *)a1[7];
  if (v18) {
    operator delete(v18);
  }
  int v19 = (std::__shared_weak_count *)a1[5];
  if (v19)
  {
    std::__shared_weak_count::__release_weak(v19);
  }
}

void std::__shared_ptr_emplace<ML3CPP::Parser>::~__shared_ptr_emplace(std::__shared_weak_count *a1)
{
  a1->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C78E0;
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void std::__shared_ptr_emplace<ML3CPP::Parser>::~__shared_ptr_emplace(std::__shared_weak_count *this)
{
  this->__vftable = (std::__shared_weak_count_vtbl *)&unk_1F08C78E0;
  std::__shared_weak_count::~__shared_weak_count(this);
}

void sub_1B031187C(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  std::ifstream::~ifstream((uint64_t *)va);

  _Unwind_Resume(a1);
}

void std::allocator<DAAPParserDelegate>::construct[abi:ne180100]<DAAPParserDelegate,ML3DAAPImportOperation * const {__strong}&,std::shared_ptr<ML3CPP::Parser> &,ML3DAAPImportOperationEntityType &,BOOL>(uint64_t a1, void *a2, uint64_t a3, std::__shared_weak_count *a4, unsigned int *a5, char *a6)
{
  v7[0] = a3;
  v7[1] = a4;
  if (a4)
  {
    atomic_fetch_add_explicit(&a4->__shared_owners_, 1uLL, memory_order_relaxed);
    DAAPParserDelegate::DAAPParserDelegate(a1, a2, v7, *a5, *a6);
    std::__shared_weak_count::__release_shared[abi:ne180100](a4);
  }
  else
  {
    DAAPParserDelegate::DAAPParserDelegate(a1, a2, v7, *a5, *a6);
  }
}

uint64_t DAAPParserDelegate::DAAPParserDelegate(uint64_t a1, void *a2, void *a3, unsigned int a4, char a5)
{
  id v9 = a2;
  *(void *)a1 = &unk_1F08C3380;
  *(void *)(a1 + 8) = v9;
  uint64_t v10 = a3[1];
  *(void *)(a1 + 16) = *a3;
  *(void *)(a1 + 24) = v10;
  if (v10) {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(v10 + 16), 1uLL, memory_order_relaxed);
  }
  *(unsigned char *)(a1 + 92) = 0;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(void *)(a1 + 80) = 0;
  *(unsigned char *)(a1 + 93) = a5;
  *(_DWORD *)(a1 + 96) = a4;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(void *)(a1 + 152) = 0;
  *(_DWORD *)(a1 + 160) = 1065353216;
  *(void *)(a1 + 176) = 0;
  *(void *)(a1 + 184) = 0;
  *(void *)(a1 + 168) = 0;
  if (a4 <= 3) {
    *(_DWORD *)(a1 + 88) = *(_DWORD *)&aLagaragasbdasb[4 * a4];
  }
  return a1;
}

void sub_1B0311CB8(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  std::__shared_weak_count::__release_shared[abi:ne180100](v3);
  std::ifstream::~ifstream((uint64_t *)va);

  _Unwind_Resume(a1);
}

void sub_1B0311E38(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);

  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPArtistImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPArtistImportItem>,std::allocator<ML3DAAPArtistImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI17ML3DAAPImportItemE27__shared_ptr_default_deleteIS1_23ML3DAAPArtistImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPArtistImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPArtistImportItem>,std::allocator<ML3DAAPArtistImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPArtistImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPArtistImportItem>,std::allocator<ML3DAAPArtistImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B031207C(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);

  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPAlbumImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPAlbumImportItem>,std::allocator<ML3DAAPAlbumImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI17ML3DAAPImportItemE27__shared_ptr_default_deleteIS1_22ML3DAAPAlbumImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPAlbumImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPAlbumImportItem>,std::allocator<ML3DAAPAlbumImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPAlbumImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPAlbumImportItem>,std::allocator<ML3DAAPAlbumImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B0312278(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI17ML3DAAPImportItemE27__shared_ptr_default_deleteIS1_23ML3DAAPPersonImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPPersonImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPPersonImportItem>,std::allocator<ML3DAAPPersonImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B031249C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, char a10, uint64_t a11, uint64_t a12, void *__p)
{
  (*(void (**)(uint64_t))(*(void *)v14 + 8))(v14);
  *(void *)(v15 - 56) = &a10;
  std::vector<std::unordered_set<std::string>>::__destroy_vector::operator()[abi:ne180100]((void ***)(v15 - 56));
  if (__p)
  {
    operator delete(__p);
    if (!v13) {
      goto LABEL_3;
    }
  }
  else if (!v13)
  {
    goto LABEL_3;
  }
  std::__shared_weak_count::__release_shared[abi:ne180100](v13);
LABEL_3:
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPContainerImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPContainerImportItem>,std::allocator<ML3DAAPContainerImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI17ML3DAAPImportItemE27__shared_ptr_default_deleteIS1_26ML3DAAPContainerImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPContainerImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPContainerImportItem>,std::allocator<ML3DAAPContainerImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPContainerImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPContainerImportItem>,std::allocator<ML3DAAPContainerImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B0312710(_Unwind_Exception *a1)
{
  (*(void (**)(uint64_t))(*(void *)v2 + 8))(v2);
  if (v1) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v1);
  }
  _Unwind_Resume(a1);
}

uint64_t std::__shared_ptr_pointer<ML3DAAPImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPImportItem>,std::allocator<ML3DAAPImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI17ML3DAAPImportItemE27__shared_ptr_default_deleteIS1_S1_EE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3DAAPImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPImportItem>,std::allocator<ML3DAAPImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3DAAPImportItem *,std::shared_ptr<ML3DAAPImportItem>::__shared_ptr_default_delete<ML3DAAPImportItem,ML3DAAPImportItem>,std::allocator<ML3DAAPImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B0314114(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11, void *a12, uint64_t a13, uint64_t a14, uint64_t a15, void *a16, uint64_t a17, uint64_t a18, void *a19, uint64_t a20,uint64_t a21,uint64_t a22,void *a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,void *a29)
{
  _Unwind_Resume(a1);
}

void sub_1B0315964(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 192), 8);
  _Unwind_Resume(a1);
}

uint64_t __Block_byref_object_copy__1533(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void __Block_byref_object_dispose__1534(uint64_t a1)
{
}

void _ML3DatabaseFunctionRunBlock(sqlite3_context *a1, uint64_t a2, uint64_t a3)
{
  unsigned __int16 v6 = sqlite3_user_data(a1);
  if (v6)
  {
    id v9 = v6;
    uint64_t v7 = [v6 block];

    unsigned __int16 v6 = v9;
    if (v7)
    {
      uint64_t v8 = [v9 block];
      ((void (**)(void, sqlite3_context *, uint64_t, uint64_t))v8)[2](v8, a1, a2, a3);

      unsigned __int16 v6 = v9;
    }
  }
}

void sub_1B0317020(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B0317278(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B03177DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B03182BC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B0318CC8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B031963C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v15 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1B0319CE8(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_1B031B70C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_1B031C11C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B031C6A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1B031C88C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, std::__shared_weak_count *a12)
{
  if (a12) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a12);
  }

  _Unwind_Resume(a1);
}

void std::shared_ptr<ML3ImportItem>::shared_ptr[abi:ne180100]<ML3ProtoSyncDeleteImportItem,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1B031C964(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncDeleteImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncDeleteImportItem>,std::allocator<ML3ProtoSyncDeleteImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_28ML3ProtoSyncDeleteImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncDeleteImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncDeleteImportItem>,std::allocator<ML3ProtoSyncDeleteImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3ProtoSyncDeleteImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncDeleteImportItem>,std::allocator<ML3ProtoSyncDeleteImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B031CE7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::__shared_weak_count *a26)
{
  if (v27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v27);
  }
  if (a26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a26);
  }
  uint64_t v30 = *(std::__shared_weak_count **)(v28 - 104);
  if (v30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
  }
  int v31 = *(std::__shared_weak_count **)(v28 - 88);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  uint64_t v32 = *(std::__shared_weak_count **)(v28 - 72);
  if (v32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v32);
  }

  _Unwind_Resume(a1);
}

void std::shared_ptr<ML3ImportItem>::shared_ptr[abi:ne180100]<ML3ProtoSyncTrackImportItem,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1B031D0A0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

void std::shared_ptr<ML3ImportItem>::shared_ptr[abi:ne180100]<ML3ProtoSyncArtistImportItem,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1B031D140(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

void std::shared_ptr<ML3ImportItem>::shared_ptr[abi:ne180100]<ML3ProtoSyncAlbumImportItem,void>(void *a1, uint64_t a2)
{
  *a1 = a2;
  operator new();
}

void sub_1B031D1E0(_Unwind_Exception *exception_object)
{
  if (v1) {
    (*(void (**)(uint64_t))(*(void *)v1 + 8))(v1);
  }
  _Unwind_Resume(exception_object);
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncAlbumImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncAlbumImportItem>,std::allocator<ML3ProtoSyncAlbumImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_27ML3ProtoSyncAlbumImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncAlbumImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncAlbumImportItem>,std::allocator<ML3ProtoSyncAlbumImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3ProtoSyncAlbumImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncAlbumImportItem>,std::allocator<ML3ProtoSyncAlbumImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncArtistImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncArtistImportItem>,std::allocator<ML3ProtoSyncArtistImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_28ML3ProtoSyncArtistImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncArtistImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncArtistImportItem>,std::allocator<ML3ProtoSyncArtistImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3ProtoSyncArtistImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncArtistImportItem>,std::allocator<ML3ProtoSyncArtistImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncTrackImportItem>,std::allocator<ML3ProtoSyncTrackImportItem>>::__get_deleter(uint64_t a1, uint64_t a2)
{
  if (std::type_info::operator==[abi:ne180100](*(void *)(a2 + 8), (uint64_t)"NSt3__110shared_ptrI13ML3ImportItemE27__shared_ptr_default_deleteIS1_27ML3ProtoSyncTrackImportItemEE"))
  {
    return a1 + 24;
  }
  else
  {
    return 0;
  }
}

uint64_t std::__shared_ptr_pointer<ML3ProtoSyncTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncTrackImportItem>,std::allocator<ML3ProtoSyncTrackImportItem>>::__on_zero_shared(uint64_t a1)
{
  uint64_t result = *(void *)(a1 + 24);
  if (result) {
    return (*(uint64_t (**)(void))(*(void *)result + 8))();
  }
  return result;
}

void std::__shared_ptr_pointer<ML3ProtoSyncTrackImportItem *,std::shared_ptr<ML3ImportItem>::__shared_ptr_default_delete<ML3ImportItem,ML3ProtoSyncTrackImportItem>,std::allocator<ML3ProtoSyncTrackImportItem>>::~__shared_ptr_pointer(std::__shared_weak_count *a1)
{
  std::__shared_weak_count::~__shared_weak_count(a1);

  JUMPOUT(0x1B3E93610);
}

void sub_1B031D800(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,std::__shared_weak_count *a26)
{
  if (v27) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v27);
  }
  if (a26) {
    std::__shared_weak_count::__release_shared[abi:ne180100](a26);
  }
  uint64_t v30 = *(std::__shared_weak_count **)(v28 - 104);
  if (v30) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v30);
  }
  int v31 = *(std::__shared_weak_count **)(v28 - 88);
  if (v31) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v31);
  }
  uint64_t v32 = *(std::__shared_weak_count **)(v28 - 72);
  if (v32) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v32);
  }

  _Unwind_Resume(a1);
}

void sub_1B031DB98(_Unwind_Exception *a1)
{
  MEMORY[0x1B3E93610](v5, 0x10B3C40916F1A39);

  _Unwind_Resume(a1);
}

id ML3DatabaseImportDataSource::generateVTableInsertionFromClause(ML3DatabaseImportDataSource *this, NSString *a2, NSString *a3)
{
  int v4 = a2;
  uint64_t v5 = a3;
  if ([(NSString *)v4 isEqualToString:@"item_store"]) {
    [NSString stringWithFormat:@"%@ LEFT OUTER JOIN item_store ON +%@.ROWID = item_store.item_pid", v5, v5];
  }
  else {
  unsigned __int16 v6 = [NSString stringWithFormat:@"%@ LEFT OUTER JOIN item_store ON +%@.ROWID = item_store.item_pid LEFT OUTER JOIN %@ ON +%@.ROWID = %@.item_pid", v5, v5, v4, v5, v4];
  }

  return v6;
}

void sub_1B031E11C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

id ML3DatabaseImportDataSource::identityPropertyForSource(ML3DatabaseImportDataSource *this, uint64_t a2)
{
  return ML3TrackRulesIdentityPropertyForSource(a2);
}

uint64_t ML3DatabaseImportDataSource::hasValueForKey(uint64_t a1, void *a2, uint64_t a3)
{
  if ((*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 56))(*a2, a3)) {
    return 1;
  }
  uint64_t result = (*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 200))(*a2, a3);
  if (result)
  {
    unsigned __int16 v6 = *(uint64_t (**)(void))(*(void *)*a2 + 56);
    return v6();
  }
  return result;
}

std::string *ML3DatabaseImportDataSource::sanitizedStringValueForKey@<X0>(uint64_t *a1@<X1>, uint64_t a2@<X2>, ML3ImportItem *a3@<X8>)
{
  return ML3ImportItem::getSanitizedStringValue(a3, *a1, a2);
}

uint64_t ML3DatabaseImportDataSource::stringValueForKey(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 24))(*a2, a3);
}

uint64_t ML3DatabaseImportDataSource::dataValueForKey(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 48))(*a2, a3);
}

uint64_t ML3DatabaseImportDataSource::floatValueForKey(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 40))(*a2, a3);
}

uint64_t ML3DatabaseImportDataSource::integerValueForKey(uint64_t a1, void *a2, uint64_t a3)
{
  return (*(uint64_t (**)(void, uint64_t))(*(void *)*a2 + 32))(*a2, a3);
}

uint64_t ML3DatabaseImportDataSource::getDatabaseTableSchemaClass(ML3DatabaseImportDataSource *this)
{
  return objc_opt_class();
}

uint64_t ML3DatabaseImportDataSource::getImportPropertyGroupKey(ML3DatabaseImportDataSource *this)
{
  return 0;
}

id ML3DatabaseImportDataSource::copyVirtualTableInsertionSQL(id *this, ML3VirtualTable *a2, int a3)
{
  uint64_t v53 = *MEMORY[0x1E4F143B8];
  uint64_t v5 = a2;
  id v6 = this[5];
  if (!v6)
  {
    location = this + 5;
    int v39 = v5;
    uint64_t v46 = this;
    int v41 = ML3DatabaseImportDataSource::getTableSchema((ML3DatabaseImportDataSource *)this);
    id v7 = objc_alloc_init(MEMORY[0x1E4F1CA48]);
    long long v50 = 0u;
    long long v51 = 0u;
    long long v48 = 0u;
    long long v49 = 0u;
    uint64_t v8 = [v41 columns];
    uint64_t v9 = [v8 countByEnumeratingWithState:&v48 objects:v52 count:16];
    int v42 = a3;
    uint64_t v10 = 0;
    if (v9)
    {
      uint64_t v11 = *(void *)v49;
      do
      {
        for (uint64_t i = 0; i != v9; ++i)
        {
          if (*(void *)v49 != v11) {
            objc_enumerationMutation(v8);
          }
          unint64_t v13 = *(void **)(*((void *)&v48 + 1) + 8 * i);
          if ([v13 columnConstraints])
          {
            [v7 addObject:@"ROWID"];
          }
          else
          {
            uint64_t v14 = [v13 name];
            [v7 addObject:v14];

            ++v10;
          }
        }
        uint64_t v9 = [v8 countByEnumeratingWithState:&v48 objects:v52 count:16];
      }
      while (v9);
    }

    char v38 = [v7 componentsJoinedByString:@","];
    uint64_t v15 = NSString;
    uint64_t v16 = [v41 name];
    uint64_t v36 = [v15 stringWithFormat:@"INSERT OR REPLACE INTO %@ (%@)", v16, v38];

    int v17 = (*((uint64_t (**)(id *))*this + 7))(this);
    uint64_t v35 = [v41 name];
    uint64_t v18 = [(ML3VirtualTable *)v39 name];
    id v40 = v36;
    id v43 = v35;
    id v44 = v18;
    char v47 = (void *)[objc_alloc(MEMORY[0x1E4F28E78]) initWithCapacity:7 * v10 + 5];
    [v47 appendString:v44];
    [v47 appendString:@".ROWID"];
    if (!v10) {
      goto LABEL_53;
    }
    uint64_t v19 = 0;
    while (1)
    {
      unint64_t v20 = ML3TrackRulesGetPropertyName(v17, v19);
      int v21 = *(_DWORD *)(ML3TrackRulesGetRule(v17, v19) + 48);
      uint64_t v22 = @"CASE WHEN item_store.home_sharing_id != 0 THEN 300 ELSE(CASE WHEN IFNULL(item_store.match_redownload_params, '') != '' THEN 200 ELSE(CASE WHEN IFNULL(item_store.purchase_history_redownload_params, '') != '' AND item_store.purchase_history_id != 0 THEN 100 ELSE(CASE WHEN item_store.subscription_store_item_id != 0 AND item_store.is_subscription AND item_store.cloud_asset_available THEN 50 ELSE(CASE WHEN item_store.sync_redownload_params == 'redownload' AND item_store.sync_id != 0 THEN 20 ELSE(CASE WHEN item_store.sync_redownload_params == 'local' AND item_store.sync_id != 0 THEN 10 ELSE 0 END) END) END) END) END) END";
      if (v21 != 16777241) {
        uint64_t v22 = 0;
      }
      if (v21 == 16777245) {
        uint64_t v22 = @"CASE WHEN item_store.home_sharing_id OR (item_store.store_saga_id AND item_store.cloud_in_my_library) OR item_store.purchase_history_id OR (item_store.sync_id AND item_store.sync_in_my_library) OR item_store.is_ota_purchased THEN 1 ELSE 0 END";
      }
      int v23 = v22;
      char v24 = v23;
      if (v23)
      {
        [v47 appendFormat:@", %@", v23];
        goto LABEL_20;
      }
      if (*(_DWORD *)(ML3TrackRulesGetRule(v17, v19) + 4 * v42) == -1)
      {
        [v47 appendFormat:@", %@", v20];
        goto LABEL_20;
      }
      if (v42 < 1)
      {
        if (v21 == 33554434) {
          goto LABEL_44;
        }
        char v25 = 0;
LABEL_46:
        if (*(unsigned char *)(ML3TrackRulesGetRule(v17, v19) + 28)) {
          [NSString stringWithFormat:@"CASE WHEN col%d ISNULL THEN %@ ELSE MAX(IFNULL(%@, 0), col%d) END", v19, v20, v20, v19];
        }
        else {
        uint64_t v31 = [NSString stringWithFormat:@"CASE WHEN col%d ISNULL THEN %@ ELSE col%d END", v19, v20, v19];
        }
        uint64_t v32 = (void *)v31;
        if (v25) {
          [v47 appendFormat:@" THEN (%@) ELSE %@ END", v31, v20];
        }
        else {
          [v47 appendFormat:@", %@", v31];
        }

        goto LABEL_20;
      }
      char v45 = 0;
      char v25 = 0;
      int v26 = v42 - 1;
      uint64_t v27 = v42 - 1;
      do
      {
        if (*(_DWORD *)(ML3TrackRulesGetRule(v17, v19) + 4 * v27) == 2)
        {
          if (v25) {
            uint64_t v28 = @" AND LENGTH(IFNULL(item_extra.location, '')) = 0";
          }
          else {
            uint64_t v28 = @", CASE WHEN LENGTH(IFNULL(item_extra.location, '')) = 0";
          }
          [v47 appendString:v28];
        }
        else
        {
          if (*(_DWORD *)(ML3TrackRulesGetRule(v17, v19) + 4 * v27) != 1) {
            goto LABEL_36;
          }
          (*((void (**)(void))*v46 + 16))();
          if (v25) {
            unint64_t v29 = {;
          }
            [v47 appendFormat:@" AND IFNULL(%@,0) = 0", v29];
          }
          else {
            unint64_t v29 = {;
          }
            objc_msgSend(v47, "appendFormat:", @", CASE WHEN IFNULL((SELECT(1) FROM %@ WHERE ROWID = %@.ROWID), 0) = 0 OR (IFNULL(%@,0) = 0"), v43, v44, v29;
            char v45 = 1;
          }
        }
        char v25 = 1;
LABEL_36:
        int v30 = v27-- + 1;
        --v26;
      }
      while ((v30 & 0xFFFFFFFE) != 0);
      if (v45) {
        [v47 appendString:@""]);
      }
      if (v21 != 33554434) {
        goto LABEL_46;
      }
      if (v25)
      {
        [v47 appendFormat:@" THEN (CASE WHEN col%d='%s' THEN %@ ELSE col%d END) ELSE %@ END", v19, "_ML_VALUE_NOT_PROVIDED_", v20, v19, v20];
        goto LABEL_20;
      }
LABEL_44:
      [v47 appendFormat:@", CASE WHEN col%d='%s' THEN %@ ELSE col%d END", v19, "_ML_VALUE_NOT_PROVIDED_", v20, v19];
LABEL_20:

      if (++v19 == v10)
      {
LABEL_53:
        unint64_t v33 = (*((void (**)(id *, id, id))*v46 + 17))(v46, v43, v44);
        id v6 = [NSString stringWithFormat:@"%@ SELECT %@ FROM %@", v40, v47, v33];

        objc_storeStrong(location, v6);
        uint64_t v5 = v39;
        break;
      }
    }
  }

  return v6;
}

void sub_1B031E970(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15, void *a16, uint64_t a17, void *a18, void *a19, uint64_t a20,uint64_t a21,void *a22,void *a23,uint64_t a24,uint64_t a25,void *a26,void *a27,uint64_t a28,uint64_t a29,void *a30)
{
  _Unwind_Resume(a1);
}

id ML3DatabaseImportDataSource::getTableSchema(ML3DatabaseImportDataSource *this)
{
  uint64_t v2 = (void *)*((void *)this + 4);
  if (!v2)
  {
    id v3 = objc_alloc_init((Class)(*(uint64_t (**)(ML3DatabaseImportDataSource *))(*(void *)this + 64))(this));
    int v4 = (void *)*((void *)this + 4);
    *((void *)this + 4) = v3;

    uint64_t v2 = (void *)*((void *)this + 4);
  }

  return v2;
}

void ML3DatabaseImportDataSource::~ML3DatabaseImportDataSource(id *this)
{
  ML3DatabaseImportDataSource::~ML3DatabaseImportDataSource(this);

  JUMPOUT(0x1B3E93610);
}

{
  std::__shared_weak_count *v2;
  void **v3;

  *this = &unk_1F08C4AA8;
  id v3 = this + 6;
  std::vector<std::shared_ptr<ML3ImportItem>>::__destroy_vector::operator()[abi:ne180100](&v3);

  uint64_t v2 = (std::__shared_weak_count *)this[2];
  if (v2) {
    std::__shared_weak_count::__release_weak(v2);
  }
}

uint64_t ML3DatabaseImportDataSource::rowIsValid(ML3DatabaseImportDataSource *this)
{
  return 1;
}

uint64_t ML3DatabaseImportDataSource::getPersistentID(ML3DatabaseImportDataSource *this, unsigned int a2)
{
  return *(void *)(*(void *)(*((void *)this + 6) + 16 * a2) + 8);
}

void ML3DatabaseImportDataSource::getRow(void *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v5 = a1[6];
  long long v6 = *(_OWORD *)(v5 + 16 * a3);
  long long v32 = v6;
  id v7 = *(std::__shared_weak_count **)(v5 + 16 * a3 + 8);
  if (*((void *)&v6 + 1))
  {
    atomic_fetch_add_explicit((atomic_ullong *volatile)(*((void *)&v6 + 1) + 8), 1uLL, memory_order_relaxed);
    context = (void *)MEMORY[0x1B3E93C70]();
    int v42 = v7;
    atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
  }
  else
  {
    context = (void *)MEMORY[0x1B3E93C70]();
    int v42 = 0;
  }
  uint64_t v41 = v32;
  (*(void (**)(void *, uint64_t *))(*a1 + 72))(a1, &v41);
  if (v42) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v42);
  }
  int v8 = (*(uint64_t (**)(void *))(*a1 + 56))(a1);
  uint64_t v9 = *(unsigned int **)(a2 + 8);
  uint64_t v10 = *(unsigned int **)(a2 + 16);
  if (v9 != v10)
  {
    int v11 = v8;
    unsigned int v12 = 0;
    unint64_t v13 = v9 + 8;
    while (2)
    {
      uint64_t v14 = v12;
      if (ML3TrackRulesGetCount(v11) <= (unint64_t)v12) {
        break;
      }
      uint64_t v15 = *(unsigned int *)(ML3TrackRulesGetRule(v11, v12) + 48);
      if (*(unsigned char *)(v32 + 16) && !*(unsigned char *)(v32 + 17))
      {
        long long v40 = v32;
        if (v7) {
          atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
        }
        char v16 = (*(uint64_t (**)(void *, long long *, uint64_t))(*a1 + 120))(a1, &v40, v15);
        if (*((void *)&v40 + 1)) {
          std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v40 + 1));
        }
        if ((v16 & 1) == 0)
        {
          if (v15 == 33554434)
          {
            *((void *)v13 - 4) = 4;
            std::string::basic_string[abi:ne180100]<0>(&v36, "_ML_VALUE_NOT_PROVIDED_");
            std::optional<std::variant<long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>>>::operator=[abi:ne180100]<std::string,void>((uint64_t)(v13 - 6), &v36);
            if (v37.__r_.__value_.__s.__data_[7] < 0)
            {
              uint64_t v28 = (void *)v36;
LABEL_59:
              operator delete(v28);
            }
          }
          else
          {
            *((void *)v13 - 4) = 0;
            if (*((unsigned char *)v13 + 8))
            {
              std::__variant_detail::__dtor<std::__variant_detail::__traits<long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>>,(std::__variant_detail::_Trait)1>::~__dtor((uint64_t)(v13 - 6));
              *((unsigned char *)v13 + 8) = 0;
            }
          }
          goto LABEL_64;
        }
      }
      uint64_t v17 = *(void *)(ML3TrackRulesGetRule(v11, v14) + 40);
      *((void *)v13 - 4) = v17;
      switch(v17)
      {
        case 2:
          long long v39 = v32;
          if (v7) {
            atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          uint64_t v18 = (*(uint64_t (**)(void *, long long *, uint64_t))(*a1 + 80))(a1, &v39, v15);
          *(void *)&long long v36 = v18;
          if (*((unsigned char *)v13 + 8))
          {
            std::variant<long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>>::operator=[abi:ne180100]<long long,0,long long,0ul,0>((uint64_t)(v13 - 6), &v36);
          }
          else
          {
            *((void *)v13 - 3) = v18;
            *unint64_t v13 = 0;
            *((unsigned char *)v13 + 8) = 1;
          }
          unint64_t v29 = (std::__shared_weak_count *)*((void *)&v39 + 1);
          if (*((void *)&v39 + 1)) {
            goto LABEL_63;
          }
          goto LABEL_64;
        case 3:
          long long v38 = v32;
          if (v7) {
            atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          float v21 = (*(float (**)(void *, long long *, uint64_t))(*a1 + 88))(a1, &v38, v15);
          float v22 = v21;
          if (*((unsigned char *)v13 + 8))
          {
            uint64_t v23 = *v13;
            if (v23 != -1)
            {
              char v24 = (float *)(v13 - 6);
              if (v23 == 1)
              {
                *char v24 = v21;
                goto LABEL_62;
              }
              ((void (*)(long long *, float *))off_1F08D3BF0[v23])(&v36, v24);
            }
            *((float *)v13 - 6) = v22;
            *unint64_t v13 = 1;
          }
          else
          {
            *((float *)v13 - 6) = v21;
            *unint64_t v13 = 1;
            *((unsigned char *)v13 + 8) = 1;
          }
LABEL_62:
          unint64_t v29 = (std::__shared_weak_count *)*((void *)&v38 + 1);
          if (*((void *)&v38 + 1)) {
            goto LABEL_63;
          }
LABEL_64:
          unsigned int v12 = v14 + 1;
          int v30 = v13 + 4;
          v13 += 12;
          if (v30 == v10) {
            break;
          }
          continue;
        case 4:
          long long v35 = v32;
          if (v7) {
            atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          (*(void (**)(long long *__return_ptr, void *, long long *, uint64_t))(*a1 + 104))(&v36, a1, &v35, v15);
          if (*((void *)&v35 + 1)) {
            std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v35 + 1));
          }
          if (BYTE8(v36))
          {
            if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0) {
              std::string::__init_copy_ctor_external(&v34, v37.__r_.__value_.__l.__data_, v37.__r_.__value_.__l.__size_);
            }
            else {
              std::string v34 = v37;
            }
            std::optional<std::variant<long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>>>::operator=[abi:ne180100]<std::string,void>((uint64_t)(v13 - 6), (long long *)&v34);
            if (SHIBYTE(v34.__r_.__value_.__r.__words[2]) < 0) {
              operator delete(v34.__r_.__value_.__l.__data_);
            }
          }
          else
          {
            *((void *)v13 - 4) = 0;
            if (*((unsigned char *)v13 + 8))
            {
              std::__variant_detail::__dtor<std::__variant_detail::__traits<long long,float,BOOL,std::string,std::shared_ptr<ML3CPPData>>,(std::__variant_detail::_Trait)1>::~__dtor((uint64_t)(v13 - 6));
              *((unsigned char *)v13 + 8) = 0;
            }
          }
          *(void *)&long long v36 = &unk_1F08C3230;
          if (SHIBYTE(v37.__r_.__value_.__r.__words[2]) < 0)
          {
            uint64_t v28 = (void *)v37.__r_.__value_.__r.__words[0];
            goto LABEL_59;
          }
          goto LABEL_64;
        case 5:
          long long v33 = v32;
          if (v7) {
            atomic_fetch_add_explicit(&v7->__shared_owners_, 1uLL, memory_order_relaxed);
          }
          (*(void (**)(long long *__return_ptr, void *, long long *, uint64_t))(*a1 + 96))(&v36, a1, &v33, v15);
          if (!*((unsigned char *)v13 + 8))
          {
            *(_OWORD *)(v13 - 6) = v36;
            long long v36 = 0uLL;
            *unint64_t v13 = 4;
            *((unsigned char *)v13 + 8) = 1;
            goto LABEL_68;
          }
          uint64_t v25 = *v13;
          if (v25 == -1) {
            goto LABEL_67;
          }
          if (v25 == 4)
          {
            long long v26 = v36;
            long long v36 = 0uLL;
            uint64_t v27 = (std::__shared_weak_count *)*((void *)v13 - 2);
            *(_OWORD *)(v13 - 6) = v26;
            if (v27) {
              std::__shared_weak_count::__release_shared[abi:ne180100](v27);
            }
          }
          else
          {
            ((void (*)(std::string *, unsigned int *))off_1F08D3BF0[v25])(&v34, v13 - 6);
LABEL_67:
            *(_OWORD *)(v13 - 6) = v36;
            long long v36 = 0uLL;
            *unint64_t v13 = 4;
          }
LABEL_68:
          if (*((void *)&v36 + 1)) {
            std::__shared_weak_count::__release_shared[abi:ne180100](*((std::__shared_weak_count **)&v36 + 1));
          }
          unint64_t v29 = (std::__shared_weak_count *)*((void *)&v33 + 1);
          if (*((void *)&v33 + 1)) {
LABEL_63:
          }
            std::__shared_weak_count::__release_shared[abi:ne180100](v29);
          goto LABEL_64;
        default:
          uint64_t v19 = [MEMORY[0x1E4F28B00] currentHandler];
          unint64_t v20 = objc_msgSend(NSString, "stringWithUTF8String:", "virtual void ML3DatabaseImportDataSource::getRow(ML3VirtualTableRow *, uint32_t)");
          objc_msgSend(v19, "handleFailureInFunction:file:lineNumber:description:", v20, @"ML3DatabaseImportDataSource.mm", 164, @"unhandled data type %u", *((void *)v13 - 4));

          goto LABEL_64;
      }
      break;
    }
  }
  if (v7) {
    std::__shared_weak_count::__release_shared[abi:ne180100](v7);
  }
}