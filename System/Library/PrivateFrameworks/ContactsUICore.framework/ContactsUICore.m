void __Block_byref_object_dispose_(uint64_t a1)
{
}

void __Block_byref_object_dispose__0(uint64_t a1)
{
}

void __Block_byref_object_dispose__1(uint64_t a1)
{
}

void __Block_byref_object_dispose__2(uint64_t a1)
{
}

void __Block_byref_object_dispose__3(uint64_t a1)
{
}

void __Block_byref_object_dispose__4(uint64_t a1)
{
}

void __Block_byref_object_dispose__5(uint64_t a1)
{
}

void __Block_byref_object_dispose__6(uint64_t a1)
{
}

uint64_t __Block_byref_object_copy_(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__0(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__1(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__2(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__3(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__4(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__5(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

uint64_t __Block_byref_object_copy__6(uint64_t result, uint64_t a2)
{
  *(void *)(result + 40) = *(void *)(a2 + 40);
  *(void *)(a2 + 40) = 0;
  return result;
}

void sub_20B70799C(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_20B707E80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_20B709618(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

CGContextRef CNUIBitmapContextCreate(int a1, int a2, CGColorSpaceRef space)
{
  uint64_t v11 = *MEMORY[0x263EF8340];
  CGContextRef v5 = CGBitmapContextCreate(0, a1, a2, 8uLL, 4 * a1, space, 1u);
  if (!v5)
  {
    if (CNUIPRLikenessRenderingUtilitiesLog_cn_once_token_1 != -1) {
      dispatch_once(&CNUIPRLikenessRenderingUtilitiesLog_cn_once_token_1, &__block_literal_global_8);
    }
    v6 = CNUIPRLikenessRenderingUtilitiesLog_cn_once_object_1;
    if (os_log_type_enabled((os_log_t)CNUIPRLikenessRenderingUtilitiesLog_cn_once_object_1, OS_LOG_TYPE_DEFAULT))
    {
      v8[0] = 67109376;
      v8[1] = a1;
      __int16 v9 = 1024;
      int v10 = a2;
      _os_log_impl(&dword_20B704000, v6, OS_LOG_TYPE_DEFAULT, "Error creating context of size {%d, %d}", (uint8_t *)v8, 0xEu);
    }
  }
  return v5;
}

void CNUIDrawImagesInRects(CGContextRef c, CGColor *a2, uint64_t a3, CGImageRef *a4, CGRect *a5, void (*a6)(CGContext *, double, double, double, double), CGFloat a7, CGFloat a8)
{
  if (a3)
  {
    if (a3 != 1)
    {
      CGContextSaveGState(c);
      CGFloat x = a5[1].origin.x;
      CGFloat y = a5[1].origin.y;
      CGFloat width = a5[1].size.width;
      CGFloat height = a5[1].size.height;
      CGAffineTransformMakeScale(&v39, a7, a7);
      v40.origin.CGFloat x = x;
      v40.origin.CGFloat y = y;
      v40.size.CGFloat width = width;
      v40.size.CGFloat height = height;
      CGRect v41 = CGRectApplyAffineTransform(v40, &v39);
      double v19 = v41.origin.x;
      double v20 = v41.origin.y;
      double v21 = v41.size.width;
      double v22 = v41.size.height;
      ((void (*)(CGContextRef))a6)(c);
      CGContextClip(c);
      v42.origin.CGFloat x = v19;
      v42.origin.CGFloat y = v20;
      v42.size.CGFloat width = v21;
      v42.size.CGFloat height = v22;
      CGContextDrawImage(c, v42, a4[1]);
      CNUIApplyOutlineToContext(c, a2, a6, v19, v20, v21, v22, a8);
      CGContextRestoreGState(c);
      CGContextSaveGState(c);
      CGRect v43 = CGRectInset(*a5, -2.0, -2.0);
      CGFloat v23 = v43.origin.x;
      CGFloat v24 = v43.origin.y;
      CGFloat v25 = v43.size.width;
      CGFloat v26 = v43.size.height;
      CGAffineTransformMakeScale(&v39, a7, a7);
      v44.origin.CGFloat x = v23;
      v44.origin.CGFloat y = v24;
      v44.size.CGFloat width = v25;
      v44.size.CGFloat height = v26;
      CGRect v45 = CGRectApplyAffineTransform(v44, &v39);
      CGFloat v27 = v45.origin.x;
      CGFloat v28 = v45.origin.y;
      CGFloat v29 = v45.size.width;
      CGFloat v30 = v45.size.height;
      ((void (*)(CGContextRef))a6)(c);
      CGContextClip(c);
      CGContextSetBlendMode(c, kCGBlendModeClear);
      v46.origin.CGFloat x = v27;
      v46.origin.CGFloat y = v28;
      v46.size.CGFloat width = v29;
      v46.size.CGFloat height = v30;
      CGContextFillRect(c, v46);
      CGContextRestoreGState(c);
    }
    CGContextSaveGState(c);
    CGFloat v31 = a5->origin.x;
    CGFloat v32 = a5->origin.y;
    CGFloat v33 = a5->size.width;
    CGFloat v34 = a5->size.height;
    CGAffineTransformMakeScale(&v39, a7, a7);
    v47.origin.CGFloat x = v31;
    v47.origin.CGFloat y = v32;
    v47.size.CGFloat width = v33;
    v47.size.CGFloat height = v34;
    CGRect v48 = CGRectApplyAffineTransform(v47, &v39);
    double v35 = v48.origin.x;
    double v36 = v48.origin.y;
    double v37 = v48.size.width;
    double v38 = v48.size.height;
    ((void (*)(CGContextRef))a6)(c);
    CGContextClip(c);
    v49.origin.CGFloat x = v35;
    v49.origin.CGFloat y = v36;
    v49.size.CGFloat width = v37;
    v49.size.CGFloat height = v38;
    CGContextDrawImage(c, v49, *a4);
    CNUIApplyOutlineToContext(c, a2, a6, v35, v36, v37, v38, a8);
    CGContextRestoreGState(c);
  }
}

void CNUIAddCircleToContextInRect(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  double v10 = a4 * 0.5;
  CGFloat MidX = CGRectGetMidX(*(CGRect *)&a2);
  v14.origin.CGFloat x = a2;
  v14.origin.CGFloat y = a3;
  v14.size.CGFloat width = a4;
  v14.size.CGFloat height = a5;
  CGFloat MidY = CGRectGetMidY(v14);
  CGContextAddArc(a1, MidX, MidY, v10, 0.0, 6.28318531, 1);
}

void CNUIDrawCircularImagesInRects(CGContext *a1, CGColor *a2, uint64_t a3, CGImageRef *a4, CGRect *a5, CGFloat a6, CGFloat a7)
{
}

void CNUIApplyOutlineToContext(CGContext *a1, CGColor *a2, void (*a3)(CGContext *, double, double, double, double), double a4, double a5, double a6, double a7, CGFloat a8)
{
  if (a2)
  {
    CGContextSetLineWidth(a1, a8);
    CGContextSetStrokeColorWithColor(a1, a2);
    a3(a1, a4, a5, a6, a7);
    CGContextStrokePath(a1);
  }
}

void sub_20B70B000(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

const void *_cgProcessSafeImageSourceFromData(void *a1, void *a2)
{
  v15[2] = *MEMORY[0x263EF8340];
  id v3 = a1;
  v4 = a2;
  CGContextRef v5 = _safeImageDataType(v3);
  if (!v5) {
    goto LABEL_7;
  }
  CGDataProviderRef v6 = CGDataProviderCreateWithCFData((CFDataRef)v3);
  if (!v6) {
    goto LABEL_7;
  }
  v7 = v6;
  uint64_t v8 = *MEMORY[0x263F0F640];
  v14[0] = *MEMORY[0x263F0F5E0];
  v14[1] = v8;
  v15[0] = MEMORY[0x263EFFA88];
  v15[1] = v5;
  CFDictionaryRef v9 = [NSDictionary dictionaryWithObjects:v15 forKeys:v14 count:2];
  CGImageSourceRef v10 = CGImageSourceCreateWithDataProvider(v7, v9);
  if (!v10 || (CGImageSourceRef v11 = v10, v12 = (const void *)v4[2](v4, v10), CFRelease(v11), !v12))
  {
    CFRelease(v7);

LABEL_7:
    v12 = (const void *)CNUIEmptyPixelImageGet();
    goto LABEL_8;
  }
  CFRelease(v7);
  CFAutorelease(v12);

LABEL_8:
  return v12;
}

id _safeImageDataType(void *a1)
{
  id v1 = a1;
  if (!v1) {
    goto LABEL_5;
  }
  v2 = CGImageSourceGetTypeWithData();
  if (!v2 || ([&unk_26BFD9D78 containsObject:v2] & 1) == 0)
  {

LABEL_5:
    v2 = 0;
  }

  return v2;
}

void sub_20B70C9A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sPhoneNumberValue_block_invoke_2(uint64_t a1, void *a2)
{
  v2 = [a2 value];
  id v3 = [v2 stringValue];

  return v3;
}

void sub_20B70E280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t __DrawSilhouetteInContext_block_invoke_3(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t))(a2 + 16))(a2);
}

void __DrawSilhouetteInContext_block_invoke_2(uint64_t a1)
{
}

void __DrawSilhouetteInContext_block_invoke(uint64_t a1)
{
}

void sub_20B70FE24(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initPRMonogram()
{
  if (LoadPersonaUI_loadPredicate != -1) {
    dispatch_once(&LoadPersonaUI_loadPredicate, &__block_literal_global_154);
  }
  Class result = objc_getClass("PRMonogram");
  classPRMonogram = (uint64_t)result;
  getPRMonogramClass = (uint64_t (*)())PRMonogramFunction;
  return result;
}

Class initPRMonogram_0()
{
  if (LoadPersonaUI_loadPredicate_0 != -1) {
    dispatch_once(&LoadPersonaUI_loadPredicate_0, &__block_literal_global_227);
  }
  Class result = objc_getClass("PRMonogram");
  classPRMonogram_0 = (uint64_t)result;
  getPRMonogramClass_0 = (uint64_t (*)())PRMonogramFunction_0;
  return result;
}

void sub_20B7106A4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void __LoadPersonaUI_block_invoke()
{
  LoadPersonaUI_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI", 1);
  if (!LoadPersonaUI_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadPersonaUI_block_invoke_cold_1();
  }
}

void __LoadPersonaUI_block_invoke_0()
{
  LoadPersonaUI_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI", 1);
  if (!LoadPersonaUI_frameworkLibrary_0 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadPersonaUI_block_invoke_cold_1();
  }
}

CGImageRef CNUICircularImageCreate(void *a1, double a2, double a3, double a4)
{
  v7 = a1;
  if (a4 <= 0.0) {
    goto LABEL_7;
  }
  double v8 = a2 * a4;
  double v9 = a3 * a4;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  CGImageSourceRef v11 = CNUIBitmapContextCreate((int)v8, (int)v9, DeviceRGB);
  if (!v11)
  {
    CGColorSpaceRelease(DeviceRGB);
LABEL_7:
    CGImageRef Image = 0;
    goto LABEL_8;
  }
  v12 = v11;
  double v13 = *MEMORY[0x263F001A8];
  CGFloat v14 = *(double *)(MEMORY[0x263F001A8] + 8);
  CNUIAddCircleToContextInRect(v11, *MEMORY[0x263F001A8], v14, v8, v9);
  CGContextClip(v12);
  if (v7) {
    v7[2](v7, v12, DeviceRGB, v13, v14, v8, v9);
  }
  CGImageRef Image = CGBitmapContextCreateImage(v12);
  CGColorSpaceRelease(DeviceRGB);
  CGContextRelease(v12);
LABEL_8:

  return Image;
}

void CNUIDrawLikenessPlatterInContext(CGContext *a1, CGColorSpace *a2, CGFloat a3, CGFloat a4, CGFloat a5, CGFloat a6)
{
  uint64_t v22 = *MEMORY[0x263EF8340];
  CGContextSaveGState(a1);
  *(_OWORD *)components = xmmword_20B7DB5D0;
  long long v21 = unk_20B7DB5E0;
  v12 = CGColorCreate(a2, components);
  *(_OWORD *)v18 = xmmword_20B7DB5F0;
  long long v19 = unk_20B7DB600;
  double v13 = CGColorCreate(a2, v18);
  v17[0] = v12;
  v17[1] = v13;
  long long v16 = xmmword_20B7DB5C0;
  CGFloat v14 = CGGradientCreateWithColors(a2, (CFArrayRef)[MEMORY[0x263EFF8C0] arrayWithObjects:v17 count:2], (const CGFloat *)&v16);
  v25.origin.CGFloat x = a3;
  v25.origin.CGFloat y = a4;
  v25.size.CGFloat width = a5;
  v25.size.CGFloat height = a6;
  CGFloat MinY = CGRectGetMinY(v25);
  v26.origin.CGFloat x = a3;
  v26.origin.CGFloat y = a4;
  v26.size.CGFloat width = a5;
  v26.size.CGFloat height = a6;
  v24.CGFloat y = CGRectGetMaxY(v26);
  v23.CGFloat x = 0.0;
  v24.CGFloat x = 0.0;
  v23.CGFloat y = MinY;
  CGContextDrawLinearGradient(a1, v14, v23, v24, 0);
  CGContextRestoreGState(a1);
  CGGradientRelease(v14);
  CGColorRelease(v12);
  CGColorRelease(v13);
}

void DrawSilhouetteInContext(CGContext *a1, CGImage *a2, int a3, CGFloat a4, CGFloat a5, CGFloat a6, CGFloat a7)
{
  uint64_t v27 = *MEMORY[0x263EF8340];
  id v14 = objc_alloc_init(MEMORY[0x263F33678]);
  CGContextSaveGState(a1);
  v24[0] = MEMORY[0x263EF8330];
  v24[1] = 3221225472;
  v24[2] = __DrawSilhouetteInContext_block_invoke;
  v24[3] = &__block_descriptor_40_e5_v8__0l;
  v24[4] = a1;
  v15 = (void *)[v24 copy];
  long long v16 = self;
  v17 = _Block_copy(v16);
  [v14 push:v17];

  if (a3)
  {
    v28.origin.CGFloat x = a4;
    v28.origin.CGFloat y = a5;
    v28.size.CGFloat width = a6;
    v28.size.CGFloat height = a7;
    v18 = CGPathCreateWithEllipseInRect(v28, 0);
    v23[0] = MEMORY[0x263EF8330];
    v23[1] = 3221225472;
    v23[2] = __DrawSilhouetteInContext_block_invoke_2;
    v23[3] = &__block_descriptor_40_e5_v8__0l;
    v23[4] = v18;
    long long v19 = (void *)[v23 copy];
    double v20 = self;
    long long v21 = _Block_copy(v20);
    [v14 push:v21];

    CGContextAddPath(a1, v18);
  }
  CGContextClip(a1);
  v29.origin.CGFloat x = a4;
  v29.origin.CGFloat y = a5;
  v29.size.CGFloat width = a6;
  v29.size.CGFloat height = a7;
  CGContextClipToMask(a1, v29, a2);
  *(_OWORD *)components = xmmword_20B7DB650;
  long long v26 = unk_20B7DB660;
  CGContextSetFillColor(a1, components);
  v30.origin.CGFloat x = a4;
  v30.origin.CGFloat y = a5;
  v30.size.CGFloat width = a6;
  v30.size.CGFloat height = a7;
  CGContextFillRect(a1, v30);
  [v14 popAllWithHandler:&__block_literal_global_50];
  id v22 = self;
}

void sub_20B710F64(_Unwind_Exception *a1)
{
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

void sub_20B711990(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_20B712684(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t CoreSpotlightLibrary()
{
  uint64_t v6 = *MEMORY[0x263EF8340];
  v3[0] = 0;
  if (!CoreSpotlightLibraryCore_frameworkLibrary)
  {
    v3[1] = MEMORY[0x263EF8330];
    v3[2] = 3221225472;
    v3[3] = __CoreSpotlightLibraryCore_block_invoke;
    v3[4] = &__block_descriptor_40_e5_v8__0l;
    v3[5] = v3;
    long long v4 = xmmword_264017BB8;
    uint64_t v5 = 0;
    CoreSpotlightLibraryCore_frameworkLibrarCGFloat y = _sl_dlopen();
  }
  uint64_t v0 = CoreSpotlightLibraryCore_frameworkLibrary;
  id v1 = (void *)v3[0];
  if (!CoreSpotlightLibraryCore_frameworkLibrary)
  {
    id v1 = (void *)abort_report_np();
    goto LABEL_7;
  }
  if (v3[0]) {
LABEL_7:
  }
    free(v1);
  return v0;
}

uint64_t __CNGuardOSLog_block_invoke()
{
  CNGuardOSLog_cn_once_object_0 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t sHandleToDestinationTransform_block_invoke(uint64_t a1, void *a2)
{
  return objc_msgSend(a2, "_cnui_IDSIDRepresentation");
}

BOOL sHasValidDestination_block_invoke_2(uint64_t a1, void *a2)
{
  uint64_t v2 = objc_msgSend(a2, "_cnui_IDSIDRepresentation");
  BOOL v3 = v2 != 0;

  return v3;
}

id initIDSServiceNameFaceTime()
{
  if (LoadIDS_loadPredicate != -1) {
    dispatch_once(&LoadIDS_loadPredicate, &__block_literal_global_133);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadIDS_frameworkLibrary, "IDSServiceNameFaceTime");
  objc_storeStrong((id *)&constantIDSServiceNameFaceTime, *v0);
  getIDSServiceNameFaceTime = (uint64_t)IDSServiceNameFaceTimeFunction;
  id v1 = (void *)constantIDSServiceNameFaceTime;
  return v1;
}

id IDSServiceNameFaceTimeFunction()
{
  return (id)constantIDSServiceNameFaceTime;
}

void __LoadIDS_block_invoke()
{
  LoadIDS_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/IDS.framework/IDS", 1);
  if (!LoadIDS_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadIDS_block_invoke_cold_1();
  }
}

id initIDSServiceNameiMessage()
{
  if (LoadIDS_loadPredicate != -1) {
    dispatch_once(&LoadIDS_loadPredicate, &__block_literal_global_133);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadIDS_frameworkLibrary, "IDSServiceNameiMessage");
  objc_storeStrong((id *)&constantIDSServiceNameiMessage, *v0);
  getIDSServiceNameiMessage = (uint64_t)IDSServiceNameiMessageFunction;
  id v1 = (void *)constantIDSServiceNameiMessage;
  return v1;
}

id IDSServiceNameiMessageFunction()
{
  return (id)constantIDSServiceNameiMessage;
}

id initIDSServiceNameFaceTimeMultiway()
{
  if (LoadIDS_loadPredicate != -1) {
    dispatch_once(&LoadIDS_loadPredicate, &__block_literal_global_133);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadIDS_frameworkLibrary, "IDSServiceNameFaceTimeMultiway");
  objc_storeStrong((id *)&constantIDSServiceNameFaceTimeMultiway, *v0);
  getIDSServiceNameFaceTimeMultiwaCGFloat y = (uint64_t)IDSServiceNameFaceTimeMultiwayFunction;
  id v1 = (void *)constantIDSServiceNameFaceTimeMultiway;
  return v1;
}

id IDSServiceNameFaceTimeMultiwayFunction()
{
  return (id)constantIDSServiceNameFaceTimeMultiway;
}

Class initRTTTelephonyUtilities()
{
  if (LoadRTTUtilities_loadPredicate != -1) {
    dispatch_once(&LoadRTTUtilities_loadPredicate, &__block_literal_global_1);
  }
  Class result = objc_getClass("RTTTelephonyUtilities");
  classRTTTelephonyUtilities = (uint64_t)result;
  getRTTTelephonyUtilitiesClass = (uint64_t (*)())RTTTelephonyUtilitiesFunction;
  return result;
}

id RTTTelephonyUtilitiesFunction()
{
  return (id)classRTTTelephonyUtilities;
}

void __LoadRTTUtilities_block_invoke()
{
  LoadRTTUtilities_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities", 1);
  if (!LoadRTTUtilities_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadRTTUtilities_block_invoke_cold_1();
  }
}

Class initTUCallCenter()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_90);
  }
  Class result = objc_getClass("TUCallCenter");
  classTUCallCenter = (uint64_t)result;
  getTUCallCenterClass = (uint64_t (*)())TUCallCenterFunction;
  return result;
}

id TUCallCenterFunction()
{
  return (id)classTUCallCenter;
}

void __LoadTelephonyUtilities_block_invoke()
{
  LoadTelephonyUtilities_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

Class initTUDialRequest()
{
  if (LoadTelephonyUtilities_loadPredicate != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate, &__block_literal_global_90);
  }
  Class result = objc_getClass("TUDialRequest");
  classTUDialRequest = (uint64_t)result;
  getTUDialRequestClass = (uint64_t (*)())TUDialRequestFunction;
  return result;
}

id TUDialRequestFunction()
{
  return (id)classTUDialRequest;
}

uint64_t imageFromImageRef(uint64_t a1, double a2, double a3, double a4)
{
  Class v6 = NSClassFromString(&cfstr_Uiimage.isa);
  return [(objc_class *)v6 imageWithCGImage:a1 scale:0 orientation:a4];
}

uint64_t imageRefFromImage(void *a1)
{
  id v1 = a1;
  return [v1 CGImage];
}

id PRMonogramFunction()
{
  return (id)classPRMonogram;
}

Class initPRLikeness()
{
  if (LoadPersonaUI_loadPredicate != -1) {
    dispatch_once(&LoadPersonaUI_loadPredicate, &__block_literal_global_154);
  }
  Class result = objc_getClass("PRLikeness");
  classPRLikeness = (uint64_t)result;
  getPRLikenessClass = (uint64_t (*)())PRLikenessFunction;
  return result;
}

id PRLikenessFunction()
{
  return (id)classPRLikeness;
}

uint64_t sEmailAddressValue_block_invoke(uint64_t a1, void *a2)
{
  return [a2 value];
}

uint64_t __StringDescriptionForMaskedAvatarIndices_block_invoke(uint64_t a1, void *a2)
{
  return [a2 stringValue];
}

uint64_t __StringDescriptionForMaskedAvatarIndices_block_invoke_0(uint64_t a1, void *a2)
{
  return [a2 stringValue];
}

uint64_t kCNUICoreContactToIdentifer_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t __CNGuardOSLog_block_invoke_0()
{
  CNGuardOSLog_cn_once_object_0_0 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void OUTLINED_FUNCTION_0(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_fault_impl(a1, a2, OS_LOG_TYPE_FAULT, a4, &a9, 2u);
}

void sub_20B71A788(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

uint64_t sCNContactToContactIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t sCNUICoreFamilyMemberContactItemToContactidentifier_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 contactIdentifier];
}

uint64_t sCNUICoreFamilyMemberContactItemNotPersisted_block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 hasBeenPersisted] ^ 1;
}

uint64_t sCNUICoreFamilyMemberContactItemPersisted_block_invoke_4(uint64_t a1, void *a2)
{
  return [a2 hasBeenPersisted];
}

uint64_t __CNGuardOSLog_block_invoke_1()
{
  CNGuardOSLog_cn_once_object_0_1 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t CNUICoreItemFormattedNameComparator_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = [a2 formattedName];
  Class v6 = [v4 formattedName];

  uint64_t v7 = [v5 compare:v6];
  return v7;
}

uint64_t sCNUICoreFamilyMemberContactItemToContactIdentifier_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 contactIdentifier];
}

uint64_t sCNUICoreContactToIdentifier_block_invoke_3(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

Class initTUDialRequest_0()
{
  if (LoadTelephonyUtilities_loadPredicate_0 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_0, &__block_literal_global_99);
  }
  Class result = objc_getClass("TUDialRequest");
  classTUDialRequest_0 = (uint64_t)result;
  getTUDialRequestClass_0 = (uint64_t (*)())TUDialRequestFunction_0;
  return result;
}

id TUDialRequestFunction_0()
{
  return (id)classTUDialRequest_0;
}

void __LoadTelephonyUtilities_block_invoke_0()
{
  LoadTelephonyUtilities_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_0 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

uint64_t __CNGuardOSLog_block_invoke_2()
{
  CNGuardOSLog_cn_once_object_0_2 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t __CNGuardOSLog_block_invoke_3()
{
  CNGuardOSLog_cn_once_object_0_3 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void OUTLINED_FUNCTION_1(void *a1, uint64_t a2, os_log_t log, const char *a4, ...)
{
  va_start(va, a4);
  _os_log_debug_impl(a1, log, OS_LOG_TYPE_DEBUG, a4, (uint8_t *)va, 0x16u);
}

id CNUIUserActionRecentsAddressKindForContactProperty()
{
  return (id)*MEMORY[0x263F37D60];
}

void sub_20B725280(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

void sub_20B725598(_Unwind_Exception *a1, uint64_t a2, ...)
{
  va_start(va, a2);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void *__getCSQueryContinuationActionTypeSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreSpotlightLibrary();
  Class result = dlsym(v2, "CSQueryContinuationActionType");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCSQueryContinuationActionTypeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t __CoreSpotlightLibraryCore_block_invoke()
{
  uint64_t result = _sl_dlopen();
  CoreSpotlightLibraryCore_frameworkLibrarCGFloat y = result;
  return result;
}

void *__getCSSearchableItemActionTypeSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreSpotlightLibrary();
  uint64_t result = dlsym(v2, "CSSearchableItemActionType");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCSSearchableItemActionTypeSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCSSearchQueryStringSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreSpotlightLibrary();
  uint64_t result = dlsym(v2, "CSSearchQueryString");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCSSearchQueryStringSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

void *__getCSSearchableItemActivityIdentifierSymbolLoc_block_invoke(uint64_t a1)
{
  uint64_t v2 = (void *)CoreSpotlightLibrary();
  uint64_t result = dlsym(v2, "CSSearchableItemActivityIdentifier");
  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = result;
  getCSSearchableItemActivityIdentifierSymbolLoc_ptr = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  return result;
}

uint64_t initPKPeerPaymentIsAvailable()
{
  if (LoadPassKitCore_loadPredicate != -1) {
    dispatch_once(&LoadPassKitCore_loadPredicate, &__block_literal_global_18);
  }
  uint64_t v0 = (uint64_t (*)())dlsym((void *)LoadPassKitCore_frameworkLibrary, "PKPeerPaymentIsAvailable");
  softLinkPKPeerPaymentIsAvailable = v0;
  return v0();
}

void __LoadPassKitCore_block_invoke()
{
  LoadPassKitCore_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore", 1);
  if (!LoadPassKitCore_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadPassKitCore_block_invoke_cold_1();
  }
}

id initPKPeerPaymentGetSendPaymentSensitiveURL(void *a1, void *a2, void *a3)
{
  uint64_t v5 = LoadPassKitCore_loadPredicate;
  id v6 = a3;
  id v7 = a2;
  id v8 = a1;
  if (v5 != -1) {
    dispatch_once(&LoadPassKitCore_loadPredicate, &__block_literal_global_18);
  }
  softLinkPKPeerPaymentGetSendPaymentSensitiveURL = (uint64_t (*)())dlsym((void *)LoadPassKitCore_frameworkLibrary, "PKPeerPaymentGetSendPaymentSensitiveURL");
  uint64_t v9 = ((void (*)(id, id, id))softLinkPKPeerPaymentGetSendPaymentSensitiveURL)(v8, v7, v6);

  return v9;
}

Class initTUCallProviderManager()
{
  if (LoadTelephonyUtilities_loadPredicate_1 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_1, &__block_literal_global_95);
  }
  Class result = objc_getClass("TUCallProviderManager");
  classTUCallProviderManager = (uint64_t)result;
  getTUCallProviderManagerClass = (uint64_t (*)())TUCallProviderManagerFunction;
  return result;
}

id TUCallProviderManagerFunction()
{
  return (id)classTUCallProviderManager;
}

void __LoadTelephonyUtilities_block_invoke_1()
{
  LoadTelephonyUtilities_frameworkLibrary_1 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_1 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

uint64_t initABLogDisplayInternalAlert(uint64_t a1)
{
  if (LoadAddressBookLegacy_loadPredicate != -1) {
    dispatch_once(&LoadAddressBookLegacy_loadPredicate, &__block_literal_global_99_0);
  }
  uint64_t v2 = (uint64_t (*)())dlsym((void *)LoadAddressBookLegacy_frameworkLibrary, "ABLogDisplayInternalAlert");
  softLinkABLogDisplayInternalAlert = v2;
  return ((uint64_t (*)(uint64_t))v2)(a1);
}

void __LoadAddressBookLegacy_block_invoke()
{
  LoadAddressBookLegacy_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy", 1);
  if (!LoadAddressBookLegacy_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadAddressBookLegacy_block_invoke_cold_1();
  }
}

Class initTUDialRequest_1()
{
  if (LoadTelephonyUtilities_loadPredicate_1 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_1, &__block_literal_global_95);
  }
  Class result = objc_getClass("TUDialRequest");
  classTUDialRequest_1 = (uint64_t)result;
  getTUDialRequestClass_1 = (uint64_t (*)())TUDialRequestFunction_1;
  return result;
}

id TUDialRequestFunction_1()
{
  return (id)classTUDialRequest_1;
}

Class initTUConversationMember()
{
  if (LoadTelephonyUtilities_loadPredicate_1 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_1, &__block_literal_global_95);
  }
  Class result = objc_getClass("TUConversationMember");
  classTUConversationMember = (uint64_t)result;
  getTUConversationMemberClass = (uint64_t (*)())TUConversationMemberFunction;
  return result;
}

id TUConversationMemberFunction()
{
  return (id)classTUConversationMember;
}

Class initTUJoinConversationRequest()
{
  if (LoadTelephonyUtilities_loadPredicate_1 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_1, &__block_literal_global_95);
  }
  Class result = objc_getClass("TUJoinConversationRequest");
  classTUJoinConversationRequest = (uint64_t)result;
  getTUJoinConversationRequestClass = (uint64_t (*)())TUJoinConversationRequestFunction;
  return result;
}

id TUJoinConversationRequestFunction()
{
  return (id)classTUJoinConversationRequest;
}

void sub_20B728380(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, ...)
{
  va_start(va, a14);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id initkMCCommunicationServiceTypeAudioCall()
{
  if (LoadManagedConfiguration_loadPredicate != -1) {
    dispatch_once(&LoadManagedConfiguration_loadPredicate, &__block_literal_global_20);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadManagedConfiguration_frameworkLibrary, "kMCCommunicationServiceTypeAudioCall");
  objc_storeStrong((id *)&constantkMCCommunicationServiceTypeAudioCall, *v0);
  getkMCCommunicationServiceTypeAudioCall = (uint64_t (*)())kMCCommunicationServiceTypeAudioCallFunction;
  id v1 = (void *)constantkMCCommunicationServiceTypeAudioCall;
  return v1;
}

id kMCCommunicationServiceTypeAudioCallFunction()
{
  return (id)constantkMCCommunicationServiceTypeAudioCall;
}

void __LoadManagedConfiguration_block_invoke()
{
  LoadManagedConfiguration_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration", 1);
  if (!LoadManagedConfiguration_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadManagedConfiguration_block_invoke_cold_1();
  }
}

uint64_t sCNUICoreScrachpadContactToContactIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t __CNGuardOSLog_block_invoke_4()
{
  CNGuardOSLog_cn_once_object_0_4 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B72AFC4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_20B72B140(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t contactToContactIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t __CNGuardOSLog_block_invoke_5()
{
  CNGuardOSLog_cn_once_object_0_5 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void OUTLINED_FUNCTION_0_1(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, a2, OS_LOG_TYPE_ERROR, a4, &a9, 2u);
}

uint64_t __CNGuardOSLog_block_invoke_6()
{
  CNGuardOSLog_cn_once_object_0_6 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B72CE80(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 136), 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 0xCu);
}

void OUTLINED_FUNCTION_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, &a9, 2u);
}

id contactsBackgroundColorServiceInterface()
{
  uint64_t v0 = [MEMORY[0x263F08D80] interfaceWithProtocol:&unk_26BFFB650];
  uint64_t v1 = objc_msgSend(MEMORY[0x263EFFA08], "setWithObjects:", objc_opt_class(), 0);
  [v0 setClasses:v1 forSelector:sel_getBackgroundColorOnImageData_bitmapFormat_withReply_ argumentIndex:1 ofReply:0];

  uint64_t v2 = (void *)MEMORY[0x263EFFA08];
  uint64_t v3 = objc_opt_class();
  uint64_t v4 = objc_msgSend(v2, "setWithObjects:", v3, objc_opt_class(), 0);
  [v0 setClasses:v4 forSelector:sel_getBackgroundColorOnImageData_bitmapFormat_withReply_ argumentIndex:0 ofReply:1];

  return v0;
}

uint64_t CNPropertyDescriptionKeyTransform_block_invoke(uint64_t a1, void *a2)
{
  return [a2 key];
}

id sEmailStringRepresentationsTransform_block_invoke_2(uint64_t a1, void *a2)
{
  v8[1] = *MEMORY[0x263EF8340];
  id v2 = a2;
  uint64_t v3 = *MEMORY[0x263F334E0];
  uint64_t v4 = [v2 value];
  LOBYTE(v3) = (*(uint64_t (**)(uint64_t, void *))(v3 + 16))(v3, v4);

  if (v3)
  {
    uint64_t v5 = (void *)MEMORY[0x263EFFA68];
  }
  else
  {
    id v6 = [v2 value];
    v8[0] = v6;
    uint64_t v5 = [MEMORY[0x263EFF8C0] arrayWithObjects:v8 count:1];
  }
  return v5;
}

void sAddNonEmptyString_block_invoke_3(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v4 = a3;
  if (((*(uint64_t (**)(void))(*MEMORY[0x263F334E0] + 16))() & 1) == 0) {
    [v5 addObject:v4];
  }
}

id sPhoneNumberStringRepresentationsTransform_block_invoke_4(uint64_t a1, void *a2)
{
  id v2 = (void *)MEMORY[0x263EFF980];
  id v3 = a2;
  id v4 = [v2 array];
  id v5 = [v3 value];
  id v6 = [v5 unformattedInternationalStringValue];
  sAddNonEmptyString_block_invoke_3((uint64_t)v6, v4, v6);

  id v7 = [v3 value];
  id v8 = [v7 stringValue];
  sAddNonEmptyString_block_invoke_3((uint64_t)v8, v4, v8);

  uint64_t v9 = [v3 value];
  CGImageSourceRef v10 = [v9 formattedStringValue];
  CGImageSourceRef v11 = objc_msgSend(v10, "_cn_stringBySanitizingPhoneNumber");
  sAddNonEmptyString_block_invoke_3((uint64_t)v11, v4, v11);

  v12 = [v3 value];
  double v13 = [v12 formattedInternationalStringValue];
  id v14 = objc_msgSend(v13, "_cn_stringBySanitizingPhoneNumber");
  sAddNonEmptyString_block_invoke_3((uint64_t)v14, v4, v14);

  v15 = [v3 value];

  long long v16 = [v15 digits];
  sAddNonEmptyString_block_invoke_3((uint64_t)v16, v4, v16);

  v17 = (void *)[v4 copy];
  return v17;
}

void OUTLINED_FUNCTION_1_2(void *a1, NSObject *a2, uint64_t a3, const char *a4, uint8_t *a5)
{
  _os_log_debug_impl(a1, a2, OS_LOG_TYPE_DEBUG, a4, a5, 0xCu);
}

uint64_t initIDSCopyIDForPhoneNumberWithOptions(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = LoadIDS_loadPredicate_0;
  id v6 = a2;
  id v7 = a1;
  if (v5 != -1) {
    dispatch_once(&LoadIDS_loadPredicate_0, &__block_literal_global_26);
  }
  softLinkIDSCopyIDForPhoneNumberWithOptions = (uint64_t (*)())dlsym((void *)LoadIDS_frameworkLibrary_0, "IDSCopyIDForPhoneNumberWithOptions");
  uint64_t v8 = ((uint64_t (*)(id, id, uint64_t))softLinkIDSCopyIDForPhoneNumberWithOptions)(v7, v6, a3);

  return v8;
}

void __LoadIDS_block_invoke_0()
{
  LoadIDS_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/IDS.framework/IDS", 1);
  if (!LoadIDS_frameworkLibrary_0 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadIDS_block_invoke_cold_1();
  }
}

uint64_t initIDSCopyIDForEmailAddress(void *a1)
{
  uint64_t v1 = LoadIDS_loadPredicate_0;
  id v2 = a1;
  if (v1 != -1) {
    dispatch_once(&LoadIDS_loadPredicate_0, &__block_literal_global_26);
  }
  softLinkIDSCopyIDForEmailAddress = (uint64_t (*)())dlsym((void *)LoadIDS_frameworkLibrary_0, "IDSCopyIDForEmailAddress");
  uint64_t v3 = ((uint64_t (*)(id))softLinkIDSCopyIDForEmailAddress)(v2);

  return v3;
}

void sub_20B730500(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B7306C4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B731120(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B731610(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id initTUCallCapabilitiesFaceTimeAvailabilityChangedNotification()
{
  if (LoadTelephonyUtilities_loadPredicate_2 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_2, &__block_literal_global_258);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadTelephonyUtilities_frameworkLibrary_2, "TUCallCapabilitiesFaceTimeAvailabilityChangedNotification");
  objc_storeStrong((id *)&constantTUCallCapabilitiesFaceTimeAvailabilityChangedNotification, *v0);
  getTUCallCapabilitiesFaceTimeAvailabilityChangedNotification = (uint64_t (*)())TUCallCapabilitiesFaceTimeAvailabilityChangedNotificationFunction;
  uint64_t v1 = (void *)constantTUCallCapabilitiesFaceTimeAvailabilityChangedNotification;
  return v1;
}

id TUCallCapabilitiesFaceTimeAvailabilityChangedNotificationFunction()
{
  return (id)constantTUCallCapabilitiesFaceTimeAvailabilityChangedNotification;
}

void __LoadTelephonyUtilities_block_invoke_2()
{
  LoadTelephonyUtilities_frameworkLibrary_2 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_2 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

void OUTLINED_FUNCTION_2_0(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x16u);
}

id background_color_os_log()
{
  if (background_color_os_log_cn_once_token_376 != -1) {
    dispatch_once(&background_color_os_log_cn_once_token_376, &__block_literal_global_79);
  }
  uint64_t v0 = (void *)background_color_os_log_cn_once_object_376;
  return v0;
}

uint64_t __background_color_os_log_block_invoke()
{
  background_color_os_log_cn_once_object_376 = (uint64_t)os_log_create("com.apple.contacts.ui", "backgroundColor");
  return MEMORY[0x270F9A758]();
}

void sub_20B734338(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_7()
{
  CNGuardOSLog_cn_once_object_0_7 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B7366E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20B736B4C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_8()
{
  CNGuardOSLog_cn_once_object_0_8 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B739868(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

uint64_t sContactToIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t __CNGuardOSLog_block_invoke_9()
{
  CNGuardOSLog_cn_once_object_0_9 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t __CNGuardOSLog_block_invoke_10()
{
  CNGuardOSLog_cn_once_object_0_10 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t kCNUICoreContactToIdentifier_block_invoke(uint64_t a1, void *a2)
{
  return [a2 identifier];
}

uint64_t __CNGuardOSLog_block_invoke_11()
{
  CNGuardOSLog_cn_once_object_0_11 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t _mergedCarrierBundleValue(void *a1, uint64_t a2)
{
  uint64_t v18 = *MEMORY[0x263EF8340];
  id v3 = a1;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v4 = objc_msgSend(MEMORY[0x263F4A1F0], "sharedInstance", 0);
  uint64_t v5 = objc_opt_class();
  id v6 = [NSNumber numberWithBool:a2];
  id v7 = [v4 carrierBundleValueFromAllSIMsForKey:v3 ofType:v5 withFallback:v6];

  uint64_t v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v14;
    LOBYTE(a2) = 1;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v14 != v10) {
          objc_enumerationMutation(v7);
        }
        if (a2) {
          a2 = [*(id *)(*((void *)&v13 + 1) + 8 * v11) BOOLValue];
        }
        else {
          a2 = 0;
        }
        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v9);
  }

  return a2;
}

Class initTUCallCapabilities()
{
  if (LoadTelephonyUtilities_loadPredicate_3 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_3, &__block_literal_global_97);
  }
  Class result = objc_getClass("TUCallCapabilities");
  classTUCallCapabilities = (uint64_t)result;
  getTUCallCapabilitiesClass = (uint64_t (*)())TUCallCapabilitiesFunction;
  return result;
}

id TUCallCapabilitiesFunction()
{
  return (id)classTUCallCapabilities;
}

void __LoadTelephonyUtilities_block_invoke_3()
{
  LoadTelephonyUtilities_frameworkLibrary_3 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_3 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

Class initFTiMessageStatus()
{
  if (LoadFTServices_loadPredicate != -1) {
    dispatch_once(&LoadFTServices_loadPredicate, &__block_literal_global_102);
  }
  Class result = objc_getClass("FTiMessageStatus");
  classFTiMessageStatus = (uint64_t)result;
  getFTiMessageStatusClass = (uint64_t (*)())FTiMessageStatusFunction;
  return result;
}

id FTiMessageStatusFunction()
{
  return (id)classFTiMessageStatus;
}

void __LoadFTServices_block_invoke()
{
  LoadFTServices_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/FTServices.framework/FTServices", 1);
  if (!LoadFTServices_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

uint64_t sIsAvailable_block_invoke(uint64_t a1, void *a2)
{
  return [a2 isAvailable];
}

uint64_t __CNGuardOSLog_block_invoke_12()
{
  CNGuardOSLog_cn_once_object_0_12 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t __CNGuardOSLog_block_invoke_13()
{
  CNGuardOSLog_cn_once_object_0_13 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

double _interiorPointForCorner(uint64_t a1, double result, double a3, double a4)
{
  switch(a1)
  {
    case 1:
      double v4 = a3 + a4;
      goto LABEL_6;
    case 2:
      Class result = a4 - result;
      break;
    case 4:
      Class result = result + a4;
      break;
    case 8:
      double v4 = a4 - a3;
LABEL_6:
      Class result = v4;
      break;
    default:
      return result;
  }
  return result;
}

double QL_UIValueCGSizeValue(void *a1)
{
  v3[0] = 0;
  v3[1] = 0;
  NSUInteger sizep = 0;
  id v1 = a1;
  NSGetSizeAndAlignment((const char *)[v1 objCType], &sizep, 0);
  [v1 getValue:v3 size:16];

  return *(double *)v3;
}

double UIRectGetMinY(double a1, double a2)
{
  return a2;
}

double UIRectGetMaxX(double a1, double a2, double a3)
{
  return a1 + a3;
}

double UIRectGetMaxY(double a1, double a2, double a3, double a4)
{
  return a2 + a4;
}

void _addContinuousCornerToContextPath(CGContext *a1, uint64_t a2, double a3, double a4, double a5)
{
  double v8 = 20.0;
  if ((unint64_t)(a2 - 1) <= 3) {
    double v8 = dbl_20B7DB610[a2 - 1];
  }
  double v9 = a5 * 0.95 / 1.528665;
  double v10 = v9 * 0.33 * 0.666666667;
  double v11 = v10 * 1.05304313 + (v9 / 1.05304313 + v10 * 0.33 / 1.05304313) * 0.67;
  double v12 = v10 * 1.05304313 + v11;
  double v13 = v10 * 1.05304313 + v10 * 1.05304313 + v12;
  double v14 = _interiorPointForCorner(a2, v12, 0.0, a3);
  CGFloat v35 = v15;
  CGFloat v36 = v14;
  double v16 = _interiorPointForCorner(a2, v11, 0.0, a3);
  CGFloat v31 = v17;
  CGFloat v32 = v16;
  double v18 = _interiorPointForCorner(a2, 0.0, v11, a3);
  CGFloat v33 = v19;
  CGFloat v34 = v18;
  double v20 = _interiorPointForCorner(a2, 0.0, v12, a3);
  cp2CGFloat y = v21;
  double v22 = _interiorPointForCorner(a2, 0.0, v13, a3);
  CGFloat v24 = v23;
  double v25 = _interiorPointForCorner(a2, v9, v9, a3);
  double v27 = v26;
  CGFloat v28 = v9 * 0.980263;
  __double2 v29 = __sincos_stret(v8 * 0.0174532925);
  CGContextAddCurveToPoint(a1, v36, v35, v32, v31, v25 + v28 * v29.__cosval, v27 + v28 * v29.__sinval);
  CGContextAddArc(a1, v25, v27, v28, v8 * 0.0174532925, (v8 + 50.0) * 0.0174532925, 0);
  CGContextAddCurveToPoint(a1, v34, v33, v20, cp2y, v22, v24);
}

void CNUIAddRoundedRectToContextInRect(CGContext *a1, double a2, CGFloat a3, double a4, double a5)
{
  v21[4] = *MEMORY[0x263EF8340];
  double v10 = floor(a4 * 0.2);
  double v11 = objc_msgSend(MEMORY[0x263F08D40], "valueWithCGSize:", v10, v10);
  v21[0] = v11;
  v21[1] = v11;
  v21[2] = v11;
  v21[3] = v11;
  double v12 = [MEMORY[0x263EFF8C0] arrayWithObjects:v21 count:4];
  double v13 = [v12 objectAtIndex:0];
  objc_msgSend(v13, "QL_CGSizeValue");
  double v15 = v14 * 1.528665;
  double v16 = [v12 objectAtIndex:0];
  objc_msgSend(v16, "QL_CGSizeValue");
  double v18 = v17 * 1.528665;

  double v19 = a2 + a4;
  double v20 = a3 + a5;
  CGContextMoveToPoint(a1, a2 + v15, a3);
  CGContextAddLineToPoint(a1, v19 - v15, a3);
  _addContinuousCornerToContextPath(a1, 2, v19, a3, v15);
  CGContextAddLineToPoint(a1, v19, v20 - v18);
  _addContinuousCornerToContextPath(a1, 8, v19, v20, v15);
  CGContextAddLineToPoint(a1, a2 + v15, v20);
  _addContinuousCornerToContextPath(a1, 4, a2, v20, v15);
  CGContextAddLineToPoint(a1, a2, a3 + v18);
  _addContinuousCornerToContextPath(a1, 1, a2, a3, v15);
}

void CNUIClipContextWithCircleInRect(CGContext *a1, CGFloat a2, CGFloat a3, CGFloat a4, CGFloat a5)
{
  CNUIAddCircleToContextInRect(a1, a2, a3, a4, a5);
  CGContextClip(a1);
}

void CNUIClipContextWithRoundedRectInRect(CGContext *a1, double a2, CGFloat a3, double a4, double a5)
{
  CNUIAddRoundedRectToContextInRect(a1, a2, a3, a4, a5);
  CGContextClip(a1);
}

CGImageRef CNUIRoundedRectImageCreate(void *a1, double a2, double a3, double a4)
{
  id v7 = a1;
  if (a4 <= 0.0) {
    goto LABEL_7;
  }
  double v8 = a2 * a4;
  double v9 = a3 * a4;
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  double v11 = CNUIBitmapContextCreate((int)v8, (int)v9, DeviceRGB);
  if (!v11)
  {
    CGColorSpaceRelease(DeviceRGB);
LABEL_7:
    CGImageRef Image = 0;
    goto LABEL_8;
  }
  double v12 = v11;
  double v13 = *MEMORY[0x263F001A8];
  CGFloat v14 = *(double *)(MEMORY[0x263F001A8] + 8);
  CNUIAddRoundedRectToContextInRect(v11, *MEMORY[0x263F001A8], v14, v8, v9);
  CGContextClip(v12);
  if (v7) {
    v7[2](v7, v12, DeviceRGB, v13, v14, v8, v9);
  }
  CGImageRef Image = CGBitmapContextCreateImage(v12);
  CGColorSpaceRelease(DeviceRGB);
  CGContextRelease(v12);
LABEL_8:

  return Image;
}

uint64_t CNUIEmptyPixelImageGet()
{
  if (CNUIEmptyPixelImageGet_onceToken != -1) {
    dispatch_once(&CNUIEmptyPixelImageGet_onceToken, &__block_literal_global_43);
  }
  return CNUIEmptyPixelImageGet_emptyPixelImage;
}

void __CNUIEmptyPixelImageGet_block_invoke()
{
  DeviceRGB = CGColorSpaceCreateDeviceRGB();
  if (DeviceRGB)
  {
    id v1 = DeviceRGB;
    uint64_t v2 = CNUIBitmapContextCreate(1, 1, DeviceRGB);
    CGColorSpaceRelease(v1);
    if (v2)
    {
      CNUIEmptyPixelImageGet_emptyPixelCGImageRef Image = (uint64_t)CGBitmapContextCreateImage(v2);
      CGContextRelease(v2);
    }
  }
}

double __CNUISmartCeiling(double a1)
{
  double v1 = floor(a1);
  double v2 = a1 - v1;
  double result = ceil(a1);
  if (v2 < 0.00000011920929) {
    return v1;
  }
  return result;
}

double CNUIRectIntegralWithScale(double a1, double a2, double a3, double a4, double a5)
{
  if (CGRectIsNull(*(CGRect *)&a1)) {
    return a1;
  }
  if (a5 == 0.0) {
    [MEMORY[0x263EFF940] raise:*MEMORY[0x263EFF498] format:@"Can't pass a 0 scale when rendering likenesses"];
  }
  if (a5 == 1.0) {
    double v7 = floor(a1);
  }
  else {
    double v7 = floor(a1 * a5) / a5;
  }
  if (a5 == 0.0)
  {
    [MEMORY[0x263EFF940] raise:*MEMORY[0x263EFF498] format:@"Can't pass a 0 scale when rendering likenesses"];
    [MEMORY[0x263EFF940] raise:*MEMORY[0x263EFF498] format:@"Can't pass a 0 scale when rendering likenesses"];
    [MEMORY[0x263EFF940] raise:*MEMORY[0x263EFF498] format:@"Can't pass a 0 scale when rendering likenesses"];
  }
  return v7;
}

void CNUICalculateSubRectsForOverlappingLikenesses(uint64_t a1, uint64_t a2, int a3, double a4, double a5, double a6, double a7, double a8)
{
  if (a1)
  {
    double v12 = 0.666666667;
    if (a1 == 1) {
      double v12 = 1.0;
    }
    if (a6 >= a7) {
      double v13 = a7;
    }
    else {
      double v13 = a6;
    }
    double v14 = v12 * v13;
    double v15 = v13 - v12 * v13;
    if (a3) {
      double v16 = 0.0;
    }
    else {
      double v16 = v13 - v12 * v13;
    }
    *(double *)a2 = CNUIRectIntegralWithScale(v16, 0.0, v14, v14, a8);
    *(void *)(a2 + _Block_object_dispose(&a9, 8) = v17;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v19;
    if (a1 != 1)
    {
      if (a3) {
        double v20 = v15;
      }
      else {
        double v20 = 0.0;
      }
      *(double *)(a2 + 32) = CNUIRectIntegralWithScale(v20, v15, v14, v14, a8);
      *(void *)(a2 + 40) = v21;
      *(void *)(a2 + 4_Block_object_dispose(&a9, 8) = v22;
      *(void *)(a2 + 56) = v23;
    }
  }
}

void CNUIClipPathInRect(CGContext *a1, void (*a2)(void))
{
  a2();
  CGContextClip(a1);
}

void CNUIDrawRoundedRectImagesInRects(CGContext *a1, CGColor *a2, uint64_t a3, CGImageRef *a4, CGRect *a5, CGFloat a6, CGFloat a7)
{
}

uint64_t __CNUIPRLikenessRenderingUtilitiesLog_block_invoke()
{
  CNUIPRLikenessRenderingUtilitiesLog_cn_once_object_1 = (uint64_t)os_log_create("com.apple.contactsui", "CNUIPRLikenessRenderingUtilitiesLog");
  return MEMORY[0x270F9A758]();
}

void sub_20B743374(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B7434E0(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_14()
{
  CNGuardOSLog_cn_once_object_0_14 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B746034(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

Class initTUCallProviderManager_0()
{
  if (LoadTelephonyUtilities_loadPredicate_4 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_4, &__block_literal_global_166);
  }
  Class result = objc_getClass("TUCallProviderManager");
  classTUCallProviderManager_0 = (uint64_t)result;
  getTUCallProviderManagerClass_0 = (uint64_t (*)())TUCallProviderManagerFunction_0;
  return result;
}

id TUCallProviderManagerFunction_0()
{
  return (id)classTUCallProviderManager_0;
}

void __LoadTelephonyUtilities_block_invoke_4()
{
  LoadTelephonyUtilities_frameworkLibrary_4 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_4 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

id PRMonogramFunction_0()
{
  return (id)classPRMonogram_0;
}

uint64_t __CNGuardOSLog_block_invoke_15()
{
  CNGuardOSLog_cn_once_object_0_15 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B74C31C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20B74C700(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

uint64_t __CNGuardOSLog_block_invoke_16()
{
  CNGuardOSLog_cn_once_object_0_16 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

Class initSTRemotePasscodeController()
{
  if (LoadScreenTimeUI_loadPredicate != -1) {
    dispatch_once(&LoadScreenTimeUI_loadPredicate, &__block_literal_global_56);
  }
  Class result = objc_getClass("STRemotePasscodeController");
  classSTRemotePasscodeController = (uint64_t)result;
  getSTRemotePasscodeControllerClass = (uint64_t (*)())STRemotePasscodeControllerFunction;
  return result;
}

id STRemotePasscodeControllerFunction()
{
  return (id)classSTRemotePasscodeController;
}

void __LoadScreenTimeUI_block_invoke()
{
  LoadScreenTimeUI_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI", 1);
  if (!LoadScreenTimeUI_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadScreenTimeUI_block_invoke_cold_1();
  }
}

uint64_t __CNGuardOSLog_block_invoke_17()
{
  CNGuardOSLog_cn_once_object_0_17 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

void sub_20B750F5C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void OUTLINED_FUNCTION_0_3(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x20u);
}

void sub_20B751620(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, ...)
{
  va_start(va, a13);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_20B751AA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B751BE4(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B751FEC(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_20B754248(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sIntentForActionType_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = sIntentForActionType_block_invoke_cn_once_token_4;
  id v3 = a2;
  if (v2 != -1) {
    dispatch_once(&sIntentForActionType_block_invoke_cn_once_token_4, &__block_literal_global_47);
  }
  double v4 = [(id)sIntentForActionType_block_invoke_cn_once_object_4 objectForKeyedSubscript:v3];

  return v4;
}

void sIntentForActionType_block_invoke_2()
{
  v5[3] = *MEMORY[0x263EF8340];
  uint64_t v0 = *MEMORY[0x263EFDF38];
  v4[0] = *MEMORY[0x263EFDEF8];
  v4[1] = v0;
  v5[0] = @"INStartAudioCallIntent";
  v5[1] = @"INStartVideoCallIntent";
  v4[2] = *MEMORY[0x263EFDF18];
  v5[2] = @"INSendMessageIntent";
  double v1 = [NSDictionary dictionaryWithObjects:v5 forKeys:v4 count:3];
  uint64_t v2 = [v1 copy];
  id v3 = (void *)sIntentForActionType_block_invoke_cn_once_object_4;
  sIntentForActionType_block_invoke_cn_once_object_4 = v2;
}

uint64_t __CNGuardOSLog_block_invoke_18()
{
  CNGuardOSLog_cn_once_object_0_18 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

Class initTUDialRequest_2()
{
  if (LoadTelephonyUtilities_loadPredicate_5 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_5, &__block_literal_global_64);
  }
  Class result = objc_getClass("TUDialRequest");
  classTUDialRequest_2 = (uint64_t)result;
  getTUDialRequestClass_2 = (uint64_t (*)())TUDialRequestFunction_2;
  return result;
}

id TUDialRequestFunction_2()
{
  return (id)classTUDialRequest_2;
}

void __LoadTelephonyUtilities_block_invoke_5()
{
  LoadTelephonyUtilities_frameworkLibrary_5 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_5 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

id initFBSOpenApplicationOptionKeyUnlockDevice()
{
  if (LoadFrontBoardServices_loadPredicate != -1) {
    dispatch_once(&LoadFrontBoardServices_loadPredicate, &__block_literal_global_4_3);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadFrontBoardServices_frameworkLibrary, "FBSOpenApplicationOptionKeyUnlockDevice");
  objc_storeStrong((id *)&constantFBSOpenApplicationOptionKeyUnlockDevice, *v0);
  getFBSOpenApplicationOptionKeyUnlockDevice = (uint64_t (*)())FBSOpenApplicationOptionKeyUnlockDeviceFunction;
  double v1 = (void *)constantFBSOpenApplicationOptionKeyUnlockDevice;
  return v1;
}

id FBSOpenApplicationOptionKeyUnlockDeviceFunction()
{
  return (id)constantFBSOpenApplicationOptionKeyUnlockDevice;
}

void __LoadFrontBoardServices_block_invoke()
{
  LoadFrontBoardServices_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices", 1);
  if (!LoadFrontBoardServices_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadFrontBoardServices_block_invoke_cold_1();
  }
}

id initFBSOpenApplicationOptionKeyPromptUnlockDevice()
{
  if (LoadFrontBoardServices_loadPredicate != -1) {
    dispatch_once(&LoadFrontBoardServices_loadPredicate, &__block_literal_global_4_3);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadFrontBoardServices_frameworkLibrary, "FBSOpenApplicationOptionKeyPromptUnlockDevice");
  objc_storeStrong((id *)&constantFBSOpenApplicationOptionKeyPromptUnlockDevice, *v0);
  getFBSOpenApplicationOptionKeyPromptUnlockDevice = (uint64_t (*)())FBSOpenApplicationOptionKeyPromptUnlockDeviceFunction;
  double v1 = (void *)constantFBSOpenApplicationOptionKeyPromptUnlockDevice;
  return v1;
}

id FBSOpenApplicationOptionKeyPromptUnlockDeviceFunction()
{
  return (id)constantFBSOpenApplicationOptionKeyPromptUnlockDevice;
}

void sub_20B759DC0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_20B75A198(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

uint64_t __CNGuardOSLog_block_invoke_19()
{
  CNGuardOSLog_cn_once_object_0_19 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

Class initSTManagementState()
{
  if (LoadScreenTimeCore_loadPredicate != -1) {
    dispatch_once(&LoadScreenTimeCore_loadPredicate, &__block_literal_global_68);
  }
  Class result = objc_getClass("STManagementState");
  classSTManagementState = (uint64_t)result;
  getSTManagementStateClass = (uint64_t (*)())STManagementStateFunction;
  return result;
}

id STManagementStateFunction()
{
  return (id)classSTManagementState;
}

void __LoadScreenTimeCore_block_invoke()
{
  LoadScreenTimeCore_frameworkLibrarCGFloat y = (uint64_t)dlopen("/System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore", 1);
  if (!LoadScreenTimeCore_frameworkLibrary && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadScreenTimeCore_block_invoke_cold_1();
  }
}

uint64_t __CNGuardOSLog_block_invoke_20()
{
  CNGuardOSLog_cn_once_object_0_20 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t __CNGuardOSLog_block_invoke_21()
{
  CNGuardOSLog_cn_once_object_0_21 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t __CNGuardOSLog_block_invoke_22()
{
  CNGuardOSLog_cn_once_object_0_22 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

Class initTUHandle()
{
  if (LoadTelephonyUtilities_loadPredicate_6 != -1) {
    dispatch_once(&LoadTelephonyUtilities_loadPredicate_6, &__block_literal_global_115);
  }
  Class result = objc_getClass("TUHandle");
  classTUHandle = (uint64_t)result;
  getTUHandleClass = (uint64_t (*)())TUHandleFunction;
  return result;
}

id TUHandleFunction()
{
  return (id)classTUHandle;
}

void __LoadTelephonyUtilities_block_invoke_6()
{
  LoadTelephonyUtilities_frameworkLibrary_6 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities", 1);
  if (!LoadTelephonyUtilities_frameworkLibrary_6 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadTelephonyUtilities_block_invoke_cold_1();
  }
}

void sub_20B75E6A0(_Unwind_Exception *exception_object, int a2)
{
  if (a2)
  {
    objc_begin_catch(exception_object);
    JUMPOUT(0x20B75E61CLL);
  }
  _Unwind_Resume(exception_object);
}

id sFamilyElementToMatchingContact_block_invoke(uint64_t a1, void *a2)
{
  uint64_t v2 = [a2 matchingContacts];
  id v3 = [v2 firstObject];

  return v3;
}

uint64_t sFamilyElementIsParent_block_invoke_2(uint64_t a1, void *a2)
{
  return [a2 isParent];
}

uint64_t __CNGuardOSLog_block_invoke_23()
{
  CNGuardOSLog_cn_once_object_0_23 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

uint64_t sActionItemToTargetHandle_block_invoke(uint64_t a1, void *a2)
{
  return [a2 targetHandle];
}

id sSortKeyForUserActionItem_block_invoke_2(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 targetHandle];
  double v4 = [v2 bundleIdentifier];

  uint64_t v5 = +[CNUIUserActionRanking sortKeyWithUsername:v3 bundleIdentifier:v4];

  return v5;
}

id sSortKeyForAdvisedInteraction_block_invoke_3(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 contact];
  double v4 = [v3 identifier];
  uint64_t v5 = [v2 bundleId];

  id v6 = +[CNUIUserActionRanking sortKeyWithUsername:v4 bundleIdentifier:v5];

  return v6;
}

uint64_t __CNGuardOSLog_block_invoke_24()
{
  CNGuardOSLog_cn_once_object_0_24 = (uint64_t)os_log_create("com.apple.contacts", "api");
  return MEMORY[0x270F9A758]();
}

id sMostRecentPair_block_invoke(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = [v5 second];
  double v7 = [v6 mostRecentDate];
  double v8 = [v4 second];
  double v9 = [v8 mostRecentDate];
  if ([v7 compare:v9] == -1) {
    uint64_t v10 = v4;
  }
  else {
    uint64_t v10 = v5;
  }
  id v11 = v10;

  return v11;
}

Class initMCProfileConnection()
{
  if (LoadManagedConfiguration_loadPredicate_0[0] != -1) {
    dispatch_once(LoadManagedConfiguration_loadPredicate_0, &__block_literal_global_80);
  }
  Class result = objc_getClass("MCProfileConnection");
  classMCProfileConnection = (uint64_t)result;
  getMCProfileConnectionClass = (uint64_t (*)())MCProfileConnectionFunction;
  return result;
}

id MCProfileConnectionFunction()
{
  return (id)classMCProfileConnection;
}

void __LoadManagedConfiguration_block_invoke_0()
{
  LoadManagedConfiguration_frameworkLibrary_0 = (uint64_t)dlopen("/System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration", 1);
  if (!LoadManagedConfiguration_frameworkLibrary_0 && os_log_type_enabled(&_os_log_internal, OS_LOG_TYPE_ERROR)) {
    __LoadManagedConfiguration_block_invoke_cold_1();
  }
}

id initMCProfileListChangedNotification()
{
  if (LoadManagedConfiguration_loadPredicate_0[0] != -1) {
    dispatch_once(LoadManagedConfiguration_loadPredicate_0, &__block_literal_global_80);
  }
  uint64_t v0 = (id *)dlsym((void *)LoadManagedConfiguration_frameworkLibrary_0, "MCProfileListChangedNotification");
  objc_storeStrong((id *)&constantMCProfileListChangedNotification, *v0);
  getMCProfileListChangedNotification = (uint64_t (*)())MCProfileListChangedNotificationFunction;
  double v1 = (void *)constantMCProfileListChangedNotification;
  return v1;
}

id MCProfileListChangedNotificationFunction()
{
  return (id)constantMCProfileListChangedNotification;
}

id sub_20B765EE4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DB6C0;
  double v1 = self;
  *(void *)(v0 + 32) = objc_msgSend(v1, sel_descriptorForRequiredKeysForStyle_, 1);
  id v2 = objc_msgSend(v1, sel_descriptorForRequiredKeysForStyle_, 0);
  id v3 = (void *)*MEMORY[0x263EFDF80];
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v3;
  id v4 = (void *)*MEMORY[0x263EFE070];
  id v5 = (void *)*MEMORY[0x263EFDFF8];
  *(void *)(v0 + 56) = *MEMORY[0x263EFE070];
  *(void *)(v0 + 64) = v5;
  id v6 = (void *)*MEMORY[0x263EFDF60];
  double v7 = (void *)*MEMORY[0x263EFE140];
  *(void *)(v0 + 72) = *MEMORY[0x263EFDF60];
  *(void *)(v0 + 80) = v7;
  double v8 = (void *)*MEMORY[0x263EFE158];
  double v9 = (void *)*MEMORY[0x263EFE160];
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFE158];
  *(void *)(v0 + 96) = v9;
  uint64_t v10 = (void *)*MEMORY[0x263EFDF40];
  CGRect v45 = (void *)*MEMORY[0x263EFE0B8];
  uint64_t v11 = *MEMORY[0x263EFE0B8];
  *(void *)(v0 + 104) = *MEMORY[0x263EFDF40];
  *(void *)(v0 + 112) = v11;
  CGRect v44 = (void *)*MEMORY[0x263EFE048];
  CGRect v47 = (void *)*MEMORY[0x263EFE050];
  uint64_t v12 = *MEMORY[0x263EFE050];
  *(void *)(v0 + 120) = *MEMORY[0x263EFE048];
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = v12;
  CGRect v46 = (void *)*MEMORY[0x263EFE068];
  CGRect v49 = (void *)*MEMORY[0x263EFE098];
  uint64_t v13 = *MEMORY[0x263EFE098];
  *(void *)(v0 + 136) = *MEMORY[0x263EFE068];
  *(void *)(v0 + 144) = v13;
  CGRect v48 = (void *)*MEMORY[0x263EFDF70];
  v51 = (void *)*MEMORY[0x263EFE018];
  uint64_t v14 = *MEMORY[0x263EFE018];
  *(void *)(v0 + 152) = *MEMORY[0x263EFDF70];
  *(void *)(v0 + 160) = v14;
  v50 = (void *)*MEMORY[0x263EFDF48];
  v54 = (void *)*MEMORY[0x263EFE058];
  uint64_t v15 = *MEMORY[0x263EFE058];
  *(void *)(v0 + 16_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFDF48];
  *(void *)(v0 + 176) = v15;
  v53 = (void *)*MEMORY[0x263EFE060];
  double v16 = (void **)MEMORY[0x263EFE0A0];
  *(void *)(v0 + 184) = *MEMORY[0x263EFE060];
  *(void *)(v0 + 192) = v5;
  v52 = *v16;
  v56 = (void *)*MEMORY[0x263EFDF68];
  uint64_t v17 = *MEMORY[0x263EFDF68];
  *(void *)(v0 + 200) = v52;
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v17;
  v55 = (void *)*MEMORY[0x263EFE150];
  uint64_t v18 = *MEMORY[0x263EFE0F8];
  v58 = (void *)*MEMORY[0x263EFE0F8];
  *(void *)(v0 + 216) = *MEMORY[0x263EFE150];
  *(void *)(v0 + 224) = v18;
  v57 = (void *)*MEMORY[0x263EFE110];
  uint64_t v19 = *MEMORY[0x263EFE010];
  v59 = (void *)*MEMORY[0x263EFE010];
  *(void *)(v0 + 232) = *MEMORY[0x263EFE110];
  *(void *)(v0 + 240) = v19;
  sub_20B7D3C58();
  qword_26769AE98 = v0;
  id v20 = v5;
  id v21 = v3;
  id v22 = v4;
  id v23 = v6;
  id v24 = v7;
  id v25 = v8;
  id v26 = v9;
  id v27 = v10;
  id v28 = v45;
  id v29 = v44;
  id v30 = v47;
  id v31 = v46;
  id v32 = v49;
  id v33 = v48;
  id v34 = v51;
  id v35 = v50;
  id v36 = v54;
  id v37 = v53;
  id v38 = v52;
  id v39 = v56;
  id v40 = v55;
  id v41 = v58;
  id v42 = v57;
  return v59;
}

uint64_t static CNUINameDrop.descriptorForRequiredKeys.getter()
{
  if (qword_26769AE90 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t static CNUINameDrop.vCardMergingContact(_:with:)(void *a1, void *a2)
{
  v57[4] = *(id *)MEMORY[0x263EF8340];
  objc_msgSend(a1, sel_mutableCopy);
  sub_20B7D3DF8();
  swift_unknownObjectRelease();
  sub_20B76D188(0, (unint64_t *)&qword_26769B028);
  swift_dynamicCast();
  objc_msgSend(v56, sel_setContactType_, objc_msgSend(a2, sel_contactType));
  id v4 = objc_msgSend(a2, sel_givenName);
  if (!v4)
  {
    sub_20B7D3B08();
    id v4 = (id)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v56, sel_setGivenName_, v4);

  id v5 = objc_msgSend(a2, sel_familyName);
  if (!v5)
  {
    sub_20B7D3B08();
    id v5 = (id)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
  }
  objc_msgSend(v56, sel_setFamilyName_, v5);

  id v6 = objc_msgSend(a2, sel_thumbnailImageData);
  if (v6)
  {
    double v7 = v6;
    uint64_t v8 = sub_20B7D3488();
    unint64_t v10 = v9;

    sub_20B76C024(v8, v10);
    id v11 = objc_msgSend(a2, sel_thumbnailImageData);
    if (v11)
    {
      uint64_t v12 = sub_20B7D3488();
      unint64_t v14 = v13;

      id v11 = (id)sub_20B7D3478();
      sub_20B76C024(v12, v14);
    }
    objc_msgSend(v56, sel_setThumbnailImageData_, v11);
  }
  else
  {
    id v15 = objc_msgSend(a2, sel_imageData);
    if (v15)
    {
      double v16 = v15;
      uint64_t v17 = sub_20B7D3488();
      unint64_t v19 = v18;

      id v20 = (void *)sub_20B7D3478();
      objc_msgSend(a2, sel_cropRect);
      id v21 = (id)CNImageUtilsCroppedImageDataFromFullSizeImageData();

      uint64_t v22 = sub_20B7D3488();
      unint64_t v24 = v23;

      id v25 = (void *)sub_20B7D3478();
      sub_20B76C024(v22, v24);
      objc_msgSend(v56, sel_setThumbnailImageData_, v25);

      sub_20B76C024(v17, v19);
    }
  }
  id v26 = objc_msgSend(a2, sel_wallpaper);

  if (v26)
  {
    id v27 = objc_msgSend(a2, sel_wallpaper);
    objc_msgSend(v56, sel_setWallpaper_, v27);

    objc_msgSend(v56, sel_setSharedPhotoDisplayPreference_, 1);
  }
  id v28 = objc_msgSend(a2, sel_watchWallpaperImageData);
  if (v28)
  {
    uint64_t v29 = sub_20B7D3488();
    unint64_t v31 = v30;

    id v28 = (id)sub_20B7D3478();
    sub_20B76C024(v29, v31);
  }
  objc_msgSend(v56, sel_setWatchWallpaperImageData_, v28);

  id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F8AFB8]), sel_init);
  objc_msgSend(v32, sel_setIncludePhotos_, 1);
  objc_msgSend(v32, sel_setIncludeWallpaper_, 1);
  objc_msgSend(v32, sel_setIncludeNotes_, 1);
  id v33 = objc_msgSend(a1, sel_addressingGrammars);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v34 = sub_20B7D3C38();

  if (v34 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v35 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v35 = *(void *)((v34 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v35)
  {
    id v36 = objc_msgSend(a1, sel_addressingGrammars);
    if (!v36)
    {
      sub_20B7D3C38();
      id v36 = (id)sub_20B7D3C28();
      swift_bridgeObjectRelease();
    }
    objc_msgSend(v56, sel_setAddressingGrammars_, v36);

    objc_msgSend(v32, sel_setIncludePronouns_, 1);
    objc_msgSend(v32, sel_setUseUnencryptedPronouns_, 1);
  }
  id v37 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_20B7DB6D0;
  *(void *)(v38 + 32) = v56;
  sub_20B7D3C58();
  sub_20B76D188(0, (unint64_t *)&qword_26769B040);
  id v39 = v56;
  id v40 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  v57[0] = 0;
  id v41 = objc_msgSend(v37, sel_dataWithContacts_options_error_, v40, v32, v57);

  id v42 = v57[0];
  if (v41)
  {
    uint64_t v43 = sub_20B7D3488();
  }
  else
  {
    CGRect v44 = v42;
    CGRect v45 = (void *)sub_20B7D3398();

    swift_willThrow();
    if (qword_26769AEC0 != -1) {
      swift_once();
    }
    uint64_t v46 = sub_20B7D39F8();
    __swift_project_value_buffer(v46, (uint64_t)qword_26769AEC8);
    id v47 = v45;
    id v48 = v45;
    CGRect v49 = sub_20B7D39D8();
    os_log_type_t v50 = sub_20B7D3D48();
    if (os_log_type_enabled(v49, v50))
    {
      v51 = (uint8_t *)swift_slowAlloc();
      v52 = (void *)swift_slowAlloc();
      *(_DWORD *)v51 = 138412290;
      id v53 = v45;
      v54 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v57[0] = v54;
      sub_20B7D3D88();
      void *v52 = v54;

      _os_log_impl(&dword_20B704000, v49, v50, "Could not encode vCard: %@", v51, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v52, -1, -1);
      MEMORY[0x210538E40](v51, -1, -1);
    }
    else
    {
    }
    return 0;
  }
  return v43;
}

id static CNUINameDrop.getFieldPreferences()()
{
  return _s14ContactsUICore12CNUINameDropC19getFieldPreferences3forSo9CNContactCAGSg_tFZ_0(0);
}

id sub_20B766A00()
{
  v30[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26769AEE0 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_26769AEE8;
  if (!qword_26769AEE8) {
    return 0;
  }
  double v1 = (void *)sub_20B7D3AF8();
  id v2 = objc_msgSend(v0, sel_dataForKey_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = sub_20B7D3488();
  unint64_t v5 = v4;

  id v6 = self;
  double v7 = (void *)sub_20B7D3478();
  v30[0] = 0;
  id v8 = objc_msgSend(v6, sel_contactsWithData_error_, v7, v30);

  id v9 = v30[0];
  if (!v8)
  {
    id v14 = v30[0];
    id v9 = (id)sub_20B7D3398();

    swift_willThrow();
    if (qword_26769AEC0 == -1)
    {
LABEL_13:
      uint64_t v15 = sub_20B7D39F8();
      __swift_project_value_buffer(v15, (uint64_t)qword_26769AEC8);
      id v16 = v9;
      id v17 = v9;
      unint64_t v18 = sub_20B7D39D8();
      os_log_type_t v19 = sub_20B7D3D48();
      if (os_log_type_enabled(v18, v19))
      {
        id v20 = (uint8_t *)swift_slowAlloc();
        id v21 = (void *)swift_slowAlloc();
        *(_DWORD *)id v20 = 138412290;
        id v22 = v9;
        unint64_t v23 = (void *)_swift_stdlib_bridgeErrorToNSError();
        v30[0] = v23;
        sub_20B7D3D88();
        *id v21 = v23;

        _os_log_impl(&dword_20B704000, v18, v19, "Could not decode vCard from pref: %@", v20, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
        swift_arrayDestroy();
        MEMORY[0x210538E40](v21, -1, -1);
        MEMORY[0x210538E40](v20, -1, -1);
        sub_20B76C024(v3, v5);

        return 0;
      }
      sub_20B76C024(v3, v5);

LABEL_22:
      return 0;
    }
LABEL_27:
    swift_once();
    goto LABEL_13;
  }
  sub_20B76D188(0, (unint64_t *)&qword_26769B040);
  unint64_t v10 = sub_20B7D3C38();
  id v11 = v9;

  if (!(v10 >> 62))
  {
    if (*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_8;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    if (qword_26769AEC0 != -1) {
      swift_once();
    }
    uint64_t v25 = sub_20B7D39F8();
    __swift_project_value_buffer(v25, (uint64_t)qword_26769AEC8);
    unint64_t v18 = sub_20B7D39D8();
    os_log_type_t v26 = sub_20B7D3D48();
    if (os_log_type_enabled(v18, v26))
    {
      id v27 = (uint8_t *)swift_slowAlloc();
      id v28 = (void *)swift_slowAlloc();
      v30[0] = v28;
      *(_DWORD *)id v27 = 136315138;
      sub_20B77C87C(0xD000000000000010, 0x800000020B7E7330, (uint64_t *)v30);
      sub_20B7D3D88();
      _os_log_impl(&dword_20B704000, v18, v26, "Could not turn preference %s into CNContact", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v28, -1, -1);
      MEMORY[0x210538E40](v27, -1, -1);
    }
    sub_20B76C024(v3, v5);
    goto LABEL_22;
  }
  swift_bridgeObjectRetain();
  uint64_t v24 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v24) {
    goto LABEL_17;
  }
LABEL_8:
  if ((v10 & 0xC000000000000001) != 0)
  {
    id v12 = (id)MEMORY[0x210537C20](0, v10);
    goto LABEL_11;
  }
  if (!*(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    __break(1u);
    goto LABEL_27;
  }
  id v12 = *(id *)(v10 + 32);
LABEL_11:
  id v13 = v12;
  swift_bridgeObjectRelease();
  sub_20B76C024(v3, v5);
  return v13;
}

uint64_t sub_20B766F20()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  double v1 = (void *)sub_20B7D3AF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (!v2) {
    return 0;
  }
  uint64_t v3 = (void *)sub_20B7D3AF8();
  id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

  if (!v4)
  {

    return 0;
  }
  uint64_t v5 = sub_20B7D3B08();

  return v5;
}

void static CNUINameDrop.saveFieldPreferences(for:)(void *a1)
{
  v34[1] = *(id *)MEMORY[0x263EF8340];
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F8AFB8]), sel_init);
  [v2 setIncludeNotes:1];
  uint64_t v3 = self;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DB6D0;
  *(void *)(v4 + 32) = a1;
  sub_20B7D3C58();
  sub_20B76D188(0, (unint64_t *)&qword_26769B040);
  id v5 = a1;
  id v6 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  v34[0] = 0;
  id v7 = objc_msgSend(v3, sel_dataWithContacts_options_error_, v6, v2, v34);

  id v8 = v34[0];
  if (v7)
  {
    uint64_t v9 = sub_20B7D3488();
    unint64_t v11 = v10;

    if (qword_26769AEE0 != -1) {
      swift_once();
    }
    id v12 = (void *)qword_26769AEE8;
    if (qword_26769AEE8)
    {
      id v13 = (void *)sub_20B7D3478();
      id v14 = (void *)sub_20B7D3AF8();
      objc_msgSend(v12, sel_setObject_forKey_, v13, v14);
    }
    id v15 = objc_msgSend(v5, sel_addressingGrammars);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
    unint64_t v16 = sub_20B7D3C38();

    if (v16 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v17 = *(void *)((v16 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    unint64_t v18 = (void *)qword_26769AEE8;
    if (qword_26769AEE8)
    {
      os_log_type_t v19 = (void *)sub_20B7D3AF8();
      objc_msgSend(v18, sel_setBool_forKey_, v17 != 0, v19);
    }
    if (qword_26769AEC0 != -1) {
      swift_once();
    }
    uint64_t v20 = sub_20B7D39F8();
    __swift_project_value_buffer(v20, (uint64_t)qword_26769AEC8);
    id v21 = sub_20B7D39D8();
    os_log_type_t v22 = sub_20B7D3D38();
    if (os_log_type_enabled(v21, v22))
    {
      unint64_t v23 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v23 = 0;
      _os_log_impl(&dword_20B704000, v21, v22, "Saved NameDrop field pref", v23, 2u);
      MEMORY[0x210538E40](v23, -1, -1);
      sub_20B76C024(v9, v11);
    }
    else
    {

      sub_20B76C024(v9, v11);
    }
  }
  else
  {
    uint64_t v24 = v8;
    uint64_t v25 = (void *)sub_20B7D3398();

    swift_willThrow();
    if (qword_26769AEC0 != -1) {
      swift_once();
    }
    uint64_t v26 = sub_20B7D39F8();
    __swift_project_value_buffer(v26, (uint64_t)qword_26769AEC8);
    id v27 = v25;
    id v28 = v25;
    id v21 = sub_20B7D39D8();
    os_log_type_t v29 = sub_20B7D3D48();
    if (os_log_type_enabled(v21, v29))
    {
      unint64_t v30 = (uint8_t *)swift_slowAlloc();
      unint64_t v31 = (void *)swift_slowAlloc();
      *(_DWORD *)unint64_t v30 = 138412290;
      id v32 = v25;
      id v33 = (void *)_swift_stdlib_bridgeErrorToNSError();
      v34[0] = v33;
      sub_20B7D3D88();
      *unint64_t v31 = v33;

      _os_log_impl(&dword_20B704000, v21, v29, "Failed to save NameDrop field pref: %@", v30, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v31, -1, -1);
      MEMORY[0x210538E40](v30, -1, -1);

      id v21 = v2;
    }
    else
    {
    }
  }
}

void static CNUINameDrop.fieldSummary(contact:)(id a1@<X0>, void *a2@<X8>)
{
  v312 = a2;
  uint64_t v5 = sub_20B7D3AE8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  ((void (*)(void))MEMORY[0x270FA5388])();
  sub_20B7D3A88();
  uint64_t v310 = sub_20B769CF4((uint64_t)&v298 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), MEMORY[0x263F8EE78]);
  unint64_t v311 = v8;
  uint64_t v9 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v315 = v5;
  v313 = (char **)(v6 + 8);
  v9((char *)&v298 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  id v10 = objc_msgSend(a1, sel_phoneNumbers);
  unint64_t v11 = (char **)__swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v12 = sub_20B7D3C38();

  if (v12 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v13 = *(void *)((v12 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v314 = v7;
  v316 = v9;
  swift_bridgeObjectRelease();
  id v14 = (void *)MEMORY[0x263F8EE78];
  if (v13)
  {
    id v14 = sub_20B76B8D8(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v16 = v14[2];
    unint64_t v15 = v14[3];
    if (v16 >= v15 >> 1) {
      id v14 = sub_20B76B8D8((void *)(v15 > 1), v16 + 1, 1, v14);
    }
    void v14[2] = v16 + 1;
    uint64_t v17 = &v14[2 * v16];
    v17[4] = 0x69662E656E6F6870;
    v17[5] = 0xEA00000000006C6CLL;
  }
  id v18 = objc_msgSend(a1, sel_emailAddresses);
  unint64_t v19 = sub_20B7D3C38();

  if (v19 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v20 = *(void *)((v19 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v20)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
    }
    unint64_t v22 = v14[2];
    unint64_t v21 = v14[3];
    if (v22 >= v21 >> 1) {
      id v14 = sub_20B76B8D8((void *)(v21 > 1), v22 + 1, 1, v14);
    }
    void v14[2] = v22 + 1;
    unint64_t v23 = (char *)&v14[2 * v22];
    strcpy(v23 + 32, "envelope.fill");
    *((_WORD *)v23 + 23) = -4864;
  }
  id v24 = objc_msgSend(a1, sel_urlAddresses);
  unint64_t v25 = sub_20B7D3C38();

  if (v25 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v26 = *(void *)((v25 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (v26)
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
    }
    unint64_t v28 = v14[2];
    unint64_t v27 = v14[3];
    if (v28 >= v27 >> 1) {
      id v14 = sub_20B76B8D8((void *)(v27 > 1), v28 + 1, 1, v14);
    }
    void v14[2] = v28 + 1;
    os_log_type_t v29 = &v14[2 * v28];
    v29[4] = 0x662E697261666173;
    v29[5] = 0xEB000000006C6C69;
  }
  unint64_t v30 = (unint64_t)&selRef_isSuggested;
  id v31 = objc_msgSend(a1, sel_postalAddresses);
  unint64_t v32 = sub_20B7D3C38();

  if (v32 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v33 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v33 = *(void *)((v32 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v33) {
    goto LABEL_64;
  }
  id v34 = objc_msgSend(a1, sel_postalAddresses);
  unint64_t v35 = sub_20B7D3C38();

  if (!(v35 >> 62))
  {
    if (*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_28;
    }
LABEL_63:
    swift_bridgeObjectRelease();
    goto LABEL_64;
  }
  swift_bridgeObjectRetain();
  uint64_t v56 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v56) {
    goto LABEL_63;
  }
LABEL_28:
  if ((v35 & 0xC000000000000001) != 0)
  {
    unint64_t v30 = (unint64_t)v11;
    id v36 = (char **)MEMORY[0x210537C20](0, v35);
  }
  else
  {
    if (!*(void *)((v35 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_125;
    }
    unint64_t v30 = (unint64_t)v11;
    id v36 = (char **)*(id *)(v35 + 32);
  }
  unint64_t v11 = v36;
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v11, sel_label);
  if (!v37)
  {
    sub_20B7D3B08();
    goto LABEL_37;
  }
  uint64_t v38 = v37;
  uint64_t v39 = sub_20B7D3B08();
  uint64_t v41 = v40;

  uint64_t v42 = sub_20B7D3B08();
  if (!v41)
  {
LABEL_37:
    swift_bridgeObjectRelease();
    sub_20B7D3B08();
    swift_bridgeObjectRelease();
    goto LABEL_38;
  }
  if (v42 != v39 || v41 != v43)
  {
    char v49 = sub_20B7D4018();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_44;
    }
    if (sub_20B7D3B08() == v39 && v41 == v52)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_54;
    }
    char v53 = sub_20B7D4018();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v53)
    {
LABEL_54:
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_55;
      }
      goto LABEL_218;
    }
LABEL_38:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
    }
    unint64_t v45 = v14[2];
    unint64_t v44 = v14[3];
    if (v45 >= v44 >> 1) {
      id v14 = sub_20B76B8D8((void *)(v44 > 1), v45 + 1, 1, v14);
    }
    void v14[2] = v45 + 1;
    uint64_t v46 = &v14[2 * v45];
    unint64_t v47 = 0xD00000000000001ALL;
    unint64_t i = 0x800000020B7E7370;
    goto LABEL_49;
  }
  swift_bridgeObjectRelease();
LABEL_44:
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
  }
  unint64_t v51 = v14[2];
  unint64_t v50 = v14[3];
  if (v51 >= v50 >> 1) {
    id v14 = sub_20B76B8D8((void *)(v50 > 1), v51 + 1, 1, v14);
  }
  void v14[2] = v51 + 1;
  uint64_t v46 = &v14[2 * v51];
  unint64_t v47 = 0x69662E6573756F68;
  for (unint64_t i = 0xEA00000000006C6CLL; ; unint64_t i = 0xEF6C6C69662E322ELL)
  {
LABEL_49:
    v46[4] = v47;
    v46[5] = i;

    unint64_t v11 = (char **)v30;
LABEL_64:
    id v57 = objc_msgSend(a1, sel_birthday);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
    ((void (*)(void))MEMORY[0x270FA5388])();
    v59 = (char *)&v298 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
    if (v57)
    {
      uint64_t v60 = sub_20B7D32C8();
      uint64_t v61 = *(void *)(v60 - 8);
      ((void (*)(void))MEMORY[0x270FA5388])();
      v63 = (char *)&v298 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D31D8();

      (*(void (**)(char *, char *, uint64_t))(v61 + 32))(v59, v63, v60);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v61 + 56))(v59, 0, 1, v60);
      v64 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48);
      unint64_t v30 = v61 + 48;
      if (v64(v59, 1, v60) != 1)
      {
        sub_20B76D2E4((uint64_t)v59, &qword_26769B050);
        if (swift_isUniquelyReferenced_nonNull_native())
        {
LABEL_73:
          unint64_t v70 = v14[2];
          unint64_t v69 = v14[3];
          if (v70 >= v69 >> 1) {
            id v14 = sub_20B76B8D8((void *)(v69 > 1), v70 + 1, 1, v14);
          }
          void v14[2] = v70 + 1;
          v71 = &v14[2 * v70];
          v71[4] = 0x7261646E656C6163;
          v71[5] = 0xE800000000000000;
          int v3 = 1;
          goto LABEL_77;
        }
LABEL_67:
        id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
        goto LABEL_73;
      }
    }
    else
    {
      uint64_t v65 = sub_20B7D32C8();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v59, 1, 1, v65);
    }
    sub_20B76D2E4((uint64_t)v59, &qword_26769B050);
    id v66 = objc_msgSend(a1, sel_dates);
    unint64_t v67 = sub_20B7D3C38();

    if (v67 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v68 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v68 = *(void *)((v67 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v68)
    {
      if (swift_isUniquelyReferenced_nonNull_native()) {
        goto LABEL_73;
      }
      goto LABEL_67;
    }
    int v3 = 0;
LABEL_77:
    id v2 = &selRef_setSize_;
    id v72 = objc_msgSend(a1, sel_contactRelations);
    unint64_t v73 = sub_20B7D3C38();

    if (v73 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v74 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v74 = *(void *)((v73 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v74) {
      goto LABEL_83;
    }
    id v75 = objc_msgSend(a1, sel_socialProfiles);
    unint64_t v76 = sub_20B7D3C38();

    if (v76 >> 62)
    {
LABEL_125:
      swift_bridgeObjectRetain();
      uint64_t v77 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v77 = *(void *)((v76 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v77)
    {
LABEL_83:
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
      }
      unint64_t v79 = v14[2];
      unint64_t v78 = v14[3];
      if (v79 >= v78 >> 1) {
        id v14 = sub_20B76B8D8((void *)(v78 > 1), v79 + 1, 1, v14);
      }
      void v14[2] = v79 + 1;
      v80 = &v14[2 * v79];
      v80[4] = 0x662E6E6F73726570;
      v80[5] = 0xEB000000006C6C69;
    }
    id v81 = objc_msgSend(a1, sel_instantMessageAddresses);
    unint64_t v82 = sub_20B7D3C38();

    if (v82 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v83 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v83 = *(void *)((v82 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v83)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
      }
      unint64_t v30 = v14[2];
      unint64_t v84 = v14[3];
      if (v30 >= v84 >> 1) {
        id v14 = sub_20B76B8D8((void *)(v84 > 1), v30 + 1, 1, v14);
      }
      void v14[2] = v30 + 1;
      v85 = &v14[2 * v30];
      v85[4] = 0xD000000000000010;
      v85[5] = 0x800000020B7E7390;
    }
    id v86 = objc_msgSend(a1, sel_termsOfAddress);
    sub_20B76D188(0, &qword_26769B058);
    unint64_t v87 = sub_20B7D3C38();

    if (v87 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v88 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v88 = *(void *)((v87 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v89 = swift_bridgeObjectRelease();
    if (v88)
    {
      MEMORY[0x270FA5388](v89);
      v91 = (char *)&v298 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D3A88();
      uint64_t v92 = MEMORY[0x263F8EE78];
      uint64_t v93 = (uint64_t)v91;
      goto LABEL_100;
    }
    if (v14[2] != 1) {
      goto LABEL_145;
    }
    id v100 = objc_msgSend(a1, sel_phoneNumbers);
    unint64_t v101 = sub_20B7D3C38();

    if (v101 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v102 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v102 = *(void *)((v101 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v102)
    {
      id v103 = objc_msgSend(a1, sel_phoneNumbers);
      unint64_t v104 = sub_20B7D3C38();

      if (v104 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v105 = sub_20B7D3F38();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v105 = *(void *)((v104 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      swift_bridgeObjectRelease();
      if (v105 != 1)
      {
LABEL_141:
        uint64_t v121 = swift_bridgeObjectRelease();
        MEMORY[0x270FA5388](v121);
        v91 = (char *)&v298 - ((v122 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_20B7D3A88();
        id v14 = (void *)MEMORY[0x263F8EE78];
        uint64_t v93 = (uint64_t)v91;
        uint64_t v92 = MEMORY[0x263F8EE78];
LABEL_100:
        uint64_t v94 = sub_20B769CF4(v93, v92);
        unint64_t v96 = v95;
        v316(v91, v315);
LABEL_101:
        uint64_t v98 = v310;
        unint64_t v97 = v311;
        v99 = v312;
LABEL_102:
        void *v99 = v14;
        v99[1] = v94;
        v99[2] = v96;
        v99[3] = v98;
        v99[4] = v97;
        return;
      }
      id v106 = objc_msgSend(a1, sel_phoneNumbers);
      unint64_t v107 = sub_20B7D3C38();

      if (v107 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v114 = sub_20B7D3F38();
        swift_bridgeObjectRelease();
        if (v114)
        {
LABEL_112:
          if ((v107 & 0xC000000000000001) != 0)
          {
            id v108 = (id)MEMORY[0x210537C20](0, v107);
            v99 = v312;
          }
          else
          {
            v99 = v312;
            if (!*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10))
            {
              __break(1u);
              goto LABEL_197;
            }
            id v108 = *(id *)(v107 + 32);
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v109 = objc_msgSend(v108, sel_value);
          id v110 = objc_msgSend(v109, sel_formattedStringValue);

          if (!v110)
          {
            id v111 = objc_msgSend(v108, sel_value);
            id v112 = objc_msgSend(v111, sel_stringValue);

            uint64_t v94 = sub_20B7D3B08();
            unint64_t v96 = v113;

LABEL_140:
            uint64_t v98 = 0;
            unint64_t v97 = 0xE000000000000000;
            id v14 = (void *)MEMORY[0x263F8EE78];
            goto LABEL_102;
          }
LABEL_139:
          uint64_t v94 = sub_20B7D3B08();
          unint64_t v96 = v120;

          goto LABEL_140;
        }
      }
      else if (*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        goto LABEL_112;
      }
      swift_bridgeObjectRelease();
    }
    id v115 = objc_msgSend(a1, sel_emailAddresses);
    unint64_t v116 = sub_20B7D3C38();

    if (v116 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v117 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v117 = *(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    if (v117 != 1) {
      goto LABEL_141;
    }
    id v118 = objc_msgSend(a1, sel_emailAddresses);
    unint64_t v119 = sub_20B7D3C38();

    if (v119 >> 62) {
      break;
    }
    if (!*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
      goto LABEL_144;
    }
LABEL_135:
    if ((v119 & 0xC000000000000001) != 0)
    {
      id v108 = (id)MEMORY[0x210537C20](0, v119);
      v99 = v312;
      goto LABEL_138;
    }
    v99 = v312;
    if (*(void *)((v119 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      id v108 = *(id *)(v119 + 32);
LABEL_138:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v110 = objc_msgSend(v108, sel_value);
      goto LABEL_139;
    }
    __break(1u);
LABEL_218:
    id v14 = sub_20B76B8D8(0, v14[2] + 1, 1, v14);
LABEL_55:
    unint64_t v55 = v14[2];
    unint64_t v54 = v14[3];
    if (v55 >= v54 >> 1) {
      id v14 = sub_20B76B8D8((void *)(v54 > 1), v55 + 1, 1, v14);
    }
    void v14[2] = v55 + 1;
    uint64_t v46 = &v14[2 * v55];
    unint64_t v47 = 0x676E69646C697562;
  }
  swift_bridgeObjectRetain();
  uint64_t v123 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (v123) {
    goto LABEL_135;
  }
LABEL_144:
  swift_bridgeObjectRelease();
LABEL_145:
  id v124 = [a1 v2[74]];
  unint64_t v125 = sub_20B7D3C38();

  if (v125 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v126 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v126 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v127 = swift_bridgeObjectRelease();
  LODWORD(v306) = v3;
  if (v126)
  {
    id v128 = objc_msgSend(a1, sel_socialProfiles);
    unint64_t v129 = sub_20B7D3C38();

    if (v129 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v130 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v130 = *(void *)((v129 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v127 = swift_bridgeObjectRelease();
    BOOL v131 = v130 != 0;
  }
  else
  {
    BOOL v131 = 0;
  }
  uint64_t v94 = 0;
  unint64_t v96 = 0xE000000000000000;
  if (v14[2] != 2 || v131) {
    goto LABEL_101;
  }
  v305 = (char *)v11;
  v132 = a1;
  uint64_t v133 = v314;
  MEMORY[0x270FA5388](v127);
  unint64_t v134 = (v133 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v302 = 0xD000000000000017;
  sub_20B7D3A88();
  uint64_t v135 = MEMORY[0x263F8EE78];
  uint64_t v300 = sub_20B769CF4((uint64_t)&v298 - v134, MEMORY[0x263F8EE78]);
  uint64_t v301 = v136;
  uint64_t v137 = v315;
  id v2 = v313;
  ((void (*)(char *))v316)((char *)&v298 - v134);
  uint64_t v138 = swift_allocObject();
  id v308 = v132;
  uint64_t v309 = v138;
  *(void *)(v138 + 16) = v135;
  v307 = (void *)(v138 + 16);
  id v139 = objc_msgSend(v132, sel_phoneNumbers);
  if (!v139)
  {
    __break(1u);
LABEL_223:
    __break(1u);
    goto LABEL_224;
  }
  v140 = v139;
  MEMORY[0x270FA5388](v139);
  sub_20B7D3A88();
  id v304 = (id)sub_20B769CF4((uint64_t)&v298 - v134, MEMORY[0x263F8EE78]);
  uint64_t v142 = v141;
  v143 = v316;
  uint64_t v144 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v134, v137);
  v303 = &v298;
  MEMORY[0x270FA5388](v144);
  v145 = (char *)&v298 - v134;
  sub_20B7D3A88();
  uint64_t v146 = sub_20B769CF4((uint64_t)&v298 - v134, MEMORY[0x263F8EE78]);
  uint64_t v148 = v147;
  v143(v145, v137);
  sub_20B769F80(v140, (uint64_t)v304, v142, v146, v148, v309);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v308;
  id v149 = objc_msgSend(v308, sel_emailAddresses);
  unint64_t v150 = sub_20B7D3C38();

  if (v150 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v151 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v151 = *(void *)((v150 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  swift_bridgeObjectRelease();
  if (!v151) {
    goto LABEL_199;
  }
  id v152 = objc_msgSend(a1, sel_emailAddresses);
  unint64_t v153 = sub_20B7D3C38();

  if (v153 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v154 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v154 = *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v155 = swift_bridgeObjectRelease();
  if (v154 != 1)
  {
    MEMORY[0x270FA5388](v155);
    v176 = (char *)&v298 - ((v175 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D3A88();
    uint64_t v177 = sub_20B769CF4((uint64_t)v176, MEMORY[0x263F8EE78]);
    uint64_t v179 = v178;
    v316(v176, v315);
    v180 = (void **)v307;
    swift_beginAccess();
    v181 = *v180;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      v181 = sub_20B76B8D8(0, v181[2] + 1, 1, v181);
    }
    unint64_t v183 = v181[2];
    unint64_t v182 = v181[3];
    if (v183 >= v182 >> 1) {
      v181 = sub_20B76B8D8((void *)(v182 > 1), v183 + 1, 1, v181);
    }
    v181[2] = v183 + 1;
    v184 = &v181[2 * v183];
    v184[4] = v177;
    v184[5] = v179;
    void *v307 = v181;
    swift_endAccess();
    goto LABEL_199;
  }
  id v156 = objc_msgSend(a1, sel_emailAddresses);
  unint64_t v107 = sub_20B7D3C38();

  if (v107 >> 62)
  {
LABEL_197:
    swift_bridgeObjectRetain();
    v157 = (void *)sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (!v157) {
      goto LABEL_198;
    }
LABEL_163:
    if ((v107 & 0xC000000000000001) != 0)
    {
      id v158 = (id)MEMORY[0x210537C20](0, v107);
    }
    else
    {
      if (!*(void *)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10))
      {
        __break(1u);
        goto LABEL_221;
      }
      id v158 = *(id *)(v107 + 32);
    }
    v159 = v158;
    swift_bridgeObjectRelease();
    id v160 = objc_msgSend(v159, sel_value);
    v161 = (void *)sub_20B7D3AF8();
    unsigned int v162 = objc_msgSend(v160, sel_hasSuffix_, v161);

    if (v162)
    {
      v164 = v160;
      MEMORY[0x270FA5388](v163);
      v166 = (char *)&v298 - ((v165 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D3A88();
      uint64_t v167 = sub_20B769CF4((uint64_t)v166, MEMORY[0x263F8EE78]);
      uint64_t v169 = v168;
      v316(v166, v315);
      v170 = (void **)v307;
      swift_beginAccess();
      v171 = *v170;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v171 = sub_20B76B8D8(0, v171[2] + 1, 1, v171);
      }
      unint64_t v173 = v171[2];
      unint64_t v172 = v171[3];
      if (v173 >= v172 >> 1) {
        v171 = sub_20B76B8D8((void *)(v172 > 1), v173 + 1, 1, v171);
      }
      v171[2] = v173 + 1;
      v174 = &v171[2 * v173];
      v174[4] = v167;
    }
    else
    {
      v185 = (void *)sub_20B7D3AF8();
      int v186 = objc_msgSend(v160, sel_hasSuffix_, v185);

      if ((v186 & 1) != 0
        || (v188 = (void *)sub_20B7D3AF8(),
            unsigned __int8 v189 = objc_msgSend(v160, sel_hasSuffix_, v188),
            v188,
            (v189 & 1) != 0)
        || (v190 = (void *)sub_20B7D3AF8(),
            unsigned int v191 = objc_msgSend(v160, sel_hasSuffix_, v190),
            v190,
            v191))
      {
        id v304 = v160;
        MEMORY[0x270FA5388](v187);
        v193 = (char *)&v298 - ((v192 + 15) & 0xFFFFFFFFFFFFFFF0);
        sub_20B7D3A88();
        uint64_t v194 = sub_20B769CF4((uint64_t)v193, MEMORY[0x263F8EE78]);
        uint64_t v196 = v195;
        v316(v193, v315);
        v197 = (void **)v307;
        swift_beginAccess();
        v198 = *v197;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          v198 = sub_20B76B8D8(0, v198[2] + 1, 1, v198);
        }
        unint64_t v200 = v198[2];
        unint64_t v199 = v198[3];
        if (v200 >= v199 >> 1) {
          v198 = sub_20B76B8D8((void *)(v199 > 1), v200 + 1, 1, v198);
        }
        v198[2] = v200 + 1;
        v201 = &v198[2 * v200];
        v201[4] = v194;
        v201[5] = v196;
        void *v307 = v198;
        swift_endAccess();

        goto LABEL_199;
      }
      v164 = v160;
      MEMORY[0x270FA5388](v187);
      v203 = (char *)&v298 - ((v202 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D3A88();
      id v304 = (id)sub_20B769CF4((uint64_t)v203, MEMORY[0x263F8EE78]);
      uint64_t v169 = v204;
      v316(v203, v315);
      v205 = (void **)v307;
      swift_beginAccess();
      v171 = *v205;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        v171 = sub_20B76B8D8(0, v171[2] + 1, 1, v171);
      }
      unint64_t v207 = v171[2];
      unint64_t v206 = v171[3];
      if (v207 >= v206 >> 1) {
        v171 = sub_20B76B8D8((void *)(v206 > 1), v207 + 1, 1, v171);
      }
      v171[2] = v207 + 1;
      v174 = &v171[2 * v207];
      v174[4] = v304;
    }
    v174[5] = v169;
    void *v307 = v171;
    swift_endAccess();

    goto LABEL_199;
  }
  v157 = *(void **)((v107 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v157) {
    goto LABEL_163;
  }
LABEL_198:
  swift_bridgeObjectRelease();
LABEL_199:
  id v208 = objc_msgSend(a1, sel_urlAddresses);
  if (!v208) {
    goto LABEL_223;
  }
  v209 = v208;
  uint64_t v210 = v314;
  MEMORY[0x270FA5388](v208);
  unint64_t v211 = (v210 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  id v304 = (id)sub_20B769CF4((uint64_t)&v298 - v211, MEMORY[0x263F8EE78]);
  uint64_t v213 = v212;
  uint64_t v215 = v315;
  v214 = v316;
  uint64_t v216 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v211, v315);
  v303 = &v298;
  MEMORY[0x270FA5388](v216);
  unint64_t v299 = v211;
  v217 = (char *)&v298 - v211;
  sub_20B7D3A88();
  uint64_t v218 = sub_20B769CF4((uint64_t)&v298 - v211, MEMORY[0x263F8EE78]);
  uint64_t v220 = v219;
  v214(v217, v215);
  sub_20B769F80(v209, (uint64_t)v304, v213, v218, v220, v309);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v221 = objc_msgSend(v308, sel_postalAddresses);
  if (!v221)
  {
LABEL_224:
    __break(1u);
    goto LABEL_225;
  }
  v222 = v221;
  MEMORY[0x270FA5388](v221);
  unint64_t v223 = v299;
  sub_20B7D3A88();
  id v304 = (id)sub_20B769CF4((uint64_t)&v298 - v223, MEMORY[0x263F8EE78]);
  uint64_t v225 = v224;
  uint64_t v227 = v315;
  v226 = v316;
  uint64_t v228 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v223, v315);
  v303 = &v298;
  MEMORY[0x270FA5388](v228);
  v229 = (char *)&v298 - v223;
  sub_20B7D3A88();
  uint64_t v230 = sub_20B769CF4((uint64_t)&v298 - v223, MEMORY[0x263F8EE78]);
  uint64_t v232 = v231;
  v226(v229, v227);
  sub_20B769F80(v222, (uint64_t)v304, v225, v230, v232, v309);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1 = v308;
  if (!v306) {
    goto LABEL_211;
  }
  id v233 = objc_msgSend(v308, sel_dates);
  unint64_t v234 = sub_20B7D3C38();

  if (v234 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v235 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v235 = *(void *)((v234 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v236 = swift_bridgeObjectRelease();
  if (!v235)
  {
    MEMORY[0x270FA5388](v236);
    v251 = (char *)&v298 - ((v250 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D3A88();
    unint64_t v107 = sub_20B769CF4((uint64_t)v251, MEMORY[0x263F8EE78]);
    id v2 = v252;
    v316(v251, v315);
    v253 = (void **)v307;
    swift_beginAccess();
    v157 = *v253;
    if (swift_isUniquelyReferenced_nonNull_native())
    {
LABEL_208:
      unint64_t v255 = v157[2];
      unint64_t v254 = v157[3];
      if (v255 >= v254 >> 1) {
        v157 = sub_20B76B8D8((void *)(v254 > 1), v255 + 1, 1, v157);
      }
      v157[2] = v255 + 1;
      v256 = &v157[2 * v255];
      v256[4] = v107;
      v256[5] = v2;
      void *v307 = v157;
      swift_endAccess();
LABEL_211:
      id v257 = objc_msgSend(a1, sel_socialProfiles);
      if (v257)
      {
        v258 = v257;
        uint64_t v259 = v314;
        MEMORY[0x270FA5388](v257);
        unint64_t v260 = (v259 + 15) & 0xFFFFFFFFFFFFFFF0;
        sub_20B7D3A88();
        uint64_t v306 = sub_20B769CF4((uint64_t)&v298 - v260, MEMORY[0x263F8EE78]);
        uint64_t v262 = v261;
        uint64_t v263 = v315;
        v264 = v316;
        uint64_t v265 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v260, v315);
        MEMORY[0x270FA5388](v265);
        v305 = (char *)v260;
        v266 = (char *)&v298 - v260;
        sub_20B7D3A88();
        uint64_t v267 = sub_20B769CF4((uint64_t)&v298 - v260, MEMORY[0x263F8EE78]);
        uint64_t v269 = v268;
        v264(v266, v263);
        sub_20B769F80(v258, v306, v262, v267, v269, v309);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v270 = objc_msgSend(v308, sel_contactRelations);
        if (v270)
        {
          v271 = v270;
          MEMORY[0x270FA5388](v270);
          v272 = v305;
          sub_20B7D3A88();
          uint64_t v306 = sub_20B769CF4((char *)&v298 - v272, MEMORY[0x263F8EE78]);
          uint64_t v274 = v273;
          uint64_t v275 = v315;
          v276 = v316;
          uint64_t v277 = ((uint64_t (*)(int64_t, uint64_t))v316)((char *)&v298 - v272, v315);
          MEMORY[0x270FA5388](v277);
          v278 = (char *)((char *)&v298 - v272);
          sub_20B7D3A88();
          uint64_t v279 = sub_20B769CF4((char *)&v298 - v272, MEMORY[0x263F8EE78]);
          uint64_t v281 = v280;
          v276(v278, v275);
          sub_20B769F80(v271, v306, v274, v279, v281, v309);

          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          id v282 = objc_msgSend(v308, sel_instantMessageAddresses);
          if (v282)
          {
            v283 = v282;
            uint64_t v284 = swift_bridgeObjectRelease();
            uint64_t v285 = v314;
            MEMORY[0x270FA5388](v284);
            unint64_t v286 = (v285 + 15) & 0xFFFFFFFFFFFFFFF0;
            sub_20B7D3A88();
            id v14 = (void *)MEMORY[0x263F8EE78];
            id v308 = (id)sub_20B769CF4((uint64_t)&v298 - v286, MEMORY[0x263F8EE78]);
            uint64_t v288 = v287;
            uint64_t v289 = v315;
            v290 = v316;
            uint64_t v291 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v286, v315);
            MEMORY[0x270FA5388](v291);
            v292 = (char *)&v298 - v286;
            sub_20B7D3A88();
            uint64_t v293 = sub_20B769CF4((uint64_t)&v298 - v286, (uint64_t)v14);
            uint64_t v295 = v294;
            v290(v292, v289);
            uint64_t v296 = v309;
            sub_20B769F80(v283, (uint64_t)v308, v288, v293, v295, v309);

            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_beginAccess();
            uint64_t v317 = *(void *)(v296 + 16);
            swift_bridgeObjectRetain();
            __swift_instantiateConcreteTypeFromMangledName(&qword_26769B060);
            sub_20B76C9DC();
            uint64_t v94 = sub_20B7D3A58();
            unint64_t v96 = v297;
            swift_release();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            unint64_t v97 = v311;
            v99 = v312;
            uint64_t v98 = v310;
            goto LABEL_102;
          }
          goto LABEL_227;
        }
LABEL_226:
        __break(1u);
LABEL_227:
        __break(1u);
        goto LABEL_228;
      }
LABEL_225:
      __break(1u);
      goto LABEL_226;
    }
LABEL_221:
    v157 = sub_20B76B8D8(0, v157[2] + 1, 1, v157);
    goto LABEL_208;
  }
  id v237 = objc_msgSend(a1, sel_dates);
  if (v237)
  {
    v238 = v237;
    uint64_t v239 = v314;
    MEMORY[0x270FA5388](v237);
    unint64_t v240 = (v239 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_20B7D3A88();
    uint64_t v306 = sub_20B769CF4((uint64_t)&v298 - v240, MEMORY[0x263F8EE78]);
    uint64_t v242 = v241;
    uint64_t v244 = v315;
    v243 = v316;
    uint64_t v245 = ((uint64_t (*)(char *, uint64_t))v316)((char *)&v298 - v240, v315);
    v305 = (char *)&v298;
    MEMORY[0x270FA5388](v245);
    v246 = (char *)&v298 - v240;
    sub_20B7D3A88();
    uint64_t v247 = sub_20B769CF4((uint64_t)&v298 - v240, MEMORY[0x263F8EE78]);
    uint64_t v249 = v248;
    v243(v246, v244);
    sub_20B769F80(v238, v306, v242, v247, v249, v309);

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    a1 = v308;
    goto LABEL_211;
  }
LABEL_228:
  __break(1u);
}

uint64_t sub_20B769CF4(uint64_t a1, uint64_t a2)
{
  sub_20B7D3AE8();
  MEMORY[0x270FA5388]();
  (*(void (**)(char *, uint64_t))(v5 + 16))((char *)v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  type metadata accessor for CNUINameDrop();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v7 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  sub_20B7D3548();
  MEMORY[0x270FA5388]();
  sub_20B7D3538();
  uint64_t v8 = sub_20B7D3B28();
  int64_t v10 = *(void *)(a2 + 16);
  if (v10)
  {
    v20[1] = v8;
    v20[2] = v9;
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_20B7A20A4(0, v10, 0);
    uint64_t v11 = v24;
    unint64_t v12 = (unint64_t *)(a2 + 40);
    uint64_t v13 = MEMORY[0x263F8D310];
    do
    {
      if (*v12)
      {
        uint64_t v14 = *(v12 - 1);
        unint64_t v15 = *v12;
      }
      else
      {
        uint64_t v14 = 0;
        unint64_t v15 = 0xE000000000000000;
      }
      uint64_t v24 = v11;
      unint64_t v17 = *(void *)(v11 + 16);
      unint64_t v16 = *(void *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v17 >= v16 >> 1)
      {
        sub_20B7A20A4(v16 > 1, v17 + 1, 1);
        uint64_t v11 = v24;
      }
      uint64_t v22 = v13;
      unint64_t v23 = sub_20B76D068();
      *(void *)&long long v21 = v14;
      *((void *)&v21 + 1) = v15;
      *(void *)(v11 + 16) = v17 + 1;
      sub_20B76D0B0(&v21, v11 + 40 * v17 + 32);
      v12 += 2;
      --v10;
    }
    while (v10);
  }
  uint64_t v18 = sub_20B7D3B18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18;
}

uint64_t sub_20B769F80(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t result = (uint64_t)objc_msgSend(a1, sel_count);
  if (result >= 1)
  {
    uint64_t v13 = (void **)(a6 + 16);
    if (objc_msgSend(a1, sel_count) == (id)1)
    {
      a5 = a3;
      uint64_t v14 = a2;
    }
    else
    {
      uint64_t v14 = a4;
    }
    swift_bridgeObjectRetain();
    swift_beginAccess();
    unint64_t v15 = *v13;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *uint64_t v13 = v15;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      unint64_t v15 = sub_20B76B8D8(0, v15[2] + 1, 1, v15);
      *uint64_t v13 = v15;
    }
    unint64_t v18 = v15[2];
    unint64_t v17 = v15[3];
    if (v18 >= v17 >> 1)
    {
      unint64_t v15 = sub_20B76B8D8((void *)(v17 > 1), v18 + 1, 1, v15);
      *uint64_t v13 = v15;
    }
    v15[2] = v18 + 1;
    unint64_t v19 = &v15[2 * v18];
    v19[4] = v14;
    v19[5] = a5;
    return swift_endAccess();
  }
  return result;
}

id CNUINameDrop.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CNUINameDrop.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNUINameDrop();
  return objc_msgSendSuper2(&v2, sel_init);
}

id CNUINameDrop.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNUINameDrop();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_20B76A180()
{
  uint64_t v0 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v0, qword_26769AEA8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769AEA8);
  return sub_20B7D39E8();
}

uint64_t sub_20B76A1F8()
{
  uint64_t v0 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v0, qword_26769AEC8);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26769AEC8);
  if (qword_26769AEA0 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_26769AEA8);
  int v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

void sub_20B76A2F8()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v1 = (void *)sub_20B7D3AF8();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  qword_26769AEE8 = (uint64_t)v2;
}

uint64_t sub_20B76A368()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B178);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DB6E0;
  *(void *)(v0 + 32) = sub_20B7D3B08();
  *(void *)(v0 + 40) = v1;
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = sub_20B7D3B08();
  *(void *)(v0 + 56) = v2;
  *(void *)(v0 + 64) = sub_20B7D3B08();
  *(void *)(v0 + 72) = v3;
  *(void *)(v0 + 80) = sub_20B7D3B08();
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v4;
  *(void *)(v0 + 96) = sub_20B7D3B08();
  *(void *)(v0 + 104) = v5;
  *(void *)(v0 + 112) = sub_20B7D3B08();
  *(void *)(v0 + 120) = v6;
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = sub_20B7D3B08();
  *(void *)(v0 + 136) = v7;
  *(void *)(v0 + 144) = sub_20B7D3B08();
  *(void *)(v0 + 152) = v8;
  *(void *)(v0 + 160) = sub_20B7D3B08();
  *(void *)(v0 + 16_Block_object_dispose(&a9, 8) = v9;
  *(void *)(v0 + 176) = sub_20B7D3B08();
  *(void *)(v0 + 184) = v10;
  *(void *)(v0 + 192) = sub_20B7D3B08();
  *(void *)(v0 + 200) = v11;
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = sub_20B7D3B08();
  *(void *)(v0 + 216) = v12;
  *(void *)(v0 + 224) = sub_20B7D3B08();
  *(void *)(v0 + 232) = v13;
  *(void *)(v0 + 240) = sub_20B7D3B08();
  *(void *)(v0 + 24_Block_object_dispose(&a9, 8) = v14;
  *(void *)(v0 + 256) = sub_20B7D3B08();
  *(void *)(v0 + 264) = v15;
  *(void *)(v0 + 272) = sub_20B7D3B08();
  *(void *)(v0 + 280) = v16;
  *(void *)(v0 + 28_Block_object_dispose(&a9, 8) = sub_20B7D3B08();
  *(void *)(v0 + 296) = v17;
  *(void *)(v0 + 304) = sub_20B7D3B08();
  *(void *)(v0 + 312) = v18;
  *(void *)(v0 + 320) = sub_20B7D3B08();
  *(void *)(v0 + 32_Block_object_dispose(&a9, 8) = v19;
  *(void *)(v0 + 336) = sub_20B7D3B08();
  *(void *)(v0 + 344) = v20;
  *(void *)(v0 + 352) = sub_20B7D3B08();
  *(void *)(v0 + 360) = v21;
  *(void *)(v0 + 36_Block_object_dispose(&a9, 8) = sub_20B7D3B08();
  *(void *)(v0 + 376) = v22;
  *(void *)(v0 + 384) = sub_20B7D3B08();
  *(void *)(v0 + 392) = v23;
  uint64_t result = sub_20B7D3B08();
  *(void *)(v0 + 400) = result;
  *(void *)(v0 + 40_Block_object_dispose(&a9, 8) = v25;
  off_26769AEF8 = (_UNKNOWN *)v0;
  return result;
}

uint64_t sub_20B76A594(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v34 = a3;
  uint64_t v5 = (void *)sub_20B7D3AF8();
  unsigned int v6 = objc_msgSend(a4, sel_isKeyAvailable_, v5);

  if (!v6) {
    return 0;
  }
  uint64_t v7 = (void *)sub_20B7D3AF8();
  id v8 = objc_msgSend(a4, sel_valueForKey_, v7);

  if (v8)
  {
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v36 = 0u;
    long long v37 = 0u;
  }
  sub_20B76D214((uint64_t)&v36, (uint64_t)v38);
  sub_20B76D27C((uint64_t)v38, (uint64_t)&v36);
  if (*((void *)&v37 + 1))
  {
    sub_20B76D188(0, &qword_26769B190);
    if (swift_dynamicCast())
    {
      id v9 = v35;
      uint64_t v32 = sub_20B7D33F8();
      uint64_t v33 = &v30;
      uint64_t v31 = *(void *)(v32 - 8);
      MEMORY[0x270FA5388]();
      uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v30 = v9;
      sub_20B7D3D68();
      sub_20B7D33E8();
      while (*((void *)&v37 + 1))
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
        if (swift_dynamicCast())
        {
          id v12 = v35;
          id v13 = objc_msgSend(v34, sel_value);
          id v14 = objc_msgSend(v12, sel_value);
          id v15 = v13;
          id v16 = v14;
          id v17 = objc_msgSend(v15, sel_day);
          if (v17 == objc_msgSend(v16, sel_day)
            && (id v18 = objc_msgSend(v15, sel_month), v18 == objc_msgSend(v16, (SEL)&selRef_setLayoutDelegate_ + 7))
            && (id v19 = objc_msgSend(v15, sel_year), v19 == objc_msgSend(v16, sel_year)))
          {
            id v20 = objc_msgSend(v15, sel_era);
            id v21 = objc_msgSend(v16, sel_era);

            if (v20 == v21)
            {

              (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
              sub_20B76D2E4((uint64_t)v38, &qword_26769B800);
              return 1;
            }
          }
          else
          {
          }
        }
        sub_20B7D33E8();
      }

      (*(void (**)(char *, uint64_t))(v31 + 8))(v11, v32);
      sub_20B76D2E4((uint64_t)v38, &qword_26769B800);
      return 0;
    }
  }
  else
  {
    sub_20B76D2E4((uint64_t)&v36, &qword_26769B800);
  }
  sub_20B76D27C((uint64_t)v38, (uint64_t)&v36);
  if (!*((void *)&v37 + 1))
  {
    sub_20B76D2E4((uint64_t)&v36, &qword_26769B800);
    goto LABEL_27;
  }
  sub_20B76D188(0, (unint64_t *)&unk_26769B1A0);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_27:
    sub_20B76D2E4((uint64_t)v38, &qword_26769B800);
    return 0;
  }
  id v22 = objc_msgSend(v34, sel_value);
  id v23 = v35;
  id v24 = objc_msgSend(v22, sel_day);
  if (v24 == objc_msgSend(v23, sel_day)
    && (id v25 = objc_msgSend(v22, sel_month), v25 == objc_msgSend(v23, sel_month))
    && (id v26 = objc_msgSend(v22, sel_year), v26 == objc_msgSend(v23, sel_year)))
  {
    id v27 = objc_msgSend(v22, sel_era);
    id v28 = objc_msgSend(v23, sel_era);

    sub_20B76D2E4((uint64_t)v38, &qword_26769B800);
    if (v27 == v28) {
      return 1;
    }
  }
  else
  {

    sub_20B76D2E4((uint64_t)v38, &qword_26769B800);
  }
  return 0;
}

BOOL sub_20B76AAD8(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  unsigned int v6 = (void *)sub_20B7D3AF8();
  unsigned int v7 = objc_msgSend(a4, sel_isKeyAvailable_, v6);

  if (!v7) {
    return 0;
  }
  id v8 = (void *)sub_20B7D3AF8();
  id v9 = objc_msgSend(a4, sel_valueForKey_, v8);

  if (v9)
  {
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v26 = 0u;
    long long v27 = 0u;
  }
  sub_20B76D214((uint64_t)&v26, (uint64_t)v28);
  sub_20B76D27C((uint64_t)v28, (uint64_t)&v26);
  if (*((void *)&v27 + 1))
  {
    sub_20B76D188(0, &qword_26769B190);
    if (swift_dynamicCast())
    {
      id v10 = v25;
      uint64_t v23 = sub_20B7D33F8();
      id v24 = &v20;
      uint64_t v22 = *(void *)(v23 - 8);
      MEMORY[0x270FA5388]();
      id v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
      id v21 = v10;
      sub_20B7D3D68();
      sub_20B7D33E8();
      if (*((void *)&v27 + 1))
      {
        while (1)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
          if (swift_dynamicCast())
          {
            id v13 = v25;
            id v14 = objc_msgSend(a3, sel_value);
            id v15 = objc_msgSend(v13, sel_value);
            unsigned __int8 v16 = objc_msgSend(self, sel_isObject_equalToOther_, v14, v15);

            if (v16) {
              break;
            }
          }
          sub_20B7D33E8();
          if (!*((void *)&v27 + 1)) {
            goto LABEL_20;
          }
        }

        (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
        sub_20B76D2E4((uint64_t)v28, &qword_26769B800);
        return 1;
      }
LABEL_20:

      (*(void (**)(char *, uint64_t))(v22 + 8))(v12, v23);
      sub_20B76D2E4((uint64_t)v28, &qword_26769B800);
      return 0;
    }
  }
  else
  {
    sub_20B76D2E4((uint64_t)&v26, &qword_26769B800);
  }
  sub_20B76D27C((uint64_t)v28, (uint64_t)&v26);
  if (!*((void *)&v27 + 1))
  {
    sub_20B76D2E4((uint64_t)&v26, &qword_26769B800);
    goto LABEL_19;
  }
  sub_20B76D188(0, &qword_26769B198);
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_19:
    sub_20B76D2E4((uint64_t)v28, &qword_26769B800);
    return 0;
  }
  id v17 = objc_msgSend(a3, sel_value);
  unsigned __int8 v18 = objc_msgSend(self, sel_isObject_equalToOther_, v17, v25);

  sub_20B76D2E4((uint64_t)v28, &qword_26769B800);
  return (v18 & 1) != 0;
}

void sub_20B76AEB8(uint64_t *a1, void *a2, uint8_t *a3, id a4)
{
  uint64_t v9 = *a1;
  uint64_t v8 = a1[1];
  id v10 = (void *)sub_20B7D3AF8();
  unsigned int v11 = objc_msgSend(a2, sel_isKeyAvailable_, v10);

  if (!v11) {
    return;
  }
  id v12 = (void *)sub_20B7D3AF8();
  unsigned int v13 = [(uint8_t *)a3 isKeyAvailable:v12];

  if (!v13) {
    return;
  }
  id v14 = (void *)sub_20B7D3AF8();
  id v15 = objc_msgSend(a2, sel_valueForKey_, v14);

  if (!v15) {
    return;
  }
  sub_20B7D3DF8();
  swift_unknownObjectRelease();
  sub_20B76D11C(&v68, v70);
  sub_20B76D12C((uint64_t)v70, (uint64_t)&v68);
  sub_20B76D188(0, &qword_26769B190);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_20B76D12C((uint64_t)v70, (uint64_t)&v68);
    sub_20B76D188(0, &qword_26769B198);
    if (swift_dynamicCast())
    {
      id v36 = *(id *)&v67[0];
      if ((uint64_t)objc_msgSend(*(id *)&v67[0], sel_length) >= 1)
      {
        id v37 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
        id v36 = *(id *)&v67[0];
        uint64_t v38 = (void *)sub_20B7D3AF8();
        id v39 = objc_msgSend(v37, sel_initWithLabel_value_, v38, v36);

        char v40 = sub_20B76AAD8(v9, v8, v39, a3);
LABEL_37:
        char v46 = v40;

        if (v46) {
          goto LABEL_38;
        }
        if (qword_26769AEC0 != -1) {
          swift_once();
        }
        uint64_t v48 = sub_20B7D39F8();
        __swift_project_value_buffer(v48, (uint64_t)qword_26769AEC8);
        char v49 = v36;
        unint64_t v50 = sub_20B7D39D8();
        os_log_type_t v51 = sub_20B7D3D48();
        if (os_log_type_enabled(v50, v51))
        {
          uint64_t v65 = v49;
          uint64_t v52 = (uint8_t *)swift_slowAlloc();
          char v53 = (void *)swift_slowAlloc();
          v63 = v52;
          id v64 = a4;
          *(_DWORD *)uint64_t v52 = 138412290;
          *(void *)&long long v68 = v65;
          unint64_t v54 = v65;
          a4 = v64;
          sub_20B7D3D88();
          void *v53 = v65;

          _os_log_impl(&dword_20B704000, v50, v51, "unable to find pref in me card: %@", v63, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
          swift_arrayDestroy();
          MEMORY[0x210538E40](v53, -1, -1);
          char v49 = v65;
          MEMORY[0x210538E40](v63, -1, -1);
        }
        else
        {

          unint64_t v50 = v49;
        }

        unint64_t v55 = (void *)sub_20B7D3AF8();
        objc_msgSend(a4, sel_setNilValueForKey_, v55);

LABEL_48:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
        return;
      }
    }
    else
    {
      sub_20B76D12C((uint64_t)v70, (uint64_t)&v68);
      sub_20B76D188(0, (unint64_t *)&unk_26769B1A0);
      if ((swift_dynamicCast() & 1) == 0) {
        goto LABEL_48;
      }
      id v36 = *(id *)&v67[0];
      if (objc_msgSend(*(id *)&v67[0], sel_isValidDate))
      {
        id v44 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
        id v36 = *(id *)&v67[0];
        unint64_t v45 = (void *)sub_20B7D3AF8();
        id v39 = objc_msgSend(v44, sel_initWithLabel_value_, v45, v36);

        char v40 = sub_20B76A594(v9, v8, v39, a3);
        goto LABEL_37;
      }
    }
LABEL_38:
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);

    return;
  }
  unsigned __int8 v16 = *(void **)&v67[0];
  if ((uint64_t)objc_msgSend(*(id *)&v67[0], sel_count) < 1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
  }
  else
  {
    uint64_t v61 = v4;
    id v64 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF980]), sel_init);
    v59 = &v56;
    uint64_t v58 = sub_20B7D33F8();
    uint64_t v57 = *(void *)(v58 - 8);
    MEMORY[0x270FA5388]();
    unsigned __int8 v18 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    id v60 = v16;
    sub_20B7D3D68();
    sub_20B7D33E8();
    if (v69)
    {
      uint64_t v65 = (MEMORY[0x263F8EE58] + 8);
      *(void *)&long long v19 = 138412290;
      long long v62 = v19;
      v63 = a3;
      while (1)
      {
        sub_20B76D11C(&v68, v67);
        sub_20B76D12C((uint64_t)v67, (uint64_t)v66);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
        if ((swift_dynamicCast() & 1) == 0) {
          goto LABEL_10;
        }
        uint64_t v20 = v71;
        id v21 = [v71 value];
        uint64_t ObjectType = swift_getObjectType();

        if (ObjectType == sub_20B76D188(0, (unint64_t *)&unk_26769B1A0)) {
          break;
        }
        if (!sub_20B76AAD8(v9, v8, v20, a3))
        {
          if (qword_26769AEC0 != -1) {
            swift_once();
          }
          uint64_t v23 = sub_20B7D39F8();
          __swift_project_value_buffer(v23, (uint64_t)qword_26769AEC8);
          id v24 = v20;
          uint64_t v20 = sub_20B7D39D8();
          os_log_type_t v25 = sub_20B7D3D48();
          if (os_log_type_enabled(v20, v25))
          {
            uint64_t v26 = swift_slowAlloc();
            id v27 = a4;
            id v28 = (void *)swift_slowAlloc();
            *(_DWORD *)uint64_t v26 = v62;
            *(void *)(v26 + 4) = v24;
            *id v28 = v24;

            os_log_type_t v29 = v20;
            os_log_type_t v30 = v25;
            uint64_t v31 = "unable to find string pref in me card: %@";
            goto LABEL_26;
          }
LABEL_27:

          goto LABEL_28;
        }
        objc_msgSend(v64, sel_addObject_, v20);
LABEL_9:

LABEL_10:
        __swift_destroy_boxed_opaque_existential_0((uint64_t)v67);
        sub_20B7D33E8();
        if (!v69) {
          goto LABEL_32;
        }
      }
      sub_20B76D12C((uint64_t)v67, (uint64_t)v66);
      if (swift_dynamicCast())
      {
        uint64_t v32 = v71;
        if (sub_20B76A594(v9, v8, v71, a3))
        {
          objc_msgSend(v64, sel_addObject_, v32);

          goto LABEL_10;
        }
      }
      if (qword_26769AEC0 != -1) {
        swift_once();
      }
      uint64_t v33 = sub_20B7D39F8();
      __swift_project_value_buffer(v33, (uint64_t)qword_26769AEC8);
      id v24 = v20;
      uint64_t v20 = sub_20B7D39D8();
      os_log_type_t v34 = sub_20B7D3D48();
      if (!os_log_type_enabled(v20, v34)) {
        goto LABEL_27;
      }
      uint64_t v26 = swift_slowAlloc();
      id v27 = a4;
      id v28 = (void *)swift_slowAlloc();
      *(_DWORD *)uint64_t v26 = v62;
      *(void *)(v26 + 4) = v24;
      *id v28 = v24;

      os_log_type_t v29 = v20;
      os_log_type_t v30 = v34;
      uint64_t v31 = "unable to find date pref in me card: %@";
LABEL_26:
      _os_log_impl(&dword_20B704000, v29, v30, v31, (uint8_t *)v26, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
      swift_arrayDestroy();
      id v35 = v28;
      a4 = v27;
      a3 = v63;
      MEMORY[0x210538E40](v35, -1, -1);
      MEMORY[0x210538E40](v26, -1, -1);
LABEL_28:

      goto LABEL_9;
    }
LABEL_32:
    (*(void (**)(char *, uint64_t))(v57 + 8))(v18, v58);
    id v41 = v64;
    if ((uint64_t)objc_msgSend(v64, sel_count) <= 0)
    {
      unint64_t v47 = (void *)sub_20B7D3AF8();
      objc_msgSend(a4, sel_setNilValueForKey_, v47);
    }
    else
    {
      id v42 = v41;
      uint64_t v43 = (void *)sub_20B7D3AF8();
      objc_msgSend(a4, sel_setValue_forKey_, v42, v43);
    }
    __swift_destroy_boxed_opaque_existential_0((uint64_t)v70);
  }
}

void *sub_20B76B8BC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + _Block_object_dispose(&a9, 8) = 0;
  return result;
}

void sub_20B76B8CC(void *a1@<X8>)
{
  *a1 = *v1;
}

void *sub_20B76B8D8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B178);
      id v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      unsigned int v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      unsigned int v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_20B76CB14(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B76B9E8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20B76CC08(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_20B76BB0C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B160);
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20B76CD00(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B76BC34(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20B76BDA4(a1, a2, a3, a4, &qword_26769B148, type metadata accessor for ContactLikeness, type metadata accessor for ContactLikeness);
}

void *sub_20B76BC58(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B150);
      id v10 = (void *)swift_allocObject();
      size_t v11 = _swift_stdlib_malloc_size(v10);
      v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      id v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v12 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result) {
        goto LABEL_13;
      }
    }
    sub_20B76CE14(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B76BD80(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_20B76BDA4(a1, a2, a3, a4, &qword_26769B158, type metadata accessor for ContactAvatarEntity, type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B76BDA4(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    unsigned __int8 v18 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  unsigned __int8 v18 = (void *)swift_allocObject();
  size_t v19 = _swift_stdlib_malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_20B7D3F28();
    __break(1u);
    return result;
  }
  CGFloat v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_20B76CF0C(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_20B76C024(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }
  return swift_release();
}

id _s14ContactsUICore12CNUINameDropC19getFieldPreferences3forSo9CNContactCAGSg_tFZ_0(id a1)
{
  id v2 = sub_20B766A00();
  if (!v2)
  {
    id v12 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAF0]), sel_init);
    uint64_t v17 = sub_20B766F20();
    if (v18)
    {
      uint64_t v19 = v17;
      uint64_t v20 = v18;
      if (qword_26769AEC0 != -1) {
        swift_once();
      }
      uint64_t v21 = sub_20B7D39F8();
      __swift_project_value_buffer(v21, (uint64_t)qword_26769AEC8);
      unint64_t v22 = sub_20B7D39D8();
      os_log_type_t v23 = sub_20B7D3D38();
      if (os_log_type_enabled(v22, v23))
      {
        id v24 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)id v24 = 0;
        _os_log_impl(&dword_20B704000, v22, v23, "Using legacy NameDrop handle pref", v24, 2u);
        MEMORY[0x210538E40](v24, -1, -1);
      }

      uint64_t v53 = v19;
      uint64_t v54 = v20;
      uint64_t v52 = 64;
      sub_20B76D0C8();
      if (sub_20B7D3DE8())
      {
        os_log_type_t v25 = (void *)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
        id v26 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
        id v27 = (void *)sub_20B7D3AF8();
        objc_msgSend(v26, sel_initWithLabel_value_, v27, v25);

        id v28 = objc_msgSend(v12, sel_emailAddresses);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
        uint64_t v29 = sub_20B7D3C38();

        uint64_t v53 = v29;
        MEMORY[0x210537990]();
        if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B7D3C68();
        }
        sub_20B7D3C88();
        sub_20B7D3C58();
        os_log_type_t v30 = (void *)sub_20B7D3C28();
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setEmailAddresses_, v30);
      }
      else
      {
        id v31 = objc_allocWithZone(MEMORY[0x263EFEB28]);
        uint64_t v32 = (void *)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
        id v33 = objc_msgSend(v31, sel_initWithStringValue_, v32);

        id v34 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
        id v35 = (void *)sub_20B7D3AF8();
        objc_msgSend(v34, sel_initWithLabel_value_, v35, v33);

        id v36 = objc_msgSend(v12, sel_phoneNumbers);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
        uint64_t v37 = sub_20B7D3C38();

        uint64_t v53 = v37;
        MEMORY[0x210537990]();
        if (*(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v53 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
          sub_20B7D3C68();
        }
        sub_20B7D3C88();
        sub_20B7D3C58();
        os_log_type_t v30 = (void *)sub_20B7D3C28();
        swift_bridgeObjectRelease();
        objc_msgSend(v12, sel_setPhoneNumbers_, v30);
      }
    }
    if (!a1) {
      return v12;
    }
    a1 = a1;
    id v38 = objc_msgSend(a1, sel_givenName);
    if (!v38)
    {
      sub_20B7D3B08();
      id v38 = (id)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
    }
    char v39 = CNIsChineseJapaneseKoreanString();

    if (v39) {
      goto LABEL_39;
    }
    id v40 = objc_msgSend(a1, sel_familyName);
    if (!v40)
    {
      sub_20B7D3B08();
      id v40 = (id)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
    }
    int v41 = CNIsChineseJapaneseKoreanString();

    if (v41)
    {
LABEL_39:
      id v42 = objc_msgSend(a1, sel_phoneticGivenName);
      if (!v42)
      {
        sub_20B7D3B08();
        id v42 = (id)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v12, sel_setPhoneticGivenName_, v42);

      id v43 = objc_msgSend(a1, sel_phoneticMiddleName);
      if (!v43)
      {
        sub_20B7D3B08();
        id v43 = (id)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v12, sel_setPhoneticMiddleName_, v43);

      id v44 = objc_msgSend(a1, sel_phoneticFamilyName);
      if (!v44)
      {
        sub_20B7D3B08();
        id v44 = (id)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
      }
      objc_msgSend(v12, sel_setPhoneticFamilyName_, v44);
    }
    goto LABEL_47;
  }
  uint64_t v3 = qword_26769AEC0;
  id v4 = v2;
  if (v3 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_20B7D39F8();
  __swift_project_value_buffer(v5, (uint64_t)qword_26769AEC8);
  unint64_t v6 = sub_20B7D39D8();
  os_log_type_t v7 = sub_20B7D3D38();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v8 = 0;
    _os_log_impl(&dword_20B704000, v6, v7, "Using NameDrop field pref", v8, 2u);
    MEMORY[0x210538E40](v8, -1, -1);
  }

  if (qword_26769AEE0 != -1) {
    swift_once();
  }
  uint64_t v9 = (void *)qword_26769AEE8;
  if (qword_26769AEE8
    && (id v10 = (void *)sub_20B7D3AF8(), v11 = objc_msgSend(v9, sel_BOOLForKey_, v10),
                                       v10,
                                       v11))
  {
    if (!a1)
    {

      return v4;
    }
    a1 = a1;
    objc_msgSend(v4, sel_mutableCopy);

    sub_20B7D3DF8();
    swift_unknownObjectRelease();
    sub_20B76D188(0, (unint64_t *)&qword_26769B028);
    if (swift_dynamicCast())
    {
      id v12 = (id)v52;
      uint64_t v13 = sub_20B7D39D8();
      os_log_type_t v14 = sub_20B7D3D38();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v15 = 0;
        _os_log_impl(&dword_20B704000, v13, v14, "Using NameDrop pronoun pref", v15, 2u);
        MEMORY[0x210538E40](v15, -1, -1);
      }

      id v16 = objc_msgSend(a1, sel_addressingGrammars);
      if (!v16)
      {
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
        sub_20B7D3C38();
        id v16 = (id)sub_20B7D3C28();
        swift_bridgeObjectRelease();
      }
      objc_msgSend((id)v52, sel_setAddressingGrammars_, v16);

      goto LABEL_47;
    }
  }
  else
  {

    if (!a1) {
      return v4;
    }
  }
  id v12 = v4;
LABEL_47:
  uint64_t v45 = qword_26769AEF0;
  char v46 = (uint8_t *)a1;
  if (v45 != -1) {
    swift_once();
  }
  unint64_t v47 = off_26769AEF8;
  objc_msgSend(v12, sel_mutableCopy);
  sub_20B7D3DF8();
  swift_unknownObjectRelease();
  sub_20B76D188(0, (unint64_t *)&qword_26769B028);
  swift_dynamicCast();
  id v4 = (id)v52;
  uint64_t v48 = v47[2];
  if (v48)
  {
    swift_bridgeObjectRetain();
    char v49 = v47 + 5;
    do
    {
      uint64_t v50 = *v49;
      uint64_t v53 = *(v49 - 1);
      uint64_t v54 = v50;
      swift_bridgeObjectRetain();
      sub_20B76AEB8(&v53, v12, v46, (id)v52);
      swift_bridgeObjectRelease();
      v49 += 2;
      --v48;
    }
    while (v48);

    swift_bridgeObjectRelease();
  }
  else
  {
  }
  return v4;
}

uint64_t sub_20B76C9A4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

unint64_t sub_20B76C9DC()
{
  unint64_t result = qword_26769B068;
  if (!qword_26769B068)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B060);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B068);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t type metadata accessor for CNUINameDrop()
{
  return self;
}

void type metadata accessor for CNContactType(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void sub_20B76CACC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_20B76CB14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B76CC08(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B76CD00(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B168);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B76CE14(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B76CF0C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

unint64_t sub_20B76D068()
{
  unint64_t result = qword_26769B180;
  if (!qword_26769B180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B180);
  }
  return result;
}

uint64_t sub_20B76D0B0(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

unint64_t sub_20B76D0C8()
{
  unint64_t result = qword_26769B188;
  if (!qword_26769B188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B188);
  }
  return result;
}

_OWORD *sub_20B76D11C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_20B76D12C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_20B76D188(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_0(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_20B76D214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B76D27C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B800);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B76D2E4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

BOOL static WidgetType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetType.hash(into:)()
{
  return sub_20B7D4098();
}

uint64_t WidgetType.hashValue.getter()
{
  return sub_20B7D40A8();
}

BOOL sub_20B76D42C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20B76D440()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B76D488()
{
  return sub_20B7D4098();
}

uint64_t sub_20B76D4B4()
{
  return sub_20B7D40A8();
}

uint64_t ContactCardWidgetViewModel.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void ContactCardWidgetViewModel.widgetType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t ContactCardWidgetViewModel.cardGroups.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContactCardWidgetViewModel.collapsedDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardWidgetViewModel.collapsedDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t (*ContactCardWidgetViewModel.collapsedDescription.modify())()
{
  return nullsub_1;
}

unint64_t sub_20B76D5CC()
{
  unint64_t result = qword_26769B330;
  if (!qword_26769B330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B330);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for WidgetType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for WidgetType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B76D78CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

uint64_t sub_20B76D7B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_20B76D7BC(unsigned char *result, char a2)
{
  *unint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for WidgetType()
{
  return &type metadata for WidgetType;
}

uint64_t destroy for ContactCardWidgetViewModel()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactCardWidgetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactCardWidgetViewModel(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContactCardWidgetViewModel(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardWidgetViewModel(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardWidgetViewModel(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardWidgetViewModel()
{
  return &type metadata for ContactCardWidgetViewModel;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

ValueMetadata *type metadata accessor for ContactCardHeaderWidget()
{
  return &type metadata for ContactCardHeaderWidget;
}

uint64_t destroy for ViewContactCardIntent.HighlightedDetail()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t _s14ContactsUICore23ContactCardHeaderWidgetVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14ContactsUICore23ContactCardHeaderWidgetVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14ContactsUICore23ContactCardHeaderWidgetVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s14ContactsUICore23ContactCardHeaderWidgetVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_20B76DBE0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardQuickActionsWidget()
{
  return &type metadata for ContactCardQuickActionsWidget;
}

uint64_t initializeBufferWithCopyOfBuffer for ContactCardGroupItem(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  sub_20B7D2DA8();
  return v3;
}

uint64_t destroy for ContactCardContactDetailsWidget()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ContactCardContactDetailsWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactCardContactDetailsWidget(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy56_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContactCardContactDetailsWidget(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardContactDetailsWidget(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardContactDetailsWidget(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardContactDetailsWidget()
{
  return &type metadata for ContactCardContactDetailsWidget;
}

uint64_t sub_20B76DED0()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

void sub_20B76DF00(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t sub_20B76DF0C()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B76DF24(uint64_t a1)
{
  return sub_20B76DFBC(a1, qword_2676A3C28);
}

uint64_t sub_20B76DF48(uint64_t a1)
{
  return sub_20B76DFBC(a1, qword_2676A3C40);
}

uint64_t sub_20B76DF6C(uint64_t a1)
{
  return sub_20B76DFBC(a1, qword_2676A3C58);
}

uint64_t sub_20B76DF98(uint64_t a1)
{
  return sub_20B76DFBC(a1, qword_2676A3C70);
}

uint64_t sub_20B76DFBC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_20B7D39E8();
}

uint64_t static CNContactsAppIntentDependencyManager.setupAppIntentDependencies()()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  type metadata accessor for ContactEntityProvider();
  swift_allocObject();
  sub_20B794FFC(v0, 0);
  sub_20B7D2A08();
  sub_20B7D29F8();
  sub_20B7D3E48();
  sub_20B7D2DA8();
  sub_20B7D29E8();

  swift_release();
  swift_release_n();
  return sub_20B76E4A8((uint64_t)v2);
}

uint64_t static CNContactsAppIntentDependencyManager.setupAppIntentDependencies(with:)(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  type metadata accessor for ContactEntityProvider();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_20B794FFC(v2, a1);
  swift_unknownObjectRelease();
  sub_20B7D2A08();
  sub_20B7D29F8();
  sub_20B7D3E48();
  sub_20B7D2DA8();
  sub_20B7D29E8();

  swift_release();
  swift_release_n();
  return sub_20B76E4A8((uint64_t)v4);
}

CNContactsAppIntentDependencyManager __swiftcall CNContactsAppIntentDependencyManager.init()()
{
  id v0 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  return (CNContactsAppIntentDependencyManager)objc_msgSend(v0, sel_init);
}

id CNContactsAppIntentDependencyManager.init()()
{
  v1.super_class = (Class)CNContactsAppIntentDependencyManager;
  return objc_msgSendSuper2(&v1, sel_init);
}

uint64_t sub_20B76E36C(uint64_t a1)
{
  id v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  type metadata accessor for ContactEntityProvider();
  swift_allocObject();
  swift_unknownObjectRetain();
  sub_20B794FFC(v2, a1);
  swift_unknownObjectRelease();
  sub_20B7D2A08();
  sub_20B7D29F8();
  sub_20B7D3E48();
  sub_20B7D2DA8();
  sub_20B7D29E8();

  swift_release();
  swift_release_n();
  return sub_20B76E4A8((uint64_t)v4);
}

uint64_t sub_20B76E49C@<X0>(void *a1@<X8>)
{
  *a1 = v1;
  return sub_20B7D2DA8();
}

uint64_t sub_20B76E4A8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_2676999B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t type metadata accessor for CNContactsAppIntentDependencyManager()
{
  unint64_t result = qword_26769B338;
  if (!qword_26769B338)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26769B338);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ContactCardGroupRowItemProvider(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  uint64_t v5 = *(void **)(a2 + 16);
  a1[2] = v5;
  id v6 = v3;
  id v7 = v4;
  id v8 = v5;
  return a1;
}

void destroy for ContactCardGroupRowItemProvider(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 16);
}

uint64_t assignWithCopy for ContactCardGroupRowItemProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  id v7 = *(void **)(a2 + 8);
  id v8 = *(void **)(a1 + 8);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v7;
  id v9 = v7;

  uint64_t v10 = *(void **)(a2 + 16);
  uint64_t v11 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = v10;
  id v12 = v10;

  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ContactCardGroupRowItemProvider(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;

  uint64_t v5 = *(void **)(a1 + 16);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);

  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardGroupRowItemProvider(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardGroupRowItemProvider(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardGroupRowItemProvider()
{
  return &type metadata for ContactCardGroupRowItemProvider;
}

uint64_t sub_20B76E740()
{
  uint64_t v44 = *MEMORY[0x263EF8340];
  uint64_t v1 = *(void **)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(void **)(v0 + 16);
  if (qword_26769AF50 != -1) {
    swift_once();
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  uint64_t v4 = (void *)sub_20B7D3C28();
  unsigned int v5 = objc_msgSend(v1, sel_areKeysAvailable_, v4);

  uint64_t result = MEMORY[0x263F8EE78];
  if (v5)
  {
    int v41 = v3;
    uint64_t v43 = MEMORY[0x263F8EE78];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_20B7DB6D0;
    id v8 = self;
    *(void *)(v7 + 32) = objc_msgSend(v8, sel_descriptorForRequiredKeysForStyle_, 0);
    uint64_t v42 = v7;
    sub_20B7D3C58();
    id v9 = (void *)sub_20B7D3C28();
    swift_bridgeObjectRelease();
    LODWORD(v7) = objc_msgSend(v1, sel_areKeysAvailable_, v9);

    if (v7)
    {
      id v10 = objc_msgSend(v8, sel_stringFromContact_style_, v1, 0);
      if (v10)
      {
        uint64_t v11 = v10;
        uint64_t v12 = sub_20B7D3B08();
        unint64_t v14 = v13;
      }
      else
      {
        uint64_t v12 = 0;
        unint64_t v14 = 0xE000000000000000;
      }
    }
    else
    {
      uint64_t v15 = sub_20B7D3388();
      v40[1] = v40;
      uint64_t v16 = *(void *)(v15 - 8);
      MEMORY[0x270FA5388](v15);
      uint64_t v18 = (char *)v40 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D3378();
      id v19 = objc_msgSend(v1, sel_givenName);
      sub_20B7D3B08();

      sub_20B7D32E8();
      id v20 = objc_msgSend(v1, sel_familyName);
      sub_20B7D3B08();

      sub_20B7D3308();
      uint64_t v21 = self;
      unint64_t v22 = (void *)sub_20B7D3358();
      id v23 = objc_msgSend(v21, sel_localizedStringFromPersonNameComponents_style_options_, v22, 0, 0);

      uint64_t v12 = sub_20B7D3B08();
      unint64_t v14 = v24;

      (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
    }
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20B7DB980;
    uint64_t v26 = qword_26769AF48;
    id v27 = v2;
    if (v26 != -1) {
      swift_once();
    }
    uint64_t v28 = qword_2676A3C98;
    *(void *)(inited + 56) = &type metadata for ContactCardGroupHeaderItem;
    *(void *)(inited + 64) = &protocol witness table for ContactCardGroupHeaderItem;
    uint64_t v29 = swift_allocObject();
    *(void *)(inited + 32) = v29;
    *(void *)(v29 + 16) = v12;
    *(void *)(v29 + 24) = v14;
    *(void *)(v29 + 32) = v28;
    *(_OWORD *)(v29 + 56) = 0u;
    *(_OWORD *)(v29 + 40) = 0u;
    *(unsigned char *)(v29 + 72) = 1;
    swift_bridgeObjectRetain();

    sub_20B7C1424(inited);
    if (qword_26769AF60 != -1) {
      swift_once();
    }
    os_log_type_t v30 = (void *)sub_20B7D3C28();
    unsigned int v31 = objc_msgSend(v1, sel_areKeysAvailable_, v30);

    uint64_t v32 = v41;
    if (v31)
    {
      if (qword_26769AF58 != -1) {
        swift_once();
      }
      uint64_t v33 = qword_2676A3CA8;
      id v34 = v1;
      id v35 = v27;
      id v36 = v32;
      uint64_t v37 = sub_20B771EDC(v33, v34, v35, v36);

      MEMORY[0x270FA5388](v38);
      char v39 = sub_20B772370(v37, (void (*)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))sub_20B772364);
      swift_bridgeObjectRelease();
      sub_20B7C1424((uint64_t)v39);
    }
    return v43;
  }
  return result;
}

uint64_t sub_20B76EC98(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  *(void *)&long long v33 = swift_getKeyPath();
  *(void *)&long long v30 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B350);
  char v6 = sub_20B7D3A68();
  swift_release();
  if ((v6 & 1) == 0)
  {
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v8 = sub_20B7D3A68();
    swift_release();
    if (v8)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B76F61C();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v9 = sub_20B7D3A68();
    swift_release();
    if (v9)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B76F97C();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v10 = sub_20B7D3A68();
    swift_release();
    if (v10)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B76FCB8();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v11 = sub_20B7D3A68();
    swift_release();
    if (v11)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B7702A0();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v12 = sub_20B7D3A68();
    swift_release();
    if (v12)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B77076C();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v13 = sub_20B7D3A68();
    swift_release();
    if (v13)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B770A70();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v14 = sub_20B7D3A68();
    swift_release();
    if (v14)
    {
      *(void *)&long long v33 = v4;
      *((void *)&v33 + 1) = v3;
      *(void *)&long long v34 = v5;
      sub_20B770DE0();
      return v7;
    }
    *(void *)&long long v33 = swift_getKeyPath();
    *(void *)&long long v30 = a1;
    char v17 = sub_20B7D3A68();
    swift_release();
    if ((v17 & 1) != 0
      || (*(void *)&long long v33 = swift_getKeyPath(),
          *(void *)&long long v30 = a1,
          char v18 = sub_20B7D3A68(),
          swift_release(),
          (v18 & 1) != 0))
    {
      uint64_t KeyPath = swift_getKeyPath();
      sub_20B771110(KeyPath, (uint64_t)&v30);
    }
    else
    {
      *(void *)&long long v33 = swift_getKeyPath();
      *(void *)&long long v30 = a1;
      char v22 = sub_20B7D3A68();
      swift_release();
      if (v22)
      {
        *(void *)&long long v33 = v4;
        *((void *)&v33 + 1) = v3;
        *(void *)&long long v34 = v5;
        return sub_20B771598();
      }
      *(void *)&long long v33 = swift_getKeyPath();
      *(void *)&long long v30 = a1;
      char v23 = sub_20B7D3A68();
      swift_release();
      if ((v23 & 1) == 0)
      {
        *(void *)&long long v33 = swift_getKeyPath();
        *(void *)&long long v30 = a1;
        char v24 = sub_20B7D3A68();
        swift_release();
        if ((v24 & 1) == 0)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B358);
          uint64_t v26 = swift_dynamicCastClass();
          if (v26)
          {
            uint64_t v27 = v26;
            sub_20B7D2DA8();
            sub_20B771864(v27, (uint64_t)&v30);
            if (*((void *)&v31 + 1))
            {
              long long v33 = v30;
              long long v34 = v31;
              uint64_t v35 = v32;
              __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
              uint64_t v15 = swift_allocObject();
              long long v28 = v33;
              long long v29 = v34;
              *(_OWORD *)(v15 + 16) = xmmword_20B7DB980;
              *(_OWORD *)(v15 + 32) = v28;
              *(_OWORD *)(v15 + 4_Block_object_dispose(&a9, 8) = v29;
              *(void *)(v15 + 64) = v35;
              swift_release();
              return v15;
            }
            sub_20B76D2E4((uint64_t)&v30, &qword_26769B348);
            swift_release();
          }
          return MEMORY[0x263F8EE78];
        }
      }
      uint64_t v25 = swift_getKeyPath();
      sub_20B77172C(v25, (uint64_t)&v30);
    }
    swift_release();
    if (*((void *)&v31 + 1))
    {
      long long v33 = v30;
      long long v34 = v31;
      uint64_t v35 = v32;
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
      uint64_t v15 = swift_allocObject();
      long long v20 = v33;
      long long v21 = v34;
      *(_OWORD *)(v15 + 16) = xmmword_20B7DB980;
      *(_OWORD *)(v15 + 32) = v20;
      *(_OWORD *)(v15 + 4_Block_object_dispose(&a9, 8) = v21;
      *(void *)(v15 + 64) = v35;
      return v15;
    }
    sub_20B76D2E4((uint64_t)&v30, &qword_26769B348);
    return MEMORY[0x263F8EE78];
  }
  *(void *)&long long v33 = v4;
  *((void *)&v33 + 1) = v3;
  *(void *)&long long v34 = v5;
  sub_20B76F2A0();
  return v7;
}

void sub_20B76F294(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B76F2A0()
{
  id v1 = *(id *)v0;
  long long v34 = *(void **)(v0 + 16);
  uint64_t v35 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE070])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_phoneNumbers);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_22;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    unint64_t v33 = v4 & 0xC000000000000001;
    char v8 = &selRef_setPath_;
    uint64_t v31 = v5;
    unint64_t v32 = v4;
    do
    {
      if (v33) {
        id v9 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v6 + 32);
      }
      char v10 = v9;
      id v37 = v35;
      id v11 = v34;
      id v12 = [v10 v8[255]];
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = v12;
      *(void *)(v13 + 24) = v11;
      uint64_t KeyPath = swift_getKeyPath();
      id v14 = objc_msgSend(v10, sel_label);
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = sub_20B7D3B08();
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v18 = 0xE000000000000000;
      }
      id v19 = objc_msgSend(v10, v8[255], v31, v32);
      id v20 = objc_msgSend(v19, sel_formattedStringValue);
      if (v20)
      {
        long long v21 = v20;
        uint64_t v22 = sub_20B7D3B08();
        unint64_t v24 = v23;
      }
      else
      {

        uint64_t v22 = 0;
        unint64_t v24 = 0xE000000000000000;
      }
      char v39 = &type metadata for ContactCardPropertyRowItem;
      id v40 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v25 = swift_allocObject();
      *(void *)&long long v38 = v25;
      *(void *)(v25 + 16) = KeyPath;
      *(void *)(v25 + 24) = v16;
      *(void *)(v25 + 32) = v18;
      *(void *)(v25 + 40) = v22;
      *(void *)(v25 + 4_Block_object_dispose(&a9, 8) = v24;
      *(_OWORD *)(v25 + 56) = xmmword_20B7DB990;
      *(void *)(v25 + 72) = 0;
      *(void *)(v25 + 80) = sub_20B772884;
      *(void *)(v25 + 8_Block_object_dispose(&a9, 8) = v13;
      *(unsigned char *)(v25 + 96) = 1;
      sub_20B76D0B0(&v38, (uint64_t)v41);

      char v8 = &selRef_setPath_;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v4 = v32;
      unint64_t v27 = v7[2];
      unint64_t v26 = v7[3];
      if (v27 >= v26 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v26 > 1), v27 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v27 + 1;
      long long v28 = &v7[5 * v27];
      long long v29 = v41[0];
      long long v30 = v41[1];
      v28[8] = v42;
      *((_OWORD *)v28 + 2) = v29;
      *((_OWORD *)v28 + 3) = v30;
    }
    while (v31 != v6);
    swift_bridgeObjectRelease();
  }
}

void sub_20B76F610(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B76F61C()
{
  id v1 = *(id *)v0;
  id v36 = *(void **)(v0 + 16);
  id v37 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFDF80])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_emailAddresses);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v35 = v4 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    char v8 = &selRef_setPath_;
    uint64_t v33 = v5;
    unint64_t v34 = v4;
    do
    {
      if (v35) {
        id v9 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v9 = *(id *)(v4 + 8 * v6 + 32);
      }
      char v10 = v9;
      id v38 = v37;
      id v11 = v36;
      id v12 = [v10 v8[255]];
      uint64_t v13 = sub_20B7D3B08();
      uint64_t v15 = v14;

      uint64_t v16 = swift_allocObject();
      *(void *)(v16 + 16) = v13;
      *(void *)(v16 + 24) = v15;

      uint64_t KeyPath = swift_getKeyPath();
      id v18 = objc_msgSend(v10, sel_label);
      if (v18)
      {
        id v19 = v18;
        uint64_t v20 = sub_20B7D3B08();
        unint64_t v22 = v21;
      }
      else
      {
        uint64_t v20 = 0;
        unint64_t v22 = 0xE000000000000000;
      }
      id v23 = objc_msgSend(v10, v8[255], v33, v34);
      uint64_t v24 = sub_20B7D3B08();
      uint64_t v26 = v25;

      id v40 = &type metadata for ContactCardPropertyRowItem;
      int v41 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v27 = swift_allocObject();
      *(void *)&long long v39 = v27;
      *(void *)(v27 + 16) = KeyPath;
      *(void *)(v27 + 24) = v20;
      *(void *)(v27 + 32) = v22;
      *(void *)(v27 + 40) = v24;
      *(void *)(v27 + 4_Block_object_dispose(&a9, 8) = v26;
      *(_OWORD *)(v27 + 56) = xmmword_20B7DB9A0;
      *(void *)(v27 + 72) = 0;
      *(void *)(v27 + 80) = sub_20B77292C;
      *(void *)(v27 + 8_Block_object_dispose(&a9, 8) = v16;
      *(unsigned char *)(v27 + 96) = 1;
      sub_20B76D0B0(&v39, (uint64_t)v42);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v4 = v34;
      unint64_t v29 = v7[2];
      unint64_t v28 = v7[3];
      if (v29 >= v28 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v28 > 1), v29 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v29 + 1;
      long long v30 = &v7[5 * v29];
      long long v31 = v42[0];
      long long v32 = v42[1];
      v30[8] = v43;
      *((_OWORD *)v30 + 2) = v31;
      *((_OWORD *)v30 + 3) = v32;

      char v8 = &selRef_setPath_;
    }
    while (v33 != v6);
    swift_bridgeObjectRelease();
  }
}

void sub_20B76F970(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B76F97C()
{
  id v1 = *(id *)v0;
  long long v32 = *(void **)(v0 + 16);
  uint64_t v33 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE0A0])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_postalAddresses);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    unint64_t v31 = v4 & 0xC000000000000001;
    uint64_t v29 = v5;
    unint64_t v30 = v4;
    do
    {
      if (v31) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t v10 = swift_allocObject();
      *(void *)(v10 + 16) = v9;
      *(void *)(v10 + 24) = v32;
      uint64_t KeyPath = swift_getKeyPath();
      id v12 = v9;
      id v34 = v33;
      id v13 = v32;
      id v14 = objc_msgSend(v12, sel_label);
      if (v14)
      {
        uint64_t v15 = v14;
        uint64_t v16 = sub_20B7D3B08();
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v18 = 0xE000000000000000;
      }
      id v19 = objc_msgSend(v12, sel_value);
      uint64_t v20 = sub_20B78738C(v19);
      uint64_t v22 = v21;

      id v36 = &type metadata for ContactCardPropertyRowItem;
      id v37 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v23 = swift_allocObject();
      *(void *)&long long v35 = v23;
      *(void *)(v23 + 16) = KeyPath;
      *(void *)(v23 + 24) = v16;
      *(void *)(v23 + 32) = v18;
      *(void *)(v23 + 40) = v20;
      *(void *)(v23 + 4_Block_object_dispose(&a9, 8) = v22;
      *(void *)(v23 + 56) = 0xD000000000000012;
      *(void *)(v23 + 64) = 0x800000020B7E7840;
      *(void *)(v23 + 72) = 0;
      *(void *)(v23 + 80) = sub_20B772934;
      *(void *)(v23 + 8_Block_object_dispose(&a9, 8) = v10;
      *(unsigned char *)(v23 + 96) = 1;
      sub_20B76D0B0(&v35, (uint64_t)v38);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v4 = v30;
      unint64_t v25 = v7[2];
      unint64_t v24 = v7[3];
      if (v25 >= v24 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v24 > 1), v25 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v25 + 1;
      uint64_t v26 = &v7[5 * v25];
      long long v27 = v38[0];
      long long v28 = v38[1];
      v26[8] = v39;
      *((_OWORD *)v26 + 2) = v27;
      *((_OWORD *)v26 + 3) = v28;
    }
    while (v29 != v6);
    swift_bridgeObjectRelease();
  }
}

void sub_20B76FCAC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B76FCB8()
{
  id v1 = *(void **)v0;
  id v54 = *(id *)(v0 + 8);
  if (!objc_msgSend(v1, sel_isKeyAvailable_, *MEMORY[0x263EFE150])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_urlAddresses);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_28:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_28;
  }
LABEL_4:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v53 = v4 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    long long v52 = xmmword_20B7DB9B0;
    unint64_t v51 = v4;
    uint64_t v50 = v5;
    while (1)
    {
      if (v53) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t KeyPath = swift_getKeyPath();
      id v58 = v54;
      id v10 = objc_msgSend(v9, sel_label);
      id v60 = v7;
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = sub_20B7D3B08();
        unint64_t v56 = v13;
        uint64_t v57 = v12;
      }
      else
      {
        unint64_t v56 = 0xE000000000000000;
        uint64_t v57 = 0;
      }
      id v61 = v9;
      id v14 = objc_msgSend(v9, sel_value);
      uint64_t v15 = sub_20B7D3B08();
      unint64_t v17 = v16;

      uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
      uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
      uint64_t v21 = (char *)v49 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v22 = HIBYTE(v17) & 0xF;
      if ((v17 & 0x2000000000000000) == 0) {
        uint64_t v22 = v15 & 0xFFFFFFFFFFFFLL;
      }
      if (!v22) {
        break;
      }
      unint64_t v55 = v49;
      MEMORY[0x270FA5388](v19);
      unint64_t v24 = (char *)v49 - v23;
      sub_20B7D3448();
      uint64_t v25 = sub_20B7D3458();
      uint64_t v26 = *(void *)(v25 - 8);
      long long v27 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v26 + 48);
      uint64_t v28 = v27(v24, 1, v25);
      if (!v28)
      {
        v49[0] = v49;
        MEMORY[0x270FA5388](v28);
        unint64_t v30 = (char *)v49 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *, char *, uint64_t))(v26 + 16))(v30, v24, v25);
        sub_20B7D3438();
        v49[1] = v49;
        (*(void (**)(char *, uint64_t))(v26 + 8))(v30, v25);
        swift_bridgeObjectRelease();
      }
      sub_20B77293C((uint64_t)v24, (uint64_t)v21);
      int v31 = v27(v21, 1, v25);
      unint64_t v4 = v51;
      uint64_t v5 = v50;
      if (v31 == 1) {
        goto LABEL_20;
      }
      uint64_t v32 = sub_20B7D3408();
      unint64_t v34 = v33;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v21, v25);
      swift_bridgeObjectRelease();
LABEL_21:
      id v36 = v58;
      id v37 = objc_msgSend(v61, sel_value);
      uint64_t v38 = sub_20B7D3B08();
      uint64_t v40 = v39;

      uint64_t v41 = swift_allocObject();
      *(void *)(v41 + 16) = v38;
      *(void *)(v41 + 24) = v40;

      v63 = &type metadata for ContactCardPropertyRowItem;
      id v64 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v42 = swift_allocObject();
      *(void *)&long long v62 = v42;
      uint64_t v43 = v57;
      *(void *)(v42 + 16) = KeyPath;
      *(void *)(v42 + 24) = v43;
      *(void *)(v42 + 32) = v56;
      *(void *)(v42 + 40) = v32;
      *(void *)(v42 + 4_Block_object_dispose(&a9, 8) = v34;
      *(_OWORD *)(v42 + 56) = v52;
      *(void *)(v42 + 72) = 0;
      *(void *)(v42 + 80) = sub_20B7729A4;
      *(void *)(v42 + 8_Block_object_dispose(&a9, 8) = v41;
      *(unsigned char *)(v42 + 96) = 1;
      sub_20B76D0B0(&v62, (uint64_t)v65);

      uint64_t v7 = v60;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v45 = v7[2];
      unint64_t v44 = v7[3];
      if (v45 >= v44 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v44 > 1), v45 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v45 + 1;
      char v46 = &v7[5 * v45];
      long long v47 = v65[0];
      long long v48 = v65[1];
      v46[8] = v66;
      *((_OWORD *)v46 + 2) = v47;
      *((_OWORD *)v46 + 3) = v48;

      if (v5 == v6)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    uint64_t v35 = sub_20B7D3458();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56))(v21, 1, 1, v35);
LABEL_20:
    sub_20B76D2E4((uint64_t)v21, &qword_26769B368);
    swift_bridgeObjectRelease();
    uint64_t v32 = 0;
    unint64_t v34 = 0xE000000000000000;
    goto LABEL_21;
  }
  __break(1u);
}

void sub_20B770294(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B7702A0()
{
  id v1 = *(void **)v0;
  id v42 = *(id *)(v0 + 8);
  if (!objc_msgSend(v1, sel_isKeyAvailable_, *MEMORY[0x263EFDF68])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_dates);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v41 = v4 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    unint64_t v40 = v4;
    uint64_t v39 = v5;
    do
    {
      if (v41) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t KeyPath = swift_getKeyPath();
      id v50 = v42;
      id v10 = objc_msgSend(v9, sel_label);
      unint64_t v51 = v7;
      uint64_t v43 = v6;
      if (v10)
      {
        id v11 = v10;
        uint64_t v12 = sub_20B7D3B08();
        unint64_t v44 = v13;
        uint64_t v45 = v12;
      }
      else
      {
        unint64_t v44 = 0xE000000000000000;
        uint64_t v45 = 0;
      }
      id v14 = objc_msgSend(v9, sel_value, v39, v40);
      uint64_t v15 = sub_20B7D32C8();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(void *)(v16 + 64);
      MEMORY[0x270FA5388](v15);
      unint64_t v18 = (v17 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_20B7D31D8();

      uint64_t v19 = sub_20B787C60((unint64_t)&v39 - v18);
      uint64_t v47 = v20;
      uint64_t v48 = v19;
      uint64_t v21 = *(void (**)(char *, uint64_t))(v16 + 8);
      v21((char *)&v39 - v18, v15);
      id v46 = v50;
      id v50 = v9;
      id v22 = objc_msgSend(v9, sel_value);
      MEMORY[0x270FA5388](v22);
      uint64_t v23 = (char *)&v39 - v18;
      sub_20B7D31D8();

      MEMORY[0x270FA5388](v24);
      uint64_t v25 = (char *)&v39 - v18;
      (*(void (**)(char *, char *, uint64_t))(v16 + 16))((char *)&v39 - v18, (char *)&v39 - v18, v15);
      unint64_t v26 = (*(unsigned __int8 *)(v16 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
      uint64_t v27 = swift_allocObject();
      (*(void (**)(unint64_t, char *, uint64_t))(v16 + 32))(v27 + v26, v25, v15);
      v21(v23, v15);
      id v28 = v46;

      unint64_t v53 = &type metadata for ContactCardPropertyRowItem;
      id v54 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v29 = swift_allocObject();
      *(void *)&long long v52 = v29;
      uint64_t v30 = v45;
      *(void *)(v29 + 16) = KeyPath;
      *(void *)(v29 + 24) = v30;
      uint64_t v31 = v48;
      *(void *)(v29 + 32) = v44;
      *(void *)(v29 + 40) = v31;
      *(void *)(v29 + 4_Block_object_dispose(&a9, 8) = v47;
      *(void *)(v29 + 56) = 0;
      *(void *)(v29 + 64) = 0;
      *(void *)(v29 + 72) = 0;
      *(void *)(v29 + 80) = sub_20B7729B0;
      *(void *)(v29 + 8_Block_object_dispose(&a9, 8) = v27;
      *(unsigned char *)(v29 + 96) = 1;
      sub_20B76D0B0(&v52, (uint64_t)v55);

      uint64_t v7 = v51;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v4 = v40;
      uint64_t v32 = v39;
      uint64_t v33 = v43;
      unint64_t v35 = v7[2];
      unint64_t v34 = v7[3];
      if (v35 >= v34 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v34 > 1), v35 + 1, 1, v7);
      }
      uint64_t v6 = v33 + 1;
      v7[2] = v35 + 1;
      id v36 = &v7[5 * v35];
      long long v37 = v55[0];
      long long v38 = v55[1];
      v36[8] = v56;
      *((_OWORD *)v36 + 2) = v37;
      *((_OWORD *)v36 + 3) = v38;
    }
    while (v32 != v6);
    swift_bridgeObjectRelease();
  }
}

void sub_20B770760(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B77076C()
{
  id v1 = *(id *)v0;
  uint64_t v30 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE0F8])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_contactRelations);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (!(v4 >> 62))
  {
    uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v5) {
      goto LABEL_4;
    }
LABEL_19:
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v5) {
    goto LABEL_19;
  }
LABEL_4:
  if (v5 < 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v29 = v4 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    uint64_t v27 = v5;
    unint64_t v28 = v4;
    do
    {
      if (v29) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t KeyPath = swift_getKeyPath();
      id v31 = v30;
      id v11 = objc_msgSend(v9, sel_label);
      if (v11)
      {
        uint64_t v12 = v11;
        uint64_t v13 = sub_20B7D3B08();
        unint64_t v15 = v14;
      }
      else
      {
        uint64_t v13 = 0;
        unint64_t v15 = 0xE000000000000000;
      }
      id v16 = objc_msgSend(v9, sel_value);
      id v17 = objc_msgSend(v16, sel_name);
      uint64_t v18 = sub_20B7D3B08();
      uint64_t v20 = v19;

      uint64_t v33 = &type metadata for ContactCardPropertyRowItem;
      unint64_t v34 = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v21 = swift_allocObject();
      *(void *)&long long v32 = v21;
      *(void *)(v21 + 16) = KeyPath;
      *(void *)(v21 + 24) = v13;
      *(void *)(v21 + 32) = v15;
      *(void *)(v21 + 40) = v18;
      *(void *)(v21 + 4_Block_object_dispose(&a9, 8) = v20;
      *(_OWORD *)(v21 + 56) = 0u;
      *(_OWORD *)(v21 + 72) = 0u;
      *(void *)(v21 + 8_Block_object_dispose(&a9, 8) = 0;
      *(unsigned char *)(v21 + 96) = 1;
      sub_20B76D0B0(&v32, (uint64_t)v35);

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v4 = v28;
      unint64_t v23 = v7[2];
      unint64_t v22 = v7[3];
      if (v23 >= v22 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v22 > 1), v23 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v23 + 1;
      uint64_t v24 = &v7[5 * v23];
      long long v25 = v35[0];
      long long v26 = v35[1];
      v24[8] = v36;
      *((_OWORD *)v24 + 2) = v25;
      *((_OWORD *)v24 + 3) = v26;
    }
    while (v27 != v6);
    swift_bridgeObjectRelease();
  }
}

void sub_20B770A64(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B770A70()
{
  id v1 = *(id *)v0;
  unint64_t v29 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE110])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_socialProfiles);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_17;
  }
LABEL_4:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    unint64_t v27 = v4 & 0xC000000000000001;
    unint64_t v28 = v4;
    uint64_t v26 = v5;
    do
    {
      if (v27) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t KeyPath = swift_getKeyPath();
      id v10 = v29;
      id v11 = objc_msgSend(v9, sel_value);
      uint64_t v12 = sub_20B788754(v11);
      uint64_t v14 = v13;

      id v15 = objc_msgSend(v9, sel_value);
      uint64_t v16 = sub_20B7888DC(v15);
      uint64_t v18 = v17;

      id v19 = v10;
      id v20 = objc_msgSend(v9, sel_value);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;

      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = KeyPath;
      *(void *)(v22 + 24) = v12;
      *(void *)(v22 + 32) = v14;
      *(void *)(v22 + 40) = v16;
      *(void *)(v22 + 4_Block_object_dispose(&a9, 8) = v18;
      *(void *)(v22 + 56) = 0;
      *(void *)(v22 + 64) = 0;
      *(void *)(v22 + 72) = 0;
      *(void *)(v22 + 80) = sub_20B7729EC;
      *(void *)(v22 + 8_Block_object_dispose(&a9, 8) = v21;
      *(unsigned char *)(v22 + 96) = 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v24 = v7[2];
      unint64_t v23 = v7[3];
      if (v24 >= v23 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v23 > 1), v24 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v24 + 1;
      long long v25 = &v7[5 * v24];
      v25[4] = v22;
      *(_OWORD *)(v25 + 5) = v31;
      v25[7] = &type metadata for ContactCardPropertyRowItem;
      v25[8] = &protocol witness table for ContactCardPropertyRowItem;

      unint64_t v4 = v28;
    }
    while (v26 != v6);
    goto LABEL_17;
  }
  __break(1u);
}

void sub_20B770D70(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B770D7C(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  uint64_t v5 = sub_20B7D3C38();

  *a3 = v5;
}

void sub_20B770DE0()
{
  id v1 = *(id *)v0;
  unint64_t v29 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE010])) {
    return;
  }
  id v2 = v1;
  id v3 = objc_msgSend(v2, sel_instantMessageAddresses);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v4 = sub_20B7D3C38();

  if (v4 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_4;
    }
LABEL_17:
    swift_bridgeObjectRelease();
    return;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v5) {
    goto LABEL_17;
  }
LABEL_4:
  if (v5 >= 1)
  {
    uint64_t v6 = 0;
    unint64_t v27 = v4 & 0xC000000000000001;
    uint64_t v7 = (void *)MEMORY[0x263F8EE78];
    unint64_t v28 = v4;
    uint64_t v26 = v5;
    do
    {
      if (v27) {
        id v8 = (id)MEMORY[0x210537C20](v6, v4);
      }
      else {
        id v8 = *(id *)(v4 + 8 * v6 + 32);
      }
      id v9 = v8;
      uint64_t KeyPath = swift_getKeyPath();
      id v10 = v29;
      id v11 = objc_msgSend(v9, sel_value);
      uint64_t v12 = sub_20B788B98(v11);
      uint64_t v30 = v13;

      id v14 = objc_msgSend(v9, sel_value);
      id v15 = objc_msgSend(v14, sel_username);
      uint64_t v16 = sub_20B7D3B08();
      uint64_t v18 = v17;

      id v19 = v10;
      id v20 = objc_msgSend(v9, sel_value);
      uint64_t v21 = swift_allocObject();
      *(void *)(v21 + 16) = v20;

      uint64_t v22 = swift_allocObject();
      *(void *)(v22 + 16) = KeyPath;
      *(void *)(v22 + 24) = v12;
      *(void *)(v22 + 32) = v30;
      *(void *)(v22 + 40) = v16;
      *(void *)(v22 + 4_Block_object_dispose(&a9, 8) = v18;
      *(void *)(v22 + 56) = 0;
      *(void *)(v22 + 64) = 0;
      *(void *)(v22 + 72) = 0;
      *(void *)(v22 + 80) = sub_20B7729F4;
      *(void *)(v22 + 8_Block_object_dispose(&a9, 8) = v21;
      *(unsigned char *)(v22 + 96) = 1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v7 = sub_20B76B9E8(0, v7[2] + 1, 1, v7);
      }
      unint64_t v24 = v7[2];
      unint64_t v23 = v7[3];
      if (v24 >= v23 >> 1) {
        uint64_t v7 = sub_20B76B9E8((void *)(v23 > 1), v24 + 1, 1, v7);
      }
      ++v6;
      v7[2] = v24 + 1;
      long long v25 = &v7[5 * v24];
      v25[4] = v22;
      *(_OWORD *)(v25 + 5) = v32;
      v25[7] = &type metadata for ContactCardPropertyRowItem;
      v25[8] = &protocol witness table for ContactCardPropertyRowItem;

      unint64_t v4 = v28;
    }
    while (v26 != v6);
    goto LABEL_17;
  }
  __break(1u);
}

uint64_t sub_20B771104@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B7714C8(a1, (SEL *)&selRef_birthday, a2);
}

id sub_20B771110@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  id v5 = *(id *)v2;
  uint64_t v6 = *(void **)(v2 + 8);
  id result = objc_msgSend(*(id *)v2, sel_isKeyAvailable_, *MEMORY[0x263EFDF48]);
  if (result && (id result = objc_msgSend(v5, sel_isKeyAvailable_, *MEMORY[0x263EFE058]), result))
  {
    uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
    unint64_t v35 = &v27;
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
    MEMORY[0x270FA5388](v8 - 8);
    unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
    id v36 = v5;
    id v11 = v5;
    swift_getAtKeyPath();

    uint64_t v12 = sub_20B7D32C8();
    uint64_t v32 = a1;
    uint64_t v33 = &v27;
    uint64_t v13 = *(void *)(v12 - 8);
    uint64_t v14 = *(void *)(v13 + 64);
    uint64_t v15 = MEMORY[0x270FA5388](v12);
    unint64_t v16 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v17 = (char *)&v27 - v16;
    MEMORY[0x270FA5388](v15);
    uint64_t v34 = (uint64_t)&v27 - v10;
    sub_20B7729FC((uint64_t)&v27 - v10, (uint64_t)&v27 - v10);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))((char *)&v27 - v10, 1, v12) == 1)
    {
      sub_20B76D2E4(v34, &qword_26769B050);
      id result = (id)sub_20B76D2E4((uint64_t)&v27 - v10, &qword_26769B050);
      *(void *)(a2 + 32) = 0;
      *(_OWORD *)a2 = 0u;
      *(_OWORD *)(a2 + 16) = 0u;
    }
    else
    {
      unint64_t v27 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
      v27((char *)&v27 - v16, (char *)&v27 - v10, v12);
      id v31 = v6;
      uint64_t v18 = sub_20B788D1C();
      uint64_t v29 = v19;
      uint64_t v30 = v18;
      uint64_t v20 = sub_20B787C60((unint64_t)&v27 - v16);
      uint64_t v28 = v21;
      MEMORY[0x270FA5388](v20);
      uint64_t v22 = (char *)&v27 - v16;
      (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v22, v17, v12);
      unint64_t v23 = (*(unsigned __int8 *)(v13 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v24 = swift_allocObject();
      v27((char *)(v24 + v23), v22, v12);
      *(void *)(a2 + 24) = &type metadata for ContactCardPropertyRowItem;
      *(void *)(a2 + 32) = &protocol witness table for ContactCardPropertyRowItem;
      uint64_t v25 = swift_allocObject();
      *(void *)a2 = v25;
      uint64_t v26 = v30;
      *(void *)(v25 + 16) = v32;
      *(void *)(v25 + 24) = v26;
      *(void *)(v25 + 32) = v29;
      *(void *)(v25 + 40) = v20;
      *(void *)(v25 + 4_Block_object_dispose(&a9, 8) = v28;
      *(void *)(v25 + 56) = 0;
      *(void *)(v25 + 64) = 0;
      *(void *)(v25 + 72) = 0;
      *(void *)(v25 + 80) = sub_20B7729B0;
      *(void *)(v25 + 8_Block_object_dispose(&a9, 8) = v24;
      *(unsigned char *)(v25 + 96) = 1;
      sub_20B7D2DA8();

      (*(void (**)(char *, uint64_t))(v13 + 8))(v17, v12);
      return (id)sub_20B76D2E4(v34, &qword_26769B050);
    }
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

uint64_t sub_20B7714BC@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B7714C8(a1, (SEL *)&selRef_nonGregorianBirthday, a2);
}

uint64_t sub_20B7714C8@<X0>(id *a1@<X0>, SEL *a2@<X3>, uint64_t a3@<X8>)
{
  id v4 = [*a1 *a2];
  if (v4)
  {
    id v5 = v4;
    sub_20B7D31D8();

    uint64_t v6 = sub_20B7D32C8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
    uint64_t v8 = v6;
    uint64_t v9 = a3;
    uint64_t v10 = 0;
  }
  else
  {
    uint64_t v11 = sub_20B7D32C8();
    uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v8 = v11;
    uint64_t v9 = a3;
    uint64_t v10 = 1;
  }
  return v7(v9, v10, 1, v8);
}

void sub_20B77158C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

uint64_t sub_20B771598()
{
  id v1 = *(id *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  if (!objc_msgSend(*(id *)v0, sel_isKeyAvailable_, *MEMORY[0x263EFE060])) {
    return MEMORY[0x263F8EE78];
  }
  id v3 = v1;
  id v4 = objc_msgSend(v3, sel_note);
  uint64_t v5 = sub_20B7D3B08();
  unint64_t v7 = v6;

  uint64_t v8 = HIBYTE(v7) & 0xF;
  if ((v7 & 0x2000000000000000) == 0) {
    uint64_t v8 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (!v8)
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
  uint64_t v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_20B7DB980;
  uint64_t KeyPath = swift_getKeyPath();
  id v11 = v2;
  uint64_t v12 = sub_20B789098();
  uint64_t v14 = v13;
  *(void *)(v9 + 56) = &type metadata for ContactCardPropertyRowItem;
  *(void *)(v9 + 64) = &protocol witness table for ContactCardPropertyRowItem;
  uint64_t v15 = swift_allocObject();
  *(void *)(v9 + 32) = v15;
  *(void *)(v15 + 16) = KeyPath;
  *(void *)(v15 + 24) = v12;
  *(void *)(v15 + 32) = v14;
  *(void *)(v15 + 40) = v5;
  *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = v7;
  *(_OWORD *)(v15 + 56) = 0u;
  *(_OWORD *)(v15 + 72) = 0u;
  *(void *)(v15 + 8_Block_object_dispose(&a9, 8) = 0;
  *(unsigned char *)(v15 + 96) = 1;

  return v9;
}

id sub_20B7716F0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callAlert);
  *a2 = result;
  return result;
}

double sub_20B77172C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 8);
  id v6 = *(id *)v2;
  swift_getAtKeyPath();

  if (v16)
  {
    id v7 = v5;
    uint64_t v8 = sub_20B7891AC(a1);
    uint64_t v10 = v9;
    id v11 = _s14ContactsUICore25ContactCardValueFormatterC07displayE8ForAlertySSSo010CNActivityI0CFZ_0(v16);
    uint64_t v13 = v12;
    *(void *)(a2 + 24) = &type metadata for ContactCardPropertyRowItem;
    *(void *)(a2 + 32) = &protocol witness table for ContactCardPropertyRowItem;
    uint64_t v14 = swift_allocObject();
    *(void *)a2 = v14;
    *(void *)(v14 + 16) = a1;
    *(void *)(v14 + 24) = v8;
    *(void *)(v14 + 32) = v10;
    *(void *)(v14 + 40) = v11;
    *(void *)(v14 + 4_Block_object_dispose(&a9, 8) = v13;
    *(void *)(v14 + 56) = 0;
    *(void *)(v14 + 64) = 0;
    *(void *)(v14 + 72) = v16;
    *(void *)(v14 + 80) = 0;
    *(void *)(v14 + 8_Block_object_dispose(&a9, 8) = 0;
    *(unsigned char *)(v14 + 96) = 1;
    sub_20B7D2DA8();
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return result;
}

id sub_20B771828@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_textAlert);
  *a2 = result;
  return result;
}

uint64_t sub_20B771864@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *(void **)(v2 + 8);
  id v6 = *(id *)v2;
  swift_getAtKeyPath();

  uint64_t v7 = HIBYTE(v11) & 0xF;
  if ((v11 & 0x2000000000000000) == 0) {
    uint64_t v7 = v10 & 0xFFFFFFFFFFFFLL;
  }
  if (v7)
  {
    id v8 = v5;
    sub_20B7938C4(a1, v10, v11, a2);
  }
  else
  {
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  return swift_bridgeObjectRelease();
}

void sub_20B771918(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B771924(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B771930(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B77193C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B771948(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

void sub_20B771954(id *a1@<X0>, SEL *a2@<X3>, uint64_t *a3@<X8>)
{
  id v4 = [*a1 *a2];
  uint64_t v5 = sub_20B7D3B08();
  uint64_t v7 = v6;

  *a3 = v5;
  a3[1] = v7;
}

double sub_20B7719A8@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v5)
  {
    *(void *)(a4 + 24) = &type metadata for ContactCardGroupHeaderItem;
    *(void *)(a4 + 32) = &protocol witness table for ContactCardGroupHeaderItem;
    uint64_t v9 = swift_allocObject();
    *(void *)a4 = v9;
    *(void *)(v9 + 16) = a1;
    *(void *)(v9 + 24) = a2;
    *(void *)(v9 + 32) = a3;
    *(_OWORD *)(v9 + 40) = 0u;
    *(_OWORD *)(v9 + 56) = 0u;
    *(unsigned char *)(v9 + 72) = 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(void *)(a4 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  return result;
}

uint64_t sub_20B771A70()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 56)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 73, 7);
}

unint64_t sub_20B771AC8(unint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  unint64_t v4 = result >> 62;
  if (result >> 62) {
    goto LABEL_31;
  }
  uint64_t v5 = *(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10);
LABEL_3:
  if ((unint64_t)a2 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_20B7D3F38();
    double result = swift_bridgeObjectRelease();
    if (v5 == v13) {
      goto LABEL_5;
    }
LABEL_33:
    char v11 = 0;
    return v11 & 1;
  }
  if (v5 != *(void *)((a2 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
    goto LABEL_33;
  }
LABEL_5:
  if (!v5) {
    goto LABEL_28;
  }
  uint64_t v6 = v3 & 0xFFFFFFFFFFFFFF8;
  if (v3 < 0) {
    uint64_t v6 = v3;
  }
  if (!v4) {
    uint64_t v6 = (v3 & 0xFFFFFFFFFFFFFF8) + 32;
  }
  uint64_t v7 = a2 & 0xFFFFFFFFFFFFFF8;
  uint64_t v8 = (a2 & 0xFFFFFFFFFFFFFF8) + 32;
  uint64_t v14 = a2 & 0xFFFFFFFFFFFFFF8;
  if (a2 < 0) {
    uint64_t v7 = a2;
  }
  if ((unint64_t)a2 >> 62) {
    uint64_t v8 = v7;
  }
  if (v6 == v8)
  {
LABEL_28:
    char v11 = 1;
    return v11 & 1;
  }
  if ((v5 & 0x8000000000000000) == 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B350);
    unint64_t v9 = 0;
    uint64_t v10 = a2;
    a2 &= 0xC000000000000001;
    uint64_t v15 = v10;
    unint64_t v4 = v5 - 1;
    while (1)
    {
      if (v5 == v9)
      {
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        swift_bridgeObjectRetain();
        uint64_t v5 = sub_20B7D3F38();
        double result = swift_bridgeObjectRelease();
        goto LABEL_3;
      }
      if ((v3 & 0xC000000000000001) != 0)
      {
        MEMORY[0x210537C20](v9, v3);
        if (a2) {
          goto LABEL_20;
        }
      }
      else
      {
        sub_20B7D2DA8();
        if (a2)
        {
LABEL_20:
          MEMORY[0x210537C20](v9, v15);
          goto LABEL_24;
        }
      }
      if (v9 >= *(void *)(v14 + 16)) {
        goto LABEL_30;
      }
      sub_20B7D2DA8();
LABEL_24:
      char v11 = sub_20B7D3A68();
      swift_release();
      swift_release();
      if ((v11 & 1) != 0 && v4 != v9++) {
        continue;
      }
      return v11 & 1;
    }
  }
  __break(1u);
  return result;
}

void *sub_20B771CDC(unint64_t a1, void *a2)
{
  unint64_t v3 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_20B7D3F38();
    if (v16) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v16 = v4;
    if (v4)
    {
LABEL_3:
      unint64_t v17 = v3 & 0xC000000000000001;
      uint64_t v5 = (void *)MEMORY[0x263F8EE78];
      uint64_t v6 = 4;
      unint64_t v15 = v3;
      uint64_t v7 = v16;
      while (1)
      {
        uint64_t v8 = v6 - 4;
        if (v17)
        {
          MEMORY[0x210537C20](v6 - 4, v3);
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v8, 1)) {
            goto LABEL_18;
          }
        }
        else
        {
          sub_20B7D2DA8();
          uint64_t v9 = v6 - 3;
          if (__OFADD__(v8, 1))
          {
LABEL_18:
            __break(1u);
            goto LABEL_19;
          }
        }
        id v10 = a2;
        swift_getAtPartialKeyPath();

        if (swift_dynamicCast())
        {
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v5 = sub_20B76B8D8(0, v5[2] + 1, 1, v5);
          }
          unint64_t v12 = v5[2];
          unint64_t v11 = v5[3];
          if (v12 >= v11 >> 1) {
            uint64_t v5 = sub_20B76B8D8((void *)(v11 > 1), v12 + 1, 1, v5);
          }
          v5[2] = v12 + 1;
          uint64_t v13 = &v5[2 * v12];
          v13[4] = v18;
          v13[5] = v19;
          unint64_t v3 = v15;
          uint64_t v7 = v16;
        }
        else
        {
          swift_release();
        }
        ++v6;
        if (v9 == v7)
        {
          swift_bridgeObjectRelease();
          return v5;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return (void *)MEMORY[0x263F8EE78];
}

uint64_t sub_20B771EDC(uint64_t a1, void *a2, void *a3, void *a4)
{
  uint64_t v37 = *(void *)(a1 + 16);
  if (!v37) {
    return MEMORY[0x263F8EE78];
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = (void *)MEMORY[0x263F8EE78];
  uint64_t v36 = v4;
  while (1)
  {
    unint64_t v7 = *(void *)(v4 + 8 * v5 + 32);
    swift_bridgeObjectRetain();
    id v8 = a2;
    id v9 = a3;
    id v10 = a4;
    unint64_t v11 = sub_20B771CDC(v7, v8);

    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
    unint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_20B7DB9C0;
    *(void *)(v12 + 32) = swift_getKeyPath();
    *(void *)(v12 + 40) = swift_getKeyPath();
    *(void *)(v12 + 4_Block_object_dispose(&a9, 8) = swift_getKeyPath();
    sub_20B7D3C58();
    char v13 = sub_20B771AC8(v12, v7);
    swift_bridgeObjectRelease();
    if (v13)
    {
      swift_bridgeObjectRelease();
      id v14 = objc_msgSend(self, sel_stringFromContact_style_, v8, 1);
      if (v14)
      {
        unint64_t v15 = v14;
        uint64_t v16 = sub_20B7D3B08();
        unint64_t v18 = v17;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v18 = 0xE000000000000000;
      }
      goto LABEL_24;
    }
    unint64_t v19 = swift_allocObject();
    *(_OWORD *)(v19 + 16) = xmmword_20B7DB9D0;
    *(void *)(v19 + 32) = swift_getKeyPath();
    *(void *)(v19 + 40) = swift_getKeyPath();
    sub_20B7D3C58();
    char v20 = sub_20B771AC8(v19, v7);
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v22 = v11[2];
    if ((v20 & 1) == 0)
    {
      if (!v22) {
        goto LABEL_34;
      }
      uint64_t v16 = v11[4];
      unint64_t v18 = v11[5];
LABEL_19:
      swift_bridgeObjectRetain();
LABEL_23:
      swift_bridgeObjectRelease();
      goto LABEL_24;
    }
    if (!v22) {
      break;
    }
    if (v22 == 1) {
      goto LABEL_33;
    }
    uint64_t v24 = v11[4];
    unint64_t v23 = v11[5];
    uint64_t v16 = v11[6];
    unint64_t v18 = v11[7];
    uint64_t v25 = HIBYTE(v23) & 0xF;
    if ((v23 & 0x2000000000000000) == 0) {
      uint64_t v25 = v24 & 0xFFFFFFFFFFFFLL;
    }
    if (!v25) {
      goto LABEL_19;
    }
    uint64_t v26 = HIBYTE(v18) & 0xF;
    if ((v18 & 0x2000000000000000) == 0) {
      uint64_t v26 = v16 & 0xFFFFFFFFFFFFLL;
    }
    if (v26)
    {
      unint64_t v27 = (void *)sub_20B7D3AF8();
      id v28 = objc_msgSend(self, sel_bundleWithIdentifier_, v27);

      if (v28)
      {
        uint64_t v29 = (void *)sub_20B7D3AF8();
        uint64_t v30 = (void *)sub_20B7D3AF8();
        id v31 = objc_msgSend(v28, sel_localizedStringForKey_value_table_, v29, 0, v30);

        sub_20B7D3B08();
      }
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B060);
      sub_20B76C9DC();
      uint64_t v16 = sub_20B7D3A58();
      unint64_t v18 = v32;
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v24;
    unint64_t v18 = v23;
LABEL_24:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v6 = sub_20B76BB0C(0, v6[2] + 1, 1, v6);
    }
    unint64_t v34 = v6[2];
    unint64_t v33 = v6[3];
    if (v34 >= v33 >> 1) {
      uint64_t v6 = sub_20B76BB0C((void *)(v33 > 1), v34 + 1, 1, v6);
    }
    ++v5;
    v6[2] = v34 + 1;
    unint64_t v35 = &v6[3 * v34];
    v35[4] = v16;
    v35[5] = v18;
    v35[6] = v7;
    uint64_t v4 = v36;
    if (v37 == v5)
    {
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

double sub_20B772364@<D0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_20B7719A8(a1, a2, a3, a4);
}

void *sub_20B772370(uint64_t a1, void (*a2)(long long *__return_ptr, uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  uint64_t v4 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  uint64_t v5 = (void *)MEMORY[0x263F8EE78];
  do
  {
    uint64_t v7 = *(v4 - 1);
    uint64_t v6 = *v4;
    uint64_t v8 = *(v4 - 2);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(&v16, v8, v7, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*((void *)&v17 + 1))
    {
      long long v13 = v16;
      long long v14 = v17;
      uint64_t v15 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v5 = sub_20B76B9E8(0, v5[2] + 1, 1, v5);
      }
      unint64_t v10 = v5[2];
      unint64_t v9 = v5[3];
      if (v10 >= v9 >> 1) {
        uint64_t v5 = sub_20B76B9E8((void *)(v9 > 1), v10 + 1, 1, v5);
      }
      v5[2] = v10 + 1;
      unint64_t v11 = &v5[5 * v10];
      v11[8] = v15;
      *((_OWORD *)v11 + 2) = v13;
      *((_OWORD *)v11 + 3) = v14;
    }
    else
    {
      sub_20B76D2E4((uint64_t)&v16, &qword_26769B348);
    }
    v4 += 3;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v5;
}

char *keypath_get_selector_phoneticGivenName()
{
  return sel_phoneticGivenName;
}

void sub_20B772500(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_phoneticMiddleName()
{
  return sel_phoneticMiddleName;
}

void sub_20B77252C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_phoneticFamilyName()
{
  return sel_phoneticFamilyName;
}

void sub_20B772558(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_jobTitle()
{
  return sel_jobTitle;
}

void sub_20B772584(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_departmentName()
{
  return sel_departmentName;
}

void sub_20B7725B0(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_phoneNumbers()
{
  return sel_phoneNumbers;
}

void sub_20B7725DC(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_emailAddresses()
{
  return sel_emailAddresses;
}

void sub_20B772608(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_postalAddresses()
{
  return sel_postalAddresses;
}

void sub_20B772634(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_urlAddresses()
{
  return sel_urlAddresses;
}

void sub_20B772660(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_dates()
{
  return sel_dates;
}

void sub_20B77268C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_contactRelations()
{
  return sel_contactRelations;
}

void sub_20B7726B8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_socialProfiles()
{
  return sel_socialProfiles;
}

void sub_20B7726E4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_instantMessageAddresses()
{
  return sel_instantMessageAddresses;
}

void sub_20B772710(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_birthday()
{
  return sel_birthday;
}

uint64_t sub_20B77273C@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B7714C8(a1, (SEL *)&selRef_birthday, a2);
}

char *keypath_get_selector_nonGregorianBirthday()
{
  return sel_nonGregorianBirthday;
}

uint64_t sub_20B772768@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B7714C8(a1, (SEL *)&selRef_nonGregorianBirthday, a2);
}

char *keypath_get_selector_note()
{
  return sel_note;
}

void sub_20B772794(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_callAlert()
{
  return sel_callAlert;
}

id sub_20B7727C0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_callAlert);
  *a2 = result;
  return result;
}

char *keypath_get_selector_textAlert()
{
  return sel_textAlert;
}

id sub_20B772808@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = objc_msgSend(*a1, sel_textAlert);
  *a2 = result;
  return result;
}

uint64_t sub_20B772844()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B772884()
{
  return sub_20B7828F8(*(void **)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20B77288C()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 97, 7);
}

uint64_t sub_20B7728F4()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B77292C()
{
  return sub_20B784980(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

void sub_20B772934()
{
  sub_20B782BF8(*(void **)(v0 + 16), *(void **)(v0 + 24));
}

uint64_t sub_20B77293C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B7729A4()
{
  return sub_20B784C60(*(void *)(v0 + 16), *(void *)(v0 + 24));
}

uint64_t sub_20B7729B4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B7729EC()
{
  return sub_20B783070(*(void **)(v0 + 16));
}

uint64_t sub_20B7729F4()
{
  return sub_20B78326C(*(void **)(v0 + 16));
}

uint64_t sub_20B7729FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t objectdestroy_72Tm()
{
  uint64_t v1 = sub_20B7D32C8();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_20B772AF8()
{
  sub_20B7D32C8();
  return sub_20B7838B4();
}

uint64_t sub_20B772B68()
{
  return 1;
}

uint64_t sub_20B772B70()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B772BB4()
{
  return sub_20B7D4098();
}

uint64_t sub_20B772BDC()
{
  return sub_20B7D40A8();
}

unint64_t sub_20B772C1C()
{
  return 0xD000000000000019;
}

uint64_t sub_20B772C38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_20B773638(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_20B772C64()
{
  return 0;
}

void sub_20B772C70(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t sub_20B772C7C(uint64_t a1)
{
  unint64_t v2 = sub_20B772E84();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B772CB8(uint64_t a1)
{
  unint64_t v2 = sub_20B772E84();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t ContactLikeness.Metadata.encode(to:)(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B370);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B772E84();
  sub_20B7D40C8();
  v10[0] = v8;
  v10[1] = v7;
  sub_20B772ED8();
  sub_20B7D3FC8();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_20B772E84()
{
  unint64_t result = qword_26769B378;
  if (!qword_26769B378)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B378);
  }
  return result;
}

unint64_t sub_20B772ED8()
{
  unint64_t result = qword_26769B380;
  if (!qword_26769B380)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B380);
  }
  return result;
}

uint64_t ContactLikeness.Metadata.init(from:)@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B388);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B772E84();
  sub_20B7D40B8();
  if (!v2)
  {
    sub_20B77308C();
    sub_20B7D3F98();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
  }
  return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
}

unint64_t sub_20B77308C()
{
  unint64_t result = qword_26769B390;
  if (!qword_26769B390)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B390);
  }
  return result;
}

uint64_t sub_20B7730D4@<X0>(void *a1@<X0>, _OWORD *a2@<X8>)
{
  return ContactLikeness.Metadata.init(from:)(a1, a2);
}

uint64_t sub_20B7730EC(void *a1)
{
  return ContactLikeness.Metadata.encode(to:)(a1);
}

uint64_t sub_20B773108(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    sub_20B7D2DA8();
  }
  return sub_20B7D2DA8();
}

uint64_t *_s8MetadataVwxx(uint64_t *result)
{
  unint64_t v1 = result[1];
  if (v1 >> 60 != 15) {
    return (uint64_t *)sub_20B76C024(*result, v1);
  }
  return result;
}

uint64_t _s8MetadataVwCP_0(uint64_t a1, uint64_t *a2)
{
  unint64_t v3 = a2[1];
  if (v3 >> 60 == 15)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    uint64_t v4 = *a2;
    sub_20B773108(*a2, a2[1]);
    *(void *)a1 = v4;
    *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  }
  return a1;
}

uint64_t *_s8MetadataVwca(uint64_t *a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if ((unint64_t)a1[1] >> 60 != 15)
  {
    if (v4 >> 60 != 15)
    {
      uint64_t v6 = *(void *)a2;
      sub_20B773108(*(void *)a2, *(void *)(a2 + 8));
      uint64_t v7 = *a1;
      unint64_t v8 = a1[1];
      *a1 = v6;
      a1[1] = v4;
      sub_20B76C024(v7, v8);
      return a1;
    }
    sub_20B77327C((uint64_t)a1);
    goto LABEL_6;
  }
  if (v4 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  uint64_t v5 = *(void *)a2;
  sub_20B773108(*(void *)a2, *(void *)(a2 + 8));
  *a1 = v5;
  a1[1] = v4;
  return a1;
}

uint64_t sub_20B77327C(uint64_t a1)
{
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t *_s8MetadataVwta(uint64_t *a1, uint64_t *a2)
{
  unint64_t v4 = a1[1];
  if (v4 >> 60 != 15)
  {
    unint64_t v5 = a2[1];
    if (v5 >> 60 != 15)
    {
      uint64_t v6 = *a1;
      *a1 = *a2;
      a1[1] = v5;
      sub_20B76C024(v6, v4);
      return a1;
    }
    sub_20B77327C((uint64_t)a1);
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
  return a1;
}

uint64_t _s8MetadataVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 12);
  }
  uint64_t v3 = *(void *)(a1 + 8) >> 60;
  if (((4 * v3) & 0xC) != 0) {
    int v4 = 14 - ((4 * v3) & 0xC | (v3 >> 2));
  }
  else {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s8MetadataVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xB)
  {
    *(void *)__n128 result = a2 - 12;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2)
    {
      *(void *)__n128 result = 0;
      *(void *)(result + _Block_object_dispose(&a9, 8) = (unint64_t)((4 * (a2 ^ 0xF)) | ((a2 ^ 0xF) >> 2)) << 60;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLikeness.Metadata()
{
  return &type metadata for ContactLikeness.Metadata;
}

uint64_t _s8MetadataV10CodingKeysOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s8MetadataV10CodingKeysOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20B7734F0);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B773518()
{
  return 0;
}

ValueMetadata *_s8MetadataV10CodingKeysOMa()
{
  return &_s8MetadataV10CodingKeysON;
}

unint64_t sub_20B773534()
{
  unint64_t result = qword_26769B398;
  if (!qword_26769B398)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B398);
  }
  return result;
}

unint64_t sub_20B77358C()
{
  unint64_t result = qword_26769B3A0;
  if (!qword_26769B3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B3A0);
  }
  return result;
}

unint64_t sub_20B7735E4()
{
  unint64_t result = qword_26769B3A8;
  if (!qword_26769B3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B3A8);
  }
  return result;
}

uint64_t sub_20B773638(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x800000020B7E7860)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_20B7D4018();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t static SearchInContactsIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static SearchInContactsIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t sub_20B7736D0()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769B3B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B3B0);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static SearchInContactsIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B3B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B773954()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769B3C8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B3C8);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static SearchInContactsIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B3C8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static SearchInContactsIntent.description.setter(uint64_t a1)
{
  if (qword_26769AF28 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B3C8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static SearchInContactsIntent.description.modify())()
{
  if (qword_26769AF28 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B3C8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_20B773E88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B448);
  uint64_t v0 = sub_20B7D2ED8();
  uint64_t v1 = *(void *)(v0 - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DB980;
  uint64_t result = (*(uint64_t (**)(unint64_t, void, uint64_t))(v1 + 104))(v3 + v2, *MEMORY[0x263EFBA80], v0);
  qword_26769B3E0 = v3;
  return result;
}

uint64_t static SearchInContactsIntent.searchScopes.getter()
{
  if (qword_26769AF30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t static SearchInContactsIntent.searchScopes.setter(uint64_t a1)
{
  if (qword_26769AF30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26769B3E0 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*static SearchInContactsIntent.searchScopes.modify())()
{
  if (qword_26769AF30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t SearchInContactsIntent.criteria.getter()
{
  return sub_20B7D2CB8();
}

uint64_t sub_20B774108()
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  return swift_release();
}

uint64_t sub_20B774168(char *a1)
{
  uint64_t v2 = sub_20B7D2F28();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = *(uint64_t (**)(char *, char *, uint64_t))(v3 + 16);
  uint64_t v7 = v6((char *)&v9 - v5, a1, v2);
  MEMORY[0x270FA5388](v7);
  v6((char *)&v9 - v5, (char *)&v9 - v5, v2);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CC8();
  (*(void (**)(char *, uint64_t))(v3 + 8))((char *)&v9 - v5, v2);
  swift_release();
  return swift_release();
}

uint64_t SearchInContactsIntent.criteria.setter(uint64_t a1)
{
  uint64_t v2 = sub_20B7D2F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2CC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*SearchInContactsIntent.criteria.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t SearchInContactsIntent.$criteria.getter()
{
  return sub_20B7D2CD8();
}

uint64_t SearchInContactsIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v35 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v37, "entityProvider");
  v37[15] = -18;
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v34 = sub_20B7D29D8();
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3E8);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v36 = (char *)&v27 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20B7D3AE8();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v30 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v5 = sub_20B7D3548();
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v29 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v7 = sub_20B7D33B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v28 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = *MEMORY[0x263F06D10];
  unint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v11((char *)&v27 - v28, v10, v7);
  sub_20B7D33D8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_20B7D3538();
  MEMORY[0x270FA5388](v17);
  v11((char *)&v27 - v28, v10, v7);
  sub_20B7D33D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v15, 0, 1, v32);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  MEMORY[0x270FA5388](v18 - 8);
  char v20 = (char *)&v27 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20B7D2B18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = sub_20B7D2FD8();
  MEMORY[0x270FA5388](v22);
  (*(void (**)(char *, void))(v24 + 104))((char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263EFBDC0]);
  uint64_t result = sub_20B7D2D18();
  uint64_t v26 = v35;
  *unint64_t v35 = v34;
  v26[1] = result;
  return result;
}

uint64_t SearchInContactsIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(_OWORD *)(v2 + 32) = *v1;
  sub_20B7D3CC8();
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = sub_20B7D3CB8();
  uint64_t v4 = sub_20B7D3CA8();
  return MEMORY[0x270FA2498](sub_20B774A4C, v4, v3);
}

uint64_t sub_20B774A4C()
{
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  swift_release();
  uint64_t v1 = *(void **)(*(void *)(v0 + 16) + 24);
  swift_unknownObjectRetain();
  swift_release();
  if (v1)
  {
    uint64_t v2 = sub_20B7D2F28();
    uint64_t v3 = *(void *)(v2 - 8);
    uint64_t v4 = swift_task_alloc();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2CB8();
    swift_release();
    swift_release();
    sub_20B7D2F18();
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v2);
    uint64_t v5 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    objc_msgSend(v1, sel_searchForString_, v5);

    sub_20B7D2BB8();
    swift_unknownObjectRelease();
  }
  else
  {
    sub_20B774C4C();
    swift_allocError();
    swift_willThrow();
  }
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

unint64_t sub_20B774C4C()
{
  unint64_t result = qword_26769B400;
  if (!qword_26769B400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B400);
  }
  return result;
}

unint64_t sub_20B774CA4()
{
  unint64_t result = qword_26769B408;
  if (!qword_26769B408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B408);
  }
  return result;
}

unint64_t sub_20B774CFC()
{
  unint64_t result = qword_26769B410;
  if (!qword_26769B410)
  {
    sub_20B7D2F28();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B410);
  }
  return result;
}

uint64_t sub_20B774D48@<X0>(void *a1@<X8>)
{
  if (qword_26769AF30 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_26769B3E0;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B774DC8()
{
  return sub_20B7D2CB8();
}

uint64_t sub_20B774DEC(uint64_t a1)
{
  uint64_t v2 = sub_20B7D2F28();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2CC8();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*sub_20B774EDC(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

void sub_20B774F38(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);
  free(v1);
}

unint64_t sub_20B774F88()
{
  unint64_t result = qword_26769B418;
  if (!qword_26769B418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B418);
  }
  return result;
}

unint64_t sub_20B774FE0()
{
  unint64_t result = qword_26769B420;
  if (!qword_26769B420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B420);
  }
  return result;
}

unint64_t sub_20B775038()
{
  unint64_t result = qword_26769B428;
  if (!qword_26769B428)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B428);
  }
  return result;
}

uint64_t sub_20B77508C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7750A8()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7750EC@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF20 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B3B0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B775194()
{
  return sub_20B7D2A88();
}

uint64_t sub_20B7751AC()
{
  return MEMORY[0x2105367D0]() & 1;
}

uint64_t sub_20B7751C8()
{
  return sub_20B7D2A68();
}

uint64_t sub_20B7751E0()
{
  return sub_20B7D2A48();
}

uint64_t sub_20B7751F8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return SearchInContactsIntent.perform()(a1);
}

uint64_t sub_20B775290()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_20B775388()
{
  return sub_20B7D2A98();
}

uint64_t destroy for SearchInContactsIntent()
{
  swift_release();
  return swift_release();
}

void *_s14ContactsUICore22SearchInContactsIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for SearchInContactsIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for SearchInContactsIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for SearchInContactsIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SearchInContactsIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchInContactsIntent()
{
  return &type metadata for SearchInContactsIntent;
}

unint64_t sub_20B775570()
{
  unint64_t result = qword_26769BCB0;
  if (!qword_26769BCB0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BCB0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SearchInContactsIntent.SearchInContactsError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20B77565CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for SearchInContactsIntent.SearchInContactsError()
{
  return &type metadata for SearchInContactsIntent.SearchInContactsError;
}

unint64_t sub_20B775698()
{
  unint64_t result = qword_26769B440;
  if (!qword_26769B440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B440);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardWidgetModelFactory()
{
  return &type metadata for ContactCardWidgetModelFactory;
}

uint64_t ContactCardGroupItem.item.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B77571C(v1, a1);
}

uint64_t sub_20B77571C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t ContactCardPropertyRowItem.propertyKey.getter()
{
  return sub_20B7D2DA8();
}

uint64_t ContactCardPropertyRowItem.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardPropertyRowItem.displayValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardPropertyRowItem.symbolName.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *ContactCardPropertyRowItem.activityAlert.getter()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t ContactCardPropertyRowItem.actionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_20B775874(v1);
  return v1;
}

uint64_t sub_20B775874(uint64_t result)
{
  if (result) {
    return sub_20B7D2DA8();
  }
  return result;
}

uint64_t ContactCardPropertyRowItem.canCopy.getter()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t sub_20B77588C()
{
  return sub_20B7D2DA8();
}

uint64_t sub_20B775894()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_20B7758C4()
{
  uint64_t v1 = *(void *)(v0 + 40);
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_20B7758F4()
{
  uint64_t v1 = *(void **)(v0 + 56);
  id v2 = v1;
  return v1;
}

uint64_t sub_20B77591C()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_20B77594C()
{
  uint64_t v1 = *(void *)(v0 + 64);
  sub_20B775874(v1);
  return v1;
}

uint64_t sub_20B775980()
{
  return *(unsigned __int8 *)(v0 + 80);
}

uint64_t ContactCardGroupQuickActionItem.symbolName.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardGroupQuickActionItem.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardGroupQuickActionItem.actionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_20B775874(v1);
  return v1;
}

uint64_t ContactCardGroupQuickActionItem.canCopy.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ContactCardGroupQuickActionItem.init(symbolName:label:actionHandler:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + _Block_object_dispose(&a9, 8) = a2;
  *(void *)(a7 + 16) = a3;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  *(unsigned char *)(a7 + 4_Block_object_dispose(&a9, 8) = 0;
  return result;
}

uint64_t sub_20B775A38()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_20B775A68()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_20B775874(v1);
  return v1;
}

uint64_t sub_20B775A9C()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t ContactCardGroupHeaderItem.displayValue.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardGroupHeaderItem.propertyKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContactCardGroupHeaderItem.label.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardGroupHeaderItem.actionHandler.getter()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_20B775874(v1);
  return v1;
}

uint64_t ContactCardGroupHeaderItem.canCopy.getter()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_20B775B48()
{
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B775B50()
{
  uint64_t v1 = *(void *)(v0 + 40);
  sub_20B775874(v1);
  return v1;
}

uint64_t sub_20B775B84()
{
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t dispatch thunk of ContactCardGroupItemProtocol.label.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ContactCardGroupItemProtocol.actionHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactCardGroupItemProtocol.canCopy.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContactCardGroupQuickActionItemProtocol.symbolName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactCardGroupHeaderItemProtocol.displayValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactCardGroupHeaderItemProtocol.propertyKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContactCardGroupRowItemProtocol.propertyKey.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContactCardGroupRowItemProtocol.displayValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContactCardGroupRowItemProtocol.symbolName.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ContactCardGroupRowItemProtocol.activityAlert.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t initializeWithCopy for ContactCardGroupItem(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v3;
  (**(void (***)(void))(v3 - 8))();
  return a1;
}

uint64_t *assignWithCopy for ContactCardGroupItem(uint64_t *a1, uint64_t *a2)
{
  return a1;
}

uint64_t *__swift_assign_boxed_opaque_existential_1(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    long long v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        sub_20B7D2DA8();
        unint64_t result = (uint64_t *)swift_release();
        *long long v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *unint64_t result = *a2;
          sub_20B7D2DA8();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *long long v3 = *a2;
          sub_20B7D2DA8();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ContactCardGroupItem(uint64_t a1, uint64_t a2)
{
  __swift_destroy_boxed_opaque_existential_0(a1);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardGroupItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardGroupItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardGroupItem()
{
  return &type metadata for ContactCardGroupItem;
}

void destroy for ContactCardPropertyRowItem(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(a1 + 64))
  {
    swift_release();
  }
}

uint64_t initializeWithCopy for ContactCardPropertyRowItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void **)(a2 + 56);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  int v9 = (_OWORD *)(a2 + 64);
  uint64_t v8 = *(void *)(a2 + 64);
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v7;
  if (v8)
  {
    uint64_t v11 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v8;
    *(void *)(a1 + 72) = v11;
    sub_20B7D2DA8();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *v9;
  }
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t assignWithCopy for ContactCardPropertyRowItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  sub_20B7D2DA8();
  swift_release();
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void **)(a1 + 56);
  uint64_t v5 = *(void **)(a2 + 56);
  *(void *)(a1 + 56) = v5;
  id v6 = v5;

  uint64_t v7 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v9;
      sub_20B7D2DA8();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  sub_20B7D2DA8();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

__n128 __swift_memcpy81_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for ContactCardPropertyRowItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  id v6 = *(void **)(a1 + 56);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 48);

  uint64_t v7 = *(void *)(a2 + 64);
  if (!*(void *)(a1 + 64))
  {
    if (v7)
    {
      uint64_t v9 = *(void *)(a2 + 72);
      *(void *)(a1 + 64) = v7;
      *(void *)(a1 + 72) = v9;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    goto LABEL_8;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v8 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = v7;
  *(void *)(a1 + 72) = v8;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardPropertyRowItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 81)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardPropertyRowItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 80) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 81) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 81) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardPropertyRowItem()
{
  return &type metadata for ContactCardPropertyRowItem;
}

uint64_t destroy for ContactCardGroupQuickActionItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ContactCardGroupQuickActionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v7 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v6;
    *(void *)(a1 + 40) = v8;
    sub_20B7D2DA8();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *v7;
  }
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t assignWithCopy for ContactCardGroupQuickActionItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v4;
      *(void *)(a1 + 40) = v6;
      sub_20B7D2DA8();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  sub_20B7D2DA8();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 __swift_memcpy49_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContactCardGroupQuickActionItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 32);
  if (!*(void *)(a1 + 32))
  {
    if (v6)
    {
      uint64_t v8 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = v6;
      *(void *)(a1 + 40) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 4_Block_object_dispose(&a9, 8) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardGroupQuickActionItem(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardGroupQuickActionItem(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 4_Block_object_dispose(&a9, 8) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(void *)(result + _Block_object_dispose(&a9, 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardGroupQuickActionItem()
{
  return &type metadata for ContactCardGroupQuickActionItem;
}

uint64_t destroy for ContactCardGroupHeaderItem(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(void *)(a1 + 40))
  {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for ContactCardGroupHeaderItem(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = (_OWORD *)(a2 + 40);
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v8 = *(void *)(a2 + 48);
    *(void *)(a1 + 40) = v6;
    *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v8;
    sub_20B7D2DA8();
  }
  else
  {
    *(_OWORD *)(a1 + 40) = *v7;
  }
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t assignWithCopy for ContactCardGroupHeaderItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v4)
    {
      uint64_t v6 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v4;
      *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v6;
      sub_20B7D2DA8();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  sub_20B7D2DA8();
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

__n128 __swift_memcpy57_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ContactCardGroupHeaderItem(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  if (!*(void *)(a1 + 40))
  {
    if (v5)
    {
      uint64_t v7 = *(void *)(a2 + 48);
      *(void *)(a1 + 40) = v5;
      *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v7;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
    goto LABEL_8;
  }
  if (!v5)
  {
    swift_release();
    goto LABEL_7;
  }
  uint64_t v6 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v6;
  swift_release();
LABEL_8:
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardGroupHeaderItem(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 57)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardGroupHeaderItem(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(unsigned char *)(result + 56) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 57) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 57) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardGroupHeaderItem()
{
  return &type metadata for ContactCardGroupHeaderItem;
}

uint64_t sub_20B776A6C()
{
  type metadata accessor for ContactLikenessStore.InMemoryCache(0);
  uint64_t v0 = swift_allocObject();
  uint64_t result = ContactLikenessStore.InMemoryCache.init(capacity:)(20);
  qword_26769B450 = v0;
  return result;
}

uint64_t ContactLikenessStore.InMemoryCache.__allocating_init(capacity:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  ContactLikenessStore.InMemoryCache.init(capacity:)(a1);
  return v2;
}

uint64_t ContactLikenessStore.__allocating_init(configuration:)(uint64_t *a1)
{
  uint64_t v2 = swift_allocObject();
  ContactLikenessStore.init(configuration:)(a1);
  return v2;
}

uint64_t ContactLikenessStore.init(configuration:)(uint64_t *a1)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v21 = a1[3];
  char v22 = *((unsigned char *)a1 + 32);
  uint64_t v5 = v1 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_logger;
  if (qword_26769AFE0 != -1) {
    swift_once();
  }
  uint64_t v6 = sub_20B7D39F8();
  uint64_t v7 = __swift_project_value_buffer(v6, (uint64_t)qword_2676A3CD8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v8(v5, v7, v6);
  uint64_t v9 = type metadata accessor for ContactLikenessStore.IntentImpl(0);
  uint64_t v10 = swift_allocObject();
  v8(v10 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore10IntentImpl_logger, v7, v6);
  uint64_t v11 = (void *)(v10 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore10IntentImpl_clientLabel);
  *uint64_t v11 = v3;
  v11[1] = v2;
  uint64_t v28 = v9;
  unint64_t v29 = &off_26BFC6810;
  *(void *)&long long v27 = v10;
  if (!v4)
  {
    if ((v22 & 1) == 0)
    {
      if (v21 >= 1)
      {
        sub_20B77571C((uint64_t)&v27, (uint64_t)&v24);
        type metadata accessor for ContactLikenessStore.InMemoryCache(0);
        uint64_t v17 = swift_allocObject();
        ContactLikenessStore.InMemoryCache.init(capacity:)(v21);
        uint64_t v18 = type metadata accessor for ContactLikenessStore.InMemoryCacheImpl(0);
        uint64_t v19 = swift_allocObject();
        v8(v19 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_logger, v7, v6);
        sub_20B76D0B0(&v24, v19 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next);
        *(void *)(v19 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_cache) = v17;
        uint64_t v25 = v18;
        uint64_t v26 = &off_26BFC6800;
        *(void *)&long long v24 = v19;
        goto LABEL_11;
      }
      if (!v21) {
        goto LABEL_12;
      }
    }
    sub_20B77571C((uint64_t)&v27, (uint64_t)&v24);
    if (qword_26769AF38 != -1) {
      swift_once();
    }
    uint64_t v14 = qword_26769B450;
    uint64_t v15 = type metadata accessor for ContactLikenessStore.InMemoryCacheImpl(0);
    uint64_t v16 = swift_allocObject();
    v8(v16 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_logger, v7, v6);
    sub_20B76D0B0(&v24, v16 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next);
    *(void *)(v16 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_cache) = v14;
    uint64_t v25 = v15;
    uint64_t v26 = &off_26BFC6800;
    *(void *)&long long v24 = v16;
    sub_20B7D2DA8();
    goto LABEL_11;
  }
  sub_20B77571C((uint64_t)&v27, (uint64_t)&v24);
  uint64_t v12 = type metadata accessor for ContactLikenessStore.InMemoryCacheImpl(0);
  uint64_t v13 = swift_allocObject();
  v8(v13 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_logger, v7, v6);
  sub_20B76D0B0(&v24, v13 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next);
  *(void *)(v13 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_cache) = v4;
  uint64_t v25 = v12;
  uint64_t v26 = &off_26BFC6800;
  *(void *)&long long v24 = v13;
LABEL_11:
  __swift_destroy_boxed_opaque_existential_0((uint64_t)&v27);
  sub_20B76D0B0(&v24, (uint64_t)&v27);
LABEL_12:
  sub_20B76D0B0(&v27, v23 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_impl);
  return v23;
}

uint64_t ContactLikenessStore.__allocating_init(clientLabel:)(uint64_t a1, uint64_t a2)
{
  v4[0] = a1;
  v4[1] = a2;
  v4[2] = 0;
  void v4[3] = 0;
  char v5 = 1;
  uint64_t v2 = swift_allocObject();
  ContactLikenessStore.init(configuration:)(v4);
  return v2;
}

uint64_t ContactLikenessStore.Configuration.init(clientLabel:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(void *)(a3 + _Block_object_dispose(&a9, 8) = a2;
  *(void *)(a3 + 16) = 0;
  *(void *)(a3 + 24) = 0;
  *(unsigned char *)(a3 + 32) = 1;
  return result;
}

uint64_t ContactLikenessStore.fetchLikenesses(for:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return MEMORY[0x270FA2498](sub_20B776F20, 0, 0);
}

uint64_t sub_20B776F20()
{
  uint64_t v1 = (void *)(v0[3] + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_impl);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_20B77703C;
  uint64_t v5 = v0[2];
  return v7(&unk_26BFC5910, v5, v2, v3);
}

uint64_t sub_20B77703C(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t ContactLikenessStore.fetchLikenesses(of:for:)(uint64_t a1, uint64_t a2)
{
  v3[3] = a2;
  v3[4] = v2;
  void v3[2] = a1;
  return MEMORY[0x270FA2498](sub_20B77715C, 0, 0);
}

uint64_t sub_20B77715C()
{
  uint64_t v1 = (void *)(v0[4] + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_impl);
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  __swift_project_boxed_opaque_existential_1(v1, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_20B777270;
  uint64_t v6 = v0[2];
  uint64_t v5 = v0[3];
  return v8(v6, v5, v2, v3);
}

uint64_t sub_20B777270(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t ContactLikenessStore.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_impl);
  return v0;
}

uint64_t ContactLikenessStore.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtC14ContactsUICore20ContactLikenessStore_impl);
  return swift_deallocClassInstance();
}

uint64_t ContactLikenessStore.Configuration.clientLabel.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactLikenessStore.Configuration.clientLabel.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*ContactLikenessStore.Configuration.clientLabel.modify())()
{
  return nullsub_1;
}

uint64_t ContactLikenessStore.Configuration.sharedInMemoryCache.getter()
{
  return sub_20B7D2DA8();
}

uint64_t ContactLikenessStore.Configuration.sharedInMemoryCache.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*ContactLikenessStore.Configuration.sharedInMemoryCache.modify())()
{
  return nullsub_1;
}

uint64_t ContactLikenessStore.Configuration.inMemoryCacheCapacity.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t ContactLikenessStore.Configuration.inMemoryCacheCapacity.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

uint64_t (*ContactLikenessStore.Configuration.inMemoryCacheCapacity.modify())()
{
  return nullsub_1;
}

BOOL static ContactLikenessStoreError.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t ContactLikenessStoreError.hash(into:)()
{
  return sub_20B7D4098();
}

uint64_t ContactLikenessStoreError.hashValue.getter()
{
  return sub_20B7D40A8();
}

BOOL sub_20B777634(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_20B77764C(uint64_t a1, uint64_t a2)
{
  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  uint64_t v4 = sub_20B7D39F8();
  v3[17] = v4;
  v3[18] = *(void *)(v4 - 8);
  v3[19] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20B777710, 0, 0);
}

uint64_t sub_20B777710()
{
  uint64_t v23 = v0;
  uint64_t v1 = v0[15];
  uint64_t v2 = sub_20B780928(v0[14]);
  v0[8] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B560);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_20B7D3898();
  v0[7] = v2;
  v0[20] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B568);
  swift_allocObject();
  uint64_t v4 = sub_20B7D3898();
  uint64_t v5 = OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore10IntentImpl_logger;
  v0[21] = v4;
  v0[22] = v5;
  os_log_type_t v6 = sub_20B7D3D28();
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_20B7D39D8();
  if (os_log_type_enabled(v7, v6))
  {
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = swift_slowAlloc();
    uint64_t v22 = v9;
    *(_DWORD *)uint64_t v8 = 136315138;
    uint64_t v10 = swift_bridgeObjectRetain();
    uint64_t v11 = MEMORY[0x2105379C0](v10, MEMORY[0x263F8D310]);
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    v0[13] = sub_20B77C87C(v11, v13, &v22);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v7, v6, "Fetching avatars for identifiers %s", v8, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v9, -1, -1);
    MEMORY[0x210538E40](v8, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  os_log_type_t v14 = sub_20B7D3D38();
  swift_retain_n();
  swift_retain_n();
  uint64_t v15 = sub_20B7D39D8();
  if (os_log_type_enabled(v15, v14))
  {
    uint64_t v16 = (uint8_t *)swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v22 = v17;
    *(_DWORD *)uint64_t v16 = 136315138;
    uint64_t v18 = sub_20B7AE28C();
    v0[12] = sub_20B77C87C(v18, v19, &v22);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_20B704000, v15, v14, "Intent: %s", v16, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v17, -1, -1);
    MEMORY[0x210538E40](v16, -1, -1);
  }
  else
  {

    swift_release_n();
    swift_release_n();
  }
  char v20 = (void *)swift_task_alloc();
  v0[23] = v20;
  *char v20 = v0;
  v20[1] = sub_20B777B28;
  v20[7] = v0[16];
  return MEMORY[0x270FA2498](sub_20B778C08, 0, 0);
}

uint64_t sub_20B777B28(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = (void *)*v2;
  void v3[2] = v2;
  v3[3] = a1;
  v3[4] = a2;
  v3[24] = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_20B777C30, 0, 0);
}

uint64_t sub_20B777C30()
{
  if (*(void *)(v0 + 192))
  {
    uint64_t v1 = *(void *)(v0 + 32);
    long long v16 = *(_OWORD *)(v0 + 160);
    (*(void (**)(void, void, void))(*(void *)(v0 + 144) + 16))(*(void *)(v0 + 152), *(void *)(v0 + 128) + *(void *)(v0 + 176), *(void *)(v0 + 136));
    sub_20B7D39A8();
    swift_allocObject();
    sub_20B7D3958();
    *(void *)(v0 + 200) = sub_20B7D3988();
    swift_release();
    sub_20B7D3968();
    uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B570);
    *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v2;
    *(void *)(v0 + 216) = *(void *)(v2 - 8);
    uint64_t v3 = swift_task_alloc();
    *(void *)(v0 + 224) = v3;
    uint64_t ObjectType = swift_getObjectType();
    *(_OWORD *)(v0 + 40) = v16;
    uint64_t v5 = sub_20B7D37D8();
    *(void *)(v0 + 232) = v5;
    *(void *)(v0 + 240) = *(void *)(v5 - 8);
    uint64_t v6 = swift_task_alloc();
    *(void *)(v0 + 24_Block_object_dispose(&a9, 8) = v6;
    sub_20B781158();
    sub_20B7811AC();
    sub_20B7786D4();
    sub_20B7D3698();
    swift_allocObject();
    uint64_t v7 = sub_20B7D3688();
    *(void *)(v0 + 256) = v7;
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 264) = v8;
    *uint64_t v8 = v0;
    v8[1] = sub_20B777FD4;
    uint64_t v9 = MEMORY[0x263F24EC8];
    return MEMORY[0x270F0C940](v3, v0 + 40, v6, v7, v9, ObjectType, &type metadata for FetchContactAvatarIntentRepresentation, v1);
  }
  else
  {
    uint64_t v10 = sub_20B7D3D48();
    uint64_t v11 = sub_20B7D39D8();
    if (os_log_type_enabled(v11, (os_log_type_t)v10))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl(&dword_20B704000, v11, (os_log_type_t)v10, "Could not create dispatcher", v12, 2u);
      MEMORY[0x210538E40](v12, -1, -1);
    }
    swift_release();
    swift_release();

    swift_task_dealloc();
    unint64_t v13 = *(uint64_t (**)(uint64_t))(v0 + 8);
    uint64_t v14 = MEMORY[0x263F8EE78];
    return v13(v14);
  }
}

uint64_t sub_20B777FD4()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  (*(void (**)(void, void))(v2[30] + 8))(v2[31], v2[29]);
  swift_release();
  if (v0)
  {
    uint64_t v3 = sub_20B7784D4;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = sub_20B77813C;
  }
  return MEMORY[0x270FA2498](v3, 0, 0);
}

uint64_t sub_20B77813C()
{
  sub_20B7D3948();
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B588);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_20B7D3798();
  sub_20B7D3838();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  if (v0[10])
  {
    swift_task_dealloc();
    sub_20B7D2DA8();
    sub_20B7D3868();
    swift_release();
    unint64_t v4 = v0[11];
    if (v4)
    {
      uint64_t v6 = v0[27];
      uint64_t v5 = v0[28];
      uint64_t v25 = v0[26];
      uint64_t v7 = v0[16];
      sub_20B7D2DA8();
      unint64_t v8 = sub_20B7802A8(v4, v7);
      swift_release();
      swift_release();
      swift_release();
      swift_unknownObjectRelease();
      swift_release();
      swift_release();
      (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v25);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    uint64_t v16 = sub_20B7D3D28();
    uint64_t v17 = sub_20B7D39D8();
    os_log_type_t v18 = v16;
    if (os_log_type_enabled(v17, (os_log_type_t)v16))
    {
      unint64_t v19 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v19 = 0;
      _os_log_impl(&dword_20B704000, v17, v18, "No avatars were returned from the intent execution", v19, 2u);
      MEMORY[0x210538E40](v19, -1, -1);
    }
    uint64_t v21 = v0[27];
    uint64_t v20 = v0[28];
    uint64_t v22 = v0[26];
    swift_release();
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v9 = sub_20B7D3D28();
    uint64_t v10 = sub_20B7D39D8();
    os_log_type_t v11 = v9;
    if (os_log_type_enabled(v10, v9))
    {
      unint64_t v12 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)unint64_t v12 = 0;
      _os_log_impl(&dword_20B704000, v10, v11, "No values were returned from the intent execution", v12, 2u);
      MEMORY[0x210538E40](v12, -1, -1);
    }
    uint64_t v14 = v0[27];
    uint64_t v13 = v0[28];
    uint64_t v15 = v0[26];
    swift_release();
    swift_release();
    swift_release();

    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  }
  unint64_t v8 = MEMORY[0x263F8EE78];
LABEL_11:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v23 = (uint64_t (*)(unint64_t))v0[1];
  return v23(v8);
}

uint64_t sub_20B7784D4()
{
  uint64_t v1 = (void *)v0[34];
  swift_release();
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = sub_20B7D3D48();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_20B7D39D8();
  os_log_type_t v6 = v2;
  if (os_log_type_enabled(v5, v2))
  {
    uint64_t v7 = (void *)v0[34];
    unint64_t v8 = (uint8_t *)swift_slowAlloc();
    os_log_type_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)unint64_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[9] = v11;
    sub_20B7D3D88();
    *os_log_type_t v9 = v11;

    _os_log_impl(&dword_20B704000, v5, v6, "Error fetching avatars: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v9, -1, -1);
    MEMORY[0x210538E40](v8, -1, -1);
  }
  else
  {
    unint64_t v12 = (void *)v0[34];
  }
  uint64_t v13 = (void *)v0[34];
  swift_release();
  swift_release();

  swift_task_dealloc();
  uint64_t v14 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v15 = MEMORY[0x263F8EE78];
  return v14(v15);
}

uint64_t sub_20B7786D4()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v0 - 8);
  os_log_type_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20B7D39C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_20B7D37C8();
  return sub_20B7D37B8();
}

uint64_t sub_20B7787B4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ContactLikeness(0);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  os_log_type_t v9 = (char *)v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7AE39C((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    uint64_t v31 = v6;
    sub_20B76D2E4((uint64_t)v5, &qword_26769B548);
    os_log_type_t v10 = sub_20B7D3D48();
    swift_retain_n();
    uint64_t v11 = sub_20B7D39D8();
    os_log_type_t v12 = v10;
    if (os_log_type_enabled(v11, v10))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v32 = a1;
      uint64_t v14 = (uint8_t *)v13;
      uint64_t v15 = swift_slowAlloc();
      uint64_t v34 = v15;
      uint64_t v30 = v1;
      *(_DWORD *)uint64_t v14 = 136315138;
      unint64_t v16 = sub_20B7AEA40();
      uint64_t v33 = sub_20B77C87C(v16, v17, &v34);
      sub_20B7D3D88();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20B704000, v11, v12, "Avatar could not be converted: %s", v14, 0xCu);
      uint64_t v18 = 1;
      swift_arrayDestroy();
      MEMORY[0x210538E40](v15, -1, -1);
      unint64_t v19 = v14;
      a1 = v32;
      MEMORY[0x210538E40](v19, -1, -1);
    }
    else
    {
      swift_release_n();

      uint64_t v18 = 1;
    }
    uint64_t v6 = v31;
  }
  else
  {
    uint64_t v32 = a1;
    sub_20B780C94((uint64_t)v5, (uint64_t)v9);
    os_log_type_t v20 = sub_20B7D3D38();
    swift_retain_n();
    uint64_t v21 = sub_20B7D39D8();
    os_log_type_t v22 = v20;
    if (os_log_type_enabled(v21, v20))
    {
      uint64_t v23 = swift_slowAlloc();
      uint64_t v30 = v1;
      uint64_t v24 = (uint8_t *)v23;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v34 = v25;
      uint64_t v31 = v6;
      *(_DWORD *)uint64_t v24 = 136315138;
      v29[1] = v24 + 4;
      unint64_t v26 = sub_20B7AEA40();
      uint64_t v33 = sub_20B77C87C(v26, v27, &v34);
      uint64_t v6 = v31;
      sub_20B7D3D88();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20B704000, v21, v22, "Found avatar: %s", v24, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v25, -1, -1);
      MEMORY[0x210538E40](v24, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    a1 = v32;
    sub_20B780C94((uint64_t)v9, v32);
    uint64_t v18 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(a1, v18, 1, v6);
}

uint64_t sub_20B778BE8()
{
  *(void *)(v1 + 56) = v0;
  return MEMORY[0x270FA2498](sub_20B778C08, 0, 0);
}

uint64_t sub_20B778C08()
{
  id v1 = objc_msgSend(self, sel_defaultEnvironment);
  unint64_t v2 = sub_20B781118();
  uint64_t v3 = MEMORY[0x263F24F80];
  v0[5] = v2;
  v0[6] = v3;
  v0[2] = v1;
  uint64_t v4 = sub_20B7D3828();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = swift_task_alloc();
  uint64_t v7 = *(void *)(sub_20B7D37F8() - 8);
  swift_task_alloc();
  (*(void (**)(void))(v7 + 104))();
  sub_20B7D3818();
  swift_task_dealloc();
  uint64_t v8 = sub_20B7D3808();
  uint64_t v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v6, v4);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v11(v8, v10);
}

uint64_t sub_20B778E18()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore10IntentImpl_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_20B778ECC(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_20B778F74;
  return sub_20B77764C(a1, a2);
}

uint64_t sub_20B778F74(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t ContactLikenessStore.InMemoryCache.init(capacity:)(uint64_t a1)
{
  uint64_t v3 = OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_logger;
  if (qword_26769AFE0 != -1) {
    swift_once();
  }
  uint64_t v4 = sub_20B7D39F8();
  uint64_t v5 = __swift_project_value_buffer(v4, (uint64_t)qword_2676A3CD8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(v1 + v3, v5, v4);
  uint64_t v6 = OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_evictionQueue;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B4A8);
  uint64_t v7 = swift_allocObject();
  *(_DWORD *)(v7 + 24) = 0;
  uint64_t v8 = MEMORY[0x263F8EE78];
  *(void *)(v7 + 16) = MEMORY[0x263F8EE78];
  *(void *)(v1 + v6) = v7;
  *(void *)(v1 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_capacity) = a1;
  unint64_t v9 = sub_20B77919C(v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B4B8);
  uint64_t v10 = swift_allocObject();
  *(_DWORD *)(v10 + 24) = 0;
  *(void *)(v10 + 16) = v9;
  *(void *)(v1 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_storage) = v10;
  return v1;
}

unint64_t sub_20B77919C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5D0);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = (void *)MEMORY[0x263F8EE80];
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B550);
  uint64_t v6 = sub_20B7D3F68();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_9;
  }
  uint64_t v9 = (uint64_t)&v5[*(int *)(v2 + 48)];
  uint64_t v25 = a1;
  uint64_t v26 = v9;
  uint64_t v10 = v6 + 64;
  uint64_t v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  uint64_t v12 = *(void *)(v3 + 72);
  sub_20B7D2DA8();
  while (1)
  {
    sub_20B781268(v11, (uint64_t)v5, &qword_26769B5D0);
    unsigned __int8 v13 = *v5;
    uint64_t v14 = *((void *)v5 + 1);
    uint64_t v15 = *((void *)v5 + 2);
    unint64_t result = sub_20B77CF4C(*v5, v14, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = v7[6] + 24 * result;
    *(unsigned char *)uint64_t v19 = v13;
    *(void *)(v19 + _Block_object_dispose(&a9, 8) = v14;
    *(void *)(v19 + 16) = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for ContactLikeness(0);
    unint64_t result = sub_20B780C94(v26, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_12;
    }
    v7[2] = v24;
    v11 += v12;
    if (!--v8)
    {
      swift_bridgeObjectRelease();
      swift_release();
      return (unint64_t)v7;
    }
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_20B779398(uint64_t a1)
{
  return sub_20B7793E8(a1, &qword_26769B5A0, &qword_26769B5A8, (uint64_t (*)(void))sub_20B77CFF0);
}

unint64_t sub_20B7793C0(uint64_t a1)
{
  return sub_20B7793E8(a1, &qword_26769B590, &qword_26769B598, (uint64_t (*)(void))sub_20B77D034);
}

unint64_t sub_20B7793E8(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v27 = a4;
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(a2);
    uint64_t v6 = (void *)sub_20B7D3F68();
  }
  else
  {
    uint64_t v6 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    unsigned __int8 v13 = &v11[*(int *)(v8 + 48)];
    unint64_t v14 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v26 = a1;
    uint64_t v15 = a1 + v14;
    uint64_t v16 = *(void *)(v9 + 72);
    sub_20B7D2DA8();
    while (1)
    {
      sub_20B781268(v15, (uint64_t)v11, a3);
      char v17 = *v11;
      unint64_t result = v27(*v11);
      if (v19) {
        break;
      }
      unint64_t v20 = result;
      *(void *)((char *)v6 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(unsigned char *)(v6[6] + result) = v17;
      uint64_t v21 = v6[7];
      uint64_t v22 = sub_20B7D2F68();
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v13, v22);
      uint64_t v23 = v6[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_12;
      }
      v6[2] = v25;
      v15 += v16;
      if (!--v12)
      {
        swift_release();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v6;
  }
  return result;
}

uint64_t sub_20B7795E4@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  os_log_type_t v10 = sub_20B7D3D38();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v11 = sub_20B7D39D8();
  os_log_type_t v12 = v10;
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v13 = swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    uint64_t v25 = v24;
    *(_DWORD *)uint64_t v13 = 136315394;
    swift_bridgeObjectRetain();
    sub_20B77C87C(a1, a2, &v25);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v14 = swift_bridgeObjectRetain();
    os_log_type_t v23 = v12;
    uint64_t v15 = MEMORY[0x2105379C0](v14, &type metadata for ContactLikeness.Kind);
    uint64_t v16 = v5;
    uint64_t v17 = a4;
    unint64_t v19 = v18;
    swift_bridgeObjectRelease();
    sub_20B77C87C(v15, v19, &v25);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    a4 = v17;
    uint64_t v5 = v16;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v11, v23, "Checking cache for %s (%s)", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v24, -1, -1);
    MEMORY[0x210538E40](v13, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v25 = a3;
  swift_bridgeObjectRetain();
  uint64_t v20 = sub_20B77D810(&v25);
  uint64_t v21 = *(void *)(v5 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_storage);
  MEMORY[0x270FA5388](v20);
  sub_20B7D2DA8();
  os_unfair_lock_lock((os_unfair_lock_t)(v21 + 24));
  sub_20B77D87C((uint64_t *)(v21 + 16), a4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v21 + 24));
  swift_release();
  return swift_release();
}

uint64_t sub_20B77989C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v90 = a6;
  uint64_t v84 = a5;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5B8);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v89 = (char *)&v81 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5C0);
  uint64_t v92 = *(void *)(v95 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v95);
  unint64_t v87 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v85 = (uint64_t)&v81 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  id v86 = (unsigned __int8 *)&v81 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v83 = (char *)&v81 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v88 = (char *)&v81 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v81 - v23;
  MEMORY[0x270FA5388](v22);
  unint64_t v82 = (char *)&v81 - v25;
  int64_t v26 = *(void *)(a2 + 16);
  uint64_t v27 = MEMORY[0x263F8EE78];
  uint64_t v91 = a3;
  if (v26)
  {
    uint64_t v98 = MEMORY[0x263F8EE78];
    swift_bridgeObjectRetain();
    uint64_t v93 = (unsigned __int8 *)v24;
    sub_20B7A213C(0, v26, 0);
    uint64_t v27 = v98;
    uint64_t v28 = (unsigned __int8 *)(a2 + 32);
    uint64_t v29 = *a1;
    uint64_t v30 = v92;
    uint64_t v31 = v93;
    uint64_t v94 = v29;
    do
    {
      unsigned __int8 v32 = *v28;
      uint64_t v33 = (uint64_t)&v31[*(int *)(v95 + 48)];
      *uint64_t v31 = *v28;
      uint64_t v34 = *(void *)(v29 + 16);
      unint64_t v96 = v28 + 1;
      if (v34)
      {
        swift_bridgeObjectRetain();
        unint64_t v35 = sub_20B77CF4C(v32, a3, a4);
        if (v36)
        {
          unint64_t v37 = v35;
          uint64_t v38 = *(void *)(v29 + 56);
          uint64_t v39 = type metadata accessor for ContactLikeness(0);
          uint64_t v40 = *(void *)(v39 - 8);
          a3 = v91;
          sub_20B780868(v38 + *(void *)(v40 + 72) * v37, v33);
          (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v40 + 56))(v33, 0, 1, v39);
          uint64_t v30 = v92;
        }
        else
        {
          uint64_t v42 = type metadata accessor for ContactLikeness(0);
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v33, 1, 1, v42);
        }
        swift_bridgeObjectRelease();
        uint64_t v31 = v93;
      }
      else
      {
        uint64_t v41 = type metadata accessor for ContactLikeness(0);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v33, 1, 1, v41);
      }
      uint64_t v98 = v27;
      unint64_t v44 = *(void *)(v27 + 16);
      unint64_t v43 = *(void *)(v27 + 24);
      if (v44 >= v43 >> 1)
      {
        sub_20B7A213C(v43 > 1, v44 + 1, 1);
        uint64_t v31 = v93;
        uint64_t v27 = v98;
      }
      *(void *)(v27 + 16) = v44 + 1;
      sub_20B781204((uint64_t)v31, v27+ ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80))+ *(void *)(v30 + 72) * v44, &qword_26769B5C0);
      --v26;
      uint64_t v28 = v96;
      uint64_t v29 = v94;
    }
    while (v26);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v30 = v92;
  }
  uint64_t v45 = *(void *)(v27 + 16);
  uint64_t v46 = (uint64_t)v88;
  if (v45)
  {
    uint64_t v47 = v30;
    uint64_t v48 = v27 + ((*(unsigned __int8 *)(v30 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v30 + 80));
    uint64_t v49 = *(void *)(v47 + 72);
    while (1)
    {
      sub_20B781268(v48, v46, &qword_26769B5C0);
      uint64_t v50 = v46 + *(int *)(v95 + 48);
      uint64_t v51 = type metadata accessor for ContactLikeness(0);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v51 - 8) + 48))(v50, 1, v51) != 1) {
        break;
      }
      sub_20B76D2E4(v46, &qword_26769B5C0);
      v48 += v49;
      if (!--v45) {
        goto LABEL_18;
      }
    }
    unint64_t v53 = v89;
    sub_20B781204(v46, (uint64_t)v89, &qword_26769B5C0);
    uint64_t v52 = 0;
  }
  else
  {
LABEL_18:
    uint64_t v52 = 1;
    unint64_t v53 = v89;
  }
  uint64_t v54 = v92;
  uint64_t v55 = v95;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v92 + 56))(v53, v52, 1, v95);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v54 + 48))(v53, 1, v55) == 1)
  {
    sub_20B76D2E4((uint64_t)v53, &qword_26769B5B8);
    uint64_t v56 = type metadata accessor for ContactLikeness(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v90, 1, 1, v56);
  }
  else
  {
    uint64_t v58 = v95;
    uint64_t v59 = *(int *)(v95 + 48);
    uint64_t v60 = a4;
    id v61 = v82;
    uint64_t v62 = (uint64_t)&v82[v59];
    char v63 = *v53;
    *unint64_t v82 = *v53;
    sub_20B781204((uint64_t)&v53[v59], (uint64_t)&v61[v59], &qword_26769B548);
    os_log_type_t v64 = sub_20B7D3D58();
    uint64_t v65 = (uint64_t)v83;
    uint64_t v66 = (uint64_t)&v83[*(int *)(v58 + 48)];
    *uint64_t v83 = v63;
    sub_20B781268(v62, v66, &qword_26769B548);
    unint64_t v67 = v86;
    sub_20B781268(v65, (uint64_t)v86, &qword_26769B5C0);
    uint64_t v68 = v85;
    sub_20B781204(v65, v85, &qword_26769B5C0);
    swift_bridgeObjectRetain_n();
    uint64_t v69 = sub_20B7D39D8();
    if (os_log_type_enabled(v69, v64))
    {
      unint64_t v96 = (unsigned __int8 *)v60;
      uint64_t v70 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      uint64_t v98 = v71;
      *(_DWORD *)uint64_t v70 = 136315394;
      uint64_t v72 = *(int *)(v95 + 48);
      unint64_t v73 = v87;
      uint64_t v74 = (uint64_t)&v87[v72];
      uint64_t v75 = (uint64_t)&v67[v72];
      uint64_t v76 = *v67;
      *unint64_t v87 = v76;
      sub_20B781268(v75, (uint64_t)&v73[v72], &qword_26769B548);
      sub_20B76D2E4(v74, &qword_26769B548);
      unint64_t v77 = 0xEB00000000657474;
      uint64_t v78 = 0x65756F686C69732ELL;
      switch(v76)
      {
        case 1:
          unint64_t v77 = 0xE90000000000006DLL;
          uint64_t v78 = 0x6172676F6E6F6D2ELL;
          break;
        case 2:
          unint64_t v77 = 0xEC0000006567616DLL;
          uint64_t v78 = 0x497261746176612ELL;
          break;
        case 3:
          unint64_t v77 = 0xE700000000000000;
          uint64_t v78 = 0x726574736F702ELL;
          break;
        default:
          break;
      }
      uint64_t v97 = sub_20B77C87C(v78, v77, &v98);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      sub_20B76D2E4(v85, &qword_26769B5C0);
      sub_20B76D2E4((uint64_t)v86, &qword_26769B5C0);
      *(_WORD *)(v70 + 12) = 2080;
      unint64_t v79 = (unint64_t)v96;
      swift_bridgeObjectRetain();
      uint64_t v97 = sub_20B77C87C(v91, v79, &v98);
      sub_20B7D3D88();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20B704000, v69, v64, "Found cached %s for %s", (uint8_t *)v70, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v71, -1, -1);
      MEMORY[0x210538E40](v70, -1, -1);
    }
    else
    {

      sub_20B76D2E4(v68, &qword_26769B5C0);
      sub_20B76D2E4((uint64_t)v67, &qword_26769B5C0);
      swift_bridgeObjectRelease_n();
    }
    uint64_t v80 = (uint64_t)&v87[*(int *)(v95 + 48)];
    sub_20B781204(v62, v80, &qword_26769B548);
    return sub_20B781204(v80, v90, &qword_26769B548);
  }
}

uint64_t sub_20B77A178(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (uint64_t *)((char *)&v24 - v8);
  os_log_type_t v10 = sub_20B7D3D58();
  sub_20B780868(a1, (uint64_t)v9);
  sub_20B780868(a1, (uint64_t)v7);
  uint64_t v11 = sub_20B7D39D8();
  if (os_log_type_enabled(v11, v10))
  {
    uint64_t v26 = v2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v25 = swift_slowAlloc();
    v28[0] = v25;
    *(_DWORD *)uint64_t v12 = 136315394;
    uint64_t v14 = *v9;
    unint64_t v13 = v9[1];
    swift_bridgeObjectRetain();
    uint64_t v27 = sub_20B77C87C(v14, v13, v28);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    sub_20B7808CC((uint64_t)v9);
    *(_WORD *)(v12 + 12) = 2080;
    unint64_t v15 = 0xEB00000000657474;
    uint64_t v16 = 0x65756F686C69732ELL;
    switch(v7[*(int *)(v4 + 28)])
    {
      case 1:
        unint64_t v15 = 0xE90000000000006DLL;
        uint64_t v16 = 0x6172676F6E6F6D2ELL;
        break;
      case 2:
        unint64_t v15 = 0xEC0000006567616DLL;
        uint64_t v16 = 0x497261746176612ELL;
        break;
      case 3:
        unint64_t v15 = 0xE700000000000000;
        uint64_t v16 = 0x726574736F702ELL;
        break;
      default:
        break;
    }
    uint64_t v27 = sub_20B77C87C(v16, v15, v28);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    sub_20B7808CC((uint64_t)v7);
    _os_log_impl(&dword_20B704000, v11, v10, "Caching likeness for %s (%s)", (uint8_t *)v12, 0x16u);
    uint64_t v18 = v25;
    swift_arrayDestroy();
    MEMORY[0x210538E40](v18, -1, -1);
    MEMORY[0x210538E40](v12, -1, -1);

    uint64_t v2 = v26;
  }
  else
  {

    sub_20B7808CC((uint64_t)v9);
    uint64_t v17 = sub_20B7808CC((uint64_t)v7);
  }
  uint64_t v19 = *(void *)(a1 + 8);
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_evictionQueue);
  MEMORY[0x270FA5388](v17);
  *((unsigned char *)&v24 - 4_Block_object_dispose(&a9, 8) = v21;
  *(&v24 - 5) = v22;
  *(&v24 - 4) = v19;
  *(&v24 - 3) = v2;
  *(&v24 - 2) = a1;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  os_unfair_lock_lock((os_unfair_lock_t)(v20 + 24));
  sub_20B780CF8((uint64_t *)(v20 + 16));
  os_unfair_lock_unlock((os_unfair_lock_t)(v20 + 24));
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t sub_20B77A4F0(uint64_t *a1, unsigned __int8 a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  unint64_t v26 = sub_20B77AABC(a2, a3, a4, *a1);
  uint64_t v28 = a5;
  char v12 = v11;
  os_log_type_t v13 = sub_20B7D3D38();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_20B7D39D8();
  BOOL v15 = os_log_type_enabled(v14, v13);
  if (v12)
  {
    if (v15)
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      uint64_t v32 = v27;
      *(_DWORD *)uint64_t v17 = 136315138;
      unint64_t v31 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      sub_20B7D3B98();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      sub_20B7D3B98();
      uint64_t v30 = sub_20B77C87C(40, 0xE100000000000000, &v32);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20B704000, v14, v13, "Queueing key %s", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v27, -1, -1);
      MEMORY[0x210538E40](v17, -1, -1);

      uint64_t v6 = v5;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
  else
  {
    if (v15)
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      uint64_t v25 = swift_slowAlloc();
      uint64_t v32 = v25;
      *(_DWORD *)uint64_t v16 = 136315138;
      unint64_t v31 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      sub_20B7D3B98();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      sub_20B7D3B98();
      uint64_t v30 = sub_20B77C87C(40, 0xE100000000000000, &v32);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_20B704000, v14, v13, "Refreshing key %s", v16, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v25, -1, -1);
      MEMORY[0x210538E40](v16, -1, -1);

      uint64_t v6 = v5;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    sub_20B77AB5C(v26, (uint64_t)&v30);
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = (void *)*a1;
  swift_bridgeObjectRetain();
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_20B76BC58(0, v18[2] + 1, 1, v18);
    uint64_t v18 = (void *)isUniquelyReferenced_nonNull_native;
  }
  unint64_t v21 = v18[2];
  unint64_t v20 = v18[3];
  if (v21 >= v20 >> 1)
  {
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)sub_20B76BC58((void *)(v20 > 1), v21 + 1, 1, v18);
    uint64_t v18 = (void *)isUniquelyReferenced_nonNull_native;
  }
  CGFloat v18[2] = v21 + 1;
  uint64_t v22 = &v18[3 * v21];
  *((unsigned char *)v22 + 32) = a2;
  v22[5] = a3;
  v22[6] = a4;
  *a1 = (uint64_t)v18;
  uint64_t v23 = *(os_unfair_lock_s **)(v28 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_storage);
  MEMORY[0x270FA5388](isUniquelyReferenced_nonNull_native);
  sub_20B7D2DA8();
  os_unfair_lock_lock(v23 + 6);
  sub_20B780D1C((uint64_t)&v23[4]);
  if (v6)
  {
    os_unfair_lock_unlock(v23 + 6);
    __break(1u);
    JUMPOUT(0x20B77AA9CLL);
  }
  os_unfair_lock_unlock(v23 + 6);
  return swift_release();
}

uint64_t sub_20B77AABC(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(a4 + 16);
  if (!v4) {
    return 0;
  }
  uint64_t v7 = 0;
  int v8 = a1;
  for (unint64_t i = (void *)(a4 + 48); ; i += 3)
  {
    if (*((unsigned __int8 *)i - 16) == v8)
    {
      BOOL v10 = *(i - 1) == a2 && *i == a3;
      if (v10 || (sub_20B7D4018() & 1) != 0) {
        break;
      }
    }
    if (v4 == ++v7) {
      return 0;
    }
  }
  return v7;
}

uint64_t sub_20B77AB5C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_20B77EBB4(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    int v8 = &v5[3 * a1];
    char v10 = *((unsigned char *)v8 + 32);
    uint64_t v9 = v8 + 4;
    uint64_t v11 = v9[1];
    uint64_t v12 = v9[2];
    *(unsigned char *)a2 = v10;
    *(void *)(a2 + _Block_object_dispose(&a9, 8) = v11;
    *(void *)(a2 + 16) = v12;
    uint64_t v13 = v6 - 1 - a1;
    if (v13 >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 3, 24 * v13);
      v5[2] = v7;
      char *v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B77AC4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v35 = a7;
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v36 = (uint64_t)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(*(void *)a1 + 16);
  uint64_t v14 = *(void *)(a2 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_capacity);
  if (v14 >= v13) {
    goto LABEL_13;
  }
  os_log_type_t v15 = sub_20B7D3D58();
  sub_20B7D2DA8();
  uint64_t v16 = sub_20B7D39D8();
  BOOL v17 = os_log_type_enabled(v16, v15);
  uint64_t v34 = a6;
  if (v17)
  {
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v18 = 134218240;
    uint64_t v39 = v13;
    sub_20B7D3D88();
    *(_WORD *)(v18 + 12) = 2048;
    uint64_t v39 = v14;
    sub_20B7D3D88();
    swift_release();
    _os_log_impl(&dword_20B704000, v16, v15, "Cache is over capacity (%ld/%ld)", (uint8_t *)v18, 0x16u);
    MEMORY[0x210538E40](v18, -1, -1);
  }
  else
  {

    swift_release();
  }
  uint64_t v19 = *(void *)a3;
  uint64_t v20 = *(void *)(*(void *)a3 + 16);
  if (v20 < v14)
  {
    __break(1u);
    goto LABEL_18;
  }
  if (v14 < 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v21 = v20 - v14;
  if (v20 != v14)
  {
    if (v20 > (unint64_t)v14)
    {
      swift_bridgeObjectRetain();
      uint64_t v22 = (void *)(v19 + 24 * v14 + 48);
      do
      {
        unint64_t v23 = *(v22 - 1);
        uint64_t v24 = *v22;
        LOBYTE(v39) = *((unsigned char *)v22 - 16);
        unint64_t v40 = v23;
        uint64_t v41 = v24;
        swift_bridgeObjectRetain();
        sub_20B77B120((unsigned __int8 *)&v39, a2, a1, a3);
        swift_bridgeObjectRelease();
        v22 += 3;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
LABEL_19:
    __break(1u);
    JUMPOUT(0x20B77B110);
  }
LABEL_12:
  a6 = v34;
LABEL_13:
  os_log_type_t v25 = sub_20B7D3D28();
  swift_bridgeObjectRetain_n();
  unint64_t v26 = sub_20B7D39D8();
  if (os_log_type_enabled(v26, v25))
  {
    uint64_t v27 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    uint64_t v42 = v33;
    *(_DWORD *)uint64_t v27 = 136315138;
    uint64_t v39 = 40;
    unint64_t v40 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    uint64_t v39 = sub_20B77C87C(v39, v40, &v42);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v26, v25, "Caching likeness for %s", v27, 0xCu);
    uint64_t v28 = v33;
    swift_arrayDestroy();
    MEMORY[0x210538E40](v28, -1, -1);
    MEMORY[0x210538E40](v27, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v29 = v36;
  sub_20B780868(v35, v36);
  uint64_t v30 = type metadata accessor for ContactLikeness(0);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v29, 0, 1, v30);
  swift_bridgeObjectRetain();
  return sub_20B77B470(v29, v37, v38, a6);
}

uint64_t sub_20B77B120(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v24 = a3;
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = *a1;
  uint64_t v11 = *((void *)a1 + 1);
  uint64_t v10 = *((void *)a1 + 2);
  os_log_type_t v12 = sub_20B7D3D58();
  swift_bridgeObjectRetain_n();
  uint64_t v13 = sub_20B7D39D8();
  if (os_log_type_enabled(v13, v12))
  {
    uint64_t v23 = a4;
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    uint64_t v21 = swift_slowAlloc();
    uint64_t v28 = v21;
    *(_DWORD *)uint64_t v14 = 136315138;
    uint64_t v26 = 40;
    unint64_t v27 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    uint64_t v22 = v4;
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    uint64_t v26 = sub_20B77C87C(v26, v27, &v28);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v13, v12, "Removing cache entry for %s", v14, 0xCu);
    uint64_t v15 = v21;
    swift_arrayDestroy();
    MEMORY[0x210538E40](v15, -1, -1);
    MEMORY[0x210538E40](v14, -1, -1);

    a4 = v23;
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  unsigned __int8 v16 = v25;
  sub_20B77EBC8(v25, v11, v10, (uint64_t)v9);
  sub_20B76D2E4((uint64_t)v9, &qword_26769B548);
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_20B780D44(a4, v16, v11, v10);
  swift_bridgeObjectRelease();
  int64_t v18 = *(void *)(*(void *)a4 + 16);
  if (v18 < v17)
  {
    __break(1u);
    JUMPOUT(0x20B77B460);
  }
  return sub_20B780F3C(v17, v18);
}

uint64_t sub_20B77B470(uint64_t a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v10 - 8);
  os_log_type_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ContactLikeness(0);
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v19 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v16 + 48))(a1, 1) == 1)
  {
    sub_20B76D2E4(a1, &qword_26769B548);
    sub_20B77EBC8(a2, a3, a4, (uint64_t)v12);
    swift_bridgeObjectRelease();
    return sub_20B76D2E4((uint64_t)v12, &qword_26769B548);
  }
  else
  {
    sub_20B780C94(a1, (uint64_t)v15);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *v5;
    *uint64_t v5 = 0x8000000000000000;
    sub_20B77F374((uint64_t)v15, a2, a3, a4, isUniquelyReferenced_nonNull_native);
    *uint64_t v5 = v20;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t ContactLikenessStore.InMemoryCache.deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t ContactLikenessStore.InMemoryCache.__deallocating_deinit()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore13InMemoryCache_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20B77B780()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B77B7F4()
{
  sub_20B7D4098();
  swift_bridgeObjectRetain();
  sub_20B7D3B58();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B77B858()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B77B8C8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  if (*((void *)a1 + 1) == *((void *)a2 + 1) && *((void *)a1 + 2) == *((void *)a2 + 2)) {
    return 1;
  }
  else {
    return sub_20B7D4018();
  }
}

uint64_t sub_20B77B910()
{
  return 40;
}

uint64_t sub_20B77BA54(uint64_t a1, uint64_t a2)
{
  v3[7] = a2;
  v3[8] = v2;
  void v3[6] = a1;
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  v3[9] = v4;
  v3[10] = *(void *)(v4 - 8);
  v3[11] = swift_task_alloc();
  v3[12] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20B77BB28, 0, 0);
}

uint64_t sub_20B77BB28()
{
  uint64_t v54 = v0;
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[7];
  uint64_t v3 = *(void *)(v0[8] + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_cache);
  v0[13] = v3;
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  unint64_t v4 = sub_20B7805D4(v2, v3, v1);
  v0[14] = v4;
  swift_release();
  swift_bridgeObjectRelease();
  int64_t v5 = *(void *)(v4 + 16);
  uint64_t v6 = MEMORY[0x263F8EE78];
  unint64_t v52 = v4;
  if (v5)
  {
    uint64_t v7 = v0[12];
    uint64_t v8 = v0[10];
    v53[0] = MEMORY[0x263F8EE78];
    sub_20B7A211C(0, v5, 0);
    uint64_t v9 = v4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    uint64_t v6 = v53[0];
    do
    {
      uint64_t v11 = (uint64_t *)v0[12];
      sub_20B780868(v9, (uint64_t)v11);
      uint64_t v12 = *v11;
      uint64_t v13 = *(void *)(v7 + 8);
      swift_bridgeObjectRetain();
      sub_20B7808CC((uint64_t)v11);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_20B7A211C(0, *(void *)(v6 + 16) + 1, 1);
        uint64_t v6 = v53[0];
      }
      unint64_t v15 = *(void *)(v6 + 16);
      unint64_t v14 = *(void *)(v6 + 24);
      if (v15 >= v14 >> 1)
      {
        sub_20B7A211C(v14 > 1, v15 + 1, 1);
        uint64_t v6 = v53[0];
      }
      *(void *)(v6 + 16) = v15 + 1;
      uint64_t v16 = v6 + 16 * v15;
      *(void *)(v16 + 32) = v12;
      *(void *)(v16 + 40) = v13;
      v9 += v10;
      --v5;
    }
    while (v5);
  }
  uint64_t v17 = sub_20B7809E8(v6);
  swift_bridgeObjectRelease();
  v0[15] = OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_logger;
  os_log_type_t v18 = sub_20B7D3D58();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_20B7D39D8();
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v21 = (uint8_t *)swift_slowAlloc();
    uint64_t v22 = swift_slowAlloc();
    v53[0] = v22;
    *(_DWORD *)uint64_t v21 = 136315138;
    swift_bridgeObjectRetain();
    uint64_t v23 = sub_20B7D3CF8();
    unint64_t v25 = v24;
    swift_bridgeObjectRelease();
    v0[5] = sub_20B77C87C(v23, v25, v53);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v19, v20, "Cache hits: %s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v22, -1, -1);
    MEMORY[0x210538E40](v21, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v26 = swift_bridgeObjectRetain();
  uint64_t v27 = sub_20B780A80(v26, v17);
  v0[16] = v27;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  os_log_type_t v28 = sub_20B7D3D58();
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_20B7D39D8();
  if (os_log_type_enabled(v29, v28))
  {
    uint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    v53[0] = v31;
    *(_DWORD *)uint64_t v30 = 136315138;
    uint64_t v32 = swift_bridgeObjectRetain();
    uint64_t v33 = MEMORY[0x2105379C0](v32, MEMORY[0x263F8D310]);
    unint64_t v35 = v34;
    swift_bridgeObjectRelease();
    v0[4] = sub_20B77C87C(v33, v35, v53);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v29, v28, "Cache misses: %s", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v31, -1, -1);
    MEMORY[0x210538E40](v30, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  if (*(void *)(v27 + 16))
  {
    os_log_type_t v36 = sub_20B7D3D38();
    uint64_t v37 = sub_20B7D39D8();
    if (os_log_type_enabled(v37, v36))
    {
      uint64_t v38 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v38 = 0;
      _os_log_impl(&dword_20B704000, v37, v36, "Forwarding request for uncached results", v38, 2u);
      MEMORY[0x210538E40](v38, -1, -1);
    }
    uint64_t v39 = v0[8];

    unint64_t v40 = (void *)(v39 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next);
    uint64_t v41 = *(void *)(v39 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next + 24);
    uint64_t v42 = v40[4];
    __swift_project_boxed_opaque_existential_1(v40, v41);
    uint64_t v51 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 + 8) + **(int **)(v42 + 8));
    unint64_t v43 = (void *)swift_task_alloc();
    v0[17] = v43;
    *unint64_t v43 = v0;
    v43[1] = sub_20B77C1D4;
    uint64_t v44 = v0[6];
    return v51(v44, v27, v41, v42);
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v46 = sub_20B7D3D38();
    uint64_t v47 = sub_20B7D39D8();
    os_log_type_t v48 = v46;
    if (os_log_type_enabled(v47, v46))
    {
      uint64_t v49 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v49 = 0;
      _os_log_impl(&dword_20B704000, v47, v48, "All results were found in the cache", v49, 2u);
      MEMORY[0x210538E40](v49, -1, -1);
    }

    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v50 = (uint64_t (*)(unint64_t))v0[1];
    return v50(v52);
  }
}

uint64_t sub_20B77C1D4(uint64_t a1)
{
  *(void *)(*(void *)v1 + 144) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA2498](sub_20B77C2F4, 0, 0);
}

uint64_t sub_20B77C2F4()
{
  uint64_t v31 = v0;
  os_log_type_t v1 = sub_20B7D3D38();
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_20B7D39D8();
  uint64_t v3 = &off_20B7DB000;
  if (os_log_type_enabled(v2, v1))
  {
    uint64_t v4 = v0[9];
    int64_t v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = swift_slowAlloc();
    uint64_t v30 = v6;
    *(_DWORD *)int64_t v5 = 136315138;
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x2105379C0](v7, v4);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[3] = sub_20B77C87C(v8, v10, &v30);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    uint64_t v3 = &off_20B7DB000;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v2, v1, "Uncached results: %s", v5, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v6, -1, -1);
    MEMORY[0x210538E40](v5, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = v0[18];
  uint64_t v12 = *(void *)(v11 + 16);
  if (v12)
  {
    uint64_t v13 = v0[10];
    uint64_t v14 = v11 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
    uint64_t v15 = *(void *)(v13 + 72);
    sub_20B7D2DA8();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v16 = v0[11];
      sub_20B780868(v14, v16);
      sub_20B77A178(v16);
      sub_20B7808CC(v16);
      v14 += v15;
      --v12;
    }
    while (v12);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v11 = v0[18];
  }
  uint64_t v30 = v0[14];
  sub_20B7C174C(v11);
  uint64_t v17 = v30;
  os_log_type_t v18 = sub_20B7D3D38();
  swift_bridgeObjectRetain_n();
  uint64_t v19 = sub_20B7D39D8();
  os_log_type_t v20 = v18;
  if (os_log_type_enabled(v19, v18))
  {
    uint64_t v21 = v0[9];
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    uint64_t v30 = v23;
    *(_DWORD *)uint64_t v22 = *((void *)v3 + 222);
    uint64_t v24 = swift_bridgeObjectRetain();
    uint64_t v25 = MEMORY[0x2105379C0](v24, v21);
    unint64_t v27 = v26;
    swift_bridgeObjectRelease();
    v0[2] = sub_20B77C87C(v25, v27, &v30);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v19, v20, "All likenesses: %s", v22, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v23, -1, -1);
    MEMORY[0x210538E40](v22, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v28 = (uint64_t (*)(uint64_t))v0[1];
  return v28(v17);
}

uint64_t sub_20B77C6B4()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_logger;
  uint64_t v2 = sub_20B7D39F8();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_0(v0 + OBJC_IVAR____TtCC14ContactsUICore20ContactLikenessStore17InMemoryCacheImpl_next);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20B77C774(uint64_t a1, uint64_t a2)
{
  int64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int64_t v5 = v2;
  v5[1] = sub_20B7812CC;
  return sub_20B77BA54(a1, a2);
}

uint64_t type metadata accessor for ContactLikenessStore.IntentImpl(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769B4E0);
}

uint64_t type metadata accessor for ContactLikenessStore.InMemoryCacheImpl(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769B510);
}

uint64_t type metadata accessor for ContactLikenessStore.InMemoryCache(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769B500);
}

uint64_t sub_20B77C87C(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_20B77C950(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_20B76D12C((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_20B76D12C((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_0((uint64_t)v12);
  return v7;
}

uint64_t sub_20B77C950(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_20B7D3D98();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_20B77CB0C(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_20B7D3EC8();
  if (!v8)
  {
    sub_20B7D3F28();
    __break(1u);
LABEL_17:
    uint64_t result = sub_20B7D3F78();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_20B77CB0C(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_20B77CBA4(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20B77CD84(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_20B77CD84(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_20B77CBA4(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_20B77CD1C(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_20B7D3E98();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_20B7D3F28();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_20B7D3BA8();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_20B7D3F78();
    __break(1u);
LABEL_14:
    uint64_t result = sub_20B7D3F28();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_20B77CD1C(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5B0);
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  void v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_20B77CD84(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5B0);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

unint64_t sub_20B77CED4(uint64_t a1, uint64_t a2)
{
  sub_20B7D4088();
  sub_20B7D3B58();
  uint64_t v4 = sub_20B7D40A8();
  return sub_20B77D13C(a1, a2, v4);
}

unint64_t sub_20B77CF4C(unsigned __int8 a1, uint64_t a2, uint64_t a3)
{
  sub_20B7D4088();
  sub_20B7D4098();
  swift_bridgeObjectRetain();
  sub_20B7D3B58();
  swift_bridgeObjectRelease();
  uint64_t v6 = sub_20B7D40A8();
  return sub_20B77D220(a1, a2, a3, v6);
}

unint64_t sub_20B77CFF0(unsigned __int8 a1)
{
  uint64_t v2 = sub_20B7A1964();
  return sub_20B77D2F8(a1, v2);
}

unint64_t sub_20B77D034(unsigned __int8 a1)
{
  sub_20B7D4088();
  sub_20B7D3B58();
  swift_bridgeObjectRelease();
  uint64_t v2 = sub_20B7D40A8();
  return sub_20B77D5F8(a1, v2);
}

unint64_t sub_20B77D13C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    uint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_20B7D4018() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_20B7D4018() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_20B77D220(unsigned __int8 a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = a4 & ~v6;
  if ((*(void *)(v4 + 64 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7))
  {
    int v10 = a1;
    uint64_t v11 = ~v6;
    uint64_t v12 = *(void *)(v4 + 48);
    do
    {
      uint64_t v13 = (unsigned __int8 *)(v12 + 24 * v7);
      if (*v13 == v10)
      {
        BOOL v14 = *((void *)v13 + 1) == a2 && *((void *)v13 + 2) == a3;
        if (v14 || (sub_20B7D4018() & 1) != 0) {
          break;
        }
      }
      unint64_t v7 = (v7 + 1) & v11;
    }
    while (((*(void *)(v5 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0);
  }
  return v7;
}

unint64_t sub_20B77D2F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000726562;
      uint64_t v8 = 0x6D754E656E6F6870;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          uint64_t v8 = 0x6464416C69616D65;
          unint64_t v7 = 0xEC00000073736572;
          break;
        case 2:
          uint64_t v8 = 0x64416C6174736F70;
          unint64_t v7 = 0xED00007373657264;
          break;
        case 3:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x7961646874726962;
          break;
        case 4:
          uint64_t v8 = 0x52746361746E6F63;
          unint64_t v7 = 0xEF6E6F6974616C65;
          break;
        case 5:
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1702129518;
          break;
        case 6:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x6D6F74737563;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6D754E656E6F6870;
      unint64_t v10 = 0xEB00000000726562;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xEC00000073736572;
          if (v8 == 0x6464416C69616D65) {
            goto LABEL_21;
          }
          goto LABEL_22;
        case 2:
          unint64_t v10 = 0xED00007373657264;
          if (v8 != 0x64416C6174736F70) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 3:
          unint64_t v10 = 0xE800000000000000;
          if (v8 != 0x7961646874726962) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 4:
          unint64_t v10 = 0xEF6E6F6974616C65;
          if (v8 != 0x52746361746E6F63) {
            goto LABEL_22;
          }
          goto LABEL_21;
        case 5:
          unint64_t v10 = 0xE400000000000000;
          uint64_t v9 = 1702129518;
          goto LABEL_20;
        case 6:
          unint64_t v10 = 0xE600000000000000;
          if (v8 != 0x6D6F74737563) {
            goto LABEL_22;
          }
          goto LABEL_21;
        default:
LABEL_20:
          if (v8 != v9) {
            goto LABEL_22;
          }
LABEL_21:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_22:
          char v11 = sub_20B7D4018();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_20B77D5F8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEA00000000006574;
      uint64_t v8 = 0x7465756F686C6973;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x6D6172676F6E6F6DLL;
          break;
        case 2:
          uint64_t v8 = 0x6D49726174617661;
          unint64_t v7 = 0xEB00000000656761;
          break;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x726574736F70;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x7465756F686C6973;
      unint64_t v10 = 0xEA00000000006574;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          if (v8 == 0x6D6172676F6E6F6DLL) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          uint64_t v9 = 0x6D49726174617661;
          unint64_t v10 = 0xEB00000000656761;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0xE600000000000000;
          if (v8 == 0x726574736F70) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_20B7D4018();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_20B77D810(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_20B780294(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_20B77E148(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_20B77D87C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B77989C(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_20B77D8A0()
{
  unint64_t result = qword_26769B4C8;
  if (!qword_26769B4C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B4C8);
  }
  return result;
}

uint64_t sub_20B77D8F4()
{
  return type metadata accessor for ContactLikenessStore(0);
}

uint64_t type metadata accessor for ContactLikenessStore(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769B4D0);
}

uint64_t sub_20B77D91C(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B77D954()
{
  return sub_20B77DD44();
}

uint64_t method lookup function for ContactLikenessStore(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactLikenessStore);
}

uint64_t dispatch thunk of ContactLikenessStore.__allocating_init(configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t destroy for ContactLikenessStore.Configuration()
{
  swift_bridgeObjectRelease();
  return swift_release();
}

uint64_t initializeWithCopy for ContactLikenessStore.Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  return a1;
}

uint64_t assignWithCopy for ContactLikenessStore.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  sub_20B7D2DA8();
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  return a1;
}

__n128 __swift_memcpy33_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ContactLikenessStore.Configuration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactLikenessStore.Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactLikenessStore.Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLikenessStore.Configuration()
{
  return &type metadata for ContactLikenessStore.Configuration;
}

uint64_t getEnumTagSinglePayload for ContactLikenessStoreError(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ContactLikenessStoreError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B77DCECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_20B77DD14(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ContactLikenessStoreError()
{
  return &type metadata for ContactLikenessStoreError;
}

uint64_t sub_20B77DD30()
{
  return type metadata accessor for ContactLikenessStore.IntentImpl(0);
}

uint64_t sub_20B77DD38()
{
  return sub_20B77DD44();
}

uint64_t sub_20B77DD44()
{
  uint64_t result = sub_20B7D39F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_20B77DDD8()
{
  return type metadata accessor for ContactLikenessStore.InMemoryCache(0);
}

uint64_t sub_20B77DDE0()
{
  uint64_t result = sub_20B7D39F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t method lookup function for ContactLikenessStore.InMemoryCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactLikenessStore.InMemoryCache);
}

uint64_t dispatch thunk of ContactLikenessStore.InMemoryCache.__allocating_init(capacity:)()
{
  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of ContactLikenessStore.InMemoryCache.likeness(for:of:)()
{
  return (*(uint64_t (**)(void))(*(void *)v0 + 184))();
}

uint64_t sub_20B77DEDC()
{
  return type metadata accessor for ContactLikenessStore.InMemoryCacheImpl(0);
}

uint64_t sub_20B77DEE4()
{
  uint64_t result = sub_20B7D39F8();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t destroy for ContactLikenessStore.InMemoryCache.Key()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s14ContactsUICore20ContactLikenessStoreC13InMemoryCacheC3KeyVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ContactLikenessStore.InMemoryCache.Key(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactLikenessStore.InMemoryCache.Key(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactLikenessStore.InMemoryCache.Key(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactLikenessStore.InMemoryCache.Key(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLikenessStore.InMemoryCache.Key()
{
  return &type metadata for ContactLikenessStore.InMemoryCache.Key;
}

unint64_t sub_20B77E0F4()
{
  unint64_t result = qword_26769B528;
  if (!qword_26769B528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B528);
  }
  return result;
}

uint64_t sub_20B77E148(void *a1)
{
  unint64_t v2 = a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_20B7D3FF8();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unsigned int v81 = *(unsigned __int8 *)(v79 + i);
        uint64_t v82 = v78;
        do
        {
          unsigned int v83 = *(unsigned __int8 *)(v79 + v82);
          if (v83 >= v81) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(unsigned char *)(v79 + v82 + 1) = v83;
          *(unsigned char *)(v79 + v82--) = v81;
        }
        while (v82 != -1);
        ++v78;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  uint64_t v94 = result;
  uint64_t v95 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (unsigned __int8 *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      char v11 = (char *)MEMORY[0x263F8EE78];
LABEL_103:
      uint64_t v93 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          id v86 = v11;
          unint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_20B77E7C4((unsigned __int8 *)(v84 + v88), (unsigned __int8 *)(v84 + *(void *)&v87[16 * v12 - 16]), v84 + v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            id v86 = sub_20B77EBA0((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          uint64_t v90 = &v86[16 * v85 + 32];
          *(void *)uint64_t v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          char v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      *(void *)(v93 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v93 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_20B7D3C78();
    *(void *)(v7 + 16) = v6;
    uint64_t v3 = v95;
    uint64_t v93 = v7;
    __dst = (unsigned __int8 *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v92 = v2;
  uint64_t v10 = *v2;
  char v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v96 = *v2;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 < v3)
    {
      unsigned int v14 = *(unsigned __int8 *)(v10 + v9);
      unsigned int v15 = *(unsigned __int8 *)(v10 + v13);
      uint64_t v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unsigned int v16 = v14;
        while (1)
        {
          unsigned int v17 = *(unsigned __int8 *)(v10 + v9);
          if (v15 < v14 == v16 >= v17) {
            break;
          }
          ++v9;
          unsigned int v16 = v17;
          if (v3 == v9)
          {
            uint64_t v9 = v3;
            break;
          }
        }
      }
      if (v15 < v14)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          uint64_t v18 = v9 - 1;
          uint64_t v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              char v20 = *(unsigned char *)(v10 + v19);
              *(unsigned char *)(v10 + v19) = *(unsigned char *)(v10 + v18);
              *(unsigned char *)(v10 + v1_Block_object_dispose(&a9, 8) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v94) {
      goto LABEL_47;
    }
    uint64_t v21 = v13 + v94;
    if (__OFADD__(v13, v94)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      uint64_t v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      uint64_t v22 = (unsigned char *)(v10 + v9);
      do
      {
        unsigned int v23 = *(unsigned __int8 *)(v10 + v9);
        uint64_t v24 = v13;
        uint64_t v25 = v22;
        do
        {
          unsigned int v26 = *(v25 - 1);
          if (v26 >= v23) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v26;
          *--uint64_t v25 = v23;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      uint64_t v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_20B77EA00(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v96;
    if (v28 >= v27 >> 1)
    {
      unint64_t v77 = sub_20B77EA00((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v96;
      char v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    uint64_t v30 = &v11[16 * v28 + 32];
    *(void *)uint64_t v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          os_log_type_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        unint64_t v73 = v29;
        uint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_20B77E7C4((unsigned __int8 *)(v10 + *(void *)v71), (unsigned __int8 *)(v10 + *(void *)v74), v10 + v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v96;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v95;
    if (v9 >= v95)
    {
      unint64_t v2 = v92;
      uint64_t v8 = v93;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_20B7D3F28();
  __break(1u);
  return result;
}

uint64_t sub_20B77E7C4(unsigned __int8 *__src, unsigned __int8 *a2, unint64_t a3, unsigned __int8 *__dst)
{
  uint64_t v22 = __src;
  unsigned int v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  uint64_t v21 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) == 0)
    {
      if (__dst != a2 || a3 <= (unint64_t)__dst) {
        memmove(__dst, a2, a3 - (void)a2);
      }
      unsigned int v14 = &v4[v9];
      char v20 = &v4[v9];
      uint64_t v22 = v6;
      if (v7 < v6 && (unsigned __int8 *)a3 != v6)
      {
        unsigned int v15 = (unsigned __int8 *)(a3 - 1);
        while (1)
        {
          unsigned int v16 = v15 + 1;
          unsigned int v17 = v6 - 1;
          unsigned int v18 = *(v6 - 1);
          if (v18 >= *(v14 - 1))
          {
            char v20 = v14 - 1;
            if (v16 < v14 || v15 >= v14 || v16 != v14) {
              unsigned __int8 *v15 = *(v14 - 1);
            }
            --v14;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v16 != v6 || v15 >= v6) {
              unsigned __int8 *v15 = v18;
            }
            uint64_t v22 = --v6;
            if (v17 <= v7) {
              goto LABEL_38;
            }
          }
          --v15;
          if (v14 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    uint64_t v10 = &v4[v8];
    char v20 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      do
      {
        unsigned int v11 = *v6;
        unsigned int v12 = *v4;
        if (v12 >= v11)
        {
          if (v7 != v4) {
            unsigned __int8 *v7 = v12;
          }
          uint64_t v21 = ++v4;
          uint64_t v13 = v6;
        }
        else
        {
          uint64_t v13 = v6 + 1;
          if (v7 < v6 || v7 >= v13 || v7 != v6) {
            unsigned __int8 *v7 = v11;
          }
        }
        ++v7;
        if (v4 >= v10) {
          break;
        }
        uint64_t v6 = v13;
      }
      while ((unint64_t)v13 < a3);
      uint64_t v22 = v7;
    }
LABEL_38:
    sub_20B77EAFC((void **)&v22, (const void **)&v21, &v20);
    return 1;
  }
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

char *sub_20B77EA00(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5C8);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  unsigned int v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_20B77EAFC(void **a1, const void **a2, void *a3)
{
  uint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_20B7D3F78();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_20B77EBA0(uint64_t a1)
{
  return sub_20B77EA00(0, *(void *)(a1 + 16), 0, (char *)a1);
}

void *sub_20B77EBB4(void *a1)
{
  return sub_20B76BC58(0, a1[2], 0, a1);
}

uint64_t sub_20B77EBC8@<X0>(unsigned __int8 a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v5 = v4;
  swift_bridgeObjectRetain();
  unint64_t v10 = sub_20B77CF4C(a1, a2, a3);
  LOBYTE(a3) = v11;
  swift_bridgeObjectRelease();
  if (a3)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v5;
    uint64_t v23 = *v5;
    *char v5 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_20B77F594();
      uint64_t v13 = v23;
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void *)(v13 + 56);
    uint64_t v15 = type metadata accessor for ContactLikeness(0);
    uint64_t v22 = *(void *)(v15 - 8);
    sub_20B780C94(v14 + *(void *)(v22 + 72) * v10, a4);
    sub_20B77F13C(v10, v13);
    *char v5 = v13;
    swift_bridgeObjectRelease();
    unsigned int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v22 + 56);
    uint64_t v17 = a4;
    uint64_t v18 = 0;
    uint64_t v19 = v15;
  }
  else
  {
    uint64_t v20 = type metadata accessor for ContactLikeness(0);
    unsigned int v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
    uint64_t v19 = v20;
    uint64_t v17 = a4;
    uint64_t v18 = 1;
  }
  return v16(v17, v18, 1, v19);
}

uint64_t sub_20B77ED64(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for ContactLikeness(0);
  uint64_t v45 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v47 = (uint64_t)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B550);
  int v46 = a2;
  uint64_t v8 = sub_20B7D3F58();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16)) {
    goto LABEL_41;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = *(void *)(v7 + 64);
  uint64_t v44 = (void *)(v7 + 64);
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v11;
  BOOL v42 = v2;
  int64_t v43 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v14 = v8 + 64;
  uint64_t result = sub_20B7D2DA8();
  int64_t v16 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v16 << 6);
      goto LABEL_22;
    }
    int64_t v21 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v21 >= v43) {
      break;
    }
    uint64_t v22 = v44;
    unint64_t v23 = v44[v21];
    ++v16;
    if (!v23)
    {
      int64_t v16 = v21 + 1;
      if (v21 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v23 = v44[v16];
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v23 = v44[v24];
        if (!v23)
        {
          while (1)
          {
            int64_t v16 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_43;
            }
            if (v16 >= v43) {
              goto LABEL_34;
            }
            unint64_t v23 = v44[v16];
            ++v24;
            if (v23) {
              goto LABEL_21;
            }
          }
        }
        int64_t v16 = v24;
      }
    }
LABEL_21:
    unint64_t v13 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v16 << 6);
LABEL_22:
    uint64_t v25 = *(void *)(v7 + 56);
    uint64_t v26 = v7;
    uint64_t v27 = *(void *)(v7 + 48) + 24 * v20;
    char v28 = *(unsigned char *)v27;
    uint64_t v30 = *(void *)(v27 + 8);
    uint64_t v29 = *(void *)(v27 + 16);
    uint64_t v31 = *(void *)(v45 + 72);
    uint64_t v32 = v25 + v31 * v20;
    if (v46)
    {
      sub_20B780C94(v32, v47);
    }
    else
    {
      sub_20B780868(v32, v47);
      swift_bridgeObjectRetain();
    }
    sub_20B7D4088();
    sub_20B7D4098();
    swift_bridgeObjectRetain();
    sub_20B7D3B58();
    swift_bridgeObjectRelease();
    uint64_t result = sub_20B7D40A8();
    uint64_t v33 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v34 = result & ~v33;
    unint64_t v35 = v34 >> 6;
    if (((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v34) & ~*(void *)(v14 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v36 = 0;
      unint64_t v37 = (unint64_t)(63 - v33) >> 6;
      do
      {
        if (++v35 == v37 && (v36 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v38 = v35 == v37;
        if (v35 == v37) {
          unint64_t v35 = 0;
        }
        v36 |= v38;
        uint64_t v39 = *(void *)(v14 + 8 * v35);
      }
      while (v39 == -1);
      unint64_t v17 = __clz(__rbit64(~v39)) + (v35 << 6);
    }
    *(void *)(v14 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = *(void *)(v9 + 48) + 24 * v17;
    *(unsigned char *)uint64_t v18 = v28;
    *(void *)(v18 + _Block_object_dispose(&a9, 8) = v30;
    *(void *)(v18 + 16) = v29;
    uint64_t result = sub_20B780C94(v47, *(void *)(v9 + 56) + v17 * v31);
    ++*(void *)(v9 + 16);
    uint64_t v7 = v26;
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v22 = v44;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v40 = 1 << *(unsigned char *)(v7 + 32);
  if (v40 >= 64) {
    bzero(v22, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v22 = -1 << v40;
  }
  *(void *)(v7 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v9;
  return result;
}

unint64_t sub_20B77F13C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t result = sub_20B7D3E38();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      while (1)
      {
        sub_20B7D4088();
        sub_20B7D4098();
        swift_bridgeObjectRetain();
        sub_20B7D3B58();
        uint64_t v9 = sub_20B7D40A8();
        uint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8) {
          break;
        }
        if (v10 < v8) {
          goto LABEL_11;
        }
LABEL_12:
        uint64_t v11 = *(void *)(a2 + 48);
        unint64_t v12 = v11 + 24 * v3;
        unint64_t v13 = (long long *)(v11 + 24 * v6);
        if (v3 != v6 || v12 >= (unint64_t)v13 + 24)
        {
          long long v14 = *v13;
          *(void *)(v12 + 16) = *((void *)v13 + 2);
          *(_OWORD *)unint64_t v12 = v14;
        }
        uint64_t v15 = *(void *)(a2 + 56);
        uint64_t v16 = *(void *)(*(void *)(type metadata accessor for ContactLikeness(0) - 8) + 72);
        int64_t v17 = v16 * v3;
        uint64_t result = v15 + v16 * v3;
        int64_t v18 = v16 * v6;
        unint64_t v19 = v15 + v16 * v6 + v16;
        if (v17 < v18 || result >= v19)
        {
          uint64_t result = swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v17 == v18) {
            goto LABEL_6;
          }
          uint64_t result = swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          goto LABEL_21;
        }
      }
      if (v10 < v8) {
        goto LABEL_6;
      }
LABEL_11:
      if (v3 < (uint64_t)v10) {
        goto LABEL_6;
      }
      goto LABEL_12;
    }
LABEL_21:
    int64_t v21 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v22 = *v21;
    uint64_t v23 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v21 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v23 = *v21;
    uint64_t v22 = (-1 << result) - 1;
  }
  *int64_t v21 = v23 & v22;
  uint64_t v24 = *(void *)(a2 + 16);
  BOOL v25 = __OFSUB__(v24, 1);
  uint64_t v26 = v24 - 1;
  if (v25)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v26;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_20B77F374(uint64_t a1, char a2, uint64_t a3, uint64_t a4, char a5)
{
  unint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_20B77CF4C(a2, a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a5 & 1) == 0)
  {
    if (v19 >= v17 && (a5 & 1) == 0)
    {
      sub_20B77F594();
      goto LABEL_7;
    }
    sub_20B77ED64(v17, a5 & 1);
    unint64_t v24 = sub_20B77CF4C(a2, a3, a4);
    if ((v18 & 1) == (v25 & 1))
    {
      unint64_t v14 = v24;
      unint64_t v20 = *v6;
      if (v18) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = sub_20B7D4038();
    __break(1u);
    return result;
  }
LABEL_7:
  unint64_t v20 = *v6;
  if (v18)
  {
LABEL_8:
    uint64_t v21 = v20[7];
    uint64_t v22 = v21 + *(void *)(*(void *)(type metadata accessor for ContactLikeness(0) - 8) + 72) * v14;
    return sub_20B7810B4(a1, v22);
  }
LABEL_13:
  sub_20B77F4F4(v14, a2, a3, a4, a1, v20);
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B77F4F4(unint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v9 = a6[6] + 24 * a1;
  *(unsigned char *)uint64_t v9 = a2;
  *(void *)(v9 + _Block_object_dispose(&a9, 8) = a3;
  *(void *)(v9 + 16) = a4;
  uint64_t v10 = a6[7];
  uint64_t v11 = type metadata accessor for ContactLikeness(0);
  uint64_t result = sub_20B780C94(a5, v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1);
  uint64_t v13 = a6[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a6[2] = v15;
  }
  return result;
}

void *sub_20B77F594()
{
  uint64_t v1 = type metadata accessor for ContactLikeness(0);
  uint64_t v29 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1 - 8);
  int64_t v3 = (char *)&v26 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B550);
  uint64_t v26 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_20B7D3F48();
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v4 + 16);
  if (!v7)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    *uint64_t v26 = v6;
    return result;
  }
  uint64_t result = (void *)(v5 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v9)
  {
    uint64_t result = memmove(result, (const void *)(v4 + 64), 8 * v9);
    uint64_t v7 = *(void *)(v4 + 16);
  }
  int64_t v10 = 0;
  *(void *)(v6 + 16) = v7;
  uint64_t v11 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v4 + 64);
  uint64_t v27 = v4 + 64;
  int64_t v28 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v23 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v23 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v23);
    ++v10;
    if (!v24)
    {
      int64_t v10 = v23 + 1;
      if (v23 + 1 >= v28) {
        goto LABEL_23;
      }
      unint64_t v24 = *(void *)(v27 + 8 * v10);
      if (!v24) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 24 * v15;
    uint64_t v17 = *(void *)(v4 + 48) + 24 * v15;
    char v18 = *(unsigned char *)v17;
    uint64_t v19 = *(void *)(v17 + 8);
    uint64_t v20 = *(void *)(v17 + 16);
    unint64_t v21 = *(void *)(v29 + 72) * v15;
    sub_20B780868(*(void *)(v4 + 56) + v21, (uint64_t)v3);
    uint64_t v22 = *(void *)(v6 + 48) + v16;
    *(unsigned char *)uint64_t v22 = v18;
    *(void *)(v22 + _Block_object_dispose(&a9, 8) = v19;
    *(void *)(v22 + 16) = v20;
    sub_20B780C94((uint64_t)v3, *(void *)(v6 + 56) + v21);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v28) {
    goto LABEL_23;
  }
  unint64_t v24 = *(void *)(v27 + 8 * v25);
  if (v24)
  {
    int64_t v10 = v25;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v10 >= v28) {
      goto LABEL_23;
    }
    unint64_t v24 = *(void *)(v27 + 8 * v10);
    ++v25;
    if (v24) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_20B77F804(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *v3;
  sub_20B7D4088();
  swift_bridgeObjectRetain();
  sub_20B7D3B58();
  uint64_t v8 = sub_20B7D40A8();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_20B7D4018() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (uint64_t *)(*(void *)(*v3 + 48) + 16 * v10);
      uint64_t v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      char v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_20B7D4018() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *int64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_20B77FC94(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *int64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_20B77F9B4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B540);
  uint64_t v3 = sub_20B7D3E68();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = sub_20B7D2DA8();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_20B7D4088();
      sub_20B7D3B58();
      uint64_t result = sub_20B7D40A8();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      BOOL v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *BOOL v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_20B77FC94(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  uint64_t v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_20B77F9B4();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (uint64_t)sub_20B77FE30();
      goto LABEL_22;
    }
    sub_20B77FFE4();
  }
  uint64_t v11 = *v4;
  sub_20B7D4088();
  sub_20B7D3B58();
  uint64_t result = sub_20B7D40A8();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    unint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_20B7D4018(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_20B7D4028();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        int64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_20B7D4018();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (uint64_t *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

void *sub_20B77FE30()
{
  uint64_t v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B540);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_20B7D3E58();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    BOOL v19 = (void *)(*(void *)(v4 + 48) + v16);
    *BOOL v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_20B77FFE4()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B540);
  uint64_t v3 = sub_20B7D3E68();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = sub_20B7D2DA8();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    BOOL v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_20B7D4088();
    swift_bridgeObjectRetain();
    sub_20B7D3B58();
    uint64_t result = sub_20B7D40A8();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    int64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *int64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_20B780294(uint64_t a1)
{
  return sub_20B7A24FC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_20B7802A8(unint64_t a1, uint64_t a2)
{
  uint64_t v27 = a2;
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = type metadata accessor for ContactLikeness(0);
  uint64_t v22 = *(void *)(v26 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v26);
  uint64_t v25 = (uint64_t)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v21 = (uint64_t)&v20 - v9;
  if (a1 >> 62)
  {
LABEL_21:
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20B7D3F38();
    if (v10) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v10)
    {
LABEL_3:
      unint64_t v24 = a1 & 0xC000000000000001;
      int64_t v11 = (unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
      unint64_t v12 = MEMORY[0x263F8EE78];
      uint64_t v13 = 4;
      unint64_t v23 = a1;
      while (1)
      {
        uint64_t v14 = v13 - 4;
        if (v24)
        {
          a1 = MEMORY[0x210537C20](v13 - 4, a1);
          uint64_t v15 = v13 - 3;
          if (__OFADD__(v14, 1)) {
            goto LABEL_20;
          }
        }
        else
        {
          a1 = *(void *)(a1 + 8 * v13);
          sub_20B7D2DA8();
          uint64_t v15 = v13 - 3;
          if (__OFADD__(v14, 1))
          {
LABEL_20:
            __break(1u);
            goto LABEL_21;
          }
        }
        unint64_t v28 = a1;
        sub_20B7787B4((uint64_t)v6);
        if (v2)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          return v12;
        }
        swift_release();
        if ((*v11)(v6, 1, v26) == 1)
        {
          sub_20B76D2E4((uint64_t)v6, &qword_26769B548);
        }
        else
        {
          uint64_t v16 = v21;
          sub_20B780C94((uint64_t)v6, v21);
          sub_20B780C94(v16, v25);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v12 = sub_20B76BC34(0, *(void *)(v12 + 16) + 1, 1, v12);
          }
          unint64_t v18 = *(void *)(v12 + 16);
          unint64_t v17 = *(void *)(v12 + 24);
          if (v18 >= v17 >> 1) {
            unint64_t v12 = sub_20B76BC34(v17 > 1, v18 + 1, 1, v12);
          }
          *(void *)(v12 + 16) = v18 + 1;
          sub_20B780C94(v25, v12+ ((*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80))+ *(void *)(v22 + 72) * v18);
        }
        a1 = v23;
        ++v13;
        if (v15 == v10)
        {
          swift_bridgeObjectRelease();
          return v12;
        }
      }
    }
  }
  swift_bridgeObjectRelease();
  return MEMORY[0x263F8EE78];
}

unint64_t sub_20B7805D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B548);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = type metadata accessor for ContactLikeness(0);
  uint64_t v9 = MEMORY[0x270FA5388](v27);
  uint64_t v26 = (uint64_t)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)v23 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return MEMORY[0x263F8EE78];
  }
  v23[2] = v3;
  uint64_t v24 = v11;
  uint64_t v15 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  swift_bridgeObjectRetain();
  v23[1] = a1;
  uint64_t v16 = (unint64_t *)(a1 + 40);
  unint64_t v17 = MEMORY[0x263F8EE78];
  uint64_t v25 = a3;
  do
  {
    uint64_t v18 = *(v16 - 1);
    unint64_t v19 = *v16;
    swift_bridgeObjectRetain();
    sub_20B7795E4(v18, v19, a3, (uint64_t)v8);
    swift_bridgeObjectRelease();
    if ((*v15)(v8, 1, v27) == 1)
    {
      sub_20B76D2E4((uint64_t)v8, &qword_26769B548);
    }
    else
    {
      sub_20B780C94((uint64_t)v8, (uint64_t)v13);
      sub_20B780C94((uint64_t)v13, v26);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v17 = sub_20B76BC34(0, *(void *)(v17 + 16) + 1, 1, v17);
      }
      unint64_t v21 = *(void *)(v17 + 16);
      unint64_t v20 = *(void *)(v17 + 24);
      if (v21 >= v20 >> 1) {
        unint64_t v17 = sub_20B76BC34(v20 > 1, v21 + 1, 1, v17);
      }
      *(void *)(v17 + 16) = v21 + 1;
      sub_20B780C94(v26, v17+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21);
      a3 = v25;
    }
    v16 += 2;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_20B780868(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B7808CC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContactLikeness(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B780928(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v9 = MEMORY[0x263F8EE78];
    sub_20B7A20F4(0, v2, 0);
    uint64_t result = v9;
    uint64_t v4 = (char *)(a1 + 32);
    unint64_t v5 = *(void *)(v9 + 16);
    do
    {
      char v7 = *v4++;
      char v6 = v7;
      uint64_t v10 = result;
      unint64_t v8 = *(void *)(result + 24);
      if (v5 >= v8 >> 1)
      {
        sub_20B7A20F4(v8 > 1, v5 + 1, 1);
        uint64_t result = v10;
      }
      *(void *)(result + 16) = v5 + 1;
      *(unsigned char *)(result + v5++ + 32) = v6;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_20B7809E8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_20B7D3D08();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_20B77F804(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_20B780A80(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return MEMORY[0x263F8EE78];
  }
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v23 = MEMORY[0x263F8EE78];
  do
  {
    if (v4 <= v2) {
      unint64_t v6 = v2;
    }
    else {
      unint64_t v6 = v4;
    }
    unint64_t v25 = v6;
    while (1)
    {
      if (v4 == v25)
      {
        __break(1u);
        return result;
      }
      uint64_t v7 = (uint64_t *)(v24 + 16 * v4);
      uint64_t v9 = *v7;
      uint64_t v8 = v7[1];
      ++v4;
      if (!*(void *)(a2 + 16))
      {
        swift_bridgeObjectRetain();
        goto LABEL_25;
      }
      sub_20B7D4088();
      swift_bridgeObjectRetain();
      sub_20B7D3B58();
      uint64_t v10 = sub_20B7D40A8();
      uint64_t v11 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v12 = v10 & ~v11;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        goto LABEL_25;
      }
      uint64_t v13 = *(void *)(a2 + 48);
      uint64_t v14 = (void *)(v13 + 16 * v12);
      BOOL v15 = *v14 == v9 && v14[1] == v8;
      if (!v15 && (sub_20B7D4018() & 1) == 0) {
        break;
      }
LABEL_7:
      uint64_t result = swift_bridgeObjectRelease();
      if (v4 == v2) {
        return v23;
      }
    }
    uint64_t v16 = ~v11;
    while (1)
    {
      unint64_t v12 = (v12 + 1) & v16;
      if (((*(void *)(v5 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
        break;
      }
      unint64_t v17 = (void *)(v13 + 16 * v12);
      BOOL v18 = *v17 == v9 && v17[1] == v8;
      if (v18 || (sub_20B7D4018() & 1) != 0) {
        goto LABEL_7;
      }
    }
LABEL_25:
    uint64_t v19 = v23;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_20B7A211C(0, *(void *)(v23 + 16) + 1, 1);
      uint64_t v19 = v23;
    }
    unint64_t v21 = *(void *)(v19 + 16);
    unint64_t v20 = *(void *)(v19 + 24);
    if (v21 >= v20 >> 1)
    {
      uint64_t result = sub_20B7A211C(v20 > 1, v21 + 1, 1);
      uint64_t v19 = v23;
    }
    *(void *)(v19 + 16) = v21 + 1;
    uint64_t v23 = v19;
    uint64_t v22 = v19 + 16 * v21;
    *(void *)(v22 + 32) = v9;
    *(void *)(v22 + 40) = v8;
  }
  while (v4 != v2);
  return v23;
}

uint64_t sub_20B780C94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B780CF8(uint64_t *a1)
{
  return sub_20B77A4F0(a1, *(unsigned char *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_20B780D1C(uint64_t a1)
{
  return sub_20B77AC4C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(unsigned __int8 *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_20B780D44(uint64_t a1, unsigned __int8 a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void *)(*(void *)a1 + 16);
  if (!v5) {
    return 0;
  }
  uint64_t v8 = 0;
  unint64_t v9 = 0;
  int v10 = a2;
  while (1)
  {
    uint64_t v11 = &v4[v8];
    if (LOBYTE(v4[v8 + 4]) == v10)
    {
      uint64_t result = v11[5];
      if (result == a3 && v11[6] == a4) {
        break;
      }
      uint64_t result = sub_20B7D4018();
      if (result) {
        break;
      }
    }
    ++v9;
    v8 += 3;
    if (v5 == v9) {
      return v4[2];
    }
  }
  unint64_t v14 = v9 + 1;
  if (!__OFADD__(v9, 1))
  {
    unint64_t v15 = v4[2];
    while (v14 != v15)
    {
      if (v14 >= v15)
      {
        __break(1u);
LABEL_32:
        __break(1u);
LABEL_33:
        __break(1u);
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
      unint64_t v17 = &v4[v8];
      if (LOBYTE(v4[v8 + 7]) != v10
        || ((uint64_t result = v17[8], result == a3) ? (v18 = v17[9] == a4) : (v18 = 0),
            !v18 && (uint64_t result = sub_20B7D4018(), (result & 1) == 0)))
      {
        if (v14 != v9)
        {
          if (v9 >= v15) {
            goto LABEL_33;
          }
          uint64_t v19 = (uint64_t)&v4[3 * v9 + 4];
          uint64_t v20 = *(void *)(v19 + 8);
          uint64_t v21 = *(void *)(v19 + 16);
          char v29 = *(unsigned char *)v19;
          char v30 = *((unsigned char *)v17 + 56);
          uint64_t v22 = v17[8];
          uint64_t v23 = v17[9];
          uint64_t v27 = v20;
          uint64_t v28 = v22;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v4 = sub_20B77EBB4(v4);
          }
          uint64_t v24 = &v4[3 * v9];
          *((unsigned char *)v24 + 32) = v30;
          void v24[5] = v28;
          v24[6] = v23;
          uint64_t result = swift_bridgeObjectRelease();
          if (v14 >= v4[2]) {
            goto LABEL_34;
          }
          unint64_t v25 = &v4[v8];
          *((unsigned char *)v25 + 56) = v29;
          v25[8] = v27;
          v25[9] = v21;
          uint64_t result = swift_bridgeObjectRelease();
          *(void *)a1 = v4;
        }
        if (__OFADD__(v9++, 1)) {
          goto LABEL_32;
        }
      }
      ++v14;
      unint64_t v15 = v4[2];
      v8 += 3;
    }
    return v9;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_20B780F3C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_20B76BC58(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  uint64_t v14 = v13 - a2;
  if (__OFSUB__(v13, a2)) {
    goto LABEL_26;
  }
  if ((v14 & 0x8000000000000000) == 0)
  {
    unint64_t v15 = (char *)&v4[3 * a2 + 4];
    if (a1 != a2 || &v4[3 * a1 + 4] >= (void *)&v15[24 * v14])
    {
      uint64_t result = (uint64_t)memmove(&v4[3 * a1 + 4], v15, 24 * v14);
      uint64_t v13 = v4[2];
    }
    BOOL v16 = __OFADD__(v13, v8);
    uint64_t v17 = v13 - v7;
    if (!v16)
    {
      v4[2] = v17;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7810B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_20B781118()
{
  unint64_t result = qword_26769B558;
  if (!qword_26769B558)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26769B558);
  }
  return result;
}

unint64_t sub_20B781158()
{
  unint64_t result = qword_26769B578;
  if (!qword_26769B578)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B578);
  }
  return result;
}

unint64_t sub_20B7811AC()
{
  unint64_t result = qword_26769B580;
  if (!qword_26769B580)
  {
    type metadata accessor for ContactAvatarFetchResultEntityRepresentation(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B580);
  }
  return result;
}

uint64_t sub_20B781204(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_20B781268(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t ContactCardViewModel.widgetViewModels.getter()
{
  return swift_bridgeObjectRetain();
}

id ContactCardViewModel.contact.getter()
{
  return *(id *)(v0 + 24);
}

uint64_t ContactCardViewModel.__allocating_init(contact:configuration:)(void *a1)
{
  uint64_t v2 = swift_allocObject();
  ContactCardViewModel.init(contact:configuration:)(a1);
  return v2;
}

uint64_t ContactCardViewModel.init(contact:configuration:)(void *a1)
{
  *(void *)(v1 + 24) = a1;
  type metadata accessor for ContactCardViewModelBuilder();
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 16) = MEMORY[0x263F8EE78];
  *(void *)(inited + 24) = a1;
  *(void *)(inited + 32) = a1;
  type metadata accessor for ContactCardGroupFactory();
  uint64_t v4 = swift_allocObject();
  *(void *)(inited + 64) = a1;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 40) = v4;
  *(void *)(inited + 4_Block_object_dispose(&a9, 8) = a1;
  *(void *)(inited + 56) = a1;
  id v5 = a1;
  sub_20B7D2DA8();
  id v6 = v5;
  uint64_t v7 = sub_20B781D88((uint64_t)&unk_26BFC5938, (void *)inited);
  swift_release();

  swift_bridgeObjectRelease();
  swift_setDeallocating();

  swift_release();
  uint64_t v8 = *(void **)(inited + 48);
  int64_t v9 = *(void **)(inited + 56);

  *(void *)(v1 + 16) = v7;
  return v1;
}

uint64_t type metadata accessor for ContactCardViewModelBuilder()
{
  return self;
}

uint64_t ContactCardViewModel.deinit()
{
  swift_bridgeObjectRelease();

  return v0;
}

uint64_t ContactCardViewModel.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_20B7814CC@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for ContactCardViewModel();
  uint64_t result = sub_20B7D3A08();
  *a1 = result;
  return result;
}

uint64_t sub_20B781508()
{
  swift_bridgeObjectRelease();

  swift_release();
  uint64_t v1 = *(void **)(v0 + 48);
  uint64_t v2 = *(void **)(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t sub_20B781584(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v24 = MEMORY[0x263F8EE78];
    sub_20B7A20D4(0, v1, 0);
    uint64_t v2 = v24;
    uint64_t v4 = (unsigned __int8 *)(a1 + 32);
    do
    {
      int v5 = *v4++;
      unint64_t v6 = 0xD000000000000012;
      unint64_t v7 = 0x800000020B7E7840;
      unint64_t v8 = 0x800000020B7E7F30;
      uint64_t v9 = 0x69662E656E6F6870;
      unint64_t v10 = 0xD000000000000011;
      unint64_t v11 = 0xEA00000000006C6CLL;
      switch(v5)
      {
        case 1:
          unint64_t v8 = 0x800000020B7E7F10;
          uint64_t v9 = 0x69662E6F65646976;
          break;
        case 2:
          unint64_t v11 = 0xEC0000006C6C6966;
          uint64_t v9 = 0x2E6567617373656DLL;
          unint64_t v8 = 0xEE00454741535345;
          goto LABEL_7;
        case 3:
          unint64_t v11 = 0xED00006C6C69662ELL;
          uint64_t v9 = 0x65706F6C65766E65;
          unint64_t v8 = 0xEB000000004C4941;
LABEL_7:
          unint64_t v10 = 0x4D5F4E4F49544341;
          break;
        case 4:
          uint64_t v9 = 0;
          unint64_t v11 = 0xE000000000000000;
          unint64_t v8 = 0xEB000000004F464ELL;
          unint64_t v10 = 0x495F4E4F49544341;
          break;
        case 5:
          goto LABEL_10;
        case 6:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v6 = 0x697261666173;
LABEL_10:
          unint64_t v10 = 0;
          unint64_t v8 = 0xE000000000000000;
          uint64_t v9 = v6;
          unint64_t v11 = v7;
          break;
        default:
          break;
      }
      uint64_t v20 = &type metadata for ContactCardGroupQuickActionItem;
      uint64_t v21 = &protocol witness table for ContactCardGroupQuickActionItem;
      uint64_t v12 = swift_allocObject();
      *(void *)&long long v19 = v12;
      *(void *)(v12 + 16) = v9;
      *(void *)(v12 + 24) = v11;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v8;
      *(void *)(v12 + 4_Block_object_dispose(&a9, 8) = 0;
      *(void *)(v12 + 56) = 0;
      *(unsigned char *)(v12 + 64) = 0;
      sub_20B76D0B0(&v19, (uint64_t)v22);
      uint64_t v24 = v2;
      unint64_t v14 = *(void *)(v2 + 16);
      unint64_t v13 = *(void *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_20B7A20D4(v13 > 1, v14 + 1, 1);
        uint64_t v2 = v24;
      }
      *(void *)(v2 + 16) = v14 + 1;
      uint64_t v15 = v2 + 40 * v14;
      long long v16 = v22[0];
      long long v17 = v22[1];
      *(void *)(v15 + 64) = v23;
      *(_OWORD *)(v15 + 32) = v16;
      *(_OWORD *)(v15 + 4_Block_object_dispose(&a9, 8) = v17;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20B781824(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (!v5) {
    return result;
  }
  uint64_t v75 = MEMORY[0x263F8EE78];
  sub_20B7A217C(0, v5, 0);
  uint64_t v8 = 0;
  uint64_t result = v75;
  uint64_t v63 = (void *)a2[6];
  uint64_t v64 = a1 + 32;
  uint64_t v61 = (void *)a2[8];
  uint64_t v62 = (void *)a2[7];
  int64_t v59 = v5;
  while (1)
  {
    uint64_t v66 = result;
    uint64_t v67 = v8;
    long long v71 = *(_OWORD *)(v64 + 16 * v8);
    uint64_t v9 = *(void *)(v64 + 16 * v8);
    uint64_t v10 = *(void *)(v64 + 16 * v8 + 8);
    uint64_t v65 = v9;
    if (swift_dynamicCastMetatype())
    {
      uint64_t v11 = qword_26769AF78;
      id v12 = v63;
      id v13 = v62;
      id v14 = v61;
      if (v11 != -1) {
        swift_once();
      }
      uint64_t v15 = qword_2676A3CC8;
      id v16 = v12;
      id v17 = v13;
      id v18 = v14;
      long long v19 = (void *)sub_20B781584(v15);

      goto LABEL_39;
    }
    if (!swift_dynamicCastMetatype()) {
      break;
    }
    long long v19 = (void *)sub_20B76E740();
LABEL_39:
    uint64_t v47 = *(void (**)(void, void, void *, uint64_t, uint64_t))(v10 + 32);
    long long v74 = v71;
    __swift_allocate_boxed_opaque_existential_1((uint64_t *)v73 + 1);
    v47(0, 0, v19, v65, v10);
    uint64_t v48 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
    swift_bridgeObjectRetain();
    *(void *)&long long v72 = v48(v65, v10);
    *((void *)&v72 + 1) = v49;
    uint64_t v50 = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 16))(v65, v10);
    swift_bridgeObjectRelease();
    *(void *)&v73[0] = v50;
    uint64_t result = v66;
    uint64_t v75 = v66;
    unint64_t v52 = *(void *)(v66 + 16);
    unint64_t v51 = *(void *)(v66 + 24);
    if (v52 >= v51 >> 1)
    {
      sub_20B7A217C(v51 > 1, v52 + 1, 1);
      uint64_t result = v75;
    }
    uint64_t v8 = v67 + 1;
    *(void *)(result + 16) = v52 + 1;
    uint64_t v53 = (_OWORD *)(result + (v52 << 6));
    long long v54 = v73[0];
    long long v55 = v74;
    v53[4] = v73[1];
    v53[5] = v55;
    uint64_t v53[2] = v72;
    v53[3] = v54;
    if (v67 + 1 == v5) {
      return result;
    }
  }
  uint64_t v20 = *(uint64_t (**)(uint64_t, void))(*((void *)&v71 + 1) + 24);
  id v21 = v63;
  id v22 = v62;
  id v23 = v61;
  unint64_t v24 = v20(v9, *((void *)&v71 + 1));
  unint64_t v25 = v24;
  if (v24 >> 62)
  {
    id v56 = v21;
    id v57 = v22;
    id v58 = v23;
    swift_bridgeObjectRetain();
    uint64_t v26 = sub_20B7D3F38();
  }
  else
  {
    uint64_t v26 = *(void *)((v24 & 0xFFFFFFFFFFFFFF8) + 0x10);
    id v27 = v21;
    id v28 = v22;
    id v29 = v23;
    swift_bridgeObjectRetain();
  }
  uint64_t v69 = v23;
  unint64_t v70 = v22;
  uint64_t v60 = v3;
  if (!v26)
  {
    long long v19 = (void *)MEMORY[0x263F8EE78];
LABEL_38:

    swift_bridgeObjectRelease_n();
    uint64_t v10 = *((void *)&v71 + 1);
    uint64_t v3 = v60;
    int64_t v5 = v59;
    goto LABEL_39;
  }
  uint64_t v30 = 4;
  long long v19 = (void *)MEMORY[0x263F8EE78];
  uint64_t v68 = v26;
  while (2)
  {
    uint64_t v31 = v30 - 4;
    if ((v25 & 0xC000000000000001) != 0)
    {
      uint64_t v32 = MEMORY[0x210537C20](v30 - 4, v25);
      uint64_t v33 = v30 - 3;
      if (__OFADD__(v31, 1)) {
        break;
      }
      goto LABEL_20;
    }
    uint64_t v32 = *(void *)(v25 + 8 * v30);
    sub_20B7D2DA8();
    uint64_t v33 = v30 - 3;
    if (!__OFADD__(v31, 1))
    {
LABEL_20:
      id v34 = v21;
      uint64_t v35 = sub_20B76EC98(v32);
      swift_release();
      uint64_t v36 = *(void *)(v35 + 16);
      int64_t v37 = v19[2];
      int64_t v38 = v37 + v36;
      if (__OFADD__(v37, v36)) {
        goto LABEL_46;
      }
      char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
      if (!isUniquelyReferenced_nonNull_native || v38 > v19[3] >> 1)
      {
        if (v37 <= v38) {
          int64_t v40 = v37 + v36;
        }
        else {
          int64_t v40 = v37;
        }
        long long v19 = sub_20B76B9E8(isUniquelyReferenced_nonNull_native, v40, 1, v19);
      }
      id v21 = v34;
      if (*(void *)(v35 + 16))
      {
        uint64_t v41 = v19[2];
        if ((v19[3] >> 1) - v41 < v36) {
          goto LABEL_48;
        }
        unint64_t v42 = (unint64_t)&v19[5 * v41 + 4];
        if (v35 + 32 < v42 + 40 * v36 && v42 < v35 + 32 + 40 * v36) {
          goto LABEL_50;
        }
        swift_arrayInitWithCopy();
        if (v36)
        {
          uint64_t v44 = v19[2];
          BOOL v45 = __OFADD__(v44, v36);
          uint64_t v46 = v44 + v36;
          if (v45) {
            goto LABEL_49;
          }
          v19[2] = v46;
        }
      }
      else if (v36)
      {
        goto LABEL_47;
      }
      swift_bridgeObjectRelease();
      ++v30;
      if (v33 == v68) {
        goto LABEL_38;
      }
      continue;
    }
    break;
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B781D88(uint64_t a1, void *a2)
{
  void (*v29)(long long *__return_ptr, uint64_t, uint64_t);
  char v30;
  void *v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  uint64_t v39;
  unsigned __int8 *v40;
  char v41[40];
  long long v42;
  long long v43;
  uint64_t v44;
  void v45[3];
  uint64_t v46;
  uint64_t v47;
  void v48[3];
  ValueMetadata *v49;
  _UNKNOWN **v50;
  uint64_t v51;

  uint64_t v3 = v2;
  int64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (v4)
  {
    unint64_t v51 = MEMORY[0x263F8EE78];
    sub_20B7A215C(0, v4, 0);
    unint64_t v7 = (unsigned __int8 *)(a1 + 32);
    uint64_t v5 = v51;
    do
    {
      int v8 = *v7;
      int64_t v40 = v7 + 1;
      uint64_t v9 = (char)v8;
      uint64_t v10 = off_2640199E8[v9];
      uint64_t v11 = off_264019A00[v9];
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5D8);
      uint64_t v12 = swift_allocObject();
      *(_OWORD *)(v12 + 16) = xmmword_20B7DB980;
      *(void *)(v12 + 32) = v10;
      *(void *)(v12 + 40) = v11;
      sub_20B7D2DA8();
      uint64_t v13 = v3;
      uint64_t v14 = sub_20B781824(v12, a2);
      swift_bridgeObjectRelease();
      swift_release();
      if (v8)
      {
        if (v8 == 1)
        {
          uint64_t v49 = &type metadata for ContactCardQuickActionsWidget;
          uint64_t v50 = &off_26BFC5FE0;
          uint64_t v15 = swift_allocObject();
          v48[0] = v15;
          *(void *)(v15 + 16) = 0;
          *(void *)(v15 + 24) = 0;
          *(unsigned char *)(v15 + 32) = 1;
          *(void *)(v15 + 40) = v14;
        }
        else
        {
          uint64_t v49 = &type metadata for ContactCardContactDetailsWidget;
          uint64_t v50 = &off_26BFC6000;
          uint64_t v17 = swift_allocObject();
          v48[0] = v17;
          *(void *)(v17 + 16) = 0xD000000000000015;
          *(void *)(v17 + 24) = 0x800000020B7E7ED0;
          *(unsigned char *)(v17 + 32) = 2;
          *(void *)(v17 + 40) = v14;
          *(unsigned char *)(v17 + 4_Block_object_dispose(&a9, 8) = 0;
          *(void *)(v17 + 56) = 0xD000000000000017;
          *(void *)(v17 + 64) = 0x800000020B7E7EF0;
        }
      }
      else
      {
        uint64_t v49 = &type metadata for ContactCardHeaderWidget;
        uint64_t v50 = &off_26BFC5FC0;
        uint64_t v16 = swift_allocObject();
        v48[0] = v16;
        *(void *)(v16 + 16) = 0;
        *(void *)(v16 + 24) = 0;
        *(unsigned char *)(v16 + 32) = 0;
        *(void *)(v16 + 40) = v14;
      }
      sub_20B77571C((uint64_t)v48, (uint64_t)v45);
      uint64_t v18 = v46;
      uint64_t v19 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      uint64_t v20 = *(uint64_t (**)(uint64_t, uint64_t))(v19 + 8);
      swift_bridgeObjectRetain();
      uint64_t v39 = v20(v18, v19);
      uint64_t v22 = v21;
      uint64_t v23 = v46;
      uint64_t v24 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      unint64_t v25 = *(uint64_t (**)(uint64_t, uint64_t))(v24 + 24);
      swift_bridgeObjectRetain();
      uint64_t v26 = v25(v23, v24);
      uint64_t v27 = v46;
      uint64_t v28 = v47;
      __swift_project_boxed_opaque_existential_1(v45, v46);
      id v29 = *(void (**)(long long *__return_ptr, uint64_t, uint64_t))(v28 + 16);
      swift_bridgeObjectRetain();
      v29(&v42, v27, v28);
      uint64_t v30 = v42;
      sub_20B77571C((uint64_t)v45, (uint64_t)v41);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5E0);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5E8);
      if (swift_dynamicCast())
      {
        uint64_t v31 = __swift_project_boxed_opaque_existential_1(&v42, *((uint64_t *)&v43 + 1));
        uint64_t v33 = v31[5];
        uint64_t v32 = v31[6];
        swift_bridgeObjectRetain();
        __swift_destroy_boxed_opaque_existential_0((uint64_t)&v42);
      }
      else
      {
        uint64_t v44 = 0;
        unint64_t v42 = 0u;
        int64_t v43 = 0u;
        sub_20B78224C((uint64_t)&v42);
        uint64_t v33 = 0;
        uint64_t v32 = 0;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v45);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_0((uint64_t)v48);
      swift_bridgeObjectRelease();
      unint64_t v51 = v5;
      uint64_t v35 = *(void *)(v5 + 16);
      id v34 = *(void *)(v5 + 24);
      if (v35 >= v34 >> 1)
      {
        sub_20B7A215C(v34 > 1, v35 + 1, 1);
        uint64_t v5 = v51;
      }
      *(void *)(v5 + 16) = v35 + 1;
      uint64_t v36 = v5 + 48 * v35;
      *(void *)(v36 + 32) = v39;
      *(void *)(v36 + 40) = v22;
      *(unsigned char *)(v36 + 4_Block_object_dispose(&a9, 8) = v30;
      *(void *)(v36 + 56) = v26;
      *(void *)(v36 + 64) = v33;
      *(void *)(v36 + 72) = v32;
      --v4;
      unint64_t v7 = v40;
      uint64_t v3 = v13;
    }
    while (v4);
  }
  return v5;
}

uint64_t sub_20B7821A8()
{
  return MEMORY[0x263EFDDD8];
}

uint64_t type metadata accessor for ContactCardViewModel()
{
  return self;
}

uint64_t method lookup function for ContactCardViewModel(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactCardViewModel);
}

uint64_t dispatch thunk of ContactCardViewModel.__allocating_init(contact:configuration:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_20B782204()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 72, 7);
}

uint64_t sub_20B78224C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B5F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t objectdestroy_13Tm()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  int64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_20B782358()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + 48)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 65, 7);
}

id CNUIPRLikenessIntentLookup.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id CNUIPRLikenessIntentLookup.init()()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNUIPRLikenessIntentLookup();
  return objc_msgSendSuper2(&v2, sel_init);
}

uint64_t type metadata accessor for CNUIPRLikenessIntentLookup()
{
  return self;
}

id CNUIPRLikenessIntentLookup.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CNUIPRLikenessIntentLookup();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

ContactsUICore::ContactCardActionProvider __swiftcall ContactCardActionProvider.init(contact:)(ContactsUICore::ContactCardActionProvider contact)
{
  v1->contact.super.isa = contact.contact.super.isa;
  return contact;
}

BOOL static QuickActionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t QuickActionType.hash(into:)()
{
  return sub_20B7D4098();
}

uint64_t QuickActionType.hashValue.getter()
{
  return sub_20B7D40A8();
}

Swift::String __swiftcall ContactCardActionProvider.localizedTitle(for:)(ContactsUICore::QuickActionType a1)
{
  int v1 = *(unsigned __int8 *)a1;
  uint64_t v2 = 0xD000000000000011;
  uint64_t v3 = (void *)0x800000020B7E7F30;
  switch(v1)
  {
    case 0:
      break;
    case 1:
      uint64_t v3 = (void *)0x800000020B7E7F10;
      break;
    case 2:
      uint64_t v3 = (void *)0xEE00454741535345;
      goto LABEL_6;
    case 3:
      uint64_t v3 = (void *)0xEB000000004C4941;
LABEL_6:
      uint64_t v2 = 0x4D5F4E4F49544341;
      break;
    case 4:
      uint64_t v3 = (void *)0xEB000000004F464ELL;
      uint64_t v2 = 0x495F4E4F49544341;
      break;
    default:
      uint64_t v2 = 0;
      uint64_t v3 = (void *)0xE000000000000000;
      break;
  }
  result._object = v3;
  result._countAndFlagsBits = v2;
  return result;
}

uint64_t ContactCardActionProvider.actionHandler(for:)()
{
  return 0;
}

Swift::String __swiftcall ContactCardActionProvider.symbolImageName(for:)(ContactsUICore::QuickActionType a1)
{
  int v1 = (void *)0xEA00000000006C6CLL;
  uint64_t v2 = *(unsigned __int8 *)a1;
  uint64_t v3 = 0x69662E656E6F6870;
  switch(v2)
  {
    case 1:
      uint64_t v3 = 0x69662E6F65646976;
      break;
    case 2:
      int v1 = (void *)0xEC0000006C6C6966;
      uint64_t v3 = 0x2E6567617373656DLL;
      break;
    case 3:
      int v1 = (void *)0xED00006C6C69662ELL;
      uint64_t v3 = 0x65706F6C65766E65;
      break;
    case 4:
      uint64_t v3 = 0;
      int v1 = (void *)0xE000000000000000;
      break;
    case 5:
      int v1 = (void *)0x800000020B7E7840;
      uint64_t v3 = 0xD000000000000012;
      break;
    case 6:
      int v1 = (void *)0xE600000000000000;
      uint64_t v3 = 0x697261666173;
      break;
    default:
      break;
  }
  result._object = v1;
  result._countAndFlagsBits = v3;
  return result;
}

unint64_t sub_20B782700()
{
  unint64_t result = qword_26769B5F8;
  if (!qword_26769B5F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B5F8);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for QuickActionType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for QuickActionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B7828B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for QuickActionType()
{
  return &type metadata for QuickActionType;
}

ValueMetadata *type metadata accessor for ContactCardActionProvider()
{
  return &type metadata for ContactCardActionProvider;
}

uint64_t sub_20B7828F8(void *a1, uint64_t a2)
{
  id v3 = objc_msgSend(a1, sel_stringValue);
  sub_20B7D3B08();

  id v4 = objc_allocWithZone((Class)CNHandle);
  uint64_t v5 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v4, sel_initWithStringValue_type_, v5, 2);

  uint64_t v7 = sub_20B7D3458();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v22 - v10;
  id v12 = objc_msgSend(self, sel__cnui_telephonyURLWithHandle_contact_preferDefaultApp_, v6, a2, 1);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v12)
  {
    MEMORY[0x270FA5388](v14);
    uint64_t v17 = (char *)&v22 - v10;
    sub_20B7D3428();

    uint64_t v18 = *(void (**)(char *, char *, uint64_t))(v8 + 32);
    v18(v16, v17, v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v16, 0, 1, v7);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v16, 1, v7) != 1)
    {
      v18(v11, v16, v7);
      id v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
      uint64_t v20 = (void *)sub_20B7D3418();
      objc_msgSend(v19, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v20, 0, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v16, 1, 1, v7);
  }

  return sub_20B76D2E4((uint64_t)v16, &qword_26769B368);
}

void sub_20B782BF8(void *a1, void *a2)
{
  id v39 = objc_msgSend(a1, sel_value);
  id v4 = objc_msgSend(self, sel_singleLineStringFromPostalAddress_addCountryName_, v39, 0);
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = sub_20B7D3B08();
    uint64_t v8 = v7;

    uint64_t v40 = v6;
    uint64_t v41 = v8;
    uint64_t v9 = sub_20B7D3118();
    uint64_t v10 = *(void *)(v9 - 8);
    MEMORY[0x270FA5388](v9);
    id v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D30F8();
    sub_20B76D0C8();
    uint64_t v13 = MEMORY[0x263F8D310];
    uint64_t v14 = sub_20B7D3DC8();
    uint64_t v16 = v15;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    swift_bridgeObjectRelease();
    if (v16)
    {
      unsigned int v17 = objc_msgSend(a2, sel_iOSLegacyIdentifier);
      id v18 = objc_msgSend(a2, sel_identifier);
      uint64_t v19 = sub_20B7D3B08();
      uint64_t v21 = v20;

      id v22 = objc_msgSend(a1, sel_identifier);
      uint64_t v23 = sub_20B7D3B08();
      uint64_t v25 = v24;

      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B600);
      uint64_t v26 = swift_allocObject();
      *(_OWORD *)(v26 + 16) = xmmword_20B7DC710;
      *(void *)(v26 + 56) = v13;
      unint64_t v27 = sub_20B76D068();
      *(void *)(v26 + 64) = v27;
      *(void *)(v26 + 32) = v14;
      *(void *)(v26 + 40) = v16;
      uint64_t v28 = MEMORY[0x263F8E5B0];
      *(void *)(v26 + 96) = MEMORY[0x263F8E548];
      *(void *)(v26 + 104) = v28;
      *(_DWORD *)(v26 + 72) = v17;
      *(void *)(v26 + 136) = v13;
      *(void *)(v26 + 144) = v27;
      *(void *)(v26 + 112) = 0;
      *(void *)(v26 + 120) = 0xE000000000000000;
      *(void *)(v26 + 176) = v13;
      *(void *)(v26 + 184) = v27;
      *(void *)(v26 + 152) = v19;
      *(void *)(v26 + 160) = v21;
      *(void *)(v26 + 216) = v13;
      *(void *)(v26 + 224) = v27;
      *(void *)(v26 + 192) = v23;
      *(void *)(v26 + 200) = v25;
      sub_20B7D3B18();
      swift_bridgeObjectRelease();
      uint64_t v29 = sub_20B7D3458();
      uint64_t v30 = *(void *)(v29 - 8);
      MEMORY[0x270FA5388](v29);
      uint64_t v32 = (char *)&v38 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
      MEMORY[0x270FA5388](v33 - 8);
      uint64_t v35 = (char *)&v38 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B7D3448();
      swift_bridgeObjectRelease();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v35, 1, v29) == 1)
      {

        sub_20B76D2E4((uint64_t)v35, &qword_26769B368);
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v32, v35, v29);
        id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
        int64_t v37 = (void *)sub_20B7D3418();
        objc_msgSend(v36, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v37, 0, 0);

        (*(void (**)(char *, uint64_t))(v30 + 8))(v32, v29);
      }
    }
    else
    {
    }
  }
  else
  {
  }
}

uint64_t sub_20B783070(void *a1)
{
  uint64_t v2 = sub_20B7D3458();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(a1, sel_urlString);
  sub_20B7D3B08();

  sub_20B7D3448();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1) {
    return sub_20B76D2E4((uint64_t)v8, &qword_26769B368);
  }
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
  id v12 = (void *)sub_20B7D3418();
  objc_msgSend(v11, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v12, 0, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_20B78326C(void *a1)
{
  id v2 = objc_msgSend(a1, sel_service);
  uint64_t v3 = sub_20B7D3B08();
  unint64_t v5 = v4;

  id v6 = objc_msgSend(a1, sel_username);
  uint64_t v7 = sub_20B7D3B08();
  unint64_t v9 = v8;

  uint64_t v59 = v7;
  unint64_t v60 = v9;
  uint64_t v10 = sub_20B7D3118();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v57 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D30F8();
  sub_20B76D0C8();
  uint64_t v14 = sub_20B7D3DC8();
  uint64_t v16 = v15;
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  if (!v16) {
    goto LABEL_6;
  }
  uint64_t v17 = v14;
  uint64_t v59 = v3;
  unint64_t v60 = v5;
  uint64_t v57 = sub_20B7D3B08();
  uint64_t v58 = v18;
  uint64_t v19 = MEMORY[0x263F8D310];
  uint64_t v20 = sub_20B7D3DD8();
  swift_bridgeObjectRelease();
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  uint64_t v59 = v3;
  unint64_t v60 = v5;
  uint64_t v57 = sub_20B7D3B08();
  uint64_t v58 = v21;
  uint64_t v22 = sub_20B7D3DD8();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v22)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v32 = sub_20B7D3B68();
  if (sub_20B7D3B68() >= v32)
  {
LABEL_6:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  uint64_t v33 = sub_20B7D3B68();
  uint64_t result = sub_20B7D3B68();
  if (__OFSUB__(v33, result))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  unint64_t v34 = sub_20B7D3B78();
  unint64_t v35 = sub_20B783868(v34, v7, v9);
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  uint64_t v41 = v40;
  swift_bridgeObjectRelease();
  uint64_t v42 = MEMORY[0x2105378C0](v35, v37, v39, v41);
  uint64_t v44 = v43;
  swift_bridgeObjectRelease();
  if (v42 == 0xD000000000000011 && v44 == 0x800000020B7E8020)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v47 = sub_20B7D4018();
    swift_bridgeObjectRelease();
    if ((v47 & 1) == 0) {
      return swift_bridgeObjectRelease();
    }
  }
  uint64_t v48 = sub_20B7D3B68();
  uint64_t result = sub_20B7D3B68();
  if (__OFSUB__(v48, result)) {
    goto LABEL_21;
  }
  sub_20B7D3B78();
  uint64_t v49 = sub_20B7D3BC8();
  uint64_t v51 = v50;
  uint64_t v53 = v52;
  uint64_t v55 = v54;
  swift_bridgeObjectRelease();
  uint64_t v17 = MEMORY[0x2105378C0](v49, v51, v53, v55);
  uint64_t v16 = v56;
LABEL_8:
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B600);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_20B7DB980;
  *(void *)(v24 + 56) = v19;
  *(void *)(v24 + 64) = sub_20B76D068();
  *(void *)(v24 + 32) = v17;
  *(void *)(v24 + 40) = v16;
  sub_20B7D3B18();
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_20B7D3458();
  uint64_t v26 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v57 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  MEMORY[0x270FA5388](v29 - 8);
  uint64_t v31 = (char *)&v57 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3448();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v31, 1, v25) == 1) {
    return sub_20B76D2E4((uint64_t)v31, &qword_26769B368);
  }
  (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v28, v31, v25);
  id v45 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
  uint64_t v46 = (void *)sub_20B7D3418();
  objc_msgSend(v45, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v46, 0, 0);

  return (*(uint64_t (**)(char *, uint64_t))(v26 + 8))(v28, v25);
}

unint64_t sub_20B783868(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3 = HIBYTE(a3) & 0xF;
  if ((a3 & 0x2000000000000000) == 0) {
    uint64_t v3 = a2 & 0xFFFFFFFFFFFFLL;
  }
  if (4 * v3 >= result >> 14) {
    return sub_20B7D3BC8();
  }
  __break(1u);
  return result;
}

uint64_t sub_20B7838B4()
{
  uint64_t v0 = sub_20B7D34D8();
  uint64_t v125 = *(void *)(v0 - 8);
  uint64_t v126 = v0;
  BOOL v131 = *(uint64_t **)(v125 + 64);
  MEMORY[0x270FA5388](v0);
  uint64_t v130 = (char *)((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v134 = (char *)((char *)&v96 - v130);
  sub_20B7D34C8();
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  uint64_t v3 = *(uint64_t **)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v129 = (char *)(((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v124 = (char *)&v96 - v129;
  sub_20B7D3298();
  uint64_t v4 = sub_20B7D32C8();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v132 = v4;
  uint64_t v133 = v5;
  uint64_t v127 = *(void *)(v5 + 64);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  unint64_t v135 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v8 = (char *)&v96 - v135;
  MEMORY[0x270FA5388](v6);
  uint64_t v136 = (uint64_t *)sub_20B7D3648();
  uint64_t v117 = (char *)*(v136 - 1);
  id v128 = (uint64_t *)v117;
  uint64_t v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))*((void *)v117 + 7);
  v121((char *)&v96 - (((unint64_t)v3 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v136);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B610);
  uint64_t v119 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v120 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v96 - v120;
  uint64_t v118 = sub_20B7D3678();
  uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v118 - 8) + 56);
  v12(v11, 1, 1, v118);
  sub_20B7D3288();
  sub_20B7D3248();
  sub_20B7D3258();
  sub_20B7D31A8();
  sub_20B7D31B8();
  sub_20B7D31E8();
  sub_20B7D31F8();
  uint64_t v123 = v8;
  uint64_t v13 = sub_20B7D3228();
  MEMORY[0x270FA5388](v13);
  id v115 = (char *)((char *)&v96 - v130);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B618);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  unint64_t v113 = v16;
  id v112 = (char *)(((unint64_t)v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = (char *)((char *)&v96 - v112);
  MEMORY[0x270FA5388](v15);
  unint64_t v116 = (char *)&v96 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_20B7D3608();
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v117 = (char *)&v96 - v135;
  uint64_t v114 = v3;
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = ((uint64_t (*)(int64_t, uint64_t, uint64_t, uint64_t *))v121)((char *)&v96 - v129, 1, 1, v136);
  MEMORY[0x270FA5388](v20);
  v12((char *)&v96 - v120, 1, 1, v118);
  sub_20B7D3288();
  uint64_t v127 = sub_20B7D3598();
  unint64_t v135 = *(void *)(v127 - 8);
  MEMORY[0x270FA5388](v127);
  uint64_t v108 = v21;
  uint64_t v22 = (char *)&v96 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = *MEMORY[0x263F07770];
  uint64_t v25 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v24 + 104);
  uint64_t v107 = v24 + 104;
  id v106 = v25;
  ((void (*)(char *, uint64_t))v25)(v22, v23);
  uint64_t v26 = sub_20B7D35B8();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v111 = v28;
  uint64_t v29 = (char *)&v96 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *MEMORY[0x263F077F8];
  uint64_t v31 = *(void (**)(void, void, void))(v27 + 104);
  uint64_t v110 = v27 + 104;
  id v109 = v31;
  v31(v29, v30, v26);
  uint64_t v32 = sub_20B7D35C8();
  uint64_t v33 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v103 = v34;
  unint64_t v35 = (char *)&v96 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *(void (**)(void))(v33 + 104);
  unsigned int v101 = *MEMORY[0x263F07808];
  uint64_t v102 = v33 + 104;
  id v100 = (uint64_t (*)(char *, void, uint64_t))v36;
  v36(v35);
  uint64_t v37 = (uint64_t)v122;
  uint64_t v38 = v117;
  uint64_t v39 = v116;
  sub_20B7D3618();
  uint64_t v40 = *(void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v41 = v35;
  uint64_t v42 = v126;
  uint64_t v118 = v33 + 8;
  uint64_t v119 = v32;
  uint64_t v105 = v40;
  v40(v41, v32);
  uint64_t v43 = *(void (**)(void, void))(v27 + 8);
  unint64_t v120 = v27 + 8;
  uint64_t v121 = (void (*)(char *, uint64_t, uint64_t, uint64_t *))v26;
  uint64_t v44 = v26;
  uint64_t v45 = v42;
  unint64_t v104 = v43;
  v43(v29, v44);
  uint64_t v46 = *(void (**)(char *, uint64_t))(v135 + 8);
  v135 += 8;
  v46(v22, v127);
  char v47 = *(void (**)(char *))(v133 + 8);
  uint64_t v48 = v38;
  uint64_t v49 = v125;
  uint64_t v50 = v132;
  uint64_t v51 = v133 + 8;
  v47(v48);
  uint64_t v117 = (char *)v128[1];
  ((void (*)(char *, uint64_t *))v117)(v39, v136);
  uint64_t v52 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
  if (v52(v37, 1, v45) == 1)
  {
    ((void (*)(char *, uint64_t))v47)(v123, v50);
    sub_20B76D2E4(v124, &qword_26769B608);
    (*(void (**)(char *, uint64_t))(v49 + 8))(v134, v45);
    return sub_20B76D2E4(v37, &qword_26769B618);
  }
  v99 = (unsigned int (*)(char *, uint64_t, uint64_t))v52;
  unint64_t v116 = (char *)v47;
  uint64_t v133 = v51;
  uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
  uint64_t v98 = v49 + 32;
  uint64_t v97 = v54;
  uint64_t v55 = ((uint64_t (*)(char *, uint64_t, uint64_t))v54)(v115, v37, v45);
  uint64_t v122 = (char *)&v96;
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v130 = (char *)((char *)&v96 - v130);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v58 = (char *)((char *)&v96 - v112);
  BOOL v131 = &v96;
  MEMORY[0x270FA5388](v57);
  uint64_t v59 = (char *)((char *)&v96 - v129);
  uint64_t v60 = v124;
  sub_20B784F44(v124, (char *)&v96 - v129);
  uint64_t v61 = ((uint64_t (*)(char *, uint64_t, uint64_t *))v128[6])(v59, 1, v136);
  if (v61 == 1)
  {
    sub_20B76D2E4((uint64_t)v59, &qword_26769B608);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v49 + 56))(v58, 1, 1, v45);
LABEL_6:
    unint64_t v77 = *(void (**)(char *, uint64_t))(v49 + 8);
    v77(v115, v45);
    ((void (*)(char *, uint64_t))v116)(v123, v132);
    sub_20B76D2E4(v60, &qword_26769B608);
    v77(v134, v45);
    return sub_20B76D2E4((uint64_t)v58, &qword_26769B618);
  }
  id v128 = &v96;
  MEMORY[0x270FA5388](v61);
  uint64_t v63 = (char *)&v96 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = *MEMORY[0x263F07760];
  unint64_t v129 = (char *)&v96;
  uint64_t v65 = v106(v63, v64, v127);
  uint64_t v114 = &v96;
  MEMORY[0x270FA5388](v65);
  uint64_t v67 = v58;
  uint64_t v68 = (char *)&v96 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v113 = v46;
  uint64_t v69 = v119;
  uint64_t v70 = v100(v68, v101, v119);
  id v112 = (char *)&v96;
  MEMORY[0x270FA5388](v70);
  long long v72 = (char *)&v96 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v73 = v121;
  v109(v72, *MEMORY[0x263F077E8], v121);
  sub_20B7D3618();
  long long v74 = v72;
  uint64_t v49 = v125;
  v104(v74, v73);
  uint64_t v75 = v68;
  uint64_t v58 = v67;
  uint64_t v45 = v126;
  v105(v75, v69);
  unint64_t v76 = v63;
  uint64_t v60 = v124;
  v113(v76, v127);
  ((void (*)(char *, uint64_t *))v117)(v59, v136);
  if (v99(v67, 1, v45) == 1) {
    goto LABEL_6;
  }
  uint64_t v78 = v130;
  v97(v130, v67, v45);
  uint64_t v79 = sub_20B7D3458();
  uint64_t v80 = *(void *)(v79 - 8);
  MEMORY[0x270FA5388](v79);
  uint64_t v82 = (char *)&v96 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  MEMORY[0x270FA5388](v83 - 8);
  unint64_t v85 = (char *)&v96 - ((v84 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v86 = v78;
  uint64_t result = sub_20B7D3498();
  uint64_t v88 = v134;
  uint64_t v89 = v132;
  if ((~*(void *)&v87 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_14;
  }
  if (v87 <= -9.22337204e18)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  uint64_t v136 = &v96;
  if (v87 >= 9.22337204e18)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  uint64_t v137 = (uint64_t)v87;
  sub_20B7D4008();
  uint64_t v137 = 0x3A776F68736C6163;
  unint64_t v138 = 0xE800000000000000;
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  sub_20B7D3448();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v80 + 48))(v85, 1, v79) == 1)
  {
    uint64_t v90 = v126;
    unint64_t v91 = *(void (**)(char *, uint64_t))(v125 + 8);
    v91(v86, v126);
    v91(v115, v90);
    ((void (*)(char *, uint64_t))v116)(v123, v89);
    sub_20B76D2E4(v124, &qword_26769B608);
    v91(v88, v90);
    return sub_20B76D2E4((uint64_t)v85, &qword_26769B368);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v80 + 32))(v82, v85, v79);
    id v92 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
    uint64_t v93 = (void *)sub_20B7D3418();
    objc_msgSend(v92, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v93, 0, 0);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v82, v79);
    uint64_t v94 = v126;
    uint64_t v95 = *(void (**)(char *, uint64_t))(v125 + 8);
    v95(v86, v126);
    v95(v115, v94);
    ((void (*)(char *, uint64_t))v116)(v123, v89);
    sub_20B76D2E4(v124, &qword_26769B608);
    return ((uint64_t (*)(char *, uint64_t))v95)(v88, v94);
  }
}

uint64_t sub_20B784980(uint64_t a1, unint64_t a2)
{
  uint64_t v18 = a1;
  unint64_t v19 = a2;
  uint64_t v2 = sub_20B7D3118();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D30F8();
  sub_20B76D0C8();
  sub_20B7D3DC8();
  uint64_t v7 = v6;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if (v7)
  {
    uint64_t v9 = sub_20B7D3458();
    uint64_t v10 = *(void *)(v9 - 8);
    MEMORY[0x270FA5388](v9);
    uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
    MEMORY[0x270FA5388](v13 - 8);
    uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v18 = 0x3A6F746C69616DLL;
    unint64_t v19 = 0xE700000000000000;
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3448();
    swift_bridgeObjectRelease();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v15, 1, v9) == 1)
    {
      return sub_20B76D2E4((uint64_t)v15, &qword_26769B368);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v12, v15, v9);
      id v16 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
      uint64_t v17 = (void *)sub_20B7D3418();
      objc_msgSend(v16, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v17, 0, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    }
  }
  return result;
}

uint64_t sub_20B784C60(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_20B7D3458();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v12 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v12)
  {
    MEMORY[0x270FA5388](v9);
    uint64_t v14 = (char *)v21 - v13;
    sub_20B7D3448();
    uint64_t v15 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
    uint64_t v16 = v15(v14, 1, v4);
    if (!v16)
    {
      v21[1] = v21;
      MEMORY[0x270FA5388](v16);
      uint64_t v17 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v17, v14, v4);
      sub_20B7D3438();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v4);
      swift_bridgeObjectRelease();
    }
    sub_20B77293C((uint64_t)v14, (uint64_t)v11);
    if (v15(v11, 1, v4) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v11, v4);
      id v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F335F0]), sel_init);
      unint64_t v19 = (void *)sub_20B7D3418();
      objc_msgSend(v18, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v19, 0, 0);

      return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v11, 1, 1, v4);
  }
  return sub_20B76D2E4((uint64_t)v11, &qword_26769B368);
}

uint64_t sub_20B784F44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t destroy for ContactCardContactDetailsGroup()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void *_s14ContactsUICore30ContactCardContactDetailsGroupVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactCardContactDetailsGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactCardContactDetailsGroup(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + _Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for ContactCardContactDetailsGroup()
{
  return &type metadata for ContactCardContactDetailsGroup;
}

uint64_t sub_20B7850EC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DC7F0;
  *(void *)(v0 + 32) = swift_getKeyPath();
  *(void *)(v0 + 40) = swift_getKeyPath();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = swift_getKeyPath();
  *(void *)(v0 + 56) = swift_getKeyPath();
  *(void *)(v0 + 64) = swift_getKeyPath();
  *(void *)(v0 + 72) = swift_getKeyPath();
  *(void *)(v0 + 80) = swift_getKeyPath();
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = swift_getKeyPath();
  *(void *)(v0 + 96) = swift_getKeyPath();
  *(void *)(v0 + 104) = swift_getKeyPath();
  *(void *)(v0 + 112) = swift_getKeyPath();
  *(void *)(v0 + 120) = swift_getKeyPath();
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = swift_getKeyPath();
  uint64_t result = sub_20B7D3C58();
  qword_2676A3C90 = v0;
  return result;
}

uint64_t sub_20B785220()
{
  if (qword_26769AF40 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B78527C@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t sub_20B7852BC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DCB00;
  *(void *)(v0 + 32) = swift_getKeyPath();
  *(void *)(v0 + 40) = swift_getKeyPath();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = swift_getKeyPath();
  *(void *)(v0 + 56) = swift_getKeyPath();
  *(void *)(v0 + 64) = swift_getKeyPath();
  uint64_t result = sub_20B7D3C58();
  qword_2676A3C98 = v0;
  return result;
}

id sub_20B785370()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DB9D0;
  uint64_t v1 = (void *)*MEMORY[0x263EFDFC8];
  id v5 = (id)*MEMORY[0x263EFDFB8];
  uint64_t v2 = *MEMORY[0x263EFDFB8];
  uint64_t v6 = v0;
  *(void *)(v0 + 32) = *MEMORY[0x263EFDFC8];
  *(void *)(v0 + 40) = v2;
  sub_20B7D3C58();
  qword_2676A3CA0 = v6;
  id v3 = v1;
  return v5;
}

uint64_t sub_20B785404()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B620);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DC710;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_20B7DB9C0;
  *(void *)(v1 + 32) = swift_getKeyPath();
  *(void *)(v1 + 40) = swift_getKeyPath();
  *(void *)(v1 + 4_Block_object_dispose(&a9, 8) = swift_getKeyPath();
  sub_20B7D3C58();
  *(void *)(v0 + 32) = v1;
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20B7DB6D0;
  *(void *)(v2 + 32) = swift_getKeyPath();
  sub_20B7D3C58();
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DB6D0;
  *(void *)(v3 + 32) = swift_getKeyPath();
  sub_20B7D3C58();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DB9D0;
  *(void *)(v4 + 32) = swift_getKeyPath();
  *(void *)(v4 + 40) = swift_getKeyPath();
  sub_20B7D3C58();
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B7DB6D0;
  *(void *)(v5 + 32) = swift_getKeyPath();
  uint64_t result = sub_20B7D3C58();
  *(void *)(v0 + 64) = v5;
  qword_2676A3CA8 = v0;
  return result;
}

char *keypath_get_selector_nickname()
{
  return sel_nickname;
}

void sub_20B785604(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_previousFamilyName()
{
  return sel_previousFamilyName;
}

void sub_20B785630(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_organizationName()
{
  return sel_organizationName;
}

void sub_20B785664(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

id sub_20B785684()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DCB10;
  uint64_t v1 = (void *)*MEMORY[0x263EFE088];
  uint64_t v2 = (void *)*MEMORY[0x263EFE090];
  uint64_t v3 = (void **)MEMORY[0x263EFE080];
  *(void *)(v0 + 32) = *MEMORY[0x263EFE088];
  *(void *)(v0 + 40) = v2;
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)*MEMORY[0x263EFE050];
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = *v3;
  *(void *)(v0 + 56) = v5;
  uint64_t v6 = (void *)*MEMORY[0x263EFE0B8];
  uint64_t v7 = (void *)*MEMORY[0x263EFE018];
  *(void *)(v0 + 64) = *MEMORY[0x263EFE0B8];
  *(void *)(v0 + 72) = v7;
  uint64_t v8 = (void *)*MEMORY[0x263EFDF70];
  id v18 = (id)*MEMORY[0x263EFE068];
  uint64_t v9 = *MEMORY[0x263EFE068];
  uint64_t v19 = v0;
  *(void *)(v0 + 80) = *MEMORY[0x263EFDF70];
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v9;
  sub_20B7D3C58();
  qword_2676A3CB0 = v19;
  id v10 = v1;
  id v11 = v2;
  id v12 = v4;
  id v13 = v5;
  id v14 = v6;
  id v15 = v7;
  id v16 = v8;
  return v18;
}

char *keypath_get_selector_givenName()
{
  return sel_givenName;
}

void sub_20B7857A8(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_middleName()
{
  return sel_middleName;
}

void sub_20B7857D4(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_familyName()
{
  return sel_familyName;
}

void sub_20B785800(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_namePrefix()
{
  return sel_namePrefix;
}

void sub_20B78582C(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

char *keypath_get_selector_nameSuffix()
{
  return sel_nameSuffix;
}

void sub_20B785858(id *a1@<X0>, uint64_t *a2@<X8>)
{
}

ValueMetadata *type metadata accessor for ContactCardHeaderGroup()
{
  return &type metadata for ContactCardHeaderGroup;
}

uint64_t sub_20B78588C()
{
  if (qword_26769AF48 != -1) {
    swift_once();
  }
  uint64_t v0 = qword_2676A3C98;
  if (qword_26769AF58 != -1) {
    swift_once();
  }
  unint64_t v1 = MEMORY[0x263F8EE78];
  unint64_t v6 = MEMORY[0x263F8EE78];
  uint64_t v2 = *(void *)(qword_2676A3CA8 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    for (uint64_t i = 0; i != v2; ++i)
    {
      unint64_t v4 = swift_bridgeObjectRetain();
      sub_20B7C1580(v4);
    }
    swift_bridgeObjectRelease_n();
    unint64_t v1 = v6;
  }
  swift_bridgeObjectRetain();
  sub_20B7C1580(v1);
  return v0;
}

uint64_t sub_20B7859A0(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = HIBYTE(a2) & 0xF;
  if ((a2 & 0x2000000000000000) == 0) {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2) {
    return sub_20B7D3BB8();
  }
  else {
    return 0;
  }
}

void sub_20B7859E8()
{
  uint64_t v0 = (void *)sub_20B7D3AF8();
  id v1 = objc_msgSend(self, sel_bundleWithIdentifier_, v0);

  qword_2676A3CB8 = (uint64_t)v1;
}

unint64_t sub_20B785A58(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B648);
    id v1 = (void *)sub_20B7D3F68();
  }
  else
  {
    id v1 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v23 = a1 + 64;
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(a1 + 64);
  int64_t v22 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      uint64_t v10 = (v4 - 1) & v4;
      unint64_t v11 = __clz(__rbit64(v4)) | (v6 << 6);
      int64_t v12 = v6;
    }
    else
    {
      int64_t v13 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_40;
      }
      if (v13 >= v22)
      {
LABEL_36:
        sub_20B789BAC();
        return (unint64_t)v1;
      }
      unint64_t v14 = *(void *)(v23 + 8 * v13);
      int64_t v12 = v6 + 1;
      if (!v14)
      {
        int64_t v12 = v6 + 2;
        if (v6 + 2 >= v22) {
          goto LABEL_36;
        }
        unint64_t v14 = *(void *)(v23 + 8 * v12);
        if (!v14)
        {
          int64_t v12 = v6 + 3;
          if (v6 + 3 >= v22) {
            goto LABEL_36;
          }
          unint64_t v14 = *(void *)(v23 + 8 * v12);
          if (!v14)
          {
            int64_t v12 = v6 + 4;
            if (v6 + 4 >= v22) {
              goto LABEL_36;
            }
            unint64_t v14 = *(void *)(v23 + 8 * v12);
            if (!v14)
            {
              int64_t v15 = v6 + 5;
              if (v6 + 5 >= v22) {
                goto LABEL_36;
              }
              unint64_t v14 = *(void *)(v23 + 8 * v15);
              if (!v14)
              {
                while (1)
                {
                  int64_t v12 = v15 + 1;
                  if (__OFADD__(v15, 1)) {
                    goto LABEL_41;
                  }
                  if (v12 >= v22) {
                    goto LABEL_36;
                  }
                  unint64_t v14 = *(void *)(v23 + 8 * v12);
                  ++v15;
                  if (v14) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v12 = v6 + 5;
            }
          }
        }
      }
LABEL_26:
      uint64_t v10 = (v14 - 1) & v14;
      unint64_t v11 = __clz(__rbit64(v14)) + (v12 << 6);
    }
    sub_20B789B50(*(void *)(a1 + 48) + 40 * v11, (uint64_t)v31);
    sub_20B76D12C(*(void *)(a1 + 56) + 32 * v11, (uint64_t)v32 + 8);
    v29[0] = v32[0];
    v29[1] = v32[1];
    uint64_t v30 = v33;
    v28[0] = v31[0];
    v28[1] = v31[1];
    sub_20B789B50((uint64_t)v28, (uint64_t)v27);
    if (!swift_dynamicCast())
    {
      sub_20B76D2E4((uint64_t)v28, &qword_26769B650);
LABEL_35:
      swift_bridgeObjectRelease();
      sub_20B789BAC();
      swift_release();
      return 0;
    }
    sub_20B76D12C((uint64_t)v29 + 8, (uint64_t)v27);
    sub_20B76D2E4((uint64_t)v28, &qword_26769B650);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_35;
    }
    unint64_t result = sub_20B77CED4(v25, v26);
    if (v16)
    {
      uint64_t v7 = 16 * result;
      uint64_t v8 = (uint64_t *)(v1[6] + 16 * result);
      swift_bridgeObjectRelease();
      *uint64_t v8 = v25;
      v8[1] = v26;
      uint64_t v9 = (uint64_t *)(v1[7] + v7);
      unint64_t result = swift_bridgeObjectRelease();
      *uint64_t v9 = v25;
      v9[1] = v26;
      goto LABEL_8;
    }
    if (v1[2] >= v1[3]) {
      break;
    }
    *(void *)((char *)v1 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v17 = (uint64_t *)(v1[6] + 16 * result);
    uint64_t *v17 = v25;
    v17[1] = v26;
    id v18 = (uint64_t *)(v1[7] + 16 * result);
    uint64_t *v18 = v25;
    v18[1] = v26;
    uint64_t v19 = v1[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_39;
    }
    v1[2] = v21;
LABEL_8:
    int64_t v6 = v12;
    unint64_t v4 = v10;
  }
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_20B785E24(uint64_t a1, char *a2)
{
  uint64_t v4 = sub_20B7D3648();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3298();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
  {
    sub_20B76D2E4((uint64_t)v9, &qword_26769B608);
    sub_20B7D3538();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, 1, 1, v4);
  }
  else
  {
    uint64_t v47 = a1;
    uint64_t v48 = a2;
    unint64_t v11 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    uint64_t v52 = v4;
    uint64_t v49 = v11;
    uint64_t v50 = v5 + 32;
    v11((char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v4);
    uint64_t v12 = sub_20B7D3568();
    uint64_t v46 = v42;
    int64_t v13 = *(void **)(v12 - 8);
    uint64_t v14 = v13[8];
    MEMORY[0x270FA5388](v12);
    uint64_t v51 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v15 = sub_20B7D3588();
    v42[1] = v14;
    MEMORY[0x270FA5388](v15);
    char v16 = (char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v17 = (void (*)(void))v13[13];
    unsigned int v45 = *MEMORY[0x263F07738];
    uint64_t v44 = (void (*)(char *, void, uint64_t))v17;
    v17(v16);
    char v18 = sub_20B7D3558();
    uint64_t v19 = (void (*)(char *, uint64_t))v13[1];
    v19(v16, v12);
    uint64_t v43 = v19;
    uint64_t v20 = ((uint64_t (*)(char *, uint64_t))v19)(v16, v12);
    if (v18)
    {
      uint64_t v46 = v42;
      MEMORY[0x270FA5388](v20);
      unint64_t v21 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
      sub_20B7D35E8();
      int64_t v22 = self;
      uint64_t v23 = (void *)sub_20B7D35D8();
      LODWORD(v22) = objc_msgSend(v22, sel_isGregorianDerivedCalendar_, v23);

      if (v22)
      {
        uint64_t v26 = v51;
        uint64_t v25 = v52;
        (*(void (**)(char *, uint64_t))(v5 + 8))(v51, v52);
        v49(v26, (char *)v42 - v21, v25);
      }
      else
      {
        uint64_t v27 = MEMORY[0x270FA5388](v24);
        MEMORY[0x270FA5388](v27);
        uint64_t v29 = (char *)v42 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
        v44(v29, v45, v12);
        sub_20B7D3578();
        v43(v29, v12);
        uint64_t v30 = *(void (**)(char *, uint64_t))(v5 + 8);
        uint64_t v31 = v52;
        v30((char *)v42 - v21, v52);
        uint64_t v32 = v51;
        v30(v51, v31);
        v49(v32, (char *)v42 - v21, v31);
      }
    }
    uint64_t v33 = self;
    uint64_t v34 = v51;
    unint64_t v35 = (void *)sub_20B7D35D8();
    id v36 = objc_msgSend(v35, sel_calendarIdentifier);

    sub_20B7D3B08();
    uint64_t v37 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    id v38 = objc_msgSend(v33, sel_localeForCalendarID_, v37);

    sub_20B7D3528();
    uint64_t v39 = v48;
    uint64_t v40 = v34;
    uint64_t v41 = v52;
    v49(v48, v40, v52);
    return (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v39, 0, 1, v41);
  }
}

uint64_t sub_20B786388@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unint64_t v113 = a2;
  uint64_t v109 = a1;
  v118[1] = *MEMORY[0x263EF8340];
  uint64_t v4 = sub_20B7D34D8();
  uint64_t v110 = *(void *)(v4 - 8);
  uint64_t v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(v110 + 56);
  uint64_t v111 = v4;
  v5(a3, 1, 1);
  uint64_t v6 = sub_20B7D3648();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v116 = v6;
  uint64_t v117 = v7;
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  sub_20B7D3608();
  uint64_t v9 = sub_20B7D3678();
  uint64_t v10 = *(char **)(v9 - 8);
  uint64_t v11 = *((void *)v10 + 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B610);
  MEMORY[0x270FA5388](v13 - 8);
  id v115 = v14;
  uint64_t v15 = (char *)&v102 - (((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3658();
  uint64_t v108 = *((void *)v10 + 6);
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v108)(v15, 1, v9);
  id v106 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = a3;
  if (v16 == 1)
  {
    uint64_t v17 = sub_20B76D2E4((uint64_t)v15, &qword_26769B610);
  }
  else
  {
    uint64_t v18 = (*((uint64_t (**)(char *, char *, uint64_t))v10 + 4))((char *)&v102 - v12, v15, v9);
    MEMORY[0x270FA5388](v18);
    (*((void (**)(char *, char *, uint64_t))v10 + 2))((char *)&v102 - v12, (char *)&v102 - v12, v9);
    sub_20B7D3628();
    uint64_t v17 = (*((uint64_t (**)(char *, uint64_t))v10 + 1))((char *)&v102 - v12, v9);
  }
  uint64_t v105 = &v102;
  MEMORY[0x270FA5388](v17);
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  uint64_t v20 = *(uint64_t **)(*(void *)(v19 - 8) + 64);
  MEMORY[0x270FA5388](v19 - 8);
  sub_20B784F44(v113, (uint64_t)&v102 - (((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v21 = v116;
  uint64_t v22 = v117;
  id v112 = *(uint64_t **)(v117 + 48);
  unint64_t v113 = v117 + 48;
  int v23 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)((char *)&v102 - (((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v116);
  uint64_t v114 = (char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v23 == 1)
  {
    uint64_t v24 = sub_20B7D3568();
    uint64_t v103 = &v102;
    unint64_t v104 = v10;
    uint64_t v25 = *(void *)(v24 - 8);
    MEMORY[0x270FA5388](v24);
    uint64_t v27 = (char *)&v102 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v27, *MEMORY[0x263F07738], v24);
    uint64_t v10 = v104;
    sub_20B7D3578();
    (*(void (**)(char *, uint64_t))(v25 + 8))(v27, v24);
    uint64_t v28 = sub_20B76D2E4((uint64_t)&v102 - (((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26769B608);
  }
  else
  {
    uint64_t v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v22 + 32))((char *)&v102 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), (char *)&v102 - (((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0), v21);
  }
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  unint64_t v30 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (char *)&v102 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3658();
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(v32, 1, v9) == 1)
  {
    sub_20B76D2E4((uint64_t)v32, &qword_26769B610);
  }
  else
  {
    uint64_t v33 = (*((uint64_t (**)(char *, char *, uint64_t))v10 + 4))((char *)&v102 - v30, v32, v9);
    MEMORY[0x270FA5388](v33);
    (*((void (**)(char *, char *, uint64_t))v10 + 2))((char *)&v102 - v30, (char *)&v102 - v30, v9);
    sub_20B7D3628();
    (*((void (**)(char *, uint64_t))v10 + 1))((char *)&v102 - v30, v9);
  }
  uint64_t v34 = sub_20B7D32C8();
  uint64_t v35 = *(void *)(*(void *)(v34 - 8) + 64);
  MEMORY[0x270FA5388](v34);
  id v36 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v38 = *(void (**)(char *, uint64_t))(v37 + 16);
  uint64_t v39 = v109;
  uint64_t v108 = v37;
  uint64_t v109 = v40;
  v38(v36, v39);
  sub_20B7D3228();
  sub_20B7D3268();
  uint64_t v41 = sub_20B7D3278();
  MEMORY[0x270FA5388](v41);
  sub_20B7D3658();
  sub_20B7D32B8();
  uint64_t v42 = sub_20B7D3238();
  uint64_t v43 = v116;
  if ((v44 & 1) == 0 && v42 == 0x7FFFFFFFFFFFFFFFLL) {
    goto LABEL_12;
  }
  MEMORY[0x270FA5388](v42);
  unint64_t v66 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3298();
  int v67 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)((char *)&v102 - v66, 1, v43);
  uint64_t v42 = sub_20B76D2E4((uint64_t)&v102 - v66, &qword_26769B608);
  if (v67 == 1) {
    goto LABEL_18;
  }
  uint64_t v68 = (void *)sub_20B7D31C8();
  id v115 = v20;
  MEMORY[0x270FA5388](v68);
  sub_20B7D3298();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)((char *)&v102 - v66, 1, v43);
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v69 = self;
  uint64_t v70 = (void *)sub_20B7D35D8();
  (*(void (**)(char *, uint64_t))(v117 + 8))((char *)&v102 - v66, v43);
  unsigned int v71 = objc_msgSend(v69, sel_isYearlessDate_forCalendar_, v68, v70);

  uint64_t v20 = v115;
  if (v71)
  {
LABEL_12:
    id v115 = &v102;
    MEMORY[0x270FA5388](v42);
    unint64_t v45 = ((unint64_t)v20 + 15) & 0xFFFFFFFFFFFFFFF0;
    sub_20B7D3298();
    int v46 = ((uint64_t (*)(char *, uint64_t, uint64_t))v112)((char *)&v102 - v45, 1, v43);
    uint64_t v47 = sub_20B76D2E4((uint64_t)&v102 - v45, &qword_26769B608);
    uint64_t v48 = v117;
    uint64_t v49 = v106;
    if (v46 == 1)
    {
      MEMORY[0x270FA5388](v47);
      (*(void (**)(char *, char *, uint64_t))(v48 + 16))((char *)&v102 - v45, v49, v43);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v48 + 56))((char *)&v102 - v45, 0, 1, v43);
      sub_20B7D32A8();
    }
    v118[0] = 0;
    uint64_t v50 = v114;
    uint64_t v51 = (void *)sub_20B7D35D8();
    id v52 = objc_msgSend(self, sel_distantFuture);
    uint64_t v53 = v110;
    MEMORY[0x270FA5388](v52);
    uint64_t v55 = (char *)&v102 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D34B8();

    uint64_t v56 = (void *)sub_20B7D34A8();
    (*(void (**)(char *, uint64_t))(v53 + 8))(v55, v111);
    objc_msgSend(v51, sel_getEra_year_month_day_fromDate_, v118, 0, 0, 0, v56);

    sub_20B7D3208();
    uint64_t v57 = self;
    uint64_t v58 = (void *)sub_20B7D31C8();
    uint64_t v59 = (void *)sub_20B7D35D8();
    objc_msgSend(v57, sel_setYearlessYear_forCalendar_, v58, v59);

    uint64_t v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B618);
    MEMORY[0x270FA5388](v60 - 8);
    uint64_t v62 = (char *)&v102 - ((v61 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D35F8();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v36, v109);
    uint64_t v63 = *(void (**)(char *, uint64_t))(v48 + 8);
    v63(v50, v43);
    v63(v49, v43);
    uint64_t v64 = v107;
    sub_20B76D2E4(v107, &qword_26769B618);
    return sub_20B781204((uint64_t)v62, v64, &qword_26769B618);
  }
  else
  {
LABEL_18:
    uint64_t v72 = v110;
    MEMORY[0x270FA5388](v42);
    long long v74 = (char *)&v102 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B618);
    MEMORY[0x270FA5388](v75 - 8);
    id v115 = v76;
    unint64_t v113 = ((unint64_t)v76 + 15) & 0xFFFFFFFFFFFFFFF0;
    unint64_t v77 = (char *)&v102 - v113;
    sub_20B7D3218();
    uint64_t v78 = v111;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v77, 1, v111) == 1)
    {
      uint64_t v79 = sub_20B76D2E4((uint64_t)v77, &qword_26769B618);
      MEMORY[0x270FA5388](v79);
      uint64_t v80 = (char *)&v102 - v113;
      uint64_t v81 = v106;
      sub_20B7D35F8();
      (*(void (**)(char *, uint64_t))(v108 + 8))(v36, v109);
      uint64_t v82 = *(void (**)(char *, uint64_t))(v117 + 8);
      v82(v114, v43);
      v82(v81, v43);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v74, v77, v78);
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B660);
      uint64_t v84 = sub_20B7D3638();
      uint64_t v85 = *(void *)(v84 - 8);
      uint64_t v86 = *(void *)(v85 + 72);
      uint64_t v87 = *(unsigned __int8 *)(v85 + 80);
      id v112 = &v102;
      uint64_t v88 = (v87 + 32) & ~v87;
      uint64_t v103 = (uint64_t *)(4 * v86);
      uint64_t v89 = swift_allocObject();
      *(_OWORD *)(v89 + 16) = xmmword_20B7DC710;
      uint64_t v90 = v89 + v88;
      unint64_t v91 = *(void (**)(uint64_t, void, uint64_t))(v85 + 104);
      v91(v90, *MEMORY[0x263F07868], v84);
      v91(v90 + v86, *MEMORY[0x263F078B0], v84);
      unint64_t v104 = v74;
      v91(v90 + 2 * v86, *MEMORY[0x263F07898], v84);
      v91(v90 + 3 * v86, *MEMORY[0x263F07880], v84);
      v91((uint64_t)v103 + v90, *MEMORY[0x263F07900], v84);
      sub_20B787964(v89);
      swift_setDeallocating();
      swift_arrayDestroy();
      uint64_t v92 = swift_deallocClassInstance();
      MEMORY[0x270FA5388](v92);
      uint64_t v93 = v104;
      uint64_t v94 = v114;
      sub_20B7D35A8();
      uint64_t v95 = swift_bridgeObjectRelease();
      MEMORY[0x270FA5388](v95);
      uint64_t v80 = (char *)&v102 - v113;
      sub_20B7D35F8();
      uint64_t v96 = *(void (**)(char *, uint64_t))(v108 + 8);
      uint64_t v97 = (char *)&v102 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
      uint64_t v98 = v109;
      v96(v97, v109);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v93, v111);
      v96(v36, v98);
      v99 = *(void (**)(char *, uint64_t))(v117 + 8);
      id v100 = v94;
      uint64_t v101 = v116;
      v99(v100, v116);
      v99(v106, v101);
    }
    uint64_t v83 = v107;
    sub_20B76D2E4(v107, &qword_26769B618);
    return sub_20B781204((uint64_t)v80, v83, &qword_26769B618);
  }
}

uint64_t ContactCardValueFormatter.deinit()
{
  return v0;
}

uint64_t _s14ContactsUICore25ContactCardValueFormatterCfD_0()
{
  return swift_deallocClassInstance();
}

uint64_t sub_20B78738C(void *a1)
{
  id v2 = objc_msgSend(self, sel_stringFromPostalAddress_style_, a1, 0);
  uint64_t v3 = sub_20B7D3B08();
  unint64_t v5 = v4;

  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    id v26 = objc_msgSend(a1, sel_dictionaryRepresentation);
    if (v26)
    {
      uint64_t v27 = v26;
      uint64_t v28 = sub_20B7D3A38();

      unint64_t v29 = sub_20B785A58(v28);
      swift_bridgeObjectRelease();
      if (v29)
      {
        swift_bridgeObjectRelease();
        unint64_t v41 = v29;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26769B638);
        sub_20B789AF4();
        sub_20B76D0C8();
        uint64_t v3 = sub_20B7D3BE8();
        unint64_t v5 = v30;
        swift_bridgeObjectRelease();
      }
    }
  }
  unint64_t v41 = v3;
  unint64_t v42 = v5;
  id v38 = self;
  id v7 = objc_msgSend(v38, sel_newlineCharacterSet);
  uint64_t v8 = sub_20B7D3118();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  sub_20B7D3108();

  unint64_t v35 = sub_20B76D0C8();
  uint64_t v11 = sub_20B7D3DA8();
  unint64_t v12 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v36 = v9 + 8;
  uint64_t v37 = v8;
  uint64_t v34 = v12;
  v12((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  uint64_t result = swift_bridgeObjectRelease();
  unint64_t v41 = 0;
  unint64_t v42 = 0xE000000000000000;
  uint64_t v14 = v11;
  uint64_t v15 = *(void *)(v11 + 16);
  if (v15)
  {
    int v32 = 0;
    uint64_t v16 = 0;
    uint64_t v33 = -v15;
    uint64_t v31 = v11 + 40;
    do
    {
      uint64_t v17 = (unint64_t *)(v31 + 16 * v16++);
      while (1)
      {
        if ((unint64_t)(v16 - 1) >= *(void *)(v14 + 16))
        {
          __break(1u);
          return result;
        }
        unint64_t v18 = *v17;
        uint64_t v39 = *(v17 - 1);
        unint64_t v40 = v18;
        swift_bridgeObjectRetain();
        id v19 = objc_msgSend(v38, sel_whitespaceCharacterSet);
        MEMORY[0x270FA5388](v19);
        sub_20B7D3108();

        uint64_t v20 = sub_20B7D3DB8();
        unint64_t v22 = v21;
        v34((char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v37);
        swift_bridgeObjectRelease();
        uint64_t v23 = HIBYTE(v22) & 0xF;
        if ((v22 & 0x2000000000000000) == 0) {
          uint64_t v23 = v20 & 0xFFFFFFFFFFFFLL;
        }
        if (v23) {
          break;
        }
        uint64_t result = swift_bridgeObjectRelease();
        ++v16;
        v17 += 2;
        if (v33 + v16 == 1) {
          goto LABEL_17;
        }
      }
      uint64_t v24 = 10;
      if (v32)
      {
        unint64_t v25 = 0xE100000000000000;
      }
      else
      {
        uint64_t v24 = 0;
        unint64_t v25 = 0xE000000000000000;
      }
      uint64_t v39 = v24;
      unint64_t v40 = v25;
      swift_bridgeObjectRetain();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      MEMORY[0x210537900](v39, v40);
      uint64_t result = swift_bridgeObjectRelease();
      int v32 = 1;
    }
    while (v33 + v16);
  }
LABEL_17:
  swift_bridgeObjectRelease();
  return v41;
}

id sub_20B787790()
{
  id v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F08788]), sel_init);
  objc_msgSend(v0, sel_setTimeStyle_, 0);
  objc_msgSend(v0, sel_setDateStyle_, 3);
  uint64_t v1 = sub_20B7D3678();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  unint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B610);
  MEMORY[0x270FA5388](v5 - 8);
  id v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3658();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_20B76D2E4((uint64_t)v7, &qword_26769B610);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    uint64_t v8 = (void *)sub_20B7D3668();
    objc_msgSend(v0, sel_setTimeZone_, v8);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v0;
}

uint64_t sub_20B787964(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B668);
    uint64_t v3 = sub_20B7D3E78();
    uint64_t v36 = v3 + 56;
    uint64_t result = sub_20B7D3638();
    uint64_t v5 = result;
    uint64_t v6 = 0;
    uint64_t v7 = *(void *)(result - 8);
    uint64_t v8 = *(void (**)(char *))(v7 + 16);
    uint64_t v34 = v7 + 16;
    unint64_t v35 = v8;
    uint64_t v29 = a1 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    uint64_t v9 = v3;
    uint64_t v37 = *(void *)(v7 + 72);
    uint64_t v33 = *(void *)(v7 + 64);
    uint64_t v10 = (uint64_t (**)(char *, uint64_t))(v7 + 8);
    uint64_t v27 = v1;
    uint64_t v28 = (uint64_t (**)(unint64_t, char *, uint64_t))(v7 + 32);
    while (1)
    {
      MEMORY[0x270FA5388](result);
      unint64_t v32 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
      unint64_t v12 = (char *)&v26 - v32;
      v35((char *)&v26 - v32);
      sub_20B789BFC(&qword_26769B670, MEMORY[0x270FA98D0]);
      uint64_t v13 = sub_20B7D3A48();
      uint64_t v14 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v15 = v13 & v14;
      unint64_t v16 = (v13 & (unint64_t)v14) >> 6;
      uint64_t v17 = *(void *)(v36 + 8 * v16);
      uint64_t v18 = 1 << (v13 & v14);
      if ((v18 & v17) != 0)
      {
        unint64_t v30 = &v26;
        uint64_t v31 = v6;
        do
        {
          MEMORY[0x270FA5388](v13);
          id v19 = (char *)&v26 - v32;
          uint64_t v20 = v9;
          ((void (*)(char *, unint64_t, uint64_t))v35)((char *)&v26 - v32, *(void *)(v9 + 48) + v15 * v37, v5);
          sub_20B789BFC(&qword_26769B678, MEMORY[0x270FA98D0]);
          char v21 = sub_20B7D3A68();
          unint64_t v22 = *v10;
          uint64_t v13 = (*v10)(v19, v5);
          if (v21)
          {
            uint64_t result = v22(v12, v5);
            uint64_t v1 = v27;
            uint64_t v9 = v20;
            uint64_t v6 = v31;
            goto LABEL_4;
          }
          unint64_t v15 = (v15 + 1) & v14;
          unint64_t v16 = v15 >> 6;
          uint64_t v17 = *(void *)(v36 + 8 * (v15 >> 6));
          uint64_t v18 = 1 << v15;
          uint64_t v9 = v20;
        }
        while ((v17 & (1 << v15)) != 0);
        uint64_t v1 = v27;
        uint64_t v6 = v31;
      }
      *(void *)(v36 + 8 * v16) = v18 | v17;
      uint64_t result = (*v28)(*(void *)(v9 + 48) + v15 * v37, v12, v5);
      uint64_t v23 = *(void *)(v9 + 16);
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        break;
      }
      *(void *)(v9 + 16) = v25;
LABEL_4:
      if (++v6 == v1) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_20B787C60(unint64_t a1)
{
  uint64_t v2 = sub_20B7D3248();
  char v4 = v3;
  uint64_t v5 = sub_20B7D32C8();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void **)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  v8((char *)v87 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v5);
  if ((v4 & 1) != 0 || v2 != 0x7FFFFFFFFFFFFFFFLL)
  {
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v87 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
  }
  else
  {
    uint64_t v9 = sub_20B7D31E8();
    char v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v87 - (((unint64_t)v7 + 15) & 0xFFFFFFFFFFFFFFF0), v5);
    if ((v11 & 1) == 0 && v9 == 0x7FFFFFFFFFFFFFFFLL) {
      return 0;
    }
  }
  uint64_t v97 = (uint64_t (*)(char *, unint64_t, uint64_t))v8;
  uint64_t v98 = (void *)(v6 + 16);
  v99 = v7;
  uint64_t v94 = v6;
  uint64_t v96 = v5;
  type metadata accessor for ContactCardDateHelper();
  id v102 = sub_20B787790();
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B658);
  uint64_t v103 = v87;
  uint64_t v14 = v13 - 8;
  unint64_t v15 = *(void **)(*(void *)(v13 - 8) + 64);
  MEMORY[0x270FA5388](v13);
  unint64_t v16 = (char *)v87 - (((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v106 = v15;
  unint64_t v107 = ((unint64_t)v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v17 = &v16[*(int *)(v14 + 56)];
  sub_20B785E24((uint64_t)v16, v17);
  uint64_t v18 = sub_20B7D3548();
  unint64_t v108 = a1;
  uint64_t v19 = v18;
  id v100 = v87;
  uint64_t v20 = *(void *)(v18 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)v87 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v104 = v87;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (uint64_t)&v16[*(int *)(v14 + 56)];
  uint64_t v105 = *(void (**)(char *, char *, uint64_t))(v20 + 16);
  v105(v16, v16, v19);
  sub_20B784F44((uint64_t)v17, v24);
  uint64_t v25 = v20;
  uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  uint64_t v101 = v23;
  v26(v23, v16, v19);
  sub_20B76D2E4(v24, &qword_26769B608);
  uint64_t v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  unint64_t v104 = v87;
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v95 = v29;
  unint64_t v30 = (char *)v87 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)v87 - v107;
  unint64_t v32 = (void (*)(char *, char *, uint64_t))v19;
  uint64_t v33 = (char *)v87 + *(int *)(v14 + 56) - v107;
  uint64_t v34 = (char *)v87 - v107;
  unint64_t v107 = (unint64_t)v16;
  v105(v34, v16, v19);
  sub_20B784F44((uint64_t)v17, (uint64_t)v33);
  sub_20B781204((uint64_t)v33, (uint64_t)v30, &qword_26769B608);
  uint64_t v37 = *(void (**)(char *, void (*)(char *, char *, uint64_t)))(v25 + 8);
  uint64_t v36 = v25 + 8;
  unint64_t v35 = v37;
  v37(v31, (void (*)(char *, char *, uint64_t))v19);
  uint64_t v38 = sub_20B7D34D8();
  id v106 = v87;
  uint64_t v39 = *(void *)(v38 - 8);
  MEMORY[0x270FA5388](v38);
  unint64_t v41 = (char *)v87 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B618);
  MEMORY[0x270FA5388](v42 - 8);
  char v44 = (char *)v87 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v45 = v108;
  sub_20B786388(v108, (unint64_t)v30, (uint64_t)v44);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v39 + 48))(v44, 1, v38) == 1)
  {
    sub_20B76D2E4((uint64_t)v44, &qword_26769B618);

    sub_20B76D2E4((uint64_t)v30, &qword_26769B608);
    v35(v101, v32);
    sub_20B76D2E4(v107, &qword_26769B658);
    return 0;
  }
  uint64_t v105 = v32;
  uint64_t v92 = v35;
  uint64_t v93 = v36;
  uint64_t v88 = v30;
  uint64_t v89 = v41;
  uint64_t v90 = v39;
  uint64_t v91 = v38;
  (*(void (**)(char *, char *, uint64_t))(v39 + 32))(v41, v44, v38);
  uint64_t v46 = sub_20B7D3238();
  char v48 = v47;
  v87[1] = v87;
  uint64_t v49 = v99;
  MEMORY[0x270FA5388](v46);
  unint64_t v50 = ((unint64_t)v49 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v51 = (char *)v87 - v50;
  uint64_t v52 = v96;
  uint64_t v53 = v97((char *)v87 - v50, v45, v96);
  if ((v48 & 1) == 0 && v46 == 0x7FFFFFFFFFFFFFFFLL)
  {
    (*(void (**)(char *, uint64_t))(v94 + 8))((char *)v87 - v50, v52);
    uint64_t v54 = v101;
    id v55 = v102;
    uint64_t v56 = v95;
    uint64_t v57 = v105;
LABEL_12:
    uint64_t v58 = self;
    uint64_t v59 = (void *)sub_20B7D3AF8();
    uint64_t v60 = (void *)sub_20B7D3518();
    id v61 = objc_msgSend(v58, sel_dateFormatFromTemplate_options_locale_, v59, 0, v60);

    objc_msgSend(v55, sel_setDateFormat_, v61);
LABEL_17:
    unint64_t v77 = (void *)sub_20B7D3518();
    objc_msgSend(v55, sel_setLocale_, v77);

    MEMORY[0x270FA5388](v78);
    uint64_t v79 = (char *)v87 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v80 = (uint64_t)v88;
    sub_20B784F44((uint64_t)v88, (uint64_t)v79);
    uint64_t v81 = sub_20B7D3648();
    uint64_t v82 = *(void *)(v81 - 8);
    uint64_t v83 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v82 + 48))(v79, 1, v81) != 1)
    {
      uint64_t v83 = (void *)sub_20B7D35D8();
      (*(void (**)(char *, uint64_t))(v82 + 8))(v79, v81);
    }
    objc_msgSend(v55, sel_setCalendar_, v83);

    uint64_t v84 = v89;
    uint64_t v85 = (void *)sub_20B7D34A8();
    id v86 = objc_msgSend(v55, sel_stringFromDate_, v85);

    uint64_t v12 = sub_20B7D3B08();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v84, v91);
    sub_20B76D2E4(v80, &qword_26769B608);
    v92(v54, v57);
    sub_20B76D2E4(v107, &qword_26769B658);
    return v12;
  }
  uint64_t v56 = v95;
  MEMORY[0x270FA5388](v53);
  unint64_t v108 = (v56 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v62 = (char *)v87 - v108;
  sub_20B7D3298();
  uint64_t v63 = sub_20B7D3648();
  uint64_t v64 = *(void *)(v63 - 8);
  v87[0] = *(void *)(v64 + 48);
  int v65 = ((uint64_t (*)(char *, uint64_t, uint64_t))v87[0])(v62, 1, v63);
  uint64_t v66 = sub_20B76D2E4((uint64_t)v62, &qword_26769B608);
  MEMORY[0x270FA5388](v66);
  int v67 = (char *)v87 - v50;
  v97((char *)v87 - v50, (unint64_t)v87 - v50, v52);
  if (v65 == 1)
  {
    uint64_t v68 = *(void (**)(char *, uint64_t))(v94 + 8);
    v68((char *)v87 - v50, v52);
    v68((char *)v87 - v50, v52);
    uint64_t v54 = v101;
    id v55 = v102;
    uint64_t v57 = v105;
    goto LABEL_17;
  }
  v99 = v87;
  uint64_t v69 = (void *)sub_20B7D31C8();
  uint64_t v98 = v87;
  MEMORY[0x270FA5388](v69);
  uint64_t v70 = (char *)v87 - v108;
  sub_20B7D3298();
  uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v87[0])(v70, 1, v63);
  if (result != 1)
  {
    uint64_t v72 = self;
    uint64_t v73 = (void *)sub_20B7D35D8();
    (*(void (**)(char *, uint64_t))(v64 + 8))(v70, v63);
    unsigned int v74 = objc_msgSend(v72, sel_isYearlessDate_forCalendar_, v69, v73);

    uint64_t v75 = *(void (**)(char *, uint64_t))(v94 + 8);
    uint64_t v76 = v96;
    v75(v67, v96);
    v75(v51, v76);
    uint64_t v54 = v101;
    id v55 = v102;
    uint64_t v57 = v105;
    uint64_t v56 = v95;
    if (!v74) {
      goto LABEL_17;
    }
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B788754(void *a1)
{
  id v2 = objc_msgSend(a1, sel_service);
  uint64_t v3 = sub_20B7D3B08();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    sub_20B789BB4();
    swift_getKeyPath();
    char v10 = (void *)sub_20B7D3D18();
    id v8 = objc_msgSend(v10, sel_keyPath);

    if (v8)
    {
      uint64_t v9 = &selRef_localizedStringForKey_;
      goto LABEL_11;
    }
    sub_20B7D3B08();
    id v8 = (id)sub_20B7D3AF8();
    uint64_t v9 = &selRef_localizedStringForKey_;
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  id v7 = objc_msgSend(a1, sel_service);
  if (!v7)
  {
    sub_20B7D3B08();
    id v8 = (id)sub_20B7D3AF8();
    uint64_t v9 = &selRef_localizedStringForService_;
    goto LABEL_10;
  }
  id v8 = v7;
  uint64_t v9 = &selRef_localizedStringForService_;
LABEL_11:
  id v11 = objc_msgSend(self, *v9, v8);

  uint64_t v12 = sub_20B7D3B08();
  return v12;
}

uint64_t sub_20B7888DC(void *a1)
{
  id v2 = objc_msgSend(a1, sel_displayname);
  if (!v2)
  {
LABEL_6:
    id v8 = objc_msgSend(a1, sel_username);
    uint64_t v9 = sub_20B7D3B08();
    unint64_t v11 = v10;

    swift_bridgeObjectRelease();
    uint64_t v12 = HIBYTE(v11) & 0xF;
    if ((v11 & 0x2000000000000000) == 0) {
      uint64_t v12 = v9 & 0xFFFFFFFFFFFFLL;
    }
    if (!v12)
    {
      id v24 = objc_msgSend(a1, sel_userIdentifier);
      goto LABEL_15;
    }
    id v13 = objc_msgSend(a1, sel_service);
    uint64_t v14 = sub_20B7D3B08();
    unint64_t v16 = v15;

    swift_bridgeObjectRelease();
    uint64_t v17 = HIBYTE(v16) & 0xF;
    if ((v16 & 0x2000000000000000) == 0) {
      uint64_t v17 = v14 & 0xFFFFFFFFFFFFLL;
    }
    if (!v17) {
      goto LABEL_13;
    }
    id v18 = objc_msgSend(a1, sel_service);
    uint64_t v19 = sub_20B7D3B08();
    uint64_t v21 = v20;

    uint64_t v36 = sub_20B7D3B08();
    uint64_t v37 = v22;
    sub_20B76D0C8();
    uint64_t v23 = sub_20B7D3DD8();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v23)
    {
LABEL_13:
      id v24 = objc_msgSend(a1, sel_username, v36, v37);
LABEL_15:
      id v25 = v24;
      uint64_t v4 = sub_20B7D3B08();

      return v4;
    }
    id v27 = objc_msgSend(a1, sel_username, v36, v37, v19, v21);
    uint64_t v28 = sub_20B7D3B08();
    unint64_t v30 = v29;

    uint64_t v31 = sub_20B7859A0(v28, v30);
    uint64_t v33 = v32;
    swift_bridgeObjectRelease();
    if (v33)
    {
      if (v31 == 64 && v33 == 0xE100000000000000)
      {
        swift_bridgeObjectRelease();
        goto LABEL_13;
      }
      char v34 = sub_20B7D4018();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_13;
      }
    }
    id v35 = objc_msgSend(a1, sel_username);
    sub_20B7D3B08();

    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    return 64;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_20B7D3B08();
  unint64_t v6 = v5;

  uint64_t v7 = HIBYTE(v6) & 0xF;
  if ((v6 & 0x2000000000000000) == 0) {
    uint64_t v7 = v4 & 0xFFFFFFFFFFFFLL;
  }
  if (!v7)
  {
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  return v4;
}

uint64_t sub_20B788B98(void *a1)
{
  id v2 = objc_msgSend(a1, sel_service);
  uint64_t v3 = sub_20B7D3B08();
  unint64_t v5 = v4;

  swift_bridgeObjectRelease();
  uint64_t v6 = HIBYTE(v5) & 0xF;
  if ((v5 & 0x2000000000000000) == 0) {
    uint64_t v6 = v3 & 0xFFFFFFFFFFFFLL;
  }
  if (v6)
  {
    id v7 = objc_msgSend(a1, sel_service);
    uint64_t v8 = sub_20B7D3B08();

    swift_bridgeObjectRetain();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    sub_20B789BB4();
    swift_getKeyPath();
    unint64_t v10 = (void *)sub_20B7D3D18();
    id v11 = objc_msgSend(v10, sel_keyPath);

    if (!v11)
    {
      sub_20B7D3B08();
      id v11 = (id)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
    }
    id v12 = objc_msgSend(self, sel_localizedStringForKey_, v11);

    uint64_t v9 = sub_20B7D3B08();
  }
  return v9;
}

uint64_t sub_20B788D1C()
{
  uint64_t v0 = sub_20B7D3648();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v18 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B608);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3298();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v1 + 48))(v6, 1, v0) == 1)
  {
    sub_20B76D2E4((uint64_t)v6, &qword_26769B608);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v1 + 32))(v3, v6, v0);
    uint64_t v7 = sub_20B7D3568();
    v18[1] = v18;
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void *)(v8 + 64);
    MEMORY[0x270FA5388](v7);
    uint64_t v10 = sub_20B7D3588();
    MEMORY[0x270FA5388](v10);
    id v11 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *, void, uint64_t))(v8 + 104))(v11, *MEMORY[0x263F07738], v7);
    sub_20B789BFC(&qword_26769B688, MEMORY[0x270FA9848]);
    char v12 = sub_20B7D3A68();
    id v13 = *(void (**)(char *, uint64_t))(v8 + 8);
    v13(v11, v7);
    v13(v11, v7);
    if ((v12 & 1) == 0)
    {
      unint64_t v15 = (void *)sub_20B7D35D8();
      id v16 = objc_msgSend(v15, sel_calendarIdentifier);

      sub_20B7D3B08();
      unint64_t v19 = 0xD000000000000016;
      unint64_t v20 = 0x800000020B7E8150;
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      unint64_t v14 = v19;
      (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
      return v14;
    }
    (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  }
  return 0x7961646874726962;
}

void *sub_20B789098()
{
  if (qword_26769AF68 != -1) {
    swift_once();
  }
  uint64_t v0 = (void *)qword_2676A3CB8;
  if (qword_2676A3CB8)
  {
    uint64_t v1 = (void *)sub_20B7D3AF8();
    uint64_t v2 = (void *)sub_20B7D3AF8();
    uint64_t v3 = (void *)sub_20B7D3AF8();
    id v4 = objc_msgSend(v0, sel_localizedStringForKey_value_table_, v1, v2, v3);

    uint64_t v0 = (void *)sub_20B7D3B08();
  }
  return v0;
}

uint64_t sub_20B7891AC(uint64_t a1)
{
  sub_20B7D3E18();
  uint64_t KeyPath = swift_getKeyPath();
  char v3 = MEMORY[0x210537B80](a1, KeyPath);
  swift_release();
  if ((v3 & 1) == 0)
  {
    uint64_t v4 = swift_getKeyPath();
    char v5 = MEMORY[0x210537B80](a1, v4);
    swift_release();
    if ((v5 & 1) == 0) {
      return 0;
    }
  }
  uint64_t v6 = sub_20B7D3AE8();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3A88();
  uint64_t v10 = sub_20B789C50((uint64_t)v9, MEMORY[0x263F8EE78]);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v10;
}

id _s14ContactsUICore25ContactCardValueFormatterC07displayE8ForAlertySSSo010CNActivityI0CFZ_0(void *a1)
{
  uint64_t v53 = 0;
  unint64_t v54 = 0xE000000000000000;
  id v2 = objc_msgSend(a1, sel_sound);
  if (v2)
  {

    uint64_t v3 = sub_20B7D3AE8();
    uint64_t v4 = *(void *)(v3 - 8);
    MEMORY[0x270FA5388](v3);
    uint64_t v6 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D3A88();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B628);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_20B7DB980;
    id result = objc_msgSend(self, sel_sharedToneManager);
    if (!result)
    {
      __break(1u);
      goto LABEL_50;
    }
    uint64_t v9 = result;
    id v10 = objc_msgSend(a1, sel_sound);
    id v11 = objc_msgSend(v9, sel_nameForToneIdentifier_, v10);

    if (v11)
    {
      uint64_t v12 = sub_20B7D3B08();
      uint64_t v14 = v13;
    }
    else
    {
      uint64_t v12 = 0;
      uint64_t v14 = 0;
    }
    *(void *)(inited + 32) = v12;
    *(void *)(inited + 40) = v14;
    uint64_t v52 = sub_20B789C50((uint64_t)v6, inited);
    unint64_t v15 = v16;
    swift_setDeallocating();
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B630);
    swift_arrayDestroy();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  else
  {
    uint64_t v52 = 0;
    unint64_t v15 = 0;
  }
  id v17 = objc_msgSend(a1, sel_vibration);
  if (!v17)
  {
    uint64_t v29 = 0;
    unint64_t v30 = 0;
    goto LABEL_15;
  }

  uint64_t v18 = sub_20B7D3AE8();
  uint64_t v51 = (uint64_t)&v51;
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3A88();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B628);
  uint64_t v22 = swift_initStackObject();
  *(_OWORD *)(v22 + 16) = xmmword_20B7DB980;
  id result = objc_msgSend(self, sel_sharedVibrationManager, v51);
  if (!result)
  {
LABEL_50:
    __break(1u);
    return result;
  }
  uint64_t v23 = result;
  id v24 = objc_msgSend(a1, sel_vibration);
  id v25 = objc_msgSend(v23, sel_nameOfVibrationWithIdentifier_, v24);

  if (v25)
  {
    uint64_t v26 = sub_20B7D3B08();
    uint64_t v28 = v27;
  }
  else
  {
    uint64_t v26 = 0;
    uint64_t v28 = 0;
  }
  *(void *)(v22 + 32) = v26;
  *(void *)(v22 + 40) = v28;
  uint64_t v29 = sub_20B789C50((uint64_t)v21, v22);
  unint64_t v30 = v31;
  swift_setDeallocating();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B630);
  swift_arrayDestroy();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
LABEL_15:
  uint64_t v32 = v52;
  if (objc_msgSend(a1, sel_ignoreMute))
  {
    uint64_t v33 = sub_20B7D3AE8();
    uint64_t v34 = *(void *)(v33 - 8);
    MEMORY[0x270FA5388](v33);
    uint64_t v36 = (char *)&v51 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D3A88();
    uint64_t v37 = sub_20B789C50((uint64_t)v36, MEMORY[0x263F8EE78]);
    unint64_t v39 = v38;
    (*(void (**)(char *, uint64_t))(v34 + 8))(v36, v33);
    if (!v15) {
      goto LABEL_24;
    }
LABEL_19:
    uint64_t v40 = HIBYTE(v15) & 0xF;
    if ((v15 & 0x2000000000000000) == 0) {
      uint64_t v40 = v32 & 0xFFFFFFFFFFFFLL;
    }
    if (v40) {
      sub_20B7D3B98();
    }
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  uint64_t v37 = 0;
  unint64_t v39 = 0;
  if (v15) {
    goto LABEL_19;
  }
LABEL_24:
  if (v30)
  {
    uint64_t v41 = HIBYTE(v30) & 0xF;
    if ((v30 & 0x2000000000000000) == 0) {
      uint64_t v41 = v29 & 0xFFFFFFFFFFFFLL;
    }
    if (v41)
    {
      uint64_t v42 = v53 & 0xFFFFFFFFFFFFLL;
      if ((v54 & 0x2000000000000000) != 0) {
        uint64_t v42 = HIBYTE(v54) & 0xF;
      }
      if (v42) {
        sub_20B7D3B98();
      }
      sub_20B7D3B98();
    }
    swift_bridgeObjectRelease();
  }
  if (v39)
  {
    uint64_t v43 = HIBYTE(v39) & 0xF;
    if ((v39 & 0x2000000000000000) == 0) {
      uint64_t v43 = v37 & 0xFFFFFFFFFFFFLL;
    }
    if (v43)
    {
      uint64_t v44 = v53 & 0xFFFFFFFFFFFFLL;
      if ((v54 & 0x2000000000000000) != 0) {
        uint64_t v44 = HIBYTE(v54) & 0xF;
      }
      if (v44) {
        sub_20B7D3B98();
      }
      sub_20B7D3B98();
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v45 = v53;
  uint64_t v46 = HIBYTE(v54) & 0xF;
  if ((v54 & 0x2000000000000000) == 0) {
    uint64_t v46 = v53 & 0xFFFFFFFFFFFFLL;
  }
  if (!v46)
  {
    swift_bridgeObjectRelease();
    uint64_t v47 = sub_20B7D3AE8();
    uint64_t v48 = *(void *)(v47 - 8);
    MEMORY[0x270FA5388](v47);
    unint64_t v50 = (char *)&v51 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D3A88();
    uint64_t v45 = sub_20B789C50((uint64_t)v50, MEMORY[0x263F8EE78]);
    (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
  }
  return (id)v45;
}

uint64_t type metadata accessor for ContactCardValueFormatter()
{
  return self;
}

uint64_t method lookup function for ContactCardValueFormatter(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactCardValueFormatter);
}

uint64_t type metadata accessor for ContactCardDateHelper()
{
  return self;
}

unint64_t sub_20B789AF4()
{
  unint64_t result = qword_26769B640;
  if (!qword_26769B640)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B638);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B640);
  }
  return result;
}

uint64_t sub_20B789B50(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_20B789BAC()
{
  return swift_release();
}

unint64_t sub_20B789BB4()
{
  unint64_t result = qword_26769B680;
  if (!qword_26769B680)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26769B680);
  }
  return result;
}

uint64_t sub_20B789BFC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B789C50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  type metadata accessor for ContactCardViewModel();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v8 = objc_msgSend(self, sel_bundleForClass_, ObjCClassFromMetadata);
  uint64_t v9 = sub_20B7D3548();
  MEMORY[0x270FA5388](v9 - 8);
  sub_20B7D3538();
  uint64_t v10 = sub_20B7D3B28();
  int64_t v12 = *(void *)(a2 + 16);
  if (v12)
  {
    v22[1] = v10;
    _OWORD v22[2] = v11;
    uint64_t v26 = MEMORY[0x263F8EE78];
    sub_20B7A20A4(0, v12, 0);
    uint64_t v13 = v26;
    uint64_t v14 = (unint64_t *)(a2 + 40);
    uint64_t v15 = MEMORY[0x263F8D310];
    do
    {
      if (*v14)
      {
        uint64_t v16 = *(v14 - 1);
        unint64_t v17 = *v14;
      }
      else
      {
        uint64_t v16 = 0;
        unint64_t v17 = 0xE000000000000000;
      }
      uint64_t v26 = v13;
      unint64_t v19 = *(void *)(v13 + 16);
      unint64_t v18 = *(void *)(v13 + 24);
      swift_bridgeObjectRetain();
      if (v19 >= v18 >> 1)
      {
        sub_20B7A20A4(v18 > 1, v19 + 1, 1);
        uint64_t v13 = v26;
      }
      uint64_t v24 = v15;
      unint64_t v25 = sub_20B76D068();
      *(void *)&long long v23 = v16;
      *((void *)&v23 + 1) = v17;
      *(void *)(v13 + 16) = v19 + 1;
      sub_20B76D0B0(&v23, v13 + 40 * v19 + 32);
      v14 += 2;
      --v12;
    }
    while (v12);
  }
  uint64_t v20 = sub_20B7D3B18();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t ContactCardGroup.label.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactCardGroup.rowItems.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t ContactCardGroup.items<A>(as:)()
{
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B690);
  sub_20B78A068();
  uint64_t v0 = sub_20B7D3BD8();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_20B789FAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_20B77571C(a1, (uint64_t)v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B6A0);
  int v5 = swift_dynamicCast();
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(a2 - 8) + 56))(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_20B78A04C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_20B789FAC(a1, *(void *)(v2 + 16), a2);
}

unint64_t sub_20B78A068()
{
  unint64_t result = qword_26769B698;
  if (!qword_26769B698)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B690);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B698);
  }
  return result;
}

uint64_t destroy for ContactCardGroup(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_0(a1 + 24);
}

uint64_t initializeWithCopy for ContactCardGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  uint64_t v4 = a2 + 24;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v5;
  uint64_t v6 = v5;
  uint64_t v7 = **(void (***)(uint64_t, uint64_t, uint64_t))(v5 - 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v7(a1 + 24, v4, v6);
  return a1;
}

void *assignWithCopy for ContactCardGroup(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  __swift_assign_boxed_opaque_existential_1(a1 + 3, a2 + 3);
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ContactCardGroup(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_0(a1 + 24);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactCardGroup(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactCardGroup(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactCardGroup()
{
  return &type metadata for ContactCardGroup;
}

void sub_20B78A340()
{
  qword_2676A3CC0 = MEMORY[0x263F8EE78];
}

void sub_20B78A354()
{
  qword_2676A3CC8 = (uint64_t)&unk_26BFC58E8;
}

ValueMetadata *type metadata accessor for ContactCardQuickActionGroup()
{
  return &type metadata for ContactCardQuickActionGroup;
}

uint64_t sub_20B78A378()
{
  if (qword_26769AF70 != -1) {
    swift_once();
  }
  return swift_bridgeObjectRetain();
}

uint64_t static FetchContactIntent.openAppWhenRun.getter()
{
  return 0;
}

uint64_t static FetchContactIntent.isDiscoverable.getter()
{
  return byte_26769B6B0;
}

uint64_t static FetchContactIntent.isDiscoverable.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26769B6B0 = a1;
  return result;
}

uint64_t (*static FetchContactIntent.isDiscoverable.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_20B78A4C0()
{
  uint64_t v0 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v0, qword_26769B6B8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B6B8);
  return sub_20B7D39E8();
}

uint64_t static FetchContactIntent.logger.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78A78C(&qword_26769AF80, MEMORY[0x263F90268], (uint64_t)qword_26769B6B8, a1);
}

uint64_t sub_20B78A57C()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769B6D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B6D0);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static FetchContactIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78A78C(&qword_26769AF88, MEMORY[0x270FA8BC0], (uint64_t)qword_26769B6D0, a1);
}

uint64_t sub_20B78A78C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);
  return v9(a4, v8, v7);
}

uint64_t sub_20B78A82C()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769B6E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B6E8);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static FetchContactIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B6E8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static FetchContactIntent.description.setter(uint64_t a1)
{
  if (qword_26769AF90 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B6E8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static FetchContactIntent.description.modify())()
{
  if (qword_26769AF90 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B6E8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FetchContactIntent.identifiers.getter()
{
  sub_20B7D2CB8();
  return v1;
}

uint64_t sub_20B78AD90@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B78ADDC()
{
  return swift_release();
}

uint64_t FetchContactIntent.identifiers.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*FetchContactIntent.identifiers.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t FetchContactIntent.$identifiers.getter()
{
  return sub_20B7D2CD8();
}

uint64_t FetchContactIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v34 = a1;
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B700);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v31 = *(void *)(v1 - 8);
  uint64_t v32 = v1;
  MEMORY[0x270FA5388](v1);
  uint64_t v35 = (char *)v30 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20B7D3AE8();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3 - 8);
  id v30[2] = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v5 = sub_20B7D3548();
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  v30[1] = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v7 = sub_20B7D33B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  v30[0] = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = *MEMORY[0x263F06D10];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v11((char *)v30 - v30[0], v10, v7);
  sub_20B7D33D8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_20B7D3538();
  MEMORY[0x270FA5388](v17);
  v11((char *)v30 - v30[0], v10, v7);
  sub_20B7D33D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v31 + 56))(v15, 0, 1, v32);
  uint64_t v36 = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B710);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v20 = (char *)v30 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_20B7D3A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  MEMORY[0x270FA5388](v22 - 8);
  uint64_t v24 = (char *)v30 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_20B7D2B18();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v24, 1, 1, v25);
  uint64_t v26 = sub_20B7D2FD8();
  MEMORY[0x270FA5388](v26);
  (*(void (**)(char *, void))(v28 + 104))((char *)v30 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263EFBDC0]);
  uint64_t result = sub_20B7D2D48();
  *uint64_t v34 = result;
  return result;
}

uint64_t FetchContactIntent.perform()(uint64_t a1)
{
  v2[18] = a1;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  v2[19] = swift_task_alloc();
  v2[20] = type metadata accessor for ContactFetchResultEntity();
  v2[21] = swift_task_alloc();
  v2[22] = swift_task_alloc();
  v2[23] = swift_task_alloc();
  uint64_t v3 = sub_20B7D39F8();
  v2[24] = v3;
  v2[25] = *(void *)(v3 - 8);
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *v1;
  v2[26] = v4;
  v2[27] = v5;
  sub_20B7D3CC8();
  v2[28] = sub_20B7D3CB8();
  uint64_t v7 = sub_20B7D3CA8();
  return MEMORY[0x270FA2498](sub_20B78B614, v7, v6);
}

uint64_t sub_20B78B614()
{
  uint64_t v79 = v0;
  uint64_t v78 = *MEMORY[0x263EF8340];
  swift_release();
  if (qword_26769AF10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[26];
  uint64_t v2 = v0[24];
  uint64_t v3 = v0[25];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_2676A3C58);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  sub_20B7D39A8();
  swift_allocObject();
  sub_20B7D3958();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  sub_20B7D3988();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20B7D3968();
  if (qword_26769AF80 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0[24], (uint64_t)qword_26769B6B8);
  swift_retain_n();
  uint64_t v5 = sub_20B7D39D8();
  os_log_type_t v6 = sub_20B7D3D58();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v70 = swift_slowAlloc();
    uint64_t v76 = v70;
    *(_DWORD *)uint64_t v7 = 136315138;
    sub_20B7D2DA8();
    sub_20B7D2CB8();
    swift_release();
    uint64_t v8 = MEMORY[0x2105379C0](v0[16], MEMORY[0x263F8D310]);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[17] = sub_20B77C87C(v8, v10, &v76);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_20B704000, v5, v6, "Search for identifiers: %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v70, -1, -1);
    MEMORY[0x210538E40](v7, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  uint64_t v11 = sub_20B7D3938();
  sub_20B78C33C(v11, v12);
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  sub_20B78CB24();
  id v14 = objc_allocWithZone(MEMORY[0x263EFEA18]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  uint64_t v15 = sub_20B7D3C28();
  swift_bridgeObjectRelease();
  id v16 = objc_msgSend(v14, sel_initWithKeysToFetch_, v15);

  uint64_t v17 = self;
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  uint64_t v18 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v17, sel_predicateForContactsWithIdentifiers_, v18);

  objc_msgSend(v16, sel_setPredicate_, v19);
  v0[9] = MEMORY[0x263F8EE78];
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = v0 + 9;
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = sub_20B78E0A0;
  *(void *)(v21 + 24) = v20;
  v0[6] = sub_20B78E0B8;
  v0[7] = v21;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_20B78D0EC;
  v0[5] = &block_descriptor_0;
  uint64_t v22 = _Block_copy(v0 + 2);
  sub_20B7D2DA8();
  swift_release();
  v0[11] = 0;
  unsigned int v23 = objc_msgSend(v13, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v16, v0 + 11, v22);
  _Block_release(v22);
  id v24 = (id)v0[11];
  LOBYTE(v15) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v15)
  {
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
  }
  if (v23)
  {
    uint64_t v25 = self;
    sub_20B78E0F8();
    swift_bridgeObjectRetain();
    uint64_t v26 = (void *)sub_20B7D3C28();
    swift_bridgeObjectRelease();
    id v27 = objc_msgSend(v25, sel_dataWithContacts_, v26);

    uint64_t v28 = sub_20B7D3488();
    unint64_t v30 = v29;

    sub_20B773108(v28, v30);
    uint64_t v31 = sub_20B7D39D8();
    os_log_type_t v32 = sub_20B7D3D38();
    uint64_t v74 = v28;
    uint64_t v69 = v16;
    unsigned int v71 = v13;
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v33 = 134217984;
      uint64_t v34 = v33;
      uint64_t v35 = 0;
      switch(v30 >> 62)
      {
        case 1uLL:
          LODWORD(v35) = HIDWORD(v74) - v74;
          if (__OFSUB__(HIDWORD(v74), v74)) {
            goto LABEL_27;
          }
          uint64_t v35 = (int)v35;
LABEL_18:
          v0[15] = v35;
          sub_20B7D3D88();
          uint64_t v37 = v74;
          sub_20B76C024(v74, v30);
          _os_log_impl(&dword_20B704000, v31, v32, "Encoded contact data: %ld bytes", v34, 0xCu);
          MEMORY[0x210538E40](v34, -1, -1);
          break;
        case 2uLL:
          uint64_t v39 = *(void *)(v74 + 16);
          uint64_t v38 = *(void *)(v74 + 24);
          BOOL v40 = __OFSUB__(v38, v39);
          uint64_t v35 = v38 - v39;
          if (!v40) {
            goto LABEL_18;
          }
          goto LABEL_28;
        case 3uLL:
          goto LABEL_18;
        default:
          uint64_t v35 = BYTE6(v30);
          goto LABEL_18;
      }
    }
    else
    {
      sub_20B76C024(v28, v30);
      uint64_t v37 = v28;
    }
    uint64_t v41 = v0[23];
    uint64_t v68 = v0[22];
    uint64_t v65 = v0[19];

    ContactFetchResultEntity.init()(v41);
    uint64_t v42 = sub_20B7D2AD8();
    uint64_t v43 = *(void *)(v42 - 8);
    uint64_t v44 = swift_task_alloc();
    sub_20B7D2DA8();
    sub_20B773108(v37, v30);
    sub_20B7D2CB8();
    swift_release();
    v0[13] = v0[12];
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B060);
    sub_20B76C9DC();
    uint64_t v45 = sub_20B7D3A58();
    unint64_t v47 = v46;
    swift_bridgeObjectRelease();
    uint64_t v76 = v45;
    unint64_t v77 = v47;
    sub_20B7D3B98();
    uint64_t v48 = sub_20B7D39C8();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 56))(v65, 1, 1, v48);
    unint64_t v72 = v30;
    sub_20B7D2AB8();
    swift_task_alloc();
    (*(void (**)(void))(v43 + 16))();
    sub_20B7D2C08();
    uint64_t v49 = *(void (**)(uint64_t, uint64_t))(v43 + 8);
    uint64_t v66 = v42;
    v49(v44, v42);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_20B78E138(v41, v68);
    unint64_t v50 = sub_20B7D39D8();
    os_log_type_t v51 = sub_20B7D3D38();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = v0[21];
      os_log_type_t type = v51;
      uint64_t v53 = v0[22];
      uint64_t v63 = v53;
      unint64_t v54 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      uint64_t v75 = v73;
      int v67 = v54;
      *(_DWORD *)unint64_t v54 = 136380675;
      sub_20B78E138(v53, v52);
      uint64_t v76 = 0;
      unint64_t v77 = 0xE000000000000000;
      sub_20B7D3E88();
      swift_bridgeObjectRelease();
      uint64_t v76 = 0xD000000000000027;
      unint64_t v77 = 0x800000020B7E82C0;
      uint64_t v55 = swift_task_alloc();
      sub_20B7D2BF8();
      uint64_t v56 = sub_20B7D2AA8();
      unint64_t v58 = v57;
      v49(v55, v66);
      sub_20B7D3468();
      sub_20B7D3B98();
      swift_bridgeObjectRelease();
      sub_20B76C024(v56, v58);
      swift_task_dealloc();
      uint64_t v60 = v76;
      unint64_t v59 = v77;
      sub_20B78E19C(v52);
      v0[14] = sub_20B77C87C(v60, v59, &v75);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      sub_20B78E19C(v63);
      _os_log_impl(&dword_20B704000, v50, type, "Result: %{private}s", v67, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v73, -1, -1);
      MEMORY[0x210538E40](v67, -1, -1);
    }
    else
    {
      sub_20B78E19C(v0[22]);
    }

    uint64_t v61 = v0[23];
    sub_20B78EC64((unint64_t *)&unk_26769B730);
    sub_20B7D2BA8();

    sub_20B76C024(v74, v72);
    sub_20B78E19C(v61);
    swift_bridgeObjectRelease();
    sub_20B7D3948();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_20B7D3398();

    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_20B7D3948();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v36 = (uint64_t (*)(void))v0[1];
  }
  return v36();
}

uint64_t sub_20B78C33C(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v5 = (void *)sub_20B7D3AF8();
  id v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  if (!v6)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    return sub_20B78ECA8((uint64_t)&v20);
  }
  uint64_t v7 = (void *)sub_20B7D3AF8();
  id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

  if (v8)
  {
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_20B76D214((uint64_t)v19, (uint64_t)&v20);
  if (!*((void *)&v21 + 1)) {
    return sub_20B78ECA8((uint64_t)&v20);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    unint64_t v10 = *(void *)&v19[0];
    if (*(void *)&v19[0])
    {
      if (qword_26769AF00 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_20B7D39F8();
      __swift_project_value_buffer(v11, (uint64_t)qword_2676A3C28);
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v12 = sub_20B7D39D8();
      os_log_type_t v13 = sub_20B7D3D58();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v15 = swift_slowAlloc();
        *(void *)&long long v20 = v15;
        *(_DWORD *)uint64_t v14 = 136315650;
        swift_bridgeObjectRetain();
        *(void *)&v19[0] = sub_20B77C87C(a1, a2, (uint64_t *)&v20);
        sub_20B7D3D88();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 2080;
        *(void *)&v19[0] = &type metadata for FetchContactIntent;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26769B818);
        uint64_t v16 = sub_20B7D3B38();
        *(void *)&v19[0] = sub_20B77C87C(v16, v17, (uint64_t *)&v20);
        sub_20B7D3D88();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        *(_WORD *)(v14 + 22) = 2048;
        *(void *)&v19[0] = v10;
        sub_20B7D3D88();
        _os_log_impl(&dword_20B704000, v12, v13, "%s %s sleeping %lu secs before fetch", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x210538E40](v15, -1, -1);
        MEMORY[0x210538E40](v14, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      if (!HIDWORD(v10))
      {
        uint64_t v18 = 1000000 * v10;
        if ((v18 & 0xFFFFFFFF00000000) == 0) {
          return usleep(v18);
        }
        __break(1u);
      }
      uint64_t result = sub_20B7D3F28();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_20B78C718(uint64_t a1, unint64_t a2)
{
  id v4 = objc_allocWithZone(MEMORY[0x263EFFA48]);
  uint64_t v5 = (void *)sub_20B7D3AF8();
  id v6 = objc_msgSend(v4, sel_initWithSuiteName_, v5);

  if (!v6)
  {
    long long v20 = 0u;
    long long v21 = 0u;
    return sub_20B78ECA8((uint64_t)&v20);
  }
  uint64_t v7 = (void *)sub_20B7D3AF8();
  id v8 = objc_msgSend(v6, sel_objectForKey_, v7);

  if (v8)
  {
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v19, 0, sizeof(v19));
  }
  sub_20B76D214((uint64_t)v19, (uint64_t)&v20);
  if (!*((void *)&v21 + 1)) {
    return sub_20B78ECA8((uint64_t)&v20);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    unint64_t v10 = *(void *)&v19[0];
    if (*(void *)&v19[0])
    {
      if (qword_26769AF00 != -1) {
        swift_once();
      }
      uint64_t v11 = sub_20B7D39F8();
      __swift_project_value_buffer(v11, (uint64_t)qword_2676A3C28);
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v12 = sub_20B7D39D8();
      os_log_type_t v13 = sub_20B7D3D58();
      if (os_log_type_enabled(v12, v13))
      {
        uint64_t v14 = swift_slowAlloc();
        uint64_t v18 = swift_slowAlloc();
        *(void *)&long long v20 = v18;
        *(_DWORD *)uint64_t v14 = 136315650;
        swift_bridgeObjectRetain();
        *(void *)&v19[0] = sub_20B77C87C(a1, a2, (uint64_t *)&v20);
        sub_20B7D3D88();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v14 + 12) = 2080;
        *(void *)&v19[0] = &type metadata for FetchContactAvatarIntent;
        __swift_instantiateConcreteTypeFromMangledName(&qword_26769B808);
        uint64_t v15 = sub_20B7D3B38();
        *(void *)&v19[0] = sub_20B77C87C(v15, v16, (uint64_t *)&v20);
        sub_20B7D3D88();
        swift_release();
        swift_release();
        swift_bridgeObjectRelease();
        swift_release();
        swift_release();
        *(_WORD *)(v14 + 22) = 2048;
        *(void *)&v19[0] = v10;
        sub_20B7D3D88();
        _os_log_impl(&dword_20B704000, v12, v13, "%s %s sleeping %lu secs before fetch", (uint8_t *)v14, 0x20u);
        swift_arrayDestroy();
        MEMORY[0x210538E40](v18, -1, -1);
        MEMORY[0x210538E40](v14, -1, -1);
      }
      else
      {

        swift_release_n();
        swift_release_n();
        swift_bridgeObjectRelease_n();
      }
      if (!HIDWORD(v10))
      {
        uint64_t v17 = 1000000 * v10;
        if ((v17 & 0xFFFFFFFF00000000) == 0) {
          return usleep(v17);
        }
        __break(1u);
      }
      uint64_t result = sub_20B7D3F28();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_20B78CB24()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DCFE0;
  uint64_t v1 = (void *)*MEMORY[0x263EFDFE0];
  uint64_t v2 = (void *)*MEMORY[0x263EFE020];
  *(void *)(v0 + 32) = *MEMORY[0x263EFDFE0];
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = (void *)*MEMORY[0x263EFE040];
  id v4 = (void *)*MEMORY[0x263EFDFC8];
  uint64_t v5 = (void **)MEMORY[0x263EFE038];
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFE040];
  *(void *)(v0 + 56) = v4;
  id v6 = *v5;
  uint64_t v7 = (void *)*MEMORY[0x263EFDFB8];
  *(void *)(v0 + 64) = *v5;
  *(void *)(v0 + 72) = v7;
  id v8 = (void *)*MEMORY[0x263EFE0B8];
  unint64_t v9 = (void *)*MEMORY[0x263EFE048];
  *(void *)(v0 + 80) = *MEMORY[0x263EFE0B8];
  *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v9;
  unint64_t v10 = (void *)*MEMORY[0x263EFE050];
  uint64_t v81 = (void *)*MEMORY[0x263EFE088];
  uint64_t v11 = *MEMORY[0x263EFE088];
  unint64_t v12 = (void **)MEMORY[0x263EFE090];
  *(void *)(v0 + 96) = *MEMORY[0x263EFE050];
  *(void *)(v0 + 104) = v11;
  uint64_t v82 = *v12;
  uint64_t v85 = (void *)*MEMORY[0x263EFE080];
  uint64_t v13 = *MEMORY[0x263EFE080];
  *(void *)(v0 + 112) = v82;
  *(void *)(v0 + 120) = v13;
  uint64_t v83 = (void *)*MEMORY[0x263EFE068];
  id v86 = (void *)*MEMORY[0x263EFE098];
  uint64_t v14 = *MEMORY[0x263EFE098];
  *(void *)(v0 + 12_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFE068];
  *(void *)(v0 + 136) = v14;
  uint64_t v84 = (void *)*MEMORY[0x263EFDF70];
  uint64_t v87 = (void *)*MEMORY[0x263EFE018];
  uint64_t v15 = *MEMORY[0x263EFE018];
  unint64_t v16 = (void **)MEMORY[0x263EFDF40];
  *(void *)(v0 + 144) = *MEMORY[0x263EFDF70];
  *(void *)(v0 + 152) = v15;
  uint64_t v88 = *v16;
  uint64_t v91 = (void *)*MEMORY[0x263EFDF48];
  uint64_t v17 = *MEMORY[0x263EFDF48];
  *(void *)(v0 + 160) = v88;
  *(void *)(v0 + 16_Block_object_dispose(&a9, 8) = v17;
  uint64_t v89 = (void *)*MEMORY[0x263EFE058];
  uint64_t v92 = (void *)*MEMORY[0x263EFE060];
  uint64_t v18 = *MEMORY[0x263EFE060];
  *(void *)(v0 + 176) = *MEMORY[0x263EFE058];
  *(void *)(v0 + 184) = v18;
  uint64_t v90 = (void *)*MEMORY[0x263EFDFF8];
  uint64_t v93 = (void *)*MEMORY[0x263EFE140];
  uint64_t v19 = *MEMORY[0x263EFE140];
  long long v20 = (void **)MEMORY[0x263EFDFF0];
  *(void *)(v0 + 192) = *MEMORY[0x263EFDFF8];
  *(void *)(v0 + 200) = v19;
  uint64_t v94 = *v20;
  uint64_t v97 = (void *)*MEMORY[0x263EFE148];
  uint64_t v21 = *MEMORY[0x263EFE148];
  *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = v94;
  *(void *)(v0 + 216) = v21;
  uint64_t v95 = (void *)*MEMORY[0x263EFE070];
  uint64_t v98 = (void *)*MEMORY[0x263EFDF80];
  uint64_t v22 = *MEMORY[0x263EFDF80];
  *(void *)(v0 + 224) = *MEMORY[0x263EFE070];
  *(void *)(v0 + 232) = v22;
  uint64_t v96 = (void *)*MEMORY[0x263EFE0A0];
  v99 = (void *)*MEMORY[0x263EFDF68];
  uint64_t v23 = *MEMORY[0x263EFDF68];
  id v24 = (void **)MEMORY[0x263EFE150];
  *(void *)(v0 + 240) = *MEMORY[0x263EFE0A0];
  *(void *)(v0 + 24_Block_object_dispose(&a9, 8) = v23;
  id v100 = *v24;
  id v102 = (void *)*MEMORY[0x263EFE0F8];
  uint64_t v25 = *MEMORY[0x263EFE0F8];
  *(void *)(v0 + 256) = v100;
  *(void *)(v0 + 264) = v25;
  uint64_t v101 = (void *)*MEMORY[0x263EFE110];
  uint64_t v105 = (void *)*MEMORY[0x263EFE010];
  uint64_t v26 = *MEMORY[0x263EFE010];
  *(void *)(v0 + 272) = *MEMORY[0x263EFE110];
  *(void *)(v0 + 280) = v26;
  unint64_t v104 = (void *)*MEMORY[0x263EFDF58];
  uint64_t v27 = *MEMORY[0x263EFDF58];
  *(void *)(v0 + 28_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v0 + 296) = v27;
  uint64_t v103 = (void *)*MEMORY[0x263EFE138];
  uint64_t v28 = *MEMORY[0x263EFDF60];
  unint64_t v107 = (void *)*MEMORY[0x263EFDF60];
  *(void *)(v0 + 304) = *MEMORY[0x263EFE138];
  *(void *)(v0 + 312) = v28;
  id v106 = (void *)*MEMORY[0x263EFE028];
  uint64_t v29 = *MEMORY[0x263EFDF50];
  uint64_t v109 = (void *)*MEMORY[0x263EFDF50];
  *(void *)(v0 + 320) = *MEMORY[0x263EFE028];
  *(void *)(v0 + 32_Block_object_dispose(&a9, 8) = v29;
  unint64_t v108 = (void *)*MEMORY[0x263EFE008];
  uint64_t v30 = *MEMORY[0x263EFE000];
  uint64_t v111 = (void *)*MEMORY[0x263EFE000];
  *(void *)(v0 + 336) = *MEMORY[0x263EFE008];
  *(void *)(v0 + 344) = v30;
  uint64_t v110 = (void *)*MEMORY[0x263EFE030];
  *(void *)(v0 + 352) = *MEMORY[0x263EFE030];
  *(void *)(v0 + 360) = @"imageBackgroundColorsData";
  id v112 = (void *)*MEMORY[0x263EFE158];
  uint64_t v31 = *MEMORY[0x263EFE108];
  uint64_t v114 = (void *)*MEMORY[0x263EFE108];
  *(void *)(v0 + 36_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFE158];
  *(void *)(v0 + 376) = v31;
  unint64_t v113 = (void *)*MEMORY[0x263EFE100];
  uint64_t v32 = *MEMORY[0x263EFE078];
  uint64_t v116 = (void *)*MEMORY[0x263EFE078];
  *(void *)(v0 + 384) = *MEMORY[0x263EFE100];
  *(void *)(v0 + 392) = v32;
  id v115 = (void *)*MEMORY[0x263EFDFC0];
  uint64_t v118 = (void *)*MEMORY[0x263EFDF78];
  *(void *)(v0 + 400) = *MEMORY[0x263EFDFC0];
  *(void *)(v0 + 40_Block_object_dispose(&a9, 8) = v118;
  uint64_t v117 = self;
  id v33 = v2;
  id v34 = v1;
  id v35 = v3;
  id v36 = v4;
  id v37 = v6;
  id v38 = v7;
  id v39 = v8;
  id v40 = v9;
  id v41 = v10;
  id v42 = v81;
  id v43 = v82;
  id v44 = v85;
  id v45 = v83;
  id v46 = v86;
  id v47 = v84;
  id v48 = v87;
  id v49 = v88;
  id v50 = v91;
  id v51 = v89;
  id v52 = v92;
  id v53 = v90;
  id v54 = v93;
  id v55 = v94;
  id v56 = v97;
  id v57 = v95;
  id v58 = v98;
  id v59 = v96;
  id v60 = v99;
  id v61 = v100;
  id v62 = v102;
  id v63 = v101;
  id v64 = v105;
  id v65 = v104;
  id v66 = v103;
  id v67 = v107;
  id v68 = v106;
  id v69 = v109;
  id v70 = v108;
  id v71 = v111;
  id v72 = v110;
  uint64_t v73 = @"imageBackgroundColorsData";
  id v74 = v112;
  id v75 = v114;
  id v76 = v113;
  id v77 = v116;
  id v78 = v115;
  id v79 = v118;
  *(void *)(v0 + 416) = objc_msgSend(v117, sel_descriptorForRequiredKeysForStyle_, 0);
  sub_20B7D3C58();
  return v0;
}

uint64_t sub_20B78D054(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  MEMORY[0x210537990]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_20B7D3C68();
  }
  sub_20B7D3C88();
  return sub_20B7D3C58();
}

uint64_t sub_20B78D0C4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

void sub_20B78D0EC(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

uint64_t ContactFetchResultEntity.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v2 - 8);
  id v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20B7D29A8();
  uint64_t v5 = *(int *)(type metadata accessor for ContactFetchResultEntity() + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769C130);
  uint64_t v6 = sub_20B7D33C8();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = &v21[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v9 - 8);
  sub_20B7D3A88();
  uint64_t v10 = sub_20B7D3548();
  MEMORY[0x270FA5388](v10 - 8);
  sub_20B7D3538();
  uint64_t v11 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v11);
  (*(void (**)(unsigned char *, void))(v13 + 104))(&v21[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  *(void *)(a1 + v5) = MEMORY[0x2105369C0](v8);
  uint64_t v14 = sub_20B7D2AD8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v18 = sub_20B7D39C8();
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v4, 1, 1, v18);
  uint64_t v19 = sub_20B7D2AB8();
  MEMORY[0x270FA5388](v19);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v15 + 16))(&v21[-v17], &v21[-v17], v14);
  sub_20B7D2C08();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v15 + 8))(&v21[-v17], v14);
}

uint64_t ContactFetchResultEntity.contactData.setter(uint64_t a1)
{
  type metadata accessor for ContactFetchResultEntity();
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20B78D5FC@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF88 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B6D0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B78D6A4()
{
  return byte_26769B6B0;
}

uint64_t sub_20B78D6E8(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return FetchContactIntent.perform()(a1);
}

uint64_t sub_20B78D784()
{
  return sub_20B7D2A98();
}

uint64_t static ContactFetchResultEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = sub_20B7D33C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3A88();
  uint64_t v3 = sub_20B7D3548();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3538();
  uint64_t v4 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v0);
  return sub_20B7D3028();
}

uint64_t ContactFetchResultEntity.displayRepresentation.getter()
{
  return sub_20B7D2F38();
}

uint64_t ContactFetchResultEntity.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20B7D3508();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t ContactFetchResultEntity.contactData.getter()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B78DB38(char *a1)
{
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v6((char *)&v9 - v5, a1, v2);
  ResultEntitCGFloat y = type metadata accessor for ContactFetchResultEntity();
  MEMORY[0x270FA5388](ResultEntity);
  v6((char *)&v9 - v5, (char *)&v9 - v5, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))((char *)&v9 - v5, v2);
}

uint64_t (*ContactFetchResultEntity.contactData.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactFetchResultEntity();
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactFetchResultEntity.$contactData.getter()
{
  return sub_20B7D2C18();
}

uint64_t sub_20B78DD20()
{
  return sub_20B7D2998();
}

uint64_t _s14ContactsUICore30ContactAvatarFetchResultEntityV2id10Foundation4UUIDVvg_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_20B7D3508();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);
  return v4(a1, v1, v3);
}

uint64_t sub_20B78DDE4()
{
  return sub_20B7D2FF8();
}

uint64_t sub_20B78DE00()
{
  return sub_20B7D2A28();
}

uint64_t sub_20B78DE5C()
{
  return sub_20B7D2F38();
}

uint64_t sub_20B78DE8C()
{
  return sub_20B7D3058();
}

uint64_t ContactFetchResultEntity.description.getter()
{
  sub_20B7D3E88();
  swift_bridgeObjectRelease();
  v8[0] = 0xD000000000000027;
  v8[1] = 0x800000020B7E82C0;
  uint64_t v0 = sub_20B7D2AD8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for ContactFetchResultEntity();
  sub_20B7D2BF8();
  uint64_t v4 = sub_20B7D2AA8();
  unint64_t v6 = v5;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_20B7D3468();
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  sub_20B76C024(v4, v6);
  return v8[0];
}

uint64_t type metadata accessor for ContactFetchResultEntity()
{
  uint64_t result = qword_26769B7D0;
  if (!qword_26769B7D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B78E090()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_20B78E0A0(void *a1, uint64_t a2)
{
  return sub_20B78D054(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_20B78E0A8()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B78E0B8()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_20B7D2DA8();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

unint64_t sub_20B78E0F8()
{
  unint64_t result = qword_26769B040;
  if (!qword_26769B040)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26769B040);
  }
  return result;
}

uint64_t sub_20B78E138(uint64_t a1, uint64_t a2)
{
  ResultEntitCGFloat y = type metadata accessor for ContactFetchResultEntity();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(ResultEntity - 8) + 16))(a2, a1, ResultEntity);
  return a2;
}

uint64_t sub_20B78E19C(uint64_t a1)
{
  ResultEntitCGFloat y = type metadata accessor for ContactFetchResultEntity();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(ResultEntity - 8) + 8))(a1, ResultEntity);
  return a1;
}

unint64_t sub_20B78E1FC()
{
  unint64_t result = qword_26769B740;
  if (!qword_26769B740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B740);
  }
  return result;
}

unint64_t sub_20B78E254()
{
  unint64_t result = qword_26769B748;
  if (!qword_26769B748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B748);
  }
  return result;
}

unint64_t sub_20B78E2AC()
{
  unint64_t result = qword_26769B750;
  if (!qword_26769B750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B750);
  }
  return result;
}

uint64_t sub_20B78E300()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_20B78E334()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B78E378()
{
  return sub_20B78EC64(&qword_26769B760);
}

uint64_t sub_20B78E3AC()
{
  return sub_20B78EC64(&qword_26769B768);
}

uint64_t sub_20B78E3E0()
{
  return sub_20B78EC64(&qword_26769B770);
}

uint64_t sub_20B78E414()
{
  return sub_20B78EC64(&qword_26769B778);
}

uint64_t sub_20B78E448()
{
  return sub_20B78EC20(&qword_26769B780, &qword_26769B788);
}

uint64_t sub_20B78E478()
{
  return MEMORY[0x263EFBFD8];
}

uint64_t sub_20B78E484()
{
  return sub_20B78EC64(&qword_26769B790);
}

uint64_t sub_20B78E4B8()
{
  return sub_20B78EC64(&qword_26769B798);
}

uint64_t sub_20B78E4EC()
{
  return sub_20B78EC64((unint64_t *)&unk_26769B730);
}

uint64_t sub_20B78E520()
{
  return sub_20B78EC64((unint64_t *)&unk_26769B7A0);
}

unint64_t sub_20B78E558()
{
  unint64_t result = qword_26769C1C0;
  if (!qword_26769C1C0)
  {
    sub_20B7D3508();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C1C0);
  }
  return result;
}

uint64_t sub_20B78E5A4()
{
  return sub_20B78EC20(&qword_26769B7B0, &qword_26769B7B8);
}

uint64_t sub_20B78E5D4()
{
  return sub_20B78EC64((unint64_t *)&unk_26769B7C0);
}

uint64_t sub_20B78E610()
{
  return sub_20B7D2BF8();
}

ValueMetadata *type metadata accessor for FetchContactIntent()
{
  return &type metadata for FetchContactIntent;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactFetchResultEntity(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_20B7D3508();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  sub_20B7D2DA8();
  return a1;
}

uint64_t destroy for ContactFetchResultEntity(uint64_t a1)
{
  uint64_t v2 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return swift_release();
}

uint64_t initializeWithCopy for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_20B7D2DA8();
  return a1;
}

uint64_t assignWithCopy for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20B78E9C8);
}

uint64_t sub_20B78E9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ContactFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20B78EA9C);
}

uint64_t sub_20B78EA9C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20B7D3508();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20B78EB58()
{
  uint64_t result = sub_20B7D3508();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_20B78EBF0()
{
  return sub_20B78EC20(&qword_26769B7E8, &qword_26769B7F0);
}

uint64_t sub_20B78EC20(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B78EC64(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ContactFetchResultEntity();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B78ECA8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B800);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B78ED08()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769B820);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B820);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static CreateContactIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769AF98, MEMORY[0x270FA8BB8], (uint64_t)qword_26769B820, a1);
}

uint64_t static CreateContactIntent.title.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769AF98, MEMORY[0x270FA8BB8], (uint64_t)qword_26769B820);
}

uint64_t (*static CreateContactIntent.title.modify())()
{
  if (qword_26769AF98 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D33C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B820);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20B78EFD8()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769B838);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B838);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static CreateContactIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769AFA0, MEMORY[0x270FA5E90], (uint64_t)qword_26769B838, a1);
}

uint64_t sub_20B78F2E8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static CreateContactIntent.description.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769AFA0, MEMORY[0x270FA5E90], (uint64_t)qword_26769B838);
}

uint64_t sub_20B78F3C4(uint64_t a1, void *a2, uint64_t (*a3)(void), uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = a3(0);
  uint64_t v8 = __swift_project_value_buffer(v7, a4);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
}

uint64_t (*static CreateContactIntent.description.modify())()
{
  if (qword_26769AFA0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B838);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static CreateContactIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t CreateContactIntent.namePrefix.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B78F580@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B78F668()
{
  return swift_release();
}

uint64_t CreateContactIntent.namePrefix.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.namePrefix.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$namePrefix.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.givenName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B78F830@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B78F918()
{
  return swift_release();
}

uint64_t CreateContactIntent.givenName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.givenName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$givenName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.middleName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B78FAE0@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B78FBC8()
{
  return swift_release();
}

uint64_t CreateContactIntent.middleName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.middleName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$middleName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.familyName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B78FD90@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B78FE78()
{
  return swift_release();
}

uint64_t CreateContactIntent.familyName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.familyName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$familyName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.nameSuffix.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B790040@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B790128()
{
  return swift_release();
}

uint64_t CreateContactIntent.nameSuffix.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.nameSuffix.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$nameSuffix.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.phoneNumber.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7902F0@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7903D8()
{
  return swift_release();
}

uint64_t CreateContactIntent.phoneNumber.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.phoneNumber.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$phoneNumber.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.emailAddress.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7905A0@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B790688()
{
  return swift_release();
}

uint64_t CreateContactIntent.emailAddress.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*CreateContactIntent.emailAddress.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t CreateContactIntent.$emailAddress.getter()
{
  return sub_20B7D2CD8();
}

uint64_t CreateContactIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v125 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v161, "entityProvider");
  v161[15] = -18;
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v124 = sub_20B7D29D8();
  uint64_t v155 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B850);
  uint64_t v156 = sub_20B7D33C8();
  uint64_t v158 = *(void *)(v156 - 8);
  uint64_t v136 = *(void *)(v158 + 64);
  MEMORY[0x270FA5388](v156);
  unint64_t v137 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v126 = (char *)&v119 - v137;
  uint64_t v2 = sub_20B7D3AE8();
  uint64_t v130 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v129 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  uint64_t v159 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v160 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v6 = sub_20B7D33B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v157 = v8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v154 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  unsigned int v128 = *MEMORY[0x263F06D10];
  uint64_t v10 = v128;
  v11((char *)&v119 - v9, v128, v6);
  BOOL v131 = v11;
  sub_20B7D33D8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v133 = *(void *)(*(void *)(v12 - 8) + 64);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v134 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v15 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_20B7D3538();
  MEMORY[0x270FA5388](v17);
  uint64_t v153 = v6;
  v11((char *)&v119 - v9, v10, v6);
  sub_20B7D33D8();
  unint64_t v135 = *(void (**)(char *, void, uint64_t, uint64_t))(v158 + 56);
  v158 += 56;
  v135(v15, 0, 1, v156);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B710);
  uint64_t v138 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v132 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  long long v20 = (char *)&v119 - v132;
  uint64_t v152 = sub_20B7D3A78();
  uint64_t v21 = *(void *)(v152 - 8);
  uint64_t v151 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v142 = v21 + 56;
  v151(v20, 1, 1, v152);
  uint64_t v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  uint64_t v150 = *(void *)(*(void *)(v22 - 8) + 64);
  MEMORY[0x270FA5388](v22 - 8);
  unint64_t v141 = (v23 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v24 = (char *)&v119 - v141;
  uint64_t v149 = sub_20B7D2B18();
  uint64_t v25 = *(void *)(v149 - 8);
  uint64_t v148 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v25 + 56);
  uint64_t v140 = v25 + 56;
  v148(v24, 1, 1, v149);
  uint64_t v145 = sub_20B7D2FD8();
  uint64_t v147 = *(void *)(*(void *)(v145 - 8) + 64);
  MEMORY[0x270FA5388](v145);
  unint64_t v139 = (v26 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v143 = *MEMORY[0x263EFBDC0];
  uint64_t v28 = *(void (**)(void))(v27 + 104);
  uint64_t v144 = v27 + 104;
  uint64_t v146 = (void (*)(char *, void, uint64_t))v28;
  v28((char *)&v119 - v139);
  uint64_t v123 = sub_20B7D2D48();
  uint64_t v29 = MEMORY[0x270FA5388](v123);
  uint64_t v126 = (char *)&v119 - v137;
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v30);
  uint64_t v31 = sub_20B7D3538();
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = v128;
  id v33 = v131;
  v131((char *)&v119 - v154, v128, v6);
  uint64_t v34 = sub_20B7D33D8();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v122 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v35);
  uint64_t v36 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_20B7D3538();
  MEMORY[0x270FA5388](v37);
  unint64_t v38 = v154;
  v33((char *)&v119 - v154, v32, v153);
  id v39 = v122;
  sub_20B7D33D8();
  uint64_t v40 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v39, 0, 1, v156);
  MEMORY[0x270FA5388](v40);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v41 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v42);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t v122 = (char *)sub_20B7D2D48();
  uint64_t v43 = MEMORY[0x270FA5388](v122);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v44);
  uint64_t v45 = sub_20B7D3538();
  MEMORY[0x270FA5388](v45);
  id v46 = (char *)&v119 - v38;
  uint64_t v47 = v128;
  uint64_t v48 = v153;
  uint64_t v127 = v7 + 104;
  v131(v46, v128, v153);
  uint64_t v49 = sub_20B7D33D8();
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  id v51 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v50);
  uint64_t v52 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v52);
  uint64_t v53 = sub_20B7D3538();
  MEMORY[0x270FA5388](v53);
  uint64_t v54 = v48;
  id v55 = v131;
  v131((char *)&v119 - v154, v47, v54);
  sub_20B7D33D8();
  uint64_t v56 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v51, 0, 1, v156);
  MEMORY[0x270FA5388](v56);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v57 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v57);
  uint64_t v58 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v58);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t v121 = sub_20B7D2D48();
  uint64_t v59 = MEMORY[0x270FA5388](v121);
  uint64_t v126 = (char *)&v119 - v137;
  MEMORY[0x270FA5388](v59);
  uint64_t v60 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = sub_20B7D3538();
  MEMORY[0x270FA5388](v61);
  uint64_t v62 = v153;
  unint64_t v63 = v154;
  uint64_t v64 = v128;
  v55((char *)&v119 - v154, v128, v153);
  uint64_t v65 = sub_20B7D33D8();
  uint64_t v66 = MEMORY[0x270FA5388](v65);
  id v67 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v66);
  uint64_t v68 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = sub_20B7D3538();
  MEMORY[0x270FA5388](v69);
  uint64_t v70 = v64;
  v55((char *)&v119 - v63, v64, v62);
  sub_20B7D33D8();
  uint64_t v71 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v67, 0, 1, v156);
  MEMORY[0x270FA5388](v71);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v72 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v72);
  uint64_t v73 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v73);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t v120 = sub_20B7D2D48();
  uint64_t v74 = MEMORY[0x270FA5388](v120);
  uint64_t v126 = (char *)&v119 - v137;
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = sub_20B7D3538();
  MEMORY[0x270FA5388](v76);
  unint64_t v77 = v154;
  v131((char *)&v119 - v154, v70, v153);
  uint64_t v78 = sub_20B7D33D8();
  uint64_t v79 = MEMORY[0x270FA5388](v78);
  uint64_t v80 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v79);
  uint64_t v81 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v81);
  uint64_t v82 = sub_20B7D3538();
  MEMORY[0x270FA5388](v82);
  uint64_t v83 = v153;
  v131((char *)&v119 - v77, v128, v153);
  sub_20B7D33D8();
  uint64_t v84 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v80, 0, 1, v156);
  MEMORY[0x270FA5388](v84);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v85 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v85);
  uint64_t v86 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v86);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t v126 = (char *)sub_20B7D2D48();
  uint64_t v87 = MEMORY[0x270FA5388](v126);
  uint64_t v119 = (char *)&v119 - v137;
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v88);
  uint64_t v89 = sub_20B7D3538();
  MEMORY[0x270FA5388](v89);
  uint64_t v90 = (char *)&v119 - v77;
  uint64_t v91 = v128;
  uint64_t v92 = v131;
  v131(v90, v128, v83);
  uint64_t v93 = sub_20B7D33D8();
  uint64_t v94 = MEMORY[0x270FA5388](v93);
  uint64_t v95 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v94);
  uint64_t v96 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v96);
  uint64_t v97 = sub_20B7D3538();
  MEMORY[0x270FA5388](v97);
  v92((char *)&v119 - v154, v91, v153);
  sub_20B7D33D8();
  uint64_t v98 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v95, 0, 1, v156);
  MEMORY[0x270FA5388](v98);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v99 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v99);
  uint64_t v100 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v100);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t v119 = (char *)sub_20B7D2D48();
  uint64_t v101 = MEMORY[0x270FA5388](v119);
  MEMORY[0x270FA5388](v101);
  uint64_t v102 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v102);
  uint64_t v103 = sub_20B7D3538();
  MEMORY[0x270FA5388](v103);
  unint64_t v104 = v154;
  uint64_t v105 = v153;
  v92((char *)&v119 - v154, v91, v153);
  uint64_t v106 = sub_20B7D33D8();
  uint64_t v107 = MEMORY[0x270FA5388](v106);
  unint64_t v108 = (char *)&v119 - v134;
  MEMORY[0x270FA5388](v107);
  uint64_t v109 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v109);
  uint64_t v110 = sub_20B7D3538();
  MEMORY[0x270FA5388](v110);
  v92((char *)&v119 - v104, v128, v105);
  sub_20B7D33D8();
  uint64_t v111 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v135)(v108, 0, 1, v156);
  MEMORY[0x270FA5388](v111);
  uint64_t v162 = 0;
  uint64_t v163 = 0;
  uint64_t v112 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v151)((char *)&v119 - v132, 1, 1, v152);
  MEMORY[0x270FA5388](v112);
  uint64_t v113 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v148)((char *)&v119 - v141, 1, 1, v149);
  MEMORY[0x270FA5388](v113);
  v146((char *)&v119 - v139, v143, v145);
  uint64_t result = sub_20B7D2D48();
  id v115 = v125;
  uint64_t v116 = v123;
  *uint64_t v125 = v124;
  v115[1] = v116;
  uint64_t v117 = v121;
  v115[2] = (uint64_t)v122;
  v115[3] = v117;
  uint64_t v118 = v126;
  v115[4] = v120;
  v115[5] = (uint64_t)v118;
  v115[6] = (uint64_t)v119;
  v115[7] = result;
  return result;
}

uint64_t CreateContactIntent.perform()(uint64_t a1)
{
  long long v3 = v1[1];
  *(_OWORD *)(v2 + 184) = *v1;
  *(_OWORD *)(v2 + 200) = v3;
  long long v4 = v1[3];
  *(_OWORD *)(v2 + 216) = v1[2];
  *(void *)(v2 + 176) = a1;
  *(_OWORD *)(v2 + 232) = v4;
  return MEMORY[0x270FA2498](sub_20B7925E0, 0, 0);
}

uint64_t sub_20B7925E0()
{
  uint64_t v41 = v0;
  uint64_t v40 = *MEMORY[0x263EF8340];
  long long v1 = *(_OWORD *)(v0 + 200);
  long long v31 = *(_OWORD *)(v0 + 184);
  long long v32 = v1;
  long long v2 = *(_OWORD *)(v0 + 232);
  long long v33 = *(_OWORD *)(v0 + 216);
  long long v34 = v2;
  id v3 = sub_20B792CA4();
  uint64_t v4 = sub_20B7D3458();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v29 = v4;
  uint64_t v30 = swift_task_alloc();
  id v6 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB48]), sel_init);
  objc_msgSend(v6, sel_addContact_toContainerWithIdentifier_, v3, 0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v7 = *(id *)(*(void *)(v0 + 160) + 16);
  swift_release();
  *(void *)(v0 + 16_Block_object_dispose(&a9, 8) = 0;
  unsigned int v8 = objc_msgSend(v7, sel_executeSaveRequest_error_, v6, v0 + 168);

  unint64_t v9 = *(void **)(v0 + 168);
  if (v8)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
    uint64_t v10 = swift_task_alloc();
    id v11 = v9;
    sub_20B7D3E88();
    swift_bridgeObjectRelease();
    *(void *)&long long v31 = 0xD000000000000012;
    *((void *)&v31 + 1) = 0x800000020B7E8760;
    id v12 = objc_msgSend(v3, sel_identifier);
    sub_20B7D3B08();

    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3448();
    swift_bridgeObjectRelease();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v10, 1, v29);
    if (result == 1)
    {
      __break(1u);
      return result;
    }

    (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v30, v10, v29);
    swift_task_dealloc();
    objc_msgSend(v3, sel_copy);
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
    sub_20B78E0F8();
    swift_dynamicCast();
    ContactEntity.init(_:)(*(void **)(v0 + 152), (uint64_t *)&v31);
    uint64_t v14 = *((void *)&v31 + 1);
    long long v15 = v32;
    long long v16 = v33;
    uint64_t v18 = v35;
    uint64_t v17 = v36;
    uint64_t v28 = v36;
    uint64_t v19 = v37;
    uint64_t v20 = v38;
    uint64_t v21 = v39;
    *(void *)(v0 + 16) = v31;
    long long v22 = v34;
    *(void *)(v0 + 24) = v14;
    *(_OWORD *)(v0 + 32) = v15;
    *(_OWORD *)(v0 + 4_Block_object_dispose(&a9, 8) = v16;
    *(_OWORD *)(v0 + 64) = v22;
    *(void *)(v0 + 80) = v18;
    *(void *)(v0 + 8_Block_object_dispose(&a9, 8) = v17;
    *(void *)(v0 + 96) = v19;
    *(void *)(v0 + 104) = v20;
    *(void *)(v0 + 112) = v21;
    uint64_t v23 = sub_20B7D2BC8();
    uint64_t v24 = *(void *)(v23 - 8);
    uint64_t v25 = swift_task_alloc();
    swift_task_alloc();
    (*(void (**)(void))(v5 + 16))();
    sub_20B7D2BD8();
    swift_task_dealloc();
    sub_20B79309C();
    sub_20B7930F0();
    sub_20B7D2B98();

    (*(void (**)(uint64_t, uint64_t))(v24 + 8))(v25, v23);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v30, v29);
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    id v27 = v9;
    sub_20B7D3398();

    swift_willThrow();
    swift_task_dealloc();
    uint64_t v26 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v26();
}

id sub_20B792CA4()
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  id v22 = v23;
  id v21 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAF0]), sel_init);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  uint64_t v19 = v24;
  id v20 = v23;
  sub_20B7D2CB8();
  uint64_t v17 = v24;
  uint64_t v18 = (uint64_t)v23;
  sub_20B7D2CB8();
  uint64_t v15 = v24;
  uint64_t v16 = (uint64_t)v23;
  sub_20B7D2CB8();
  uint64_t v13 = v24;
  uint64_t v14 = (uint64_t)v23;
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = v24;
  uint64_t v12 = (uint64_t)v23;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  uint64_t v9 = v24;
  uint64_t v10 = (uint64_t)v23;
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v0 = (uint64_t)v23;
  uint64_t v1 = v24;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20B7D32C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v4, 1, 1, v5);
  id v6 = v21;
  uint64_t v7 = v25;
  id v20 = sub_20B7950E8(v21, (uint64_t)v20, v19, v18, v17, v16, v15, v14, v13, v12, v11, 0, 0, v10, v9, v0, v1, 0, 0,
          (uint64_t)v4);
  uint64_t v25 = v7;
  sub_20B793854((uint64_t)v4);
  swift_release();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v20;
}

unint64_t sub_20B79309C()
{
  unint64_t result = qword_2676999C0;
  if (!qword_2676999C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999C0);
  }
  return result;
}

unint64_t sub_20B7930F0()
{
  unint64_t result = qword_26769B860;
  if (!qword_26769B860)
  {
    sub_20B7D2BC8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B860);
  }
  return result;
}

unint64_t sub_20B793140()
{
  unint64_t result = qword_26769B868;
  if (!qword_26769B868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B868);
  }
  return result;
}

unint64_t sub_20B793198()
{
  unint64_t result = qword_26769B870;
  if (!qword_26769B870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B870);
  }
  return result;
}

uint64_t sub_20B7931EC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_20B793220()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20B793264()
{
  unint64_t result = qword_26769B878;
  if (!qword_26769B878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B878);
  }
  return result;
}

uint64_t sub_20B7932B8@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AF98 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769B820);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_20B793378()
{
  return MEMORY[0x2105367B0]() & 1;
}

uint64_t sub_20B793394(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return CreateContactIntent.perform()(a1);
}

uint64_t sub_20B793430()
{
  return sub_20B7D2A98();
}

uint64_t destroy for CreateContactIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for CreateContactIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for CreateContactIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  a1[2] = a2[2];
  sub_20B7D2DA8();
  swift_release();
  a1[3] = a2[3];
  sub_20B7D2DA8();
  swift_release();
  a1[4] = a2[4];
  sub_20B7D2DA8();
  swift_release();
  a1[5] = a2[5];
  sub_20B7D2DA8();
  swift_release();
  a1[6] = a2[6];
  sub_20B7D2DA8();
  swift_release();
  a1[7] = a2[7];
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for CreateContactIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CreateContactIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CreateContactIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CreateContactIntent()
{
  return &type metadata for CreateContactIntent;
}

uint64_t sub_20B7937BC()
{
  return sub_20B79380C(&qword_26769B888);
}

uint64_t sub_20B7937E4()
{
  return sub_20B79380C((unint64_t *)&unk_26769B898);
}

uint64_t sub_20B79380C(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B890);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B793854(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

ValueMetadata *type metadata accessor for ContactCardGroupRowItemFactory()
{
  return &type metadata for ContactCardGroupRowItemFactory;
}

uint64_t sub_20B7938C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  sub_20B789BB4();
  sub_20B7D2DA8();
  unsigned int v8 = (void *)sub_20B7D3D18();
  id v9 = objc_msgSend(v8, sel_keyPath);

  if (!v9)
  {
    sub_20B7D3B08();
    id v9 = (id)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
  }
  id v10 = objc_msgSend(self, sel_localizedStringForKey_, v9);

  uint64_t v11 = sub_20B7D3B08();
  uint64_t v13 = v12;

  uint64_t v17 = &type metadata for ContactCardPropertyRowItem;
  uint64_t v18 = &protocol witness table for ContactCardPropertyRowItem;
  uint64_t v14 = swift_allocObject();
  *(void *)&long long v16 = v14;
  *(void *)(v14 + 16) = a1;
  *(void *)(v14 + 24) = v11;
  *(void *)(v14 + 32) = v13;
  *(void *)(v14 + 40) = a2;
  *(void *)(v14 + 4_Block_object_dispose(&a9, 8) = a3;
  *(_OWORD *)(v14 + 56) = 0u;
  *(_OWORD *)(v14 + 72) = 0u;
  *(void *)(v14 + 8_Block_object_dispose(&a9, 8) = 0;
  *(unsigned char *)(v14 + 96) = 1;
  sub_20B76D0B0(&v16, a4);
  sub_20B7D2DA8();
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B793A14()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  if (*(void *)(v0 + 80)) {
    swift_release();
  }
  return MEMORY[0x270FA0238](v0, 97, 7);
}

ValueMetadata *type metadata accessor for ContactCardViewConfiguration()
{
  return &type metadata for ContactCardViewConfiguration;
}

id sub_20B793A90()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DD4D0;
  uint64_t v1 = (void *)*MEMORY[0x263EFDFC8];
  uint64_t v2 = (void *)*MEMORY[0x263EFDFB8];
  *(void *)(v0 + 32) = *MEMORY[0x263EFDFC8];
  *(void *)(v0 + 40) = v2;
  uint64_t v3 = (void *)*MEMORY[0x263EFE070];
  uint64_t v4 = (void *)*MEMORY[0x263EFDF80];
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = *MEMORY[0x263EFE070];
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = (void *)*MEMORY[0x263EFDF48];
  *(void *)(v0 + 64) = *MEMORY[0x263EFDF48];
  uint64_t v6 = self;
  id v7 = v1;
  id v8 = v2;
  id v9 = v3;
  id v10 = v4;
  id v11 = v5;
  id v12 = objc_msgSend(v6, sel_descriptorForRequiredKeysForStyle_, 0);
  uint64_t v15 = (void *)*MEMORY[0x263EFE0A0];
  uint64_t v13 = *MEMORY[0x263EFE0A0];
  *(void *)(v0 + 72) = v12;
  *(void *)(v0 + 80) = v13;
  sub_20B7D3C58();
  qword_2676A3CD0 = v0;
  return v15;
}

void *ContactEntityProvider.__allocating_init(contactStore:)(void *a1)
{
  swift_allocObject();
  uint64_t v2 = sub_20B794FFC(a1, 0);

  return v2;
}

uint64_t sub_20B793C00(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return MEMORY[0x270FA2498](sub_20B793C90, 0, 0);
}

uint64_t sub_20B793C90()
{
  uint64_t v47 = v0;
  uint64_t v46 = *MEMORY[0x263EF8340];
  if (qword_26769AFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[4];
  uint64_t v2 = self;
  uint64_t v3 = (void *)sub_20B7D3C28();
  id v4 = objc_msgSend(v2, sel_predicateForContactsWithIdentifiers_, v3);

  uint64_t v5 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  uint64_t v6 = (void *)sub_20B7D3C28();
  v0[2] = 0;
  id v7 = objc_msgSend(v5, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v4, v6, v0 + 2);

  id v8 = (void *)v0[2];
  if (v7)
  {
    sub_20B76D188(0, (unint64_t *)&qword_26769B040);
    unint64_t v9 = sub_20B7D3C38();
    id v10 = v8;

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v11)
      {
LABEL_6:
        uint64_t v37 = MEMORY[0x263F8EE78];
        sub_20B7A21BC(0, v11 & ~(v11 >> 63), 0);
        if (v11 < 0) {
          __break(1u);
        }
        uint64_t v35 = v4;
        uint64_t v36 = v0;
        uint64_t v12 = 0;
        uint64_t v13 = v37;
        do
        {
          if ((v9 & 0xC000000000000001) != 0) {
            id v14 = (id)MEMORY[0x210537C20](v12, v9);
          }
          else {
            id v14 = *(id *)(v9 + 8 * v12 + 32);
          }
          ContactEntity.init(_:)(v14, (uint64_t *)&v38);
          long long v15 = v38;
          long long v16 = v39;
          uint64_t v17 = v40;
          long long v18 = v41;
          uint64_t v19 = v42;
          long long v20 = v43;
          uint64_t v21 = v44;
          long long v22 = v45;
          unint64_t v24 = *(void *)(v37 + 16);
          unint64_t v23 = *(void *)(v37 + 24);
          if (v24 >= v23 >> 1)
          {
            long long v33 = v39;
            long long v34 = v38;
            long long v31 = v43;
            long long v32 = v41;
            long long v30 = v45;
            sub_20B7A21BC(v23 > 1, v24 + 1, 1);
            long long v22 = v30;
            long long v20 = v31;
            long long v18 = v32;
            long long v16 = v33;
            long long v15 = v34;
          }
          ++v12;
          *(void *)(v37 + 16) = v24 + 1;
          uint64_t v25 = v37 + 104 * v24;
          *(_OWORD *)(v25 + 32) = v15;
          *(_OWORD *)(v25 + 4_Block_object_dispose(&a9, 8) = v16;
          *(void *)(v25 + 64) = v17;
          *(_OWORD *)(v25 + 72) = v18;
          *(void *)(v25 + 8_Block_object_dispose(&a9, 8) = v19;
          *(_OWORD *)(v25 + 96) = v20;
          *(void *)(v25 + 112) = v21;
          *(_OWORD *)(v25 + 120) = v22;
        }
        while (v11 != v12);

        swift_bridgeObjectRelease();
        uint64_t v0 = v36;
        goto LABEL_20;
      }
    }

    swift_bridgeObjectRelease();
    uint64_t v13 = MEMORY[0x263F8EE78];
LABEL_20:
    uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
    return v29(v13);
  }
  id v26 = v8;
  sub_20B7D3398();

  swift_willThrow();
  id v27 = (uint64_t (*)(void))v0[1];
  return v27();
}

uint64_t sub_20B794034(uint64_t a1, uint64_t a2)
{
  v3[4] = a2;
  v3[5] = v2;
  v3[3] = a1;
  return MEMORY[0x270FA2498](sub_20B7940C8, 0, 0);
}

uint64_t sub_20B7940C8()
{
  unint64_t v108 = v0;
  uint64_t v107 = *MEMORY[0x263EF8340];
  if (qword_26769AFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[5];
  id v2 = (id)qword_2676A3CD0;
  uint64_t v3 = self;
  id v4 = (void *)sub_20B7D3AF8();
  uint64_t v91 = v3;
  id v5 = objc_msgSend(v3, sel_predicateForContactsMatchingName_, v4);

  uint64_t v6 = *(void **)(v1 + 16);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  id v7 = (void *)sub_20B7D3C28();
  v0[2] = 0;
  uint64_t v89 = v6;
  id v8 = objc_msgSend(v6, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v5, v7, v0 + 2);

  unint64_t v9 = v0[2];
  if (v8)
  {
    uint64_t v94 = v0 + 2;
    sub_20B76D188(0, (unint64_t *)&qword_26769B040);
    unint64_t v10 = sub_20B7D3C38();
    id v11 = (id)v9;

    if (v10 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v12 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_6;
      }
    }
    else
    {
      uint64_t v12 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v12)
      {
LABEL_6:
        uint64_t v96 = MEMORY[0x263F8EE78];
        sub_20B7A21BC(0, v12 & ~(v12 >> 63), 0);
        if (v12 < 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        uint64_t v86 = v0;
        uint64_t v13 = 0;
        uint64_t v14 = v96;
        do
        {
          if ((v10 & 0xC000000000000001) != 0) {
            id v15 = (id)MEMORY[0x210537C20](v13, v10);
          }
          else {
            id v15 = *(id *)(v10 + 8 * v13 + 32);
          }
          ContactEntity.init(_:)(v15, (uint64_t *)&v99);
          long long v16 = v99;
          long long v17 = v100;
          uint64_t v18 = v101;
          long long v19 = v102;
          uint64_t v20 = v103;
          long long v21 = v104;
          uint64_t v22 = v105;
          long long v23 = v106;
          unint64_t v25 = *(void *)(v96 + 16);
          unint64_t v24 = *(void *)(v96 + 24);
          if (v25 >= v24 >> 1)
          {
            long long v80 = v100;
            long long v83 = v99;
            long long v76 = v104;
            long long v78 = v102;
            long long v74 = v106;
            sub_20B7A21BC(v24 > 1, v25 + 1, 1);
            long long v23 = v74;
            long long v21 = v76;
            long long v19 = v78;
            long long v17 = v80;
            long long v16 = v83;
          }
          ++v13;
          *(void *)(v96 + 16) = v25 + 1;
          uint64_t v26 = v96 + 104 * v25;
          *(_OWORD *)(v26 + 32) = v16;
          *(_OWORD *)(v26 + 4_Block_object_dispose(&a9, 8) = v17;
          *(void *)(v26 + 64) = v18;
          *(_OWORD *)(v26 + 72) = v19;
          *(void *)(v26 + 8_Block_object_dispose(&a9, 8) = v20;
          *(_OWORD *)(v26 + 96) = v21;
          *(void *)(v26 + 112) = v22;
          *(_OWORD *)(v26 + 120) = v23;
        }
        while (v12 != v13);
        swift_bridgeObjectRelease();
        uint64_t v0 = v86;
LABEL_18:
        if (*(void *)(v14 + 16))
        {
LABEL_19:

LABEL_20:
          uint64_t v28 = (uint64_t (*)(uint64_t))v0[1];
          return v28(v14);
        }
        swift_bridgeObjectRelease();
        id v30 = objc_allocWithZone(MEMORY[0x263EFEB28]);
        swift_bridgeObjectRetain();
        long long v31 = (void *)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
        id v32 = objc_msgSend(v30, sel_initWithStringValue_, v31);

        id v2 = objc_msgSend(v91, sel_predicateForContactsMatchingPhoneNumber_prefixHint_groupIdentifiers_limitToOneResult_, v32, 0, 0, 0);
        long long v33 = (void *)sub_20B7D3C28();
        v0[2] = 0;
        id v34 = objc_msgSend(v89, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v2, v33, v94);

        unint64_t v9 = v0[2];
        if (!v34)
        {
          id v50 = (id)v9;
          sub_20B7D3398();

          swift_willThrow();
LABEL_36:

          id v5 = v2;
          goto LABEL_37;
        }
        uint64_t v82 = v2;
        unint64_t v10 = sub_20B7D3C38();
        id v35 = (id)v9;

        if (!(v10 >> 62))
        {
          uint64_t v36 = *(void *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
          if (v36)
          {
LABEL_26:
            uint64_t v85 = v5;
            uint64_t v87 = v0;
            uint64_t v97 = MEMORY[0x263F8EE78];
            sub_20B7A21BC(0, v36 & ~(v36 >> 63), 0);
            if (v36 < 0)
            {
              __break(1u);
              goto LABEL_59;
            }
            uint64_t v37 = 0;
            uint64_t v14 = v97;
            do
            {
              if ((v10 & 0xC000000000000001) != 0) {
                id v38 = (id)MEMORY[0x210537C20](v37, v10);
              }
              else {
                id v38 = *(id *)(v10 + 8 * v37 + 32);
              }
              ContactEntity.init(_:)(v38, (uint64_t *)&v99);
              long long v39 = v99;
              long long v40 = v100;
              uint64_t v41 = v101;
              long long v42 = v102;
              uint64_t v43 = v103;
              long long v44 = v104;
              uint64_t v45 = v105;
              long long v46 = v106;
              unint64_t v48 = *(void *)(v97 + 16);
              unint64_t v47 = *(void *)(v97 + 24);
              if (v48 >= v47 >> 1)
              {
                long long v79 = v100;
                long long v81 = v99;
                long long v75 = v104;
                long long v77 = v102;
                long long v73 = v106;
                sub_20B7A21BC(v47 > 1, v48 + 1, 1);
                long long v46 = v73;
                long long v44 = v75;
                long long v42 = v77;
                long long v40 = v79;
                long long v39 = v81;
              }
              ++v37;
              *(void *)(v97 + 16) = v48 + 1;
              uint64_t v49 = v97 + 104 * v48;
              *(_OWORD *)(v49 + 32) = v39;
              *(_OWORD *)(v49 + 4_Block_object_dispose(&a9, 8) = v40;
              *(void *)(v49 + 64) = v41;
              *(_OWORD *)(v49 + 72) = v42;
              *(void *)(v49 + 8_Block_object_dispose(&a9, 8) = v43;
              *(_OWORD *)(v49 + 96) = v44;
              *(void *)(v49 + 112) = v45;
              *(_OWORD *)(v49 + 120) = v46;
            }
            while (v36 != v37);
            swift_bridgeObjectRelease();
            uint64_t v0 = v87;
            goto LABEL_43;
          }
LABEL_42:
          swift_bridgeObjectRelease();
          uint64_t v14 = MEMORY[0x263F8EE78];
LABEL_43:
          if (*(void *)(v14 + 16))
          {

            goto LABEL_19;
          }
          swift_bridgeObjectRelease();
          uint64_t v52 = (void *)sub_20B7D3AF8();
          id v2 = objc_msgSend(v91, sel_predicateForContactsMatchingEmailAddress_, v52);

          uint64_t v53 = (void *)sub_20B7D3C28();
          v0[2] = 0;
          id v54 = objc_msgSend(v89, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v2, v53, v94);

          id v55 = (void *)v0[2];
          if (v54)
          {
            uint64_t v85 = v5;
            uint64_t v87 = v0;
            unint64_t v9 = sub_20B7D3C38();
            id v56 = v55;

            if (!(v9 >> 62))
            {
              uint64_t v57 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
              uint64_t v58 = v82;
              if (v57)
              {
LABEL_48:
                uint64_t v95 = v2;
                uint64_t v98 = MEMORY[0x263F8EE78];
                sub_20B7A21BC(0, v57 & ~(v57 >> 63), 0);
                if (v57 < 0) {
                  __break(1u);
                }
                uint64_t v59 = 0;
                uint64_t v14 = v98;
                do
                {
                  if ((v9 & 0xC000000000000001) != 0) {
                    id v60 = (id)MEMORY[0x210537C20](v59, v9);
                  }
                  else {
                    id v60 = *(id *)(v9 + 8 * v59 + 32);
                  }
                  ContactEntity.init(_:)(v60, (uint64_t *)&v99);
                  long long v61 = v99;
                  long long v62 = v100;
                  uint64_t v63 = v101;
                  long long v64 = v102;
                  uint64_t v65 = v103;
                  long long v66 = v104;
                  uint64_t v67 = v105;
                  long long v68 = v106;
                  unint64_t v70 = *(void *)(v98 + 16);
                  unint64_t v69 = *(void *)(v98 + 24);
                  if (v70 >= v69 >> 1)
                  {
                    *(_OWORD *)uint64_t v92 = v100;
                    long long v93 = v99;
                    long long v88 = v104;
                    *(_OWORD *)uint64_t v90 = v102;
                    long long v84 = v106;
                    sub_20B7A21BC(v69 > 1, v70 + 1, 1);
                    long long v68 = v84;
                    long long v66 = v88;
                    long long v64 = *(_OWORD *)v90;
                    long long v62 = *(_OWORD *)v92;
                    long long v61 = v93;
                  }
                  ++v59;
                  *(void *)(v98 + 16) = v70 + 1;
                  uint64_t v71 = v98 + 104 * v70;
                  *(_OWORD *)(v71 + 32) = v61;
                  *(_OWORD *)(v71 + 4_Block_object_dispose(&a9, 8) = v62;
                  *(void *)(v71 + 64) = v63;
                  *(_OWORD *)(v71 + 72) = v64;
                  *(void *)(v71 + 8_Block_object_dispose(&a9, 8) = v65;
                  *(_OWORD *)(v71 + 96) = v66;
                  *(void *)(v71 + 112) = v67;
                  *(_OWORD *)(v71 + 120) = v68;
                }
                while (v57 != v59);

                swift_bridgeObjectRelease();
                uint64_t v0 = v87;
                goto LABEL_20;
              }
LABEL_60:

              swift_bridgeObjectRelease();
              uint64_t v14 = MEMORY[0x263F8EE78];
              uint64_t v0 = v87;
              goto LABEL_20;
            }
LABEL_59:
            swift_bridgeObjectRetain();
            uint64_t v57 = sub_20B7D3F38();
            swift_bridgeObjectRelease();
            uint64_t v58 = v82;
            if (v57) {
              goto LABEL_48;
            }
            goto LABEL_60;
          }
          id v72 = v55;
          sub_20B7D3398();

          swift_willThrow();
          goto LABEL_36;
        }
LABEL_41:
        swift_bridgeObjectRetain();
        uint64_t v36 = sub_20B7D3F38();
        swift_bridgeObjectRelease();
        if (v36) {
          goto LABEL_26;
        }
        goto LABEL_42;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v14 = MEMORY[0x263F8EE78];
    goto LABEL_18;
  }
  id v27 = (id)v9;
  sub_20B7D3398();

  swift_willThrow();
LABEL_37:

  id v51 = (uint64_t (*)(void))v0[1];
  return v51();
}

uint64_t sub_20B794980(uint64_t a1)
{
  v2[3] = a1;
  v2[4] = v1;
  v2[5] = *(void *)(type metadata accessor for ContactEntityPropertyComparator() - 8);
  v2[6] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20B794A68, 0, 0);
}

uint64_t sub_20B794A68()
{
  unint64_t v48 = v0;
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v1 = v0[3];
  if (!*(void *)(v1 + 16))
  {
    uint64_t v5 = MEMORY[0x263F8EE78];
LABEL_24:
    swift_task_dealloc();
    long long v31 = (uint64_t (*)(uint64_t))v0[1];
    return v31(v5);
  }
  if (qword_26769AFA8 != -1)
  {
    swift_once();
    uint64_t v1 = v0[3];
  }
  uint64_t v2 = v0[6];
  uint64_t v3 = *(unsigned __int8 *)(v0[5] + 80);
  sub_20B795B44(v1 + ((v3 + 32) & ~v3), v2);
  id v4 = sub_20B795BA8(v2);
  uint64_t v5 = MEMORY[0x263F8EE78];
  if (!v4) {
    goto LABEL_23;
  }
  uint64_t v6 = *(void **)(v0[4] + 16);
  id v7 = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  id v8 = (void *)sub_20B7D3C28();
  v0[2] = 0;
  id v9 = objc_msgSend(v6, sel_unifiedContactsMatchingPredicate_keysToFetch_error_, v7, v8, v0 + 2);

  unint64_t v10 = (void *)v0[2];
  if (v9)
  {
    sub_20B76D188(0, (unint64_t *)&qword_26769B040);
    unint64_t v11 = sub_20B7D3C38();
    id v12 = v10;

    if (v11 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v13 = sub_20B7D3F38();
      swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_8;
      }
    }
    else
    {
      uint64_t v13 = *(void *)((v11 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v13)
      {
LABEL_8:
        uint64_t v37 = v7;
        id v38 = v0;
        sub_20B7A21BC(0, v13 & ~(v13 >> 63), 0);
        if (v13 < 0) {
          __break(1u);
        }
        uint64_t v14 = 0;
        do
        {
          if ((v11 & 0xC000000000000001) != 0) {
            id v15 = (id)MEMORY[0x210537C20](v14, v11);
          }
          else {
            id v15 = *(id *)(v11 + 8 * v14 + 32);
          }
          ContactEntity.init(_:)(v15, (uint64_t *)&v39);
          long long v16 = v39;
          long long v17 = v40;
          uint64_t v18 = v41;
          long long v19 = v42;
          uint64_t v20 = v43;
          long long v21 = v44;
          uint64_t v22 = v45;
          long long v23 = v46;
          unint64_t v25 = *(void *)(v5 + 16);
          unint64_t v24 = *(void *)(v5 + 24);
          if (v25 >= v24 >> 1)
          {
            long long v35 = v40;
            long long v36 = v39;
            long long v33 = v44;
            long long v34 = v42;
            long long v32 = v46;
            sub_20B7A21BC(v24 > 1, v25 + 1, 1);
            long long v23 = v32;
            long long v21 = v33;
            long long v19 = v34;
            long long v17 = v35;
            long long v16 = v36;
          }
          ++v14;
          *(void *)(v5 + 16) = v25 + 1;
          uint64_t v26 = v5 + 104 * v25;
          *(_OWORD *)(v26 + 32) = v16;
          *(_OWORD *)(v26 + 4_Block_object_dispose(&a9, 8) = v17;
          *(void *)(v26 + 64) = v18;
          *(_OWORD *)(v26 + 72) = v19;
          *(void *)(v26 + 8_Block_object_dispose(&a9, 8) = v20;
          *(_OWORD *)(v26 + 96) = v21;
          *(void *)(v26 + 112) = v22;
          *(_OWORD *)(v26 + 120) = v23;
        }
        while (v13 != v14);

        swift_bridgeObjectRelease();
        uint64_t v0 = v38;
        goto LABEL_23;
      }
    }

    swift_bridgeObjectRelease();
LABEL_23:
    sub_20B796000(v0[6]);
    goto LABEL_24;
  }
  uint64_t v27 = v0[6];
  id v28 = v10;
  sub_20B7D3398();

  swift_willThrow();
  sub_20B796000(v27);
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(void))v0[1];
  return v29();
}

id sub_20B794E38()
{
  v8[1] = *(id *)MEMORY[0x263EF8340];
  if (qword_26769AFA8 != -1) {
    swift_once();
  }
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = (void *)sub_20B7D3AF8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  uint64_t v3 = (void *)sub_20B7D3C28();
  v8[0] = 0;
  id v4 = objc_msgSend(v1, sel_unifiedContactWithIdentifier_keysToFetch_error_, v2, v3, v8);

  if (v4)
  {
    id v5 = v8[0];
  }
  else
  {
    id v6 = v8[0];
    sub_20B7D3398();

    swift_willThrow();
  }
  return v4;
}

id *ContactEntityProvider.deinit()
{
  swift_unknownObjectRelease();
  return v0;
}

uint64_t ContactEntityProvider.__deallocating_deinit()
{
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

void *sub_20B794FFC(void *a1, uint64_t a2)
{
  v2[2] = a1;
  v2[3] = a2;
  id v4 = objc_allocWithZone(MEMORY[0x263EFEA20]);
  swift_unknownObjectRetain();
  id v5 = a1;
  id v6 = objc_msgSend(v4, sel_init);
  v2[4] = v6;
  objc_msgSend(v6, sel_setStyle_, 0);
  objc_msgSend(v6, sel_setFallbackStyle_, -1);
  v2[5] = objc_msgSend(objc_allocWithZone((Class)CNLSApplicationWorkspace), sel_init);
  return v2;
}

uint64_t type metadata accessor for ContactEntityProvider()
{
  return self;
}

uint64_t method lookup function for ContactEntityProvider(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactEntityProvider);
}

id sub_20B7950E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v82 = a8;
  objc_msgSend(a1, sel_mutableCopy);
  sub_20B7D3DF8();
  swift_unknownObjectRelease();
  sub_20B76D188(0, (unint64_t *)&qword_26769B028);
  swift_dynamicCast();
  BOOL v23 = a3 != 0;
  if (a3)
  {
    unint64_t v24 = (void *)sub_20B7D3AF8();
    objc_msgSend(v85, sel_setNamePrefix_, v24);
  }
  id v83 = v85;
  if (a5)
  {
    unint64_t v25 = (void *)sub_20B7D3AF8();
    id v26 = v83;
    objc_msgSend(v83, sel_setGivenName_, v25);

    BOOL v23 = 1;
    uint64_t v27 = a9;
    if (!a7) {
      goto LABEL_6;
    }
    goto LABEL_5;
  }
  id v26 = v83;
  uint64_t v27 = a9;
  if (a7)
  {
LABEL_5:
    id v28 = (void *)sub_20B7D3AF8();
    objc_msgSend(v26, sel_setMiddleName_, v28);

    BOOL v23 = 1;
  }
LABEL_6:
  if (v27)
  {
    uint64_t v29 = (void *)sub_20B7D3AF8();
    objc_msgSend(v26, sel_setFamilyName_, v29);

    BOOL v23 = 1;
  }
  uint64_t v82 = a12;
  if (a11)
  {
    id v30 = (void *)sub_20B7D3AF8();
    objc_msgSend(v26, sel_setNameSuffix_, v30);

    BOOL v23 = 1;
  }
  if (a15)
  {
    id v31 = objc_allocWithZone(MEMORY[0x263EFEB28]);
    swift_bridgeObjectRetain();
    long long v32 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    id v33 = objc_msgSend(v31, sel_initWithStringValue_, v32);

    id v34 = v33;
    if (a13)
    {
      swift_bridgeObjectRetain();
      long long v35 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
    }
    else
    {
      long long v35 = 0;
    }
    id v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAD0]), sel_initWithLabel_value_, v35, v33);

    id v37 = v36;
    id v38 = objc_msgSend(v26, sel_phoneNumbers);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
    uint64_t v39 = sub_20B7D3C38();

    uint64_t v84 = v39;
    id v40 = v37;
    MEMORY[0x210537990]();
    if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20B7D3C68();
    }
    sub_20B7D3C88();
    sub_20B7D3C58();

    uint64_t v41 = (void *)sub_20B7D3C28();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setPhoneNumbers_, v41);

    BOOL v23 = 1;
  }
  if (a17)
  {
    swift_bridgeObjectRetain();
    long long v42 = (void *)sub_20B7D3AF8();
    if (a13)
    {
      uint64_t v43 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v43 = 0;
    }
    id v44 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAD0]), sel_initWithLabel_value_, v43, v42);

    id v45 = v44;
    id v46 = objc_msgSend(v26, sel_emailAddresses);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
    uint64_t v47 = sub_20B7D3C38();

    uint64_t v84 = v47;
    id v48 = v45;
    MEMORY[0x210537990]();
    if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_20B7D3C68();
    }
    sub_20B7D3C88();
    sub_20B7D3C58();

    uint64_t v49 = (void *)sub_20B7D3C28();
    swift_bridgeObjectRelease();
    objc_msgSend(v26, sel_setEmailAddresses_, v49);

    BOOL v23 = 1;
  }
  if (a19)
  {
    id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB38]), sel_init);
    id v51 = (void *)sub_20B7D3AF8();
    id v52 = objc_msgSend(v50, sel_postalAddressFromString_, v51);

    if (v52)
    {
      if (a13)
      {
        swift_bridgeObjectRetain();
        id v53 = v52;
        id v54 = (void *)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v58 = v52;
        id v54 = 0;
      }
      id v59 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAD0]), sel_initWithLabel_value_, v54, v52);

      id v60 = v59;
      id v61 = objc_msgSend(v83, sel_postalAddresses);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
      uint64_t v62 = sub_20B7D3C38();

      uint64_t v84 = v62;
      id v63 = v60;
      MEMORY[0x210537990]();
      if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B7D3C68();
      }
      sub_20B7D3C88();
      sub_20B7D3C58();

      long long v64 = (void *)sub_20B7D3C28();
      swift_bridgeObjectRelease();
      objc_msgSend(v83, sel_setPostalAddresses_, v64);
    }
    else
    {
      id v55 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB18]), sel_init);
      id v56 = (void *)sub_20B7D3AF8();
      objc_msgSend(v55, sel_setStreet_, v56);

      swift_bridgeObjectRetain();
      objc_msgSend(v55, sel_copy);
      sub_20B7D3DF8();
      swift_unknownObjectRelease();
      sub_20B76D188(0, (unint64_t *)&unk_26769B8B0);
      swift_dynamicCast();
      if (a13)
      {
        uint64_t v57 = (void *)sub_20B7D3AF8();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v57 = 0;
      }
      id v65 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEAD0]), (SEL)&classRef_CNUIUserActionDiscoveringEnvironment + 3, v57, v85);

      id v66 = v65;
      id v67 = objc_msgSend(v83, sel_postalAddresses);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
      uint64_t v68 = sub_20B7D3C38();

      uint64_t v84 = v68;
      id v69 = v66;
      MEMORY[0x210537990]();
      if (*(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v84 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_20B7D3C68();
      }
      sub_20B7D3C88();
      sub_20B7D3C58();

      unint64_t v70 = (void *)sub_20B7D3C28();
      swift_bridgeObjectRelease();
      objc_msgSend(v83, sel_setPostalAddresses_, v70);
    }
    BOOL v23 = 1;
  }
  uint64_t v71 = sub_20B7D32C8();
  uint64_t v72 = *(void *)(v71 - 8);
  MEMORY[0x270FA5388](v71);
  long long v74 = (char *)&v81 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  MEMORY[0x270FA5388](v75 - 8);
  long long v77 = (char *)&v81 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B781268(a20, (uint64_t)v77, &qword_26769B050);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v72 + 48))(v77, 1, v71) == 1)
  {
    sub_20B76D2E4((uint64_t)v77, &qword_26769B050);
    id v78 = v83;
    if (!v23)
    {
      sub_20B795AF0();
      swift_allocError();
      swift_willThrow();
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v74, v77, v71);
    long long v79 = (void *)sub_20B7D31C8();
    id v78 = v83;
    objc_msgSend(v83, sel_setBirthday_, v79);

    (*(void (**)(char *, uint64_t))(v72 + 8))(v74, v71);
  }
  return v78;
}

unint64_t sub_20B795AF0()
{
  unint64_t result = qword_26769B8A8;
  if (!qword_26769B8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B8A8);
  }
  return result;
}

uint64_t sub_20B795B44(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactEntityPropertyComparator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

id sub_20B795BA8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContactEntityPropertyComparator();
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v30 - v6;
  sub_20B795B44(a1, (uint64_t)&v30 - v6);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_20B795B44(a1, (uint64_t)v5);
    if (!swift_getEnumCaseMultiPayload())
    {
      uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
      uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
      MEMORY[0x270FA5388](v16 - 8);
      uint64_t v18 = (char *)&v30 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
      sub_20B79605C((uint64_t)v5, (uint64_t)v18);
      uint64_t v19 = sub_20B7D3388();
      uint64_t v20 = *(void *)(v19 - 8);
      uint64_t v21 = MEMORY[0x270FA5388](&v30);
      BOOL v23 = (char *)&v30 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
      MEMORY[0x270FA5388](v21);
      sub_20B781268((uint64_t)v18, (uint64_t)v18, &qword_26769B8D0);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, v19) == 1)
      {
        sub_20B76D2E4((uint64_t)v18, &qword_26769B8D0);
        sub_20B76D2E4((uint64_t)v18, &qword_26769B8D0);
        sub_20B796000((uint64_t)v7);
        return 0;
      }
      (*(void (**)(char *, char *, uint64_t))(v20 + 32))(v23, v18, v19);
      unint64_t v24 = self;
      unint64_t v25 = (void *)sub_20B7D3358();
      id v26 = objc_msgSend(v24, sel_localizedStringFromPersonNameComponents_style_options_, v25, 0, 0);

      sub_20B7D3B08();
      (*(void (**)(char *, uint64_t))(v20 + 8))(v23, v19);
      sub_20B76D2E4((uint64_t)v18, &qword_26769B8D0);
    }
    uint64_t v27 = self;
    id v28 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v27, sel_predicateForContactsMatchingName_, v28);

    sub_20B796000((uint64_t)v7);
    return v13;
  }
  if (EnumCaseMultiPayload == 1)
  {
    id v9 = self;
    id v10 = objc_allocWithZone(MEMORY[0x263EFEB28]);
    unint64_t v11 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    id v12 = objc_msgSend(v10, sel_initWithStringValue_, v11);

    id v13 = objc_msgSend(v9, sel_predicateForContactsMatchingPhoneNumber_prefixHint_groupIdentifiers_limitToOneResult_, v12, 0, 0, 0);
  }
  else
  {
    uint64_t v14 = self;
    id v15 = (void *)sub_20B7D3AF8();
    swift_bridgeObjectRelease();
    id v13 = objc_msgSend(v14, sel_predicateForContactsMatchingEmailAddress_, v15);
  }
  return v13;
}

uint64_t sub_20B796000(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ContactEntityPropertyComparator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B79605C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for ContactEntityProviderError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20B796160);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntityProviderError()
{
  return &type metadata for ContactEntityProviderError;
}

unint64_t sub_20B79619C()
{
  unint64_t result = qword_26769B8E8;
  if (!qword_26769B8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B8E8);
  }
  return result;
}

uint64_t ContactEntityIDPassthroughQuery.entities(for:)(uint64_t a1)
{
  *(void *)(v1 + 16) = a1;
  return MEMORY[0x270FA2498](sub_20B796214, 0, 0);
}

uint64_t sub_20B796214()
{
  uint64_t v34 = v0;
  uint64_t v1 = *(void *)(v0 + 16);
  int64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v25 = MEMORY[0x263F8EE78];
    sub_20B7A21BC(0, v2, 0);
    uint64_t v3 = v25;
    unsigned int v4 = (uint64_t *)(v1 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      uint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      ContactEntity.init(identifier:)(v5, v6, (uint64_t *)&v26);
      long long v7 = v26;
      long long v8 = v27;
      uint64_t v9 = v28;
      long long v10 = v29;
      uint64_t v11 = v30;
      long long v12 = v31;
      uint64_t v13 = v32;
      long long v14 = v33;
      unint64_t v16 = *(void *)(v25 + 16);
      unint64_t v15 = *(void *)(v25 + 24);
      if (v16 >= v15 >> 1)
      {
        long long v23 = v27;
        long long v24 = v26;
        long long v21 = v31;
        long long v22 = v29;
        long long v20 = v33;
        sub_20B7A21BC(v15 > 1, v16 + 1, 1);
        long long v14 = v20;
        long long v12 = v21;
        long long v10 = v22;
        long long v8 = v23;
        long long v7 = v24;
      }
      *(void *)(v25 + 16) = v16 + 1;
      uint64_t v17 = v25 + 104 * v16;
      *(_OWORD *)(v17 + 32) = v7;
      *(_OWORD *)(v17 + 4_Block_object_dispose(&a9, 8) = v8;
      *(void *)(v17 + 64) = v9;
      *(_OWORD *)(v17 + 72) = v10;
      *(void *)(v17 + 8_Block_object_dispose(&a9, 8) = v11;
      *(_OWORD *)(v17 + 96) = v12;
      *(void *)(v17 + 112) = v13;
      *(_OWORD *)(v17 + 120) = v14;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v3);
}

uint64_t sub_20B796384(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B79642C;
  void v3[2] = a1;
  return MEMORY[0x270FA2498](sub_20B796214, 0, 0);
}

uint64_t sub_20B79642C(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t sub_20B79652C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_20B775290;
  return MEMORY[0x270EE0E28](a1, a2, a3);
}

uint64_t sub_20B7965E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_20B796AE8();
  *uint64_t v5 = v2;
  v5[1] = sub_20B796B4C;
  return MEMORY[0x270EE0E38](a1, a2, v6);
}

uint64_t sub_20B796694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_20B775290;
  return MEMORY[0x270EE1A08](a1, a2, a3);
}

uint64_t sub_20B796748()
{
  return MEMORY[0x210536D40]() & 1;
}

uint64_t ContactEntityIDPassthroughQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return MEMORY[0x270FA2498](sub_20B796784, 0, 0);
}

uint64_t sub_20B796784()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = v0[3];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B900);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DB980;
  swift_bridgeObjectRetain();
  ContactEntity.init(identifier:)(v1, v2, (uint64_t *)(v3 + 32));
  uint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

uint64_t sub_20B796834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  return MEMORY[0x270FA2498](sub_20B796858, 0, 0);
}

uint64_t sub_20B796858()
{
  uint64_t v1 = v0[3];
  uint64_t v2 = v0[4];
  uint64_t v3 = (uint64_t *)v0[2];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B900);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DB980;
  swift_bridgeObjectRetain();
  ContactEntity.init(identifier:)(v1, v2, (uint64_t *)(v4 + 32));
  *uint64_t v3 = v4;
  uint64_t v5 = (uint64_t (*)(void))v0[1];
  return v5();
}

unint64_t sub_20B796918()
{
  unint64_t result = qword_26769B908;
  if (!qword_26769B908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B908);
  }
  return result;
}

unint64_t sub_20B796970()
{
  unint64_t result = qword_26769B910[0];
  if (!qword_26769B910[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26769B910);
  }
  return result;
}

unint64_t sub_20B7969C8()
{
  unint64_t result = qword_26769BC60;
  if (!qword_26769BC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BC60);
  }
  return result;
}

unint64_t sub_20B796A20()
{
  unint64_t result = qword_26769B928;
  if (!qword_26769B928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B928);
  }
  return result;
}

unint64_t sub_20B796A7C()
{
  unint64_t result = qword_26769B930;
  if (!qword_26769B930)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26769B938);
    sub_20B79309C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B930);
  }
  return result;
}

unint64_t sub_20B796AE8()
{
  unint64_t result = qword_26769B950;
  if (!qword_26769B950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B950);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntityIDPassthroughQuery()
{
  return &type metadata for ContactEntityIDPassthroughQuery;
}

uint64_t static ContactLabeledValueEntity.typeDisplayRepresentation.getter()
{
  uint64_t v0 = sub_20B7D33C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3A88();
  uint64_t v3 = sub_20B7D3548();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3538();
  uint64_t v4 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v0);
  return sub_20B7D3028();
}

uint64_t ContactLabeledValueEntity.displayRepresentation.getter()
{
  return sub_20B7D2F38();
}

uint64_t ContactLabeledValueEntity.value.getter()
{
  sub_20B7D2BF8();
  return v1;
}

uint64_t ContactLabeledValueEntity.label.getter()
{
  sub_20B7D2BF8();
  return v1;
}

double sub_20B796EFC@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B796F74()
{
  return swift_release();
}

uint64_t ContactLabeledValueEntity.label.setter()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactLabeledValueEntity.label.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactLabeledValueEntity.$label.getter()
{
  return sub_20B7D2C18();
}

uint64_t sub_20B7970A0@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_20B797118()
{
  return swift_release();
}

uint64_t ContactLabeledValueEntity.value.setter()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactLabeledValueEntity.value.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactLabeledValueEntity.$value.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactLabeledValueEntity.identifier.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactLabeledValueEntity.identifier.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ContactLabeledValueEntity.identifier.modify())()
{
  return nullsub_1;
}

uint64_t ContactLabeledValueEntity.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B960);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v30 = *(void *)(*(void *)(v1 - 8) + 64);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v33 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = (char *)&v27 - v33;
  uint64_t v4 = sub_20B7D3AE8();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v32 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v6 = sub_20B7D3548();
  uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v31 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v8 = sub_20B7D33B8();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  MEMORY[0x270FA5388](v8);
  unint64_t v29 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v28 = *MEMORY[0x263F06D10];
  long long v27 = *(void (**)(char *))(v9 + 104);
  v27((char *)&v27 - v29);
  sub_20B7D33D8();
  uint64_t v11 = MEMORY[0x210536A00](v3);
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B968);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  long long v14 = (char *)&v27 - v33;
  MEMORY[0x270FA5388](v13);
  sub_20B7D2DA8();
  uint64_t v15 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_20B7D3538();
  MEMORY[0x270FA5388](v16);
  ((void (*)(char *, void, uint64_t))v27)((char *)&v27 - v29, v28, v8);
  sub_20B7D33D8();
  uint64_t v17 = MEMORY[0x210536A00](v14);
  uint64_t v18 = sub_20B7D3508();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  long long v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D29A8();
  uint64_t v22 = sub_20B7D34E8();
  uint64_t v24 = v23;
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  uint64_t v36 = 0;
  unint64_t v37 = 0;
  swift_bridgeObjectRetain_n();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v36 = 0;
  unint64_t v37 = 0xE000000000000000;
  sub_20B7D2C08();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t result = swift_release();
  long long v26 = v35;
  *uint64_t v35 = v11;
  v26[1] = v17;
  v26[2] = v22;
  v26[3] = v24;
  return result;
}

uint64_t sub_20B797768@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v43 = a4;
  uint64_t v40 = a1;
  uint64_t v41 = a2;
  id v44 = a5;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B960);
  uint64_t v5 = sub_20B7D33C8();
  uint64_t v35 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v38 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = &v32[-v38];
  uint64_t v8 = sub_20B7D3AE8();
  uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v37 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v10 = sub_20B7D3548();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v36 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v12 = sub_20B7D33B8();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  MEMORY[0x270FA5388](v12);
  unint64_t v34 = (v14 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v33 = *MEMORY[0x263F06D10];
  uint64_t v15 = *(void (**)(unsigned char *))(v13 + 104);
  v15(&v32[-v34]);
  sub_20B7D33D8();
  uint64_t v16 = MEMORY[0x210536A00](v7);
  uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B968);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v19 = &v32[-v38];
  MEMORY[0x270FA5388](v18);
  sub_20B7D2DA8();
  uint64_t v20 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_20B7D3538();
  MEMORY[0x270FA5388](v21);
  ((void (*)(unsigned char *, void, uint64_t))v15)(&v32[-v34], v33, v12);
  sub_20B7D33D8();
  uint64_t v22 = MEMORY[0x210536A00](v19);
  uint64_t v23 = sub_20B7D3508();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  long long v26 = &v32[-((v25 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_20B7D2DA8();
  sub_20B7D29A8();
  uint64_t v27 = sub_20B7D34E8();
  uint64_t v29 = v28;
  (*(void (**)(unsigned char *, uint64_t))(v24 + 8))(v26, v23);
  uint64_t v45 = v40;
  uint64_t v46 = v41;
  swift_bridgeObjectRetain_n();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v45 = v42;
  uint64_t v46 = v43;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2C08();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  unint64_t v31 = v44;
  *id v44 = v16;
  v31[1] = v22;
  _OWORD v31[2] = v27;
  v31[3] = v29;
  return result;
}

uint64_t sub_20B797C34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t *a7@<X8>)
{
  uint64_t v39 = a5;
  uint64_t v40 = a6;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  uint64_t v38 = a2;
  uint64_t v41 = a7;
  uint64_t v42 = a1;
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B960);
  uint64_t v7 = sub_20B7D33C8();
  uint64_t v31 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v34 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)&v28 - v34;
  uint64_t v10 = sub_20B7D3AE8();
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 64);
  MEMORY[0x270FA5388](v10 - 8);
  unint64_t v33 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v12 = sub_20B7D3548();
  uint64_t v13 = *(void *)(*(void *)(v12 - 8) + 64);
  MEMORY[0x270FA5388](v12 - 8);
  unint64_t v32 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v14 = sub_20B7D33B8();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = *(void *)(v15 + 64);
  MEMORY[0x270FA5388](v14);
  unint64_t v30 = (v16 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v29 = *MEMORY[0x263F06D10];
  uint64_t v28 = *(void (**)(char *))(v15 + 104);
  v28((char *)&v28 - v30);
  sub_20B7D33D8();
  uint64_t v17 = MEMORY[0x210536A00](v9);
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B968);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v28 - v34;
  MEMORY[0x270FA5388](v19);
  sub_20B7D2DA8();
  uint64_t v21 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = sub_20B7D3538();
  MEMORY[0x270FA5388](v22);
  ((void (*)(char *, void, uint64_t))v28)((char *)&v28 - v30, v29, v14);
  sub_20B7D33D8();
  uint64_t v23 = MEMORY[0x210536A00](v20);
  uint64_t v43 = v36;
  uint64_t v44 = v37;
  swift_retain_n();
  uint64_t v24 = v38;
  swift_bridgeObjectRetain_n();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  uint64_t v43 = v39;
  uint64_t v44 = v40;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2C08();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  long long v26 = v41;
  uint64_t v27 = v42;
  *uint64_t v41 = v17;
  v26[1] = v23;
  v26[2] = v27;
  v26[3] = v24;
  return result;
}

uint64_t sub_20B798068()
{
  return sub_20B7D2998();
}

uint64_t sub_20B7980A8()
{
  return sub_20B7D29A8();
}

uint64_t sub_20B7980EC()
{
  return sub_20B7D2A28();
}

uint64_t sub_20B79812C()
{
  return sub_20B7D2F38();
}

uint64_t sub_20B7981B4()
{
  return sub_20B7D3058();
}

uint64_t _s14ContactsUICore25ContactLabeledValueEntityV2eeoiySbAC_ACtFZ_0()
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease_n();
  return 1;
}

unint64_t sub_20B798420()
{
  unint64_t result = qword_26769B970;
  if (!qword_26769B970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B970);
  }
  return result;
}

unint64_t sub_20B798478()
{
  unint64_t result = qword_26769B978;
  if (!qword_26769B978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B978);
  }
  return result;
}

unint64_t sub_20B7984D0()
{
  unint64_t result = qword_26769B980;
  if (!qword_26769B980)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B980);
  }
  return result;
}

unint64_t sub_20B798528()
{
  unint64_t result = qword_26769B988;
  if (!qword_26769B988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B988);
  }
  return result;
}

uint64_t sub_20B79857C()
{
  return sub_20B78EC20(&qword_26769B990, &qword_26769B998);
}

unint64_t sub_20B7985B0()
{
  unint64_t result = qword_26769B9A0;
  if (!qword_26769B9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9A0);
  }
  return result;
}

unint64_t sub_20B798608()
{
  unint64_t result = qword_26769B9A8;
  if (!qword_26769B9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9A8);
  }
  return result;
}

unint64_t sub_20B798660()
{
  unint64_t result = qword_26769B9B0;
  if (!qword_26769B9B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9B0);
  }
  return result;
}

unint64_t sub_20B7986B8()
{
  unint64_t result = qword_26769B9B8;
  if (!qword_26769B9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9B8);
  }
  return result;
}

uint64_t sub_20B79870C()
{
  return sub_20B78EC20(&qword_26769B9C0, &qword_26769B9C8);
}

unint64_t sub_20B798740()
{
  unint64_t result = qword_26769B9D0;
  if (!qword_26769B9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9D0);
  }
  return result;
}

uint64_t destroy for ContactLabeledValueEntity()
{
  swift_release();
  swift_release();
  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ContactLabeledValueEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ContactLabeledValueEntity(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ContactLabeledValueEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactLabeledValueEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactLabeledValueEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLabeledValueEntity()
{
  return &type metadata for ContactLabeledValueEntity;
}

unint64_t sub_20B7989A0()
{
  unint64_t result = qword_26769B9D8;
  if (!qword_26769B9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769B9D8);
  }
  return result;
}

uint64_t type metadata accessor for ContactCardGroupFactory()
{
  return self;
}

uint64_t ContactEntityQuery.init()@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t result = sub_20B7D29D8();
  *a1 = result;
  return result;
}

uint64_t ContactEntityQuery.entities(for:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = a1;
  *(void *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_20B798AE0, 0, 0);
}

uint64_t sub_20B798AE0()
{
  uint64_t v14 = v0;
  if (qword_26769AF08 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_20B7D39F8();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_2676A3C40);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_20B7D39D8();
  os_log_type_t v3 = sub_20B7D3D38();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v13 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2105379C0](v6, MEMORY[0x263F8D310]);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[5] = sub_20B77C87C(v7, v9, &v13);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v2, v3, "[ContactEntityQuery] Querying for identifiers %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v5, -1, -1);
    MEMORY[0x210538E40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  v0[9] = v0[2];
  uint64_t v10 = (void *)swift_task_alloc();
  v0[10] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_20B798D60;
  uint64_t v11 = v0[6];
  return sub_20B793C00(v11);
}

uint64_t sub_20B798D60(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 8_Block_object_dispose(&a9, 8) = a1;
  *(void *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_20B799084;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_20B798E7C;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_20B798E7C()
{
  uint64_t v14 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_20B7D39D8();
  os_log_type_t v2 = sub_20B7D3D38();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    uint64_t v13 = v12;
    *(_DWORD *)uint64_t v4 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v5 = swift_bridgeObjectRetain();
    uint64_t v6 = MEMORY[0x2105379C0](v5, MEMORY[0x263F8D310]);
    unint64_t v8 = v7;
    swift_bridgeObjectRelease();
    v0[4] = sub_20B77C87C(v6, v8, &v13);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v1, v2, "[ContactEntityQuery] Found %ld matching contacts for identifiers %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v12, -1, -1);
    MEMORY[0x210538E40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  unint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v10 = v0[11];
  return v9(v10);
}

uint64_t sub_20B799084()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20B7990E8@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t result = sub_20B7D29D8();
  *a1 = result;
  return result;
}

uint64_t sub_20B79918C(uint64_t a1)
{
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_20B79642C;
  uint64_t v5 = *v1;
  v4[6] = a1;
  v4[7] = v5;
  return MEMORY[0x270FA2498](sub_20B798AE0, 0, 0);
}

uint64_t sub_20B79923C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_20B79B0A8();
  *uint64_t v5 = v2;
  v5[1] = sub_20B796B4C;
  return MEMORY[0x270EE0E38](a1, a2, v6);
}

uint64_t ContactEntityQuery.entities(matching:)(uint64_t a1, uint64_t a2)
{
  void v3[6] = a1;
  v3[7] = a2;
  v3[8] = *v2;
  return MEMORY[0x270FA2498](sub_20B799318, 0, 0);
}

uint64_t sub_20B799318()
{
  uint64_t v14 = v0;
  if (qword_26769AF08 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_20B7D39F8();
  v0[9] = __swift_project_value_buffer(v1, (uint64_t)qword_2676A3C40);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_20B7D39D8();
  os_log_type_t v3 = sub_20B7D3D38();
  BOOL v4 = os_log_type_enabled(v2, v3);
  unint64_t v5 = v0[7];
  if (v4)
  {
    uint64_t v6 = v0[6];
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    uint64_t v13 = v8;
    *(_DWORD *)uint64_t v7 = 136315138;
    swift_bridgeObjectRetain();
    v0[5] = sub_20B77C87C(v6, v5, &v13);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v2, v3, "[ContactEntityQuery] Querying for matching name %s", v7, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v8, -1, -1);
    MEMORY[0x210538E40](v7, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  v0[10] = v0[2];
  unint64_t v9 = (void *)swift_task_alloc();
  v0[11] = v9;
  *unint64_t v9 = v0;
  v9[1] = sub_20B799574;
  uint64_t v11 = v0[6];
  uint64_t v10 = v0[7];
  return sub_20B794034(v11, v10);
}

uint64_t sub_20B799574(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    BOOL v4 = sub_20B799874;
  }
  else
  {
    swift_release();
    BOOL v4 = sub_20B799690;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_20B799690()
{
  uint64_t v12 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_20B7D39D8();
  os_log_type_t v2 = sub_20B7D3D38();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[12];
    uint64_t v5 = v0[6];
    unint64_t v4 = v0[7];
    uint64_t v6 = swift_slowAlloc();
    uint64_t v7 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    uint64_t v11 = v7;
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    v0[4] = sub_20B77C87C(v5, v4, &v11);
    sub_20B7D3D88();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v1, v2, "[ContactEntityQuery] Found %ld matching contact for string: %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v7, -1, -1);
    MEMORY[0x210538E40](v6, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  uint64_t v8 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v9 = v0[12];
  return v8(v9);
}

uint64_t sub_20B799874()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_20B7998D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 16) = a1;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 24) = v7;
  void *v7 = v4;
  v7[1] = sub_20B79999C;
  v7[6] = a2;
  v7[7] = a3;
  v7[8] = *v3;
  return MEMORY[0x270FA2498](sub_20B799318, 0, 0);
}

uint64_t sub_20B79999C(uint64_t a1)
{
  uint64_t v4 = *v2;
  uint64_t v5 = *v2;
  swift_task_dealloc();
  if (!v1) {
    **(void **)(v4 + 16) = a1;
  }
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

uint64_t sub_20B799AAC()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA20);
  __swift_allocate_value_buffer(v0, qword_26769B9E0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B9E0);
  sub_20B7969C8();
  return sub_20B7D3008();
}

uint64_t sub_20B799B28()
{
  return sub_20B7D3088();
}

uint64_t static ContactEntityQuery.sortingOptions.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B79A3D8(&qword_26769AFB0, &qword_26769BA20, (uint64_t)qword_26769B9E0, a1);
}

uint64_t static ContactEntityQuery.sortingOptions.setter(uint64_t a1)
{
  return sub_20B79A4B0(a1, &qword_26769AFB0, &qword_26769BA20, (uint64_t)qword_26769B9E0);
}

uint64_t (*static ContactEntityQuery.sortingOptions.modify())()
{
  if (qword_26769AFB0 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA20);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B9E0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20B799C48()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA28);
  __swift_allocate_value_buffer(v0, qword_26769B9F8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B9F8);
  type metadata accessor for ContactEntityPropertyComparator();
  sub_20B7969C8();
  return sub_20B7D2F78();
}

uint64_t sub_20B799CD4()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA90);
  swift_getKeyPath();
  sub_20B7D2F08();
  sub_20B7969C8();
  uint64_t v0 = sub_20B7D2DA8();
  swift_release();
  swift_getKeyPath();
  sub_20B7D2DA8();
  sub_20B7D2F08();
  uint64_t v1 = sub_20B7D2DA8();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20B7DB9D0;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  sub_20B7D3C58();
  type metadata accessor for ContactEntityPropertyComparator();
  sub_20B7D2DA8();
  uint64_t v3 = sub_20B7D3038();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v3;
}

uint64_t sub_20B799E38@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  uint64_t v4 = sub_20B7D2C18();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_20B799F44()
{
  return sub_20B79A088();
}

uint64_t sub_20B799F5C@<X0>(void *a1@<X8>)
{
  return sub_20B79A310(a1);
}

uint64_t sub_20B799F64@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  uint64_t v4 = sub_20B7D2C18();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v4;
  return result;
}

uint64_t sub_20B79A070()
{
  return sub_20B79A088();
}

uint64_t sub_20B79A088()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA98);
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  id v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAA0);
  swift_allocObject();
  uint64_t v9 = sub_20B798660;
  sub_20B79B1C4(&qword_26769BAA8, &qword_26769BAB0, (void (*)(void))sub_20B798660);
  sub_20B79B114();
  sub_20B79B170();
  sub_20B7D2EE8();
  sub_20B7969C8();
  sub_20B7D3078();
  swift_release();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAC8);
  unint64_t v4 = (*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B7DB980;
  (*(void (**)(unint64_t, char *, uint64_t))(v1 + 16))(v5 + v4, v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAD0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAB0);
  type metadata accessor for ContactEntityPropertyComparator();
  sub_20B79B1C4(&qword_26769BAD8, &qword_26769BAB0, (void (*)(void))v9);
  uint64_t v6 = sub_20B7D3068();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v6;
}

uint64_t sub_20B79A308@<X0>(void *a1@<X8>)
{
  return sub_20B79A310(a1);
}

uint64_t sub_20B79A310@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2BF8();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  *a1 = v3;
  a1[1] = v4;
  type metadata accessor for ContactEntityPropertyComparator();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static ContactEntityQuery.properties.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B79A3D8(&qword_26769AFB8, &qword_26769BA28, (uint64_t)qword_26769B9F8, a1);
}

uint64_t sub_20B79A3D8@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t static ContactEntityQuery.properties.setter(uint64_t a1)
{
  return sub_20B79A4B0(a1, &qword_26769AFB8, &qword_26769BA28, (uint64_t)qword_26769B9F8);
}

uint64_t sub_20B79A4B0(uint64_t a1, void *a2, uint64_t *a3, uint64_t a4)
{
  if (*a2 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a3);
  uint64_t v8 = __swift_project_value_buffer(v7, a4);
  swift_beginAccess();
  uint64_t v9 = *(void *)(v7 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24))(v8, a1, v7);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(a1, v7);
}

uint64_t (*static ContactEntityQuery.properties.modify())()
{
  if (qword_26769AFB8 != -1) {
    swift_once();
  }
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BA28);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769B9F8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ContactEntityQuery.entities(matching:mode:sortedBy:limit:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_26769BA38 + dword_26769BA38);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B79B234;
  return v5(a1);
}

uint64_t sub_20B79A6DC@<X0>(uint64_t a1@<X8>)
{
  return sub_20B79A734(&qword_26769AFB8, &qword_26769BA28, (uint64_t)qword_26769B9F8, a1);
}

uint64_t sub_20B79A708@<X0>(uint64_t a1@<X8>)
{
  return sub_20B79A734(&qword_26769AFB0, &qword_26769BA20, (uint64_t)qword_26769B9E0, a1);
}

uint64_t sub_20B79A734@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(a2);
  uint64_t v8 = __swift_project_value_buffer(v7, a3);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a4, v8, v7);
}

uint64_t sub_20B79A7E4()
{
  return sub_20B7D2EF8();
}

uint64_t sub_20B79A7FC(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)&dword_26769BA38 + dword_26769BA38);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 24) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_20B79B230;
  return v6(a2);
}

uint64_t ContactEntityQuery.init(entityProvider:)@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v2 = sub_20B7D29D8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D29C8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_20B79A980(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = a1;
  *(void *)(v2 + 56) = v3;
  return MEMORY[0x270FA2498](sub_20B79A9A4, 0, 0);
}

uint64_t sub_20B79A9A4()
{
  uint64_t v15 = v0;
  if (qword_26769AF08 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_20B7D39F8();
  v0[8] = __swift_project_value_buffer(v1, (uint64_t)qword_2676A3C40);
  swift_bridgeObjectRetain_n();
  uint64_t v2 = sub_20B7D39D8();
  os_log_type_t v3 = sub_20B7D3D38();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    uint64_t v14 = v5;
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v6 = type metadata accessor for ContactEntityPropertyComparator();
    uint64_t v7 = swift_bridgeObjectRetain();
    uint64_t v8 = MEMORY[0x2105379C0](v7, v6);
    unint64_t v10 = v9;
    swift_bridgeObjectRelease();
    v0[5] = sub_20B77C87C(v8, v10, &v14);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v2, v3, "[ContactEntityQuery] Querying for matching property query %s", v4, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v5, -1, -1);
    MEMORY[0x210538E40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  sub_20B7D2DA8();
  sub_20B7D29B8();
  swift_release();
  v0[9] = v0[2];
  uint64_t v11 = (void *)swift_task_alloc();
  v0[10] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_20B79AC2C;
  uint64_t v12 = v0[6];
  return sub_20B794980(v12);
}

uint64_t sub_20B79AC2C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 8_Block_object_dispose(&a9, 8) = a1;
  *(void *)(v3 + 96) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_20B79B238;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_20B79AD48;
  }
  return MEMORY[0x270FA2498](v4, 0, 0);
}

uint64_t sub_20B79AD48()
{
  uint64_t v15 = v0;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v1 = sub_20B7D39D8();
  os_log_type_t v2 = sub_20B7D3D38();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = v0[11];
    uint64_t v4 = swift_slowAlloc();
    uint64_t v13 = swift_slowAlloc();
    uint64_t v14 = v13;
    *(_DWORD *)uint64_t v4 = 134218242;
    v0[3] = *(void *)(v3 + 16);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    *(_WORD *)(v4 + 12) = 2080;
    uint64_t v5 = type metadata accessor for ContactEntityPropertyComparator();
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = MEMORY[0x2105379C0](v6, v5);
    unint64_t v9 = v8;
    swift_bridgeObjectRelease();
    v0[4] = sub_20B77C87C(v7, v9, &v14);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_20B704000, v1, v2, "[ContactEntityQuery] Found %ld matching contact for comparators: %s", (uint8_t *)v4, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v13, -1, -1);
    MEMORY[0x210538E40](v4, -1, -1);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
  }

  unint64_t v10 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v11 = v0[11];
  return v10(v11);
}

unint64_t sub_20B79AF5C()
{
  unint64_t result = qword_26769BA40;
  if (!qword_26769BA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BA40);
  }
  return result;
}

unint64_t sub_20B79AFB4()
{
  unint64_t result = qword_26769BA48[0];
  if (!qword_26769BA48[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26769BA48);
  }
  return result;
}

unint64_t sub_20B79B00C()
{
  unint64_t result = qword_26769BA60[0];
  if (!qword_26769BA60[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26769BA60);
  }
  return result;
}

uint64_t sub_20B79B060()
{
  return sub_20B79B1C4((unint64_t *)&qword_26769B930, qword_26769B938, (void (*)(void))sub_20B79309C);
}

unint64_t sub_20B79B0A8()
{
  unint64_t result = qword_26769BA78[0];
  if (!qword_26769BA78[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26769BA78);
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntityQuery()
{
  return &type metadata for ContactEntityQuery;
}

unint64_t sub_20B79B114()
{
  unint64_t result = qword_26769BAB8;
  if (!qword_26769BAB8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769BAB0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BAB8);
  }
  return result;
}

unint64_t sub_20B79B170()
{
  unint64_t result = qword_26769BAC0;
  if (!qword_26769BAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BAC0);
  }
  return result;
}

uint64_t sub_20B79B1C4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ContactEntity.init(_:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  id v218 = a1;
  uint64_t v202 = a2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAE8);
  uint64_t v2 = sub_20B7D33C8();
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = v3;
  unint64_t v5 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = sub_20B7D3AE8();
  uint64_t v214 = *(void *)(*(void *)(v6 - 8) + 64);
  MEMORY[0x270FA5388](v6 - 8);
  *(void *)&long long v219 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v8 = sub_20B7D3548();
  uint64_t v207 = *(void *)(*(void *)(v8 - 8) + 64);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v206 = (char *)((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3538();
  uint64_t v220 = (void *)sub_20B7D33B8();
  unint64_t v10 = *(void *)(*(v220 - 1) + 64);
  MEMORY[0x270FA5388](v220);
  unint64_t v213 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  LODWORD(v212) = *MEMORY[0x263F06D10];
  unint64_t v211 = *(void (**)(char *))(v11 + 104);
  id v221 = (uint64_t *)(v11 + 104);
  v211((char *)&v197 - v213);
  sub_20B7D33D8();
  uint64_t v12 = MEMORY[0x2105369E0]((char *)&v197 - v5);
  uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAD0);
  uint64_t v210 = v4;
  uint64_t v14 = MEMORY[0x270FA5388](v13);
  unint64_t v209 = v5;
  MEMORY[0x270FA5388](v14);
  uint64_t v217 = v12;
  sub_20B7D2DA8();
  uint64_t v15 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_20B7D3538();
  MEMORY[0x270FA5388](v16);
  ((void (*)(char *, void, void *))v211)((char *)&v197 - v213, v212, v220);
  sub_20B7D33D8();
  unint64_t v208 = sub_20B798420();
  uint64_t v17 = MEMORY[0x2105369B0]((char *)&v197 - v5, v208);
  uint64_t v18 = MEMORY[0x270FA5388](v17);
  uint64_t v19 = (char *)&v197 - v5;
  uint64_t v216 = MEMORY[0x270FA5388](v18);
  sub_20B7D2DA8();
  uint64_t v20 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v20);
  uint64_t v21 = sub_20B7D3538();
  unint64_t v205 = v10;
  MEMORY[0x270FA5388](v21);
  unint64_t v22 = v213;
  uint64_t v23 = v212;
  uint64_t v24 = (void (*)(char *, uint64_t, void *))v211;
  ((void (*)(char *, void, void *))v211)((char *)&v197 - v213, v212, v220);
  sub_20B7D33D8();
  uint64_t v25 = MEMORY[0x2105369B0](v19, v208);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v27 = (char *)&v197 - v209;
  uint64_t v215 = MEMORY[0x270FA5388](v26);
  sub_20B7D2DA8();
  uint64_t v28 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_20B7D3538();
  MEMORY[0x270FA5388](v29);
  unint64_t v30 = (char *)&v197 - v22;
  uint64_t v31 = v220;
  v24(v30, v23, v220);
  sub_20B7D33D8();
  uint64_t v32 = MEMORY[0x2105369B0](v27, v208);
  uint64_t v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAF0);
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v35 = (char *)&v197 - v209;
  MEMORY[0x270FA5388](v34);
  uint64_t v214 = v32;
  sub_20B7D2DA8();
  uint64_t v36 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v36);
  uint64_t v37 = sub_20B7D3538();
  MEMORY[0x270FA5388](v37);
  ((void (*)(char *, void, void *))v211)((char *)&v197 - v213, v212, v31);
  sub_20B7D33D8();
  uint64_t v38 = MEMORY[0x2105369F0](v35);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy((char *)v222, "entityProvider");
  HIBYTE(v222[1]) = -18;
  unint64_t v213 = v38;
  sub_20B7D2DA8();
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v39 = sub_20B7D29D8();
  id v40 = objc_allocWithZone(MEMORY[0x263EFEA20]);
  uint64_t v212 = v39;
  sub_20B7D2DA8();
  id v41 = objc_msgSend(v40, sel_init);
  objc_msgSend(v41, sel_setStyle_, 0);
  objc_msgSend(v41, sel_setFallbackStyle_, -1);
  id v42 = v218;
  id v43 = objc_msgSend(v218, sel_identifier);
  uint64_t v201 = sub_20B7D3B08();
  uint64_t v45 = v44;

  unint64_t v211 = (void (*)(char *))v45;
  swift_bridgeObjectRetain();
  id v200 = v41;
  id v46 = objc_msgSend(v41, sel_stringFromContact_, v42);
  if (v46)
  {
    uint64_t v47 = v46;
    uint64_t v199 = sub_20B7D3B08();
    unint64_t v49 = v48;
  }
  else
  {
    uint64_t v199 = 0;
    unint64_t v49 = 0;
  }
  unint64_t v209 = v49;
  swift_bridgeObjectRetain();
  id v50 = v218;
  id v51 = objc_msgSend(v218, sel_identifier);
  uint64_t v198 = sub_20B7D3B08();
  uint64_t v210 = v52;

  swift_bridgeObjectRetain();
  id v53 = objc_msgSend(v50, sel_keyVector);
  unint64_t v208 = sub_20B7D3388();
  uint64_t v207 = *(void *)(v208 - 8);
  uint64_t v54 = v207;
  MEMORY[0x270FA5388](v208);
  unint64_t v206 = (char *)&v197 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v220 = v53;
  id v56 = objc_msgSend(v50, sel_namePrefix);
  id v221 = (uint64_t *)sub_20B7D3B08();
  *(void *)&long long v219 = v57;

  id v58 = objc_msgSend(v50, sel_givenName);
  unint64_t v205 = sub_20B7D3B08();
  uint64_t v204 = v59;

  id v60 = objc_msgSend(v50, sel_middleName);
  *(void *)&long long v203 = sub_20B7D3B08();

  id v61 = objc_msgSend(v50, sel_familyName);
  sub_20B7D3B08();

  id v62 = objc_msgSend(v50, sel_nameSuffix);
  sub_20B7D3B08();

  id v63 = objc_msgSend(v50, sel_nickname);
  sub_20B7D3B08();

  uint64_t v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
  MEMORY[0x270FA5388](v64 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, unint64_t))(v54 + 56))((char *)&v197 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v208);
  id v66 = v206;
  sub_20B7D3328();
  *(void *)&long long v219 = sub_20B7D2B78();
  id v221 = &v197;
  uint64_t v67 = *(void *)(v219 - 8);
  uint64_t v68 = *(void *)(v67 + 64);
  MEMORY[0x270FA5388](v219);
  unint64_t v205 = (v68 + 15) & 0xFFFFFFFFFFFFFFF0;
  id v69 = (char *)&v197 - v205;
  uint64_t v70 = sub_20B7D2B28();
  uint64_t v204 = &v197;
  uint64_t v71 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  uint64_t v73 = (uint64_t *)((char *)&v197 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v220 = v220;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v74 = objc_msgSend(v218, sel_identifier);
  uint64_t v75 = sub_20B7D3B08();
  uint64_t v77 = v76;

  *uint64_t v73 = v75;
  v73[1] = v77;
  (*(void (**)(uint64_t *, void, uint64_t))(v71 + 104))(v73, *MEMORY[0x263EFB7C0], v70);
  uint64_t v78 = sub_20B7D2B48();
  *(void *)&long long v203 = &v197;
  uint64_t v79 = *(void *)(v78 - 8);
  MEMORY[0x270FA5388](v78);
  uint64_t v81 = (char *)&v197 - ((v80 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, char *, unint64_t))(v207 + 16))(v81, v66, v208);
  (*(void (**)(char *, void, uint64_t))(v79 + 104))(v81, *MEMORY[0x263EFB7E0], v78);
  uint64_t v82 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAF8);
  MEMORY[0x270FA5388](v82 - 8);
  uint64_t v84 = (char *)&v197 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_20B7D2B68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v84, 1, 1, v85);
  uint64_t v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BB00);
  MEMORY[0x270FA5388](v86 - 8);
  long long v88 = (char *)&v197 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_20B7D2F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v89 - 8) + 56))(v88, 1, 1, v89);
  uint64_t v90 = sub_20B7D2B38();
  uint64_t v204 = &v197;
  MEMORY[0x270FA5388](v90);
  uint64_t v91 = v219;
  (*(void (**)(char *, char *, void))(v67 + 16))((char *)&v197 - v205, v69, v219);
  sub_20B7D2C08();
  (*(void (**)(char *, uint64_t))(v67 + 8))(v69, v91);
  swift_release();
  swift_bridgeObjectRelease();
  id v92 = v220;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  long long v93 = (uint64_t *)v92;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v94 = objc_msgSend(v218, sel_phoneNumbers);
  unint64_t v205 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  unint64_t v95 = sub_20B7D3C38();

  if (v95 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v96 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v96 = *(void *)((v95 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v204 = v93;
  if (v96)
  {
    v222[0] = MEMORY[0x263F8EE78];
    uint64_t result = sub_20B7A219C(0, v96 & ~(v96 >> 63), 0);
    if (v96 < 0)
    {
      __break(1u);
      goto LABEL_58;
    }
    uint64_t v98 = 0;
    uint64_t v99 = v222[0];
    *(void *)&long long v219 = v95 & 0xC000000000000001;
    uint64_t v220 = (void *)v96;
    id v221 = (uint64_t *)v95;
    do
    {
      if ((void)v219) {
        id v100 = (id)MEMORY[0x210537C20](v98, v95);
      }
      else {
        id v100 = *(id *)(v95 + 8 * (void)v98 + 32);
      }
      uint64_t v101 = v100;
      id v102 = objc_msgSend(v100, sel_identifier);
      uint64_t v103 = sub_20B7D3B08();
      uint64_t v105 = v104;

      id v106 = objc_msgSend(v101, sel_label);
      if (v106)
      {
        uint64_t v107 = v106;
        uint64_t v108 = sub_20B7D3B08();
        uint64_t v110 = v109;
      }
      else
      {
        uint64_t v108 = 0;
        uint64_t v110 = 0;
      }
      id v111 = objc_msgSend(v101, sel_value);
      id v112 = objc_msgSend(v111, sel_stringValue);

      uint64_t v113 = sub_20B7D3B08();
      uint64_t v115 = v114;

      sub_20B797C34(v103, v105, v108, v110, v113, v115, (uint64_t *)&v223);
      long long v116 = v223;
      uint64_t v117 = v224;
      uint64_t v118 = v225;
      v222[0] = v99;
      unint64_t v120 = *(void *)(v99 + 16);
      unint64_t v119 = *(void *)(v99 + 24);
      if (v120 >= v119 >> 1)
      {
        long long v203 = v223;
        sub_20B7A219C(v119 > 1, v120 + 1, 1);
        long long v116 = v203;
        uint64_t v99 = v222[0];
      }
      *(void *)(v99 + 16) = v120 + 1;
      uint64_t v121 = v99 + 32 * v120;
      *(_OWORD *)(v121 + 32) = v116;
      uint64_t v98 = (char *)v98 + 1;
      *(void *)(v121 + 4_Block_object_dispose(&a9, 8) = v117;
      *(void *)(v121 + 56) = v118;
      unint64_t v95 = (unint64_t)v221;
    }
    while (v220 != v98);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v99 = MEMORY[0x263F8EE78];
  }
  *(void *)&long long v223 = v99;
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v122 = v204;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v123 = v122;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v124 = objc_msgSend(v218, sel_emailAddresses);
  unint64_t v125 = sub_20B7D3C38();

  uint64_t v204 = v123;
  if (!(v125 >> 62))
  {
    uint64_t v126 = *(void *)((v125 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v126) {
      goto LABEL_22;
    }
LABEL_36:
    swift_bridgeObjectRelease();
    uint64_t v128 = MEMORY[0x263F8EE78];
    goto LABEL_37;
  }
  swift_bridgeObjectRetain();
  uint64_t v126 = sub_20B7D3F38();
  swift_bridgeObjectRelease();
  if (!v126) {
    goto LABEL_36;
  }
LABEL_22:
  v222[0] = MEMORY[0x263F8EE78];
  uint64_t result = sub_20B7A219C(0, v126 & ~(v126 >> 63), 0);
  if (v126 < 0)
  {
LABEL_58:
    __break(1u);
    goto LABEL_59;
  }
  uint64_t v127 = 0;
  uint64_t v128 = v222[0];
  *(void *)&long long v219 = v125 & 0xC000000000000001;
  uint64_t v220 = (void *)v126;
  id v221 = (uint64_t *)v125;
  do
  {
    if ((void)v219) {
      id v129 = (id)MEMORY[0x210537C20](v127, v125);
    }
    else {
      id v129 = *(id *)(v125 + 8 * (void)v127 + 32);
    }
    uint64_t v130 = v129;
    id v131 = objc_msgSend(v129, sel_identifier);
    uint64_t v132 = sub_20B7D3B08();
    uint64_t v134 = v133;

    id v135 = objc_msgSend(v130, sel_label);
    if (v135)
    {
      uint64_t v136 = v135;
      uint64_t v137 = sub_20B7D3B08();
      uint64_t v139 = v138;
    }
    else
    {
      uint64_t v137 = 0;
      uint64_t v139 = 0;
    }
    id v140 = objc_msgSend(v130, sel_value);
    uint64_t v141 = sub_20B7D3B08();
    uint64_t v143 = v142;

    sub_20B797C34(v132, v134, v137, v139, v141, v143, (uint64_t *)&v223);
    long long v144 = v223;
    uint64_t v145 = v224;
    uint64_t v146 = v225;
    v222[0] = v128;
    unint64_t v148 = *(void *)(v128 + 16);
    unint64_t v147 = *(void *)(v128 + 24);
    if (v148 >= v147 >> 1)
    {
      long long v203 = v223;
      sub_20B7A219C(v147 > 1, v148 + 1, 1);
      long long v144 = v203;
      uint64_t v128 = v222[0];
    }
    *(void *)(v128 + 16) = v148 + 1;
    uint64_t v149 = v128 + 32 * v148;
    *(_OWORD *)(v149 + 32) = v144;
    uint64_t v127 = (char *)v127 + 1;
    *(void *)(v149 + 4_Block_object_dispose(&a9, 8) = v145;
    *(void *)(v149 + 56) = v146;
    unint64_t v125 = (unint64_t)v221;
  }
  while (v220 != v127);
  swift_bridgeObjectRelease();
LABEL_37:
  *(void *)&long long v223 = v128;
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v150 = v204;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v151 = v150;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v152 = objc_msgSend(v218, sel_postalAddresses);
  unint64_t v153 = sub_20B7D3C38();

  uint64_t v220 = v151;
  if (v153 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v154 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v154)
    {
LABEL_39:
      v222[0] = MEMORY[0x263F8EE78];
      uint64_t result = sub_20B7A219C(0, v154 & ~(v154 >> 63), 0);
      if ((v154 & 0x8000000000000000) == 0)
      {
        uint64_t v155 = 0;
        uint64_t v156 = v222[0];
        id v221 = (uint64_t *)(v153 & 0xC000000000000001);
        unint64_t v157 = v153;
        do
        {
          if (v221) {
            id v158 = (id)MEMORY[0x210537C20](v155, v153);
          }
          else {
            id v158 = *(id *)(v153 + 8 * v155 + 32);
          }
          uint64_t v159 = v158;
          id v160 = objc_msgSend(v158, sel_label);
          if (v160)
          {
            v161 = v160;
            uint64_t v162 = sub_20B7D3B08();
            uint64_t v164 = v163;
          }
          else
          {
            uint64_t v162 = 0;
            uint64_t v164 = 0;
          }
          id v165 = objc_msgSend(v159, sel_value);
          id v166 = objc_msgSend(v165, sel_formattedAddress);

          uint64_t v167 = sub_20B7D3B08();
          uint64_t v169 = v168;

          sub_20B797768(v162, v164, v167, v169, (uint64_t *)&v223);
          long long v170 = v223;
          uint64_t v171 = v224;
          uint64_t v172 = v225;
          v222[0] = v156;
          unint64_t v174 = *(void *)(v156 + 16);
          unint64_t v173 = *(void *)(v156 + 24);
          if (v174 >= v173 >> 1)
          {
            long long v219 = v223;
            sub_20B7A219C(v173 > 1, v174 + 1, 1);
            long long v170 = v219;
            uint64_t v156 = v222[0];
          }
          *(void *)(v156 + 16) = v174 + 1;
          uint64_t v175 = v156 + 32 * v174;
          *(_OWORD *)(v175 + 32) = v170;
          ++v155;
          *(void *)(v175 + 4_Block_object_dispose(&a9, 8) = v171;
          *(void *)(v175 + 56) = v172;
          unint64_t v153 = v157;
        }
        while (v154 != v155);
        swift_bridgeObjectRelease();
        goto LABEL_53;
      }
LABEL_59:
      __break(1u);
      return result;
    }
  }
  else
  {
    uint64_t v154 = *(void *)((v153 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v154) {
      goto LABEL_39;
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v156 = MEMORY[0x263F8EE78];
LABEL_53:
  *(void *)&long long v223 = v156;
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();
  id v176 = v220;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v177 = v176;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v178 = objc_msgSend(v218, sel_birthday);
  uint64_t v179 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  id v221 = &v197;
  uint64_t v180 = *(void *)(*(void *)(v179 - 8) + 64);
  MEMORY[0x270FA5388](v179 - 8);
  v181 = (char *)&v197 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v178)
  {
    sub_20B7D31D8();

    uint64_t v182 = sub_20B7D32C8();
    uint64_t v183 = (*(uint64_t (**)(char *, void, uint64_t, uint64_t))(*(void *)(v182 - 8) + 56))((char *)&v197 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0), 0, 1, v182);
  }
  else
  {
    uint64_t v184 = sub_20B7D32C8();
    uint64_t v183 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v184 - 8) + 56))((char *)&v197 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v184);
  }
  MEMORY[0x270FA5388](v183);
  sub_20B7729FC((uint64_t)v181, (uint64_t)&v197 - ((v180 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v185 = v213;
  sub_20B7D2C08();
  sub_20B793854((uint64_t)v181);

  (*(void (**)(char *, unint64_t))(v207 + 8))(v206, v208);
  uint64_t v186 = v212;
  swift_release_n();
  uint64_t v187 = v210;
  swift_bridgeObjectRelease_n();

  v188 = (void (*)(void))v211;
  swift_bridgeObjectRelease_n();
  unint64_t v189 = v209;
  swift_bridgeObjectRelease_n();
  swift_release_n();
  uint64_t v190 = v214;
  swift_release_n();
  uint64_t v191 = v215;
  swift_release_n();
  uint64_t v192 = v216;
  swift_release_n();
  uint64_t v193 = v217;
  uint64_t result = swift_release_n();
  uint64_t v194 = v202;
  *uint64_t v202 = v193;
  v194[1] = v192;
  v194[2] = v191;
  v194[3] = v190;
  uint64_t v195 = v199;
  v194[4] = v185;
  v194[5] = v195;
  uint64_t v196 = v201;
  v194[6] = v189;
  v194[7] = v196;
  v194[8] = (uint64_t)v188;
  v194[9] = (uint64_t)v177;
  v194[10] = v198;
  v194[11] = v187;
  v194[12] = v186;
  return result;
}

uint64_t ContactEntity.init(identifier:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v86 = a2;
  uint64_t v87 = a1;
  uint64_t v78 = a3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAE8);
  uint64_t v3 = sub_20B7D33C8();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v93 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = sub_20B7D3AE8();
  uint64_t v89 = *(char **)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v79 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v7 = sub_20B7D3548();
  uint64_t v80 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  unint64_t v90 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v92 = sub_20B7D33B8();
  uint64_t v88 = *(void *)(*(void *)(v92 - 8) + 64);
  MEMORY[0x270FA5388](v92);
  unint64_t v84 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = *MEMORY[0x263F06D10];
  uint64_t v91 = *(void (**)(char *, uint64_t))(v11 + 104);
  uint64_t v94 = v11 + 104;
  v91((char *)&v76 - v84, v10);
  sub_20B7D33D8();
  uint64_t v77 = MEMORY[0x2105369E0]((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAD0);
  uint64_t v82 = v4;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  MEMORY[0x270FA5388](v13);
  sub_20B7D2DA8();
  uint64_t v14 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v14);
  uint64_t v15 = sub_20B7D3538();
  MEMORY[0x270FA5388](v15);
  unsigned int v83 = v10;
  ((void (*)(char *, uint64_t, uint64_t))v91)((char *)&v76 - v84, v10, v92);
  sub_20B7D33D8();
  unint64_t v81 = sub_20B798420();
  uint64_t v85 = MEMORY[0x2105369B0]((char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v81);
  uint64_t v16 = MEMORY[0x270FA5388](v85);
  uint64_t v17 = (char *)&v76 - v93;
  MEMORY[0x270FA5388](v16);
  sub_20B7D2DA8();
  uint64_t v18 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v18);
  uint64_t v19 = sub_20B7D3538();
  MEMORY[0x270FA5388](v19);
  unint64_t v20 = v84;
  uint64_t v21 = v10;
  unint64_t v22 = v91;
  uint64_t v23 = v92;
  ((void (*)(char *, uint64_t, uint64_t))v91)((char *)&v76 - v84, v21, v92);
  sub_20B7D33D8();
  uint64_t v76 = MEMORY[0x2105369B0](v17, v81);
  uint64_t v24 = MEMORY[0x270FA5388](v76);
  uint64_t v25 = (char *)&v76 - v93;
  MEMORY[0x270FA5388](v24);
  sub_20B7D2DA8();
  uint64_t v26 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_20B7D3538();
  MEMORY[0x270FA5388](v27);
  ((void (*)(char *, void, uint64_t))v22)((char *)&v76 - v20, v83, v23);
  sub_20B7D33D8();
  uint64_t v28 = MEMORY[0x2105369B0](v25, v81);
  uint64_t v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAF0);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v31 = (char *)&v76 - v93;
  MEMORY[0x270FA5388](v30);
  sub_20B7D2DA8();
  uint64_t v32 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v32);
  uint64_t v33 = sub_20B7D3538();
  MEMORY[0x270FA5388](v33);
  ((void (*)(char *, void, uint64_t))v91)((char *)&v76 - v20, v83, v92);
  sub_20B7D33D8();
  uint64_t v34 = MEMORY[0x2105369F0](v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v95, "entityProvider");
  v95[15] = -18;
  uint64_t v88 = v34;
  sub_20B7D2DA8();
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v94 = sub_20B7D29D8();
  sub_20B7D3B08();
  uint64_t v35 = v86;
  swift_bridgeObjectRetain_n();
  sub_20B7D2DA8();
  uint64_t v36 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(self, sel_keyVectorWithKey_, v36);

  uint64_t v38 = sub_20B7D2B78();
  uint64_t v92 = *(void *)(v38 - 8);
  unint64_t v93 = v38;
  unint64_t v90 = *(void *)(v92 + 64);
  MEMORY[0x270FA5388](v38);
  uint64_t v91 = (void (*)(char *, uint64_t))((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = (char *)((char *)&v76 - (char *)v91);
  uint64_t v40 = sub_20B7D2B28();
  MEMORY[0x270FA5388](v40);
  id v42 = (uint64_t *)((char *)&v76 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v42 = v87;
  v42[1] = v35;
  (*(void (**)(void *, void))(v43 + 104))(v42, *MEMORY[0x263EFB7C0]);
  uint64_t v44 = sub_20B7D2B48();
  MEMORY[0x270FA5388](v44);
  (*(void (**)(char *, void))(v46 + 104))((char *)&v76 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263EFB7F0]);
  uint64_t v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BAF8);
  MEMORY[0x270FA5388](v47 - 8);
  unint64_t v49 = (char *)&v76 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = sub_20B7D2B68();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v50 - 8) + 56))(v49, 1, 1, v50);
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BB00);
  MEMORY[0x270FA5388](v51 - 8);
  id v53 = (char *)&v76 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_20B7D2F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v54 - 8) + 56))(v53, 1, 1, v54);
  swift_bridgeObjectRetain_n();
  id v55 = v37;
  uint64_t v56 = v77;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  uint64_t v57 = v76;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  id v58 = v55;
  uint64_t v59 = v94;
  sub_20B7D2DA8();
  id v60 = v89;
  uint64_t v61 = sub_20B7D2B38();
  MEMORY[0x270FA5388](v61);
  uint64_t v62 = v92;
  unint64_t v63 = v93;
  (*(void (**)(int64_t, char *, unint64_t))(v92 + 16))((char *)&v76 - (char *)v91, v60, v93);
  sub_20B7D2C08();
  (*(void (**)(char *, unint64_t))(v62 + 8))(v60, v63);
  uint64_t v64 = v59;
  swift_release();
  uint64_t v65 = v58;

  uint64_t v66 = v86;
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v67 = v88;
  swift_release();
  swift_release();
  swift_release();
  uint64_t v68 = v85;
  swift_release();
  swift_release();
  uint64_t v69 = MEMORY[0x263F8EE78];
  uint64_t v96 = MEMORY[0x263F8EE78];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain_n();
  id v70 = v65;
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = v69;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain_n();
  id v71 = v70;
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v96 = v69;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain_n();
  id v72 = v71;
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release_n();

  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  id v74 = v78;
  *uint64_t v78 = v56;
  v74[1] = v68;
  v74[2] = v57;
  v74[3] = v28;
  v74[4] = v67;
  v74[5] = 0;
  uint64_t v75 = v87;
  v74[6] = 0;
  v74[7] = v75;
  v74[8] = v66;
  v74[9] = (uint64_t)v72;
  v74[10] = v75;
  v74[11] = v66;
  v74[12] = v64;
  return result;
}

uint64_t ContactEntity.$phoneNumbers.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactEntity.$emailAddresses.getter()
{
  return sub_20B7D2C18();
}

uint64_t sub_20B79DDAC()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t result = sub_20B7D29D8();
  qword_26769BAE0 = result;
  return result;
}

uint64_t static ContactEntity.defaultQuery.getter@<X0>(void *a1@<X8>)
{
  if (qword_26769AFC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_26769BAE0;
  return sub_20B7D2DA8();
}

uint64_t static ContactEntity.defaultQuery.setter(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if (qword_26769AFC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  qword_26769BAE0 = v1;
  return swift_release();
}

uint64_t (*static ContactEntity.defaultQuery.modify())()
{
  if (qword_26769AFC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static ContactEntity.updateIntent.getter()
{
  if (qword_26769AFC8 != -1) {
    return swift_once();
  }
  return result;
}

uint64_t static ContactEntity.updateIntent.setter()
{
  if (qword_26769AFC8 != -1) {
    return swift_once();
  }
  return result;
}

uint64_t (*static ContactEntity.updateIntent.modify())()
{
  if (qword_26769AFC8 != -1) {
    swift_once();
  }
  return nullsub_1;
}

uint64_t ContactEntity.person.getter()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B79E0BC(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20B79E1CC(uint64_t a1, void *a2)
{
  uint64_t v4 = sub_20B7D2B78();
  uint64_t v21 = *(void *)(v4 - 8);
  uint64_t v5 = *(void *)(v21 + 64);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v8 = v7(v6, a1, v4);
  uint64_t v9 = a2[1];
  v15[1] = *a2;
  v15[2] = v9;
  uint64_t v10 = a2[2];
  uint64_t v11 = a2[4];
  uint64_t v17 = a2[3];
  uint64_t v18 = v11;
  uint64_t v12 = a2[6];
  uint64_t v13 = (void *)a2[9];
  uint64_t v19 = a2[8];
  uint64_t v20 = v12;
  void v15[3] = v10;
  id v16 = v13;
  MEMORY[0x270FA5388](v8);
  v7(v6, (uint64_t)v6, v4);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v16 = v16;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v6, v4);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ContactEntity.person.setter(uint64_t a1)
{
  uint64_t v2 = sub_20B7D2B78();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t (*ContactEntity.person.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactEntity.$person.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactEntity.phoneNumbers.getter()
{
  sub_20B7D2BF8();
  return v1;
}

uint64_t sub_20B79E598@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_20B79E6A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ContactEntity.phoneNumbers.setter()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactEntity.phoneNumbers.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactEntity.emailAddresses.getter()
{
  sub_20B7D2BF8();
  return v1;
}

uint64_t sub_20B79E880@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_20B79E98C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ContactEntity.emailAddresses.setter()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactEntity.emailAddresses.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactEntity.postalAddresses.getter()
{
  sub_20B7D2BF8();
  return v1;
}

uint64_t sub_20B79EB68@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v2 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_20B79EC74(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v3 = v2;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ContactEntity.postalAddresses.setter()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactEntity.postalAddresses.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactEntity.$postalAddresses.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactEntity.birthday.getter()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B79EE68(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20B79EF78(uint64_t a1, void *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20B7729FC(a1, (uint64_t)v6);
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  v13[1] = *a2;
  v13[2] = v9;
  v13[3] = a2[3];
  v13[4] = v8;
  v13[5] = a2[6];
  uint64_t v10 = (void *)a2[9];
  MEMORY[0x270FA5388](v7);
  sub_20B7729FC((uint64_t)v6, (uint64_t)v6);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v11 = v10;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2C08();
  sub_20B793854((uint64_t)v6);
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ContactEntity.birthday.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7729FC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20B7D2C08();
  return sub_20B793854(a1);
}

uint64_t (*ContactEntity.birthday.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactEntity.$birthday.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactEntity.id.getter()
{
  uint64_t v1 = *(void *)(v0 + 80);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static ContactEntity.typeDisplayRepresentation.getter()
{
  return sub_20B7A1BF4();
}

uint64_t ContactEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v23 = v1[1];
  uint64_t v24 = v3;
  uint64_t v4 = v1[2];
  uint64_t v21 = v1[3];
  uint64_t v22 = v4;
  uint64_t v5 = v1[6];
  uint64_t v6 = (void *)v1[9];
  uint64_t v20 = sub_20B7D33C8();
  uint64_t v7 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  if (v5)
  {
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v8 = v6;
    swift_bridgeObjectRetain();
    sub_20B7D2DA8();
  }
  else
  {
    uint64_t v9 = sub_20B7D3AE8();
    v19[0] = v19;
    MEMORY[0x270FA5388](v9 - 8);
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    swift_bridgeObjectRetain();
    id v10 = v6;
    swift_bridgeObjectRetain();
    sub_20B7D2DA8();
    sub_20B7D3A88();
    uint64_t v11 = sub_20B7D3548();
    v19[1] = a1;
    MEMORY[0x270FA5388](v11 - 8);
    sub_20B7D3538();
    sub_20B7D3B28();
  }
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_20B7D33A8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v12 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))((char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v20);
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BB00);
  MEMORY[0x270FA5388](v14 - 8);
  id v16 = (char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_20B7D2F48();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v16, 1, 1, v17);
  return sub_20B7D2F58();
}

uint64_t ContactEntity.namePrefix.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA88B0]);
}

uint64_t ContactEntity.givenName.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA8898]);
}

uint64_t ContactEntity.middleName.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA88A8]);
}

uint64_t ContactEntity.familyName.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA88A0]);
}

uint64_t ContactEntity.nameSuffix.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA88B8]);
}

uint64_t ContactEntity.nickname.getter()
{
  return sub_20B79F6BC(MEMORY[0x270FA88C0]);
}

uint64_t sub_20B79F6BC(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = v1[4];
  uint64_t v29 = v1[3];
  uint64_t v30 = v2;
  uint64_t v28 = v1[6];
  uint64_t v4 = v1[8];
  uint64_t v3 = (void *)v1[9];
  uint64_t v26 = a1;
  uint64_t v27 = v4;
  uint64_t v5 = sub_20B7D3388();
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v23 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20B7D2B78();
  uint64_t v31 = *(void *)(v7 - 8);
  uint64_t v32 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v10 = v3;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v11 = sub_20B7D2B48();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v9, v32);
  int v15 = (*(uint64_t (**)(char *, uint64_t))(v12 + 88))(v14, v11);
  if (MEMORY[0x263EFB7E0] && v15 == *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v12 + 96))(v14, v11);
    uint64_t v17 = v23;
    uint64_t v16 = v24;
    uint64_t v18 = v14;
    uint64_t v19 = v25;
    uint64_t v20 = (*(uint64_t (**)(char *, char *, uint64_t))(v24 + 32))(v23, v18, v25);
    uint64_t v21 = v26(v20);
    (*(void (**)(char *, uint64_t))(v16 + 8))(v17, v19);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return 0;
  }
  return v21;
}

ValueMetadata *sub_20B79FA2C()
{
  if (qword_26769AFC8 != -1) {
    swift_once();
  }
  return &type metadata for UpdateContactIntent;
}

uint64_t sub_20B79FA78@<X0>(void *a1@<X8>)
{
  if (qword_26769AFC0 != -1) {
    swift_once();
  }
  swift_beginAccess();
  *a1 = qword_26769BAE0;
  return sub_20B7D2DA8();
}

uint64_t sub_20B79FAF8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 88);
  *a1 = *(void *)(v1 + 80);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_20B79FB08()
{
  return sub_20B7D2A28();
}

uint64_t sub_20B79FB4C()
{
  return sub_20B7D3058();
}

id CNMutableContact.init(entity:)(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v1 = a1[1];
  uint64_t v166 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v164 = v1;
  uint64_t v165 = v3;
  uint64_t v4 = a1[4];
  uint64_t v171 = a1[6];
  uint64_t v172 = v4;
  uint64_t v5 = a1[8];
  id v170 = (id)a1[9];
  uint64_t v7 = a1[11];
  uint64_t v6 = a1[12];
  id v8 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  uint64_t v168 = v5;
  uint64_t v9 = (void *)sub_20B7D3AF8();
  id v10 = objc_msgSend(v8, sel_initWithIdentifier_, v9);

  uint64_t v169 = v7;
  uint64_t v151 = sub_20B7D3388();
  uint64_t v152 = *(void *)(v151 - 8);
  MEMORY[0x270FA5388](v151);
  id v160 = v11;
  uint64_t v149 = (char *)&v145 - ((unint64_t)(v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (char *)sub_20B7D2B78();
  uint64_t v13 = *((void *)v12 - 1);
  MEMORY[0x270FA5388](v12);
  uint64_t v159 = v14;
  int v15 = (char *)&v145 - (((unint64_t)v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v150 = (uint64_t *)v170;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  id v170 = v10;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  uint64_t v153 = v2;
  sub_20B7D2BF8();
  uint64_t v16 = sub_20B7D2B48();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v158 = v18;
  uint64_t v19 = (char *)&v145 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  uint64_t v20 = *(void (**)(void, void))(v13 + 8);
  uint64_t v162 = v13 + 8;
  uint64_t v163 = v12;
  unint64_t v157 = v20;
  v20(v15, v12);
  uint64_t v155 = *(uint64_t (**)(void, void))(v17 + 88);
  uint64_t v156 = v17 + 88;
  int v21 = v155(v19, v16);
  uint64_t v167 = v6;
  uint64_t v161 = v16;
  uint64_t v154 = v17;
  if (!MEMORY[0x263EFB7E0] || v21 != *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v17 + 8))(v19, v16);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v27 = v150;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  (*(void (**)(char *, uint64_t))(v17 + 96))(v19, v16);
  uint64_t v22 = v149;
  uint64_t v23 = v19;
  uint64_t v24 = v151;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v149, v23, v151);
  sub_20B7D3338();
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v22, v24);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v27 = v150;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v26) {
    goto LABEL_6;
  }
LABEL_7:
  uint64_t v28 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setNamePrefix_, v28);

  uint64_t v150 = &v145;
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v146 = (char *)&v145 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v148 = &v145;
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v27;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  uint64_t v34 = sub_20B7D2BF8();
  unint64_t v147 = &v145;
  MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v145 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  v157(v33, v163);
  uint64_t v37 = v161;
  int v38 = v155(v36, v161);
  if (!MEMORY[0x263EFB7E0] || v38 != *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v36, v37);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v47 = v149;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v46 = v47;
LABEL_12:
    swift_bridgeObjectRelease();
    goto LABEL_13;
  }
  (*(void (**)(char *, uint64_t))(v154 + 96))(v36, v37);
  uint64_t v39 = v152;
  uint64_t v40 = v146;
  uint64_t v41 = v36;
  uint64_t v42 = v151;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v146, v41, v151);
  sub_20B7D32D8();
  uint64_t v44 = v43;
  (*(void (**)(char *, uint64_t))(v39 + 8))(v40, v42);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = v149;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v46 = v45;
  if (!v44) {
    goto LABEL_12;
  }
LABEL_13:
  uint64_t v48 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setGivenName_, v48);

  uint64_t v150 = &v145;
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  uint64_t v146 = (char *)&v145 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v148 = &v145;
  MEMORY[0x270FA5388](v50);
  id v53 = (char *)&v145 - ((v52 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v46;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  uint64_t v54 = sub_20B7D2BF8();
  unint64_t v147 = &v145;
  MEMORY[0x270FA5388](v54);
  uint64_t v56 = (char *)&v145 - ((v55 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  v157(v53, v163);
  uint64_t v57 = v161;
  int v58 = v155(v56, v161);
  if (!MEMORY[0x263EFB7E0] || v58 != *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v56, v57);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v65 = v149;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_18:
    swift_bridgeObjectRelease();
    goto LABEL_19;
  }
  (*(void (**)(char *, uint64_t))(v154 + 96))(v56, v57);
  uint64_t v59 = v152;
  id v60 = v146;
  uint64_t v61 = v56;
  uint64_t v62 = v151;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v146, v61, v151);
  sub_20B7D3318();
  uint64_t v64 = v63;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v60, v62);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v65 = v149;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v64) {
    goto LABEL_18;
  }
LABEL_19:
  uint64_t v66 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setMiddleName_, v66);

  uint64_t v150 = &v145;
  uint64_t v68 = MEMORY[0x270FA5388](v67);
  uint64_t v146 = (char *)&v145 - ((v69 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v148 = &v145;
  MEMORY[0x270FA5388](v68);
  id v71 = (char *)&v145 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v65;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  uint64_t v72 = sub_20B7D2BF8();
  unint64_t v147 = &v145;
  MEMORY[0x270FA5388](v72);
  id v74 = (char *)&v145 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  v157(v71, v163);
  uint64_t v75 = v161;
  int v76 = v155(v74, v161);
  if (!MEMORY[0x263EFB7E0] || v76 != *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v74, v75);
    swift_release();
    swift_bridgeObjectRelease();
    unsigned int v83 = v149;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
LABEL_24:
    swift_bridgeObjectRelease();
    goto LABEL_25;
  }
  (*(void (**)(char *, uint64_t))(v154 + 96))(v74, v75);
  uint64_t v77 = v152;
  uint64_t v78 = v146;
  unint64_t v79 = v74;
  uint64_t v80 = v151;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v146, v79, v151);
  sub_20B7D32F8();
  uint64_t v82 = v81;
  (*(void (**)(char *, uint64_t))(v77 + 8))(v78, v80);
  swift_release();
  swift_bridgeObjectRelease();
  unsigned int v83 = v149;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (!v82) {
    goto LABEL_24;
  }
LABEL_25:
  unint64_t v84 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setFamilyName_, v84);

  uint64_t v150 = &v145;
  uint64_t v86 = MEMORY[0x270FA5388](v85);
  uint64_t v146 = (char *)&v145 - ((v87 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v148 = &v145;
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = (char *)&v145 - ((v88 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v149 = v83;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  uint64_t v90 = sub_20B7D2BF8();
  unint64_t v147 = &v145;
  MEMORY[0x270FA5388](v90);
  uint64_t v92 = (char *)&v145 - ((v91 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  v157(v89, v163);
  uint64_t v93 = v161;
  int v94 = v155(v92, v161);
  if (!MEMORY[0x263EFB7E0] || v94 != *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v92, v93);
    swift_release();
    swift_bridgeObjectRelease();
    id v102 = v149;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v101 = v102;
LABEL_30:
    swift_bridgeObjectRelease();
    goto LABEL_31;
  }
  (*(void (**)(char *, uint64_t))(v154 + 96))(v92, v93);
  unint64_t v95 = v146;
  uint64_t v96 = v92;
  uint64_t v97 = v151;
  (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v146, v96, v151);
  sub_20B7D3348();
  uint64_t v99 = v98;
  (*(void (**)(char *, uint64_t))(v152 + 8))(v95, v97);
  swift_release();
  swift_bridgeObjectRelease();
  id v100 = v149;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v101 = v100;
  if (!v99) {
    goto LABEL_30;
  }
LABEL_31:
  uint64_t v103 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setNameSuffix_, v103);

  uint64_t v150 = &v145;
  uint64_t v105 = MEMORY[0x270FA5388](v104);
  uint64_t v107 = (char *)&v145 - ((v106 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = (char *)&v145;
  MEMORY[0x270FA5388](v105);
  uint64_t v109 = (char *)&v145 - ((v108 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v160 = v101;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  uint64_t v110 = sub_20B7D2BF8();
  uint64_t v159 = &v145;
  MEMORY[0x270FA5388](v110);
  id v112 = (char *)&v145 - ((v111 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2B58();
  v157(v109, v163);
  uint64_t v113 = v161;
  int v114 = v155(v112, v161);
  if (MEMORY[0x263EFB7E0] && v114 == *MEMORY[0x263EFB7E0])
  {
    (*(void (**)(char *, uint64_t))(v154 + 96))(v112, v113);
    uint64_t v115 = v152;
    long long v116 = v112;
    uint64_t v117 = v151;
    (*(void (**)(char *, char *, uint64_t))(v152 + 32))(v107, v116, v151);
    sub_20B7D3368();
    uint64_t v119 = v118;
    (*(void (**)(char *, uint64_t))(v115 + 8))(v107, v117);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v120 = v160;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    if (v119) {
      goto LABEL_37;
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v154 + 8))(v112, v113);
    swift_release();
    swift_bridgeObjectRelease();
    unint64_t v120 = v160;

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
  }
  swift_bridgeObjectRelease();
LABEL_37:
  uint64_t v121 = (void *)sub_20B7D3AF8();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setNickname_, v121);

  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v122 = v120;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v163 = v122;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v123 = v173;
  uint64_t v124 = *(void *)(v173 + 16);
  if (v124)
  {
    uint64_t v175 = MEMORY[0x263F8EE78];
    sub_20B7D3EF8();
    uint64_t v162 = v123;
    uint64_t v125 = v123 + 56;
    do
    {
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_20B7D2BF8();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      swift_bridgeObjectRetain();
      sub_20B7D2BF8();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v126 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      id v127 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
      uint64_t v128 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      id v129 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v127, sel_initWithIdentifier_label_value_, v128, v129, v126);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      sub_20B7D3ED8();
      sub_20B7D3F08();
      sub_20B7D3F18();
      sub_20B7D3EE8();
      v125 += 32;
      --v124;
    }
    while (v124);
  }
  swift_bridgeObjectRelease();
  uint64_t v130 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B030);
  id v131 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  objc_msgSend(v170, sel_setEmailAddresses_, v131);

  sub_20B7D2BF8();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v132 = v173;
  uint64_t v133 = *(void *)(v173 + 16);
  if (v133)
  {
    uint64_t v169 = v130;
    uint64_t v175 = MEMORY[0x263F8EE78];
    sub_20B7D3EF8();
    uint64_t v168 = v132;
    uint64_t v134 = v132 + 56;
    do
    {
      uint64_t v172 = *(void *)(v134 - 8);
      swift_retain_n();
      swift_retain_n();
      swift_bridgeObjectRetain_n();
      sub_20B7D2BF8();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      uint64_t v135 = v173;
      if (!v174) {
        uint64_t v135 = 0;
      }
      uint64_t v171 = v135;
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      swift_bridgeObjectRetain();
      sub_20B7D2BF8();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      id v136 = objc_allocWithZone(MEMORY[0x263EFEB28]);
      uint64_t v137 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      id v138 = objc_msgSend(v136, sel_initWithStringValue_, v137);

      id v139 = objc_allocWithZone(MEMORY[0x263EFEAD0]);
      id v140 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      uint64_t v141 = (void *)sub_20B7D3AF8();
      swift_bridgeObjectRelease();
      objc_msgSend(v139, sel_initWithIdentifier_label_value_, v140, v141, v138);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();

      sub_20B7D3ED8();
      sub_20B7D3F08();
      sub_20B7D3F18();
      sub_20B7D3EE8();
      v134 += 32;
      --v133;
    }
    while (v133);
  }
  swift_bridgeObjectRelease();
  uint64_t v142 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  id v143 = v170;
  objc_msgSend(v170, sel_setPhoneNumbers_, v142);

  return v143;
}

ContactsUICore::ContactEntity::PropertyType_optional __swiftcall ContactEntity.PropertyType.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20B7D3F88();
  result.value = swift_bridgeObjectRelease();
  char v5 = 7;
  if (v3 < 7) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t ContactEntity.PropertyType.rawValue.getter()
{
  uint64_t result = 0x6D754E656E6F6870;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6464416C69616D65;
      break;
    case 2:
      uint64_t result = 0x64416C6174736F70;
      break;
    case 3:
      uint64_t result = 0x7961646874726962;
      break;
    case 4:
      uint64_t result = 0x52746361746E6F63;
      break;
    case 5:
      uint64_t result = 1702129518;
      break;
    case 6:
      uint64_t result = 0x6D6F74737563;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B7A1810(unsigned __int8 *a1, char *a2)
{
  return sub_20B7B88E0(*a1, *a2);
}

uint64_t sub_20B7A181C()
{
  return sub_20B7A1964();
}

uint64_t sub_20B7A1828()
{
  sub_20B7D3B58();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B7A195C()
{
  return sub_20B7A1964();
}

uint64_t sub_20B7A1964()
{
  return sub_20B7D40A8();
}

ContactsUICore::ContactEntity::PropertyType_optional sub_20B7A1AAC(Swift::String *a1)
{
  return ContactEntity.PropertyType.init(rawValue:)(*a1);
}

void sub_20B7A1AB8(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000726562;
  uint64_t v3 = 0x6D754E656E6F6870;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000073736572;
      uint64_t v3 = 0x6464416C69616D65;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "postalAddress");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0x7961646874726962;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0xE800000000000000;
      break;
    case 4:
      *(void *)a1 = 0x52746361746E6F63;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0xEF6E6F6974616C65;
      break;
    case 5:
      *(void *)a1 = 1702129518;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0xE400000000000000;
      break;
    case 6:
      *(void *)a1 = 0x6D6F74737563;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + _Block_object_dispose(&a9, 8) = v2;
      break;
  }
}

uint64_t static ContactEntity.PropertyType.typeDisplayRepresentation.getter()
{
  return sub_20B7A1BF4();
}

uint64_t sub_20B7A1BF4()
{
  uint64_t v0 = sub_20B7D33C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3A88();
  uint64_t v3 = sub_20B7D3548();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3538();
  uint64_t v4 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v0);
  return sub_20B7D3028();
}

uint64_t ContactEntity.PropertyType.displayRepresentation.getter()
{
  return sub_20B7D2F38();
}

void *static ContactEntity.PropertyType.allCases.getter()
{
  return &unk_26BFC5A28;
}

uint64_t sub_20B7A2010()
{
  return sub_20B7D2A18();
}

uint64_t sub_20B7A2054()
{
  return sub_20B7D2FE8();
}

void sub_20B7A2094(void *a1@<X8>)
{
  *a1 = &unk_26BFC5A28;
}

uint64_t sub_20B7A20A4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2E84(a1, a2, a3, (void *)*v3, &qword_26769B600, &qword_26769BBC8);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20B7A20D4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A220C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A20F4(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2508(a1, a2, a3, *v3, &qword_26769BBA0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A211C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2390(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A213C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2654(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20B7A215C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A289C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A217C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2A24(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A219C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2B90(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A21BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2CFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_20B7A21DC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_20B7A2E84(a1, a2, a3, (void *)*v3, &qword_26769BBA8, &qword_26769BBB0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_20B7A220C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B170);
    id v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    id v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2390(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B178);
    id v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    id v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A24FC(char a1, int64_t a2, char a3, char *a4)
{
  return sub_20B7A2508(a1, a2, a3, a4, &qword_26769BBE8);
}

uint64_t sub_20B7A2508(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  int64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    int64_t v10 = *((void *)a4 + 2);
  }
  else {
    int64_t v10 = v8;
  }
  if (v10)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    int64_t v11 = (char *)swift_allocObject();
    size_t v12 = _swift_stdlib_malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * v12 - 64;
  }
  else
  {
    int64_t v11 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v9]) {
      memmove(v13, v14, v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v9] || v13 >= &v14[v9])
  {
    memcpy(v13, v14, v9);
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2654(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BBE0);
  uint64_t v10 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769B5C0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769B5C0) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v18 = (char *)v13 + v17;
  uint64_t v19 = (char *)a4 + v17;
  if (a1)
  {
    if (v13 < a4 || v18 >= &v19[*(void *)(v16 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v20 = *(void *)(v16 + 72) * v8;
  int v21 = &v18[v20];
  unint64_t v22 = (unint64_t)&v19[v20];
  if (v19 >= v21 || (unint64_t)v18 >= v22)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A289C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769BBD8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  unint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[48 * v8]) {
      memmove(v12, v13, 48 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[48 * v8] || v12 >= &v13[48 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2A24(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769BBD0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 + 31;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 6);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[64 * v8]) {
      memmove(v13, v14, v8 << 6);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[64 * v8] || v13 >= &v14[64 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2B90(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769BBC0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2CFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B900);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 104);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[104 * v8]) {
      memmove(v12, v13, 104 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[104 * v8] || v12 >= &v13[104 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7A2E84(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    __swift_instantiateConcreteTypeFromMangledName(a5);
    uint64_t v13 = (void *)swift_allocObject();
    size_t v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v15 = (unint64_t)(v13 + 4);
  unint64_t v16 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v15 >= v16 + 40 * v11) {
      memmove(v13 + 4, a4 + 4, 40 * v11);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v16 >= v15 + 40 * v11 || v15 >= v16 + 40 * v11)
  {
    __swift_instantiateConcreteTypeFromMangledName(a6);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_30:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

unint64_t _s14ContactsUICore13ContactEntityV12PropertyTypeO26caseDisplayRepresentationsSDyAE10AppIntents0H14RepresentationVGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BBB8);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769B5A8) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DDBF0;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_20B7D2F38();
  v4[v1] = 1;
  sub_20B7D2F38();
  v4[2 * v1] = 2;
  sub_20B7D2F38();
  v4[3 * v1] = 3;
  sub_20B7D2F38();
  v4[4 * v1] = 4;
  sub_20B7D2F38();
  v4[5 * v1] = 5;
  sub_20B7D2F38();
  v4[6 * v1] = 6;
  sub_20B7D2F38();
  return sub_20B779398(v3);
}

unint64_t sub_20B7A3258()
{
  unint64_t result = qword_26769BB08;
  if (!qword_26769BB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB08);
  }
  return result;
}

unint64_t sub_20B7A32B0()
{
  unint64_t result = qword_26769BB10;
  if (!qword_26769BB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB10);
  }
  return result;
}

unint64_t sub_20B7A3308()
{
  unint64_t result = qword_2676999B8;
  if (!qword_2676999B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999B8);
  }
  return result;
}

unint64_t sub_20B7A3360()
{
  unint64_t result = qword_2676999C8;
  if (!qword_2676999C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999C8);
  }
  return result;
}

unint64_t sub_20B7A33B8()
{
  unint64_t result = qword_2676999F0;
  if (!qword_2676999F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999F0);
  }
  return result;
}

uint64_t sub_20B7A340C()
{
  return MEMORY[0x263EFC028];
}

unint64_t sub_20B7A341C()
{
  unint64_t result = qword_26769BB18;
  if (!qword_26769BB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB18);
  }
  return result;
}

unint64_t sub_20B7A3474()
{
  unint64_t result = qword_2676999D0;
  if (!qword_2676999D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999D0);
  }
  return result;
}

unint64_t sub_20B7A34CC()
{
  unint64_t result = qword_2676999D8;
  if (!qword_2676999D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999D8);
  }
  return result;
}

unint64_t sub_20B7A3524()
{
  unint64_t result = qword_2676999E0;
  if (!qword_2676999E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999E0);
  }
  return result;
}

uint64_t sub_20B7A3578()
{
  return MEMORY[0x263F8D320];
}

unint64_t sub_20B7A3588()
{
  unint64_t result = qword_26769BB20;
  if (!qword_26769BB20)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769BB28);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB20);
  }
  return result;
}

unint64_t sub_20B7A35DC()
{
  unint64_t result = qword_2676999E8;
  if (!qword_2676999E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2676999E8);
  }
  return result;
}

unint64_t sub_20B7A3634()
{
  unint64_t result = qword_26769BB30;
  if (!qword_26769BB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB30);
  }
  return result;
}

unint64_t sub_20B7A368C()
{
  unint64_t result = qword_26769BB38;
  if (!qword_26769BB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB38);
  }
  return result;
}

unint64_t sub_20B7A36E4()
{
  unint64_t result = qword_26769BB40;
  if (!qword_26769BB40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB40);
  }
  return result;
}

unint64_t sub_20B7A373C()
{
  unint64_t result = qword_26769BB48;
  if (!qword_26769BB48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB48);
  }
  return result;
}

uint64_t sub_20B7A3790()
{
  return MEMORY[0x263F8D380];
}

unint64_t sub_20B7A37A0()
{
  unint64_t result = qword_26769BB50;
  if (!qword_26769BB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB50);
  }
  return result;
}

unint64_t sub_20B7A37F8()
{
  unint64_t result = qword_26769BB58;
  if (!qword_26769BB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB58);
  }
  return result;
}

unint64_t sub_20B7A3850()
{
  unint64_t result = qword_26769BB60;
  if (!qword_26769BB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB60);
  }
  return result;
}

unint64_t sub_20B7A38A8()
{
  unint64_t result = qword_26769BB68;
  if (!qword_26769BB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB68);
  }
  return result;
}

uint64_t sub_20B7A38FC()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20B7A3940()
{
  unint64_t result = qword_26769BB70;
  if (!qword_26769BB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB70);
  }
  return result;
}

unint64_t sub_20B7A3998()
{
  unint64_t result = qword_26769BB78;
  if (!qword_26769BB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB78);
  }
  return result;
}

unint64_t sub_20B7A39F0()
{
  unint64_t result = qword_26769BB80;
  if (!qword_26769BB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB80);
  }
  return result;
}

unint64_t sub_20B7A3A48()
{
  unint64_t result = qword_26769BB88;
  if (!qword_26769BB88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB88);
  }
  return result;
}

unint64_t sub_20B7A3AA0()
{
  unint64_t result = qword_26769BB90;
  if (!qword_26769BB90)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769BB98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BB90);
  }
  return result;
}

uint64_t destroy for ContactEntity(uint64_t a1)
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  return swift_release();
}

void *initializeWithCopy for ContactEntity(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  int64_t v7 = (void *)a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v9 = v7;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for ContactEntity(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  a1[2] = a2[2];
  sub_20B7D2DA8();
  swift_release();
  a1[3] = a2[3];
  sub_20B7D2DA8();
  swift_release();
  a1[4] = a2[4];
  sub_20B7D2DA8();
  swift_release();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (void *)a2[9];
  uint64_t v5 = (void *)a1[9];
  a1[9] = v4;
  id v6 = v4;

  a1[10] = a2[10];
  a1[11] = a2[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[12] = a2[12];
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

__n128 __swift_memcpy104_8(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 4_Block_object_dispose(&a9, 8) = result;
  return result;
}

uint64_t assignWithTake for ContactEntity(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  uint64_t v4 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  long long v5 = *(void **)(a1 + 72);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);

  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = *(_OWORD *)(a2 + 88);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactEntity(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 104)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ContactEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 8_Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 104) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntity()
{
  return &type metadata for ContactEntity;
}

unsigned char *storeEnumTagSinglePayload for ContactEntity.PropertyType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B7A3FF8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactEntity.PropertyType()
{
  return &type metadata for ContactEntity.PropertyType;
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactEntityPropertyComparator(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    sub_20B7D2DA8();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      uint64_t v7 = a2[1];
      *a1 = *a2;
      a1[1] = v7;
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v9 = sub_20B7D3388();
      uint64_t v10 = *(void *)(v9 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
      {
        uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
        memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v10 + 16))(a1, a2, v9);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ContactEntityPropertyComparator(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  if (result == 2 || result == 1)
  {
    return swift_bridgeObjectRelease();
  }
  else if (!result)
  {
    uint64_t v3 = sub_20B7D3388();
    uint64_t v5 = *(void *)(v3 - 8);
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(a1, 1, v3);
    if (!result)
    {
      unsigned int v4 = *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8);
      return v4(a1, v3);
    }
  }
  return result;
}

void *initializeWithCopy for ContactEntityPropertyComparator(void *a1, void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
  {
    uint64_t v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v6 = sub_20B7D3388();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for ContactEntityPropertyComparator(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_20B796000((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v5 = sub_20B7D3388();
      uint64_t v6 = *(void *)(v5 - 8);
      if ((*(unsigned int (**)(void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
        memcpy(a1, a2, *(void *)(*(void *)(v7 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for ContactEntityPropertyComparator()
{
  uint64_t result = qword_26769BBF0;
  if (!qword_26769BBF0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *initializeWithTake for ContactEntityPropertyComparator(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v6 = sub_20B7D3388();
    uint64_t v7 = *(void *)(v6 - 8);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
    {
      uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *assignWithTake for ContactEntityPropertyComparator(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_20B796000((uint64_t)a1);
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
    else
    {
      uint64_t v6 = sub_20B7D3388();
      uint64_t v7 = *(void *)(v6 - 8);
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
      {
        uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B8D0);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      }
      swift_storeEnumTagMultiPayload();
    }
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactEntityPropertyComparator(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for ContactEntityPropertyComparator(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_20B7A499C()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_20B7A49AC()
{
  sub_20B7A4A40();
  if (v0 <= 0x3F) {
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_20B7A4A40()
{
  if (!qword_26769BC00)
  {
    sub_20B7D3388();
    unint64_t v0 = sub_20B7D3D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26769BC00);
    }
  }
}

uint64_t sub_20B7A4A98()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769BC10);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BC10);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static DeleteContactIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769AFD0, MEMORY[0x270FA8BB8], (uint64_t)qword_26769BC10, a1);
}

uint64_t static DeleteContactIntent.title.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769AFD0, MEMORY[0x270FA8BB8], (uint64_t)qword_26769BC10);
}

uint64_t (*static DeleteContactIntent.title.modify())()
{
  if (qword_26769AFD0 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D33C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BC10);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20B7A4D68()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769BC28);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BC28);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static DeleteContactIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769AFD8, MEMORY[0x270FA5E90], (uint64_t)qword_26769BC28, a1);
}

uint64_t static DeleteContactIntent.description.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769AFD8, MEMORY[0x270FA5E90], (uint64_t)qword_26769BC28);
}

uint64_t (*static DeleteContactIntent.description.modify())()
{
  if (qword_26769AFD8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BC28);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static DeleteContactIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t DeleteContactIntent.entities.getter()
{
  sub_20B7D2CB8();
  return v1;
}

uint64_t sub_20B7A5174@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7A51D8()
{
  return swift_release();
}

uint64_t DeleteContactIntent.entities.setter()
{
  return sub_20B7D2CC8();
}

void (*DeleteContactIntent.entities.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774F38;
}

uint64_t DeleteContactIntent.$entities.getter()
{
  return sub_20B7D2CD8();
}

uint64_t DeleteContactIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v37 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v39, "entityProvider");
  v39[15] = -18;
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v36 = sub_20B7D29D8();
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC48);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v33 = *(void *)(v1 - 8);
  uint64_t v34 = v1;
  MEMORY[0x270FA5388](v1);
  int v38 = (char *)&v29 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20B7D3AE8();
  uint64_t v4 = *(void *)(*(void *)(v3 - 8) + 64);
  MEMORY[0x270FA5388](v3 - 8);
  unint64_t v32 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v5 = sub_20B7D3548();
  uint64_t v6 = *(void *)(*(void *)(v5 - 8) + 64);
  MEMORY[0x270FA5388](v5 - 8);
  unint64_t v31 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v7 = sub_20B7D33B8();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  MEMORY[0x270FA5388](v7);
  unint64_t v30 = (v9 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v10 = *MEMORY[0x263F06D10];
  uint64_t v11 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 104);
  v11((char *)&v29 - v30, v10, v7);
  sub_20B7D33D8();
  uint64_t v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  unint64_t v15 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = sub_20B7D3538();
  MEMORY[0x270FA5388](v17);
  v11((char *)&v29 - v30, v10, v7);
  sub_20B7D33D8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v33 + 56))(v15, 0, 1, v34);
  uint64_t v40 = 0;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18 - 8);
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v21 = sub_20B7D2B18();
  unint64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v22((char *)&v29 - v20, 1, 1, v21);
  MEMORY[0x270FA5388](v23);
  v22((char *)&v29 - v20, 1, 1, v21);
  uint64_t v24 = sub_20B7D2FD8();
  MEMORY[0x270FA5388](v24);
  (*(void (**)(char *, void))(v26 + 104))((char *)&v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263EFBDC0]);
  sub_20B7969C8();
  uint64_t result = sub_20B7D2D08();
  uint64_t v28 = v37;
  *uint64_t v37 = v36;
  v28[1] = result;
  return result;
}

uint64_t DeleteContactIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 4_Block_object_dispose(&a9, 8) = a1;
  *(_OWORD *)(v2 + 56) = *v1;
  return MEMORY[0x270FA2498](sub_20B7A58C8, 0, 0);
}

uint64_t sub_20B7A58C8()
{
  uint64_t v1 = v0[8];
  v0[2] = v0[7];
  v0[3] = v1;
  uint64_t v2 = sub_20B7D2FA8();
  v0[9] = v2;
  v0[10] = *(void *)(v2 - 8);
  uint64_t v3 = swift_task_alloc();
  v0[11] = v3;
  v0[4] = MEMORY[0x263F8EE78];
  sub_20B7A5EAC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC78);
  sub_20B78EC20(&qword_26769BC80, &qword_26769BC78);
  sub_20B7D3E28();
  uint64_t v4 = sub_20B7D2F98();
  v0[12] = v4;
  v0[13] = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  v0[14] = v5;
  sub_20B7D2F88();
  uint64_t v6 = sub_20B7D2B18();
  v0[15] = v6;
  v0[16] = *(void *)(v6 - 8);
  uint64_t v7 = swift_task_alloc();
  v0[17] = v7;
  sub_20B7A5EF8(v7);
  uint64_t v8 = (void *)swift_task_alloc();
  v0[18] = v8;
  unint64_t v9 = sub_20B7A67FC();
  *uint64_t v8 = v0;
  v8[1] = sub_20B7A5B58;
  return MEMORY[0x270EE0CF8](v3, v5, v7, &type metadata for DeleteContactIntent, v9);
}

uint64_t sub_20B7A5B58()
{
  uint64_t v2 = *(void **)v1;
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v4 = v2[16];
    uint64_t v3 = v2[17];
    uint64_t v6 = v2[14];
    uint64_t v5 = v2[15];
    uint64_t v7 = v2[12];
    uint64_t v8 = v2[13];
    uint64_t v10 = v2[10];
    uint64_t v9 = v2[11];
    uint64_t v11 = v2[9];
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    uint64_t v12 = sub_20B7A5E30;
  }
  else
  {
    uint64_t v13 = v2[16];
    uint64_t v14 = v2[17];
    uint64_t v16 = v2[14];
    uint64_t v15 = v2[15];
    uint64_t v17 = v2[12];
    uint64_t v18 = v2[13];
    uint64_t v20 = v2[10];
    uint64_t v19 = v2[11];
    uint64_t v21 = v2[9];
    (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v14, v15);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
    (*(void (**)(uint64_t, uint64_t))(v20 + 8))(v19, v21);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = sub_20B7A5D48;
  }
  return MEMORY[0x270FA2498](v12, 0, 0);
}

uint64_t sub_20B7A5D48()
{
  uint64_t v1 = v0[19];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  sub_20B7A6850(v0[5]);
  swift_bridgeObjectRelease();
  if (!v1) {
    sub_20B7D2BB8();
  }
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_20B7A5E30()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_20B7A5EAC()
{
  unint64_t result = qword_26769BC70;
  if (!qword_26769BC70)
  {
    sub_20B7D2FA8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BC70);
  }
  return result;
}

uint64_t sub_20B7A5EF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v54 = a1;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  unint64_t v1 = v62;
  int64_t v2 = *(void *)(v62 + 16);
  if (v2)
  {
    unint64_t v62 = MEMORY[0x263F8EE78];
    sub_20B7A211C(0, v2, 0);
    unint64_t v3 = v62;
    unint64_t v53 = v1;
    uint64_t v4 = (uint64_t *)(v1 + 64);
    do
    {
      uint64_t v5 = (void *)*(v4 - 3);
      uint64_t v7 = (void *)*(v4 - 2);
      unint64_t v6 = *(v4 - 1);
      uint64_t v60 = *v4;
      unint64_t v61 = v6;
      uint64_t v8 = v4[2];
      uint64_t v9 = v4[4];
      uint64_t v10 = (void *)v4[5];
      int v58 = v7;
      uint64_t v59 = v9;
      if (v8)
      {
        uint64_t v57 = v4[1];
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        id v11 = v10;
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        id v12 = v11;
        uint64_t v13 = v8;
      }
      else
      {
        uint64_t v14 = sub_20B7D3AE8();
        uint64_t v55 = v49;
        MEMORY[0x270FA5388](v14 - 8);
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_retain_n();
        swift_bridgeObjectRetain_n();
        id v15 = v10;
        swift_bridgeObjectRetain_n();
        swift_retain_n();
        id v16 = v15;
        sub_20B7D3A88();
        uint64_t v17 = sub_20B7D3548();
        uint64_t v56 = v5;
        MEMORY[0x270FA5388](v17 - 8);
        sub_20B7D3538();
        uint64_t v57 = sub_20B7D3B28();
        uint64_t v13 = v18;
      }
      swift_bridgeObjectRelease();
      swift_release_n();
      swift_bridgeObjectRelease_n();

      swift_bridgeObjectRelease_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      swift_release_n();
      unint64_t v62 = v3;
      unint64_t v20 = *(void *)(v3 + 16);
      unint64_t v19 = *(void *)(v3 + 24);
      if (v20 >= v19 >> 1)
      {
        sub_20B7A211C(v19 > 1, v20 + 1, 1);
        unint64_t v3 = v62;
      }
      *(void *)(v3 + 16) = v20 + 1;
      unint64_t v21 = v3 + 16 * v20;
      *(void *)(v21 + 32) = v57;
      *(void *)(v21 + 40) = v13;
      v4 += 13;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v3 = MEMORY[0x263F8EE78];
  }
  unint64_t v62 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B060);
  sub_20B78EC20((unint64_t *)&qword_26769B068, &qword_26769B060);
  uint64_t v22 = sub_20B7D3A58();
  uint64_t v57 = v23;
  int v58 = (void *)v22;
  swift_bridgeObjectRelease();
  uint64_t v24 = sub_20B7D33C8();
  uint64_t v59 = *(void *)(v24 - 8);
  uint64_t v60 = v24;
  v49[1] = *(void *)(v59 + 64);
  MEMORY[0x270FA5388](v24);
  unint64_t v61 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v52 = (char *)v49 - v61;
  uint64_t v26 = sub_20B7D3AE8();
  uint64_t v56 = v49;
  uint64_t v27 = *(void *)(*(void *)(v26 - 8) + 64);
  MEMORY[0x270FA5388](v26 - 8);
  uint64_t v55 = (void *)((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D3A88();
  uint64_t v28 = sub_20B7D33B8();
  v49[0] = v49;
  uint64_t v51 = v28;
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void *)(v29 + 64);
  MEMORY[0x270FA5388](v28);
  unint64_t v53 = (v30 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v31 = (void *)((char *)v49 - v53);
  *unint64_t v31 = type metadata accessor for ContactEntityProvider();
  uint64_t v32 = *MEMORY[0x263F06D28];
  uint64_t v50 = *(void (**)(uint64_t *, uint64_t, uint64_t))(v29 + 104);
  v50(v31, v32, v28);
  uint64_t v33 = sub_20B7D3548();
  MEMORY[0x270FA5388](v33 - 8);
  sub_20B7D3538();
  uint64_t v34 = sub_20B7D33D8();
  uint64_t v56 = v49;
  MEMORY[0x270FA5388](v34);
  uint64_t v35 = (char *)v49 - v61;
  uint64_t v36 = sub_20B7D3AC8();
  v49[0] = v49;
  MEMORY[0x270FA5388](v36 - 8);
  sub_20B7D3AB8();
  sub_20B7D3AA8();
  sub_20B7D3A98();
  swift_bridgeObjectRelease();
  uint64_t v37 = sub_20B7D3AA8();
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = sub_20B7D3AD8();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = sub_20B7D3538();
  MEMORY[0x270FA5388](v39);
  v50((void *)((char *)v49 - v53), *MEMORY[0x263F06D10], v51);
  uint64_t v40 = sub_20B7D33D8();
  int v58 = v49;
  MEMORY[0x270FA5388](v40);
  uint64_t v42 = v60;
  unint64_t v41 = v61;
  uint64_t v43 = v59;
  uint64_t v44 = *(uint64_t (**)(char *, char *, uint64_t))(v59 + 16);
  uint64_t v45 = v52;
  uint64_t v46 = v44((char *)v49 - v61, v52, v60);
  MEMORY[0x270FA5388](v46);
  v44((char *)v49 - v41, v35, v42);
  sub_20B7D2B08();
  uint64_t v47 = *(void (**)(char *, uint64_t))(v43 + 8);
  v47(v35, v42);
  return ((uint64_t (*)(char *, uint64_t))v47)(v45, v42);
}

unint64_t sub_20B7A67FC()
{
  unint64_t result = qword_26769BC88;
  if (!qword_26769BC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BC88);
  }
  return result;
}

void sub_20B7A6850(uint64_t a1)
{
  v16[1] = *(id *)MEMORY[0x263EF8340];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  unint64_t v3 = sub_20B7A6DF4(a1);
  swift_release();
  swift_release();
  if (!v1)
  {
    id v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB48]), sel_init);
    uint64_t v5 = v4;
    if (v3 >> 62)
    {
      id v11 = v4;
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_20B7D3F38();
      if (v6) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v6 = *(void *)((v3 & 0xFFFFFFFFFFFFFF8) + 0x10);
      id v7 = v4;
      swift_bridgeObjectRetain();
      if (v6)
      {
LABEL_4:
        if (v6 < 1) {
          __break(1u);
        }
        for (uint64_t i = 0; i != v6; ++i)
        {
          if ((v3 & 0xC000000000000001) != 0) {
            id v9 = (id)MEMORY[0x210537C20](i, v3);
          }
          else {
            id v9 = *(id *)(v3 + 8 * i + 32);
          }
          uint64_t v10 = v9;
          objc_msgSend(v5, sel_deleteContact_, v9);
        }
      }
    }

    swift_bridgeObjectRelease_n();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D29B8();
    swift_release();
    swift_release();
    id v12 = *((id *)v16[0] + 2);
    swift_release();
    v16[0] = 0;
    unsigned __int8 v13 = objc_msgSend(v12, sel_executeSaveRequest_error_, v5, v16);

    if (v13)
    {
      id v14 = v16[0];
    }
    else
    {
      id v15 = v16[0];
      sub_20B7D3398();

      swift_willThrow();
    }
  }
}

unint64_t sub_20B7A6A94()
{
  unint64_t result = qword_26769BC90;
  if (!qword_26769BC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BC90);
  }
  return result;
}

uint64_t sub_20B7A6AE8()
{
  sub_20B7D2CB8();
  return v1;
}

unint64_t sub_20B7A6B24()
{
  unint64_t result = qword_26769BC98;
  if (!qword_26769BC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BC98);
  }
  return result;
}

unint64_t sub_20B7A6B7C()
{
  unint64_t result = qword_26769BCA0;
  if (!qword_26769BCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BCA0);
  }
  return result;
}

uint64_t sub_20B7A6BD0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7A6BEC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7A6C30@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AFD0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769BC10);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_20B7A6CF0(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + _Block_object_dispose(&a9, 8) = sub_20B775290;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = a1;
  *(_OWORD *)(v4 + 56) = *v1;
  return MEMORY[0x270FA2498](sub_20B7A58C8, 0, 0);
}

uint64_t sub_20B7A6DA8()
{
  return sub_20B7D2A98();
}

ValueMetadata *type metadata accessor for DeleteContactIntent()
{
  return &type metadata for DeleteContactIntent;
}

uint64_t sub_20B7A6DF4(uint64_t a1)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = MEMORY[0x263F8EE78];
  if (v2)
  {
    uint64_t v16 = MEMORY[0x263F8EE78];
    sub_20B7D3EF8();
    for (uint64_t i = a1 + 64; ; i += 104)
    {
      uint64_t v5 = *(void **)(i + 40);
      uint64_t v13 = v2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      id v14 = v5;
      swift_bridgeObjectRetain();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D29B8();
      swift_release();
      swift_release();
      uint64_t v6 = v15;
      if (qword_26769AFA8 != -1) {
        swift_once();
      }
      id v7 = (void *)v6[2];
      uint64_t v8 = (void *)sub_20B7D3AF8();
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
      id v9 = (void *)sub_20B7D3C28();
      id v15 = 0;
      id v10 = objc_msgSend(v7, sel_unifiedContactWithIdentifier_keysToFetch_error_, v8, v9, &v15);

      if (!v10) {
        break;
      }
      id v11 = v15;
      swift_release();
      objc_msgSend(v10, sel_mutableCopy);

      sub_20B7D3DF8();
      swift_unknownObjectRelease();
      sub_20B7A7190();
      swift_dynamicCast();
      swift_release();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      sub_20B7D3ED8();
      sub_20B7D3F08();
      sub_20B7D3F18();
      sub_20B7D3EE8();
      --v2;
      if (v13 == 1) {
        return v16;
      }
    }
    id v12 = v15;
    sub_20B7D3398();

    swift_willThrow();
    swift_release();
    swift_bridgeObjectRelease();

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    return swift_release();
  }
  return result;
}

unint64_t sub_20B7A7190()
{
  unint64_t result = qword_26769B028;
  if (!qword_26769B028)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26769B028);
  }
  return result;
}

uint64_t sub_20B7A71D0()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD40);
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B793264();
  sub_20B7D2E48();
  uint64_t v15 = sub_20B7D2DC8();
  uint64_t v4 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v5 = v4((char *)&v14 - v3, v0);
  MEMORY[0x270FA5388](v5);
  sub_20B7D2E48();
  uint64_t v6 = sub_20B7D2DC8();
  uint64_t v7 = v4((char *)&v14 - v3, v0);
  MEMORY[0x270FA5388](v7);
  sub_20B7D2E48();
  uint64_t v8 = sub_20B7D2DC8();
  uint64_t v9 = v4((char *)&v14 - v3, v0);
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E48();
  uint64_t v10 = sub_20B7D2DC8();
  v4((char *)&v14 - v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD48);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20B7DE330;
  *(void *)(v11 + 32) = v15;
  *(void *)(v11 + 40) = v6;
  *(void *)(v11 + 4_Block_object_dispose(&a9, 8) = v8;
  *(void *)(v11 + 56) = v10;
  uint64_t v12 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_20B7A749C()
{
  return sub_20B7D2DF8();
}

uint64_t sub_20B7A74B4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD38);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v31 = v3;
  unint64_t v33 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v4 = sub_20B793264();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD40);
  uint64_t v29 = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v28 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  unint64_t v23 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v8 = (char *)&v22 - v23;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v32 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v30 = v6 + 8;
  uint64_t v9 = v32(v8, v5);
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v27 = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v10 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v10);
  unint64_t v11 = v23;
  sub_20B7D2E88();
  unint64_t v22 = v4;
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v12 = v29;
  uint64_t v13 = v32((char *)&v22 - v11, v29);
  MEMORY[0x270FA5388](v13);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v14 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v14);
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v32((char *)&v22 - v11, v12);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  sub_20B7D2E88();
  uint64_t v17 = sub_20B7D2DC8();
  v32((char *)&v22 - v11, v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD48);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20B7DE330;
  uint64_t v19 = v25;
  *(void *)(v18 + 32) = v26;
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v18 + 56) = v17;
  uint64_t v20 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_20B7A7C10()
{
  uint64_t v0 = sub_20B7D2E38();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B793264();
  sub_20B7D2E28();
  uint64_t v4 = sub_20B7D2E18();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v6 = v5((char *)&v11 - v3, v0);
  MEMORY[0x270FA5388](v6);
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v7 = sub_20B7D2E18();
  v5((char *)&v11 - v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCE8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20B7DE340;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = sub_20B7D2E08();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20B7A7E48()
{
  return sub_20B7AD7D4();
}

uint64_t sub_20B7A7E64()
{
  return sub_20B7AD7D4();
}

uint64_t sub_20B7A7E84(uint64_t a1)
{
  return sub_20B7A7F58(a1, 37, 0xD000000000000013, 0x800000020B7E91E0, (uint64_t)&unk_20B7DE610);
}

uint64_t sub_20B7A7EAC(uint64_t a1)
{
  return sub_20B7A8270(a1, (uint64_t)sub_20B7A7E48, (uint64_t)sub_20B7A7E64, (uint64_t)&unk_20B7DE610, (uint64_t)sub_20B7A7EF4);
}

uint64_t sub_20B7A7EF4()
{
  return sub_20B7AD7D4();
}

uint64_t sub_20B7A7F30(uint64_t a1)
{
  return sub_20B7A7F58(a1, 38, 0xD000000000000014, 0x800000020B7E91C0, (uint64_t)&unk_20B7DE5E8);
}

uint64_t sub_20B7A7F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v14[1] = a5;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD38);
  MEMORY[0x270FA5388](v5);
  sub_20B793264();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD40);
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D2E88();
  uint64_t v10 = sub_20B7D2DC8();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD48);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_20B7DB980;
  *(void *)(v11 + 32) = v10;
  uint64_t v12 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_20B7A8228(uint64_t a1)
{
  return sub_20B7A8270(a1, (uint64_t)sub_20B7A7E48, (uint64_t)sub_20B7A7E64, (uint64_t)&unk_20B7DE5E8, (uint64_t)sub_20B7A8520);
}

uint64_t sub_20B7A8270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a4;
  uint64_t v23 = a5;
  uint64_t v20 = a3;
  uint64_t v5 = sub_20B7D2E38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v19 = v8;
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B793264();
  sub_20B7D2E28();
  uint64_t v21 = sub_20B7D2E18();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v10 = v9((char *)&v18 - v8, v5);
  MEMORY[0x270FA5388](v10);
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v11 = sub_20B7D2E18();
  uint64_t v12 = v9((char *)&v18 - v8, v5);
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = (char *)&v18 - v19;
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v14 = sub_20B7D2E18();
  v9(v13, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCE8);
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_20B7DE350;
  *(void *)(v15 + 32) = v21;
  *(void *)(v15 + 40) = v11;
  *(void *)(v15 + 4_Block_object_dispose(&a9, 8) = v14;
  uint64_t v16 = sub_20B7D2E08();
  swift_bridgeObjectRelease();
  return v16;
}

uint64_t sub_20B7A8520()
{
  return sub_20B7AD7D4();
}

uint64_t sub_20B7A8558(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD20);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v25 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7A67FC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  v22[1] = sub_20B7AE1FC(&qword_26769BD18, qword_26769B938, (void (*)(void))sub_20B79309C);
  _OWORD v22[2] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  unint64_t v28 = 0x800000020B7E9140;
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD28);
  uint64_t v23 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v26 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v31 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v7 = (char *)v22 - v31;
  sub_20B7D2E88();
  uint64_t v8 = sub_20B7D2DC8();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  uint64_t v24 = v5 + 8;
  uint64_t v29 = v8;
  uint64_t v30 = v9;
  uint64_t v10 = v9(v7, v4);
  MEMORY[0x270FA5388](v10);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v11 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v11);
  uint64_t v12 = (char *)v22 - v31;
  sub_20B7D2E88();
  uint64_t v27 = sub_20B7D2DC8();
  uint64_t v13 = v23;
  uint64_t v14 = v30(v12, v23);
  MEMORY[0x270FA5388](v14);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v15 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = (char *)v22 - v31;
  sub_20B7D2E88();
  uint64_t v17 = sub_20B7D2DC8();
  v30(v16, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD30);
  uint64_t v18 = swift_allocObject();
  *(_OWORD *)(v18 + 16) = xmmword_20B7DE350;
  uint64_t v19 = v27;
  *(void *)(v18 + 32) = v29;
  *(void *)(v18 + 40) = v19;
  *(void *)(v18 + 4_Block_object_dispose(&a9, 8) = v17;
  uint64_t v20 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v20;
}

uint64_t sub_20B7A8A4C()
{
  uint64_t v0 = sub_20B7D2E38();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BD18, qword_26769B938, (void (*)(void))sub_20B79309C);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7A67FC();
  sub_20B7D2E28();
  uint64_t v4 = sub_20B7D2E18();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCE8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B7DB980;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_20B7D2E08();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_20B7A8BE0()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7A8C98(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v28 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v31 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  v23[0] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v29 = v7;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23[1] = v5 + 8;
  uint64_t v32 = v4;
  uint64_t v8 = v30((char *)v23 - v7, v4);
  MEMORY[0x270FA5388](v8);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v9 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E88();
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v10 = (char *)v23 - v7;
  uint64_t v11 = v30;
  uint64_t v12 = v30(v10, v4);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v11(v14, v32);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v18 = sub_20B7D2DC8();
  v30(v17, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20B7DE330;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_20B7A92F8()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7A932C()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7A93DC()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7A949C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v28 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v31 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  v23[1] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v29 = v7;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23[0] = v5 + 8;
  uint64_t v32 = v4;
  uint64_t v8 = v30((char *)v23 - v7, v4);
  MEMORY[0x270FA5388](v8);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v9 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E88();
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v10 = (char *)v23 - v7;
  uint64_t v11 = v30;
  uint64_t v12 = v30(v10, v4);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v11(v14, v32);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v18 = sub_20B7D2DC8();
  v30(v17, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20B7DE330;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_20B7A9B00()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7A9B34()
{
  uint64_t v0 = sub_20B7D2E38();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = *(void *)(v1 + 64);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7AE0BC();
  sub_20B7D2E28();
  uint64_t v4 = sub_20B7D2E18();
  uint64_t v5 = *(uint64_t (**)(char *, uint64_t))(v1 + 8);
  uint64_t v6 = v5((char *)&v11 - v3, v0);
  MEMORY[0x270FA5388](v6);
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v7 = sub_20B7D2E18();
  v5((char *)&v11 - v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCE8);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_20B7DE340;
  *(void *)(v8 + 32) = v4;
  *(void *)(v8 + 40) = v7;
  uint64_t v9 = sub_20B7D2E08();
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t sub_20B7A9D58()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7A9E10(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v28 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v31 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  v23[0] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v29 = v7;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23[1] = v5 + 8;
  uint64_t v32 = v4;
  uint64_t v8 = v30((char *)v23 - v7, v4);
  MEMORY[0x270FA5388](v8);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v9 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E88();
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v10 = (char *)v23 - v7;
  uint64_t v11 = v30;
  uint64_t v12 = v30(v10, v4);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v11(v14, v32);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v18 = sub_20B7D2DC8();
  v30(v17, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20B7DE330;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_20B7AA474()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7AA4A8()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  uint64_t v3 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DE330;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B7AA564(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v28 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v31 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  v23[0] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v29 = v7;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23[1] = v5 + 8;
  uint64_t v32 = v4;
  uint64_t v8 = v30((char *)v23 - v7, v4);
  MEMORY[0x270FA5388](v8);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v9 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E88();
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v10 = (char *)v23 - v7;
  uint64_t v11 = v30;
  uint64_t v12 = v30(v10, v4);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v11(v14, v32);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v18 = sub_20B7D2DC8();
  v30(v17, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20B7DE330;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_20B7AABC8()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7AABFC()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  uint64_t v3 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DE330;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B7AACB0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v49 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v45 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v4 = sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v5 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v44 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v43 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v46 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)v35 - v46;
  sub_20B7D2E88();
  uint64_t v40 = sub_20B7D2DC8();
  uint64_t v42 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v48 = v7 + 8;
  uint64_t v10 = v42(v9, v6);
  MEMORY[0x270FA5388](v10);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v47 = v5;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v11 = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v12 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v12);
  uint64_t v13 = (char *)v35 - v46;
  sub_20B7D2E88();
  v35[1] = v4;
  uint64_t v39 = sub_20B7D2DC8();
  uint64_t v14 = v44;
  uint64_t v15 = v42;
  uint64_t v16 = v42(v13, v44);
  MEMORY[0x270FA5388](v16);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v41 = v11;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v17 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v17);
  unint64_t v18 = v46;
  sub_20B7D2E88();
  uint64_t v38 = sub_20B7D2DC8();
  uint64_t v19 = v15((char *)v35 - v18, v14);
  MEMORY[0x270FA5388](v19);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v20 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v20);
  sub_20B7D2E88();
  uint64_t v37 = sub_20B7D2DC8();
  uint64_t v21 = (char *)v35 - v18;
  uint64_t v22 = v44;
  uint64_t v23 = v42;
  uint64_t v24 = v42(v21, v44);
  MEMORY[0x270FA5388](v24);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v25 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v25);
  unint64_t v26 = v46;
  sub_20B7D2E88();
  uint64_t v36 = sub_20B7D2DC8();
  uint64_t v27 = v23((char *)v35 - v26, v22);
  MEMORY[0x270FA5388](v27);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v28 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v28);
  sub_20B7D2E88();
  uint64_t v29 = sub_20B7D2DC8();
  v42((char *)v35 - v26, v44);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = xmmword_20B7DE360;
  uint64_t v31 = v39;
  *(void *)(v30 + 32) = v40;
  *(void *)(v30 + 40) = v31;
  uint64_t v32 = v37;
  *(void *)(v30 + 4_Block_object_dispose(&a9, 8) = v38;
  *(void *)(v30 + 56) = v32;
  *(void *)(v30 + 64) = v36;
  *(void *)(v30 + 72) = v29;
  uint64_t v33 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v33;
}

uint64_t sub_20B7AB6D0(uint64_t a1)
{
  return sub_20B7AC31C(a1, (uint64_t)sub_20B7AB718, (uint64_t)&unk_20B7DE4A8, (uint64_t)sub_20B7AB7E4, (uint64_t)sub_20B7AE288);
}

uint64_t sub_20B7AB718()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  uint64_t v3 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DE330;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B7AB7E4()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7AB8C0(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v48 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v45 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v4 = sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v5 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v49 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v47 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v50 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)v36 - v50;
  sub_20B7D2E88();
  uint64_t v10 = sub_20B7D2DC8();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v41 = v10;
  uint64_t v42 = v11;
  uint64_t v46 = v7 + 8;
  uint64_t v12 = v11(v9, v6);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v43 = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)v36 - v50;
  sub_20B7D2E88();
  uint64_t v40 = sub_20B7D2DC8();
  uint64_t v15 = v42;
  uint64_t v16 = v42(v14, v49);
  MEMORY[0x270FA5388](v16);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v44 = v5;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v17 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v17);
  unint64_t v18 = v50;
  sub_20B7D2E88();
  v36[1] = v4;
  uint64_t v39 = sub_20B7D2DC8();
  uint64_t v19 = v15((char *)v36 - v18, v49);
  MEMORY[0x270FA5388](v19);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v20 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v20);
  sub_20B7D2E88();
  uint64_t v38 = sub_20B7D2DC8();
  uint64_t v21 = (char *)v36 - v18;
  uint64_t v22 = v49;
  uint64_t v23 = v42;
  uint64_t v24 = v42(v21, v49);
  MEMORY[0x270FA5388](v24);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v25 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v25);
  unint64_t v26 = (char *)v36 - v50;
  sub_20B7D2E88();
  uint64_t v37 = sub_20B7D2DC8();
  uint64_t v27 = v23(v26, v22);
  MEMORY[0x270FA5388](v27);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v28 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = (char *)v36 - v50;
  sub_20B7D2E88();
  uint64_t v30 = sub_20B7D2DC8();
  v23(v29, v49);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_20B7DE360;
  uint64_t v32 = v40;
  *(void *)(v31 + 32) = v41;
  *(void *)(v31 + 40) = v32;
  uint64_t v33 = v38;
  *(void *)(v31 + 4_Block_object_dispose(&a9, 8) = v39;
  *(void *)(v31 + 56) = v33;
  *(void *)(v31 + 64) = v37;
  *(void *)(v31 + 72) = v30;
  uint64_t v34 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v34;
}

uint64_t sub_20B7AC2D4(uint64_t a1)
{
  return sub_20B7AC31C(a1, (uint64_t)sub_20B7AC5D4, (uint64_t)&unk_20B7DE480, (uint64_t)sub_20B7AC69C, (uint64_t)sub_20B7AE288);
}

uint64_t sub_20B7AC31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v24 = a5;
  uint64_t v21 = a3;
  uint64_t v22 = a4;
  uint64_t v5 = sub_20B7D2E38();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v20 = v8;
  swift_getKeyPath();
  sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7AE0BC();
  sub_20B7D2E28();
  uint64_t v23 = sub_20B7D2E18();
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t))(v6 + 8);
  uint64_t v10 = v9((char *)&v19 - v8, v5);
  MEMORY[0x270FA5388](v10);
  uint64_t v11 = (char *)&v19 - v8;
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v12 = sub_20B7D2E18();
  uint64_t v13 = v9(v11, v5);
  MEMORY[0x270FA5388](v13);
  uint64_t v14 = (char *)&v19 - v20;
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E28();
  uint64_t v15 = sub_20B7D2E18();
  v9(v14, v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCE8);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_20B7DE350;
  *(void *)(v16 + 32) = v23;
  *(void *)(v16 + 40) = v12;
  *(void *)(v16 + 4_Block_object_dispose(&a9, 8) = v15;
  uint64_t v17 = sub_20B7D2E08();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_20B7AC5D4()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  uint64_t v3 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DE330;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B7AC69C()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7AC768(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  uint64_t v41 = v3;
  unint64_t v46 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v4 = sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v5 = sub_20B7AE1FC(&qword_26769BCD8, &qword_26769B630, (void (*)(void))sub_20B7AE118);
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v47 = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v44 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  unint64_t v45 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v9 = (char *)&v34 - v45;
  sub_20B7D2E88();
  uint64_t v10 = sub_20B7D2DC8();
  uint64_t v11 = *(uint64_t (**)(char *, uint64_t))(v7 + 8);
  uint64_t v38 = v10;
  uint64_t v39 = v11;
  uint64_t v42 = v7 + 8;
  uint64_t v12 = v11(v9, v6);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v43 = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  unint64_t v14 = v45;
  sub_20B7D2E88();
  unint64_t v34 = v4;
  uint64_t v37 = sub_20B7D2DC8();
  uint64_t v15 = v39;
  uint64_t v16 = v39((char *)&v34 - v14, v47);
  MEMORY[0x270FA5388](v16);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v40 = v5;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v17 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v17);
  sub_20B7D2E88();
  uint64_t v36 = sub_20B7D2DC8();
  unint64_t v18 = (char *)&v34 - v14;
  uint64_t v19 = v47;
  uint64_t v20 = v15(v18, v47);
  MEMORY[0x270FA5388](v20);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v21 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v21);
  uint64_t v22 = (char *)&v34 - v45;
  sub_20B7D2E88();
  uint64_t v35 = sub_20B7D2DC8();
  uint64_t v23 = v19;
  uint64_t v24 = (void (*)(char *, uint64_t))v39;
  uint64_t v25 = v39(v22, v23);
  MEMORY[0x270FA5388](v25);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v26 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = (char *)&v34 - v45;
  sub_20B7D2E88();
  uint64_t v28 = sub_20B7D2DC8();
  v24(v27, v47);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_20B7DC710;
  uint64_t v30 = v37;
  *(void *)(v29 + 32) = v38;
  *(void *)(v29 + 40) = v30;
  uint64_t v31 = v35;
  *(void *)(v29 + 4_Block_object_dispose(&a9, 8) = v36;
  *(void *)(v29 + 56) = v31;
  *(void *)(v29 + 64) = v28;
  uint64_t v32 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v32;
}

uint64_t sub_20B7AD00C()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7AD040()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  uint64_t v3 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_20B7DE330;
  *(void *)(v4 + 32) = v0;
  *(void *)(v4 + 40) = v1;
  *(void *)(v4 + 4_Block_object_dispose(&a9, 8) = v2;
  *(void *)(v4 + 56) = v3;
  uint64_t v5 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_20B7AD108(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCF0);
  uint64_t v28 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v27 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7AE0BC();
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  uint64_t v31 = sub_20B7AE1FC(&qword_26769BCF8, &qword_26769B050, (void (*)(void))sub_20B7AE170);
  v23[0] = a1;
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD08);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v33 = *(void *)(v5 + 64);
  MEMORY[0x270FA5388](v4);
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v29 = v7;
  sub_20B7D2E88();
  uint64_t v26 = sub_20B7D2DC8();
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
  v23[1] = v5 + 8;
  uint64_t v32 = v4;
  uint64_t v8 = v30((char *)v23 - v7, v4);
  MEMORY[0x270FA5388](v8);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v9 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v9);
  sub_20B7D2E88();
  uint64_t v25 = sub_20B7D2DC8();
  uint64_t v10 = (char *)v23 - v7;
  uint64_t v11 = v30;
  uint64_t v12 = v30(v10, v4);
  MEMORY[0x270FA5388](v12);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v13 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v13);
  unint64_t v14 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v24 = sub_20B7D2DC8();
  uint64_t v15 = v11(v14, v32);
  MEMORY[0x270FA5388](v15);
  sub_20B7D2E78();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B79309C();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  sub_20B7D2E68();
  swift_getKeyPath();
  sub_20B7D2DA8();
  swift_release();
  sub_20B7D2E58();
  swift_release();
  uint64_t v16 = sub_20B7D2E68();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = (char *)v23 - v29;
  sub_20B7D2E88();
  uint64_t v18 = sub_20B7D2DC8();
  v30(v17, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BD10);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_20B7DE330;
  uint64_t v20 = v25;
  *(void *)(v19 + 32) = v26;
  *(void *)(v19 + 40) = v20;
  *(void *)(v19 + 4_Block_object_dispose(&a9, 8) = v24;
  *(void *)(v19 + 56) = v18;
  uint64_t v21 = sub_20B7D2DB8();
  swift_bridgeObjectRelease();
  return v21;
}

uint64_t sub_20B7AD770()
{
  return sub_20B7A9B34();
}

uint64_t sub_20B7AD7A4()
{
  return sub_20B7AD7D4();
}

uint64_t sub_20B7AD7D4()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_20B7DE340;
  *(void *)(v2 + 32) = v0;
  *(void *)(v2 + 40) = v1;
  uint64_t v3 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_20B7AD858()
{
  uint64_t v0 = sub_20B7D2DE8();
  uint64_t v1 = sub_20B7D2DE8();
  uint64_t v2 = sub_20B7D2DE8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE350;
  *(void *)(v3 + 32) = v0;
  *(void *)(v3 + 40) = v1;
  *(void *)(v3 + 4_Block_object_dispose(&a9, 8) = v2;
  uint64_t v4 = sub_20B7D2DD8();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_20B7AD928()
{
  return sub_20B7D2988();
}

uint64_t sub_20B7AD940()
{
  uint64_t v0 = sub_20B7D2D98();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B793264();
  sub_20B7D2D88();
  uint64_t v4 = sub_20B7D2D78();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCB8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_20B7DB980;
  *(void *)(v5 + 32) = v4;
  uint64_t v6 = sub_20B7D2D68();
  swift_bridgeObjectRelease();
  return v6;
}

ValueMetadata *type metadata accessor for ContactsAssistantIntents()
{
  return &type metadata for ContactsAssistantIntents;
}

uint64_t sub_20B7ADA88()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BCC8);
  sub_20B7D2E98();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_20B7DE370;
  CreateContactIntent.init()((uint64_t *)&v2);
  sub_20B793264();
  sub_20B7D2EA8();
  CreateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  CreateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  CreateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  DeleteContactIntent.init()((uint64_t *)&v2);
  sub_20B7A67FC();
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7AE0BC();
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  UpdateContactIntent.init()((uint64_t *)&v2);
  sub_20B7D2EA8();
  return v0;
}

unint64_t sub_20B7AE0BC()
{
  unint64_t result = qword_26769BCD0;
  if (!qword_26769BCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BCD0);
  }
  return result;
}

unint64_t sub_20B7AE118()
{
  unint64_t result = qword_26769BCE0;
  if (!qword_26769BCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BCE0);
  }
  return result;
}

unint64_t sub_20B7AE170()
{
  unint64_t result = qword_26769BD00;
  if (!qword_26769BD00)
  {
    sub_20B7D32C8();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BD00);
  }
  return result;
}

uint64_t sub_20B7AE1FC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B7AE28C()
{
  sub_20B7D3E88();
  swift_bridgeObjectRelease();
  strcpy((char *)v2, "identifiers: ");
  sub_20B7D38B8();
  MEMORY[0x2105379C0](v1, MEMORY[0x263F8D310]);
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_20B7D3B98();
  sub_20B7D38B8();
  MEMORY[0x2105379C0](v1, &type metadata for ContactLikenessKindAppEnumRepresentation);
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v2[0];
}

uint64_t sub_20B7AE39C@<X0>(uint64_t a1@<X8>)
{
  long long v2 = (int *)type metadata accessor for ContactLikeness(0);
  uint64_t v3 = *((void *)v2 - 1);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (uint64_t)&v37 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v6 + *(int *)(v4 + 24);
  uint64_t v8 = sub_20B7D3908();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v46 = v7;
  v10(v7, 1, 1, v8);
  uint64_t v11 = (char *)v2[8];
  v11[v6] = 2;
  uint64_t v44 = v2[9];
  *(void *)(v6 + v44) = 0;
  uint64_t v45 = v2[10];
  *(void *)(v6 + v45) = 0;
  sub_20B7D2DA8();
  sub_20B7D3868();
  uint64_t v12 = swift_release();
  uint64_t v13 = v48;
  if (!v48)
  {
    if (qword_26769AFE8 != -1) {
      swift_once();
    }
    uint64_t v24 = sub_20B7D39F8();
    __swift_project_value_buffer(v24, (uint64_t)qword_2676A3CF0);
    os_log_type_t v19 = sub_20B7D3D48();
    uint64_t v20 = sub_20B7D39D8();
    if (!os_log_type_enabled(v20, v19)) {
      goto LABEL_12;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "Contact identifier was unexpectedly nil";
    goto LABEL_11;
  }
  uint64_t v39 = v11;
  uint64_t v40 = v2;
  uint64_t v42 = v3;
  uint64_t v43 = a1;
  uint64_t v41 = &v37;
  uint64_t v38 = v47;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v17 = *(void *)(*(void *)(v16 - 8) + 64);
  MEMORY[0x270FA5388](v16 - 8);
  sub_20B7D2DA8();
  sub_20B7D3868();
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))((char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v8) == 1)
  {
    swift_bridgeObjectRelease();
    sub_20B76D2E4((uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26769BDA0);
    if (qword_26769AFE8 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_20B7D39F8();
    __swift_project_value_buffer(v18, (uint64_t)qword_2676A3CF0);
    os_log_type_t v19 = sub_20B7D3D48();
    uint64_t v20 = sub_20B7D39D8();
    BOOL v21 = os_log_type_enabled(v20, v19);
    uint64_t v3 = v42;
    a1 = v43;
    long long v2 = v40;
    if (!v21) {
      goto LABEL_12;
    }
    uint64_t v22 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v22 = 0;
    uint64_t v23 = "Data intent file was unexpectedly nil";
LABEL_11:
    _os_log_impl(&dword_20B704000, v20, v19, v23, v22, 2u);
    MEMORY[0x210538E40](v22, -1, -1);
LABEL_12:

    swift_release();
    uint64_t v25 = v46;
LABEL_13:
    sub_20B76D2E4(v25, &qword_26769BDA0);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, int *))(v3 + 56))(a1, 1, 1, v2);
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v15, (char *)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  sub_20B7D2DA8();
  sub_20B7D3868();
  swift_release();
  char v27 = v47;
  if (v47 == 4)
  {
    uint64_t v39 = v15;
    swift_bridgeObjectRelease();
    if (qword_26769AFE8 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_20B7D39F8();
    __swift_project_value_buffer(v28, (uint64_t)qword_2676A3CF0);
    os_log_type_t v29 = sub_20B7D3D48();
    uint64_t v30 = sub_20B7D39D8();
    BOOL v31 = os_log_type_enabled(v30, v29);
    a1 = v43;
    if (v31)
    {
      uint64_t v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v32 = 0;
      _os_log_impl(&dword_20B704000, v30, v29, "Likeness kind was unexpectedly nil", v32, 2u);
      MEMORY[0x210538E40](v32, -1, -1);
    }

    swift_release();
    (*(void (**)(char *, uint64_t))(v9 + 8))(v39, v8);
    uint64_t v3 = v42;
    uint64_t v25 = v46;
    long long v2 = v40;
    goto LABEL_13;
  }
  *(void *)uint64_t v6 = v38;
  *(void *)(v6 + _Block_object_dispose(&a9, 8) = v13;
  uint64_t v33 = v15;
  unint64_t v34 = v40;
  (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v6 + v40[5], v33, v8);
  *(unsigned char *)(v6 + v34[7]) = v27;
  sub_20B7D2DA8();
  sub_20B7D3868();
  uint64_t v35 = swift_release();
  v39[v6] = v47;
  MEMORY[0x270FA5388](v35);
  sub_20B7D2DA8();
  sub_20B7D3868();
  swift_release();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v33, v8);
  sub_20B7AF194((uint64_t)&v37 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0), v46);
  uint64_t v36 = v43;
  sub_20B780868(v6, v43);
  (*(void (**)(uint64_t, void, uint64_t, int *))(v42 + 56))(v36, 0, 1, v34);
  return sub_20B7808CC(v6);
}

unint64_t sub_20B7AEA40()
{
  uint64_t v0 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v0 - 8);
  long long v2 = (char *)&v18 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_20B7D39C8();
  uint64_t v20 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20B7D3908();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v10 = *(void *)(*(void *)(v21 - 8) + 64);
  MEMORY[0x270FA5388](v21);
  sub_20B7D2DA8();
  sub_20B7D3868();
  uint64_t v11 = v6;
  uint64_t v12 = v7;
  swift_release();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))((char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), 1, v11) == 1)
  {
    sub_20B76D2E4((uint64_t)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), &qword_26769BDA0);
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_20B7D3E88();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000013;
    unint64_t v23 = 0x800000020B7E9420;
    sub_20B7D2DA8();
    sub_20B7D3868();
    swift_release();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    return v22;
  }
  else
  {
    uint64_t v14 = *(void (**)(char *, char *, uint64_t))(v7 + 32);
    uint64_t v18 = v11;
    v14(v9, (char *)&v18 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
    os_log_type_t v19 = v9;
    sub_20B7D38F8();
    uint64_t v15 = v20;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v2, 1, v3) == 1)
    {
      sub_20B76D2E4((uint64_t)v2, (uint64_t *)&unk_26769C120);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v5, v2, v3);
      sub_20B7B3C70(&qword_26769C150, MEMORY[0x263F8F3A0]);
      sub_20B7D4008();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
    }
    unint64_t v22 = 0;
    unint64_t v23 = 0xE000000000000000;
    sub_20B7D3E88();
    swift_bridgeObjectRelease();
    unint64_t v22 = 0xD000000000000013;
    unint64_t v23 = 0x800000020B7E9420;
    sub_20B7D2DA8();
    sub_20B7D3868();
    swift_release();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    sub_20B7D3B98();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    uint64_t v16 = sub_20B7D3B98();
    MEMORY[0x270FA5388](v16);
    sub_20B7D2DA8();
    sub_20B7D3868();
    swift_release();
    sub_20B7D3B38();
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    unint64_t v13 = v22;
    (*(void (**)(char *, uint64_t))(v12 + 8))(v19, v18);
  }
  return v13;
}

BOOL static ContactLikeness.Kind.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_20B7AEFA8(uint64_t a1)
{
  return sub_20B7AEFD4(a1, qword_2676A3CD8);
}

uint64_t sub_20B7AEFB8(uint64_t a1)
{
  return sub_20B7AEFD4(a1, qword_2676A3CF0);
}

uint64_t sub_20B7AEFD4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  return sub_20B7D39E8();
}

uint64_t ContactLikeness.contactIdentifier.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ContactLikeness.metadataFileRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactLikeness(0) + 24);
  return sub_20B7AF0E8(v3, a1);
}

uint64_t type metadata accessor for ContactLikeness(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769BE30);
}

uint64_t sub_20B7AF0E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t ContactLikeness.metadataFileRepresentation.setter(uint64_t a1)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for ContactLikeness(0) + 24);
  return sub_20B7AF194(a1, v3);
}

uint64_t sub_20B7AF194(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*ContactLikeness.metadataFileRepresentation.modify())()
{
  return nullsub_1;
}

uint64_t ContactLikeness.kind.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for ContactLikeness(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 28));
  return result;
}

uint64_t ContactLikeness.contentIsSensitive.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for ContactLikeness(0) + 32));
}

uint64_t ContactLikeness.contentIsSensitive.setter(char a1)
{
  uint64_t result = type metadata accessor for ContactLikeness(0);
  *(unsigned char *)(v1 + *(int *)(result + 32)) = a1;
  return result;
}

uint64_t (*ContactLikeness.contentIsSensitive.modify())()
{
  return nullsub_1;
}

ContactsUICore::ContactLikeness::Kind __swiftcall ContactLikeness.Kind.init(_:)(ContactsUICore::ContactLikeness::Kind result)
{
  *uint64_t v1 = *(unsigned char *)result;
  return result;
}

uint64_t ContactLikeness.data.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContactLikeness(0);
  uint64_t v3 = *(int *)(v2 + 36);
  if (*(void *)(v1 + v3))
  {
    uint64_t v4 = *(void *)(v1 + v3);
  }
  else
  {
    uint64_t v5 = sub_20B7D3908();
    v14[1] = v14;
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    MEMORY[0x270FA5388](v5);
    unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF0;
    uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 16);
    uint64_t v10 = v9((char *)v14 - v8, v1 + *(int *)(v2 + 20), v5);
    v14[0] = v14;
    MEMORY[0x270FA5388](v10);
    v9((char *)v14 - v8, (uint64_t)v14 - v8, v5);
    unint64_t v11 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v12 = swift_allocObject();
    (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v12 + v11, (char *)v14 - v8, v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA8);
    swift_allocObject();
    uint64_t v4 = sub_20B7D3A28();
    (*(void (**)(char *, uint64_t))(v6 + 8))((char *)v14 - v8, v5);
    sub_20B7D2DA8();
    swift_release();
    *(void *)(v1 + v3) = v4;
  }
  sub_20B7D2DA8();
  return v4;
}

uint64_t sub_20B7AF534(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF50);
  MEMORY[0x270FA5388](v6 - 8);
  unint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = a1;
  *(void *)(v9 + 24) = a2;
  uint64_t v10 = sub_20B7D3CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v8, 1, 1, v10);
  uint64_t v11 = sub_20B7D3908();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  MEMORY[0x270FA5388](v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a3, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = 0;
  *(void *)(v15 + 24) = 0;
  (*(void (**)(unint64_t, char *, uint64_t))(v12 + 32))(v15 + v14, (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  uint64_t v16 = (uint64_t (**)(uint64_t, uint64_t, char))(v15 + ((v13 + v14 + 7) & 0xFFFFFFFFFFFFFFF8));
  *uint64_t v16 = sub_20B7B45A0;
  v16[1] = (uint64_t (*)(uint64_t, uint64_t, char))v9;
  sub_20B7D2DA8();
  sub_20B7AFB60((uint64_t)v8, (uint64_t)&unk_26769BF90, v15);
  return swift_release();
}

uint64_t sub_20B7AF750()
{
  uint64_t v1 = sub_20B7D3908();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

uint64_t sub_20B7AF7E0(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(sub_20B7D3908() - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_20B7AF534(a1, a2, v6);
}

uint64_t sub_20B7AF860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[2] = a5;
  v6[3] = a6;
  uint64_t v7 = (void *)swift_task_alloc();
  v6[4] = v7;
  void *v7 = v6;
  v7[1] = sub_20B7AF8F8;
  return MEMORY[0x270F0CB80]();
}

uint64_t sub_20B7AF8F8(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 40) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_20B7AFACC;
  }
  else
  {
    *(void *)(v6 + 4_Block_object_dispose(&a9, 8) = a2;
    *(void *)(v6 + 56) = a1;
    uint64_t v7 = sub_20B7AFA2C;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_20B7AFA2C()
{
  unint64_t v2 = v0[6];
  uint64_t v1 = v0[7];
  uint64_t v3 = (void (*)(uint64_t, unint64_t, void))v0[2];
  sub_20B773108(v1, v2);
  v3(v1, v2, 0);
  sub_20B76C024(v1, v2);
  sub_20B76C024(v1, v2);
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_20B7AFACC()
{
  uint64_t v1 = (void *)v0[5];
  unint64_t v2 = (void (*)(void *, void, uint64_t))v0[2];
  id v3 = v1;
  v2(v1, 0, 1);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_20B7AFB60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3CE8();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_20B7D3CD8();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_20B76D2E4(a1, &qword_26769BF50);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_20B7D3CA8();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t ContactLikeness.data.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ContactLikeness(0) + 36);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ContactLikeness.data.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = ContactLikeness.data.getter();
  return sub_20B7AFD94;
}

uint64_t sub_20B7AFD94(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for ContactLikeness(0) + 36);
  if (a2)
  {
    sub_20B7D2DA8();
    swift_release();
    *(void *)(v4 + v5) = v3;
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *(void *)(v4 + v5) = v3;
  }
  return result;
}

uint64_t ContactLikeness.metadata.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for ContactLikeness(0);
  uint64_t v3 = *(int *)(v2 + 40);
  if (*(void *)(v1 + v3))
  {
    uint64_t v4 = *(void *)(v1 + v3);
  }
  else
  {
    uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = *(void *)(v6 + 64);
    MEMORY[0x270FA5388](v5 - 8);
    uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
    uint64_t v9 = sub_20B7AF0E8(v1 + *(int *)(v2 + 24), (uint64_t)v8);
    MEMORY[0x270FA5388](v9);
    sub_20B7AF0E8((uint64_t)v8, (uint64_t)v8);
    unint64_t v10 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v11 = swift_allocObject();
    sub_20B7B02C8((uint64_t)v8, v11 + v10);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDB0);
    swift_allocObject();
    uint64_t v4 = sub_20B7D3A28();
    sub_20B76D2E4((uint64_t)v8, &qword_26769BDA0);
    sub_20B7D2DA8();
    swift_release();
    *(void *)(v1 + v3) = v4;
  }
  sub_20B7D2DA8();
  return v4;
}

uint64_t sub_20B7AFFE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF50);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_20B7D3CE8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v8, 1, 1, v9);
  uint64_t v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  MEMORY[0x270FA5388](v10 - 8);
  sub_20B7AF0E8(a3, (uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  sub_20B7B02C8((uint64_t)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v14 + v13);
  uint64_t v15 = (void *)(v14 + ((v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8));
  void *v15 = a1;
  v15[1] = a2;
  sub_20B7D2DA8();
  sub_20B7AFB60((uint64_t)v8, (uint64_t)&unk_26769BF60, v14);
  return swift_release();
}

uint64_t sub_20B7B01A8()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = sub_20B7D3908();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  return MEMORY[0x270FA0238](v0, v3 + v4, v2 | 7);
}

uint64_t sub_20B7B02C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B7B0330(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8);
  uint64_t v6 = v2 + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return sub_20B7AFFE8(a1, a2, v6);
}

uint64_t sub_20B7B03B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[5] = a5;
  v6[6] = a6;
  v6[4] = a4;
  return MEMORY[0x270FA2498](sub_20B7B03D8, 0, 0);
}

uint64_t sub_20B7B03D8()
{
  uint64_t v18 = v0;
  uint64_t v1 = v0[4];
  uint64_t v2 = sub_20B7D3908();
  v0[7] = v2;
  uint64_t v3 = *(void *)(v2 - 8);
  v0[8] = v3;
  uint64_t v4 = swift_task_alloc();
  v0[9] = v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v5 = swift_task_alloc();
  sub_20B7AF0E8(v1, v5);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v5, 1, v2) == 1)
  {
    sub_20B76D2E4(v5, &qword_26769BDA0);
    swift_task_dealloc();
    swift_task_dealloc();
    if (qword_26769AFE0 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_20B7D39F8();
    __swift_project_value_buffer(v6, (uint64_t)qword_2676A3CD8);
    uint64_t v7 = sub_20B7D39D8();
    os_log_type_t v8 = sub_20B7D3D48();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_20B704000, v7, v8, "Error unwrapping likeness metadata: unexpectedly nil", v9, 2u);
      MEMORY[0x210538E40](v9, -1, -1);
    }
    uint64_t v10 = (void (*)(void *))v0[5];

    sub_20B7B44E4();
    uint64_t v11 = (void *)swift_allocError();
    unsigned char *v12 = 1;
    v16[0] = v11;
    v16[1] = 0;
    char v17 = 1;
    v10(v16);

    unint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4, v5, v2);
    swift_task_dealloc();
    uint64_t v15 = (void *)swift_task_alloc();
    v0[10] = v15;
    void *v15 = v0;
    v15[1] = sub_20B7B06C4;
    return MEMORY[0x270F0CB80]();
  }
}

uint64_t sub_20B7B06C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[11] = a1;
  v4[12] = a2;
  v4[13] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_20B7B0998;
  }
  else {
    uint64_t v5 = sub_20B7B07DC;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_20B7B07DC()
{
  char v17 = v0;
  uint64_t v1 = (void *)v0[13];
  sub_20B7D30B8();
  swift_allocObject();
  sub_20B7D30A8();
  sub_20B7B4538();
  sub_20B7D3098();
  uint64_t v3 = v0[11];
  unint64_t v2 = v0[12];
  uint64_t v5 = v0[8];
  uint64_t v4 = v0[9];
  uint64_t v6 = v0[7];
  if (v1)
  {
    (*(void (**)(void, void))(v5 + 8))(v0[9], v0[7]);
    swift_release();
    sub_20B76C024(v3, v2);
    uint64_t v7 = (void (*)(uint64_t *))v0[5];
    swift_task_dealloc();
    uint64_t v14 = (uint64_t)v1;
    unint64_t v15 = 0;
    char v16 = 1;
    id v8 = v1;
    v7(&v14);
  }
  else
  {
    uint64_t v9 = (void (*)(uint64_t *))v0[5];
    swift_release();
    uint64_t v10 = v0[2];
    unint64_t v11 = v0[3];
    uint64_t v14 = v10;
    unint64_t v15 = v11;
    char v16 = 0;
    sub_20B7B458C(v10, v11);
    v9(&v14);
    sub_20B76C024(v3, v2);
    sub_20B7B10DC(v10, v11);
    sub_20B7B10DC(v10, v11);
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    swift_task_dealloc();
  }
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_20B7B0998()
{
  id v8 = v0;
  (*(void (**)(void, void))(v0[8] + 8))(v0[9], v0[7]);
  uint64_t v1 = (void *)v0[13];
  unint64_t v2 = (void (*)(void *))v0[5];
  swift_task_dealloc();
  v6[0] = v1;
  v6[1] = 0;
  char v7 = 1;
  id v3 = v1;
  v2(v6);

  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t ContactLikeness.metadata.setter(uint64_t a1)
{
  uint64_t v3 = *(int *)(type metadata accessor for ContactLikeness(0) + 40);
  uint64_t result = swift_release();
  *(void *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ContactLikeness.metadata.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  a1[1] = v1;
  *a1 = ContactLikeness.metadata.getter();
  return sub_20B7B0AD8;
}

uint64_t sub_20B7B0AD8(uint64_t *a1, char a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = *(int *)(type metadata accessor for ContactLikeness(0) + 40);
  if (a2)
  {
    sub_20B7D2DA8();
    swift_release();
    *(void *)(v4 + v5) = v3;
    return swift_release();
  }
  else
  {
    uint64_t result = swift_release();
    *(void *)(v4 + v5) = v3;
  }
  return result;
}

uint64_t ContactLikeness.backgroundColorsData.getter()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_20B7B0B88, 0, 0);
}

uint64_t sub_20B7B0B88()
{
  *(void *)(v0 + 40) = ContactLikeness.metadata.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20B7B0C34;
  return MEMORY[0x270EE3D60](v0 + 16);
}

uint64_t sub_20B7B0C34()
{
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v1 = sub_20B7B0DAC;
  }
  else
  {
    swift_release();
    uint64_t v1 = sub_20B7B0D7C;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_20B7B0D7C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if ((v1 & 0xF000000000000000) == 0xB000000000000000) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = *(void *)(v0 + 16);
  }
  if ((v1 & 0xF000000000000000) == 0xB000000000000000) {
    unint64_t v3 = 0xF000000000000000;
  }
  else {
    unint64_t v3 = *(void *)(v0 + 24);
  }
  return (*(uint64_t (**)(uint64_t, unint64_t))(v0 + 8))(v2, v3);
}

uint64_t sub_20B7B0DAC()
{
  return (*(uint64_t (**)(void, unint64_t))(v0 + 8))(0, 0xF000000000000000);
}

uint64_t ContactLikeness.backgroundColors.getter()
{
  *(void *)(v1 + 32) = v0;
  return MEMORY[0x270FA2498](sub_20B7B0DE8, 0, 0);
}

uint64_t sub_20B7B0DE8()
{
  *(void *)(v0 + 40) = ContactLikeness.metadata.getter();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20B7B0E94;
  return MEMORY[0x270EE3D60](v0 + 16);
}

uint64_t sub_20B7B0E94()
{
  swift_task_dealloc();
  if (v0)
  {

    swift_release();
    uint64_t v1 = sub_20B7B10B0;
  }
  else
  {
    swift_release();
    uint64_t v1 = sub_20B7B0FDC;
  }
  return MEMORY[0x270FA2498](v1, 0, 0);
}

uint64_t sub_20B7B0FDC()
{
  unint64_t v1 = v0[3];
  if (v1 >> 60 == 15 || (v1 & 0xF000000000000000) == 0xB000000000000000)
  {
    id v6 = 0;
  }
  else
  {
    uint64_t v3 = v0[2];
    id v4 = objc_allocWithZone((Class)CNUIBackgroundColors);
    uint64_t v5 = (void *)sub_20B7D3478();
    id v6 = objc_msgSend(v4, sel_initWithData_, v5);
    sub_20B7B10C8(v3, v1);
  }
  char v7 = (uint64_t (*)(id))v0[1];
  return v7(v6);
}

uint64_t sub_20B7B10B0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(0);
}

uint64_t sub_20B7B10C8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 11) {
    return sub_20B7B10DC(a1, a2);
  }
  return a1;
}

uint64_t sub_20B7B10DC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_20B76C024(a1, a2);
  }
  return a1;
}

uint64_t ContactLikeness.Kind.hash(into:)()
{
  return sub_20B7D4098();
}

uint64_t ContactLikeness.Kind.hashValue.getter()
{
  return sub_20B7D40A8();
}

void *static ContactLikeness.Kind.allCases.getter()
{
  return &unk_26BFC5A50;
}

void sub_20B7B1178(void *a1@<X8>)
{
  *a1 = &unk_26BFC5A78;
}

BOOL static ContactLikeness.Kind.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_20B7B119C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL sub_20B7B11B0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 >= *a1;
}

BOOL sub_20B7B11C4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 >= *a2;
}

BOOL sub_20B7B11D8(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a2 < *a1;
}

uint64_t ContactLikeness.Kind.description.getter()
{
  uint64_t result = 0x65756F686C69732ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6172676F6E6F6D2ELL;
      break;
    case 2:
      uint64_t result = 0x497261746176612ELL;
      break;
    case 3:
      uint64_t result = 0x726574736F702ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_20B7B1290()
{
  uint64_t result = 0x65756F686C69732ELL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6172676F6E6F6D2ELL;
      break;
    case 2:
      uint64_t result = 0x497261746176612ELL;
      break;
    case 3:
      uint64_t result = 0x726574736F702ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_20B7B1334()
{
  return 0xD00000000000001BLL;
}

unint64_t sub_20B7B1350()
{
  return 0xD000000000000018;
}

uint64_t sub_20B7B136C()
{
  return sub_20B7D37E8();
}

uint64_t sub_20B7B1384()
{
  return sub_20B7AE28C();
}

uint64_t sub_20B7B138C(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = qword_26769BE48;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF40);
  swift_allocObject();
  sub_20B7D2DA8();
  *(void *)(v2 + v3) = sub_20B7D3848();
  swift_release();
  uint64_t v4 = sub_20B7D36E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  uint64_t v7 = sub_20B7D3748();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v7;
}

uint64_t sub_20B7B14DC()
{
  return swift_release();
}

uint64_t sub_20B7B14EC()
{
  sub_20B7D3738();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20B7B153C()
{
  uint64_t v0 = qword_26769BD50;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20B7B1574()
{
  uint64_t v0 = qword_26769BD60;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20B7B15AC()
{
  return sub_20B7D3928() & 1;
}

uint64_t sub_20B7B1604()
{
  return sub_20B7D37A8();
}

uint64_t sub_20B7B164C()
{
  return sub_20B7D3918() & 1;
}

uint64_t sub_20B7B16A4()
{
  sub_20B7D2DA8();
  sub_20B7D3868();
  swift_release();
  if (v2)
  {
    uint64_t v0 = type metadata accessor for ContactAvatarEntityRepresentation(0);
    MEMORY[0x2105379C0](v2, v0);
    sub_20B7D3B98();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return 0x3A73726174617661;
}

uint64_t sub_20B7B1760()
{
  return sub_20B7B16A4();
}

uint64_t sub_20B7B1784(uint64_t a1)
{
  return sub_20B7B17C0(a1);
}

uint64_t sub_20B7B17C0(uint64_t a1)
{
  uint64_t v3 = qword_26769BE60;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF20);
  swift_allocObject();
  sub_20B7D2DA8();
  *(void *)(v1 + v3) = sub_20B7D3848();
  uint64_t v4 = qword_26769BE68;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF28);
  swift_allocObject();
  *(void *)(v1 + v4) = sub_20B7D3848();
  uint64_t v5 = qword_26769BE70;
  swift_allocObject();
  *(void *)(v1 + v5) = sub_20B7D3848();
  uint64_t v6 = qword_26769BE78;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF30);
  swift_allocObject();
  *(void *)(v1 + v6) = sub_20B7D3848();
  uint64_t v7 = qword_26769BE80;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF38);
  swift_allocObject();
  *(void *)(v1 + v7) = sub_20B7D3848();
  swift_release();
  uint64_t v8 = sub_20B7D36E8();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  uint64_t v11 = sub_20B7D3748();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a1, v8);
  return v11;
}

uint64_t sub_20B7B19CC()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20B7B1A3C()
{
  sub_20B7D3738();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20B7B1ACC()
{
  return sub_20B7D36A8();
}

uint64_t sub_20B7B1AF0()
{
  return sub_20B7D36B8();
}

uint64_t sub_20B7B1B14()
{
  return sub_20B7D36D8() & 1;
}

uint64_t sub_20B7B1B3C()
{
  return sub_20B7D36C8();
}

uint64_t sub_20B7B1B60()
{
  uint64_t v0 = qword_26769BD70;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20B7B1B98()
{
  uint64_t v0 = qword_26769BD80;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_20B7B1BD0()
{
  return sub_20B7D3928() & 1;
}

uint64_t sub_20B7B1C28()
{
  return sub_20B7D37A8();
}

uint64_t sub_20B7B1C70()
{
  return sub_20B7D3728();
}

uint64_t sub_20B7B1C94()
{
  return sub_20B7D3918() & 1;
}

uint64_t sub_20B7B1CEC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_20B7D3708();
  *a1 = result;
  return result;
}

uint64_t sub_20B7B1D14()
{
  return sub_20B7D3718();
}

uint64_t sub_20B7B1D38()
{
  return sub_20B7D36F8();
}

unint64_t sub_20B7B1D5C()
{
  return sub_20B7AEA40();
}

ContactsUICore::ContactLikenessKindAppEnumRepresentation_optional __swiftcall ContactLikenessKindAppEnumRepresentation.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20B7D3F88();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t ContactLikenessKindAppEnumRepresentation.rawValue.getter()
{
  uint64_t result = 0x7465756F686C6973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6172676F6E6F6DLL;
      break;
    case 2:
      uint64_t result = 0x6D49726174617661;
      break;
    case 3:
      uint64_t result = 0x726574736F70;
      break;
    default:
      return result;
  }
  return result;
}

ContactsUICore::ContactLikenessKindAppEnumRepresentation_optional sub_20B7B1E74(Swift::String *a1)
{
  return ContactLikenessKindAppEnumRepresentation.init(rawValue:)(*a1);
}

void sub_20B7B1E80(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006574;
  uint64_t v3 = 0x7465756F686C6973;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6D6172676F6E6F6DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D49726174617661;
      a1[1] = 0xEB00000000656761;
      break;
    case 3:
      *a1 = 0x726574736F70;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20B7B1F24(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_20B7B873C(*a1, *a2);
}

uint64_t sub_20B7B1F30()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B7B2014()
{
  sub_20B7D3B58();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B7B20E0()
{
  return sub_20B7D40A8();
}

uint64_t static ContactLikenessKindAppEnumRepresentation.enumIdentifier.getter()
{
  swift_beginAccess();
  uint64_t v0 = qword_26769BD90;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t static ContactLikenessKindAppEnumRepresentation.enumIdentifier.setter(uint64_t a1, char *a2)
{
  qword_26769BD90 = a1;
  off_26769BD98 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContactLikenessKindAppEnumRepresentation.enumIdentifier.modify())()
{
  return j__swift_endAccess;
}

void *static ContactLikenessKindAppEnumRepresentation.allCases.getter()
{
  return &unk_26BFC5B20;
}

uint64_t sub_20B7B22D4()
{
  swift_beginAccess();
  uint64_t v0 = qword_26769BD90;
  swift_bridgeObjectRetain();
  return v0;
}

void sub_20B7B2328(void *a1@<X8>)
{
  *a1 = &unk_26BFC5B48;
}

uint64_t sub_20B7B2338()
{
  return sub_20B7D3768();
}

uint64_t sub_20B7B2368()
{
  return sub_20B7D3788();
}

uint64_t sub_20B7B2398()
{
  return sub_20B7D3918() & 1;
}

uint64_t sub_20B7B23DC()
{
  return sub_20B7D3778();
}

uint64_t sub_20B7B2434()
{
  return sub_20B7D3928() & 1;
}

uint64_t sub_20B7B2478(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *uint64_t v4 = v2;
  v4[1] = sub_20B7B2554;
  return v6(a1);
}

uint64_t sub_20B7B2554()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t _s14ContactsUICore15ContactLikenessV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactLikeness(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (uint64_t *)((char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v10 = (uint64_t *)((char *)&v17 - v9);
  uint64_t v11 = *(int *)(v8 + 36);
  int v12 = *(unsigned __int8 *)(a1 + v11);
  int v13 = *(unsigned __int8 *)(a2 + v11);
  sub_20B780868(a1, (uint64_t)&v17 - v9);
  sub_20B780868(a2, (uint64_t)v7);
  if (v12 == v13)
  {
    if (*v10 == *v7 && v10[1] == v7[1]) {
      char v15 = 1;
    }
    else {
      char v15 = sub_20B7D4018();
    }
  }
  else
  {
    char v15 = 0;
  }
  sub_20B7808CC((uint64_t)v10);
  sub_20B7808CC((uint64_t)v7);
  return v15 & 1;
}

unint64_t sub_20B7B275C()
{
  unint64_t result = qword_26769BDC8;
  if (!qword_26769BDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BDC8);
  }
  return result;
}

uint64_t sub_20B7B27B0()
{
  return sub_20B7B29B8(&qword_26769BDD0, &qword_26769BDD8);
}

unint64_t sub_20B7B27DC()
{
  unint64_t result = qword_26769BDE0;
  if (!qword_26769BDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BDE0);
  }
  return result;
}

unint64_t sub_20B7B2834()
{
  unint64_t result = qword_26769BDE8;
  if (!qword_26769BDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BDE8);
  }
  return result;
}

unint64_t sub_20B7B288C()
{
  unint64_t result = qword_26769BDF0;
  if (!qword_26769BDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BDF0);
  }
  return result;
}

unint64_t sub_20B7B28E4()
{
  unint64_t result = qword_26769BDF8;
  if (!qword_26769BDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BDF8);
  }
  return result;
}

unint64_t sub_20B7B293C()
{
  unint64_t result = qword_26769BE00;
  if (!qword_26769BE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BE00);
  }
  return result;
}

uint64_t sub_20B7B2990()
{
  return sub_20B7B29B8(&qword_26769BE08, &qword_26769BE10);
}

uint64_t sub_20B7B29B8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_20B7B2A0C()
{
  unint64_t result = qword_26769BE18;
  if (!qword_26769BE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BE18);
  }
  return result;
}

unint64_t sub_20B7B2A64()
{
  unint64_t result = qword_26769BE20;
  if (!qword_26769BE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BE20);
  }
  return result;
}

unint64_t sub_20B7B2ABC()
{
  unint64_t result = qword_26769BE28;
  if (!qword_26769BE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BE28);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ContactLikeness(void *a1, char *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *(void *)a2;
    *a1 = *(void *)a2;
    uint64_t v4 = (void *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = *((void *)a2 + 1);
    *a1 = *(void *)a2;
    a1[1] = v7;
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = &a2[v8];
    uint64_t v11 = sub_20B7D3908();
    uint64_t v12 = *(void *)(v11 - 8);
    int v13 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    swift_bridgeObjectRetain();
    v13(v9, v10, v11);
    uint64_t v14 = a3[6];
    char v15 = (char *)v4 + v14;
    char v16 = &a2[v14];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(&a2[v14], 1, v11))
    {
      uint64_t v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
      memcpy(v15, v16, *(void *)(*(void *)(v17 - 8) + 64));
    }
    else
    {
      v13(v15, v16, v11);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(v15, 0, 1, v11);
    }
    uint64_t v19 = a3[8];
    *((unsigned char *)v4 + a3[7]) = a2[a3[7]];
    *((unsigned char *)v4 + v19) = a2[v19];
    uint64_t v20 = a3[10];
    *(void *)((char *)v4 + a3[9]) = *(void *)&a2[a3[9]];
    *(void *)((char *)v4 + v20) = *(void *)&a2[v20];
    sub_20B7D2DA8();
  }
  sub_20B7D2DA8();
  return v4;
}

uint64_t destroy for ContactLikeness(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + *(int *)(a2 + 20);
  uint64_t v5 = sub_20B7D3908();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
  v7(v4, v5);
  uint64_t v8 = a1 + *(int *)(a2 + 24);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5)) {
    v7(v8, v5);
  }
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ContactLikeness(void *a1, char *a2, int *a3)
{
  uint64_t v6 = *((void *)a2 + 1);
  *a1 = *(void *)a2;
  a1[1] = v6;
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = &a2[v7];
  uint64_t v10 = sub_20B7D3908();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a1 + v13;
  char v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(&a2[v13], 1, v10))
  {
    uint64_t v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
    memcpy(v14, v15, *(void *)(*(void *)(v16 - 8) + 64));
  }
  else
  {
    v12(v14, v15, v10);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v14, 0, 1, v10);
  }
  uint64_t v17 = a3[8];
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  *((unsigned char *)a1 + v17) = a2[v17];
  uint64_t v18 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  *(void *)((char *)a1 + v1_Block_object_dispose(&a9, 8) = *(void *)&a2[v18];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for ContactLikeness(void *a1, void *a2, int *a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_20B7D3908();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a2 + v12;
  uint64_t v14 = *(uint64_t (**)(void))(v10 + 48);
  uint64_t v19 = a3;
  uint64_t v20 = (char *)a1 + v12;
  LODWORD(a3) = v14();
  int v15 = ((uint64_t (*)(char *, uint64_t, uint64_t))v14)(v13, 1, v9);
  if (a3)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v20, v13, v9);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v20, 0, 1, v9);
      goto LABEL_9;
    }
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8) + 64);
    uint64_t v17 = v20;
  }
  else
  {
    if (!v15)
    {
      v11(v20, v13, v9);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v20, v9);
    size_t v16 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8) + 64);
    uint64_t v17 = v20;
  }
  memcpy(v17, v13, v16);
LABEL_9:
  *((unsigned char *)a1 + v19[7]) = *((unsigned char *)a2 + v19[7]);
  *((unsigned char *)a1 + v19[8]) = *((unsigned char *)a2 + v19[8]);
  *(void *)((char *)a1 + v19[9]) = *(void *)((char *)a2 + v19[9]);
  sub_20B7D2DA8();
  swift_release();
  *(void *)((char *)a1 + v19[10]) = *(void *)((char *)a2 + v19[10]);
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

_OWORD *initializeWithTake for ContactLikeness(_OWORD *a1, char *a2, int *a3)
{
  *a1 = *(_OWORD *)a2;
  uint64_t v6 = a3[5];
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = &a2[v6];
  uint64_t v9 = sub_20B7D3908();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void (**)(char *, char *, uint64_t))(v10 + 32);
  v11(v7, v8, v9);
  uint64_t v12 = a3[6];
  uint64_t v13 = (char *)a1 + v12;
  uint64_t v14 = &a2[v12];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(&a2[v12], 1, v9))
  {
    uint64_t v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
    memcpy(v13, v14, *(void *)(*(void *)(v15 - 8) + 64));
  }
  else
  {
    v11(v13, v14, v9);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(v13, 0, 1, v9);
  }
  uint64_t v16 = a3[8];
  *((unsigned char *)a1 + a3[7]) = a2[a3[7]];
  *((unsigned char *)a1 + v16) = a2[v16];
  uint64_t v17 = a3[10];
  *(void *)((char *)a1 + a3[9]) = *(void *)&a2[a3[9]];
  *(void *)((char *)a1 + v17) = *(void *)&a2[v17];
  return a1;
}

void *assignWithTake for ContactLikeness(void *a1, void *a2, int *a3)
{
  uint64_t v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[5];
  uint64_t v8 = (char *)a1 + v7;
  uint64_t v9 = (char *)a2 + v7;
  uint64_t v10 = sub_20B7D3908();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  uint64_t v13 = a3[6];
  uint64_t v14 = (char *)a2 + v13;
  uint64_t v15 = *(uint64_t (**)(void))(v11 + 48);
  uint64_t v21 = a3;
  unint64_t v22 = (char *)a1 + v13;
  LODWORD(a3) = v15();
  int v16 = ((uint64_t (*)(char *, uint64_t, uint64_t))v15)(v14, 1, v10);
  if (a3)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v22, v14, v10);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
      goto LABEL_9;
    }
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8) + 64);
    uint64_t v18 = v22;
  }
  else
  {
    if (!v16)
    {
      v12(v22, v14, v10);
      goto LABEL_9;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v22, v10);
    size_t v17 = *(void *)(*(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8) + 64);
    uint64_t v18 = v22;
  }
  memcpy(v18, v14, v17);
LABEL_9:
  uint64_t v19 = v21[8];
  *((unsigned char *)a1 + v21[7]) = *((unsigned char *)a2 + v21[7]);
  *((unsigned char *)a1 + v19) = *((unsigned char *)a2 + v19);
  *(void *)((char *)a1 + v21[9]) = *(void *)((char *)a2 + v21[9]);
  swift_release();
  *(void *)((char *)a1 + v21[10]) = *(void *)((char *)a2 + v21[10]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactLikeness(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20B7B357C);
}

uint64_t sub_20B7B357C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_20B7D3908();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a2)
    {
      uint64_t v10 = v8;
      uint64_t v11 = a1 + *(int *)(a3 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
      return v12(v11, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
      uint64_t v15 = v13;
      uint64_t v16 = a1 + *(int *)(a3 + 24);
      return v14(v16, a2, v15);
    }
  }
}

uint64_t storeEnumTagSinglePayload for ContactLikeness(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20B7B36C0);
}

uint64_t sub_20B7B36C0(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
  }
  else
  {
    uint64_t v8 = sub_20B7D3908();
    uint64_t v9 = *(void *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      uint64_t v10 = v8;
      uint64_t v11 = v5 + *(int *)(a4 + 20);
      uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
      return v12(v11, a2, a2, v10);
    }
    else
    {
      uint64_t v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
      uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
      uint64_t v15 = v13;
      uint64_t v16 = v5 + *(int *)(a4 + 24);
      return v14(v16, a2, a2, v15);
    }
  }
  return result;
}

void sub_20B7B37F0()
{
  sub_20B7D3908();
  if (v0 <= 0x3F)
  {
    sub_20B7B38E4();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_20B7B38E4()
{
  if (!qword_26769BE40)
  {
    sub_20B7D3908();
    unint64_t v0 = sub_20B7D3D78();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26769BE40);
    }
  }
}

ValueMetadata *type metadata accessor for ContactLikeness.Kind()
{
  return &type metadata for ContactLikeness.Kind;
}

uint64_t type metadata accessor for ContactAvatarFetchResultEntityRepresentation(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769BE50);
}

uint64_t sub_20B7B3974()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20B7B39C4()
{
  return type metadata accessor for ContactAvatarFetchResultEntityRepresentation(0);
}

uint64_t type metadata accessor for ContactAvatarEntityRepresentation(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769BE88);
}

uint64_t sub_20B7B39EC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_20B7B3A44()
{
  return type metadata accessor for ContactAvatarEntityRepresentation(0);
}

uint64_t getEnumTagSinglePayload for ContactLikenessKindAppEnum(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s14ContactsUICore15ContactLikenessV4KindOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B7B3BA8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLikenessKindAppEnumRepresentation()
{
  return &type metadata for ContactLikenessKindAppEnumRepresentation;
}

uint64_t sub_20B7B3BE0()
{
  return sub_20B7B3C70(&qword_26769BE98, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3C28()
{
  return sub_20B7B3C70(&qword_26769BEA0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3C70(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B7B3CB8()
{
  return sub_20B7B3C70(&qword_26769BEA8, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3D00()
{
  return sub_20B7B3C70(&qword_26769BEB0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3D48()
{
  return sub_20B7B3C70(&qword_26769BEB8, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3D90()
{
  return sub_20B7B3C70(&qword_26769BEC0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3DD8()
{
  return sub_20B7B3C70(&qword_26769BEC8, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3E20()
{
  return sub_20B7B3C70(&qword_26769BED0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3E68()
{
  return sub_20B7B3C70(&qword_26769BED8, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntityRepresentation);
}

uint64_t sub_20B7B3EB0()
{
  return sub_20B7B3C70(&qword_26769BEE0, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B3EF8()
{
  return sub_20B7B3C70(&qword_26769BEE8, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B3F40()
{
  return sub_20B7B3C70((unint64_t *)&qword_26769B580, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B3F88()
{
  return sub_20B7B3C70(&qword_26769BEF0, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B3FD0()
{
  return sub_20B7B3C70(&qword_26769BEF8, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B4018()
{
  return sub_20B7B3C70(&qword_26769BF00, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B4060()
{
  return sub_20B7B3C70(&qword_26769BF08, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B40A8()
{
  return sub_20B7B3C70(&qword_26769BF10, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

uint64_t sub_20B7B40F0()
{
  return sub_20B7B3C70(&qword_26769BF18, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntityRepresentation);
}

unint64_t sub_20B7B4138()
{
  unint64_t result = qword_26769BF48;
  if (!qword_26769BF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BF48);
  }
  return result;
}

uint64_t sub_20B7B418C()
{
  uint64_t v1 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = *(void *)(v1 + 64);
  swift_unknownObjectRelease();
  uint64_t v5 = sub_20B7D3908();
  uint64_t v6 = *(void *)(v5 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v0 + v3, 1, v5)) {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v3, v5);
  }
  swift_release();
  return MEMORY[0x270FA0238](v0, ((v4 + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 16, v2 | 7);
}

uint64_t sub_20B7B42D4()
{
  uint64_t v2 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0) - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  unint64_t v4 = (*(void *)(v2 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = v0 + v3;
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v0 + v4);
  *(void *)(v1 + 16) = v6;
  *(void *)uint64_t v6 = v1;
  *(void *)(v6 + _Block_object_dispose(&a9, 8) = sub_20B796B4C;
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 32) = v5;
  return MEMORY[0x270FA2498](sub_20B7B03D8, 0, 0);
}

uint64_t sub_20B7B43F4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B7B442C(uint64_t a1)
{
  unint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_20B775290;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26769BF68 + dword_26769BF68);
  return v6(a1, v4);
}

unint64_t sub_20B7B44E4()
{
  unint64_t result = qword_26769BF78;
  if (!qword_26769BF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BF78);
  }
  return result;
}

unint64_t sub_20B7B4538()
{
  unint64_t result = qword_26769BF80;
  if (!qword_26769BF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26769BF80);
  }
  return result;
}

uint64_t sub_20B7B458C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_20B773108(a1, a2);
  }
  return a1;
}

uint64_t sub_20B7B45A0(uint64_t a1, uint64_t a2, char a3)
{
  unint64_t v4 = *(uint64_t (**)(void *))(v3 + 16);
  v6[0] = a1;
  v6[1] = a2;
  char v7 = a3 & 1;
  return v4(v6);
}

uint64_t sub_20B7B45E0()
{
  uint64_t v1 = sub_20B7D3908();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  return MEMORY[0x270FA0238](v0, v6, v5);
}

uint64_t sub_20B7B46CC()
{
  uint64_t v2 = *(void *)(sub_20B7D3908() - 8);
  unint64_t v3 = (*(void *)(v2 + 64)
      + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))
      + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + v3);
  *(void *)(v1 + 16) = v4;
  *(void *)uint64_t v4 = v1;
  *(void *)(v4 + _Block_object_dispose(&a9, 8) = sub_20B775290;
  *(_OWORD *)(v4 + 16) = v5;
  unint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v4 + 32) = v6;
  void *v6 = v4;
  v6[1] = sub_20B7AF8F8;
  return MEMORY[0x270F0CB80]();
}

ValueMetadata *type metadata accessor for FetchContactAvatarIntentRepresentation()
{
  return &type metadata for FetchContactAvatarIntentRepresentation;
}

uint64_t CNContact.contactEntityIdentifier.getter()
{
  id v1 = objc_msgSend(v0, sel_identifier);
  uint64_t v2 = sub_20B7D3B08();

  return v2;
}

uint64_t static ViewContactCardIntent.openAppWhenRun.getter()
{
  return 1;
}

uint64_t static ViewContactCardIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t sub_20B7B48C8()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769BF98);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BF98);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static ViewContactCardIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AFF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769BF98);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B7B4B4C()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769BFB0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BFB0);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static ViewContactCardIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AFF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769BFB0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static ViewContactCardIntent.description.setter(uint64_t a1)
{
  if (qword_26769AFF8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769BFB0);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static ViewContactCardIntent.description.modify())()
{
  if (qword_26769AFF8 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769BFB0);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ViewContactCardIntent.target.getter()
{
  return sub_20B7D2CB8();
}

double sub_20B7B50A0@<D0>(uint64_t a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(void *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = v10;
  return result;
}

uint64_t sub_20B7B5174(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CC8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t ViewContactCardIntent.target.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*ViewContactCardIntent.target.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t ViewContactCardIntent.$target.getter()
{
  return sub_20B7D2CD8();
}

uint64_t ViewContactCardIntent.highlightedValue.getter()
{
  return sub_20B7D2CB8();
}

double sub_20B7B53C8@<D0>(uint64_t a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v5;
  return result;
}

uint64_t sub_20B7B5474(uint64_t *a1)
{
  return swift_release();
}

uint64_t ViewContactCardIntent.highlightedValue.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*ViewContactCardIntent.highlightedValue.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t ViewContactCardIntent.$highlightedValue.getter()
{
  return sub_20B7D2CD8();
}

uint64_t ViewContactCardIntent.highlightedPropertyType.getter()
{
  return sub_20B7D2CB8();
}

uint64_t sub_20B7B5614@<X0>(unsigned char *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7B56B8()
{
  return swift_release();
}

uint64_t ViewContactCardIntent.highlightedPropertyType.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*ViewContactCardIntent.highlightedPropertyType.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t ViewContactCardIntent.$highlightedPropertyType.getter()
{
  return sub_20B7D2CD8();
}

uint64_t ViewContactCardIntent.shouldEdit.getter()
{
  sub_20B7D2CB8();
  return v1;
}

uint64_t sub_20B7B5844@<X0>(unsigned char *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7B58E8()
{
  return swift_release();
}

uint64_t ViewContactCardIntent.shouldEdit.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*ViewContactCardIntent.shouldEdit.modify(void *a1))()
{
  id v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t ViewContactCardIntent.$shouldEdit.getter()
{
  return sub_20B7D2CD8();
}

uint64_t ViewContactCardIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v95 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v132, "entityProvider");
  v132[15] = -18;
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v94 = sub_20B7D29D8();
  uint64_t v97 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26769BFC8);
  uint64_t v120 = sub_20B7D33C8();
  uint64_t v122 = *(void *)(v120 - 8);
  uint64_t v107 = *(void *)(v122 + 64);
  MEMORY[0x270FA5388](v120);
  unint64_t v108 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v93 = (char *)&v90 - v108;
  uint64_t v2 = sub_20B7D3AE8();
  uint64_t v123 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v124 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D2DA8();
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v98 = v5;
  unint64_t v106 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v6 = sub_20B7D33B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v99 = v8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v121 = *MEMORY[0x263F06D10];
  long long v10 = *(void (**)(char *))(v7 + 104);
  uint64_t v100 = v6;
  v10((char *)&v90 - v9);
  uint64_t v118 = v7 + 104;
  uint64_t v119 = v10;
  sub_20B7D33D8();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v116 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v117 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (char *)&v90 - v117;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_20B7D3538();
  MEMORY[0x270FA5388](v16);
  uint64_t v17 = v121;
  ((void (*)(char *, void, uint64_t))v10)((char *)&v90 - v9, v121, v6);
  sub_20B7D33D8();
  uint64_t v18 = *(uint64_t (**)(char *, void, uint64_t, uint64_t))(v122 + 56);
  v122 += 56;
  uint64_t v115 = v18;
  v18(v14, 0, 1, v120);
  uint64_t v131 = 0;
  long long v129 = 0u;
  long long v130 = 0u;
  long long v127 = 0u;
  long long v128 = 0u;
  long long v125 = 0u;
  long long v126 = 0u;
  uint64_t v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  uint64_t v20 = *(void *)(*(void *)(v19 - 8) + 64);
  MEMORY[0x270FA5388](v19 - 8);
  uint64_t v103 = v20;
  unint64_t v104 = (v20 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v21 = sub_20B7D2B18();
  uint64_t v22 = *(void *)(v21 - 8);
  unint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56);
  uint64_t v24 = v22 + 56;
  uint64_t v101 = v21;
  uint64_t v25 = v23((char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v21);
  uint64_t v102 = v24;
  uint64_t v105 = v23;
  MEMORY[0x270FA5388](v25);
  v26((char *)&v90 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v21);
  uint64_t v112 = sub_20B7D2FD8();
  uint64_t v114 = *(void *)(*(void *)(v112 - 8) + 64);
  MEMORY[0x270FA5388](v112);
  unint64_t v109 = (v27 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v110 = *MEMORY[0x263EFBDC0];
  os_log_type_t v29 = *(void (**)(void))(v28 + 104);
  uint64_t v111 = v28 + 104;
  uint64_t v113 = (void (*)(char *, void, uint64_t))v29;
  v29((char *)&v90 - v109);
  sub_20B7969C8();
  uint64_t v93 = (char *)sub_20B7D2D08();
  uint64_t v92 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BFD0);
  uint64_t v30 = MEMORY[0x270FA5388](v92);
  uint64_t v97 = (char *)&v90 - v108;
  MEMORY[0x270FA5388](v30);
  sub_20B7D2DA8();
  uint64_t v31 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v31);
  uint64_t v32 = sub_20B7D3538();
  MEMORY[0x270FA5388](v32);
  unint64_t v33 = v9;
  unint64_t v96 = v9;
  unint64_t v34 = (char *)&v90 - v9;
  uint64_t v35 = v17;
  uint64_t v36 = v100;
  uint64_t v37 = v119;
  ((void (*)(char *, uint64_t, uint64_t))v119)(v34, v35, v100);
  uint64_t v38 = sub_20B7D33D8();
  uint64_t v39 = MEMORY[0x270FA5388](v38);
  uint64_t v40 = (char *)&v90 - v117;
  MEMORY[0x270FA5388](v39);
  uint64_t v41 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v41);
  uint64_t v42 = sub_20B7D3538();
  MEMORY[0x270FA5388](v42);
  ((void (*)(char *, void, uint64_t))v37)((char *)&v90 - v33, v121, v36);
  sub_20B7D33D8();
  uint64_t v43 = v115(v40, 0, 1, v120);
  MEMORY[0x270FA5388](v43);
  unint64_t v44 = v104;
  LOBYTE(v127) = 0;
  long long v125 = 0u;
  long long v126 = 0u;
  uint64_t v45 = v101;
  uint64_t v46 = v105;
  uint64_t v47 = v105((char *)&v90 - v104, 1, 1, v101);
  MEMORY[0x270FA5388](v47);
  uint64_t v48 = v46((char *)&v90 - v44, 1, 1, v45);
  MEMORY[0x270FA5388](v48);
  v113((char *)&v90 - v109, v110, v112);
  sub_20B7B6DB0();
  uint64_t v92 = sub_20B7D2D08();
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BFE0);
  uint64_t v49 = MEMORY[0x270FA5388](v91);
  uint64_t v97 = (char *)&v90 - v108;
  MEMORY[0x270FA5388](v49);
  sub_20B7D2DA8();
  uint64_t v50 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = sub_20B7D3538();
  MEMORY[0x270FA5388](v51);
  unint64_t v52 = v96;
  uint64_t v53 = v121;
  uint64_t v54 = v100;
  ((void (*)(char *, void, uint64_t))v119)((char *)&v90 - v96, v121, v100);
  uint64_t v55 = sub_20B7D33D8();
  uint64_t v56 = MEMORY[0x270FA5388](v55);
  uint64_t v57 = (char *)&v90 - v117;
  MEMORY[0x270FA5388](v56);
  uint64_t v58 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v58);
  uint64_t v59 = sub_20B7D3538();
  MEMORY[0x270FA5388](v59);
  ((void (*)(char *, uint64_t, uint64_t))v119)((char *)&v90 - v52, v53, v54);
  sub_20B7D33D8();
  uint64_t v60 = v115(v57, 0, 1, v120);
  LOBYTE(v125) = 7;
  MEMORY[0x270FA5388](v60);
  unint64_t v61 = v104;
  uint64_t v62 = v101;
  uint64_t v63 = v105;
  uint64_t v64 = v105((char *)&v90 - v104, 1, 1, v101);
  MEMORY[0x270FA5388](v64);
  uint64_t v65 = v63((char *)&v90 - v61, 1, 1, v62);
  MEMORY[0x270FA5388](v65);
  v113((char *)&v90 - v109, v110, v112);
  sub_20B7A3940();
  uint64_t v97 = (char *)sub_20B7D2CF8();
  uint64_t v91 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BFE8);
  uint64_t v66 = MEMORY[0x270FA5388](v91);
  MEMORY[0x270FA5388](v66);
  sub_20B7D2DA8();
  uint64_t v67 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v67);
  uint64_t v68 = sub_20B7D3538();
  MEMORY[0x270FA5388](v68);
  uint64_t v69 = (char *)&v90 - v52;
  uint64_t v70 = v100;
  id v71 = v119;
  ((void (*)(char *, void, uint64_t))v119)(v69, v121, v100);
  uint64_t v72 = sub_20B7D33D8();
  uint64_t v73 = MEMORY[0x270FA5388](v72);
  id v74 = (char *)&v90 - v117;
  MEMORY[0x270FA5388](v73);
  uint64_t v75 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v75);
  uint64_t v76 = sub_20B7D3538();
  MEMORY[0x270FA5388](v76);
  ((void (*)(char *, void, uint64_t))v71)((char *)&v90 - v96, v121, v70);
  sub_20B7D33D8();
  v115(v74, 0, 1, v120);
  LOBYTE(v125) = 2;
  uint64_t v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BFF0);
  MEMORY[0x270FA5388](v77 - 8);
  unint64_t v79 = (char *)&v90 - ((v78 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_20B7D3C98();
  uint64_t v81 = (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v79, 1, 1, v80);
  MEMORY[0x270FA5388](v81);
  uint64_t v82 = v105((char *)&v90 - v104, 1, 1, v101);
  MEMORY[0x270FA5388](v82);
  v113((char *)&v90 - v109, v110, v112);
  uint64_t v83 = sub_20B7D2D58();
  uint64_t v84 = v94;
  sub_20B7D2DA8();
  uint64_t v85 = v93;
  sub_20B7D2DA8();
  uint64_t v86 = v92;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  swift_release();
  swift_release();
  swift_release();
  LOBYTE(v125) = 0;
  sub_20B7D2CC8();
  swift_release();
  uint64_t v87 = v97;
  swift_release();
  swift_release();
  swift_release();
  uint64_t result = swift_release();
  uint64_t v89 = v95;
  *unint64_t v95 = v84;
  v89[1] = (uint64_t)v85;
  v89[2] = v86;
  v89[3] = (uint64_t)v87;
  v89[4] = v83;
  return result;
}

unint64_t sub_20B7B6DB0()
{
  unint64_t result = qword_26769BFD8;
  if (!qword_26769BFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769BFD8);
  }
  return result;
}

uint64_t ViewContactCardIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 24_Block_object_dispose(&a9, 8) = a1;
  long long v3 = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(v2 + 256) = *(_OWORD *)v1;
  *(_OWORD *)(v2 + 272) = v3;
  *(void *)(v2 + 28_Block_object_dispose(&a9, 8) = *(void *)(v1 + 32);
  sub_20B7D3CC8();
  *(void *)(v2 + 296) = sub_20B7D3CB8();
  uint64_t v5 = sub_20B7D3CA8();
  *(void *)(v2 + 304) = v5;
  *(void *)(v2 + 312) = v4;
  return MEMORY[0x270FA2498](sub_20B7B6EAC, v5, v4);
}

uint64_t sub_20B7B6EAC()
{
  uint64_t v1 = sub_20B7D3198();
  *(void *)(v0 + 320) = v1;
  uint64_t v15 = *(void *)(v1 - 8);
  uint64_t v16 = v1;
  *(void *)(v0 + 32_Block_object_dispose(&a9, 8) = v15;
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 336) = v2;
  sub_20B7D3188();
  sub_20B7D3178();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  if (*(unsigned char *)(v0 + 384)) {
    uint64_t v3 = 1953064037;
  }
  else {
    uint64_t v3 = 2003789939;
  }
  MEMORY[0x210536EE0](v3, 0xE400000000000000);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769C000);
  sub_20B7D3138();
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_20B7DB980;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v4 = *(void **)(v0 + 152);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  sub_20B7D3128();
  swift_bridgeObjectRelease();
  sub_20B7D3148();
  uint64_t v5 = sub_20B7D3458();
  *(void *)(v0 + 344) = v5;
  uint64_t v6 = *(void *)(v5 - 8);
  *(void *)(v0 + 352) = v6;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v0 + 360) = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  uint64_t v8 = swift_task_alloc();
  sub_20B7D3158();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5) == 1)
  {
    swift_release();
    sub_20B7B766C(v8);
    swift_task_dealloc();
    swift_task_dealloc();
    sub_20B7D2BB8();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v2, v16);
    swift_task_dealloc();
    unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(v7, v8, v5);
    swift_task_dealloc();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D29B8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v11 = *(void **)(*(void *)(v0 + 240) + 40);
    *(void *)(v0 + 36_Block_object_dispose(&a9, 8) = v11;
    id v12 = v11;
    swift_release();
    uint64_t v13 = sub_20B7D3418();
    *(void *)(v0 + 376) = v13;
    *(void *)(v0 + 16) = v0;
    *(void *)(v0 + 56) = v0 + 224;
    *(void *)(v0 + 24) = sub_20B7B7474;
    uint64_t v14 = swift_continuation_init();
    *(void *)(v0 + 184) = MEMORY[0x263EF8330];
    *(void *)(v0 + 192) = 0x40000000;
    *(void *)(v0 + 200) = sub_20B7B76CC;
    *(void *)(v0 + 20_Block_object_dispose(&a9, 8) = &block_descriptor;
    *(void *)(v0 + 216) = v14;
    objc_msgSend(v12, sel_openSensitiveURLInBackground_withOptions_completionHandler_, v13, 0);
    return MEMORY[0x270FA23F0](v0 + 16);
  }
}

uint64_t sub_20B7B7474()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 312);
  uint64_t v2 = *(void *)(*(void *)v0 + 304);
  return MEMORY[0x270FA2498](sub_20B7B757C, v2, v1);
}

uint64_t sub_20B7B757C()
{
  uint64_t v2 = *(void **)(v0 + 368);
  uint64_t v1 = *(void **)(v0 + 376);
  uint64_t v4 = *(void *)(v0 + 352);
  uint64_t v3 = *(void *)(v0 + 360);
  uint64_t v6 = *(void *)(v0 + 336);
  uint64_t v5 = *(void *)(v0 + 344);
  uint64_t v7 = *(void *)(v0 + 320);
  uint64_t v8 = *(void *)(v0 + 328);
  swift_release();

  sub_20B7D2BB8();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v6, v7);
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_20B7B766C(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B368);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B7B76CC(uint64_t a1, char a2, void *a3)
{
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void *)(*(void *)(v3 + 64) + 40);
  *(unsigned char *)uint64_t v4 = a2;
  *(void *)(v4 + _Block_object_dispose(&a9, 8) = a3;
  id v5 = a3;
  return MEMORY[0x270FA2400](v3);
}

uint64_t sub_20B7B7724()
{
  return sub_20B7D2CC8();
}

uint64_t sub_20B7B778C@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769AFF0 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769BF98);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B7B7834(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return ViewContactCardIntent.perform()(a1);
}

uint64_t sub_20B7B78D0()
{
  return sub_20B7D2A98();
}

void __swiftcall ViewContactCardIntent.HighlightedDetail.init()(ContactsUICore::ViewContactCardIntent::HighlightedDetail *__return_ptr retstr)
{
  retstr->label._countAndFlagsBits = 0;
  retstr->label._object = (void *)0xE000000000000000;
  retstr->value._countAndFlagsBits = 0;
  retstr->value._object = (void *)0xE000000000000000;
  retstr->propertyType = ContactsUICore_ContactEntity_PropertyType_custom;
}

uint64_t static ViewContactCardIntent.HighlightedDetail.typeDisplayRepresentation.getter()
{
  uint64_t v0 = sub_20B7D33C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3A88();
  uint64_t v3 = sub_20B7D3548();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3538();
  uint64_t v4 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v0);
  return sub_20B7D3028();
}

uint64_t ViewContactCardIntent.HighlightedDetail.displayRepresentation.getter()
{
  return sub_20B7D2F38();
}

unint64_t sub_20B7B7C48()
{
  unint64_t result = qword_26769C008;
  if (!qword_26769C008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C008);
  }
  return result;
}

unint64_t sub_20B7B7CA0()
{
  unint64_t result = qword_26769C010;
  if (!qword_26769C010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C010);
  }
  return result;
}

unint64_t sub_20B7B7CF8()
{
  unint64_t result = qword_26769C018;
  if (!qword_26769C018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C018);
  }
  return result;
}

unint64_t sub_20B7B7D50()
{
  unint64_t result = qword_26769C020;
  if (!qword_26769C020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C020);
  }
  return result;
}

uint64_t sub_20B7B7DA4()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7B7DC0()
{
  return swift_getOpaqueTypeConformance2();
}

void sub_20B7B7E08(uint64_t a1@<X8>)
{
  *(void *)a1 = 0;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = 0xE000000000000000;
  *(void *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = 0xE000000000000000;
  *(unsigned char *)(a1 + 32) = 6;
}

unint64_t sub_20B7B7E24()
{
  unint64_t result = qword_26769C030;
  if (!qword_26769C030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C030);
  }
  return result;
}

unint64_t sub_20B7B7E7C()
{
  unint64_t result = qword_26769C038;
  if (!qword_26769C038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C038);
  }
  return result;
}

unint64_t sub_20B7B7ED4()
{
  unint64_t result = qword_26769C040;
  if (!qword_26769C040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C040);
  }
  return result;
}

uint64_t sub_20B7B7F28()
{
  return sub_20B78EC20(&qword_26769C048, &qword_26769C050);
}

uint64_t sub_20B7B7F58()
{
  return sub_20B7D2998();
}

unint64_t sub_20B7B7F9C()
{
  unint64_t result = qword_26769C058;
  if (!qword_26769C058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C058);
  }
  return result;
}

unint64_t sub_20B7B7FF4()
{
  unint64_t result = qword_26769C060;
  if (!qword_26769C060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C060);
  }
  return result;
}

unint64_t sub_20B7B804C()
{
  unint64_t result = qword_26769C068;
  if (!qword_26769C068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C068);
  }
  return result;
}

unint64_t sub_20B7B80A4()
{
  unint64_t result = qword_26769C070;
  if (!qword_26769C070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C070);
  }
  return result;
}

uint64_t sub_20B7B80F8()
{
  return sub_20B7D29A8();
}

uint64_t sub_20B7B813C()
{
  return sub_20B78EC20(&qword_26769C078, &qword_26769C080);
}

uint64_t sub_20B7B816C()
{
  return sub_20B7D2A28();
}

unint64_t sub_20B7B81B0()
{
  unint64_t result = qword_26769C088;
  if (!qword_26769C088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C088);
  }
  return result;
}

uint64_t sub_20B7B8204()
{
  return sub_20B7D2F38();
}

uint64_t sub_20B7B8280()
{
  return sub_20B7D3058();
}

uint64_t destroy for ViewContactCardIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for ViewContactCardIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for ViewContactCardIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  a1[2] = a2[2];
  sub_20B7D2DA8();
  swift_release();
  a1[3] = a2[3];
  sub_20B7D2DA8();
  swift_release();
  a1[4] = a2[4];
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

uint64_t assignWithTake for ViewContactCardIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ViewContactCardIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ViewContactCardIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ViewContactCardIntent()
{
  return &type metadata for ViewContactCardIntent;
}

uint64_t initializeWithCopy for ViewContactCardIntent.HighlightedDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ViewContactCardIntent.HighlightedDetail(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ViewContactCardIntent.HighlightedDetail(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + _Block_object_dispose(&a9, 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

ValueMetadata *type metadata accessor for ViewContactCardIntent.HighlightedDetail()
{
  return &type metadata for ViewContactCardIntent.HighlightedDetail;
}

uint64_t sub_20B7B8674()
{
  return sub_20B78EC20((unint64_t *)&qword_26769BCB0, &qword_26769B438);
}

uint64_t sub_20B7B86A4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_20B7B86E8()
{
  unint64_t result = qword_26769C090;
  if (!qword_26769C090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C090);
  }
  return result;
}

uint64_t sub_20B7B8740(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEA00000000006574;
  uint64_t v3 = 0x7465756F686C6973;
  uint64_t v4 = a1;
  uint64_t v5 = 0x7465756F686C6973;
  unint64_t v6 = 0xEA00000000006574;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x6D6172676F6E6F6DLL;
      break;
    case 2:
      uint64_t v5 = 0x6D49726174617661;
      unint64_t v6 = 0xEB00000000656761;
      break;
    case 3:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x726574736F70;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x6D6172676F6E6F6DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6D49726174617661;
      unint64_t v2 = 0xEB00000000656761;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xE600000000000000;
      if (v5 == 0x726574736F70) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_20B7D4018();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20B7B88E0(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000726562;
  uint64_t v3 = 0x6D754E656E6F6870;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6D754E656E6F6870;
  unint64_t v6 = 0xEB00000000726562;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 0x6464416C69616D65;
      unint64_t v6 = 0xEC00000073736572;
      break;
    case 2:
      uint64_t v5 = 0x64416C6174736F70;
      unint64_t v6 = 0xED00007373657264;
      break;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x7961646874726962;
      break;
    case 4:
      uint64_t v5 = 0x52746361746E6F63;
      unint64_t v6 = 0xEF6E6F6974616C65;
      break;
    case 5:
      unint64_t v6 = 0xE400000000000000;
      uint64_t v5 = 1702129518;
      break;
    case 6:
      unint64_t v6 = 0xE600000000000000;
      uint64_t v5 = 0x6D6F74737563;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000073736572;
      if (v5 == 0x6464416C69616D65) {
        goto LABEL_19;
      }
      goto LABEL_22;
    case 2:
      unint64_t v2 = 0xED00007373657264;
      if (v5 != 0x64416C6174736F70) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 3:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x7961646874726962) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 4:
      unint64_t v2 = 0xEF6E6F6974616C65;
      if (v5 != 0x52746361746E6F63) {
        goto LABEL_22;
      }
      goto LABEL_19;
    case 5:
      unint64_t v2 = 0xE400000000000000;
      uint64_t v3 = 1702129518;
      goto LABEL_18;
    case 6:
      unint64_t v2 = 0xE600000000000000;
      if (v5 != 0x6D6F74737563) {
        goto LABEL_22;
      }
      goto LABEL_19;
    default:
LABEL_18:
      if (v5 != v3) {
        goto LABEL_22;
      }
LABEL_19:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_22:
      }
        char v7 = sub_20B7D4018();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_20B7B8B64()
{
  uint64_t v0 = sub_20B7D39F8();
  __swift_allocate_value_buffer(v0, qword_26769C0A0);
  uint64_t v1 = __swift_project_value_buffer(v0, (uint64_t)qword_26769C0A0);
  if (qword_26769AF18 != -1) {
    swift_once();
  }
  uint64_t v2 = __swift_project_value_buffer(v0, (uint64_t)qword_2676A3C70);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v0 - 8) + 16);
  return v3(v1, v2, v0);
}

uint64_t static FetchContactAvatarIntent.openAppWhenRun.getter()
{
  return 0;
}

uint64_t static FetchContactAvatarIntent.isDiscoverable.getter()
{
  return byte_26769C0B8;
}

uint64_t static FetchContactAvatarIntent.isDiscoverable.setter(char a1)
{
  uint64_t result = swift_beginAccess();
  byte_26769C0B8 = a1;
  return result;
}

uint64_t (*static FetchContactAvatarIntent.isDiscoverable.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t sub_20B7B8D18()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769C0C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C0C0);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static FetchContactAvatarIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769B008 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769C0C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B7B8F9C()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769C0D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C0D8);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static FetchContactAvatarIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769B010 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769C0D8);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t static FetchContactAvatarIntent.description.setter(uint64_t a1)
{
  if (qword_26769B010 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D2EB8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769C0D8);
  swift_beginAccess();
  uint64_t v4 = *(void *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v3, a1, v2);
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(a1, v2);
}

uint64_t (*static FetchContactAvatarIntent.description.modify())()
{
  if (qword_26769B010 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C0D8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t FetchContactAvatarIntent.identifiers.getter()
{
  sub_20B7D2CB8();
  return v1;
}

uint64_t sub_20B7B9500@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7B9564()
{
  return swift_release();
}

uint64_t FetchContactAvatarIntent.identifiers.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*FetchContactAvatarIntent.identifiers.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t FetchContactAvatarIntent.$identifiers.getter()
{
  return sub_20B7D2CD8();
}

uint64_t FetchContactAvatarIntent.kinds.getter()
{
  sub_20B7D2CB8();
  return v1;
}

uint64_t FetchContactAvatarIntent.kinds.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*FetchContactAvatarIntent.kinds.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t FetchContactAvatarIntent.$kinds.getter()
{
  return sub_20B7D2CD8();
}

uint64_t FetchContactAvatarIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v35 = a1;
  uint64_t v34 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B700);
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v32 = *(void *)(*(void *)(v1 - 8) + 64);
  MEMORY[0x270FA5388](v1 - 8);
  unint64_t v33 = (v2 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v3 = (char *)&v23 - v33;
  uint64_t v27 = (char *)&v23 - v33;
  uint64_t v30 = sub_20B7D33C8();
  uint64_t v4 = *(void *)(v30 - 8);
  os_log_type_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
  uint64_t v31 = v4 + 56;
  v29(v3, 1, 1, v30);
  uint64_t v36 = 0;
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B710);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_20B7D3A78();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x270FA5388](v9 - 8);
  unint64_t v28 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v11 = (char *)&v23 - v28;
  uint64_t v12 = sub_20B7D2B18();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
  v25(v11, 1, 1, v12);
  uint64_t v13 = sub_20B7D2FD8();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  MEMORY[0x270FA5388](v13);
  unint64_t v26 = (v15 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v24 = *MEMORY[0x263EFBDC0];
  unint64_t v23 = *(void (**)(char *))(v14 + 104);
  v23((char *)&v23 - v26);
  uint64_t v34 = sub_20B7D2D38();
  uint64_t v27 = (char *)__swift_instantiateConcreteTypeFromMangledName(&qword_26769C0F0);
  MEMORY[0x270FA5388](v27);
  uint64_t v16 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v29)((char *)&v23 - v33, 1, 1, v30);
  uint64_t v36 = 0;
  MEMORY[0x270FA5388](v16);
  unint64_t v17 = v28;
  uint64_t v18 = (uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v25;
  uint64_t v19 = ((uint64_t (*)(char *, uint64_t, uint64_t, uint64_t))v25)((char *)&v23 - v28, 1, 1, v12);
  MEMORY[0x270FA5388](v19);
  uint64_t v20 = v18((char *)&v23 - v17, 1, 1, v12);
  MEMORY[0x270FA5388](v20);
  ((void (*)(char *, void, uint64_t))v23)((char *)&v23 - v26, v24, v13);
  sub_20B7C0A14();
  uint64_t result = sub_20B7D2CE8();
  uint64_t v22 = v35;
  *uint64_t v35 = v34;
  v22[1] = result;
  return result;
}

uint64_t FetchContactAvatarIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 176) = a1;
  *(void *)(v2 + 184) = type metadata accessor for ContactAvatarFetchResultEntity(0);
  *(void *)(v2 + 192) = swift_task_alloc();
  uint64_t v3 = sub_20B7D39F8();
  *(void *)(v2 + 200) = v3;
  *(void *)(v2 + 20_Block_object_dispose(&a9, 8) = *(void *)(v3 - 8);
  *(void *)(v2 + 216) = swift_task_alloc();
  *(void *)(v2 + 224) = swift_task_alloc();
  *(_OWORD *)(v2 + 232) = *v1;
  sub_20B7D3CC8();
  *(void *)(v2 + 24_Block_object_dispose(&a9, 8) = sub_20B7D3CB8();
  uint64_t v5 = sub_20B7D3CA8();
  return MEMORY[0x270FA2498](sub_20B7B9CF8, v5, v4);
}

uint64_t sub_20B7B9CF8()
{
  uint64_t v80 = v0;
  v79[1] = *MEMORY[0x263EF8340];
  swift_release();
  if (qword_26769AF18 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[25];
  uint64_t v3 = v0[26];
  uint64_t v4 = __swift_project_value_buffer(v2, (uint64_t)qword_2676A3C70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1, v4, v2);
  sub_20B7D39A8();
  swift_allocObject();
  sub_20B7D3958();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  sub_20B7BAC74(v0[12]);
  swift_bridgeObjectRelease();
  sub_20B7D3998();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  uint64_t v5 = sub_20B7D3988();
  swift_bridgeObjectRelease();
  swift_release();
  sub_20B7D3968();
  if (qword_26769B000 != -1) {
    swift_once();
  }
  __swift_project_value_buffer(v0[25], (uint64_t)qword_26769C0A0);
  swift_retain_n();
  swift_retain_n();
  uint64_t v6 = sub_20B7D39D8();
  os_log_type_t v7 = sub_20B7D3D58();
  uint64_t v77 = v5;
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v74 = swift_slowAlloc();
    v79[0] = v74;
    *(_DWORD *)uint64_t v8 = 136315394;
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2CB8();
    swift_release();
    swift_release();
    uint64_t v9 = MEMORY[0x2105379C0](v0[18], &type metadata for ContactLikenessKindAppEnum);
    unint64_t v11 = v10;
    swift_bridgeObjectRelease();
    v0[19] = sub_20B77C87C(v9, v11, v79);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    *(_WORD *)(v8 + 12) = 2080;
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2CB8();
    swift_release();
    swift_release();
    uint64_t v12 = MEMORY[0x2105379C0](v0[20], MEMORY[0x263F8D310]);
    unint64_t v14 = v13;
    swift_bridgeObjectRelease();
    v0[21] = sub_20B77C87C(v12, v14, v79);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    swift_release_n();
    _os_log_impl(&dword_20B704000, v6, v7, "Search for %s for identifiers: %s", (uint8_t *)v8, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v74, -1, -1);
    MEMORY[0x210538E40](v8, -1, -1);
  }
  else
  {
    swift_release_n();
    swift_release_n();
  }

  uint64_t v15 = sub_20B7D3938();
  sub_20B78C718(v15, v16);
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA58]), sel_init);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  uint64_t v18 = v0[9];
  uint64_t v19 = MEMORY[0x263F8EE78];
  uint64_t v20 = *(void *)(v18 + 16);
  if (v20)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v20; ++i)
    {
      v78[0] = *(unsigned char *)(v18 + i + 32);
      sub_20B7BED60(v78, v79);
      sub_20B7C18F0(v79[0]);
    }
    uint64_t v76 = v17;
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v76 = v17;
    swift_bridgeObjectRelease();
  }
  uint64_t v22 = v0[29];
  uint64_t v23 = v0[30];
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_20B7DB6D0;
  *(void *)(v24 + 32) = objc_msgSend(self, sel_descriptorForRequiredKeysForStyle_, 0);
  v79[0] = v24;
  sub_20B7D3C58();
  unint64_t v25 = v79[0];
  v79[0] = v19;
  unint64_t v26 = swift_bridgeObjectRetain();
  sub_20B7C18F0(v26);
  sub_20B7C18F0(v25);
  swift_bridgeObjectRelease();
  id v27 = objc_allocWithZone(MEMORY[0x263EFEA18]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
  uint64_t v28 = v19;
  os_log_type_t v29 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  id v30 = objc_msgSend(v27, sel_initWithKeysToFetch_, v29);

  uint64_t v31 = self;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  uint64_t v32 = (void *)sub_20B7D3C28();
  swift_bridgeObjectRelease();
  id v33 = objc_msgSend(v31, sel_predicateForContactsWithIdentifiers_, v32);

  objc_msgSend(v30, sel_setPredicate_, v33);
  id v34 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEA20]), sel_init);
  objc_msgSend(v34, sel_setStyle_, 0);
  v0[11] = v28;
  uint64_t v35 = (void *)swift_allocObject();
  void v35[2] = v77;
  v35[3] = v22;
  v35[4] = v23;
  v35[5] = v34;
  v35[6] = v0 + 11;
  uint64_t v36 = swift_allocObject();
  *(void *)(v36 + 16) = sub_20B7C1B0C;
  *(void *)(v36 + 24) = v35;
  v0[6] = sub_20B7C1B2C;
  v0[7] = v36;
  v0[2] = MEMORY[0x263EF8330];
  v0[3] = 1107296256;
  v0[4] = sub_20B78D0EC;
  v0[5] = &block_descriptor_1;
  uint64_t v37 = _Block_copy(v0 + 2);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  id v73 = v34;
  sub_20B7D2DA8();
  swift_release();
  v0[13] = 0;
  unsigned int v38 = objc_msgSend(v76, sel_enumerateContactsWithFetchRequest_error_usingBlock_, v30, v0 + 13, v37);
  _Block_release(v37);
  id v39 = (id)v0[13];
  LOBYTE(v22) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v22) {
    __break(1u);
  }
  uint64_t v75 = v30;
  if (v38)
  {
    uint64_t v40 = v0[23];
    uint64_t v41 = v0[24];
    id v70 = self;
    id v42 = objc_msgSend(v70, sel_currentEnvironment);
    id v43 = objc_msgSend(v42, sel_timeProvider);

    objc_msgSend(v43, sel_timestamp);
    double v45 = v44;
    swift_unknownObjectRelease();
    sub_20B7D29A8();
    uint64_t v69 = *(int *)(v40 + 20);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769C108);
    sub_20B7D33C8();
    uint64_t v46 = swift_task_alloc();
    sub_20B7D3AE8();
    swift_task_alloc();
    sub_20B7D3A88();
    sub_20B7D3548();
    swift_task_alloc();
    sub_20B7D3538();
    uint64_t v47 = *(void *)(sub_20B7D33B8() - 8);
    swift_task_alloc();
    (*(void (**)(void))(v47 + 104))();
    sub_20B7D33D8();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v48 = sub_20B7C1B6C(&qword_26769C110, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
    uint64_t v49 = MEMORY[0x2105369B0](v46, v48);
    swift_task_dealloc();
    *(void *)(v41 + v69) = v49;
    v0[14] = MEMORY[0x263F8EE78];
    sub_20B7D2C08();
    v0[15] = v0[11];
    swift_bridgeObjectRetain();
    sub_20B7D2C08();
    id v50 = objc_msgSend(v70, sel_currentEnvironment);
    id v51 = objc_msgSend(v50, sel_timeProvider);

    objc_msgSend(v51, sel_timestamp);
    double v53 = v52;
    swift_unknownObjectRelease();
    sub_20B7D3978();
    swift_retain_n();
    uint64_t v54 = sub_20B7D39D8();
    os_log_type_t v55 = sub_20B7D3D58();
    BOOL v56 = os_log_type_enabled(v54, v55);
    uint64_t v57 = v0[26];
    uint64_t v58 = v0[27];
    uint64_t v72 = v0[25];
    if (v56)
    {
      uint64_t v59 = swift_slowAlloc();
      uint64_t v71 = swift_slowAlloc();
      v79[0] = v71;
      *(_DWORD *)uint64_t v59 = 136315394;
      uint64_t v60 = sub_20B7D3938();
      v0[16] = sub_20B77C87C(v60, v61, v79);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v59 + 12) = 2080;
      id v62 = objc_msgSend(self, sel_stringForTimeInterval_, v53 - v45);
      uint64_t v63 = sub_20B7D3B08();
      unint64_t v65 = v64;

      v0[17] = sub_20B77C87C(v63, v65, v79);
      sub_20B7D3D88();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20B704000, v54, v55, "%s Time to make result: %s", (uint8_t *)v59, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v71, -1, -1);
      MEMORY[0x210538E40](v59, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    (*(void (**)(uint64_t, uint64_t))(v57 + 8))(v58, v72);
    uint64_t v67 = v0[24];
    sub_20B7C1B6C(&qword_26769C118, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
    sub_20B7D2BA8();

    sub_20B7C3BF8(v67, type metadata accessor for ContactAvatarFetchResultEntity);
    swift_bridgeObjectRelease();
    sub_20B7D3948();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    sub_20B7D3398();

    swift_willThrow();
    swift_bridgeObjectRelease();
    sub_20B7D3948();
    swift_release();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v66 = (uint64_t (*)(void))v0[1];
  }
  return v66();
}

uint64_t sub_20B7BAC74(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  uint64_t v2 = MEMORY[0x263F8EE78];
  if (v1)
  {
    uint64_t v13 = MEMORY[0x263F8EE78];
    sub_20B7A21DC(0, v1, 0);
    uint64_t v2 = v13;
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      char v6 = *v4++;
      char v5 = v6;
      uint64_t v13 = v2;
      unint64_t v8 = *(void *)(v2 + 16);
      unint64_t v7 = *(void *)(v2 + 24);
      if (v8 >= v7 >> 1)
      {
        sub_20B7A21DC(v7 > 1, v8 + 1, 1);
        uint64_t v2 = v13;
      }
      unint64_t v11 = &type metadata for ContactLikenessKindAppEnum;
      unint64_t v12 = sub_20B7C3D54();
      LOBYTE(v10) = v5;
      *(void *)(v2 + 16) = v8 + 1;
      sub_20B76D0B0(&v10, v2 + 40 * v8 + 32);
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_20B7BAD5C(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t a5, uint64_t *a6, unint64_t *a7)
{
  unint64_t v299 = a7;
  uint64_t v300 = a6;
  unint64_t v303 = a5;
  id v304 = a4;
  uint64_t v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v298 = (char *)&v287 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v305 = type metadata accessor for ContactAvatarEntity(0);
  uint64_t v297 = *(void *)(v305 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v305);
  uint64_t v289 = (uint64_t)&v287 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v294 = ((char *)&v287 - v14);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v290 = (uint64_t)&v287 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v292 = (uint64_t *)((char *)&v287 - v18);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v291 = (uint64_t)&v287 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v296 = (char *)&v287 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  unint64_t v293 = (unint64_t)&v287 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v295 = (char *)&v287 - v25;
  uint64_t v26 = sub_20B7D39F8();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v306 = (char *)&v287 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v31 = (char *)&v287 - v30;
  sub_20B7D3978();
  swift_retain_n();
  id v32 = a1;
  id v33 = sub_20B7D39D8();
  os_log_type_t v34 = sub_20B7D3D58();
  BOOL v35 = os_log_type_enabled(v33, v34);
  uint64_t v307 = v27;
  uint64_t v308 = v26;
  uint64_t v301 = a3;
  if (v35)
  {
    uint64_t v36 = swift_slowAlloc();
    uint64_t v288 = (char *)swift_slowAlloc();
    uint64_t v309 = v288;
    *(_DWORD *)uint64_t v36 = 136315394;
    uint64_t v37 = sub_20B7D3938();
    uint64_t v311 = sub_20B77C87C(v37, v38, (uint64_t *)&v309);
    sub_20B7D3D88();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v36 + 12) = 2080;
    id v39 = objc_msgSend(v32, sel_identifier);
    uint64_t v40 = sub_20B7D3B08();
    unint64_t v42 = v41;

    uint64_t v311 = sub_20B77C87C(v40, v42, (uint64_t *)&v309);
    sub_20B7D3D88();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_20B704000, v33, v34, "%s Will process contact %s", (uint8_t *)v36, 0x16u);
    id v43 = v288;
    swift_arrayDestroy();
    uint64_t v26 = v308;
    MEMORY[0x210538E40](v43, -1, -1);
    MEMORY[0x210538E40](v36, -1, -1);

    uint64_t v44 = v307;
  }
  else
  {

    swift_release_n();
    uint64_t v44 = v27;
  }
  (*(void (**)(char *, uint64_t))(v44 + 8))(v31, v26);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  double v45 = v309;
  uint64_t v46 = *((void *)v309 + 2);
  id v302 = v32;
  if (!v46)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  uint64_t v47 = 0;
  while (2)
  {
    uint64_t v48 = &v45[v47++];
    switch(v48[32])
    {
      case 3:
        swift_bridgeObjectRelease();
        goto LABEL_29;
      default:
        char v49 = sub_20B7D4018();
        swift_bridgeObjectRelease();
        if ((v49 & 1) == 0)
        {
          if (v46 == v47)
          {
            swift_bridgeObjectRelease();
            goto LABEL_10;
          }
          continue;
        }
LABEL_29:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v60 = objc_msgSend(v32, sel_wallpaper);
        if (v60)
        {
          unint64_t v61 = v60;
          id v62 = objc_msgSend(v60, sel_posterArchiveData);
          uint64_t v63 = sub_20B7D3488();
          unint64_t v65 = v64;

          if (qword_26769B000 != -1) {
            swift_once();
          }
          __swift_project_value_buffer(v26, (uint64_t)qword_26769C0A0);
          id v66 = v32;
          uint64_t v67 = v300;
          sub_20B773108(v63, v65);
          id v68 = v66;
          uint64_t v69 = v67;
          sub_20B773108(v63, v65);
          id v70 = sub_20B7D39D8();
          int v71 = sub_20B7D3D58();
          BOOL v72 = os_log_type_enabled(v70, (os_log_type_t)v71);
          id v304 = v61;
          if (v72)
          {
            LODWORD(v303) = v71;
            uint64_t v294 = v70;
            id v73 = (uint64_t *)v63;
            uint64_t v300 = (uint64_t *)(v65 >> 62);
            uint64_t v74 = swift_slowAlloc();
            uint64_t v296 = (char *)swift_slowAlloc();
            uint64_t v309 = v296;
            *(_DWORD *)uint64_t v74 = 136315651;
            id v75 = objc_msgSend(v68, sel_identifier);
            uint64_t v76 = sub_20B7D3B08();
            unint64_t v78 = v77;

            uint64_t v311 = sub_20B77C87C(v76, v78, (uint64_t *)&v309);
            sub_20B7D3D88();

            swift_bridgeObjectRelease();
            *(_WORD *)(v74 + 12) = 2081;
            id v79 = objc_msgSend(v69, sel_stringFromContact_, v68);
            if (v79)
            {
              uint64_t v80 = v79;
              uint64_t v81 = sub_20B7D3B08();
              unint64_t v83 = v82;
            }
            else
            {
              uint64_t v81 = 0x656D616E206F6ELL;
              unint64_t v83 = 0xE700000000000000;
            }
            uint64_t v311 = sub_20B77C87C(v81, v83, (uint64_t *)&v309);
            sub_20B7D3D88();

            swift_bridgeObjectRelease();
            *(_WORD *)(v74 + 22) = 2048;
            os_log_type_t v199 = v303;
            switch((int)v300)
            {
              case 1:
                sub_20B76C024((uint64_t)v73, v65);
                LODWORD(v200) = HIDWORD(v73) - v73;
                if (__OFSUB__(HIDWORD(v73), v73))
                {
                  __break(1u);
LABEL_128:
                  __break(1u);
LABEL_129:
                  __break(1u);
LABEL_130:
                  __break(1u);
LABEL_131:
                  __break(1u);
                  JUMPOUT(0x20B7BD3ECLL);
                }
                uint64_t v200 = (int)v200;
LABEL_97:
                uint64_t v204 = v294;
                uint64_t v311 = v200;
                sub_20B7D3D88();
                sub_20B76C024((uint64_t)v73, v65);
                _os_log_impl(&dword_20B704000, v204, v199, "Found poster for contact %s (%{private}s, %ld bytes", (uint8_t *)v74, 0x20u);
                uint64_t v205 = (uint64_t)v296;
                swift_arrayDestroy();
                MEMORY[0x210538E40](v205, -1, -1);
                MEMORY[0x210538E40](v74, -1, -1);

                break;
              case 2:
                uint64_t v203 = v73[2];
                uint64_t v202 = v73[3];
                sub_20B76C024((uint64_t)v73, v65);
                uint64_t v200 = v202 - v203;
                if (!__OFSUB__(v202, v203)) {
                  goto LABEL_97;
                }
                __break(1u);
LABEL_96:
                sub_20B76C024((uint64_t)v73, v65);
                uint64_t v200 = 0;
                goto LABEL_97;
              case 3:
                goto LABEL_96;
              default:
                sub_20B76C024((uint64_t)v73, v65);
                uint64_t v200 = BYTE6(v65);
                goto LABEL_97;
            }
          }
          else
          {
            sub_20B76C024(v63, v65);

            sub_20B76C024(v63, v65);
            id v73 = (uint64_t *)v63;
          }
          uint64_t v206 = (uint64_t)v295;
          ContactAvatarEntity.init()((uint64_t)v295);
          id v207 = objc_msgSend(v68, sel_identifier);
          unint64_t v208 = (char *)sub_20B7D3B08();
          uint64_t v210 = v209;

          uint64_t v309 = v208;
          uint64_t v310 = v210;
          sub_20B7D2C08();
          uint64_t v211 = sub_20B7D2AD8();
          uint64_t v296 = (char *)&v287;
          uint64_t v212 = *(void *)(v211 - 8);
          uint64_t v213 = *(void *)(v212 + 64);
          MEMORY[0x270FA5388](v211);
          uint64_t v294 = ((v213 + 15) & 0xFFFFFFFFFFFFFFF0);
          uint64_t v214 = (char *)((char *)&v287 - (char *)v294);
          sub_20B773108((uint64_t)v73, v65);
          id v215 = objc_msgSend(v68, sel_identifier);
          uint64_t v216 = (char *)sub_20B7D3B08();
          uint64_t v218 = v217;

          uint64_t v309 = v216;
          uint64_t v310 = v218;
          sub_20B7D3B98();
          long long v219 = v298;
          sub_20B7D39B8();
          uint64_t v220 = sub_20B7D39C8();
          (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v220 - 8) + 56))(v219, 0, 1, v220);
          uint64_t v300 = v73;
          unint64_t v303 = v65;
          uint64_t v221 = sub_20B7D2AB8();
          MEMORY[0x270FA5388](v221);
          (*(void (**)(int64_t, char *, uint64_t))(v212 + 16))((char *)&v287 - (char *)v294, v214, v211);
          sub_20B7D2C08();
          (*(void (**)(char *, uint64_t))(v212 + 8))(v214, v211);
          LOBYTE(v309) = 3;
          sub_20B7D2C08();
          LOBYTE(v309) = objc_msgSend(v304, sel_contentIsSensitive);
          sub_20B7D2C08();
          uint64_t v222 = v293;
          sub_20B7C3B30(v206, v293);
          long long v223 = v299;
          unint64_t v224 = *v299;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *long long v223 = v224;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            unint64_t v224 = sub_20B76BD80(0, *(void *)(v224 + 16) + 1, 1, v224);
            *long long v223 = v224;
          }
          uint64_t v26 = v308;
          uint64_t v226 = (uint64_t)v300;
          uint64_t v141 = v306;
          uint64_t v227 = v297;
          unint64_t v229 = *(void *)(v224 + 16);
          unint64_t v228 = *(void *)(v224 + 24);
          if (v229 >= v228 >> 1)
          {
            unint64_t v224 = sub_20B76BD80(v228 > 1, v229 + 1, 1, v224);
            *long long v223 = v224;
          }
          *(void *)(v224 + 16) = v229 + 1;
          sub_20B7C3B94(v222, v224+ ((*(unsigned __int8 *)(v227 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v227 + 80))+ *(void *)(v227 + 72) * v229);

          sub_20B76C024(v226, v303);
          uint64_t v145 = (uint64_t)v295;
          goto LABEL_123;
        }
LABEL_11:
        sub_20B7D2DA8();
        sub_20B7D2DA8();
        sub_20B7D2CB8();
        swift_release();
        swift_release();
        id v50 = v309;
        uint64_t v51 = *((void *)v309 + 2);
        if (!v51) {
          goto LABEL_17;
        }
        swift_bridgeObjectRetain();
        uint64_t v52 = 0;
        while (2)
        {
          double v53 = &v50[v52++];
          switch(v53[32])
          {
            case 2:
              swift_bridgeObjectRelease();
              goto LABEL_37;
            default:
              char v54 = sub_20B7D4018();
              swift_bridgeObjectRelease();
              if (v54)
              {
LABEL_37:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                id v84 = objc_msgSend(v32, sel_thumbnailImageData);
                if (!v84) {
                  goto LABEL_18;
                }
                uint64_t v85 = v84;
                unint64_t v86 = sub_20B7D3488();
                unint64_t v88 = v87;

                if (qword_26769B000 != -1) {
                  swift_once();
                }
                __swift_project_value_buffer(v26, (uint64_t)qword_26769C0A0);
                id v89 = v32;
                uint64_t v90 = v300;
                sub_20B773108(v86, v88);
                uint64_t v91 = (char *)v89;
                uint64_t v92 = v90;
                sub_20B773108(v86, v88);
                uint64_t v93 = sub_20B7D39D8();
                int v94 = sub_20B7D3D58();
                if (os_log_type_enabled(v93, (os_log_type_t)v94))
                {
                  LODWORD(v303) = v94;
                  id v304 = (id)(v88 >> 62);
                  uint64_t v95 = swift_slowAlloc();
                  uint64_t v300 = (uint64_t *)swift_slowAlloc();
                  uint64_t v309 = (char *)v300;
                  *(_DWORD *)uint64_t v95 = 136315907;
                  id v96 = objc_msgSend(v91, sel_identifier);
                  uint64_t v97 = sub_20B7D3B08();
                  unint64_t v99 = v98;

                  uint64_t v311 = sub_20B77C87C(v97, v99, (uint64_t *)&v309);
                  sub_20B7D3D88();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v95 + 12) = 2081;
                  id v100 = objc_msgSend(v92, sel_stringFromContact_, v91);
                  if (v100)
                  {
                    uint64_t v101 = v100;
                    uint64_t v102 = sub_20B7D3B08();
                    unint64_t v104 = v103;
                  }
                  else
                  {
                    uint64_t v102 = 0x656D616E206F6ELL;
                    unint64_t v104 = 0xE700000000000000;
                  }
                  uint64_t v311 = sub_20B77C87C(v102, v104, (uint64_t *)&v309);
                  sub_20B7D3D88();

                  swift_bridgeObjectRelease();
                  *(_WORD *)(v95 + 22) = 2048;
                  switch((int)v304)
                  {
                    case 1:
                      sub_20B76C024(v86, v88);
                      LODWORD(v201) = HIDWORD(v86) - v86;
                      if (__OFSUB__(HIDWORD(v86), v86)) {
                        goto LABEL_128;
                      }
                      uint64_t v201 = (int)v201;
                      break;
                    case 2:
                      uint64_t v230 = v91;
                      uint64_t v232 = *(void *)(v86 + 16);
                      uint64_t v231 = *(void *)(v86 + 24);
                      sub_20B76C024(v86, v88);
                      uint64_t v201 = v231 - v232;
                      if (__OFSUB__(v231, v232)) {
                        goto LABEL_129;
                      }
                      uint64_t v91 = v230;
                      break;
                    case 3:
                      sub_20B76C024(v86, v88);
                      uint64_t v201 = 0;
                      break;
                    default:
                      sub_20B76C024(v86, v88);
                      uint64_t v201 = BYTE6(v88);
                      break;
                  }
                  uint64_t v311 = v201;
                  sub_20B7D3D88();
                  sub_20B76C024(v86, v88);
                  *(_WORD *)(v95 + 32) = 2048;
                  id v233 = objc_msgSend(v91, sel_imageBackgroundColorsData);
                  if (v233)
                  {
                    unint64_t v234 = v233;
                    uint64_t v235 = sub_20B7D3488();
                    unint64_t v237 = v236;

                    switch(v237 >> 62)
                    {
                      case 1uLL:
                        sub_20B76C024(v235, v237);

                        LODWORD(v23_Block_object_dispose(&a9, 8) = HIDWORD(v235) - v235;
                        if (__OFSUB__(HIDWORD(v235), v235)) {
                          goto LABEL_131;
                        }
                        uint64_t v238 = (int)v238;
                        break;
                      case 2uLL:
                        unint64_t v239 = v86;
                        unint64_t v240 = v88;
                        uint64_t v241 = v91;
                        uint64_t v243 = *(void *)(v235 + 16);
                        uint64_t v242 = *(void *)(v235 + 24);
                        sub_20B76C024(v235, v237);

                        uint64_t v238 = v242 - v243;
                        if (__OFSUB__(v242, v243)) {
                          goto LABEL_130;
                        }
                        unint64_t v88 = v240;
                        unint64_t v86 = v239;
                        uint64_t v91 = v241;
                        break;
                      case 3uLL:
                        sub_20B76C024(v235, v237);
                        goto LABEL_116;
                      default:
                        sub_20B76C024(v235, v237);

                        uint64_t v238 = BYTE6(v237);
                        break;
                    }
                  }
                  else
                  {
LABEL_116:

                    uint64_t v238 = 0;
                  }
                  uint64_t v311 = v238;
                  sub_20B7D3D88();

                  _os_log_impl(&dword_20B704000, v93, (os_log_type_t)v303, "Found avatar for contact %s (%{private}s, %ld bytes, background colors: %ld bytes", (uint8_t *)v95, 0x2Au);
                  uint64_t v244 = v300;
                  swift_arrayDestroy();
                  MEMORY[0x210538E40](v244, -1, -1);
                  MEMORY[0x210538E40](v95, -1, -1);
                }
                else
                {

                  sub_20B76C024(v86, v88);
                  sub_20B76C024(v86, v88);
                }
                ContactAvatarEntity.init()((uint64_t)v296);
                id v245 = objc_msgSend(v91, sel_identifier);
                v246 = (char *)sub_20B7D3B08();
                uint64_t v248 = v247;

                uint64_t v309 = v246;
                uint64_t v310 = v248;
                sub_20B7D2C08();
                uint64_t v294 = sub_20B7D2AD8();
                uint64_t v295 = v91;
                uint64_t v300 = &v287;
                isa = v294[-1].isa;
                uint64_t v250 = isa[8];
                MEMORY[0x270FA5388](v294);
                unint64_t v293 = (v250 + 15) & 0xFFFFFFFFFFFFFFF0;
                v251 = (char *)&v287 - v293;
                sub_20B773108(v86, v88);
                id v252 = objc_msgSend(v91, sel_identifier);
                v253 = (char *)sub_20B7D3B08();
                uint64_t v255 = v254;

                uint64_t v309 = v253;
                uint64_t v310 = v255;
                sub_20B7D3B98();
                v256 = (void *)v88;
                id v257 = v298;
                sub_20B7D39B8();
                uint64_t v258 = sub_20B7D39C8();
                (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v258 - 8) + 56))(v257, 0, 1, v258);
                unint64_t v303 = v86;
                id v304 = v256;
                uint64_t v259 = sub_20B7D2AB8();
                v292 = &v287;
                uint64_t v260 = (uint64_t)v296;
                MEMORY[0x270FA5388](v259);
                unint64_t v261 = v293;
                uint64_t v298 = (char *)isa[2];
                uint64_t v262 = v251;
                uint64_t v263 = v251;
                uint64_t v264 = (uint64_t)v294;
                ((void (*)(char *, char *, NSObject *))v298)((char *)&v287 - v293, v263, v294);
                sub_20B7D2C08();
                uint64_t v265 = (uint64_t (*)(char *, uint64_t))isa[1];
                uint64_t v266 = v265(v262, v264);
                uint64_t v300 = &v287;
                MEMORY[0x270FA5388](v266);
                uint64_t v267 = sub_20B7BDDF4(v295);
                uint64_t v295 = (char *)&v287;
                MEMORY[0x270FA5388](v267);
                ((void (*)(char *, char *, uint64_t))v298)((char *)&v287 - v261, (char *)&v287 - v261, v264);
                sub_20B7D2C08();
                v265((char *)&v287 - v261, v264);
                LOBYTE(v309) = 2;
                sub_20B7D2C08();
                uint64_t v268 = v291;
                sub_20B7C3B30(v260, v291);
                uint64_t v269 = v299;
                unint64_t v270 = *v299;
                char v271 = swift_isUniquelyReferenced_nonNull_native();
                *uint64_t v269 = v270;
                if ((v271 & 1) == 0)
                {
                  unint64_t v270 = sub_20B76BD80(0, *(void *)(v270 + 16) + 1, 1, v270);
                  *uint64_t v269 = v270;
                }
                uint64_t v141 = v306;
                uint64_t v272 = v297;
                unint64_t v274 = *(void *)(v270 + 16);
                unint64_t v273 = *(void *)(v270 + 24);
                uint64_t v26 = v308;
                if (v274 >= v273 >> 1)
                {
                  unint64_t v270 = sub_20B76BD80(v273 > 1, v274 + 1, 1, v270);
                  *uint64_t v269 = v270;
                }
                *(void *)(v270 + 16) = v274 + 1;
                sub_20B7C3B94(v268, v270+ ((*(unsigned __int8 *)(v272 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v272 + 80))+ *(void *)(v272 + 72) * v274);
                sub_20B76C024(v303, (unint64_t)v304);
                uint64_t v145 = (uint64_t)v296;
LABEL_123:
                sub_20B7C3BF8(v145, type metadata accessor for ContactAvatarEntity);
                goto LABEL_124;
              }
              if (v51 != v52) {
                continue;
              }
              swift_bridgeObjectRelease();
LABEL_17:
              swift_bridgeObjectRelease();
LABEL_18:
              sub_20B7D2DA8();
              sub_20B7D2DA8();
              sub_20B7D2CB8();
              swift_release();
              swift_release();
              os_log_type_t v55 = v309;
              uint64_t v56 = *((void *)v309 + 2);
              if (!v56) {
                goto LABEL_24;
              }
              swift_bridgeObjectRetain();
              uint64_t v57 = 0;
              while (2)
              {
                uint64_t v58 = &v55[v57++];
                switch(v58[32])
                {
                  case 1:
                    swift_bridgeObjectRelease();
                    goto LABEL_45;
                  default:
                    char v59 = sub_20B7D4018();
                    swift_bridgeObjectRelease();
                    if (v59)
                    {
LABEL_45:
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v105 = (void *)sub_20B7BE298(v32);
                      if (v106 >> 60 == 15) {
                        goto LABEL_46;
                      }
                      unint64_t v303 = v106;
                      id v304 = v105;
                      if (qword_26769B000 != -1) {
                        swift_once();
                      }
                      __swift_project_value_buffer(v26, (uint64_t)qword_26769C0A0);
                      id v112 = v32;
                      uint64_t v113 = sub_20B7D39D8();
                      os_log_type_t v114 = sub_20B7D3D58();
                      if (os_log_type_enabled(v113, v114))
                      {
                        uint64_t v115 = (uint8_t *)swift_slowAlloc();
                        uint64_t v116 = (char *)swift_slowAlloc();
                        uint64_t v309 = v116;
                        *(_DWORD *)uint64_t v115 = 136315138;
                        id v117 = objc_msgSend(v112, sel_identifier);
                        uint64_t v118 = sub_20B7D3B08();
                        unint64_t v120 = v119;

                        uint64_t v311 = sub_20B77C87C(v118, v120, (uint64_t *)&v309);
                        sub_20B7D3D88();

                        swift_bridgeObjectRelease();
                        _os_log_impl(&dword_20B704000, v113, v114, "Found monogram for contact %s", v115, 0xCu);
                        swift_arrayDestroy();
                        MEMORY[0x210538E40](v116, -1, -1);
                        MEMORY[0x210538E40](v115, -1, -1);
                      }
                      else
                      {
                      }
                      uint64_t v121 = (uint64_t)v292;
                      ContactAvatarEntity.init()((uint64_t)v292);
                      id v122 = objc_msgSend(v112, sel_identifier);
                      uint64_t v123 = (char *)sub_20B7D3B08();
                      uint64_t v125 = v124;

                      uint64_t v309 = v123;
                      uint64_t v310 = v125;
                      sub_20B7D2C08();
                      uint64_t v296 = (char *)sub_20B7D2AD8();
                      uint64_t v300 = &v287;
                      uint64_t v126 = *((void *)v296 - 1);
                      uint64_t v127 = *(void *)(v126 + 64);
                      MEMORY[0x270FA5388](v296);
                      uint64_t v295 = (char *)((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
                      int64_t v128 = (char *)&v287 - v295;
                      sub_20B773108((uint64_t)v304, v303);
                      id v129 = objc_msgSend(v112, sel_identifier);
                      long long v130 = (char *)sub_20B7D3B08();
                      uint64_t v132 = v131;

                      uint64_t v309 = v130;
                      uint64_t v310 = v132;
                      sub_20B7D3B98();
                      uint64_t v133 = v298;
                      sub_20B7D39B8();
                      uint64_t v134 = sub_20B7D39C8();
                      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v133, 0, 1, v134);
                      uint64_t v135 = sub_20B7D2AB8();
                      MEMORY[0x270FA5388](v135);
                      uint64_t v136 = (uint64_t)v296;
                      (*(void (**)(int64_t, int64_t, char *))(v126 + 16))((char *)&v287 - v295, v128, v296);
                      sub_20B7D2C08();
                      (*(void (**)(int64_t, uint64_t))(v126 + 8))(v128, v136);
                      LOBYTE(v309) = 1;
                      sub_20B7D2C08();
                      uint64_t v137 = v290;
                      sub_20B7C3B30(v121, v290);
                      id v138 = v299;
                      unint64_t v139 = *v299;
                      char v140 = swift_isUniquelyReferenced_nonNull_native();
                      *id v138 = v139;
                      if ((v140 & 1) == 0)
                      {
                        unint64_t v139 = sub_20B76BD80(0, *(void *)(v139 + 16) + 1, 1, v139);
                        *id v138 = v139;
                      }
                      uint64_t v26 = v308;
                      uint64_t v141 = v306;
                      uint64_t v142 = v297;
                      unint64_t v144 = *(void *)(v139 + 16);
                      unint64_t v143 = *(void *)(v139 + 24);
                      if (v144 >= v143 >> 1)
                      {
                        unint64_t v139 = sub_20B76BD80(v143 > 1, v144 + 1, 1, v139);
                        *id v138 = v139;
                      }
                      *(void *)(v139 + 16) = v144 + 1;
                      sub_20B7C3B94(v137, v139+ ((*(unsigned __int8 *)(v142 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v142 + 80))+ *(void *)(v142 + 72) * v144);
                      sub_20B7B10DC((uint64_t)v304, v303);
                      uint64_t v145 = (uint64_t)v292;
                      goto LABEL_123;
                    }
                    if (v56 != v57) {
                      continue;
                    }
                    swift_bridgeObjectRelease();
LABEL_24:
                    swift_bridgeObjectRelease();
LABEL_46:
                    sub_20B7D2DA8();
                    sub_20B7D2DA8();
                    sub_20B7D2CB8();
                    swift_release();
                    swift_release();
                    uint64_t v107 = v309;
                    uint64_t v108 = *((void *)v309 + 2);
                    if (v108)
                    {
                      swift_bridgeObjectRetain();
                      uint64_t v109 = 0;
                      while (2)
                      {
                        unsigned int v110 = &v107[v109++];
                        switch(v110[32])
                        {
                          case 1:
                          case 2:
                          case 3:
                            char v111 = sub_20B7D4018();
                            swift_bridgeObjectRelease();
                            if (v111) {
                              goto LABEL_65;
                            }
                            if (v108 != v109) {
                              continue;
                            }
                            swift_bridgeObjectRelease_n();
                            goto LABEL_66;
                          default:
                            swift_bridgeObjectRelease();
LABEL_65:
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            uint64_t v146 = (void *)sub_20B7BE788(v32);
                            if (v147 >> 60 == 15) {
                              goto LABEL_66;
                            }
                            unint64_t v303 = v147;
                            id v304 = v146;
                            if (qword_26769B000 != -1) {
                              swift_once();
                            }
                            __swift_project_value_buffer(v26, (uint64_t)qword_26769C0A0);
                            id v165 = v32;
                            uint64_t v166 = sub_20B7D39D8();
                            os_log_type_t v167 = sub_20B7D3D58();
                            if (os_log_type_enabled(v166, v167))
                            {
                              uint64_t v168 = (uint8_t *)swift_slowAlloc();
                              uint64_t v169 = (char *)swift_slowAlloc();
                              uint64_t v309 = v169;
                              *(_DWORD *)uint64_t v168 = 136315138;
                              id v170 = objc_msgSend(v165, sel_identifier);
                              uint64_t v171 = sub_20B7D3B08();
                              unint64_t v173 = v172;

                              uint64_t v311 = sub_20B77C87C(v171, v173, (uint64_t *)&v309);
                              sub_20B7D3D88();

                              uint64_t v174 = v165;
                              swift_bridgeObjectRelease();
                              _os_log_impl(&dword_20B704000, v166, v167, "Found silhouette for contact %s", v168, 0xCu);
                              swift_arrayDestroy();
                              MEMORY[0x210538E40](v169, -1, -1);
                              MEMORY[0x210538E40](v168, -1, -1);
                            }
                            else
                            {

                              uint64_t v174 = v165;
                            }
                            ContactAvatarEntity.init()((uint64_t)v294);
                            uint64_t v175 = v174;
                            id v176 = objc_msgSend(v174, sel_identifier);
                            id v177 = (char *)sub_20B7D3B08();
                            uint64_t v179 = v178;

                            uint64_t v309 = v177;
                            uint64_t v310 = v179;
                            sub_20B7D2C08();
                            uint64_t v180 = sub_20B7D2AD8();
                            uint64_t v300 = &v287;
                            uint64_t v181 = *(void *)(v180 - 8);
                            uint64_t v182 = *(void *)(v181 + 64);
                            MEMORY[0x270FA5388](v180);
                            uint64_t v296 = (char *)((v182 + 15) & 0xFFFFFFFFFFFFFFF0);
                            uint64_t v183 = (char *)((char *)&v287 - v296);
                            sub_20B773108((uint64_t)v304, v303);
                            id v184 = objc_msgSend(v175, sel_identifier);
                            unint64_t v185 = (char *)sub_20B7D3B08();
                            uint64_t v187 = v186;

                            uint64_t v309 = v185;
                            uint64_t v310 = v187;
                            sub_20B7D3B98();
                            v188 = v298;
                            sub_20B7D39B8();
                            uint64_t v189 = sub_20B7D39C8();
                            (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v189 - 8) + 56))(v188, 0, 1, v189);
                            uint64_t v190 = sub_20B7D2AB8();
                            uint64_t v191 = (uint64_t)v294;
                            MEMORY[0x270FA5388](v190);
                            (*(void (**)(int64_t, char *, uint64_t))(v181 + 16))((char *)&v287 - v296, v183, v180);
                            sub_20B7D2C08();
                            (*(void (**)(char *, uint64_t))(v181 + 8))(v183, v180);
                            LOBYTE(v309) = 0;
                            sub_20B7D2C08();
                            uint64_t v192 = v289;
                            sub_20B7C3B30(v191, v289);
                            uint64_t v193 = v299;
                            unint64_t v194 = *v299;
                            char v195 = swift_isUniquelyReferenced_nonNull_native();
                            unint64_t *v193 = v194;
                            if ((v195 & 1) == 0)
                            {
                              unint64_t v194 = sub_20B76BD80(0, *(void *)(v194 + 16) + 1, 1, v194);
                              unint64_t *v193 = v194;
                            }
                            uint64_t v26 = v308;
                            uint64_t v141 = v306;
                            uint64_t v196 = v297;
                            unint64_t v198 = *(void *)(v194 + 16);
                            unint64_t v197 = *(void *)(v194 + 24);
                            if (v198 >= v197 >> 1)
                            {
                              unint64_t v194 = sub_20B76BD80(v197 > 1, v198 + 1, 1, v194);
                              unint64_t *v193 = v194;
                            }
                            *(void *)(v194 + 16) = v198 + 1;
                            sub_20B7C3B94(v192, v194+ ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80))+ *(void *)(v196 + 72) * v198);
                            sub_20B7B10DC((uint64_t)v304, v303);
                            uint64_t v145 = (uint64_t)v294;
                            goto LABEL_123;
                        }
                      }
                    }
                    swift_bridgeObjectRelease();
LABEL_66:
                    if (qword_26769B000 != -1) {
                      swift_once();
                    }
                    __swift_project_value_buffer(v26, (uint64_t)qword_26769C0A0);
                    id v148 = v32;
                    uint64_t v149 = v300;
                    id v150 = v148;
                    uint64_t v151 = v149;
                    uint64_t v152 = sub_20B7D39D8();
                    os_log_type_t v153 = sub_20B7D3D58();
                    if (os_log_type_enabled(v152, v153))
                    {
                      uint64_t v154 = swift_slowAlloc();
                      uint64_t v155 = (char *)swift_slowAlloc();
                      uint64_t v309 = v155;
                      *(_DWORD *)uint64_t v154 = 136315395;
                      id v156 = objc_msgSend(v150, sel_identifier);
                      uint64_t v157 = sub_20B7D3B08();
                      unint64_t v159 = v158;

                      uint64_t v311 = sub_20B77C87C(v157, v159, (uint64_t *)&v309);
                      sub_20B7D3D88();

                      swift_bridgeObjectRelease();
                      *(_WORD *)(v154 + 12) = 2081;
                      id v160 = objc_msgSend(v151, sel_stringFromContact_, v150);
                      if (v160)
                      {
                        uint64_t v161 = v160;
                        uint64_t v162 = sub_20B7D3B08();
                        unint64_t v164 = v163;
                      }
                      else
                      {
                        uint64_t v162 = 0x656D616E206F6ELL;
                        unint64_t v164 = 0xE700000000000000;
                      }
                      uint64_t v311 = sub_20B77C87C(v162, v164, (uint64_t *)&v309);
                      sub_20B7D3D88();

                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_20B704000, v152, v153, "Found contact %s (%{private}s, but no likeness", (uint8_t *)v154, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x210538E40](v155, -1, -1);
                      MEMORY[0x210538E40](v154, -1, -1);

                      uint64_t v26 = v308;
                    }
                    else
                    {
                    }
                    uint64_t v141 = v306;
LABEL_124:
                    sub_20B7D3978();
                    swift_retain_n();
                    id v275 = v302;
                    v276 = sub_20B7D39D8();
                    os_log_type_t v277 = sub_20B7D3D58();
                    if (os_log_type_enabled(v276, v277))
                    {
                      uint64_t v278 = swift_slowAlloc();
                      uint64_t v279 = (char *)swift_slowAlloc();
                      uint64_t v309 = v279;
                      *(_DWORD *)uint64_t v278 = 136315394;
                      uint64_t v280 = sub_20B7D3938();
                      uint64_t v311 = sub_20B77C87C(v280, v281, (uint64_t *)&v309);
                      sub_20B7D3D88();
                      swift_release_n();
                      swift_bridgeObjectRelease();
                      *(_WORD *)(v278 + 12) = 2080;
                      id v282 = objc_msgSend(v275, sel_identifier);
                      uint64_t v283 = sub_20B7D3B08();
                      unint64_t v285 = v284;

                      uint64_t v311 = sub_20B77C87C(v283, v285, (uint64_t *)&v309);
                      sub_20B7D3D88();

                      swift_bridgeObjectRelease();
                      _os_log_impl(&dword_20B704000, v276, v277, "%s Did process contact %s", (uint8_t *)v278, 0x16u);
                      swift_arrayDestroy();
                      MEMORY[0x210538E40](v279, -1, -1);
                      MEMORY[0x210538E40](v278, -1, -1);

                      return (*(uint64_t (**)(char *, uint64_t))(v307 + 8))(v306, v308);
                    }
                    else
                    {

                      swift_release_n();
                      return (*(uint64_t (**)(char *, uint64_t))(v307 + 8))(v141, v26);
                    }
                }
              }
          }
        }
    }
  }
}

uint64_t ContactAvatarEntity.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v64 = a1;
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v52 = (char *)&v47 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_20B7D29A8();
  uint64_t v63 = (int *)type metadata accessor for ContactAvatarEntity(0);
  uint64_t v3 = v63[5];
  uint64_t v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B968);
  uint64_t v4 = sub_20B7D33C8();
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v61 = v5;
  unint64_t v57 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  char v6 = (char *)&v47 - v57;
  uint64_t v7 = sub_20B7D3AE8();
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 64);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v49 = v8;
  unint64_t v56 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v9 = sub_20B7D3548();
  uint64_t v10 = *(void *)(*(void *)(v9 - 8) + 64);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v59 = v10;
  unint64_t v55 = (v10 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v53 = sub_20B7D33B8();
  uint64_t v11 = *(void *)(*(void *)(v53 - 8) + 64);
  MEMORY[0x270FA5388](v53);
  uint64_t v58 = v11;
  unint64_t v54 = (v11 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v12 = *MEMORY[0x263F06D10];
  id v62 = *(void (**)(char *, uint64_t))(v13 + 104);
  uint64_t v60 = v13 + 104;
  unsigned int v48 = v12;
  v62((char *)&v47 - v54, v12);
  sub_20B7D33D8();
  uint64_t v51 = MEMORY[0x210536A00](v6);
  *(void *)(v64 + v3) = v51;
  uint64_t v47 = v63[6];
  uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C130);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  unint64_t v16 = v57;
  MEMORY[0x270FA5388](v15);
  uint64_t v17 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v17);
  uint64_t v18 = sub_20B7D3538();
  MEMORY[0x270FA5388](v18);
  unint64_t v19 = v54;
  uint64_t v20 = v12;
  uint64_t v21 = v53;
  ((void (*)(char *, uint64_t, uint64_t))v62)((char *)&v47 - v54, v20, v53);
  sub_20B7D33D8();
  uint64_t v50 = MEMORY[0x2105369C0]((char *)&v47 - v16);
  uint64_t v23 = v63;
  uint64_t v22 = v64;
  *(void *)(v64 + v47) = v50;
  uint64_t v24 = v23[7];
  *(void *)(v22 + v24) = sub_20B7D2C58();
  uint64_t v47 = v23[8];
  uint64_t v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C138);
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  MEMORY[0x270FA5388](v26);
  uint64_t v27 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v27);
  uint64_t v28 = sub_20B7D3538();
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = v48;
  uint64_t v30 = (void (*)(char *, uint64_t, uint64_t))v62;
  ((void (*)(char *, void, uint64_t))v62)((char *)&v47 - v19, v48, v21);
  sub_20B7D33D8();
  unint64_t v31 = sub_20B7C0A14();
  uint64_t v32 = MEMORY[0x2105369A0]((char *)&v47 - v16, v31);
  uint64_t v33 = v64;
  *(void *)(v64 + v47) = v32;
  uint64_t v34 = v63[9];
  uint64_t v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C140);
  uint64_t v36 = MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v47 - v57;
  MEMORY[0x270FA5388](v36);
  uint64_t v38 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v38);
  uint64_t v39 = sub_20B7D3538();
  MEMORY[0x270FA5388](v39);
  v30((char *)&v47 - v54, v29, v53);
  sub_20B7D33D8();
  *(void *)(v33 + v34) = MEMORY[0x210536A10](v37);
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  sub_20B7D2C08();
  uint64_t v40 = sub_20B7D2AD8();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v42 = *(void *)(v41 + 64);
  MEMORY[0x270FA5388](v40);
  id v43 = (char *)&v47 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_20B7D39C8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v52, 1, 1, v44);
  uint64_t v45 = sub_20B7D2AB8();
  MEMORY[0x270FA5388](v45);
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v43, v43, v40);
  sub_20B7D2C08();
  return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v43, v40);
}

uint64_t ContactAvatarEntity.contactIdentifier.setter()
{
  return sub_20B7D2C08();
}

uint64_t ContactAvatarEntity.data.setter(uint64_t a1)
{
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t ContactAvatarEntity.kind.setter()
{
  return sub_20B7D2C08();
}

uint64_t ContactAvatarEntity.contentIsSensitive.setter()
{
  return sub_20B7D2C08();
}

uint64_t sub_20B7BDDF4(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(a1, sel_imageBackgroundColorsData);
  if (!v5)
  {
    if (qword_26769B000 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_20B7D39F8();
    __swift_project_value_buffer(v14, (uint64_t)qword_26769C0A0);
    uint64_t v11 = sub_20B7D39D8();
    os_log_type_t v15 = sub_20B7D3D58();
    if (!os_log_type_enabled(v11, v15))
    {
      uint64_t v7 = 0;
      unint64_t v9 = 0xF000000000000000;
      goto LABEL_12;
    }
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_20B704000, v11, v15, "Image background color data not available", v13, 2u);
    uint64_t v7 = 0;
    unint64_t v9 = 0xF000000000000000;
    goto LABEL_10;
  }
  uint64_t v6 = v5;
  uint64_t v7 = sub_20B7D3488();
  unint64_t v9 = v8;

  sub_20B773108(v7, v9);
  if (qword_26769B000 != -1) {
    swift_once();
  }
  uint64_t v10 = sub_20B7D39F8();
  __swift_project_value_buffer(v10, (uint64_t)qword_26769C0A0);
  uint64_t v11 = sub_20B7D39D8();
  os_log_type_t v12 = sub_20B7D3D58();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v13 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl(&dword_20B704000, v11, v12, "Contact has image background color data", v13, 2u);
LABEL_10:
    MEMORY[0x210538E40](v13, -1, -1);
  }
LABEL_12:

  sub_20B7D30E8();
  swift_allocObject();
  sub_20B7D30D8();
  uint64_t v26 = v7;
  unint64_t v27 = v9;
  sub_20B7C3C58();
  uint64_t v16 = sub_20B7D30C8();
  unint64_t v18 = v17;
  sub_20B7B10DC(v7, v9);
  swift_release();
  sub_20B773108(v16, v18);
  id v19 = objc_msgSend(a1, sel_identifier);
  uint64_t v20 = sub_20B7D3B08();
  unint64_t v22 = v21;

  uint64_t v26 = v20;
  unint64_t v27 = v22;
  sub_20B7D3B98();
  sub_20B7D39B8();
  uint64_t v23 = sub_20B7D39C8();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v4, 0, 1, v23);
  sub_20B7D2AB8();
  sub_20B7B10DC(v16, v18);
  return sub_20B7B10DC(v7, v9);
}

uint64_t ContactAvatarEntity.metadata.setter(uint64_t a1)
{
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

uint64_t sub_20B7BE298(void *a1)
{
  if (!objc_msgSend(a1, sel_contactType))
  {
    id v4 = objc_msgSend(self, sel_abbreviatedStringFromContact_trimmingWhitespace_, a1, 1);
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = sub_20B7D3B08();
      uint64_t v8 = v7;

      sub_20B7D30E8();
      swift_allocObject();
      sub_20B7D30D8();
      v19[0] = v6;
      v19[1] = v8;
      sub_20B7C3CAC();
      uint64_t v2 = sub_20B7D30C8();
      swift_bridgeObjectRelease();
      swift_release();
      return v2;
    }
    if (qword_26769B000 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_20B7D39F8();
    __swift_project_value_buffer(v9, (uint64_t)qword_26769C0A0);
    id v10 = a1;
    uint64_t v11 = sub_20B7D39D8();
    os_log_type_t v12 = sub_20B7D3D48();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      v19[0] = v14;
      *(_DWORD *)uint64_t v13 = 136315138;
      id v15 = objc_msgSend(v10, sel_identifier);
      uint64_t v16 = sub_20B7D3B08();
      unint64_t v18 = v17;

      void v19[2] = sub_20B77C87C(v16, v18, v19);
      sub_20B7D3D88();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_20B704000, v11, v12, "Could not encode initials for %s", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x210538E40](v14, -1, -1);
      MEMORY[0x210538E40](v13, -1, -1);
    }
    else
    {
    }
  }
  return 0;
}

uint64_t sub_20B7BE788(void *a1)
{
  objc_msgSend(a1, sel_contactType);
  sub_20B7D30E8();
  swift_allocObject();
  sub_20B7D30D8();
  sub_20B7C3D00();
  uint64_t v1 = sub_20B7D30C8();
  swift_release();
  return v1;
}

uint64_t ContactAvatarFetchResultEntity.init()@<X0>(uint64_t a1@<X8>)
{
  sub_20B7D29A8();
  uint64_t v2 = *(int *)(type metadata accessor for ContactAvatarFetchResultEntity(0) + 20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769C108);
  uint64_t v3 = sub_20B7D33C8();
  MEMORY[0x270FA5388](v3 - 8);
  id v5 = (char *)v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v6 - 8);
  sub_20B7D3A88();
  uint64_t v7 = sub_20B7D3548();
  MEMORY[0x270FA5388](v7 - 8);
  sub_20B7D3538();
  uint64_t v8 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v8);
  (*(void (**)(char *, void))(v10 + 104))((char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v11 = sub_20B7C1B6C(&qword_26769C110, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
  *(void *)(a1 + v2) = MEMORY[0x2105369B0](v5, v11);
  v13[0] = MEMORY[0x263F8EE78];
  return sub_20B7D2C08();
}

uint64_t ContactAvatarFetchResultEntity.avatars.setter()
{
  return sub_20B7D2C08();
}

id sub_20B7BED60@<X0>(unsigned char *a1@<X0>, uint64_t *a2@<X8>)
{
  switch(*a1)
  {
    case 1:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
      uint64_t v8 = swift_allocObject();
      *(_OWORD *)(v8 + 16) = xmmword_20B7DB9D0;
      os_log_type_t v12 = (void *)*MEMORY[0x263EFE148];
      *(void *)(v8 + 32) = *MEMORY[0x263EFE148];
      uint64_t v13 = self;
      id v14 = v12;
      *(void *)(v8 + 40) = objc_msgSend(v13, sel_descriptorForRequiredKeysForStyle_, 0);
      id result = (id)sub_20B7D3C58();
      break;
    case 2:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
      uint64_t v5 = swift_allocObject();
      *(_OWORD *)(v5 + 16) = xmmword_20B7DB9D0;
      uint64_t v6 = (void *)*MEMORY[0x263EFE140];
      uint64_t v7 = (void *)*MEMORY[0x263EFDFE8];
      *(void *)(v5 + 32) = *MEMORY[0x263EFE140];
      *(void *)(v5 + 40) = v7;
      uint64_t v15 = v5;
      sub_20B7D3C58();
      uint64_t v8 = v15;
      id v9 = v6;
      id result = v7;
      break;
    case 3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_20B7DB6D0;
      uint64_t v4 = (void **)MEMORY[0x263EFE158];
      goto LABEL_5;
    default:
      __swift_instantiateConcreteTypeFromMangledName(&qword_26769B810);
      uint64_t v3 = swift_allocObject();
      *(_OWORD *)(v3 + 16) = xmmword_20B7DB6D0;
      uint64_t v4 = (void **)MEMORY[0x263EFE148];
LABEL_5:
      uint64_t v11 = *v4;
      *(void *)(v3 + 32) = *v4;
      uint64_t v16 = v3;
      sub_20B7D3C58();
      uint64_t v8 = v16;
      id result = v11;
      break;
  }
  *a2 = v8;
  return result;
}

uint64_t sub_20B7BEF24@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769B008 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769C0C0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);
  return v4(a1, v3, v2);
}

uint64_t sub_20B7BEFCC()
{
  return byte_26769C0B8;
}

uint64_t sub_20B7BF010(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return FetchContactAvatarIntent.perform()(a1);
}

uint64_t sub_20B7BF0AC()
{
  return sub_20B7D2A98();
}

uint64_t static ContactAvatarFetchResultEntity.typeDisplayRepresentation.getter()
{
  return sub_20B7BF448();
}

uint64_t ContactAvatarFetchResultEntity.displayRepresentation.getter()
{
  return sub_20B7D2F38();
}

uint64_t ContactAvatarFetchResultEntity.avatars.getter()
{
  type metadata accessor for ContactAvatarFetchResultEntity(0);
  sub_20B7D2BF8();
  return v1;
}

uint64_t sub_20B7BF1DC()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactAvatarFetchResultEntity.avatars.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarFetchResultEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarFetchResultEntity.$avatars.getter()
{
  return sub_20B7BFD64((void (*)(void))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7BF2BC()
{
  return sub_20B7D2998();
}

uint64_t sub_20B7BF334()
{
  return sub_20B7D2A28();
}

uint64_t sub_20B7BF3A8()
{
  return sub_20B7D3058();
}

uint64_t static ContactAvatarEntity.typeDisplayRepresentation.getter()
{
  return sub_20B7BF448();
}

uint64_t sub_20B7BF448()
{
  uint64_t v0 = sub_20B7D33C8();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v2 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3A88();
  uint64_t v3 = sub_20B7D3548();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3538();
  uint64_t v4 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v4);
  (*(void (**)(unsigned char *, void))(v6 + 104))(&v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v7 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v1 + 56))(&v10[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v0);
  return sub_20B7D3028();
}

uint64_t ContactAvatarEntity.displayRepresentation.getter@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_20B7D39C8();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = 0;
  unint64_t v25 = 0xE000000000000000;
  sub_20B7D3E88();
  swift_bridgeObjectRelease();
  uint64_t v24 = 0x6620726174617641;
  unint64_t v25 = 0xEB0000000020726FLL;
  sub_20B7D3508();
  sub_20B7C27D8(&qword_26769C148);
  sub_20B7D4008();
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  sub_20B7D3B98();
  uint64_t v9 = sub_20B7D2AD8();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](v9);
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t v22 = v1;
  sub_20B7D2BF8();
  sub_20B7D2AC8();
  os_log_type_t v12 = *(void (**)(char *, uint64_t))(v10 + 8);
  v12((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_20B7D39B8();
    sub_20B7C1BB4((uint64_t)v4);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  }
  sub_20B7C1B6C(&qword_26769C150, MEMORY[0x263F8F3A0]);
  sub_20B7D4008();
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v13 = sub_20B7D3B98();
  MEMORY[0x270FA5388](v13);
  sub_20B7D2BF8();
  uint64_t v14 = sub_20B7D2AA8();
  unint64_t v16 = v15;
  v12((char *)v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), v9);
  switch(v16 >> 62)
  {
    case 1uLL:
      sub_20B76C024(v14, v16);
      LODWORD(v17) = HIDWORD(v14) - v14;
      if (__OFSUB__(HIDWORD(v14), v14))
      {
        __break(1u);
        JUMPOUT(0x20B7BFB74);
      }
      uint64_t v17 = (int)v17;
      break;
    case 2uLL:
      uint64_t v19 = *(void *)(v14 + 16);
      uint64_t v18 = *(void *)(v14 + 24);
      sub_20B76C024(v14, v16);
      uint64_t v17 = v18 - v19;
      if (__OFSUB__(v18, v19))
      {
        __break(1u);
        goto LABEL_11;
      }
      break;
    case 3uLL:
LABEL_11:
      sub_20B76C024(v14, v16);
      uint64_t v17 = 0;
      break;
    default:
      sub_20B76C024(v14, v16);
      uint64_t v17 = BYTE6(v16);
      break;
  }
  uint64_t v23 = v17;
  sub_20B7D4008();
  sub_20B7D3B98();
  swift_bridgeObjectRelease();
  sub_20B7D3B98();
  return sub_20B7D2F38();
}

uint64_t ContactAvatarEntity.data.getter()
{
  return sub_20B7D2BF8();
}

uint64_t ContactAvatarEntity.id.setter(uint64_t a1)
{
  uint64_t v3 = sub_20B7D3508();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);
  return v4(v1, a1, v3);
}

uint64_t (*ContactAvatarEntity.id.modify())()
{
  return nullsub_1;
}

uint64_t ContactAvatarEntity.contactIdentifier.getter()
{
  type metadata accessor for ContactAvatarEntity(0);
  sub_20B7D2BF8();
  return v1;
}

uint64_t sub_20B7BFC88()
{
  return sub_20B7D2C08();
}

uint64_t (*ContactAvatarEntity.contactIdentifier.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarEntity.$contactIdentifier.getter()
{
  return sub_20B7BFD64((void (*)(void))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7BFD64(void (*a1)(void))
{
  return sub_20B7D2C18();
}

uint64_t sub_20B7BFD9C(char *a1)
{
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v6((char *)&v9 - v5, a1, v2);
  uint64_t v7 = type metadata accessor for ContactAvatarEntity(0);
  MEMORY[0x270FA5388](v7);
  v6((char *)&v9 - v5, (char *)&v9 - v5, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))((char *)&v9 - v5, v2);
}

uint64_t (*ContactAvatarEntity.data.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarEntity.$data.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactAvatarEntity.metadata.getter()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B7BFFB8(char *a1)
{
  uint64_t v2 = sub_20B7D2AD8();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = *(void *)(v3 + 64);
  MEMORY[0x270FA5388](v2);
  unint64_t v5 = (v4 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v6 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v6((char *)&v9 - v5, a1, v2);
  uint64_t v7 = type metadata accessor for ContactAvatarEntity(0);
  MEMORY[0x270FA5388](v7);
  v6((char *)&v9 - v5, (char *)&v9 - v5, v2);
  sub_20B7D2C08();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))((char *)&v9 - v5, v2);
}

uint64_t (*ContactAvatarEntity.metadata.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarEntity.$metadata.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactAvatarEntity.kind.getter()
{
  return sub_20B7D2BF8();
}

uint64_t (*ContactAvatarEntity.kind.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarEntity.$kind.getter()
{
  return sub_20B7D2C18();
}

uint64_t ContactAvatarEntity.contentIsSensitive.getter()
{
  type metadata accessor for ContactAvatarEntity(0);
  sub_20B7D2BF8();
  return v1;
}

uint64_t (*ContactAvatarEntity.contentIsSensitive.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  type metadata accessor for ContactAvatarEntity(0);
  v2[4] = sub_20B7D2BE8();
  return sub_20B774410;
}

uint64_t ContactAvatarEntity.$contentIsSensitive.getter()
{
  return sub_20B7D2C18();
}

uint64_t sub_20B7C0350()
{
  return sub_20B7D2998();
}

uint64_t sub_20B7C03C4()
{
  return sub_20B7D2A28();
}

uint64_t sub_20B7C0438()
{
  return sub_20B7D3058();
}

ContactsUICore::ContactLikenessKindAppEnum_optional __swiftcall ContactLikenessKindAppEnum.init(rawValue:)(Swift::String rawValue)
{
  uint64_t v2 = v1;
  unint64_t v3 = sub_20B7D3F88();
  result.value = swift_bridgeObjectRelease();
  char v5 = 4;
  if (v3 < 4) {
    char v5 = v3;
  }
  char *v2 = v5;
  return result;
}

uint64_t ContactLikenessKindAppEnum.rawValue.getter()
{
  uint64_t result = 0x7465756F686C6973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x6D6172676F6E6F6DLL;
      break;
    case 2:
      uint64_t result = 0x6D49726174617661;
      break;
    case 3:
      uint64_t result = 0x726574736F70;
      break;
    default:
      return result;
  }
  return result;
}

ContactsUICore::ContactLikenessKindAppEnum_optional sub_20B7C059C(Swift::String *a1)
{
  return ContactLikenessKindAppEnum.init(rawValue:)(*a1);
}

void sub_20B7C05A8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xEA00000000006574;
  uint64_t v3 = 0x7465756F686C6973;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6D6172676F6E6F6DLL;
      goto LABEL_3;
    case 2:
      *a1 = 0x6D49726174617661;
      a1[1] = 0xEB00000000656761;
      break;
    case 3:
      *a1 = 0x726574736F70;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

uint64_t sub_20B7C064C(unsigned __int8 *a1, char *a2)
{
  return sub_20B7B8740(*a1, *a2) & 1;
}

uint64_t sub_20B7C0670()
{
  return sub_20B7D40A8();
}

uint64_t sub_20B7C0754()
{
  sub_20B7D3B58();
  return swift_bridgeObjectRelease();
}

uint64_t sub_20B7C0820()
{
  return sub_20B7D40A8();
}

uint64_t static ContactLikenessKindAppEnum.typeDisplayRepresentation.getter()
{
  return sub_20B7D3018();
}

uint64_t sub_20B7C0938()
{
  return sub_20B7D3018();
}

uint64_t sub_20B7C0970()
{
  return sub_20B7D2A18();
}

uint64_t sub_20B7C09B8()
{
  return sub_20B7D2FE8();
}

void *static ContactLikenessKindAppEnum.allCases.getter()
{
  return &unk_26BFC5C18;
}

void sub_20B7C0A04(void *a1@<X8>)
{
  *a1 = &unk_26BFC5C40;
}

unint64_t sub_20B7C0A14()
{
  unint64_t result = qword_26769C0F8;
  if (!qword_26769C0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C0F8);
  }
  return result;
}

uint64_t type metadata accessor for ContactAvatarFetchResultEntity(uint64_t a1)
{
  return sub_20B77D91C(a1, (uint64_t *)&unk_26769C2B0);
}

uint64_t ContactLikenessKindAppEnum.description.getter()
{
  return 46;
}

uint64_t sub_20B7C0B64(void *a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C358);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B7C3F50();
  sub_20B7D40C8();
  v9[1] = a2;
  type metadata accessor for CNContactType(0);
  sub_20B7C1B6C((unint64_t *)&unk_26769C368, type metadata accessor for CNContactType);
  sub_20B7D3FE8();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_20B7C0CE0()
{
  return 46;
}

uint64_t sub_20B7C0DC4()
{
  return 0x54746361746E6F63;
}

uint64_t sub_20B7C0DE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x54746361746E6F63 && a2 == 0xEB00000000657079)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20B7D4018();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20B7C0E94(uint64_t a1)
{
  unint64_t v2 = sub_20B7C3F50();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B7C0ED0(uint64_t a1)
{
  unint64_t v2 = sub_20B7C3F50();
  return MEMORY[0x270FA00B8](a1, v2);
}

void *sub_20B7C0F0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_20B7C3FA4(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_20B7C0F38(void *a1)
{
  return sub_20B7C0B64(a1, *v1);
}

uint64_t sub_20B7C0F54()
{
  return sub_20B7D3C08();
}

uint64_t sub_20B7C0FE4()
{
  return sub_20B7D3BF8();
}

uint64_t sub_20B7C1064()
{
  return 1954047348;
}

uint64_t sub_20B7C1074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 1954047348 && a2 == 0xE400000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_20B7D4018();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_20B7C10FC(uint64_t a1)
{
  unint64_t v2 = sub_20B7C3EFC();
  return MEMORY[0x270FA00B0](a1, v2);
}

uint64_t sub_20B7C1138(uint64_t a1)
{
  unint64_t v2 = sub_20B7C3EFC();
  return MEMORY[0x270FA00B8](a1, v2);
}

uint64_t sub_20B7C1174@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C398);
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B7C3EFC();
  sub_20B7D40B8();
  if (v2) {
    return __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  uint64_t v9 = sub_20B7D3FA8();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t result = __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  *a2 = v9;
  a2[1] = v11;
  return result;
}

uint64_t sub_20B7C12EC(void *a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C348);
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B7C3EFC();
  sub_20B7D40C8();
  sub_20B7D3FD8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_20B7C1424(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_20B76B9E8(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[5 * v8 + 4];
  if (a1 + 32 < v9 + 40 * v2 && v9 < a1 + 32 + 40 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    void v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7C1580(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x210537C30](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_20B7C1E40(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_20B7D3C58();
}

uint64_t sub_20B7C174C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *v1;
  int64_t v4 = *(void *)(*v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v22 = v4 + v2;
  }
  else {
    int64_t v22 = v4;
  }
  unint64_t v3 = sub_20B76BC34(isUniquelyReferenced_nonNull_native, v22, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v3 + 16);
  uint64_t v9 = (*(void *)(v3 + 24) >> 1) - v8;
  uint64_t v10 = *(void *)(type metadata accessor for ContactLikeness(0) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  if (v9 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  unint64_t v13 = v3 + v12 + v11 * v8;
  unint64_t v14 = a1 + v12;
  uint64_t v15 = v11 * v2;
  unint64_t v16 = v13 + v15;
  unint64_t v17 = v14 + v15;
  if (v14 < v16 && v13 < v17) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v1 = v3;
    return result;
  }
  uint64_t v19 = *(void *)(v3 + 16);
  BOOL v20 = __OFADD__(v19, v2);
  uint64_t v21 = v19 + v2;
  if (!v20)
  {
    *(void *)(v3 + 16) = v21;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7C18F0(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  unint64_t v4 = *v1;
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    uint64_t v6 = v5 + v3;
    if (!__OFADD__(v5, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v5 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v6 = v5 + v3;
  if (__OFADD__(v5, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v4 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v4;
  uint64_t v5 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v4 & 0x8000000000000000) == 0 && (v4 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
    if (v6 <= *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v5 = 1;
  }
  if (v4 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v6) {
      uint64_t v9 = v6;
    }
    swift_bridgeObjectRetain();
    unint64_t v4 = MEMORY[0x210537C30](v5, v9, 1, v4);
    swift_bridgeObjectRelease();
    *uint64_t v1 = v4;
    uint64_t v8 = v4 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_20B7C2054(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_20B7D3C58();
}

uint64_t sub_20B7C1ABC()
{
  swift_release();
  swift_release();
  swift_release();

  return MEMORY[0x270FA0238](v0, 56, 7);
}

uint64_t sub_20B7C1B0C(void *a1, uint64_t a2)
{
  return sub_20B7BAD5C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void *)(v2 + 32), *(uint64_t **)(v2 + 40), *(unint64_t **)(v2 + 48));
}

uint64_t sub_20B7C1B1C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_20B7C1B2C(uint64_t a1, uint64_t a2)
{
  return sub_20B78D0C4(a1, a2, *(uint64_t (**)(void))(v2 + 16));
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return sub_20B7D2DA8();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t type metadata accessor for ContactAvatarEntity(uint64_t a1)
{
  return sub_20B77D91C(a1, qword_26769C2C0);
}

uint64_t sub_20B7C1B6C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B7C1BB4(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C120);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t (*sub_20B7C1C14(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_20B7C1D30(v6, a2, a3);
  return sub_20B7C1C7C;
}

uint64_t (*sub_20B7C1C80(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_20B7C1DB8(v6, a2, a3);
  return sub_20B7C1C7C;
}

void sub_20B7C1CE8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_20B7C1D30(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x210537C20](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = sub_20B7D2DA8();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_20B7C1DB0;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B7C1DB0()
{
  return swift_release();
}

uint64_t (*sub_20B7C1DB8(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = (uint64_t *)result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    uint64_t v4 = MEMORY[0x210537C20](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    uint64_t v4 = swift_unknownObjectRetain();
LABEL_5:
    *uint64_t v3 = v4;
    return sub_20B7C1E38;
  }
  __break(1u);
  return result;
}

uint64_t sub_20B7C1E38()
{
  return swift_unknownObjectRelease();
}

uint64_t sub_20B7C1E40(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20B7B29B8(&qword_26769C380, &qword_26769C378);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26769C378);
          uint64_t v12 = sub_20B7C1C14(v16, i, a3);
          uint64_t v14 = *v13;
          sub_20B7D2DA8();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B350);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

uint64_t sub_20B7C2054(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_20B7D3F38();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_20B7B29B8(&qword_26769C338, &qword_26769C330);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_26769C330);
          uint64_t v12 = sub_20B7C1C80(v16, i, a3);
          uint64_t v14 = *v13;
          swift_unknownObjectRetain();
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769B340);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_20B7D3F78();
  __break(1u);
  return result;
}

unint64_t _s14ContactsUICore26ContactLikenessKindAppEnumO26caseDisplayRepresentationsSDyAC0F7Intents0I14RepresentationVGvgZ_0()
{
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C300);
  uint64_t v0 = *(void *)(__swift_instantiateConcreteTypeFromMangledName(&qword_26769B598) - 8);
  uint64_t v1 = *(void *)(v0 + 72);
  unint64_t v2 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_20B7DE330;
  uint64_t v4 = (unsigned char *)(v3 + v2);
  *uint64_t v4 = 0;
  sub_20B7D2F38();
  v4[v1] = 1;
  sub_20B7D2F38();
  v4[2 * v1] = 2;
  sub_20B7D2F38();
  v4[3 * v1] = 3;
  sub_20B7D2F38();
  return sub_20B7793C0(v3);
}

unint64_t sub_20B7C23E8()
{
  unint64_t result = qword_26769C158;
  if (!qword_26769C158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C158);
  }
  return result;
}

unint64_t sub_20B7C2440()
{
  unint64_t result = qword_26769C160;
  if (!qword_26769C160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C160);
  }
  return result;
}

unint64_t sub_20B7C2498()
{
  unint64_t result = qword_26769C168;
  if (!qword_26769C168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C168);
  }
  return result;
}

uint64_t sub_20B7C24EC()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_20B7C2520(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20B7C2E5C(a1, a2, a3, (void (*)(void))sub_20B7C23E8);
}

uint64_t sub_20B7C2540()
{
  return sub_20B7C1B6C(&qword_26769C178, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2588()
{
  return sub_20B7C1B6C(&qword_26769C180, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C25D0()
{
  return sub_20B7C1B6C(&qword_26769C188, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2618()
{
  return sub_20B7C1B6C(&qword_26769C190, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2660()
{
  return sub_20B78EC20(&qword_26769C198, &qword_26769C1A0);
}

uint64_t sub_20B7C2690()
{
  return sub_20B7C1B6C(&qword_26769C1A8, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C26D8()
{
  return sub_20B7C1B6C(&qword_26769C1B0, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2720()
{
  return sub_20B7C1B6C(&qword_26769C118, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2768()
{
  return sub_20B7C1B6C(&qword_26769C1B8, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C27B0()
{
  return sub_20B7C27D8((unint64_t *)&qword_26769C1C0);
}

uint64_t sub_20B7C27D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_20B7D3508();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_20B7C281C()
{
  return sub_20B78EC20(&qword_26769C1C8, &qword_26769C1D0);
}

uint64_t sub_20B7C284C()
{
  return sub_20B7C1B6C(&qword_26769C1D8, (void (*)(uint64_t))type metadata accessor for ContactAvatarFetchResultEntity);
}

uint64_t sub_20B7C2894()
{
  return sub_20B7C1B6C(&qword_26769C110, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C28DC()
{
  return sub_20B7C1B6C(&qword_26769C1E0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C2924()
{
  return sub_20B7C1B6C(&qword_26769C1E8, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C296C()
{
  return sub_20B7C1B6C(&qword_26769C1F0, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C29B4()
{
  return sub_20B78EC20(&qword_26769C1F8, &qword_26769C200);
}

uint64_t sub_20B7C29E4()
{
  return sub_20B7C1B6C(&qword_26769C208, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C2A2C()
{
  return sub_20B7C1B6C(&qword_26769C210, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C2A74()
{
  return sub_20B7C1B6C(&qword_26769C218, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C2ABC()
{
  return sub_20B7C1B6C(&qword_26769C220, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

uint64_t sub_20B7C2B04()
{
  return sub_20B78EC20(&qword_26769C228, &qword_26769C230);
}

uint64_t sub_20B7C2B34()
{
  return sub_20B7C1B6C(&qword_26769C238, (void (*)(uint64_t))type metadata accessor for ContactAvatarEntity);
}

unint64_t sub_20B7C2B80()
{
  unint64_t result = qword_26769C240;
  if (!qword_26769C240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C240);
  }
  return result;
}

unint64_t sub_20B7C2BD8()
{
  unint64_t result = qword_26769C248;
  if (!qword_26769C248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C248);
  }
  return result;
}

unint64_t sub_20B7C2C30()
{
  unint64_t result = qword_26769C250;
  if (!qword_26769C250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C250);
  }
  return result;
}

unint64_t sub_20B7C2C88()
{
  unint64_t result = qword_26769C258;
  if (!qword_26769C258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C258);
  }
  return result;
}

unint64_t sub_20B7C2CE0()
{
  unint64_t result = qword_26769C260;
  if (!qword_26769C260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C260);
  }
  return result;
}

unint64_t sub_20B7C2D38()
{
  unint64_t result = qword_26769C268;
  if (!qword_26769C268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C268);
  }
  return result;
}

unint64_t sub_20B7C2D90()
{
  unint64_t result = qword_26769C270;
  if (!qword_26769C270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C270);
  }
  return result;
}

unint64_t sub_20B7C2DE8()
{
  unint64_t result = qword_26769C278;
  if (!qword_26769C278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C278);
  }
  return result;
}

uint64_t sub_20B7C2E3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_20B7C2E5C(a1, a2, a3, (void (*)(void))sub_20B7C0A14);
}

uint64_t sub_20B7C2E5C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_20B7C2EA8()
{
  unint64_t result = qword_26769C280;
  if (!qword_26769C280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C280);
  }
  return result;
}

unint64_t sub_20B7C2F00()
{
  unint64_t result = qword_26769C288;
  if (!qword_26769C288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C288);
  }
  return result;
}

unint64_t sub_20B7C2F58()
{
  unint64_t result = qword_26769C290;
  if (!qword_26769C290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C290);
  }
  return result;
}

uint64_t sub_20B7C2FAC()
{
  return sub_20B7B29B8(&qword_26769C298, (uint64_t *)&unk_26769C2A0);
}

uint64_t sub_20B7C2FE4@<X0>(void *a1@<X8>)
{
  type metadata accessor for ContactAvatarFetchResultEntity(0);
  uint64_t result = sub_20B7D2BF8();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C303C@<X0>(void *a1@<X8>)
{
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t result = sub_20B7D2BF8();
  *a1 = v3;
  a1[1] = v4;
  return result;
}

uint64_t sub_20B7C3094()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B7C30DC()
{
  return sub_20B7D2BF8();
}

uint64_t sub_20B7C3124@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t result = sub_20B7D2BF8();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C3178()
{
  return sub_20B7D2C08();
}

uint64_t sub_20B7C31C8@<X0>(unsigned char *a1@<X8>)
{
  type metadata accessor for ContactAvatarEntity(0);
  uint64_t result = sub_20B7D2BF8();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C321C()
{
  return sub_20B7D2C08();
}

ValueMetadata *type metadata accessor for FetchContactAvatarIntent()
{
  return &type metadata for FetchContactAvatarIntent;
}

uint64_t getEnumTagSinglePayload for ContactAvatarFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, j____swift_get_extra_inhabitant_indexTm);
}

uint64_t storeEnumTagSinglePayload for ContactAvatarFetchResultEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, j____swift_store_extra_inhabitant_indexTm);
}

uint64_t *initializeBufferWithCopyOfBuffer for ContactAvatarEntity(uint64_t *a1, uint64_t *a2, int *a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    uint64_t v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_20B7D3508();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(v4, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)v4 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)v4 + v_Block_object_dispose(&a9, 8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[8];
    *(uint64_t *)((char *)v4 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    *(uint64_t *)((char *)v4 + v9) = *(uint64_t *)((char *)a2 + v9);
    *(uint64_t *)((char *)v4 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
  }
  sub_20B7D2DA8();
  return v4;
}

uint64_t destroy for ContactAvatarEntity(uint64_t a1)
{
  uint64_t v2 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t initializeWithCopy for ContactAvatarEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v_Block_object_dispose(&a9, 8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

uint64_t assignWithCopy for ContactAvatarEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  sub_20B7D2DA8();
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  sub_20B7D2DA8();
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  sub_20B7D2DA8();
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  sub_20B7D2DA8();
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for ContactAvatarEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  *(void *)(a1 + v_Block_object_dispose(&a9, 8) = *(void *)(a2 + v8);
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ContactAvatarEntity(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_20B7D3508();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_release();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_release();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_release();
  *(void *)(a1 + a3[8]) = *(void *)(a2 + a3[8]);
  swift_release();
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ContactAvatarEntity(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_20B7C37C4);
}

uint64_t __swift_get_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_20B7D3508();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ContactAvatarEntity(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_20B7C389C);
}

uint64_t __swift_store_extra_inhabitant_indexTm(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_20B7D3508();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_20B7C395C()
{
  uint64_t result = sub_20B7D3508();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for ContactLikenessKindAppEnum(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *uint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x20B7C3AC8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ContactLikenessKindAppEnum()
{
  return &type metadata for ContactLikenessKindAppEnum;
}

uint64_t sub_20B7C3B00()
{
  return sub_20B78EC20(&qword_26769C2D8, &qword_26769C2E0);
}

uint64_t sub_20B7C3B30(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactAvatarEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B7C3B94(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ContactAvatarEntity(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_20B7C3BF8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unint64_t sub_20B7C3C58()
{
  unint64_t result = qword_26769C310;
  if (!qword_26769C310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C310);
  }
  return result;
}

unint64_t sub_20B7C3CAC()
{
  unint64_t result = qword_26769C318;
  if (!qword_26769C318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C318);
  }
  return result;
}

unint64_t sub_20B7C3D00()
{
  unint64_t result = qword_26769C328;
  if (!qword_26769C328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C328);
  }
  return result;
}

unint64_t sub_20B7C3D54()
{
  unint64_t result = qword_26769C340;
  if (!qword_26769C340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C340);
  }
  return result;
}

ValueMetadata *_s17SilhouetteWrapperVMa()
{
  return &_s17SilhouetteWrapperVN;
}

void *_s15MonogramWrapperVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15MonogramWrapperVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s15MonogramWrapperVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s15MonogramWrapperVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15MonogramWrapperVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s15MonogramWrapperVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + _Block_object_dispose(&a9, 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + _Block_object_dispose(&a9, 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s15MonogramWrapperVMa()
{
  return &_s15MonogramWrapperVN;
}

unint64_t sub_20B7C3EFC()
{
  unint64_t result = qword_26769C350;
  if (!qword_26769C350)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C350);
  }
  return result;
}

unint64_t sub_20B7C3F50()
{
  unint64_t result = qword_26769C360;
  if (!qword_26769C360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C360);
  }
  return result;
}

void *sub_20B7C3FA4(void *a1)
{
  uint64_t v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C388);
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unsigned int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_20B7C3F50();
  sub_20B7D40B8();
  if (v1)
  {
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  else
  {
    type metadata accessor for CNContactType(0);
    sub_20B7C1B6C(&qword_26769C390, type metadata accessor for CNContactType);
    sub_20B7D3FB8();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v7 = (void *)v9[1];
    __swift_destroy_boxed_opaque_existential_0((uint64_t)a1);
  }
  return v7;
}

ValueMetadata *_s17SilhouetteWrapperV10CodingKeysOMa()
{
  return &_s17SilhouetteWrapperV10CodingKeysON;
}

unsigned char *_s17SilhouetteWrapperV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x20B7C41FCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s15MonogramWrapperV10CodingKeysOMa()
{
  return &_s15MonogramWrapperV10CodingKeysON;
}

unint64_t sub_20B7C4238()
{
  unint64_t result = qword_26769C3A0;
  if (!qword_26769C3A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3A0);
  }
  return result;
}

unint64_t sub_20B7C4290()
{
  unint64_t result = qword_26769C3A8;
  if (!qword_26769C3A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3A8);
  }
  return result;
}

unint64_t sub_20B7C42E8()
{
  unint64_t result = qword_26769C3B0;
  if (!qword_26769C3B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3B0);
  }
  return result;
}

unint64_t sub_20B7C4340()
{
  unint64_t result = qword_26769C3B8;
  if (!qword_26769C3B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3B8);
  }
  return result;
}

unint64_t sub_20B7C4398()
{
  unint64_t result = qword_26769C3C0;
  if (!qword_26769C3C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3C0);
  }
  return result;
}

unint64_t sub_20B7C43F0()
{
  unint64_t result = qword_26769C3C8;
  if (!qword_26769C3C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C3C8);
  }
  return result;
}

uint64_t UpdateContactIntent.init()@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v187 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BC40);
  strcpy(v230, "entityProvider");
  v230[15] = -18;
  sub_20B7D3E48();
  sub_20B7D2A08();
  sub_20B7D29F8();
  uint64_t v186 = sub_20B7D29D8();
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BFC8);
  uint64_t v218 = sub_20B7D33C8();
  uint64_t v220 = *(void *)(v218 - 8);
  uint64_t v204 = *(void *)(v220 + 64);
  MEMORY[0x270FA5388](v218);
  unint64_t v199 = (v1 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v2 = sub_20B7D3AE8();
  uint64_t v216 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v198 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  uint64_t v197 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v219 = (v5 + 15) & 0xFFFFFFFFFFFFFFF0;
  sub_20B7D3538();
  uint64_t v6 = sub_20B7D33B8();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v215 = v8;
  unint64_t v194 = (v8 + 15) & 0xFFFFFFFFFFFFFFF0;
  unint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v7 + 104);
  unsigned int v221 = *MEMORY[0x263F06D10];
  uint64_t v9 = v221;
  uint64_t v222 = v6;
  v10((char *)&v176 - v194, v221, v6);
  uint64_t v217 = v7 + 104;
  uint64_t v196 = v10;
  sub_20B7D33D8();
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  uint64_t v210 = *(void *)(*(void *)(v11 - 8) + 64);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  unint64_t v200 = (v13 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v14 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v15);
  uint64_t v16 = sub_20B7D3538();
  MEMORY[0x270FA5388](v16);
  v10((char *)&v176 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v9, v6);
  sub_20B7D33D8();
  unint64_t v17 = *(void (**)(char *, void, uint64_t, uint64_t))(v220 + 56);
  v220 += 56;
  uint64_t v214 = v17;
  v17(v14, 0, 1, v218);
  uint64_t v229 = 0;
  long long v227 = 0u;
  long long v228 = 0u;
  long long v225 = 0u;
  long long v226 = 0u;
  long long v223 = 0u;
  long long v224 = 0u;
  uint64_t v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B3F0);
  uint64_t v19 = *(void *)(*(void *)(v18 - 8) + 64);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v206 = v19;
  unint64_t v211 = (v19 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v20 = sub_20B7D2B18();
  uint64_t v21 = *(void *)(v20 - 8);
  int64_t v22 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  uint64_t v23 = v21 + 56;
  uint64_t v209 = v20;
  uint64_t v24 = v22((char *)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v20);
  uint64_t v201 = v23;
  uint64_t v202 = v22;
  MEMORY[0x270FA5388](v24);
  v22((char *)&v176 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), 1, 1, v20);
  uint64_t v203 = sub_20B7D2FD8();
  uint64_t v212 = *(void *)(*(void *)(v203 - 8) + 64);
  MEMORY[0x270FA5388](v203);
  unint64_t v213 = (v25 + 15) & 0xFFFFFFFFFFFFFFF0;
  unsigned int v207 = *MEMORY[0x263EFBDC0];
  unint64_t v27 = *(void (**)(void))(v26 + 104);
  uint64_t v205 = v26 + 104;
  unint64_t v208 = (void (*)(char *, void, uint64_t))v27;
  v27((char *)&v176 - v213);
  sub_20B7969C8();
  uint64_t v185 = sub_20B7D2D08();
  uint64_t v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B850);
  uint64_t v28 = MEMORY[0x270FA5388](v195);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v28);
  uint64_t v29 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v29);
  uint64_t v30 = sub_20B7D3538();
  MEMORY[0x270FA5388](v30);
  unint64_t v31 = v194;
  uint64_t v32 = v221;
  uint64_t v33 = v196;
  v196((char *)&v176 - v194, v221, v222);
  uint64_t v34 = sub_20B7D33D8();
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v36 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v37);
  uint64_t v38 = sub_20B7D3538();
  MEMORY[0x270FA5388](v38);
  v33((char *)&v176 - v31, v32, v222);
  sub_20B7D33D8();
  v214(v36, 0, 1, v218);
  long long v223 = 0uLL;
  uint64_t v39 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769B710);
  uint64_t v192 = *(void *)(*(void *)(v39 - 8) + 64);
  MEMORY[0x270FA5388](v39 - 8);
  unint64_t v193 = (v40 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v41 = (char *)&v176 - v193;
  uint64_t v190 = sub_20B7D3A78();
  uint64_t v42 = *(void *)(v190 - 8);
  uint64_t v189 = *(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v42 + 56);
  uint64_t v191 = v42 + 56;
  uint64_t v43 = v189(v41, 1, 1, v190);
  MEMORY[0x270FA5388](v43);
  uint64_t v44 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v44);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v184 = sub_20B7D2D48();
  uint64_t v45 = MEMORY[0x270FA5388](v184);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v45);
  uint64_t v46 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v46);
  uint64_t v47 = sub_20B7D3538();
  MEMORY[0x270FA5388](v47);
  uint64_t v48 = v222;
  v33((char *)&v176 - v194, v221, v222);
  uint64_t v49 = sub_20B7D33D8();
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  uint64_t v183 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v50);
  uint64_t v51 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v51);
  uint64_t v52 = sub_20B7D3538();
  MEMORY[0x270FA5388](v52);
  unint64_t v53 = v194;
  uint64_t v54 = v221;
  v33((char *)&v176 - v194, v221, v48);
  unint64_t v55 = v183;
  sub_20B7D33D8();
  uint64_t v56 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v55, 0, 1, v218);
  MEMORY[0x270FA5388](v56);
  long long v223 = 0uLL;
  uint64_t v57 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v57);
  uint64_t v58 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v58);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v183 = (char *)sub_20B7D2D48();
  uint64_t v59 = MEMORY[0x270FA5388](v183);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v59);
  uint64_t v60 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v60);
  uint64_t v61 = sub_20B7D3538();
  MEMORY[0x270FA5388](v61);
  v196((char *)&v176 - v53, v54, v222);
  uint64_t v62 = sub_20B7D33D8();
  uint64_t v63 = MEMORY[0x270FA5388](v62);
  uint64_t v64 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v63);
  uint64_t v65 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v65);
  uint64_t v66 = sub_20B7D3538();
  MEMORY[0x270FA5388](v66);
  uint64_t v67 = (char *)&v176 - v53;
  uint64_t v68 = v221;
  uint64_t v69 = v222;
  v196(v67, v221, v222);
  sub_20B7D33D8();
  uint64_t v70 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v64, 0, 1, v218);
  MEMORY[0x270FA5388](v70);
  long long v223 = 0uLL;
  uint64_t v71 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v71);
  uint64_t v72 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v72);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v182 = sub_20B7D2D48();
  uint64_t v73 = MEMORY[0x270FA5388](v182);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v73);
  uint64_t v74 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v74);
  uint64_t v75 = sub_20B7D3538();
  MEMORY[0x270FA5388](v75);
  unint64_t v76 = v194;
  uint64_t v77 = v69;
  unint64_t v78 = v196;
  v196((char *)&v176 - v194, v68, v77);
  uint64_t v79 = sub_20B7D33D8();
  uint64_t v80 = MEMORY[0x270FA5388](v79);
  uint64_t v81 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v80);
  uint64_t v82 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v82);
  uint64_t v83 = sub_20B7D3538();
  MEMORY[0x270FA5388](v83);
  v78((char *)&v176 - v76, v221, v222);
  sub_20B7D33D8();
  uint64_t v84 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v81, 0, 1, v218);
  MEMORY[0x270FA5388](v84);
  long long v223 = 0uLL;
  uint64_t v85 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v85);
  uint64_t v86 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v86);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v181 = sub_20B7D2D48();
  uint64_t v87 = MEMORY[0x270FA5388](v181);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v87);
  uint64_t v88 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v88);
  uint64_t v89 = sub_20B7D3538();
  MEMORY[0x270FA5388](v89);
  uint64_t v90 = v221;
  uint64_t v91 = v222;
  v78((char *)&v176 - v194, v221, v222);
  uint64_t v92 = sub_20B7D33D8();
  uint64_t v93 = MEMORY[0x270FA5388](v92);
  uint64_t v180 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v93);
  uint64_t v94 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v94);
  uint64_t v95 = sub_20B7D3538();
  MEMORY[0x270FA5388](v95);
  v78((char *)&v176 - v194, v90, v91);
  id v96 = v78;
  uint64_t v97 = v180;
  sub_20B7D33D8();
  uint64_t v98 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v97, 0, 1, v218);
  MEMORY[0x270FA5388](v98);
  long long v223 = 0uLL;
  uint64_t v99 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v99);
  uint64_t v100 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v100);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v180 = (char *)sub_20B7D2D48();
  uint64_t v101 = MEMORY[0x270FA5388](v180);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v101);
  uint64_t v102 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v102);
  uint64_t v103 = sub_20B7D3538();
  MEMORY[0x270FA5388](v103);
  unint64_t v104 = v194;
  uint64_t v105 = v222;
  v78((char *)&v176 - v194, v221, v222);
  uint64_t v106 = sub_20B7D33D8();
  uint64_t v107 = MEMORY[0x270FA5388](v106);
  uint64_t v179 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v107);
  uint64_t v108 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v108);
  uint64_t v109 = sub_20B7D3538();
  MEMORY[0x270FA5388](v109);
  uint64_t v110 = v221;
  v96((char *)&v176 - v104, v221, v105);
  char v111 = v179;
  sub_20B7D33D8();
  uint64_t v112 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v111, 0, 1, v218);
  MEMORY[0x270FA5388](v112);
  long long v223 = 0uLL;
  uint64_t v113 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v113);
  uint64_t v114 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v114);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v179 = (char *)sub_20B7D2D48();
  uint64_t v115 = MEMORY[0x270FA5388](v179);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v115);
  uint64_t v116 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v116);
  uint64_t v117 = sub_20B7D3538();
  MEMORY[0x270FA5388](v117);
  unint64_t v118 = v194;
  unint64_t v119 = v196;
  v196((char *)&v176 - v194, v110, v222);
  uint64_t v120 = sub_20B7D33D8();
  uint64_t v121 = MEMORY[0x270FA5388](v120);
  uint64_t v178 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v121);
  uint64_t v122 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v122);
  uint64_t v123 = sub_20B7D3538();
  MEMORY[0x270FA5388](v123);
  uint64_t v124 = v222;
  v119((char *)&v176 - v118, v221, v222);
  uint64_t v125 = v178;
  sub_20B7D33D8();
  uint64_t v126 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v125, 0, 1, v218);
  MEMORY[0x270FA5388](v126);
  long long v223 = 0uLL;
  uint64_t v127 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v127);
  uint64_t v128 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v128);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v178 = (char *)sub_20B7D2D48();
  uint64_t v129 = MEMORY[0x270FA5388](v178);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v129);
  uint64_t v130 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v130);
  uint64_t v131 = sub_20B7D3538();
  MEMORY[0x270FA5388](v131);
  unint64_t v132 = v194;
  uint64_t v133 = v221;
  v196((char *)&v176 - v194, v221, v124);
  uint64_t v134 = sub_20B7D33D8();
  uint64_t v135 = MEMORY[0x270FA5388](v134);
  id v177 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v135);
  uint64_t v136 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v136);
  uint64_t v137 = sub_20B7D3538();
  MEMORY[0x270FA5388](v137);
  v196((char *)&v176 - v132, v133, v222);
  id v138 = v177;
  sub_20B7D33D8();
  uint64_t v139 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v138, 0, 1, v218);
  MEMORY[0x270FA5388](v139);
  long long v223 = 0uLL;
  uint64_t v140 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v140);
  uint64_t v141 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v141);
  v208((char *)&v176 - v213, v207, v203);
  id v177 = (char *)sub_20B7D2D48();
  uint64_t v142 = MEMORY[0x270FA5388](v177);
  v188 = (char *)&v176 - v199;
  MEMORY[0x270FA5388](v142);
  uint64_t v143 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v143);
  uint64_t v144 = sub_20B7D3538();
  MEMORY[0x270FA5388](v144);
  uint64_t v145 = v221;
  uint64_t v146 = v222;
  unint64_t v147 = v196;
  v196((char *)&v176 - v132, v221, v222);
  uint64_t v148 = sub_20B7D33D8();
  uint64_t v149 = MEMORY[0x270FA5388](v148);
  id v176 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v149);
  uint64_t v150 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v150);
  uint64_t v151 = sub_20B7D3538();
  MEMORY[0x270FA5388](v151);
  v147((char *)&v176 - v132, v145, v146);
  uint64_t v152 = v176;
  sub_20B7D33D8();
  uint64_t v153 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v152, 0, 1, v218);
  MEMORY[0x270FA5388](v153);
  long long v223 = 0uLL;
  uint64_t v154 = v189((char *)&v176 - v193, 1, 1, v190);
  MEMORY[0x270FA5388](v154);
  uint64_t v155 = v202((char *)&v176 - v211, 1, 1, v209);
  MEMORY[0x270FA5388](v155);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t v195 = sub_20B7D2D48();
  unint64_t v193 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C400);
  uint64_t v156 = MEMORY[0x270FA5388](v193);
  MEMORY[0x270FA5388](v156);
  uint64_t v157 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v157);
  uint64_t v158 = sub_20B7D3538();
  MEMORY[0x270FA5388](v158);
  v196((char *)&v176 - v132, v221, v222);
  uint64_t v159 = sub_20B7D33D8();
  uint64_t v160 = MEMORY[0x270FA5388](v159);
  uint64_t v161 = (char *)&v176 - v200;
  MEMORY[0x270FA5388](v160);
  uint64_t v162 = sub_20B7D3A88();
  MEMORY[0x270FA5388](v162);
  uint64_t v163 = sub_20B7D3538();
  MEMORY[0x270FA5388](v163);
  v196((char *)&v176 - v132, v221, v222);
  sub_20B7D33D8();
  uint64_t v164 = ((uint64_t (*)(char *, void, uint64_t, uint64_t))v214)(v161, 0, 1, v218);
  MEMORY[0x270FA5388](v164);
  v202((char *)&v176 - v211, 1, 1, v209);
  uint64_t v165 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C408);
  MEMORY[0x270FA5388](v165);
  uint64_t v168 = (*(uint64_t (**)(char *, void))(v167 + 104))((char *)&v176 - ((v166 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263EFB998]);
  MEMORY[0x270FA5388](v168);
  v208((char *)&v176 - v213, v207, v203);
  uint64_t result = sub_20B7D2D28();
  id v170 = v187;
  uint64_t v171 = v185;
  *uint64_t v187 = v186;
  v170[1] = v171;
  unint64_t v172 = v183;
  v170[2] = v184;
  v170[3] = (uint64_t)v172;
  uint64_t v173 = v181;
  v170[4] = v182;
  v170[5] = v173;
  uint64_t v174 = v179;
  v170[6] = (uint64_t)v180;
  v170[7] = (uint64_t)v174;
  uint64_t v175 = v177;
  v170[8] = (uint64_t)v178;
  v170[9] = (uint64_t)v175;
  v170[10] = v195;
  v170[11] = result;
  return result;
}

uint64_t UpdateContactIntent.givenName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C7384@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C74D4()
{
  return swift_release();
}

uint64_t UpdateContactIntent.givenName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.target.getter()
{
  return sub_20B7D2CB8();
}

double sub_20B7C7680@<D0>(uint64_t a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(_OWORD *)a1 = v3;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 40) = v6;
  *(void *)(a1 + 56) = v7;
  *(_OWORD *)(a1 + 64) = v8;
  *(void *)(a1 + 80) = v9;
  double result = *(double *)&v10;
  *(_OWORD *)(a1 + 8_Block_object_dispose(&a9, 8) = v10;
  return result;
}

uint64_t sub_20B7C7808(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v2 = v1;
  swift_bridgeObjectRetain();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CC8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t UpdateContactIntent.target.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.familyName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C7A98@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C7BE8()
{
  return swift_release();
}

uint64_t UpdateContactIntent.familyName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.nameSuffix.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C7DA4@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C7EF0()
{
  return swift_release();
}

uint64_t UpdateContactIntent.nameSuffix.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.namePrefix.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C80AC@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C81F8()
{
  return swift_release();
}

uint64_t UpdateContactIntent.namePrefix.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.label.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C83B4@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C84FC()
{
  return swift_release();
}

uint64_t UpdateContactIntent.label.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.phoneNumber.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C86B4@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C8804()
{
  return swift_release();
}

uint64_t UpdateContactIntent.phoneNumber.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.emailAddress.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C89BC@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C8B0C()
{
  return swift_release();
}

uint64_t UpdateContactIntent.emailAddress.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.postalAddress.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C8CC4@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C8E14()
{
  return swift_release();
}

uint64_t UpdateContactIntent.postalAddress.setter()
{
  return sub_20B7D2CC8();
}

uint64_t UpdateContactIntent.birthday.getter()
{
  return sub_20B7D2CB8();
}

uint64_t sub_20B7C8FC4()
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_20B7C9114(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  MEMORY[0x270FA5388](v4 - 8);
  long long v6 = (char *)v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_20B7729FC(a1, (uint64_t)v6);
  uint64_t v8 = *a2;
  v13[8] = a2[1];
  v13[9] = v8;
  uint64_t v9 = a2[2];
  void v13[6] = a2[4];
  v13[7] = v9;
  uint64_t v10 = a2[7];
  v13[1] = a2[6];
  void v13[2] = v10;
  uint64_t v11 = a2[9];
  v13[3] = a2[8];
  v13[4] = v11;
  v13[5] = a2[10];
  MEMORY[0x270FA5388](v7);
  sub_20B7729FC((uint64_t)v6, (uint64_t)v6);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CC8();
  sub_20B793854((uint64_t)v6);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t UpdateContactIntent.birthday.setter(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7729FC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20B7D2CC8();
  return sub_20B793854(a1);
}

uint64_t sub_20B7C9394()
{
  uint64_t v0 = sub_20B7D33C8();
  __swift_allocate_value_buffer(v0, qword_26769C3D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C3D0);
  uint64_t v1 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v1 - 8);
  sub_20B7D3A88();
  uint64_t v2 = sub_20B7D3548();
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7D3538();
  uint64_t v3 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v3);
  (*(void (**)(char *, void))(v5 + 104))((char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), *MEMORY[0x263F06D10]);
  return sub_20B7D33D8();
}

uint64_t static UpdateContactIntent.title.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769B018, MEMORY[0x270FA8BB8], (uint64_t)qword_26769C3D0, a1);
}

uint64_t static UpdateContactIntent.title.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769B018, MEMORY[0x270FA8BB8], (uint64_t)qword_26769C3D0);
}

uint64_t (*static UpdateContactIntent.title.modify())()
{
  if (qword_26769B018 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D33C8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C3D0);
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_20B7C965C()
{
  uint64_t v0 = sub_20B7D2EB8();
  __swift_allocate_value_buffer(v0, qword_26769C3E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C3E8);
  uint64_t v1 = sub_20B7D33C8();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v3 = sub_20B7D3AE8();
  MEMORY[0x270FA5388](v3 - 8);
  sub_20B7D3A88();
  uint64_t v4 = sub_20B7D3548();
  MEMORY[0x270FA5388](v4 - 8);
  sub_20B7D3538();
  uint64_t v5 = sub_20B7D33B8();
  MEMORY[0x270FA5388](v5);
  (*(void (**)(unsigned char *, void))(v7 + 104))(&v11[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)], *MEMORY[0x263F06D10]);
  sub_20B7D33D8();
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769BC50);
  MEMORY[0x270FA5388](v8 - 8);
  (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v2 + 56))(&v11[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)], 1, 1, v1);
  return sub_20B7D2EC8();
}

uint64_t static UpdateContactIntent.description.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_20B78F2E8(&qword_26769B020, MEMORY[0x270FA5E90], (uint64_t)qword_26769C3E8, a1);
}

uint64_t static UpdateContactIntent.description.setter(uint64_t a1)
{
  return sub_20B78F3C4(a1, &qword_26769B020, MEMORY[0x270FA5E90], (uint64_t)qword_26769C3E8);
}

uint64_t (*static UpdateContactIntent.description.modify())()
{
  if (qword_26769B020 != -1) {
    swift_once();
  }
  uint64_t v0 = sub_20B7D2EB8();
  __swift_project_value_buffer(v0, (uint64_t)qword_26769C3E8);
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t static UpdateContactIntent.assistantOnly.getter()
{
  return 1;
}

uint64_t (*UpdateContactIntent.target.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$target.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.label.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$label.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.namePrefix.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$namePrefix.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.givenName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$givenName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t UpdateContactIntent.middleName.getter()
{
  sub_20B7D2CB8();
  return v1;
}

double sub_20B7C9C68@<D0>(_OWORD *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  double result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_20B7C9DB8()
{
  return swift_release();
}

uint64_t UpdateContactIntent.middleName.setter()
{
  return sub_20B7D2CC8();
}

uint64_t (*UpdateContactIntent.middleName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$middleName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.familyName.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$familyName.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.nameSuffix.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$nameSuffix.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.phoneNumber.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$phoneNumber.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.emailAddress.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$emailAddress.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.postalAddress.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$postalAddress.getter()
{
  return sub_20B7D2CD8();
}

uint64_t (*UpdateContactIntent.birthday.modify(void *a1))()
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D2CA8();
  return sub_20B774410;
}

uint64_t UpdateContactIntent.$birthday.getter()
{
  return sub_20B7D2CD8();
}

uint64_t UpdateContactIntent.perform()(uint64_t a1)
{
  *(void *)(v2 + 224) = a1;
  long long v3 = v1[1];
  *(_OWORD *)(v2 + 232) = *v1;
  *(_OWORD *)(v2 + 24_Block_object_dispose(&a9, 8) = v3;
  long long v4 = v1[3];
  *(_OWORD *)(v2 + 264) = v1[2];
  *(_OWORD *)(v2 + 280) = v4;
  long long v5 = v1[5];
  *(_OWORD *)(v2 + 296) = v1[4];
  *(_OWORD *)(v2 + 312) = v5;
  return MEMORY[0x270FA2498](sub_20B7CA300, 0, 0);
}

uint64_t sub_20B7CA300()
{
  uint64_t v34 = v0;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v1 = *(void *)(v0 + 24);
  uint64_t v3 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 48);
  uint64_t v4 = *(void *)(v0 + 56);
  uint64_t v7 = *(void *)(v0 + 80);
  uint64_t v6 = *(void **)(v0 + 88);
  uint64_t v8 = *(void *)(v0 + 96);
  uint64_t v9 = *(void *)(v0 + 104);
  uint64_t v10 = *(void *)(v0 + 112);
  uint64_t v22 = *(void *)(v0 + 16);
  uint64_t v23 = v1;
  uint64_t v24 = v3;
  uint64_t v25 = v2;
  uint64_t v26 = v5;
  uint64_t v27 = v4;
  long long v28 = *(_OWORD *)(v0 + 64);
  uint64_t v29 = v7;
  uint64_t v30 = v6;
  uint64_t v31 = v8;
  uint64_t v32 = v9;
  uint64_t v33 = v10;
  sub_20B7CA7DC((uint64_t)&v22);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  ViewContactCardIntent.init()(&v22);
  uint64_t v17 = v23;
  uint64_t v18 = v22;
  uint64_t v19 = v24;
  uint64_t v20 = v25;
  uint64_t v21 = v26;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CB8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  long long v11 = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 120) = *(_OWORD *)(v0 + 16);
  uint64_t v12 = *(void *)(v0 + 48);
  uint64_t v13 = *(void *)(v0 + 72);
  uint64_t v14 = *(void *)(v0 + 96);
  *(_OWORD *)(v0 + 136) = v11;
  *(void *)(v0 + 152) = v12;
  *(_OWORD *)(v0 + 160) = *(_OWORD *)(v0 + 56);
  *(void *)(v0 + 176) = v13;
  *(_OWORD *)(v0 + 184) = *(_OWORD *)(v0 + 80);
  *(void *)(v0 + 200) = v14;
  *(_OWORD *)(v0 + 20_Block_object_dispose(&a9, 8) = *(_OWORD *)(v0 + 104);
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2CC8();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *(void *)(v0 + 16) = v18;
  *(void *)(v0 + 24) = v17;
  *(void *)(v0 + 32) = v19;
  *(void *)(v0 + 40) = v20;
  *(void *)(v0 + 4_Block_object_dispose(&a9, 8) = v21;
  sub_20B7B7CA0();
  sub_20B7D2B88();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

void sub_20B7CA7DC(uint64_t a1)
{
  uint64_t v72 = *MEMORY[0x263EF8340];
  long long v52 = *(_OWORD *)(a1 + 32);
  uint64_t v51 = *(void *)(a1 + 48);
  uint64_t v50 = *(void *)(a1 + 56);
  id v53 = *(id *)(a1 + 80);
  uint64_t v3 = *v1;
  uint64_t v62 = v1[1];
  uint64_t v4 = v1[3];
  uint64_t v55 = v1[2];
  uint64_t v5 = v1[5];
  uint64_t v61 = v1[4];
  uint64_t v59 = v5;
  uint64_t v60 = v1[6];
  uint64_t v58 = v1[7];
  uint64_t v6 = v1[9];
  uint64_t v57 = v1[8];
  uint64_t v8 = v1[10];
  uint64_t v7 = v1[11];
  uint64_t v9 = v3;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D29B8();
  uint64_t v54 = v7;
  swift_release();
  uint64_t v47 = v8;
  swift_release();
  uint64_t v49 = v6;
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  uint64_t v48 = v9;
  swift_release();
  long long v10 = *(_OWORD *)(a1 + 16);
  v66[0] = *(_OWORD *)a1;
  v66[1] = v10;
  v66[2] = v52;
  uint64_t v67 = v51;
  uint64_t v68 = v50;
  long long v69 = *(_OWORD *)(a1 + 64);
  id v70 = v53;
  long long v71 = *(_OWORD *)(a1 + 88);
  id v11 = sub_20B794E38();
  if (v56)
  {
    swift_release();
  }
  else
  {
    id v53 = v11;
    swift_release();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D29B8();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v45 = *(void *)&v66[0];
    objc_msgSend(v53, sel_mutableCopy);
    sub_20B7D3DF8();
    swift_unknownObjectRelease();
    sub_20B7A7190();
    swift_dynamicCast();
    uint64_t v42 = v63;
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    uint64_t v46 = v4;
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2DA8();
    sub_20B7D2CB8();
    uint64_t v43 = v64;
    *(void *)&long long v52 = v65;
    sub_20B7D2CB8();
    uint64_t v41 = v64;
    uint64_t v37 = v65;
    sub_20B7D2CB8();
    uint64_t v40 = v64;
    uint64_t v30 = v65;
    sub_20B7D2CB8();
    uint64_t v39 = v64;
    uint64_t v50 = v65;
    sub_20B7D2CB8();
    uint64_t v36 = v64;
    uint64_t v51 = v65;
    sub_20B7D2CB8();
    uint64_t v35 = v64;
    uint64_t v34 = v65;
    sub_20B7D2CB8();
    uint64_t v33 = v64;
    uint64_t v32 = v65;
    sub_20B7D2CB8();
    uint64_t v12 = v65;
    uint64_t v31 = v64;
    sub_20B7D2CB8();
    uint64_t v13 = v65;
    uint64_t v38 = v64;
    uint64_t v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769B050);
    uint64_t v44 = &v30;
    MEMORY[0x270FA5388](v14 - 8);
    uint64_t v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    sub_20B7D2CB8();
    uint64_t v17 = v42;
    swift_release();
    swift_release();
    uint64_t v18 = v30;
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    swift_release();
    uint64_t v19 = v37;
    swift_release();
    swift_release();
    swift_release();
    uint64_t v29 = v38;
    uint64_t v38 = v12;
    uint64_t v20 = v56;
    id v21 = sub_20B7950E8(v17, v43, v52, v41, v19, v40, v18, v39, v50, v36, v51, v35, v34, v33, v32, v31, v12, v29, v13,
            (uint64_t)v16);
    uint64_t v56 = v20;
    if (v20)
    {
      sub_20B793854((uint64_t)v16);

      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    else
    {
      id v22 = v21;
      sub_20B793854((uint64_t)v16);
      swift_release();

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFEB48]), sel_init);
      *(void *)&long long v52 = v22;
      objc_msgSend(v23, sel_updateContact_, v22);
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D2DA8();
      sub_20B7D29B8();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      id v24 = *(id *)(*(void *)&v66[0] + 16);
      swift_release();
      *(void *)&v66[0] = 0;
      unsigned __int8 v25 = objc_msgSend(v24, sel_executeSaveRequest_error_, v23, v66);

      if (v25)
      {
        id v26 = *(id *)&v66[0];
      }
      else
      {
        id v27 = *(id *)&v66[0];
        uint64_t v28 = sub_20B7D3398();

        uint64_t v56 = v28;
        swift_willThrow();
      }
    }
  }
}

unint64_t sub_20B7CB274()
{
  unint64_t result = qword_26769C418;
  if (!qword_26769C418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C418);
  }
  return result;
}

unint64_t sub_20B7CB2CC()
{
  unint64_t result = qword_26769C420;
  if (!qword_26769C420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C420);
  }
  return result;
}

uint64_t sub_20B7CB320()
{
  return *(void *)(swift_getOpaqueTypeConformance2() + 8);
}

uint64_t sub_20B7CB354()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_20B7CB398@<X0>(uint64_t a1@<X8>)
{
  if (qword_26769B018 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_20B7D33C8();
  uint64_t v3 = __swift_project_value_buffer(v2, (uint64_t)qword_26769C3D0);
  swift_beginAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16))(a1, v3, v2);
}

uint64_t sub_20B7CB458(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_20B775290;
  return UpdateContactIntent.perform()(a1);
}

uint64_t sub_20B7CB4F4()
{
  return sub_20B7D2A98();
}

uint64_t destroy for UpdateContactIntent()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

void *initializeWithCopy for UpdateContactIntent(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  uint64_t v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  uint64_t v9 = a2[11];
  a1[10] = a2[10];
  a1[11] = v9;
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  sub_20B7D2DA8();
  return a1;
}

void *assignWithCopy for UpdateContactIntent(void *a1, void *a2)
{
  *a1 = *a2;
  sub_20B7D2DA8();
  swift_release();
  a1[1] = a2[1];
  sub_20B7D2DA8();
  swift_release();
  a1[2] = a2[2];
  sub_20B7D2DA8();
  swift_release();
  a1[3] = a2[3];
  sub_20B7D2DA8();
  swift_release();
  a1[4] = a2[4];
  sub_20B7D2DA8();
  swift_release();
  a1[5] = a2[5];
  sub_20B7D2DA8();
  swift_release();
  a1[6] = a2[6];
  sub_20B7D2DA8();
  swift_release();
  a1[7] = a2[7];
  sub_20B7D2DA8();
  swift_release();
  a1[8] = a2[8];
  sub_20B7D2DA8();
  swift_release();
  a1[9] = a2[9];
  sub_20B7D2DA8();
  swift_release();
  a1[10] = a2[10];
  sub_20B7D2DA8();
  swift_release();
  a1[11] = a2[11];
  sub_20B7D2DA8();
  swift_release();
  return a1;
}

__n128 __swift_memcpy96_8(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 4_Block_object_dispose(&a9, 8) = v4;
  return result;
}

_OWORD *assignWithTake for UpdateContactIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  swift_release();
  a1[4] = a2[4];
  swift_release();
  swift_release();
  a1[5] = a2[5];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UpdateContactIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UpdateContactIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8_Block_object_dispose(&a9, 8) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + _Block_object_dispose(&a9, 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UpdateContactIntent()
{
  return &type metadata for UpdateContactIntent;
}

unint64_t sub_20B7CB9BC()
{
  unint64_t result = qword_26769C430;
  if (!qword_26769C430)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26769B438);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C430);
  }
  return result;
}

uint64_t CNContactStore.refreshContactsForDisplay(with:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  void v3[2] = a1;
  return MEMORY[0x270FA2498](sub_20B7CBA30, 0, 0);
}

uint64_t sub_20B7CBA30()
{
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v1 = (void *)swift_task_alloc();
  v0[5] = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_20B7CBAE0;
  uint64_t v2 = v0[3];
  uint64_t v3 = v0[4];
  uint64_t v4 = v0[2];
  return sub_20B7CBC1C(v4, v2, v3);
}

uint64_t sub_20B7CBAE0(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

uint64_t sub_20B7CBC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[16] = a2;
  v3[17] = a3;
  v3[15] = a1;
  uint64_t v4 = sub_20B7D39F8();
  v3[18] = v4;
  v3[19] = *(void *)(v4 - 8);
  v3[20] = swift_task_alloc();
  v3[21] = swift_task_alloc();
  v3[22] = swift_task_alloc();
  return MEMORY[0x270FA2498](sub_20B7CBCFC, 0, 0);
}

uint64_t sub_20B7CBCFC()
{
  uint64_t v43 = v0;
  if (qword_26769AF10 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[22];
  uint64_t v3 = v0[18];
  uint64_t v4 = v0[19];
  uint64_t v5 = __swift_project_value_buffer(v3, (uint64_t)qword_2676A3C58);
  v0[23] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v5, v3);
  sub_20B7D39A8();
  swift_allocObject();
  sub_20B7D3958();
  v0[24] = sub_20B7D3988();
  swift_release();
  sub_20B7D3968();
  v0[7] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B560);
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v6 = sub_20B7D3898();
  v0[25] = v6;
  sub_20B7D3978();
  swift_retain_n();
  uint64_t v41 = v6;
  swift_retain_n();
  uint64_t v7 = sub_20B7D39D8();
  os_log_type_t v8 = sub_20B7D3D28();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[21];
  uint64_t v11 = v0[18];
  uint64_t v12 = v0[19];
  if (v9)
  {
    uint64_t v40 = v0[18];
    uint64_t v13 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    v42[0] = v39;
    *(_DWORD *)uint64_t v13 = 136315394;
    uint64_t v14 = sub_20B7D3938();
    v0[13] = sub_20B77C87C(v14, v15, v42);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v13 + 12) = 2080;
    v42[1] = v41;
    uint64_t ContactIntent = FetchContactIntentRepresentation.description.getter();
    v0[14] = sub_20B77C87C(ContactIntent, v17, v42);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_20B704000, v7, v8, "%s Intent: %s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v39, -1, -1);
    MEMORY[0x210538E40](v13, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v40);
  }
  else
  {
    swift_release_n();
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v10, v11);
  }
  id v18 = objc_msgSend(self, sel_defaultEnvironment);
  uint64_t v19 = sub_20B76D188(0, (unint64_t *)&qword_26769B558);
  uint64_t v20 = MEMORY[0x263F24F80];
  v0[5] = v19;
  v0[6] = v20;
  v0[2] = v18;
  uint64_t v21 = sub_20B7D3828();
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = swift_task_alloc();
  uint64_t v24 = *(void *)(sub_20B7D37F8() - 8);
  swift_task_alloc();
  (*(void (**)(void))(v24 + 104))();
  sub_20B7D3818();
  swift_task_dealloc();
  uint64_t v25 = sub_20B7D3808();
  uint64_t v27 = v26;
  v0[26] = v25;
  (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v21);
  __swift_destroy_boxed_opaque_existential_0((uint64_t)(v0 + 2));
  swift_task_dealloc();
  uint64_t v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769C4D0);
  v0[27] = v28;
  v0[28] = *(void *)(v28 - 8);
  uint64_t v29 = swift_task_alloc();
  v0[29] = v29;
  uint64_t ObjectType = swift_getObjectType();
  v0[8] = v41;
  uint64_t v31 = sub_20B7D37D8();
  v0[30] = v31;
  v0[31] = *(void *)(v31 - 8);
  uint64_t v32 = swift_task_alloc();
  v0[32] = v32;
  unint64_t v33 = sub_20B7CE71C();
  uint64_t v34 = sub_20B7CE548(&qword_26769C498);
  sub_20B7786D4();
  sub_20B7D3698();
  swift_allocObject();
  uint64_t v35 = sub_20B7D3688();
  v0[33] = v35;
  uint64_t v36 = (void *)swift_task_alloc();
  v0[34] = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_20B7CC3BC;
  unint64_t v45 = v33;
  uint64_t v46 = v34;
  uint64_t v37 = MEMORY[0x263F24EC8];
  return MEMORY[0x270F0C940](v29, v0 + 8, v32, v35, v37, ObjectType, &type metadata for FetchContactIntentRepresentation, v27);
}

uint64_t sub_20B7CC3BC()
{
  uint64_t v2 = *(void *)(*(void *)v1 + 256);
  uint64_t v3 = *(void *)(*(void *)v1 + 248);
  uint64_t v4 = *(void *)(*(void *)v1 + 240);
  *(void *)(*(void *)v1 + 280) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v2, v4);
  swift_release();
  if (v0)
  {
    uint64_t v5 = sub_20B7CCA88;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v5 = sub_20B7CC558;
  }
  return MEMORY[0x270FA2498](v5, 0, 0);
}

uint64_t sub_20B7CC558()
{
  uint64_t v1 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_26769C4E0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = swift_task_alloc();
  sub_20B7D3798();
  sub_20B7D3838();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  uint64_t v4 = v0[12];
  v0[36] = v4;
  if (v4)
  {
    swift_task_dealloc();
    uint64_t v5 = (void *)swift_task_alloc();
    v0[37] = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_20B7CC7E8;
    v5[3] = v4;
    return MEMORY[0x270FA2498](sub_20B7CCF30, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    os_log_type_t v6 = sub_20B7D3D28();
    uint64_t v7 = sub_20B7D39D8();
    if (os_log_type_enabled(v7, v6))
    {
      os_log_type_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_type_t v8 = 0;
      _os_log_impl(&dword_20B704000, v7, v6, "No values were returned from the intent execution", v8, 2u);
      MEMORY[0x210538E40](v8, -1, -1);
    }
    uint64_t v10 = v0[28];
    uint64_t v9 = v0[29];
    uint64_t v11 = v0[27];
    swift_unknownObjectRelease();
    swift_release();

    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v9, v11);
    swift_task_dealloc();
    sub_20B7D3948();
    swift_release();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
    uint64_t v13 = MEMORY[0x263F8EE78];
    return v12(v13);
  }
}

uint64_t sub_20B7CC7E8(uint64_t a1)
{
  *(void *)(*(void *)v1 + 304) = a1;
  swift_task_dealloc();
  return MEMORY[0x270FA2498](sub_20B7CC8E8, 0, 0);
}

uint64_t sub_20B7CC8E8()
{
  uint64_t v1 = v0[38];
  if (v1)
  {
    (*(void (**)(void, void))(v0[28] + 8))(v0[29], v0[27]);
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
  }
  else
  {
    os_log_type_t v2 = sub_20B7D3D28();
    uint64_t v3 = sub_20B7D39D8();
    os_log_type_t v4 = v2;
    if (os_log_type_enabled(v3, v2))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl(&dword_20B704000, v3, v4, "No contacts were returned from the intent execution", v5, 2u);
      MEMORY[0x210538E40](v5, -1, -1);
    }
    uint64_t v7 = v0[28];
    uint64_t v6 = v0[29];
    uint64_t v8 = v0[27];
    swift_unknownObjectRelease();
    swift_release();

    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v6, v8);
    uint64_t v1 = MEMORY[0x263F8EE78];
  }
  swift_task_dealloc();
  sub_20B7D3948();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v1);
}

uint64_t sub_20B7CCA88()
{
  uint64_t v36 = v0;
  uint64_t v1 = (void *)v0[35];
  swift_unknownObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v2 = sub_20B7D3D48();
  id v3 = v1;
  id v4 = v1;
  uint64_t v5 = sub_20B7D39D8();
  os_log_type_t v6 = v2;
  if (os_log_type_enabled(v5, v2))
  {
    uint64_t v7 = (void *)v0[35];
    uint64_t v8 = (uint8_t *)swift_slowAlloc();
    uint64_t v9 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v8 = 138412290;
    id v10 = v7;
    uint64_t v11 = _swift_stdlib_bridgeErrorToNSError();
    v0[11] = v11;
    sub_20B7D3D88();
    *uint64_t v9 = v11;

    _os_log_impl(&dword_20B704000, v5, v6, "Error performing intent: %@", v8, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v9, -1, -1);
    MEMORY[0x210538E40](v8, -1, -1);
  }
  else
  {
    uint64_t v12 = (void *)v0[35];
  }
  uint64_t v13 = (void *)v0[35];

  sub_20B7D3978();
  sub_20B7D2DA8();
  id v14 = v13;
  sub_20B7D2DA8();
  id v15 = v13;
  uint64_t v16 = sub_20B7D39D8();
  os_log_type_t v17 = sub_20B7D3D48();
  BOOL v18 = os_log_type_enabled(v16, v17);
  uint64_t v19 = (void *)v0[35];
  uint64_t v21 = v0[19];
  uint64_t v20 = v0[20];
  uint64_t v22 = v0[18];
  if (v18)
  {
    uint64_t v23 = swift_slowAlloc();
    uint64_t v32 = (void *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136315394;
    uint64_t v35 = v33;
    uint64_t v24 = sub_20B7D3938();
    uint64_t v34 = v20;
    v0[9] = sub_20B77C87C(v24, v25, &v35);
    sub_20B7D3D88();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v23 + 12) = 2112;
    id v26 = v19;
    uint64_t v27 = _swift_stdlib_bridgeErrorToNSError();
    v0[10] = v27;
    sub_20B7D3D88();
    *uint64_t v32 = v27;

    _os_log_impl(&dword_20B704000, v16, v17, "%s Error performing intent: %@", (uint8_t *)v23, 0x16u);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v32, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v33, -1, -1);
    MEMORY[0x210538E40](v23, -1, -1);

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v34, v22);
  }
  else
  {
    swift_release_n();

    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
  }
  uint64_t v28 = (void *)v0[35];
  swift_release();

  sub_20B7D3948();
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v29 = (uint64_t (*)(uint64_t))v0[1];
  uint64_t v30 = MEMORY[0x263F8EE78];
  return v29(v30);
}

uint64_t FetchContactIntentRepresentation.init(identifiers:)@<X0>(uint64_t *a1@<X8>)
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769B560);
  swift_allocObject();
  uint64_t result = sub_20B7D3898();
  *a1 = result;
  return result;
}

uint64_t ContactFetchResultEntityRepresentation.contacts.getter()
{
  *(void *)(v1 + 24) = v0;
  return MEMORY[0x270FA2498](sub_20B7CCF30, 0, 0);
}

uint64_t sub_20B7CCF30()
{
  uint64_t v1 = sub_20B7D3908();
  v0[4] = v1;
  uint64_t v2 = *(void *)(v1 - 8);
  v0[5] = v2;
  uint64_t v3 = swift_task_alloc();
  v0[6] = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v4 = swift_task_alloc();
  sub_20B7D2DA8();
  sub_20B7D3868();
  swift_release();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v4, 1, v1) == 1)
  {
    sub_20B7CDC78(v4);
    swift_task_dealloc();
    swift_task_dealloc();
    if (qword_26769AF10 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_20B7D39F8();
    __swift_project_value_buffer(v5, (uint64_t)qword_2676A3C58);
    os_log_type_t v6 = sub_20B7D3D48();
    uint64_t v7 = sub_20B7D39D8();
    if (os_log_type_enabled(v7, v6))
    {
      uint64_t v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v8 = 0;
      _os_log_impl(&dword_20B704000, v7, v6, "Contact data not available", v8, 2u);
      MEMORY[0x210538E40](v8, -1, -1);
    }

    uint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9(0);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v3, v4, v1);
    swift_task_dealloc();
    uint64_t v11 = (void *)swift_task_alloc();
    v0[7] = v11;
    *uint64_t v11 = v0;
    v11[1] = sub_20B7CD1EC;
    return MEMORY[0x270F0CB80]();
  }
}

uint64_t sub_20B7CD1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v3;
  *(void *)(*v3 + 64) = v2;
  swift_task_dealloc();
  if (v2)
  {
    uint64_t v7 = sub_20B7CD454;
  }
  else
  {
    *(void *)(v6 + 72) = a2;
    *(void *)(v6 + 80) = a1;
    uint64_t v7 = sub_20B7CD320;
  }
  return MEMORY[0x270FA2498](v7, 0, 0);
}

uint64_t sub_20B7CD320()
{
  unint64_t v2 = v0[9];
  uint64_t v1 = v0[10];
  uint64_t v4 = v0[5];
  uint64_t v3 = v0[6];
  uint64_t v5 = v0[4];
  uint64_t v6 = self;
  sub_20B773108(v1, v2);
  uint64_t v7 = (void *)sub_20B7D3478();
  sub_20B76C024(v1, v2);
  id v8 = objc_msgSend(v6, sel_contactsFromData_, v7);

  sub_20B76D188(0, (unint64_t *)&qword_26769B040);
  uint64_t v9 = sub_20B7D3C38();

  sub_20B76C024(v1, v2);
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  swift_task_dealloc();
  id v10 = (uint64_t (*)(uint64_t))v0[1];
  return v10(v9);
}

uint64_t sub_20B7CD454()
{
  if (qword_26769AF10 != -1) {
    swift_once();
  }
  uint64_t v1 = (void *)v0[8];
  uint64_t v2 = sub_20B7D39F8();
  __swift_project_value_buffer(v2, (uint64_t)qword_2676A3C58);
  os_log_type_t v3 = sub_20B7D3D48();
  id v4 = v1;
  id v5 = v1;
  uint64_t v6 = sub_20B7D39D8();
  os_log_type_t v7 = v3;
  BOOL v8 = os_log_type_enabled(v6, v3);
  uint64_t v9 = (void *)v0[8];
  if (v8)
  {
    id v10 = (uint8_t *)swift_slowAlloc();
    uint64_t v11 = (void *)swift_slowAlloc();
    *(_DWORD *)id v10 = 138412290;
    id v12 = v9;
    uint64_t v13 = _swift_stdlib_bridgeErrorToNSError();
    v0[2] = v13;
    sub_20B7D3D88();
    *uint64_t v11 = v13;

    _os_log_impl(&dword_20B704000, v6, v7, "Could not load archived contacts: %@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName(&qword_26769C320);
    swift_arrayDestroy();
    MEMORY[0x210538E40](v11, -1, -1);
    MEMORY[0x210538E40](v10, -1, -1);
  }
  else
  {
  }
  (*(void (**)(void, void))(v0[5] + 8))(v0[6], v0[4]);
  swift_task_dealloc();
  id v14 = (uint64_t (*)(void))v0[1];
  return v14(0);
}

unint64_t static FetchContactIntentRepresentation.bundleIdentifier.getter()
{
  return 0xD00000000000001BLL;
}

unint64_t static FetchContactIntentRepresentation.actionIdentifier.getter()
{
  return 0xD000000000000012;
}

uint64_t FetchContactIntentRepresentation.identifiers.getter()
{
  sub_20B7D38B8();
  return v1;
}

uint64_t sub_20B7CD6E4@<X0>(void *a1@<X8>)
{
  sub_20B7D2DA8();
  sub_20B7D38B8();
  uint64_t result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_20B7CD730()
{
  return swift_release();
}

uint64_t FetchContactIntentRepresentation.identifiers.setter()
{
  return sub_20B7D38C8();
}

void (*FetchContactIntentRepresentation.identifiers.modify(void *a1))(void *a1)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_20B7D38A8();
  return sub_20B774F38;
}

uint64_t FetchContactIntentRepresentation.$identifiers.getter()
{
  return sub_20B7D38D8();
}

unint64_t sub_20B7CD830()
{
  return 0xD000000000000012;
}

uint64_t FetchContactIntentRepresentation.description.getter()
{
  return 0;
}

uint64_t static ContactFetchResultEntityRepresentation.bundleIdentifier.getter()
{
  return sub_20B7CD9D0((uint64_t *)&unk_26769C438);
}

uint64_t static ContactFetchResultEntityRepresentation.bundleIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_20B7CDA34(a1, a2, qword_26769C438, &qword_26769C438[1]);
}

uint64_t (*static ContactFetchResultEntityRepresentation.bundleIdentifier.modify())()
{
  return j_j__swift_endAccess;
}

uint64_t static ContactFetchResultEntityRepresentation.typeIdentifier.getter()
{
  return sub_20B7CD9D0((uint64_t *)&unk_26769C448);
}

uint64_t sub_20B7CD9D0(uint64_t *a1)
{
  swift_beginAccess();
  uint64_t v2 = *a1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t static ContactFetchResultEntityRepresentation.typeIdentifier.setter(uint64_t a1, uint64_t a2)
{
  return sub_20B7CDA34(a1, a2, qword_26769C448, &qword_26769C448[1]);
}

uint64_t sub_20B7CDA34(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  *a3 = a1;
  *a4 = a2;
  return swift_bridgeObjectRelease();
}

uint64_t (*static ContactFetchResultEntityRepresentation.typeIdentifier.modify())()
{
  return j__swift_endAccess;
}

uint64_t sub_20B7CDAEC()
{
  sub_20B7D2DA8();
  sub_20B7D3868();
  return swift_release();
}

uint64_t sub_20B7CDB40(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  uint64_t v3 = *(void *)(*(void *)(v2 - 8) + 64);
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v4 = (v3 + 15) & 0xFFFFFFFFFFFFFFF0;
  uint64_t v5 = sub_20B7AF0E8(a1, (uint64_t)&v7 - v4);
  MEMORY[0x270FA5388](v5);
  sub_20B7AF0E8((uint64_t)&v7 - v4, (uint64_t)&v7 - v4);
  sub_20B7D2DA8();
  sub_20B7D3878();
  swift_release();
  return sub_20B7CDC78((uint64_t)&v7 - v4);
}

uint64_t sub_20B7CDC28()
{
  sub_20B7D2DA8();
  sub_20B7D3868();
  return swift_release();
}

uint64_t sub_20B7CDC78(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_20B7CDCD8(uint64_t a1)
{
  uint64_t v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_26769BDA0);
  MEMORY[0x270FA5388](v2 - 8);
  sub_20B7AF0E8(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_20B7D2DA8();
  sub_20B7D3878();
  swift_release();
  return sub_20B7CDC78(a1);
}

void (*sub_20B7CDD84(void *a1))(void *a1)
{
  uint64_t v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = *(void *)(v1 + qword_26769C470);
  sub_20B7D2DA8();
  v3[5] = sub_20B7D3858();
  return sub_20B7CDDF8;
}

void sub_20B7CDDF8(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 40))(*a1, 0);
  swift_release();
  free(v1);
}

uint64_t sub_20B7CDE4C()
{
  sub_20B7D2DA8();
  uint64_t v0 = sub_20B7D3888();
  swift_release();
  return v0;
}

uint64_t ContactFetchResultEntityRepresentation.__allocating_init(_:)(uint64_t a1)
{
  uint64_t v2 = swift_allocObject();
  uint64_t v3 = qword_26769C470;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF28);
  swift_allocObject();
  sub_20B7D2DA8();
  *(void *)(v2 + v3) = sub_20B7D3848();
  swift_release();
  uint64_t v4 = sub_20B7D36E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  uint64_t v7 = sub_20B7D3748();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v7;
}

uint64_t ContactFetchResultEntityRepresentation.init(_:)(uint64_t a1)
{
  uint64_t v3 = qword_26769C470;
  __swift_instantiateConcreteTypeFromMangledName(&qword_26769BF28);
  swift_allocObject();
  sub_20B7D2DA8();
  *(void *)(v1 + v3) = sub_20B7D3848();
  swift_release();
  uint64_t v4 = sub_20B7D36E8();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  uint64_t v7 = sub_20B7D3748();
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  return v7;
}

uint64_t sub_20B7CE120()
{
  return swift_release();
}

uint64_t ContactFetchResultEntityRepresentation.deinit()
{
  uint64_t v0 = sub_20B7D3738();
  swift_release();
  return v0;
}

uint64_t ContactFetchResultEntityRepresentation.__deallocating_deinit()
{
  sub_20B7D3738();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_20B7CE1B8(uint64_t a1, uint64_t a2)
{
  return sub_20B7CE1D8(a1, a2, qword_26769C438);
}

uint64_t sub_20B7CE1C8(uint64_t a1, uint64_t a2)
{
  return sub_20B7CE1D8(a1, a2, qword_26769C448);
}

uint64_t sub_20B7CE1D8(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  swift_beginAccess();
  uint64_t v4 = *a3;
  swift_bridgeObjectRetain();
  return v4;
}

uint64_t sub_20B7CE230()
{
  return sub_20B7D3928() & 1;
}

uint64_t sub_20B7CE288()
{
  return sub_20B7D37A8();
}

uint64_t sub_20B7CE2D0()
{
  return sub_20B7D3918() & 1;
}

uint64_t sub_20B7CE328()
{
  return sub_20B7CE548(&qword_26769C478);
}

uint64_t type metadata accessor for ContactFetchResultEntityRepresentation()
{
  uint64_t result = qword_26769C4C0;
  if (!qword_26769C4C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_20B7CE3A8()
{
  return sub_20B7CE548(&qword_26769C480);
}

uint64_t sub_20B7CE3DC()
{
  return sub_20B7CE548(&qword_26769C488);
}

uint64_t sub_20B7CE410()
{
  return sub_20B7CE548(&qword_26769C490);
}

uint64_t sub_20B7CE444()
{
  return sub_20B7CE548(&qword_26769C498);
}

uint64_t sub_20B7CE478()
{
  return sub_20B7CE548(&qword_26769C4A0);
}

uint64_t sub_20B7CE4AC()
{
  return sub_20B7CE548(&qword_26769C4A8);
}

uint64_t sub_20B7CE4E0()
{
  return sub_20B7CE548(&qword_26769C4B0);
}

uint64_t sub_20B7CE514()
{
  return sub_20B7CE548(&qword_26769C4B8);
}

uint64_t sub_20B7CE548(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for ContactFetchResultEntityRepresentation();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

ValueMetadata *type metadata accessor for FetchContactIntentRepresentation()
{
  return &type metadata for FetchContactIntentRepresentation;
}

uint64_t sub_20B7CE5AC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for ContactFetchResultEntityRepresentation(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ContactFetchResultEntityRepresentation);
}

uint64_t dispatch thunk of ContactFetchResultEntityRepresentation.contactData.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ContactFetchResultEntityRepresentation + *v0 + 8))();
}

uint64_t dispatch thunk of ContactFetchResultEntityRepresentation.contactData.setter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ContactFetchResultEntityRepresentation + *v0 + 16))();
}

uint64_t dispatch thunk of ContactFetchResultEntityRepresentation.contactData.modify()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ContactFetchResultEntityRepresentation + *v0 + 24))();
}

uint64_t dispatch thunk of ContactFetchResultEntityRepresentation.$contactData.getter()
{
  return (*(uint64_t (**)(void))(class metadata base offset for ContactFetchResultEntityRepresentation + *v0 + 32))();
}

uint64_t sub_20B7CE714()
{
  return type metadata accessor for ContactFetchResultEntityRepresentation();
}

unint64_t sub_20B7CE71C()
{
  unint64_t result = qword_26769C4D8;
  if (!qword_26769C4D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26769C4D8);
  }
  return result;
}

uint64_t type metadata accessor for ResourceBundleClass()
{
  return self;
}

void __LoadIDS_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/IDS.framework/IDS (%d)", (uint8_t *)v1, 8u);
}

void __LoadRTTUtilities_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/RTTUtilities.framework/RTTUtilities (%d)", (uint8_t *)v1, 8u);
}

void __LoadTelephonyUtilities_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/TelephonyUtilities.framework/TelephonyUtilities (%d)", (uint8_t *)v1, 8u);
}

void __LoadPersonaUI_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/PersonaUI.framework/PersonaUI (%d)", (uint8_t *)v1, 8u);
}

void __LoadPassKitCore_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore (%d)", (uint8_t *)v1, 8u);
}

void __LoadAddressBookLegacy_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/AddressBookLegacy.framework/AddressBookLegacy (%d)", (uint8_t *)v1, 8u);
}

void __LoadManagedConfiguration_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/ManagedConfiguration.framework/ManagedConfiguration (%d)", (uint8_t *)v1, 8u);
}

void __LoadScreenTimeUI_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/ScreenTimeUI.framework/ScreenTimeUI (%d)", (uint8_t *)v1, 8u);
}

void __LoadFrontBoardServices_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices (%d)", (uint8_t *)v1, 8u);
}

void __LoadScreenTimeCore_block_invoke_cold_1()
{
  uint64_t v2 = *MEMORY[0x263EF8340];
  int v0 = *__error();
  v1[0] = 67109120;
  v1[1] = v0;
  _os_log_error_impl(&dword_20B704000, &_os_log_internal, OS_LOG_TYPE_ERROR, "Failed to Soft Link: /System/Library/PrivateFrameworks/ScreenTimeCore.framework/ScreenTimeCore (%d)", (uint8_t *)v1, 8u);
}

uint64_t sub_20B7D2988()
{
  return MEMORY[0x270EE09A0]();
}

uint64_t sub_20B7D2998()
{
  return MEMORY[0x270EE09F8]();
}

uint64_t sub_20B7D29A8()
{
  return MEMORY[0x270EE0A08]();
}

uint64_t sub_20B7D29B8()
{
  return MEMORY[0x270EE0A20]();
}

uint64_t sub_20B7D29C8()
{
  return MEMORY[0x270EE0A30]();
}

uint64_t sub_20B7D29D8()
{
  return MEMORY[0x270EE0A50]();
}

uint64_t sub_20B7D29E8()
{
  return MEMORY[0x270EE0B60]();
}

uint64_t sub_20B7D29F8()
{
  return MEMORY[0x270EE0B78]();
}

uint64_t sub_20B7D2A08()
{
  return MEMORY[0x270EE0B88]();
}

uint64_t sub_20B7D2A18()
{
  return MEMORY[0x270EE0C38]();
}

uint64_t sub_20B7D2A28()
{
  return MEMORY[0x270EE0C70]();
}

uint64_t sub_20B7D2A38()
{
  return MEMORY[0x270EE0C88]();
}

uint64_t sub_20B7D2A48()
{
  return MEMORY[0x270EE0CA8]();
}

uint64_t sub_20B7D2A58()
{
  return MEMORY[0x270EE0CC8]();
}

uint64_t sub_20B7D2A68()
{
  return MEMORY[0x270EE0CD8]();
}

uint64_t sub_20B7D2A88()
{
  return MEMORY[0x270EE0D10]();
}

uint64_t sub_20B7D2A98()
{
  return MEMORY[0x270EE0D20]();
}

uint64_t sub_20B7D2AA8()
{
  return MEMORY[0x270EE0DB0]();
}

uint64_t sub_20B7D2AB8()
{
  return MEMORY[0x270EE0DC0]();
}

uint64_t sub_20B7D2AC8()
{
  return MEMORY[0x270EE0DC8]();
}

uint64_t sub_20B7D2AD8()
{
  return MEMORY[0x270EE0DF0]();
}

uint64_t sub_20B7D2B08()
{
  return MEMORY[0x270EE0E70]();
}

uint64_t sub_20B7D2B18()
{
  return MEMORY[0x270EE0E90]();
}

uint64_t sub_20B7D2B28()
{
  return MEMORY[0x270EE0EB0]();
}

uint64_t sub_20B7D2B38()
{
  return MEMORY[0x270EE0EC0]();
}

uint64_t sub_20B7D2B48()
{
  return MEMORY[0x270EE0EE0]();
}

uint64_t sub_20B7D2B58()
{
  return MEMORY[0x270EE0EE8]();
}

uint64_t sub_20B7D2B68()
{
  return MEMORY[0x270EE0F10]();
}

uint64_t sub_20B7D2B78()
{
  return MEMORY[0x270EE0F40]();
}

uint64_t sub_20B7D2B88()
{
  return MEMORY[0x270EE0F50]();
}

uint64_t sub_20B7D2B98()
{
  return MEMORY[0x270EE0F70]();
}

uint64_t sub_20B7D2BA8()
{
  return MEMORY[0x270EE0FA0]();
}

uint64_t sub_20B7D2BB8()
{
  return MEMORY[0x270EE0FB8]();
}

uint64_t sub_20B7D2BC8()
{
  return MEMORY[0x270EE0FE8]();
}

uint64_t sub_20B7D2BD8()
{
  return MEMORY[0x270EE0FF0]();
}

uint64_t sub_20B7D2BE8()
{
  return MEMORY[0x270EE1038]();
}

uint64_t sub_20B7D2BF8()
{
  return MEMORY[0x270EE1048]();
}

uint64_t sub_20B7D2C08()
{
  return MEMORY[0x270EE1058]();
}

uint64_t sub_20B7D2C18()
{
  return MEMORY[0x270EE1070]();
}

uint64_t sub_20B7D2C28()
{
  return MEMORY[0x270EE1080]();
}

uint64_t sub_20B7D2C38()
{
  return MEMORY[0x270EE1090]();
}

uint64_t sub_20B7D2C48()
{
  return MEMORY[0x270EE10A8]();
}

uint64_t sub_20B7D2C58()
{
  return MEMORY[0x270EE10B0]();
}

uint64_t sub_20B7D2C68()
{
  return MEMORY[0x270EE10B8]();
}

uint64_t sub_20B7D2C78()
{
  return MEMORY[0x270EE10D8]();
}

uint64_t sub_20B7D2C88()
{
  return MEMORY[0x270EE1108]();
}

uint64_t sub_20B7D2C98()
{
  return MEMORY[0x270EE1110]();
}

uint64_t sub_20B7D2CA8()
{
  return MEMORY[0x270EE11C8]();
}

uint64_t sub_20B7D2CB8()
{
  return MEMORY[0x270EE11D0]();
}

uint64_t sub_20B7D2CC8()
{
  return MEMORY[0x270EE11E8]();
}

uint64_t sub_20B7D2CD8()
{
  return MEMORY[0x270EE11F0]();
}

uint64_t sub_20B7D2CE8()
{
  return MEMORY[0x270EE1240]();
}

uint64_t sub_20B7D2CF8()
{
  return MEMORY[0x270EE1248]();
}

uint64_t sub_20B7D2D08()
{
  return MEMORY[0x270EE1268]();
}

uint64_t sub_20B7D2D18()
{
  return MEMORY[0x270EE12A8]();
}

uint64_t sub_20B7D2D28()
{
  return MEMORY[0x270EE12C0]();
}

uint64_t sub_20B7D2D38()
{
  return MEMORY[0x270EE12E8]();
}

uint64_t sub_20B7D2D48()
{
  return MEMORY[0x270EE12F8]();
}

uint64_t sub_20B7D2D58()
{
  return MEMORY[0x270EE1310]();
}

uint64_t sub_20B7D2D68()
{
  return MEMORY[0x270EE13D8]();
}

uint64_t sub_20B7D2D78()
{
  return MEMORY[0x270EE13E8]();
}

uint64_t sub_20B7D2D88()
{
  return MEMORY[0x270EE13F8]();
}

uint64_t sub_20B7D2D98()
{
  return MEMORY[0x270EE1408]();
}

uint64_t sub_20B7D2DA8()
{
  return MEMORY[0x270EE1418]();
}

uint64_t sub_20B7D2DB8()
{
  return MEMORY[0x270EE1430]();
}

uint64_t sub_20B7D2DC8()
{
  return MEMORY[0x270EE1440]();
}

uint64_t sub_20B7D2DD8()
{
  return MEMORY[0x270EE1448]();
}

uint64_t sub_20B7D2DE8()
{
  return MEMORY[0x270EE1460]();
}

uint64_t sub_20B7D2DF8()
{
  return MEMORY[0x270EE1468]();
}

uint64_t sub_20B7D2E08()
{
  return MEMORY[0x270EE1478]();
}

uint64_t sub_20B7D2E18()
{
  return MEMORY[0x270EE1490]();
}

uint64_t sub_20B7D2E28()
{
  return MEMORY[0x270EE14A0]();
}

uint64_t sub_20B7D2E38()
{
  return MEMORY[0x270EE14B0]();
}

uint64_t sub_20B7D2E48()
{
  return MEMORY[0x270EE14C0]();
}

uint64_t sub_20B7D2E58()
{
  return MEMORY[0x270EE14D0]();
}

uint64_t sub_20B7D2E68()
{
  return MEMORY[0x270EE14E8]();
}

uint64_t sub_20B7D2E78()
{
  return MEMORY[0x270EE14F0]();
}

uint64_t sub_20B7D2E88()
{
  return MEMORY[0x270EE1508]();
}

uint64_t sub_20B7D2E98()
{
  return MEMORY[0x270EE1528]();
}

uint64_t sub_20B7D2EA8()
{
  return MEMORY[0x270EE1538]();
}

uint64_t sub_20B7D2EB8()
{
  return MEMORY[0x270EE1580]();
}

uint64_t sub_20B7D2EC8()
{
  return MEMORY[0x270EE1598]();
}

uint64_t sub_20B7D2ED8()
{
  return MEMORY[0x270EE15E8]();
}

uint64_t sub_20B7D2EE8()
{
  return MEMORY[0x270EE1648]();
}

uint64_t sub_20B7D2EF8()
{
  return MEMORY[0x270EE1698]();
}

uint64_t sub_20B7D2F08()
{
  return MEMORY[0x270EE16A8]();
}

uint64_t sub_20B7D2F18()
{
  return MEMORY[0x270EE1860]();
}

uint64_t sub_20B7D2F28()
{
  return MEMORY[0x270EE1870]();
}

uint64_t sub_20B7D2F38()
{
  return MEMORY[0x270EE1898]();
}

uint64_t sub_20B7D2F48()
{
  return MEMORY[0x270EE1910]();
}

uint64_t sub_20B7D2F58()
{
  return MEMORY[0x270EE1940]();
}

uint64_t sub_20B7D2F68()
{
  return MEMORY[0x270EE1960]();
}

uint64_t sub_20B7D2F78()
{
  return MEMORY[0x270EE1970]();
}

uint64_t sub_20B7D2F88()
{
  return MEMORY[0x270EE19D8]();
}

uint64_t sub_20B7D2F98()
{
  return MEMORY[0x270EE19F0]();
}

uint64_t sub_20B7D2FA8()
{
  return MEMORY[0x270EE19F8]();
}

uint64_t sub_20B7D2FC8()
{
  return MEMORY[0x270EE1A18]();
}

uint64_t sub_20B7D2FD8()
{
  return MEMORY[0x270EE1B78]();
}

uint64_t sub_20B7D2FE8()
{
  return MEMORY[0x270EE1C20]();
}

uint64_t sub_20B7D2FF8()
{
  return MEMORY[0x270EE1C40]();
}

uint64_t sub_20B7D3008()
{
  return MEMORY[0x270EE1C68]();
}

uint64_t sub_20B7D3018()
{
  return MEMORY[0x270EE1C98]();
}

uint64_t sub_20B7D3028()
{
  return MEMORY[0x270EE1CB8]();
}

uint64_t sub_20B7D3038()
{
  return MEMORY[0x270EE1D70]();
}

uint64_t sub_20B7D3048()
{
  return MEMORY[0x270EE1D80]();
}

uint64_t sub_20B7D3058()
{
  return MEMORY[0x270EE1DA0]();
}

uint64_t sub_20B7D3068()
{
  return MEMORY[0x270EE1DD8]();
}

uint64_t sub_20B7D3078()
{
  return MEMORY[0x270EE1DE0]();
}

uint64_t sub_20B7D3088()
{
  return MEMORY[0x270EE1E68]();
}

uint64_t sub_20B7D3098()
{
  return MEMORY[0x270EEDDD8]();
}

uint64_t sub_20B7D30A8()
{
  return MEMORY[0x270EEDE08]();
}

uint64_t sub_20B7D30B8()
{
  return MEMORY[0x270EEDE20]();
}

uint64_t sub_20B7D30C8()
{
  return MEMORY[0x270EEDEF0]();
}

uint64_t sub_20B7D30D8()
{
  return MEMORY[0x270EEDF28]();
}

uint64_t sub_20B7D30E8()
{
  return MEMORY[0x270EEDF40]();
}

uint64_t sub_20B7D30F8()
{
  return MEMORY[0x270EEE0F8]();
}

uint64_t sub_20B7D3108()
{
  return MEMORY[0x270EEE198]();
}

uint64_t sub_20B7D3118()
{
  return MEMORY[0x270EEE250]();
}

uint64_t sub_20B7D3128()
{
  return MEMORY[0x270EEE3D8]();
}

uint64_t sub_20B7D3138()
{
  return MEMORY[0x270EEE418]();
}

uint64_t sub_20B7D3148()
{
  return MEMORY[0x270EEE4B8]();
}

uint64_t sub_20B7D3158()
{
  return MEMORY[0x270EEE528]();
}

uint64_t sub_20B7D3168()
{
  return MEMORY[0x270EEE540]();
}

uint64_t sub_20B7D3178()
{
  return MEMORY[0x270EEE5B0]();
}

uint64_t sub_20B7D3188()
{
  return MEMORY[0x270EEE600]();
}

uint64_t sub_20B7D3198()
{
  return MEMORY[0x270EEE608]();
}

uint64_t sub_20B7D31A8()
{
  return MEMORY[0x270EEE6F0]();
}

uint64_t sub_20B7D31B8()
{
  return MEMORY[0x270EEE6F8]();
}

uint64_t sub_20B7D31C8()
{
  return MEMORY[0x270EEE740]();
}

uint64_t sub_20B7D31D8()
{
  return MEMORY[0x270EEE758]();
}

uint64_t sub_20B7D31E8()
{
  return MEMORY[0x270EEE770]();
}

uint64_t sub_20B7D31F8()
{
  return MEMORY[0x270EEE778]();
}

uint64_t sub_20B7D3208()
{
  return MEMORY[0x270EEE798]();
}

uint64_t sub_20B7D3218()
{
  return MEMORY[0x270EEE7A8]();
}

uint64_t sub_20B7D3228()
{
  return MEMORY[0x270EEE7D0]();
}

uint64_t sub_20B7D3238()
{
  return MEMORY[0x270EEE7E0]();
}

uint64_t sub_20B7D3248()
{
  return MEMORY[0x270EEE7F8]();
}

uint64_t sub_20B7D3258()
{
  return MEMORY[0x270EEE808]();
}

uint64_t sub_20B7D3268()
{
  return MEMORY[0x270EEE830]();
}

uint64_t sub_20B7D3278()
{
  return MEMORY[0x270EEE858]();
}

uint64_t sub_20B7D3288()
{
  return MEMORY[0x270EEE888]();
}

uint64_t sub_20B7D3298()
{
  return MEMORY[0x270EEE8A0]();
}

uint64_t sub_20B7D32A8()
{
  return MEMORY[0x270EEE8A8]();
}

uint64_t sub_20B7D32B8()
{
  return MEMORY[0x270EEE8E0]();
}

uint64_t sub_20B7D32C8()
{
  return MEMORY[0x270EEE8F0]();
}

uint64_t sub_20B7D32D8()
{
  return MEMORY[0x270EEF328]();
}

uint64_t sub_20B7D32E8()
{
  return MEMORY[0x270EEF338]();
}

uint64_t sub_20B7D32F8()
{
  return MEMORY[0x270EEF348]();
}

uint64_t sub_20B7D3308()
{
  return MEMORY[0x270EEF350]();
}

uint64_t sub_20B7D3318()
{
  return MEMORY[0x270EEF368]();
}

uint64_t sub_20B7D3328()
{
  return MEMORY[0x270EEF380]();
}

uint64_t sub_20B7D3338()
{
  return MEMORY[0x270EEF398]();
}

uint64_t sub_20B7D3348()
{
  return MEMORY[0x270EEF3B0]();
}

uint64_t sub_20B7D3358()
{
  return MEMORY[0x270EEF3E8]();
}

uint64_t sub_20B7D3368()
{
  return MEMORY[0x270EEF418]();
}

uint64_t sub_20B7D3378()
{
  return MEMORY[0x270EEF458]();
}

uint64_t sub_20B7D3388()
{
  return MEMORY[0x270EEF468]();
}

uint64_t sub_20B7D3398()
{
  return MEMORY[0x270EEF838]();
}

uint64_t sub_20B7D33A8()
{
  return MEMORY[0x270EEF860]();
}

uint64_t sub_20B7D33B8()
{
  return MEMORY[0x270EEF878]();
}

uint64_t sub_20B7D33C8()
{
  return MEMORY[0x270EEF8B8]();
}

uint64_t sub_20B7D33D8()
{
  return MEMORY[0x270EEF8E0]();
}

uint64_t sub_20B7D33E8()
{
  return MEMORY[0x270EEFA10]();
}

uint64_t sub_20B7D33F8()
{
  return MEMORY[0x270EEFA20]();
}

uint64_t sub_20B7D3408()
{
  return MEMORY[0x270EEFC60]();
}

uint64_t sub_20B7D3418()
{
  return MEMORY[0x270EEFD20]();
}

uint64_t sub_20B7D3428()
{
  return MEMORY[0x270EEFE28]();
}

uint64_t sub_20B7D3438()
{
  return MEMORY[0x270EEFEE8]();
}

uint64_t sub_20B7D3448()
{
  return MEMORY[0x270EEFF08]();
}

uint64_t sub_20B7D3458()
{
  return MEMORY[0x270EEFF70]();
}

uint64_t sub_20B7D3468()
{
  return MEMORY[0x270EF0028]();
}

uint64_t sub_20B7D3478()
{
  return MEMORY[0x270EF0128]();
}

uint64_t sub_20B7D3488()
{
  return MEMORY[0x270EF0170]();
}

uint64_t sub_20B7D3498()
{
  return MEMORY[0x270EF02C0]();
}

uint64_t sub_20B7D34A8()
{
  return MEMORY[0x270EF0990]();
}

uint64_t sub_20B7D34B8()
{
  return MEMORY[0x270EF0BB0]();
}

uint64_t sub_20B7D34C8()
{
  return MEMORY[0x270EF0C28]();
}

uint64_t sub_20B7D34D8()
{
  return MEMORY[0x270EF0C38]();
}

uint64_t sub_20B7D34E8()
{
  return MEMORY[0x270EF0C60]();
}

uint64_t sub_20B7D34F8()
{
  return MEMORY[0x270EF0D00]();
}

uint64_t sub_20B7D3508()
{
  return MEMORY[0x270EF0D10]();
}

uint64_t sub_20B7D3518()
{
  return MEMORY[0x270EF0EE8]();
}

uint64_t sub_20B7D3528()
{
  return MEMORY[0x270EF0F38]();
}

uint64_t sub_20B7D3538()
{
  return MEMORY[0x270EF0FA8]();
}

uint64_t sub_20B7D3548()
{
  return MEMORY[0x270EF10B0]();
}

uint64_t sub_20B7D3558()
{
  return MEMORY[0x270EF10B8]();
}

uint64_t sub_20B7D3568()
{
  return MEMORY[0x270EF10C0]();
}

uint64_t sub_20B7D3578()
{
  return MEMORY[0x270EF10D0]();
}

uint64_t sub_20B7D3588()
{
  return MEMORY[0x270EF10E8]();
}

uint64_t sub_20B7D3598()
{
  return MEMORY[0x270EF1158]();
}

uint64_t sub_20B7D35A8()
{
  return MEMORY[0x270EF1250]();
}

uint64_t sub_20B7D35B8()
{
  return MEMORY[0x270EF1278]();
}

uint64_t sub_20B7D35C8()
{
  return MEMORY[0x270EF12B8]();
}

uint64_t sub_20B7D35D8()
{
  return MEMORY[0x270EF12D0]();
}

uint64_t sub_20B7D35E8()
{
  return MEMORY[0x270EF12D8]();
}

uint64_t sub_20B7D35F8()
{
  return MEMORY[0x270EF1370]();
}

uint64_t sub_20B7D3608()
{
  return MEMORY[0x270EF13E0]();
}

uint64_t sub_20B7D3618()
{
  return MEMORY[0x270EF13E8]();
}

uint64_t sub_20B7D3628()
{
  return MEMORY[0x270EF1408]();
}

uint64_t sub_20B7D3638()
{
  return MEMORY[0x270EF1420]();
}

uint64_t sub_20B7D3648()
{
  return MEMORY[0x270EF1448]();
}

uint64_t sub_20B7D3658()
{
  return MEMORY[0x270EF15B0]();
}

uint64_t sub_20B7D3668()
{
  return MEMORY[0x270EF15C0]();
}

uint64_t sub_20B7D3678()
{
  return MEMORY[0x270EF1610]();
}

uint64_t sub_20B7D3688()
{
  return MEMORY[0x270F0C800]();
}

uint64_t sub_20B7D3698()
{
  return MEMORY[0x270F0C810]();
}

uint64_t sub_20B7D36A8()
{
  return MEMORY[0x270F0C828]();
}

uint64_t sub_20B7D36B8()
{
  return MEMORY[0x270F0C838]();
}

uint64_t sub_20B7D36C8()
{
  return MEMORY[0x270F0C848]();
}

uint64_t sub_20B7D36D8()
{
  return MEMORY[0x270F0C850]();
}

uint64_t sub_20B7D36E8()
{
  return MEMORY[0x270F0C860]();
}

uint64_t sub_20B7D36F8()
{
  return MEMORY[0x270F0C878]();
}

uint64_t sub_20B7D3708()
{
  return MEMORY[0x270F0C880]();
}

uint64_t sub_20B7D3718()
{
  return MEMORY[0x270F0C890]();
}

uint64_t sub_20B7D3728()
{
  return MEMORY[0x270F0C8A0]();
}

uint64_t sub_20B7D3738()
{
  return MEMORY[0x270F0C8B8]();
}

uint64_t sub_20B7D3748()
{
  return MEMORY[0x270F0C8C8]();
}

uint64_t sub_20B7D3768()
{
  return MEMORY[0x270F0C950]();
}

uint64_t sub_20B7D3778()
{
  return MEMORY[0x270F0C960]();
}

uint64_t sub_20B7D3788()
{
  return MEMORY[0x270F0C978]();
}

uint64_t sub_20B7D3798()
{
  return MEMORY[0x270F0C9C8]();
}

uint64_t sub_20B7D37A8()
{
  return MEMORY[0x270F0C9E0]();
}

uint64_t sub_20B7D37B8()
{
  return MEMORY[0x270F0C9F0]();
}

uint64_t sub_20B7D37C8()
{
  return MEMORY[0x270F0CA00]();
}

uint64_t sub_20B7D37D8()
{
  return MEMORY[0x270F0CA18]();
}

uint64_t sub_20B7D37E8()
{
  return MEMORY[0x270F0CA28]();
}

uint64_t sub_20B7D37F8()
{
  return MEMORY[0x270F0CA38]();
}

uint64_t sub_20B7D3808()
{
  return MEMORY[0x270F0CA48]();
}

uint64_t sub_20B7D3818()
{
  return MEMORY[0x270F0CA60]();
}

uint64_t sub_20B7D3828()
{
  return MEMORY[0x270F0CA68]();
}

uint64_t sub_20B7D3838()
{
  return MEMORY[0x270F0CAA0]();
}

uint64_t sub_20B7D3848()
{
  return MEMORY[0x270F0CAC0]();
}

uint64_t sub_20B7D3858()
{
  return MEMORY[0x270F0CAD0]();
}

uint64_t sub_20B7D3868()
{
  return MEMORY[0x270F0CAE0]();
}

uint64_t sub_20B7D3878()
{
  return MEMORY[0x270F0CAF8]();
}

uint64_t sub_20B7D3888()
{
  return MEMORY[0x270F0CB00]();
}

uint64_t sub_20B7D3898()
{
  return MEMORY[0x270F0CB18]();
}

uint64_t sub_20B7D38A8()
{
  return MEMORY[0x270F0CB28]();
}

uint64_t sub_20B7D38B8()
{
  return MEMORY[0x270F0CB30]();
}

uint64_t sub_20B7D38C8()
{
  return MEMORY[0x270F0CB40]();
}

uint64_t sub_20B7D38D8()
{
  return MEMORY[0x270F0CB58]();
}

uint64_t sub_20B7D38F8()
{
  return MEMORY[0x270F0CB88]();
}

uint64_t sub_20B7D3908()
{
  return MEMORY[0x270F0CB98]();
}

uint64_t sub_20B7D3918()
{
  return MEMORY[0x270F0CBB0]();
}

uint64_t sub_20B7D3928()
{
  return MEMORY[0x270F0CBB8]();
}

uint64_t sub_20B7D3938()
{
  return MEMORY[0x270F185B8]();
}

uint64_t sub_20B7D3948()
{
  return MEMORY[0x270F185C0]();
}

uint64_t sub_20B7D3958()
{
  return MEMORY[0x270F185C8]();
}

uint64_t sub_20B7D3968()
{
  return MEMORY[0x270F185D0]();
}

uint64_t sub_20B7D3978()
{
  return MEMORY[0x270F185D8]();
}

uint64_t sub_20B7D3988()
{
  return MEMORY[0x270F185E0]();
}

uint64_t sub_20B7D3998()
{
  return MEMORY[0x270F185E8]();
}

uint64_t sub_20B7D39A8()
{
  return MEMORY[0x270F185F0]();
}

uint64_t sub_20B7D39B8()
{
  return MEMORY[0x270FA1800]();
}

uint64_t sub_20B7D39C8()
{
  return MEMORY[0x270FA1938]();
}

uint64_t sub_20B7D39D8()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_20B7D39E8()
{
  return MEMORY[0x270FA2E08]();
}

uint64_t sub_20B7D39F8()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_20B7D3A08()
{
  return MEMORY[0x270EE3C20]();
}

uint64_t sub_20B7D3A28()
{
  return MEMORY[0x270EE3D78]();
}

uint64_t sub_20B7D3A38()
{
  return MEMORY[0x270EF1848]();
}

uint64_t sub_20B7D3A48()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_20B7D3A58()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_20B7D3A68()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_20B7D3A78()
{
  return MEMORY[0x270EE1EF8]();
}

uint64_t sub_20B7D3A88()
{
  return MEMORY[0x270EF18C8]();
}

uint64_t sub_20B7D3A98()
{
  return MEMORY[0x270EF1900]();
}

uint64_t sub_20B7D3AA8()
{
  return MEMORY[0x270EF1920]();
}

uint64_t sub_20B7D3AB8()
{
  return MEMORY[0x270EF1930]();
}

uint64_t sub_20B7D3AC8()
{
  return MEMORY[0x270EF1940]();
}

uint64_t sub_20B7D3AD8()
{
  return MEMORY[0x270EF1948]();
}

uint64_t sub_20B7D3AE8()
{
  return MEMORY[0x270EF1960]();
}

uint64_t sub_20B7D3AF8()
{
  return MEMORY[0x270EF19A8]();
}

uint64_t sub_20B7D3B08()
{
  return MEMORY[0x270EF19F0]();
}

uint64_t sub_20B7D3B18()
{
  return MEMORY[0x270EF1A40]();
}

uint64_t sub_20B7D3B28()
{
  return MEMORY[0x270EF1B00]();
}

uint64_t sub_20B7D3B38()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_20B7D3B48()
{
  return MEMORY[0x270F9D648]();
}

uint64_t sub_20B7D3B58()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_20B7D3B68()
{
  return MEMORY[0x270F9D740]();
}

uint64_t sub_20B7D3B78()
{
  return MEMORY[0x270F9D760]();
}

uint64_t sub_20B7D3B88()
{
  return MEMORY[0x270F9D778]();
}

uint64_t sub_20B7D3B98()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_20B7D3BA8()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_20B7D3BB8()
{
  return MEMORY[0x270F9D8B0]();
}

uint64_t sub_20B7D3BC8()
{
  return MEMORY[0x270F9D8F0]();
}

uint64_t sub_20B7D3BD8()
{
  return MEMORY[0x270F9D938]();
}

uint64_t sub_20B7D3BE8()
{
  return MEMORY[0x270F9DA28]();
}

uint64_t sub_20B7D3BF8()
{
  return MEMORY[0x270F9DA98]();
}

uint64_t sub_20B7D3C08()
{
  return MEMORY[0x270F9DB18]();
}

uint64_t sub_20B7D3C18()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_20B7D3C28()
{
  return MEMORY[0x270EF1B90]();
}

uint64_t sub_20B7D3C38()
{
  return MEMORY[0x270EF1BB0]();
}

uint64_t sub_20B7D3C48()
{
  return MEMORY[0x270F9DBB0]();
}

uint64_t sub_20B7D3C58()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_20B7D3C68()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_20B7D3C78()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_20B7D3C88()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_20B7D3C98()
{
  return MEMORY[0x270EE1F08]();
}

uint64_t sub_20B7D3CA8()
{
  return MEMORY[0x270FA1DF8]();
}

uint64_t sub_20B7D3CB8()
{
  return MEMORY[0x270FA1EA0]();
}

uint64_t sub_20B7D3CC8()
{
  return MEMORY[0x270FA1EA8]();
}

uint64_t sub_20B7D3CD8()
{
  return MEMORY[0x270FA1F08]();
}

uint64_t sub_20B7D3CE8()
{
  return MEMORY[0x270FA1F10]();
}

uint64_t sub_20B7D3CF8()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_20B7D3D08()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_20B7D3D18()
{
  return MEMORY[0x270EF1E10]();
}

uint64_t sub_20B7D3D28()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_20B7D3D38()
{
  return MEMORY[0x270FA2E58]();
}

uint64_t sub_20B7D3D48()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_20B7D3D58()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_20B7D3D68()
{
  return MEMORY[0x270EF20D0]();
}

uint64_t sub_20B7D3D78()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_20B7D3D88()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_20B7D3D98()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_20B7D3DA8()
{
  return MEMORY[0x270EF23D0]();
}

uint64_t sub_20B7D3DB8()
{
  return MEMORY[0x270EF2480]();
}

uint64_t sub_20B7D3DC8()
{
  return MEMORY[0x270EF24B8]();
}

uint64_t sub_20B7D3DD8()
{
  return MEMORY[0x270EF24C8]();
}

uint64_t sub_20B7D3DE8()
{
  return MEMORY[0x270EF25A8]();
}

uint64_t sub_20B7D3DF8()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_20B7D3E08()
{
  return MEMORY[0x270F9E6A0]();
}

uint64_t sub_20B7D3E18()
{
  return MEMORY[0x270F9E6B0]();
}

uint64_t sub_20B7D3E28()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_20B7D3E38()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_20B7D3E48()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_20B7D3E58()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_20B7D3E68()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_20B7D3E78()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_20B7D3E88()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_20B7D3E98()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_20B7D3EA8()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_20B7D3EB8()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_20B7D3EC8()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_20B7D3ED8()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_20B7D3EE8()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_20B7D3EF8()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_20B7D3F08()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_20B7D3F18()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_20B7D3F28()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_20B7D3F38()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_20B7D3F48()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_20B7D3F58()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_20B7D3F68()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_20B7D3F78()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_20B7D3F88()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_20B7D3F98()
{
  return MEMORY[0x270F9F2A0]();
}

uint64_t sub_20B7D3FA8()
{
  return MEMORY[0x270F9F2E8]();
}

uint64_t sub_20B7D3FB8()
{
  return MEMORY[0x270F9F318]();
}

uint64_t sub_20B7D3FC8()
{
  return MEMORY[0x270F9F3E0]();
}

uint64_t sub_20B7D3FD8()
{
  return MEMORY[0x270F9F428]();
}

uint64_t sub_20B7D3FE8()
{
  return MEMORY[0x270F9F458]();
}

uint64_t sub_20B7D3FF8()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_20B7D4008()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_20B7D4018()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_20B7D4028()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_20B7D4038()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_20B7D4048()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_20B7D4058()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_20B7D4068()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_20B7D4078()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_20B7D4088()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_20B7D4098()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_20B7D40A8()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_20B7D40B8()
{
  return MEMORY[0x270F9FD70]();
}

uint64_t sub_20B7D40C8()
{
  return MEMORY[0x270F9FD98]();
}

CFTypeRef CFAutorelease(CFTypeRef arg)
{
  return (CFTypeRef)MEMORY[0x270EE4440](arg);
}

CFHashCode CFHash(CFTypeRef cf)
{
  return MEMORY[0x270EE4A48](cf);
}

Boolean CFPreferencesGetAppBooleanValue(CFStringRef key, CFStringRef applicationID, Boolean *keyExistsAndHasValidFormat)
{
  return MEMORY[0x270EE4CD0](key, applicationID, keyExistsAndHasValidFormat);
}

void CFRelease(CFTypeRef cf)
{
}

CFTypeRef CFRetain(CFTypeRef cf)
{
  return (CFTypeRef)MEMORY[0x270EE4E10](cf);
}

CGAffineTransform *__cdecl CGAffineTransformMakeScale(CGAffineTransform *__return_ptr retstr, CGFloat sx, CGFloat sy)
{
  return (CGAffineTransform *)MEMORY[0x270EE59A8](retstr, sx, sy);
}

CGContextRef CGBitmapContextCreate(void *data, size_t width, size_t height, size_t bitsPerComponent, size_t bytesPerRow, CGColorSpaceRef space, uint32_t bitmapInfo)
{
  return (CGContextRef)MEMORY[0x270EE59E8](data, width, height, bitsPerComponent, bytesPerRow, space, *(void *)&bitmapInfo);
}

CGImageRef CGBitmapContextCreateImage(CGContextRef context)
{
  return (CGImageRef)MEMORY[0x270EE59F8](context);
}

CGColorRef CGColorCreate(CGColorSpaceRef space, const CGFloat *components)
{
  return (CGColorRef)MEMORY[0x270EE5B50](space, components);
}

CGColorRef CGColorCreateCopy(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x270EE5B58](color);
}

CGColorRef CGColorCreateSRGB(CGFloat red, CGFloat green, CGFloat blue, CGFloat alpha)
{
  return (CGColorRef)MEMORY[0x270EE5B88](red, green, blue, alpha);
}

BOOL CGColorEqualToColor(CGColorRef color1, CGColorRef color2)
{
  return MEMORY[0x270EE5B98](color1, color2);
}

CGColorSpaceRef CGColorGetColorSpace(CGColorRef color)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5BC8](color);
}

const CGFloat *__cdecl CGColorGetComponents(CGColorRef color)
{
  return (const CGFloat *)MEMORY[0x270EE5BD0](color);
}

size_t CGColorGetNumberOfComponents(CGColorRef color)
{
  return MEMORY[0x270EE5BE0](color);
}

void CGColorRelease(CGColorRef color)
{
}

CGColorRef CGColorRetain(CGColorRef color)
{
  return (CGColorRef)MEMORY[0x270EE5C20](color);
}

CGColorSpaceRef CGColorSpaceCreateDeviceRGB(void)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5C68]();
}

CGColorSpaceRef CGColorSpaceCreateWithName(CFStringRef name)
{
  return (CGColorSpaceRef)MEMORY[0x270EE5CA8](name);
}

CFStringRef CGColorSpaceGetName(CGColorSpaceRef space)
{
  return (CFStringRef)MEMORY[0x270EE5D10](space);
}

void CGColorSpaceRelease(CGColorSpaceRef space)
{
}

void CGContextAddArc(CGContextRef c, CGFloat x, CGFloat y, CGFloat radius, CGFloat startAngle, CGFloat endAngle, int clockwise)
{
}

void CGContextAddCurveToPoint(CGContextRef c, CGFloat cp1x, CGFloat cp1y, CGFloat cp2x, CGFloat cp2y, CGFloat x, CGFloat y)
{
}

void CGContextAddLineToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextAddPath(CGContextRef c, CGPathRef path)
{
}

void CGContextClip(CGContextRef c)
{
}

void CGContextClipToMask(CGContextRef c, CGRect rect, CGImageRef mask)
{
}

void CGContextConcatCTM(CGContextRef c, CGAffineTransform *transform)
{
}

void CGContextDrawImage(CGContextRef c, CGRect rect, CGImageRef image)
{
}

void CGContextDrawLinearGradient(CGContextRef c, CGGradientRef gradient, CGPoint startPoint, CGPoint endPoint, CGGradientDrawingOptions options)
{
}

void CGContextFillRect(CGContextRef c, CGRect rect)
{
}

void CGContextMoveToPoint(CGContextRef c, CGFloat x, CGFloat y)
{
}

void CGContextRelease(CGContextRef c)
{
}

void CGContextRestoreGState(CGContextRef c)
{
}

void CGContextSaveGState(CGContextRef c)
{
}

void CGContextSetBlendMode(CGContextRef c, CGBlendMode mode)
{
}

void CGContextSetFillColor(CGContextRef c, const CGFloat *components)
{
}

void CGContextSetFillColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextSetLineWidth(CGContextRef c, CGFloat width)
{
}

void CGContextSetStrokeColorWithColor(CGContextRef c, CGColorRef color)
{
}

void CGContextStrokePath(CGContextRef c)
{
}

CGDataProviderRef CGDataProviderCreateWithCFData(CFDataRef data)
{
  return (CGDataProviderRef)MEMORY[0x270EE62D0](data);
}

CGGradientRef CGGradientCreateWithColors(CGColorSpaceRef space, CFArrayRef colors, const CGFloat *locations)
{
  return (CGGradientRef)MEMORY[0x270EE6690](space, colors, locations);
}

void CGGradientRelease(CGGradientRef gradient)
{
}

size_t CGImageGetHeight(CGImageRef image)
{
  return MEMORY[0x270EE6800](image);
}

size_t CGImageGetWidth(CGImageRef image)
{
  return MEMORY[0x270EE6868](image);
}

void CGImageRelease(CGImageRef image)
{
}

CGImageRef CGImageRetain(CGImageRef image)
{
  return (CGImageRef)MEMORY[0x270EE6908](image);
}

CGImageRef CGImageSourceCreateImageAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x270EF5018](isrc, index, options);
}

CGImageRef CGImageSourceCreateThumbnailAtIndex(CGImageSourceRef isrc, size_t index, CFDictionaryRef options)
{
  return (CGImageRef)MEMORY[0x270EF5028](isrc, index, options);
}

CGImageSourceRef CGImageSourceCreateWithDataProvider(CGDataProviderRef provider, CFDictionaryRef options)
{
  return (CGImageSourceRef)MEMORY[0x270EF5038](provider, options);
}

uint64_t CGImageSourceGetTypeWithData()
{
  return MEMORY[0x270EF5070]();
}

CGPathRef CGPathCreateWithEllipseInRect(CGRect rect, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x270EE7050](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

CGPathRef CGPathCreateWithRoundedRect(CGRect rect, CGFloat cornerWidth, CGFloat cornerHeight, const CGAffineTransform *transform)
{
  return (CGPathRef)MEMORY[0x270EE7060](transform, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, cornerWidth, cornerHeight);
}

void CGPathRelease(CGPathRef path)
{
}

CGRect CGRectApplyAffineTransform(CGRect rect, CGAffineTransform *t)
{
  MEMORY[0x270EE7168](t, (__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v5;
  result.size.CGFloat width = v4;
  result.origin.CGFloat y = v3;
  result.origin.CGFloat x = v2;
  return result;
}

BOOL CGRectEqualToRect(CGRect rect1, CGRect rect2)
{
  return MEMORY[0x270EE71A0]((__n128)rect1.origin, *(__n128 *)&rect1.origin.y, (__n128)rect1.size, *(__n128 *)&rect1.size.height, (__n128)rect2.origin, *(__n128 *)&rect2.origin.y, (__n128)rect2.size, *(__n128 *)&rect2.size.height);
}

CGFloat CGRectGetMaxX(CGRect rect)
{
  MEMORY[0x270EE71C0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMaxY(CGRect rect)
{
  MEMORY[0x270EE71D0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidX(CGRect rect)
{
  MEMORY[0x270EE71D8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMidY(CGRect rect)
{
  MEMORY[0x270EE71F0]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinX(CGRect rect)
{
  MEMORY[0x270EE71F8]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGFloat CGRectGetMinY(CGRect rect)
{
  MEMORY[0x270EE7210]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  return result;
}

CGRect CGRectInset(CGRect rect, CGFloat dx, CGFloat dy)
{
  MEMORY[0x270EE7228]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height, dx, dy);
  result.size.CGFloat height = v6;
  result.size.CGFloat width = v5;
  result.origin.CGFloat y = v4;
  result.origin.CGFloat x = v3;
  return result;
}

CGRect CGRectIntegral(CGRect rect)
{
  MEMORY[0x270EE7230]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
  result.size.CGFloat height = v4;
  result.size.CGFloat width = v3;
  result.origin.CGFloat y = v2;
  result.origin.CGFloat x = v1;
  return result;
}

BOOL CGRectIsNull(CGRect rect)
{
  return MEMORY[0x270EE7270]((__n128)rect.origin, *(__n128 *)&rect.origin.y, (__n128)rect.size, *(__n128 *)&rect.size.height);
}

uint64_t CNAbstractMethodException()
{
  return MEMORY[0x270F185F8]();
}

uint64_t CNAggregateComparator()
{
  return MEMORY[0x270F18600]();
}

uint64_t CNComparatorForSortingByAuxiliaryValues()
{
  return MEMORY[0x270F18608]();
}

uint64_t CNImageUtilsCroppedImageDataFromFullSizeImageData()
{
  return MEMORY[0x270EE4098]();
}

uint64_t CNInitializerUnavailableException()
{
  return MEMORY[0x270F18610]();
}

uint64_t CNIsChineseJapaneseKoreanString()
{
  return MEMORY[0x270F18620]();
}

uint64_t CNLogicalNot()
{
  return MEMORY[0x270F18628]();
}

uint64_t CNResultWithLock()
{
  return MEMORY[0x270F18630]();
}

uint64_t CNRunWithLock()
{
  return MEMORY[0x270F18638]();
}

uint64_t CNUnimplementedMethodException()
{
  return MEMORY[0x270F18648]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x270F95FB8]();
}

Class NSClassFromString(NSString *aClassName)
{
  return (Class)MEMORY[0x270EF2A50](aClassName);
}

const char *__cdecl NSGetSizeAndAlignment(const char *typePtr, NSUInteger *sizep, NSUInteger *alignp)
{
  return (const char *)MEMORY[0x270EE5598](typePtr, sizep, alignp);
}

void NSLog(NSString *format, ...)
{
}

NSArray *__cdecl NSSearchPathForDirectoriesInDomains(NSSearchPathDirectory directory, NSSearchPathDomainMask domainMask, BOOL expandTilde)
{
  return (NSArray *)MEMORY[0x270EF2BD8](directory, domainMask, expandTilde);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return (NSString *)MEMORY[0x270EF2C08](aClass);
}

NSString *__cdecl NSStringFromSize(NSSize aSize)
{
  return (NSString *)MEMORY[0x270EF2C40]((__n128)aSize, *(__n128 *)&aSize.height);
}

uint64_t UICreateCGImageFromIOSurface()
{
  return MEMORY[0x270F05FD0]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_object_dispose(const void *a1, const int a2)
{
}

void _Block_release(const void *aBlock)
{
}

uint64_t _CFMZEnabled()
{
  return MEMORY[0x270EE5648]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void __assert_rtn(const char *a1, const char *a2, int a3, const char *a4)
{
}

int *__error(void)
{
  return (int *)MEMORY[0x270ED7DC0]();
}

__double2 __sincos_stret(double a1)
{
  MEMORY[0x270ED7E88](a1);
  result.__cosval = v2;
  result.__sinval = v1;
  return result;
}

uint64_t _os_feature_enabled_impl()
{
  return MEMORY[0x270ED8070]();
}

void _os_log_debug_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_error_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_fault_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _sl_dlopen()
{
  return MEMORY[0x270F76310]();
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t abort_report_np()
{
  return MEMORY[0x270ED8458]();
}

void bzero(void *a1, size_t a2)
{
}

uint64_t cn_objectResultWithObjectLock()
{
  return MEMORY[0x270F18650]();
}

uint64_t cn_runWithObjectLock()
{
  return MEMORY[0x270F18658]();
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x270ED9448](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x270ED9460](label, attr);
}

void dispatch_resume(dispatch_object_t object)
{
}

dispatch_source_t dispatch_source_create(dispatch_source_type_t type, uintptr_t handle, uintptr_t mask, dispatch_queue_t queue)
{
  return (dispatch_source_t)MEMORY[0x270ED9510](type, handle, mask, queue);
}

void dispatch_source_set_event_handler(dispatch_source_t source, dispatch_block_t handler)
{
}

char *dlerror(void)
{
  return (char *)MEMORY[0x270ED9620]();
}

void *__cdecl dlopen(const char *__path, int __mode)
{
  return (void *)MEMORY[0x270ED9628](__path, *(void *)&__mode);
}

void *__cdecl dlsym(void *__handle, const char *__symbol)
{
  return (void *)MEMORY[0x270ED9648](__handle, __symbol);
}

void free(void *a1)
{
}

uint64_t kdebug_trace()
{
  return MEMORY[0x270ED9F50]();
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl malloc_type_malloc(size_t size, malloc_type_id_t type_id)
{
  return (void *)MEMORY[0x270EDA390](size, type_id);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x270F9A540]();
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

{
  MEMORY[0x270F9A570](context);
}

{
  return (void *)MEMORY[0x270F9A588]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_begin_catch(void *exc_buf)
{
  return (id)MEMORY[0x270F9A598](exc_buf);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x270F9A5A8]();
}

void objc_copyWeak(id *to, id *from)
{
}

void objc_destroyWeak(id *location)
{
}

void objc_end_catch(void)
{
}

void objc_enumerationMutation(id obj)
{
}

void objc_exception_rethrow(void)
{
}

void objc_exception_throw(id exception)
{
}

Class objc_getClass(const char *name)
{
  return (Class)MEMORY[0x270F9A658](name);
}

id objc_getProperty(id self, SEL _cmd, ptrdiff_t offset, BOOL atomic)
{
  return (id)MEMORY[0x270F9A678](self, _cmd, offset, atomic);
}

id objc_initWeak(id *location, id val)
{
  return (id)MEMORY[0x270F9A688](location, val);
}

id objc_loadWeakRetained(id *location)
{
  return (id)MEMORY[0x270F9A6B0](location);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x270F9A6F8]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x270F9A700]();
}

uint64_t objc_opt_new()
{
  return MEMORY[0x270F9A710]();
}

uint64_t objc_opt_respondsToSelector()
{
  return MEMORY[0x270F9A728]();
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x270F9A880](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A888](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

id objc_retainBlock(id a1)
{
  return (id)MEMORY[0x270F9A898](a1);
}

void objc_setProperty_atomic(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_atomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_setProperty_nonatomic_copy(id self, SEL _cmd, id newValue, ptrdiff_t offset)
{
}

void objc_storeStrong(id *location, id obj)
{
}

id objc_storeWeak(id *location, id obj)
{
  return (id)MEMORY[0x270F9A9F8](location, obj);
}

int objc_sync_enter(id obj)
{
  return MEMORY[0x270F9AA18](obj);
}

int objc_sync_exit(id obj)
{
  return MEMORY[0x270F9AA20](obj);
}

void objc_terminate(void)
{
}

id objc_unsafeClaimAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9AA38](a1);
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x270EDA9A0](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

BOOL os_signpost_enabled(os_log_t log)
{
  return MEMORY[0x270EDAA58](log);
}

os_signpost_id_t os_signpost_id_generate(os_log_t log)
{
  return MEMORY[0x270EDAA60](log);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_continuation_init()
{
  return MEMORY[0x270FA23F8]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getAtPartialKeyPath()
{
  return MEMORY[0x270FA0318]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_once()
{
  return MEMORY[0x270FA04F0]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_task_alloc()
{
  return MEMORY[0x270FA2450]();
}

uint64_t swift_task_create()
{
  return MEMORY[0x270FA2458]();
}

uint64_t swift_task_dealloc()
{
  return MEMORY[0x270FA2460]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

int usleep(useconds_t a1)
{
  return MEMORY[0x270EDB9E0](*(void *)&a1);
}