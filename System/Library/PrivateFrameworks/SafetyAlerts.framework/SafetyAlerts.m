void sub_1D1648D7C(_Unwind_Exception *a1)
{
  void *v1;
  void *v2;
  void *v3;

  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1D1648F84(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, objc_super a9)
{
  v10 = v9;
  a9.receiver = v10;
  a9.super_class = (Class)SAEDFollowUpManager;
  [(_Unwind_Exception *)&a9 dealloc];
  _Unwind_Resume(a1);
}

void __clang_call_terminate(void *a1)
{
}

void sub_1D16498DC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, void *a20)
{
  _Unwind_Resume(a1);
}

void sub_1D1649A4C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D1649D00(_Unwind_Exception *a1)
{
  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1D1649E98(_Unwind_Exception *a1)
{
  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1D1649F50(_Unwind_Exception *a1)
{
  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1D164A008(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164A0BC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164A17C(_Unwind_Exception *a1)
{
  v4 = v3;

  _Unwind_Resume(a1);
}

void sub_1D164A3D4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1D164A4CC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1D164A574(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1D164A5E0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164A81C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13)
{
  _Unwind_Resume(a1);
}

void sub_1D164AB80(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164AD60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1D164B040(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, void *a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1D164B36C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, void *a15)
{
  _Unwind_Resume(a1);
}

void sub_1D164B7A0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164BCEC(_Unwind_Exception *a1)
{
  v3 = v1;

  _Unwind_Resume(a1);
}

void sub_1D164BEF0(_Unwind_Exception *a1)
{
  v3 = v2;

  _Unwind_Resume(a1);
}

void sub_1D164C0CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164C1CC(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164C51C(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164C618(_Unwind_Exception *exception_object)
{
}

void sub_1D164C9E4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164CB48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164CCD8(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164CF48(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164D0E4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1D164D180(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1D164D2A4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164D5B0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164D718(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *a14)
{
  _Unwind_Resume(a1);
}

void sub_1D164DAC4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164DD90(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164DEF4(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164E2C4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,void *a26)
{
  _Unwind_Resume(a1);
}

void sub_1D164E480(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164E590(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164EA30(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164EBC0(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void sub_1D164EC74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id a10)
{
  _Unwind_Resume(a1);
}

void sub_1D164EE18(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void SALogInit(void)
{
  if (!SALogObjectGeneral)
  {
    os_log_t v0 = os_log_create("com.apple.safetyalertsd", "general");
    v1 = (void *)SALogObjectGeneral;
    SALogObjectGeneral = (uint64_t)v0;
  }
  if (!SALogObjectWarning)
  {
    SALogObjectWarning = (uint64_t)os_log_create("com.apple.safetyalertsd", "warning");
    MEMORY[0x1F41817F8]();
  }
}

void *SAPlatformInfo::instance(SAPlatformInfo *this)
{
  {
    SAPlatformInfo::SAPlatformInfo((SAPlatformInfo *)&SAPlatformInfo::instance(void)::saPlatformInfo);
  }
  return &SAPlatformInfo::instance(void)::saPlatformInfo;
}

void sub_1D164EF70(_Unwind_Exception *a1)
{
}

void SAPlatformInfo::SAPlatformInfo(SAPlatformInfo *this)
{
  *(void *)this = 0;
  *((unsigned char *)this + 12) = 0;
  uint64_t v2 = MGCopyAnswer();
  v3 = *(void **)this;
  *(void *)this = v2;

  *((unsigned char *)this + 8) = MGGetBoolAnswer();
  *((unsigned char *)this + 9) = os_variant_has_internal_content();
  int v4 = [*(id *)this isEqualToString:@"iPhone"];
  if (v4) {
    LOBYTE(v4) = MGGetBoolAnswer();
  }
  *((unsigned char *)this + 10) = v4;
  *((unsigned char *)this + 11) = 0;
  CFBooleanRef v5 = (const __CFBoolean *)MGCopyAnswer();
  CFBooleanRef v6 = v5;
  if (v5)
  {
    *((unsigned char *)this + 12) = CFBooleanGetValue(v5) != 0;
    CFRelease(v6);
  }
}

void sub_1D164F050(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

uint64_t SAPlatformInfo::fetchIsTinkerWatch(SAPlatformInfo *this)
{
  return 0;
}

uint64_t SAPlatformInfo::isAOPSupportedDevice(id *this)
{
  uint64_t result = [*this isEqualToString:@"iPhone"];
  if (result) {
    return *((unsigned char *)this + 12) != 0;
  }
  return result;
}

uint64_t AnalyticsSendEventLazy()
{
  return MEMORY[0x1F41138B8]();
}

uint64_t BiomeLibrary()
{
  return MEMORY[0x1F410C8D0]();
}

Boolean CFBooleanGetValue(CFBooleanRef BOOLean)
{
  return MEMORY[0x1F40D7430](BOOLean);
}

void CFRelease(CFTypeRef cf)
{
}

uint64_t MGCopyAnswer()
{
  return MEMORY[0x1F417CDE0]();
}

uint64_t MGGetBoolAnswer()
{
  return MEMORY[0x1F417CE00]();
}

uint64_t _CTServerConnectionCreateOnTargetQueue()
{
  return MEMORY[0x1F40DF0C8]();
}

uint64_t _CTServerConnectionGetCellBroadcastConfig()
{
  return MEMORY[0x1F40DF120]();
}

void _Unwind_Resume(_Unwind_Exception *exception_object)
{
}

void std::terminate(void)
{
}

void *__cxa_begin_catch(void *a1)
{
  return (void *)MEMORY[0x1F417EF48](a1);
}

void __cxa_guard_abort(__guard *a1)
{
}

int __cxa_guard_acquire(__guard *a1)
{
  return MEMORY[0x1F417EF80](a1);
}

void __cxa_guard_release(__guard *a1)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint32_t arc4random_uniform(uint32_t __upper_bound)
{
  return MEMORY[0x1F40CA3C0](*(void *)&__upper_bound);
}

void dispatch_assert_queue_V2(dispatch_queue_t queue)
{
}

void dispatch_async(dispatch_queue_t queue, dispatch_block_t block)
{
}

void dispatch_once(dispatch_once_t *predicate, dispatch_block_t block)
{
}

dispatch_queue_attr_t dispatch_queue_attr_make_with_autorelease_frequency(dispatch_queue_attr_t attr, dispatch_autorelease_frequency_t frequency)
{
  return (dispatch_queue_attr_t)MEMORY[0x1F40CBBA8](attr, frequency);
}

dispatch_queue_t dispatch_queue_create(const char *label, dispatch_queue_attr_t attr)
{
  return (dispatch_queue_t)MEMORY[0x1F40CBBC0](label, attr);
}

void free(void *a1)
{
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x1F4181638](a1);
}

uint64_t objc_alloc_init()
{
  return MEMORY[0x1F4181648]();
}

{
  MEMORY[0x1F4181668](context);
}

{
  return (void *)MEMORY[0x1F4181670]();
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F4181678](a1);
}

uint64_t objc_claimAutoreleasedReturnValue()
{
  return MEMORY[0x1F4181688]();
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x1F41817A8](a1, a2);
}

uint64_t objc_opt_class()
{
  return MEMORY[0x1F41817B0]();
}

uint64_t objc_opt_isKindOfClass()
{
  return MEMORY[0x1F41817B8]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x1F41818B0](a1);
}

id objc_retainAutorelease(id a1)
{
  return (id)MEMORY[0x1F41818B8](a1);
}

id objc_retainAutoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x1F41818C0](a1);
}

void objc_storeStrong(id *location, id obj)
{
}

os_log_t os_log_create(const char *subsystem, const char *category)
{
  return (os_log_t)MEMORY[0x1F40CD360](subsystem, category);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x1F40CD3B8](oslog, type);
}

uint64_t os_variant_has_internal_content()
{
  return MEMORY[0x1F40CD648]();
}

int strcmp(const char *__s1, const char *__s2)
{
  return MEMORY[0x1F40CE158](__s1, __s2);
}

void xpc_connection_activate(xpc_connection_t connection)
{
}

xpc_connection_t xpc_connection_create_mach_service(const char *name, dispatch_queue_t targetq, uint64_t flags)
{
  return (xpc_connection_t)MEMORY[0x1F40CEBD0](name, targetq, flags);
}

void xpc_connection_send_message(xpc_connection_t connection, xpc_object_t message)
{
}

void xpc_connection_send_message_with_reply(xpc_connection_t connection, xpc_object_t message, dispatch_queue_t replyq, xpc_handler_t handler)
{
}

xpc_object_t xpc_connection_send_message_with_reply_sync(xpc_connection_t connection, xpc_object_t message)
{
  return (xpc_object_t)MEMORY[0x1F40CEC68](connection, message);
}

void xpc_connection_set_event_handler(xpc_connection_t connection, xpc_handler_t handler)
{
}

char *__cdecl xpc_copy_description(xpc_object_t object)
{
  return (char *)MEMORY[0x1F40CED28](object);
}

BOOL xpc_dictionary_apply(xpc_object_t xdict, xpc_dictionary_applier_t applier)
{
  return MEMORY[0x1F40CEE08](xdict, applier);
}

xpc_object_t xpc_dictionary_create(const char *const *keys, xpc_object_t *values, size_t count)
{
  return (xpc_object_t)MEMORY[0x1F40CEE20](keys, values, count);
}

BOOL xpc_dictionary_get_BOOL(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEE80](xdict, key);
}

double xpc_dictionary_get_double(xpc_object_t xdict, const char *key)
{
  MEMORY[0x1F40CEEB8](xdict, key);
  return result;
}

int64_t xpc_dictionary_get_int64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEC8](xdict, key);
}

const char *__cdecl xpc_dictionary_get_string(xpc_object_t xdict, const char *key)
{
  return (const char *)MEMORY[0x1F40CEEF0](xdict, key);
}

uint64_t xpc_dictionary_get_uint64(xpc_object_t xdict, const char *key)
{
  return MEMORY[0x1F40CEEF8](xdict, key);
}

void xpc_dictionary_set_BOOL(xpc_object_t xdict, const char *key, BOOL value)
{
}

void xpc_dictionary_set_string(xpc_object_t xdict, const char *key, const char *string)
{
}

xpc_type_t xpc_get_type(xpc_object_t object)
{
  return (xpc_type_t)MEMORY[0x1F40CF148](object);
}

                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          v29 = "";
        v10 = "{\"msg%{public}.0s\":\"#saClient,getIgneousEnablementStateReply,replyIsNotADictionary\"}";
LABEL_9:
        _os_log_impl(&dword_1D1647000, v8, OS_LOG_TYPE_DEFAULT, v10, buf, 0x12u);
        LOBYTE(v9) = 0;
      }
    }
  }
  else
  {
    v8 = SALogObjectGeneral;
    LOBYTE(v9) = 0;
    if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 68289026;
      v27 = 0;
      v28 = 2082;
      v29 = "";
      v10 = "{\"msg%{public}.0s\":\"#saClient,getIgneousEnablementStateReply nil\"}";
      goto LABEL_9;
    }
  }

  return v9;
}

- (void)fetchIsSaewEnabledOnQueue:(id)a3 withReply:(id)a4
{
  CFBooleanRef v6 = a3;
  id v7 = a4;
  v8 = (void *)MEMORY[0x1D25F81C0]();
  xpc_object_t v9 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v9, "message", "saIgneousEnableState");
  connection = self->_connection;
  v12[0] = MEMORY[0x1E4F143A8];
  v12[1] = 3221225472;
  v12[2] = __52__SafetyAlerts_fetchIsSaewEnabledOnQueue_withReply___block_invoke;
  v12[3] = &unk_1E68D9740;
  v12[4] = self;
  id v11 = v7;
  id v13 = v11;
  xpc_connection_send_message_with_reply(connection, v9, v6, v12);
}

void __52__SafetyAlerts_fetchIsSaewEnabledOnQueue_withReply___block_invoke(uint64_t a1, void *a2)
{
  id v4 = a2;
  id v3 = objc_alloc_init(MEMORY[0x1E4F1CA60]);
  [*(id *)(a1 + 32) getIgneousEnablementStateReply:v4 stateInfo:v3];
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

- (id)getIgneousTestStatusSync
{
  uint64_t v13 = *MEMORY[0x1E4F143B8];
  xpc_object_t v3 = xpc_dictionary_create(0, 0, 0);
  xpc_dictionary_set_string(v3, "message", "saIgneousTestState");
  id v4 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    v12 = "";
    _os_log_impl(&dword_1D1647000, v4, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"daemonInterfaceProd,getIgneousTestStatusSync\"}", (uint8_t *)&v9, 0x12u);
  }
  xpc_object_t v5 = xpc_connection_send_message_with_reply_sync(self->_connection, v3);
  CFBooleanRef v6 = [(SafetyAlerts *)self getIgneousStatusInfoFromReply:v5];
  id v7 = SALogObjectGeneral;
  if (os_log_type_enabled((os_log_t)SALogObjectGeneral, OS_LOG_TYPE_DEFAULT))
  {
    int v9 = 68289026;
    int v10 = 0;
    __int16 v11 = 2082;
    v12 = "";
    _os_log_impl(&dword_1D1647000, v7, OS_LOG_TYPE_DEFAULT, "{\"msg%{public}.0s\":\"#saClient,getIgneousTestStatusSyncDone\"}", (uint8_t *)&v9, 0x12u);
  }

  return v6;
}

- (void).cxx_destruct
{
  objc_storeStrong((id *)&self->_connection, 0);
  objc_storeStrong((id *)&self->_queue, 0);
}

@end