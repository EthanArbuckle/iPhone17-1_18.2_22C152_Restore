uint64_t ContextfulParser<>.addContext<A>(_:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v9;

  v5 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v2, a1);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a2, v7, a1);
}

uint64_t AddContext.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t AddContext.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AddContext.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*AddContext.base.modify())()
{
  return nullsub_1;
}

uint64_t AddContext.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, void))(*(void *)(a3 + 32) + 24))(a1, a2, *(void *)(a3 + 16));
}

uint64_t sub_258742668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return AddContext.parse(_:context:)(a1, a2, a3);
}

uint64_t variable initialization expression of ParsingError.userError()
{
  return 0;
}

uint64_t variable initialization expression of IteratorCollector.count()
{
  return 0;
}

uint64_t variable initialization expression of Collect.count()
{
  return 0;
}

uint64_t variable initialization expression of TempSeekingParser.count()
{
  return 0;
}

uint64_t variable initialization expression of DeferredRangeIterator.range()
{
  return 0;
}

uint64_t variable initialization expression of Placeholder.message()
{
  return 0;
}

uint64_t sub_2587426C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_2587426D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_258742760(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 <= 7
    && *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) <= 0x18uLL
    && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
  }
  else
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    v3 = (uint64_t *)(v8 + ((v5 + 16) & ~v5));
    swift_retain();
  }
  return v3;
}

uint64_t sub_258742818(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_258742844(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_258742894(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_2587428E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_258742934(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1;
}

uint64_t sub_258742984(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_258742AE0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x258742CF8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for AddContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_258742D38()
{
  type metadata accessor for AddContext();
  return swift_getWitnessTable();
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

uint64_t sub_258742DB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t (*Flatten_2.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258742EB4(char *a1, uint64_t a2, char *a3, uint64_t a4, uint64_t a5, void *a6)
{
  v75 = a3;
  v72 = a1;
  uint64_t v73 = a2;
  uint64_t v10 = a6[4];
  uint64_t v79 = a6[3];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v12 = a6[5];
  uint64_t v78 = TupleTypeMetadata2;
  uint64_t v77 = swift_getTupleTypeMetadata2();
  uint64_t v16 = MEMORY[0x270FA5388](v77, v13, v14, v15);
  v74 = (char *)&v56 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v16, v18, v19, v20);
  v76 = (char *)&v56 - v22;
  uint64_t v26 = MEMORY[0x270FA5388](v21, v23, v24, v25);
  v28 = (char *)&v56 - v27;
  MEMORY[0x270FA5388](v26, v29, v30, v31);
  v33 = (char *)&v56 - v32;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a6[6] + 24))(a4, a5, a6[2]);
  if (!v6)
  {
    uint64_t v35 = *(int *)(v78 + 48);
    v36 = &v33[v35];
    v68 = &v33[v35];
    uint64_t v37 = *(int *)(v77 + 48);
    v38 = &v33[v37];
    v71 = &v28[v37];
    v39 = &v28[v35];
    v65 = &v28[v35];
    v70 = *(void **)(v79 - 8);
    v62 = (void (*)(void))v70[2];
    v63 = v70 + 2;
    uint64_t v66 = 0;
    ((void (*)(char *, char *, uint64_t))v62)(v28, v33, v79);
    v69 = *(void **)(v10 - 8);
    v60 = (void (*)(char *, char *, uint64_t))v69[2];
    v60(v39, v36, v10);
    uint64_t v64 = *(void *)(v12 - 8);
    v57 = *(void (**)(char *, char *, uint64_t))(v64 + 16);
    v59 = v38;
    v57(v71, v38, v12);
    uint64_t v67 = v10;
    v61 = (void (*)(char *, char *, uint64_t))v70[4];
    v61(v72, v28, v79);
    v72 = &v76[*(int *)(v77 + 48)];
    v40 = v72;
    uint64_t v58 = v12;
    v41 = &v76[*(int *)(v78 + 48)];
    v62();
    uint64_t v42 = v67;
    v60(v41, v68, v67);
    v57(v40, v38, v12);
    v43 = (void (*)(uint64_t, char *, uint64_t))v69[4];
    uint64_t v44 = v42;
    v43(v73, v41, v42);
    v45 = v74;
    v46 = &v74[*(int *)(v77 + 48)];
    v47 = &v74[*(int *)(v78 + 48)];
    v61(v74, v33, v79);
    uint64_t v48 = v44;
    v43((uint64_t)v47, v68, v44);
    uint64_t v49 = v64;
    v50 = *(void (**)(char *, char *, uint64_t))(v64 + 32);
    uint64_t v51 = v58;
    v50(v46, v59, v58);
    v50(v75, v46, v51);
    v52 = (void (*)(char *, uint64_t))v69[1];
    v52(v47, v48);
    v53 = (void (*)(char *, uint64_t))v70[1];
    uint64_t v54 = v79;
    v53(v45, v79);
    v55 = *(void (**)(char *, uint64_t))(v49 + 8);
    v55(v72, v51);
    v53(v76, v54);
    v55(v71, v51);
    return ((uint64_t (*)(char *, uint64_t))v52)(v65, v67);
  }
  return result;
}

uint64_t sub_258743354@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return sub_258742EB4(a4, (uint64_t)&a4[*(int *)(TupleTypeMetadata3 + 48)], &a4[*(int *)(TupleTypeMetadata3 + 64)], a1, a2, a3);
}

uint64_t (*Flatten_3.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_2587433FC(char *a1, char *a2, char *a3, char *a4, uint64_t a5, uint64_t a6, void *a7)
{
  v113 = a4;
  v110 = a2;
  v111 = a3;
  v109 = a1;
  uint64_t v11 = a7[4];
  uint64_t v125 = a7[3];
  uint64_t v12 = v11;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = a7[5];
  v122 = (int *)TupleTypeMetadata2;
  uint64_t v126 = v14;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a7[6];
  v123 = (void (*)(char *, uint64_t))v15;
  uint64_t v124 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v21 = MEMORY[0x270FA5388](v17, v18, v19, v20);
  v112 = (char *)&v89 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = MEMORY[0x270FA5388](v21, v23, v24, v25);
  v118 = (char *)&v89 - v27;
  uint64_t v31 = MEMORY[0x270FA5388](v26, v28, v29, v30);
  v119 = (char *)&v89 - v32;
  uint64_t v36 = MEMORY[0x270FA5388](v31, v33, v34, v35);
  v38 = (char *)&v89 - v37;
  MEMORY[0x270FA5388](v36, v39, v40, v41);
  v43 = (char *)&v89 - v42;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a7[7] + 24))(a5, a6, a7[2]);
  if (!v7)
  {
    uint64_t v45 = v122[12];
    v46 = &v43[v45];
    v117 = &v43[v45];
    uint64_t v47 = *((int *)v123 + 12);
    uint64_t v48 = &v43[v47];
    v114 = &v43[v47];
    uint64_t v49 = *(int *)(v17 + 48);
    uint64_t v100 = v17;
    v116 = &v43[v49];
    v108 = &v38[v49];
    v50 = &v38[v47];
    v96 = &v38[v47];
    uint64_t v51 = &v38[v45];
    v97 = &v38[v45];
    v107 = *(void **)(v125 - 8);
    v105 = (void (*)(void))v107[2];
    v106 = (char *)(v107 + 2);
    uint64_t v98 = 0;
    ((void (*)(char *, char *, uint64_t))v105)(v38, v43, v125);
    uint64_t v115 = v12;
    v121 = *(void **)(v12 - 8);
    v52 = (void (*)(char *, char *, uint64_t))v121[2];
    v103 = v121 + 2;
    v104 = v52;
    v52(v51, v46, v12);
    v120 = *(void **)(v126 - 8);
    v53 = (void (*)(char *, char *, uint64_t))v120[2];
    v101 = v120 + 2;
    v102 = v53;
    v53(v50, v48, v126);
    uint64_t v94 = *(void *)(v124 - 8);
    uint64_t v54 = v94 + 16;
    v99 = *(void (**)(char *, char *, uint64_t))(v94 + 16);
    v55 = v116;
    v99(v108, v116, v124);
    uint64_t v89 = v54;
    uint64_t v56 = (void (*)(char *, char *, uint64_t))v107[4];
    v92 = v107 + 4;
    v93 = v56;
    v56(v109, v38, v125);
    v95 = &v119[*(int *)(v17 + 48)];
    v57 = v95;
    uint64_t v58 = v122;
    v109 = &v119[*((int *)v123 + 12)];
    v59 = v109;
    v60 = &v119[v122[12]];
    v105();
    uint64_t v61 = v115;
    v104(v60, v117, v115);
    v102(v59, v114, v126);
    uint64_t v62 = v124;
    v99(v57, v55, v124);
    v90 = (void (*)(char *, char *, uint64_t))v121[4];
    v90(v110, v60, v61);
    v91 = &v118[*(int *)(v100 + 48)];
    v63 = v91;
    uint64_t v64 = &v118[*((int *)v123 + 12)];
    v110 = &v118[v58[12]];
    v65 = v110;
    uint64_t v66 = v125;
    v105();
    uint64_t v67 = v61;
    v104(v65, v117, v61);
    uint64_t v68 = v126;
    v102(v64, v114, v126);
    v99(v63, v116, v62);
    v69 = (void (*)(char *, char *, uint64_t))v120[4];
    v69(v111, v64, v68);
    v70 = v112;
    v71 = &v112[*(int *)(v100 + 48)];
    v106 = &v112[*((int *)v123 + 12)];
    v111 = &v112[v122[12]];
    v72 = v111;
    v93(v112, v43, v66);
    v90(v72, v117, v67);
    uint64_t v73 = v106;
    uint64_t v74 = v126;
    v69(v106, v114, v126);
    uint64_t v75 = v94;
    v76 = *(void (**)(char *, char *, uint64_t))(v94 + 32);
    uint64_t v77 = v124;
    v76(v71, v116, v124);
    v76(v113, v71, v77);
    uint64_t v78 = (int *)v120[1];
    ++v120;
    v123 = (void (*)(char *, uint64_t))v78;
    ((void (*)(char *, uint64_t))v78)(v73, v74);
    v80 = v121 + 1;
    uint64_t v79 = (void (*)(char *, uint64_t))v121[1];
    uint64_t v81 = v115;
    v79(v111, v115);
    v121 = v80;
    v122 = (int *)v79;
    v82 = (void (*)(char *, uint64_t))v107[1];
    uint64_t v83 = v125;
    v82(v70, v125);
    v84 = *(void (**)(char *, uint64_t))(v75 + 8);
    uint64_t v85 = v124;
    v84(v91, v124);
    v79(v110, v81);
    uint64_t v86 = v83;
    v82(v118, v83);
    v84(v95, v85);
    uint64_t v87 = v126;
    v88 = v123;
    v123(v109, v126);
    v82(v119, v86);
    v84(v108, v85);
    v88(v96, v87);
    return ((uint64_t (*)(char *, uint64_t))v122)(v97, v115);
  }
  return result;
}

uint64_t sub_258743BE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587433FC(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], a1, a2, a3);
}

uint64_t (*Flatten_4.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258743CA4(char *a1, char *a2, char *a3, uint64_t a4, char *a5, uint64_t a6, uint64_t a7, void *a8)
{
  v142 = a5;
  uint64_t v140 = a4;
  v139 = a3;
  v138 = a2;
  v137 = a1;
  uint64_t v12 = a8[4];
  uint64_t v168 = a8[3];
  uint64_t v166 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = a8[5];
  v165 = (char *)TupleTypeMetadata2;
  uint64_t v170 = v14;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a8[6];
  v167 = (char *)v15;
  uint64_t v171 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a8[7];
  v164 = (int *)v17;
  uint64_t v169 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v23 = MEMORY[0x270FA5388](v19, v20, v21, v22);
  v141 = (char *)&v118 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v23, v25, v26, v27);
  v154 = (char *)&v118 - v29;
  uint64_t v33 = MEMORY[0x270FA5388](v28, v30, v31, v32);
  v155 = (char *)&v118 - v34;
  uint64_t v38 = MEMORY[0x270FA5388](v33, v35, v36, v37);
  v156 = (char *)&v118 - v39;
  uint64_t v43 = MEMORY[0x270FA5388](v38, v40, v41, v42);
  uint64_t v45 = (char *)&v118 - v44;
  MEMORY[0x270FA5388](v43, v46, v47, v48);
  v50 = (char *)&v118 - v49;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a8[8] + 24))(a6, a7, a8[2]);
  if (!v8)
  {
    uint64_t v52 = *((int *)v165 + 12);
    v53 = &v50[v52];
    v158 = &v50[v52];
    uint64_t v54 = *((int *)v167 + 12);
    v55 = &v50[v54];
    v145 = &v50[v54];
    uint64_t v56 = v164[12];
    v57 = &v50[v56];
    v143 = &v50[v56];
    uint64_t v157 = v19;
    uint64_t v58 = *(int *)(v19 + 48);
    v159 = &v50[v58];
    v136 = &v45[v58];
    v59 = &v45[v56];
    v131 = &v45[v56];
    v60 = &v45[v54];
    v132 = &v45[v54];
    uint64_t v61 = &v45[v52];
    v133 = &v45[v52];
    uint64_t v62 = v168;
    v163 = *(void **)(v168 - 8);
    v153 = (void (*)(void))v163[2];
    v135 = v163 + 2;
    uint64_t v134 = 0;
    ((void (*)(char *, char *, uint64_t))v153)(v45, v50, v168);
    v162 = *(void **)(v166 - 8);
    v63 = (void (*)(char *, char *, uint64_t))v162[2];
    v151 = v162 + 2;
    v152 = v63;
    v63(v61, v53, v166);
    v161 = *(void **)(v170 - 8);
    uint64_t v64 = (void (*)(char *, char *, uint64_t))v161[2];
    v149 = v161 + 2;
    v150 = v64;
    v64(v60, v55, v170);
    v160 = *(void **)(v171 - 8);
    v65 = (void (*)(char *, char *, uint64_t))v160[2];
    v147 = v160 + 2;
    v148 = v65;
    v65(v59, v57, v171);
    uint64_t v128 = *(void *)(v169 - 8);
    v144 = *(void (**)(char *, char *, uint64_t))(v128 + 16);
    uint64_t v146 = v128 + 16;
    v144(v136, v159, v169);
    uint64_t v66 = (void (*)(char *, char *, uint64_t))v163[4];
    uint64_t v124 = v163 + 4;
    uint64_t v125 = v66;
    v66(v137, v45, v62);
    v129 = &v156[*(int *)(v157 + 48)];
    uint64_t v67 = v129;
    uint64_t v68 = v164;
    v130 = &v156[v164[12]];
    v69 = v130;
    v137 = &v156[*((int *)v167 + 12)];
    v70 = v137;
    v71 = v165;
    v72 = &v156[*((int *)v165 + 12)];
    v153();
    uint64_t v73 = v166;
    v152(v72, v158, v166);
    v150(v70, v145, v170);
    uint64_t v74 = v143;
    v148(v69, v143, v171);
    uint64_t v75 = v159;
    v144(v67, v159, v169);
    v76 = (void (*)(char *, char *, uint64_t))v162[4];
    v122 = v162 + 4;
    v123 = v76;
    v76(v138, v72, v73);
    v138 = &v155[*(int *)(v157 + 48)];
    uint64_t v77 = &v155[v68[12]];
    uint64_t v126 = v77;
    uint64_t v78 = &v155[*((int *)v167 + 12)];
    v127 = &v155[*((int *)v71 + 12)];
    uint64_t v79 = v127;
    v153();
    v152(v79, v158, v73);
    v80 = v145;
    uint64_t v81 = v170;
    v150(v78, v145, v170);
    v148(v77, v74, v171);
    uint64_t v82 = v169;
    v144(v138, v75, v169);
    uint64_t v83 = v166;
    v84 = (void (*)(char *, char *, uint64_t))v161[4];
    v118 = v161 + 4;
    v119 = v84;
    v84(v139, v78, v81);
    v120 = &v154[*(int *)(v157 + 48)];
    uint64_t v85 = v120;
    uint64_t v86 = &v154[v164[12]];
    v121 = &v154[*((int *)v167 + 12)];
    uint64_t v87 = v121;
    v139 = &v154[*((int *)v165 + 12)];
    v88 = v139;
    v153();
    v152(v88, v158, v83);
    v150(v87, v80, v170);
    uint64_t v89 = v171;
    v148(v86, v143, v171);
    v144(v85, v159, v82);
    v90 = (void (*)(uint64_t, char *, uint64_t))v160[4];
    v90(v140, v86, v89);
    v91 = v141;
    v92 = &v141[*(int *)(v157 + 48)];
    v93 = &v141[v164[12]];
    v167 = &v141[*((int *)v167 + 12)];
    uint64_t v94 = v167;
    v165 = &v141[*((int *)v165 + 12)];
    v95 = v165;
    v125(v141, v50, v168);
    v123(v95, v158, v83);
    uint64_t v96 = v170;
    v119(v94, v145, v170);
    uint64_t v97 = v171;
    v90((uint64_t)v93, v143, v171);
    uint64_t v98 = v128;
    v99 = *(void (**)(char *, char *, uint64_t))(v128 + 32);
    uint64_t v100 = v169;
    v99(v92, v159, v169);
    v99(v142, v92, v100);
    v101 = (int *)v160[1];
    ++v160;
    v164 = v101;
    ((void (*)(char *, uint64_t))v101)(v93, v97);
    v103 = v161 + 1;
    v102 = (char *)v161[1];
    ((void (*)(char *, uint64_t))v102)(v167, v96);
    v159 = v102;
    v161 = v103;
    v104 = v162 + 1;
    v167 = (char *)v162[1];
    uint64_t v105 = v166;
    ((void (*)(char *, uint64_t))v167)(v165, v166);
    v165 = (char *)v163[1];
    ++v163;
    uint64_t v106 = v168;
    ((void (*)(char *, uint64_t))v165)(v91, v168);
    v107 = *(char **)(v98 + 8);
    uint64_t v108 = v169;
    ((void (*)(char *, uint64_t))v107)(v120, v169);
    ((void (*)(char *, uint64_t))v102)(v121, v170);
    v109 = v167;
    ((void (*)(char *, uint64_t))v167)(v139, v105);
    v162 = v104;
    uint64_t v110 = v106;
    v111 = v165;
    ((void (*)(char *, uint64_t))v165)(v154, v110);
    v158 = v107;
    ((void (*)(char *, uint64_t))v107)(v138, v108);
    v112 = (void (*)(char *, uint64_t))v164;
    ((void (*)(char *, uint64_t))v164)(v126, v171);
    ((void (*)(char *, uint64_t))v109)(v127, v105);
    uint64_t v113 = v168;
    ((void (*)(char *, uint64_t))v111)(v155, v168);
    uint64_t v114 = v169;
    ((void (*)(char *, uint64_t))v107)(v129, v169);
    uint64_t v115 = v171;
    v112(v130, v171);
    uint64_t v116 = v170;
    v117 = v159;
    ((void (*)(char *, uint64_t))v159)(v137, v170);
    ((void (*)(char *, uint64_t))v165)(v156, v113);
    ((void (*)(char *, uint64_t))v158)(v136, v114);
    v112(v131, v115);
    ((void (*)(char *, uint64_t))v117)(v132, v116);
    return ((uint64_t (*)(char *, uint64_t))v167)(v133, v166);
  }
  return result;
}

uint64_t sub_25874488C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258743CA4(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], (uint64_t)&a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], a1, a2, a3);
}

uint64_t (*Flatten_5.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258744960(char *a1, char *a2, char *a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, void *a9)
{
  uint64_t v193 = a6;
  uint64_t v191 = a5;
  v190 = a4;
  v187 = a3;
  v189 = a2;
  v188 = a1;
  uint64_t v12 = a9[4];
  uint64_t v232 = a9[3];
  uint64_t v228 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = a9[5];
  v224 = (int *)TupleTypeMetadata2;
  uint64_t v225 = v14;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a9[6];
  v223 = (int *)v15;
  uint64_t v231 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a9[7];
  v227 = (char *)v17;
  uint64_t v230 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a9[8];
  v220 = (char *)v19;
  uint64_t v229 = v20;
  uint64_t v226 = swift_getTupleTypeMetadata2();
  uint64_t v24 = MEMORY[0x270FA5388](v226, v21, v22, v23);
  v192 = (char *)&v159 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v24, v26, v27, v28);
  v195 = (char *)&v159 - v30;
  uint64_t v34 = MEMORY[0x270FA5388](v29, v31, v32, v33);
  v196 = (char *)&v159 - v35;
  uint64_t v39 = MEMORY[0x270FA5388](v34, v36, v37, v38);
  v197 = (char *)&v159 - v40;
  uint64_t v44 = MEMORY[0x270FA5388](v39, v41, v42, v43);
  v198 = (char *)&v159 - v45;
  uint64_t v49 = MEMORY[0x270FA5388](v44, v46, v47, v48);
  uint64_t v51 = (char *)&v159 - v50;
  MEMORY[0x270FA5388](v49, v52, v53, v54);
  uint64_t v56 = (char *)&v159 - v55;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a9[9] + 24))(a7, a8, a9[2]);
  if (!v9)
  {
    uint64_t v58 = v224[12];
    v59 = &v56[v58];
    v203 = &v56[v58];
    uint64_t v60 = v223[12];
    uint64_t v61 = &v56[v60];
    v199 = &v56[v60];
    uint64_t v62 = *((int *)v227 + 12);
    v63 = &v56[v62];
    v202 = &v56[v62];
    uint64_t v64 = *((int *)v220 + 12);
    v201 = &v56[v64];
    uint64_t v65 = *(int *)(v226 + 48);
    v215 = &v56[v65];
    v186 = &v51[v65];
    v185 = &v51[v64];
    uint64_t v66 = &v51[v62];
    v181 = &v51[v62];
    uint64_t v67 = &v51[v60];
    v182 = &v51[v60];
    uint64_t v68 = &v51[v58];
    v183 = &v51[v58];
    v218 = *(void **)(v232 - 8);
    v213 = (void (*)(void))v218[2];
    v214 = (char *)(v218 + 2);
    uint64_t v184 = 0;
    ((void (*)(char *, char *, uint64_t))v213)(v51, v56, v232);
    v222 = *(void **)(v228 - 8);
    v69 = (void (*)(char *, char *, uint64_t))v222[2];
    v211 = v222 + 2;
    v212 = v69;
    ((void (*)(char *, char *))v69)(v68, v59);
    v219 = *(void **)(v225 - 8);
    v70 = (void (*)(char *, char *, uint64_t))v219[2];
    v209 = v219 + 2;
    v210 = v70;
    v70(v67, v61, v225);
    v221 = *(void **)(v231 - 8);
    v200 = (void (*)(char *, char *, uint64_t))v221[2];
    v208 = v221 + 2;
    v200(v66, v63, v231);
    v217 = *(void **)(v230 - 8);
    v71 = (void (*)(char *, char *, uint64_t))v217[2];
    v206 = v217 + 2;
    v207 = v71;
    v71(v185, v201, v230);
    v216 = *(void **)(v229 - 8);
    v72 = (void (*)(char *, char *, uint64_t))v216[2];
    v204 = v216 + 2;
    v205 = v72;
    v72(v186, v215, v229);
    uint64_t v73 = (void (*)(char *, char *, uint64_t))v218[4];
    v172 = v218 + 4;
    v173 = v73;
    v73(v188, v51, v232);
    v177 = &v198[*(int *)(v226 + 48)];
    uint64_t v74 = v177;
    uint64_t v75 = v220;
    v178 = &v198[*((int *)v220 + 12)];
    v76 = v178;
    v179 = &v198[*((int *)v227 + 12)];
    uint64_t v77 = v179;
    v180 = &v198[v223[12]];
    uint64_t v78 = v180;
    uint64_t v79 = v224;
    v80 = &v198[v224[12]];
    v213();
    uint64_t v81 = v80;
    uint64_t v82 = v80;
    uint64_t v83 = v228;
    v212(v81, v203, v228);
    v210(v78, v199, v225);
    v84 = v202;
    v200(v77, v202, v231);
    uint64_t v85 = v201;
    v207(v76, v201, v230);
    uint64_t v86 = v74;
    uint64_t v87 = v215;
    v205(v86, v215, v229);
    uint64_t v168 = (void (*)(char *, char *, uint64_t))v222[4];
    uint64_t v169 = v222 + 4;
    uint64_t v88 = v83;
    v168(v189, v82, v83);
    v189 = &v197[*(int *)(v226 + 48)];
    uint64_t v89 = *((int *)v75 + 12);
    v194 = v56;
    v90 = &v197[v89];
    v174 = &v197[v89];
    v175 = &v197[*((int *)v227 + 12)];
    v91 = v175;
    v92 = &v197[v223[12]];
    v176 = &v197[v79[12]];
    v93 = v176;
    v213();
    v212(v93, v203, v88);
    uint64_t v94 = v225;
    v210(v92, v199, v225);
    v200(v91, v84, v231);
    v207(v90, v85, v230);
    uint64_t v95 = v229;
    v205(v189, v87, v229);
    uint64_t v96 = (void (*)(char *, char *, uint64_t))v219[4];
    v165 = v219 + 4;
    uint64_t v166 = v96;
    uint64_t v97 = v94;
    v96(v187, v92, v94);
    v188 = &v196[*(int *)(v226 + 48)];
    uint64_t v98 = v220;
    uint64_t v170 = &v196[*((int *)v220 + 12)];
    v99 = v170;
    v167 = &v196[*((int *)v227 + 12)];
    uint64_t v100 = v167;
    v101 = v223;
    uint64_t v171 = &v196[v223[12]];
    v102 = v171;
    v187 = &v196[v224[12]];
    v103 = v187;
    v213();
    v104 = v103;
    uint64_t v105 = v203;
    uint64_t v106 = v228;
    v212(v104, v203, v228);
    v107 = v102;
    uint64_t v108 = v199;
    v210(v107, v199, v97);
    uint64_t v109 = v231;
    v200(v100, v202, v231);
    uint64_t v110 = v201;
    v207(v99, v201, v230);
    v205(v188, v215, v95);
    v111 = (void (*)(char *, char *, uint64_t))v221[4];
    v161 = v221 + 4;
    v162 = v111;
    uint64_t v112 = v109;
    v111(v190, v167, v109);
    v190 = &v195[*(int *)(v226 + 48)];
    v160 = &v195[*((int *)v98 + 12)];
    v163 = &v195[*((int *)v227 + 12)];
    uint64_t v113 = v163;
    uint64_t v114 = &v195[v101[12]];
    v164 = v114;
    v167 = &v195[v224[12]];
    uint64_t v115 = v167;
    uint64_t v116 = v232;
    v213();
    v212(v115, v105, v106);
    uint64_t v117 = v225;
    v210(v114, v108, v225);
    v200(v113, v202, v112);
    v118 = v160;
    uint64_t v119 = v230;
    v207(v160, v110, v230);
    v205(v190, v215, v229);
    v120 = (void (*)(uint64_t, char *, uint64_t))v217[4];
    v120(v191, v118, v119);
    v121 = v192;
    uint64_t v226 = (uint64_t)&v192[*(int *)(v226 + 48)];
    v214 = &v192[*((int *)v220 + 12)];
    v122 = &v192[*((int *)v227 + 12)];
    v220 = &v192[v223[12]];
    v123 = v220;
    v227 = &v192[v224[12]];
    uint64_t v124 = v227;
    v173(v192, v194, v116);
    v168(v124, v203, v228);
    v166(v123, v199, v117);
    uint64_t v125 = v122;
    uint64_t v126 = v231;
    v162(v122, v202, v231);
    v127 = v214;
    uint64_t v128 = v119;
    v120((uint64_t)v214, v201, v119);
    v129 = (void (*)(uint64_t, char *, uint64_t))v216[4];
    uint64_t v130 = v226;
    uint64_t v131 = v229;
    v129(v226, v215, v229);
    v129(v193, (char *)v130, v131);
    v132 = (char *)v217[1];
    ++v217;
    v215 = v132;
    ((void (*)(char *, uint64_t))v132)(v127, v128);
    v133 = (void (*)(char *, uint64_t))v221[1];
    ++v221;
    uint64_t v226 = (uint64_t)v133;
    v133(v125, v126);
    uint64_t v134 = (int *)v219[1];
    ++v219;
    v223 = v134;
    uint64_t v135 = v225;
    ((void (*)(char *, uint64_t))v134)(v220, v225);
    v137 = v222 + 1;
    v136 = (void (*)(char *, uint64_t))v222[1];
    v136(v227, v228);
    v224 = (int *)v136;
    v222 = v137;
    v138 = v218 + 1;
    v227 = (char *)v218[1];
    uint64_t v139 = v232;
    ((void (*)(char *, uint64_t))v227)(v121, v232);
    v218 = v138;
    uint64_t v140 = (char *)v216[1];
    ++v216;
    v220 = v140;
    uint64_t v141 = v229;
    ((void (*)(char *, uint64_t))v140)(v190, v229);
    ((void (*)(char *, uint64_t))v226)(v163, v231);
    v142 = (void (*)(char *, uint64_t))v223;
    ((void (*)(char *, uint64_t))v223)(v164, v135);
    uint64_t v143 = v228;
    v136(v167, v228);
    uint64_t v144 = v139;
    v145 = v227;
    ((void (*)(char *, uint64_t))v227)(v195, v144);
    uint64_t v146 = v220;
    ((void (*)(char *, uint64_t))v220)(v188, v141);
    v147 = v215;
    ((void (*)(char *, uint64_t))v215)(v170, v230);
    v142(v171, v135);
    v148 = (void (*)(char *, uint64_t))v224;
    ((void (*)(char *, uint64_t))v224)(v187, v143);
    uint64_t v149 = v232;
    ((void (*)(char *, uint64_t))v145)(v196, v232);
    uint64_t v150 = v229;
    ((void (*)(char *, uint64_t))v146)(v189, v229);
    uint64_t v151 = v230;
    ((void (*)(char *, uint64_t))v147)(v174, v230);
    uint64_t v152 = v231;
    v153 = (void (*)(char *, uint64_t))v226;
    ((void (*)(char *, uint64_t))v226)(v175, v231);
    v148(v176, v228);
    ((void (*)(char *, uint64_t))v227)(v197, v149);
    uint64_t v154 = v150;
    v155 = v220;
    ((void (*)(char *, uint64_t))v220)(v177, v154);
    ((void (*)(char *, uint64_t))v147)(v178, v151);
    v153(v179, v152);
    v156 = v153;
    uint64_t v157 = v225;
    v158 = (void (*)(char *, uint64_t))v223;
    ((void (*)(char *, uint64_t))v223)(v180, v225);
    ((void (*)(char *, uint64_t))v227)(v198, v232);
    ((void (*)(char *, uint64_t))v155)(v186, v229);
    ((void (*)(char *, uint64_t))v147)(v185, v230);
    v156(v181, v231);
    v158(v182, v157);
    return ((uint64_t (*)(char *, uint64_t))v224)(v183, v228);
  }
  return result;
}

uint64_t sub_258745A50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258744960(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], (uint64_t)&a4[TupleTypeMetadata[24]], (uint64_t)&a4[TupleTypeMetadata[28]], a1, a2, a3);
}

uint64_t (*Flatten_6.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258745B2C(char *a1, char *a2, char *a3, char *a4, char *a5, uint64_t a6, char *a7, uint64_t a8, uint64_t a9, void *a10)
{
  v224 = a7;
  uint64_t v222 = a6;
  v221 = a5;
  v220 = a4;
  v219 = a3;
  v218 = a2;
  v217 = a1;
  uint64_t v12 = a10[4];
  uint64_t v268 = a10[3];
  uint64_t v265 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = a10[5];
  v253 = (int *)TupleTypeMetadata2;
  uint64_t v264 = v14;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a10[6];
  v262 = (int *)v15;
  uint64_t v263 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a10[7];
  uint64_t v261 = v17;
  uint64_t v269 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a10[8];
  v260 = (char *)v19;
  uint64_t v267 = v20;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a10[9];
  v259 = (int *)v21;
  uint64_t v266 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v27 = MEMORY[0x270FA5388](v23, v24, v25, v26);
  v223 = (char *)v179 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v27, v29, v30, v31);
  uint64_t v226 = (char *)v179 - v33;
  uint64_t v37 = MEMORY[0x270FA5388](v32, v34, v35, v36);
  uint64_t v39 = (char *)v179 - v38;
  uint64_t v43 = MEMORY[0x270FA5388](v37, v40, v41, v42);
  v227 = (char *)v179 - v44;
  uint64_t v48 = MEMORY[0x270FA5388](v43, v45, v46, v47);
  uint64_t v228 = (char *)v179 - v49;
  uint64_t v53 = MEMORY[0x270FA5388](v48, v50, v51, v52);
  uint64_t v229 = (char *)v179 - v54;
  uint64_t v58 = MEMORY[0x270FA5388](v53, v55, v56, v57);
  uint64_t v60 = (char *)v179 - v59;
  MEMORY[0x270FA5388](v58, v61, v62, v63);
  uint64_t v65 = (char *)v179 - v64;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a10[10] + 24))(a8, a9, a10[2]);
  if (!v10)
  {
    uint64_t v67 = v253[12];
    uint64_t v68 = &v65[v67];
    uint64_t v69 = v262[12];
    v70 = &v65[v69];
    v249 = &v65[v69];
    v250 = &v65[v67];
    uint64_t v71 = *(int *)(v261 + 48);
    v254 = &v65[v71];
    uint64_t v72 = *((int *)v260 + 12);
    uint64_t v230 = &v65[v72];
    uint64_t v73 = v259[12];
    v248 = &v65[v73];
    uint64_t v233 = v23;
    uint64_t v74 = *(int *)(v23 + 48);
    uint64_t v231 = &v65[v74];
    v216 = &v60[v74];
    v214 = v39;
    uint64_t v75 = &v60[v73];
    v206 = &v60[v73];
    v76 = &v60[v72];
    v207 = &v60[v72];
    uint64_t v77 = &v60[v71];
    v208 = &v60[v71];
    uint64_t v78 = &v60[v69];
    v209 = &v60[v69];
    uint64_t v79 = &v60[v67];
    v210 = &v60[v67];
    v256 = *(void **)(v268 - 8);
    v234 = (void (*)(void))v256[2];
    v235 = v256 + 2;
    uint64_t v211 = 0;
    ((void (*)(char *, char *, uint64_t))v234)(v60, v65, v268);
    v258 = *(void **)(v265 - 8);
    v80 = (char *)v258[2];
    v245 = (char *)(v258 + 2);
    v246 = v80;
    ((void (*)(char *, char *, uint64_t))v80)(v79, v68, v265);
    v252 = *(void **)(v264 - 8);
    uint64_t v81 = (char *)v252[2];
    v243 = (char *)(v252 + 2);
    v244 = v81;
    ((void (*)(char *, char *, uint64_t))v81)(v78, v70, v264);
    v247 = *(void **)(v263 - 8);
    uint64_t v82 = (void (*)(char *, char *, uint64_t))v247[2];
    v241 = v247 + 2;
    v242 = v82;
    v82(v77, v254, v263);
    v257 = *(void **)(v269 - 8);
    uint64_t v232 = (void (*)(char *, char *, uint64_t))v257[2];
    v240 = v257 + 2;
    v232(v76, v230, v269);
    v251 = *(void **)(v267 - 8);
    uint64_t v83 = (void (*)(char *, char *, uint64_t))v251[2];
    v238 = v251 + 2;
    v239 = v83;
    v83(v75, v248, v267);
    v255 = *(void **)(v266 - 8);
    v84 = (void (*)(char *, char *, uint64_t))v255[2];
    v236 = v255 + 2;
    v237 = v84;
    v84(v216, v231, v266);
    uint64_t v85 = (void (*)(char *, char *, uint64_t))v256[4];
    v194 = v256 + 4;
    v195 = v85;
    v85(v217, v60, v268);
    uint64_t v86 = v233;
    v217 = &v229[*(int *)(v233 + 48)];
    v202 = &v229[v259[12]];
    uint64_t v87 = v202;
    v203 = &v229[*((int *)v260 + 12)];
    uint64_t v88 = v203;
    v204 = &v229[*(int *)(v261 + 48)];
    uint64_t v89 = v204;
    v205 = &v229[v262[12]];
    v90 = v205;
    v91 = v253;
    v215 = &v229[v253[12]];
    v92 = v215;
    v234();
    v93 = v92;
    uint64_t v94 = v265;
    ((void (*)(char *, char *, uint64_t))v246)(v93, v250, v265);
    ((void (*)(char *, char *, uint64_t))v244)(v90, v249, v264);
    v242(v89, v254, v263);
    uint64_t v95 = v230;
    v232(v88, v230, v269);
    uint64_t v96 = v248;
    v239(v87, v248, v267);
    uint64_t v97 = v231;
    v237(v217, v231, v266);
    uint64_t v98 = (void (*)(char *, char *, uint64_t))v258[4];
    uint64_t v191 = v258 + 4;
    v192 = v98;
    uint64_t v99 = v94;
    v98(v218, v215, v94);
    v218 = &v228[*(int *)(v86 + 48)];
    uint64_t v100 = v259[12];
    uint64_t v225 = v65;
    v101 = &v228[v100];
    v198 = &v228[v100];
    v199 = &v228[*((int *)v260 + 12)];
    v102 = v199;
    v200 = &v228[*(int *)(v261 + 48)];
    v103 = v200;
    v104 = &v228[v262[12]];
    uint64_t v105 = &v228[v91[12]];
    v201 = v105;
    v234();
    ((void (*)(char *, char *, uint64_t))v246)(v105, v250, v99);
    uint64_t v106 = v104;
    v107 = v104;
    uint64_t v108 = v264;
    ((void (*)(char *, char *, uint64_t))v244)(v107, v249, v264);
    v242(v103, v254, v263);
    v232(v102, v95, v269);
    v239(v101, v96, v267);
    v237(v218, v97, v266);
    uint64_t v109 = (void (*)(char *, char *, uint64_t))v252[4];
    v186 = v252 + 4;
    v187 = v109;
    v109(v219, v106, v108);
    v215 = &v227[*(int *)(v233 + 48)];
    uint64_t v110 = v259;
    v219 = &v227[v259[12]];
    v111 = v260;
    uint64_t v193 = &v227[*((int *)v260 + 12)];
    uint64_t v112 = v193;
    uint64_t v113 = v261;
    v213 = &v227[*(int *)(v261 + 48)];
    uint64_t v114 = v262;
    v196 = &v227[v262[12]];
    uint64_t v115 = v196;
    uint64_t v116 = v253;
    v197 = &v227[v253[12]];
    uint64_t v117 = v197;
    v234();
    ((void (*)(char *, char *, uint64_t))v246)(v117, v250, v265);
    ((void (*)(char *, char *, uint64_t))v244)(v115, v249, v108);
    v118 = v213;
    uint64_t v119 = v263;
    v242(v213, v254, v263);
    v232(v112, v230, v269);
    v239(v219, v248, v267);
    v237(v215, v231, v266);
    v183 = (void (*)(char *, char *, uint64_t))v247[4];
    uint64_t v184 = v247 + 4;
    v183(v220, v118, v119);
    v213 = &v214[*(int *)(v233 + 48)];
    v220 = &v214[v110[12]];
    v120 = &v214[*((int *)v111 + 12)];
    v188 = &v214[*(int *)(v113 + 48)];
    v121 = v188;
    v189 = &v214[v114[12]];
    v122 = v189;
    v190 = &v214[v116[12]];
    v123 = v190;
    v234();
    ((void (*)(char *, char *, uint64_t))v246)(v123, v250, v265);
    ((void (*)(char *, char *, uint64_t))v244)(v122, v249, v108);
    v242(v121, v254, v119);
    uint64_t v124 = v230;
    uint64_t v125 = v269;
    v232(v120, v230, v269);
    v239(v220, v248, v267);
    uint64_t v126 = v231;
    uint64_t v127 = v266;
    v237(v213, v231, v266);
    uint64_t v128 = (void (*)(char *, char *, uint64_t))v257[4];
    v179[1] = v257 + 4;
    v180 = v128;
    v128(v221, v120, v125);
    v212 = &v226[*(int *)(v233 + 48)];
    v179[0] = &v226[v259[12]];
    v221 = &v226[*((int *)v260 + 12)];
    v181 = &v226[*(int *)(v261 + 48)];
    v129 = v181;
    v182 = &v226[v262[12]];
    uint64_t v130 = v182;
    v185 = &v226[v253[12]];
    uint64_t v131 = v185;
    v234();
    v132 = v131;
    uint64_t v133 = v265;
    ((void (*)(char *, char *, uint64_t))v246)(v132, v250, v265);
    uint64_t v134 = v264;
    ((void (*)(char *, char *, uint64_t))v244)(v130, v249, v264);
    v242(v129, v254, v119);
    v232(v221, v124, v269);
    uint64_t v135 = v179[0];
    uint64_t v136 = v267;
    v239((char *)v179[0], v248, v267);
    v237(v212, v126, v127);
    uint64_t v137 = v133;
    v138 = (void (*)(uint64_t, uint64_t, uint64_t))v251[4];
    v138(v222, v135, v136);
    uint64_t v139 = v223;
    v246 = &v223[*(int *)(v233 + 48)];
    v244 = &v223[v259[12]];
    v243 = &v223[*((int *)v260 + 12)];
    uint64_t v140 = v243;
    v245 = &v223[*(int *)(v261 + 48)];
    uint64_t v141 = v245;
    v142 = &v223[v262[12]];
    v260 = &v223[v253[12]];
    uint64_t v143 = v260;
    uint64_t v261 = (uint64_t)v142;
    v195(v223, v225, v268);
    v192(v143, v250, v137);
    v187(v142, v249, v134);
    uint64_t v144 = v263;
    v183(v141, v254, v263);
    uint64_t v145 = v269;
    v180(v140, v230, v269);
    uint64_t v146 = v244;
    uint64_t v147 = v267;
    v138((uint64_t)v244, (uint64_t)v248, v267);
    v148 = (void (*)(char *, char *, uint64_t))v255[4];
    uint64_t v149 = v246;
    uint64_t v150 = v266;
    v148(v246, v231, v266);
    v148(v224, v149, v150);
    uint64_t v151 = (int *)v251[1];
    ++v251;
    v259 = v151;
    ((void (*)(char *, uint64_t))v151)(v146, v147);
    uint64_t v152 = (int *)v257[1];
    ++v257;
    v262 = v152;
    ((void (*)(char *, uint64_t))v152)(v243, v145);
    v153 = (char *)v247[1];
    ++v247;
    ((void (*)(char *, uint64_t))v153)(v245, v144);
    uint64_t v154 = v153;
    v155 = (char *)v252[1];
    ++v252;
    v254 = v155;
    uint64_t v156 = v264;
    ((void (*)(uint64_t, uint64_t))v155)(v261, v264);
    uint64_t v261 = v258[1];
    ++v258;
    ((void (*)(char *, uint64_t))v261)(v260, v265);
    uint64_t v157 = (void (*)(char *, uint64_t))v256[1];
    ++v256;
    uint64_t v158 = v268;
    v157(v139, v268);
    uint64_t v159 = v157;
    v260 = (char *)v157;
    v160 = (void (*)(char *, uint64_t))v255[1];
    ++v255;
    v160(v212, v150);
    v253 = (int *)v160;
    ((void (*)(char *, uint64_t))v262)(v221, v269);
    uint64_t v161 = v263;
    v250 = v154;
    ((void (*)(char *, uint64_t))v154)(v181, v263);
    ((void (*)(char *, uint64_t))v254)(v182, v156);
    uint64_t v162 = v265;
    ((void (*)(char *, uint64_t))v261)(v185, v265);
    v159(v226, v158);
    v160(v213, v150);
    uint64_t v163 = v267;
    v164 = (void (*)(char *, uint64_t))v259;
    ((void (*)(char *, uint64_t))v259)(v220, v267);
    ((void (*)(char *, uint64_t))v154)(v188, v161);
    v165 = v254;
    ((void (*)(char *, uint64_t))v254)(v189, v264);
    uint64_t v166 = (void (*)(char *, uint64_t))v261;
    ((void (*)(char *, uint64_t))v261)(v190, v162);
    ((void (*)(char *, uint64_t))v260)(v214, v268);
    v167 = (void (*)(char *, uint64_t))v253;
    ((void (*)(char *, uint64_t))v253)(v215, v266);
    v164(v219, v163);
    uint64_t v168 = v164;
    uint64_t v169 = v269;
    uint64_t v170 = (void (*)(char *, uint64_t))v262;
    ((void (*)(char *, uint64_t))v262)(v193, v269);
    ((void (*)(char *, uint64_t))v165)(v196, v264);
    v166(v197, v162);
    ((void (*)(char *, uint64_t))v260)(v227, v268);
    uint64_t v171 = v266;
    v167(v218, v266);
    v168(v198, v267);
    v170(v199, v169);
    uint64_t v172 = v263;
    v173 = v250;
    ((void (*)(char *, uint64_t))v250)(v200, v263);
    ((void (*)(char *, uint64_t))v261)(v201, v265);
    uint64_t v174 = v268;
    v175 = v260;
    ((void (*)(char *, uint64_t))v260)(v228, v268);
    ((void (*)(char *, uint64_t))v253)(v217, v171);
    uint64_t v176 = v267;
    ((void (*)(char *, uint64_t))v259)(v202, v267);
    ((void (*)(char *, uint64_t))v262)(v203, v269);
    ((void (*)(char *, uint64_t))v173)(v204, v172);
    uint64_t v177 = v264;
    v178 = v254;
    ((void (*)(char *, uint64_t))v254)(v205, v264);
    ((void (*)(char *, uint64_t))v175)(v229, v174);
    ((void (*)(char *, uint64_t))v253)(v216, v266);
    ((void (*)(char *, uint64_t))v259)(v206, v176);
    ((void (*)(char *, uint64_t))v262)(v207, v269);
    ((void (*)(char *, uint64_t))v173)(v208, v172);
    ((void (*)(char *, uint64_t))v178)(v209, v177);
    return ((uint64_t (*)(char *, uint64_t))v261)(v210, v265);
  }
  return result;
}

uint64_t sub_258747220@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258745B2C(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], (uint64_t)&a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], a1, a2, a3);
}

uint64_t (*Flatten_7.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258747308(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, uint64_t a7, char *a8, uint64_t a9, uint64_t a10, void *a11)
{
  v273 = a8;
  uint64_t v271 = a7;
  v270 = a6;
  uint64_t v269 = a5;
  uint64_t v268 = a4;
  uint64_t v265 = a3;
  uint64_t v267 = a2;
  uint64_t v266 = a1;
  uint64_t v12 = a11[4];
  uint64_t v325 = a11[3];
  uint64_t v318 = v12;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v14 = a11[5];
  v317 = (char *)TupleTypeMetadata2;
  uint64_t v321 = v14;
  uint64_t v15 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a11[6];
  v316 = (void (*)(char *, uint64_t))v15;
  uint64_t v319 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a11[7];
  v313 = (char *)v17;
  uint64_t v320 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a11[8];
  v315 = (char *)v19;
  uint64_t v324 = v20;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a11[9];
  v314 = (char *)v21;
  uint64_t v323 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a11[10];
  v312 = (void (*)(char *, uint64_t))v23;
  uint64_t v322 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v29 = MEMORY[0x270FA5388](v25, v26, v27, v28);
  v272 = (char *)&v212 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = MEMORY[0x270FA5388](v29, v31, v32, v33);
  v274 = (char *)&v212 - v35;
  uint64_t v39 = MEMORY[0x270FA5388](v34, v36, v37, v38);
  v275 = (char *)&v212 - v40;
  uint64_t v44 = MEMORY[0x270FA5388](v39, v41, v42, v43);
  uint64_t v46 = (char *)&v212 - v45;
  uint64_t v50 = MEMORY[0x270FA5388](v44, v47, v48, v49);
  v276 = (char *)&v212 - v51;
  uint64_t v55 = MEMORY[0x270FA5388](v50, v52, v53, v54);
  v277 = (char *)&v212 - v56;
  uint64_t v60 = MEMORY[0x270FA5388](v55, v57, v58, v59);
  v278 = (char *)&v212 - v61;
  uint64_t v65 = MEMORY[0x270FA5388](v60, v62, v63, v64);
  uint64_t v67 = (char *)&v212 - v66;
  MEMORY[0x270FA5388](v65, v68, v69, v70);
  uint64_t v72 = (char *)&v212 - v71;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a11[11] + 24))(a9, a10, a11[2]);
  if (!v11)
  {
    uint64_t v74 = *((int *)v317 + 12);
    uint64_t v75 = &v72[v74];
    uint64_t v76 = *((int *)v316 + 12);
    v308 = &v72[v76];
    uint64_t v77 = *((int *)v313 + 12);
    v307 = &v72[v77];
    uint64_t v78 = *((int *)v315 + 12);
    uint64_t v79 = &v72[v78];
    v283 = &v72[v78];
    uint64_t v80 = *((int *)v314 + 12);
    v299 = &v72[v80];
    uint64_t v81 = *((int *)v312 + 12);
    v284 = &v72[v81];
    uint64_t v279 = v25;
    uint64_t v82 = *(int *)(v25 + 48);
    v300 = &v72[v82];
    uint64_t v83 = v72;
    v301 = v72;
    uint64_t v264 = &v67[v82];
    v259 = v46;
    v262 = &v67[v81];
    uint64_t v263 = &v67[v80];
    v84 = &v67[v78];
    v251 = &v67[v78];
    uint64_t v85 = &v67[v77];
    v252 = &v67[v77];
    uint64_t v86 = &v67[v76];
    v253 = &v67[v76];
    uint64_t v87 = &v67[v74];
    v254 = &v67[v74];
    uint64_t v88 = v325;
    v310 = *(void **)(v325 - 8);
    v282 = (void (*)(void))v310[2];
    v285 = v310 + 2;
    uint64_t v255 = 0;
    ((void (*)(char *, char *, uint64_t))v282)(v67, v83, v325);
    uint64_t v89 = v318;
    v311 = *(void **)(v318 - 8);
    v281 = (void (*)(char *, char *, uint64_t))v311[2];
    v298 = (char *)(v311 + 2);
    v90 = v87;
    v91 = v75;
    v280 = v75;
    v281(v90, v75, v318);
    v306 = *(void **)(v321 - 8);
    v92 = (char *)v306[2];
    v296 = (char *)(v306 + 2);
    v297 = v92;
    ((void (*)(char *, char *, uint64_t))v92)(v86, v308, v321);
    v305 = *(void **)(v319 - 8);
    v93 = (void (*)(char *, char *, uint64_t))v305[2];
    v294 = v305 + 2;
    v295 = v93;
    v93(v85, v307, v319);
    v304 = *(void **)(v320 - 8);
    uint64_t v94 = (void (*)(char *, char *, uint64_t))v304[2];
    v292 = v304 + 2;
    v293 = v94;
    v94(v84, v79, v320);
    v309 = *(void **)(v324 - 8);
    uint64_t v95 = (void (*)(char *, char *, uint64_t))v309[2];
    v290 = v309 + 2;
    v291 = v95;
    v95(v263, v299, v324);
    v303 = *(void **)(v323 - 8);
    uint64_t v96 = (void (*)(char *, char *, uint64_t))v303[2];
    v288 = v303 + 2;
    v289 = v96;
    v96(v262, v284, v323);
    v302 = *(void **)(v322 - 8);
    uint64_t v97 = v89;
    uint64_t v98 = (void (*)(char *, char *, uint64_t))v302[2];
    v286 = v302 + 2;
    v287 = v98;
    v98(v264, v300, v322);
    uint64_t v99 = (void (*)(char *, char *, uint64_t))v310[4];
    v236 = v310 + 4;
    v237 = v99;
    v99(v266, v67, v88);
    uint64_t v266 = &v278[*(int *)(v279 + 48)];
    v246 = &v278[*((int *)v312 + 12)];
    uint64_t v100 = v246;
    v247 = &v278[*((int *)v314 + 12)];
    v101 = v247;
    v248 = &v278[*((int *)v315 + 12)];
    v102 = v248;
    v249 = &v278[*((int *)v313 + 12)];
    v103 = v249;
    v250 = &v278[*((int *)v316 + 12)];
    v104 = v250;
    uint64_t v261 = &v278[*((int *)v317 + 12)];
    uint64_t v105 = v261;
    v282();
    uint64_t v106 = v105;
    v107 = v91;
    uint64_t v108 = v97;
    uint64_t v109 = v281;
    v281(v106, v107, v97);
    ((void (*)(char *, char *, uint64_t))v297)(v104, v308, v321);
    uint64_t v110 = v319;
    v295(v103, v307, v319);
    uint64_t v111 = v320;
    v293(v102, v283, v320);
    v291(v101, v299, v324);
    v289(v100, v284, v323);
    v287(v266, v300, v322);
    uint64_t v112 = (void (*)(char *, char *, uint64_t))v311[4];
    uint64_t v231 = v311 + 4;
    uint64_t v232 = v112;
    v112(v267, v261, v108);
    uint64_t v267 = &v277[*(int *)(v279 + 48)];
    uint64_t v261 = &v277[*((int *)v312 + 12)];
    v242 = &v277[*((int *)v314 + 12)];
    uint64_t v113 = v242;
    v243 = &v277[*((int *)v315 + 12)];
    uint64_t v114 = v243;
    v244 = &v277[*((int *)v313 + 12)];
    uint64_t v115 = v244;
    uint64_t v116 = &v277[*((int *)v316 + 12)];
    v245 = &v277[*((int *)v317 + 12)];
    uint64_t v117 = v245;
    v282();
    v109(v117, v280, v108);
    uint64_t v118 = v321;
    ((void (*)(char *, char *, uint64_t))v297)(v116, v308, v321);
    v295(v115, v307, v110);
    v293(v114, v283, v111);
    v291(v113, v299, v324);
    uint64_t v119 = v284;
    v289(v261, v284, v323);
    v287(v267, v300, v322);
    v120 = (void (*)(char *, char *, uint64_t))v306[4];
    uint64_t v228 = v306 + 4;
    uint64_t v229 = v120;
    v120(v265, v116, v118);
    uint64_t v121 = v279;
    v260 = &v276[*(int *)(v279 + 48)];
    uint64_t v265 = &v276[*((int *)v312 + 12)];
    v238 = &v276[*((int *)v314 + 12)];
    v122 = v238;
    v239 = &v276[*((int *)v315 + 12)];
    v123 = v239;
    uint64_t v124 = &v276[*((int *)v313 + 12)];
    v240 = &v276[*((int *)v316 + 12)];
    uint64_t v125 = v240;
    v241 = &v276[*((int *)v317 + 12)];
    uint64_t v126 = v241;
    v282();
    v281(v126, v280, v318);
    ((void (*)(char *, char *, uint64_t))v297)(v125, v308, v118);
    v295(v124, v307, v110);
    uint64_t v127 = v283;
    v293(v123, v283, v320);
    uint64_t v128 = v299;
    v291(v122, v299, v324);
    v289(v265, v119, v323);
    v287(v260, v300, v322);
    v129 = (void (*)(char *, char *, uint64_t))v305[4];
    uint64_t v222 = v305 + 4;
    v223 = v129;
    v129(v268, v124, v110);
    v258 = &v259[*(int *)(v121 + 48)];
    uint64_t v268 = &v259[*((int *)v312 + 12)];
    uint64_t v230 = &v259[*((int *)v314 + 12)];
    uint64_t v130 = v230;
    uint64_t v131 = &v259[*((int *)v315 + 12)];
    uint64_t v233 = &v259[*((int *)v313 + 12)];
    v132 = v233;
    v234 = &v259[*((int *)v316 + 12)];
    uint64_t v133 = v234;
    v235 = &v259[*((int *)v317 + 12)];
    uint64_t v134 = v235;
    uint64_t v135 = v282;
    v282();
    v281(v134, v280, v318);
    ((void (*)(char *, char *, uint64_t))v297)(v133, v308, v321);
    v295(v132, v307, v110);
    uint64_t v136 = v320;
    v293(v131, v127, v320);
    uint64_t v137 = v324;
    v291(v130, v128, v324);
    v289(v268, v284, v323);
    v287(v258, v300, v322);
    v138 = (void (*)(char *, char *, uint64_t))v304[4];
    v218 = v304 + 4;
    v219 = v138;
    v138(v269, v131, v136);
    uint64_t v139 = v279;
    v257 = &v275[*(int *)(v279 + 48)];
    uint64_t v269 = &v275[*((int *)v312 + 12)];
    v256 = &v275[*((int *)v314 + 12)];
    v224 = &v275[*((int *)v315 + 12)];
    uint64_t v140 = v224;
    uint64_t v225 = &v275[*((int *)v313 + 12)];
    uint64_t v141 = v225;
    uint64_t v226 = &v275[*((int *)v316 + 12)];
    v142 = v226;
    v227 = &v275[*((int *)v317 + 12)];
    uint64_t v143 = v227;
    v135();
    uint64_t v144 = v280;
    v281(v143, v280, v318);
    uint64_t v145 = v142;
    uint64_t v146 = v321;
    ((void (*)(char *, char *, uint64_t))v297)(v145, v308, v321);
    v295(v141, v307, v319);
    v293(v140, v283, v136);
    uint64_t v147 = v256;
    v291(v256, v299, v137);
    v148 = v284;
    v289(v269, v284, v323);
    uint64_t v149 = v300;
    uint64_t v150 = v322;
    v287(v257, v300, v322);
    uint64_t v151 = (void (*)(char *, char *, uint64_t))v309[4];
    v214 = v309 + 4;
    v215 = v151;
    v151(v270, v147, v137);
    v256 = &v274[*(int *)(v139 + 48)];
    v213 = &v274[*((int *)v312 + 12)];
    v270 = &v274[*((int *)v314 + 12)];
    v216 = &v274[*((int *)v315 + 12)];
    uint64_t v152 = v216;
    v217 = &v274[*((int *)v313 + 12)];
    v153 = v217;
    v220 = &v274[*((int *)v316 + 12)];
    uint64_t v154 = v220;
    v221 = &v274[*((int *)v317 + 12)];
    v155 = v221;
    v282();
    uint64_t v156 = v144;
    uint64_t v157 = v318;
    v281(v155, v156, v318);
    ((void (*)(char *, char *, uint64_t))v297)(v154, v308, v146);
    uint64_t v158 = v319;
    v295(v153, v307, v319);
    v293(v152, v283, v320);
    v291(v270, v299, v324);
    uint64_t v159 = v213;
    uint64_t v160 = v323;
    v289(v213, v148, v323);
    v287(v256, v149, v150);
    uint64_t v161 = (void (*)(uint64_t, char *, uint64_t))v303[4];
    v161(v271, v159, v160);
    uint64_t v162 = (void (*)(char *, char *, uint64_t))v161;
    uint64_t v163 = v272;
    v298 = &v272[*(int *)(v279 + 48)];
    v296 = &v272[*((int *)v312 + 12)];
    v314 = &v272[*((int *)v314 + 12)];
    v297 = &v272[*((int *)v315 + 12)];
    v164 = v297;
    v313 = &v272[*((int *)v313 + 12)];
    v165 = v313;
    v315 = &v272[*((int *)v316 + 12)];
    uint64_t v166 = v315;
    v317 = &v272[*((int *)v317 + 12)];
    v167 = v317;
    v237(v272, v301, v325);
    v232(v167, v280, v157);
    v229(v166, v308, v321);
    v223(v165, v307, v158);
    uint64_t v168 = v320;
    v219(v164, v283, v320);
    uint64_t v169 = v324;
    v215(v314, v299, v324);
    uint64_t v170 = v296;
    uint64_t v171 = v323;
    v162(v296, v284, v323);
    uint64_t v172 = (void (*)(char *, char *, uint64_t))v302[4];
    v173 = v298;
    uint64_t v174 = v322;
    v172(v298, v300, v322);
    v175 = v173;
    uint64_t v176 = v174;
    v172(v273, v175, v174);
    uint64_t v177 = (int *)v303[1];
    ++v303;
    v312 = (void (*)(char *, uint64_t))v177;
    ((void (*)(char *, uint64_t))v177)(v170, v171);
    v178 = (int *)v309[1];
    ++v309;
    v316 = (void (*)(char *, uint64_t))v178;
    ((void (*)(char *, uint64_t))v178)(v314, v169);
    v179 = (void (*)(char *, uint64_t))v304[1];
    ++v304;
    v179(v297, v168);
    v180 = v179;
    v181 = (char *)v305[1];
    ++v305;
    v308 = v181;
    uint64_t v182 = v319;
    ((void (*)(char *, uint64_t))v181)(v313, v319);
    v183 = (char *)v306[1];
    ++v306;
    v313 = v183;
    ((void (*)(char *, uint64_t))v183)(v315, v321);
    v314 = (char *)v311[1];
    ++v311;
    uint64_t v184 = v318;
    ((void (*)(char *, uint64_t))v314)(v317, v318);
    v317 = (char *)v310[1];
    ++v310;
    uint64_t v185 = v325;
    ((void (*)(char *, uint64_t))v317)(v163, v325);
    v186 = v302 + 1;
    v315 = (char *)v302[1];
    ((void (*)(char *, uint64_t))v315)(v256, v176);
    v302 = v186;
    v316(v270, v324);
    uint64_t v187 = v320;
    v188 = v180;
    v307 = (char *)v180;
    v180(v216, v320);
    v189 = v308;
    ((void (*)(char *, uint64_t))v308)(v217, v182);
    ((void (*)(char *, uint64_t))v313)(v220, v321);
    uint64_t v190 = v184;
    ((void (*)(char *, uint64_t))v314)(v221, v184);
    uint64_t v191 = v317;
    ((void (*)(char *, uint64_t))v317)(v274, v185);
    ((void (*)(char *, uint64_t))v315)(v257, v176);
    uint64_t v192 = v323;
    uint64_t v193 = v312;
    v312(v269, v323);
    v188(v224, v187);
    ((void (*)(char *, uint64_t))v189)(v225, v319);
    ((void (*)(char *, uint64_t))v313)(v226, v321);
    ((void (*)(char *, uint64_t))v314)(v227, v190);
    ((void (*)(char *, uint64_t))v191)(v275, v325);
    uint64_t v194 = v322;
    v195 = v315;
    ((void (*)(char *, uint64_t))v315)(v258, v322);
    v193(v268, v192);
    uint64_t v196 = v324;
    v197 = v316;
    v316(v230, v324);
    ((void (*)(char *, uint64_t))v308)(v233, v319);
    uint64_t v198 = v321;
    v199 = v313;
    ((void (*)(char *, uint64_t))v313)(v234, v321);
    ((void (*)(char *, uint64_t))v314)(v235, v318);
    ((void (*)(char *, uint64_t))v317)(v259, v325);
    ((void (*)(char *, uint64_t))v195)(v260, v194);
    v312(v265, v323);
    v197(v238, v196);
    uint64_t v200 = v320;
    ((void (*)(char *, uint64_t))v307)(v239, v320);
    ((void (*)(char *, uint64_t))v199)(v240, v198);
    uint64_t v201 = v318;
    v202 = v314;
    ((void (*)(char *, uint64_t))v314)(v241, v318);
    uint64_t v203 = v325;
    ((void (*)(char *, uint64_t))v317)(v276, v325);
    ((void (*)(char *, uint64_t))v315)(v267, v322);
    v312(v261, v323);
    v316(v242, v324);
    uint64_t v204 = v200;
    v205 = v307;
    ((void (*)(char *, uint64_t))v307)(v243, v204);
    uint64_t v206 = v319;
    v207 = v308;
    ((void (*)(char *, uint64_t))v308)(v244, v319);
    ((void (*)(char *, uint64_t))v202)(v245, v201);
    ((void (*)(char *, uint64_t))v317)(v277, v203);
    ((void (*)(char *, uint64_t))v315)(v266, v322);
    uint64_t v208 = v323;
    v209 = v312;
    v312(v246, v323);
    v316(v247, v324);
    ((void (*)(char *, uint64_t))v205)(v248, v320);
    ((void (*)(char *, uint64_t))v207)(v249, v206);
    uint64_t v210 = v321;
    uint64_t v211 = v313;
    ((void (*)(char *, uint64_t))v313)(v250, v321);
    ((void (*)(char *, uint64_t))v317)(v278, v325);
    ((void (*)(char *, uint64_t))v315)(v264, v322);
    v209(v262, v208);
    v316(v263, v324);
    ((void (*)(char *, uint64_t))v205)(v251, v320);
    ((void (*)(char *, uint64_t))v207)(v252, v319);
    ((void (*)(char *, uint64_t))v211)(v253, v210);
    return ((uint64_t (*)(char *, uint64_t))v314)(v254, v318);
  }
  return result;
}

uint64_t sub_2587490A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258747308(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], (uint64_t)&a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], a1, a2, a3);
}

uint64_t (*Flatten_8.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258749190(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, uint64_t a8, char *a9, uint64_t a10, uint64_t a11, void *a12)
{
  uint64_t v316 = a8;
  v315 = a7;
  v314 = a6;
  v313 = a5;
  v312 = a4;
  v311 = a2;
  v310 = a1;
  uint64_t v14 = a12[4];
  uint64_t v375 = a12[3];
  uint64_t v370 = v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a12[5];
  v368 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v369 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a12[6];
  v367 = (void (*)(char *, uint64_t))v17;
  uint64_t v371 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a12[7];
  v359 = (char *)v19;
  uint64_t v374 = v20;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a12[8];
  v366 = (char *)v21;
  uint64_t v377 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a12[9];
  v365 = (char *)v23;
  uint64_t v373 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v26 = a12[10];
  v358 = (char *)v25;
  uint64_t v372 = v26;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v376 = a12[11];
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v32 = MEMORY[0x270FA5388](v28, v29, v30, v31);
  v317 = (char *)v243 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v32, v34, v35, v36);
  uint64_t v318 = (char *)v243 - v38;
  uint64_t v42 = MEMORY[0x270FA5388](v37, v39, v40, v41);
  uint64_t v319 = (char *)v243 - v43;
  uint64_t v47 = MEMORY[0x270FA5388](v42, v44, v45, v46);
  uint64_t v320 = (char *)v243 - v48;
  uint64_t v52 = MEMORY[0x270FA5388](v47, v49, v50, v51);
  uint64_t v321 = (char *)v243 - v53;
  uint64_t v57 = MEMORY[0x270FA5388](v52, v54, v55, v56);
  uint64_t v322 = (char *)v243 - v58;
  uint64_t v62 = MEMORY[0x270FA5388](v57, v59, v60, v61);
  uint64_t v323 = (char *)v243 - v63;
  uint64_t v67 = MEMORY[0x270FA5388](v62, v64, v65, v66);
  uint64_t v324 = (char *)v243 - v68;
  uint64_t v72 = MEMORY[0x270FA5388](v67, v69, v70, v71);
  uint64_t v74 = (char *)v243 - v73;
  MEMORY[0x270FA5388](v72, v75, v76, v77);
  uint64_t v79 = (char *)v243 - v78;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a12[12] + 24))(a10, a11, a12[2]);
  if (!v12)
  {
    v287 = a9;
    uint64_t v81 = *((int *)v368 + 12);
    uint64_t v82 = &v79[v81];
    v353 = &v79[v81];
    uint64_t v83 = *((int *)v367 + 12);
    v303 = a3;
    v84 = &v79[v83];
    v352 = &v79[v83];
    uint64_t v85 = *((int *)v359 + 12);
    v360 = &v79[v85];
    uint64_t v86 = *((int *)v366 + 12);
    v361 = &v79[v86];
    uint64_t v87 = *((int *)v365 + 12);
    v329 = &v79[v87];
    uint64_t v88 = *((int *)v358 + 12);
    v351 = &v79[v88];
    v350 = (char *)v27;
    uint64_t v89 = *(int *)(v27 + 48);
    v90 = &v79[v89];
    uint64_t v325 = &v79[v89];
    uint64_t v331 = v28;
    uint64_t v91 = *(int *)(v28 + 48);
    v349 = &v79[v91];
    v92 = v79;
    v328 = v79;
    v307 = &v74[v91];
    v308 = &v74[v89];
    v309 = &v74[v88];
    v306 = &v74[v87];
    v93 = &v74[v86];
    v294 = &v74[v86];
    uint64_t v94 = &v74[v85];
    v295 = &v74[v85];
    uint64_t v95 = &v74[v83];
    v296 = &v74[v83];
    uint64_t v96 = &v74[v81];
    v297 = &v74[v81];
    v363 = *(void **)(v375 - 8);
    v327 = (void (*)(void))v363[2];
    v330 = v363 + 2;
    uint64_t v298 = 0;
    ((void (*)(char *, char *, uint64_t))v327)(v74, v92, v375);
    uint64_t v97 = v370;
    v364 = *(void **)(v370 - 8);
    uint64_t v98 = (char *)v364[2];
    v345 = (void (*)(uint64_t, uint64_t, uint64_t))(v364 + 2);
    v346 = v98;
    ((void (*)(char *, char *, uint64_t))v98)(v96, v82, v370);
    v357 = *(void **)(v369 - 8);
    uint64_t v99 = (char *)v357[2];
    v343 = (char *)(v357 + 2);
    v344 = v99;
    ((void (*)(char *, char *))v99)(v95, v84);
    v348 = *(void **)(v371 - 8);
    uint64_t v100 = (void (*)(char *, char *, uint64_t))v348[2];
    v341 = v348 + 2;
    v342 = v100;
    v100(v94, v360, v371);
    v356 = *(void **)(v374 - 8);
    v101 = (void (*)(char *, char *, uint64_t))v356[2];
    v339 = v356 + 2;
    v340 = v101;
    v101(v93, v361, v374);
    v347 = *(void **)(v377 - 8);
    v102 = (void (*)(char *, char *, uint64_t))v347[2];
    v337 = v347 + 2;
    v338 = v102;
    v102(v306, v329, v377);
    v362 = *(void **)(v373 - 8);
    v326 = (void (*)(char *, char *, uint64_t))v362[2];
    v336 = v362 + 2;
    v326(v309, v351, v373);
    v355 = *(void **)(v372 - 8);
    v103 = (void (*)(char *, char *, uint64_t))v355[2];
    v334 = v355 + 2;
    v335 = v103;
    v103(v308, v90, v372);
    v354 = *(void **)(v376 - 8);
    uint64_t v104 = v97;
    uint64_t v105 = (void (*)(char *, char *, uint64_t))v354[2];
    v332 = v354 + 2;
    v333 = v105;
    v105(v307, v349, v376);
    uint64_t v106 = (void (*)(char *, char *, uint64_t))v363[4];
    v275 = v363 + 4;
    v276 = v106;
    v106(v310, v74, v375);
    v310 = &v324[*(int *)(v331 + 48)];
    v305 = &v324[*((int *)v350 + 12)];
    v289 = &v324[*((int *)v358 + 12)];
    v107 = v289;
    v290 = &v324[*((int *)v365 + 12)];
    uint64_t v108 = v290;
    v291 = &v324[*((int *)v366 + 12)];
    uint64_t v109 = v291;
    uint64_t v110 = v359;
    v292 = &v324[*((int *)v359 + 12)];
    uint64_t v111 = v292;
    v293 = &v324[*((int *)v367 + 12)];
    uint64_t v112 = v293;
    uint64_t v113 = &v324[*((int *)v368 + 12)];
    uint64_t v114 = v327;
    v327();
    ((void (*)(char *, char *, uint64_t))v346)(v113, v353, v104);
    ((void (*)(char *, char *, uint64_t))v344)(v112, v352, v369);
    v342(v111, v360, v371);
    v340(v109, v361, v374);
    v338(v108, v329, v377);
    v326(v107, v351, v373);
    v335(v305, v325, v372);
    v333(v310, v349, v376);
    uint64_t v115 = (void (*)(char *, char *, uint64_t))v364[4];
    uint64_t v269 = v364 + 4;
    v270 = v115;
    uint64_t v116 = v113;
    uint64_t v117 = v104;
    v115(v311, v116, v104);
    v311 = &v323[*(int *)(v331 + 48)];
    v304 = &v323[*((int *)v350 + 12)];
    uint64_t v118 = v358;
    v283 = &v323[*((int *)v358 + 12)];
    uint64_t v119 = v283;
    v284 = &v323[*((int *)v365 + 12)];
    v120 = v284;
    v285 = &v323[*((int *)v366 + 12)];
    uint64_t v121 = v285;
    v122 = &v323[*((int *)v110 + 12)];
    v286 = v122;
    v123 = &v323[*((int *)v367 + 12)];
    v288 = &v323[*((int *)v368 + 12)];
    uint64_t v124 = v288;
    v114();
    ((void (*)(char *, char *, uint64_t))v346)(v124, v353, v117);
    uint64_t v125 = v369;
    ((void (*)(char *, char *, uint64_t))v344)(v123, v352, v369);
    v342(v122, v360, v371);
    v340(v121, v361, v374);
    v338(v120, v329, v377);
    uint64_t v126 = v119;
    uint64_t v127 = v351;
    v326(v126, v351, v373);
    uint64_t v128 = v325;
    v335(v304, v325, v372);
    v333(v311, v349, v376);
    v129 = (void (*)(char *, char *, uint64_t))v357[4];
    uint64_t v263 = v357 + 4;
    uint64_t v264 = v129;
    uint64_t v130 = v125;
    v129(v303, v123, v125);
    v302 = &v322[*(int *)(v331 + 48)];
    v303 = &v322[*((int *)v350 + 12)];
    uint64_t v131 = &v322[*((int *)v118 + 12)];
    v278 = v131;
    uint64_t v279 = &v322[*((int *)v365 + 12)];
    v132 = v279;
    v280 = &v322[*((int *)v366 + 12)];
    uint64_t v133 = v280;
    uint64_t v134 = &v322[*((int *)v359 + 12)];
    v281 = &v322[*((int *)v367 + 12)];
    uint64_t v135 = v281;
    v282 = &v322[*((int *)v368 + 12)];
    uint64_t v136 = v282;
    v327();
    ((void (*)(char *, char *, uint64_t))v346)(v136, v353, v370);
    ((void (*)(char *, char *, uint64_t))v344)(v135, v352, v130);
    uint64_t v137 = v134;
    v138 = v134;
    uint64_t v139 = v371;
    v342(v138, v360, v371);
    v340(v133, v361, v374);
    v338(v132, v329, v377);
    v326(v131, v127, v373);
    v335(v303, v128, v372);
    v333(v302, v349, v376);
    uint64_t v140 = (void (*)(char *, char *, uint64_t))v348[4];
    v260 = v348 + 4;
    uint64_t v261 = v140;
    v140(v312, v137, v139);
    v301 = &v321[*(int *)(v331 + 48)];
    v312 = &v321[*((int *)v350 + 12)];
    uint64_t v141 = v358;
    uint64_t v271 = &v321[*((int *)v358 + 12)];
    v142 = v271;
    v272 = &v321[*((int *)v365 + 12)];
    uint64_t v143 = v272;
    uint64_t v144 = &v321[*((int *)v366 + 12)];
    v273 = &v321[*((int *)v359 + 12)];
    uint64_t v145 = v273;
    v274 = &v321[*((int *)v367 + 12)];
    uint64_t v146 = v274;
    v277 = &v321[*((int *)v368 + 12)];
    uint64_t v147 = v277;
    v327();
    ((void (*)(char *, char *, uint64_t))v346)(v147, v353, v370);
    ((void (*)(char *, char *, uint64_t))v344)(v146, v352, v369);
    v342(v145, v360, v139);
    v148 = v144;
    uint64_t v149 = v144;
    uint64_t v150 = v374;
    v340(v149, v361, v374);
    uint64_t v151 = v329;
    v338(v143, v329, v377);
    uint64_t v152 = v142;
    v153 = v326;
    v326(v152, v351, v373);
    v335(v312, v325, v372);
    v333(v301, v349, v376);
    uint64_t v154 = (void (*)(char *, char *, uint64_t))v356[4];
    v253 = v356 + 4;
    v254 = v154;
    v154(v313, v148, v150);
    v300 = &v320[*(int *)(v331 + 48)];
    v313 = &v320[*((int *)v350 + 12)];
    v155 = &v320[*((int *)v141 + 12)];
    v262 = v155;
    v299 = &v320[*((int *)v365 + 12)];
    uint64_t v265 = &v320[*((int *)v366 + 12)];
    uint64_t v156 = v265;
    uint64_t v266 = &v320[*((int *)v359 + 12)];
    uint64_t v157 = v266;
    uint64_t v267 = &v320[*((int *)v367 + 12)];
    uint64_t v158 = v267;
    uint64_t v268 = &v320[*((int *)v368 + 12)];
    uint64_t v159 = v268;
    v327();
    ((void (*)(char *, char *, uint64_t))v346)(v159, v353, v370);
    ((void (*)(char *, char *, uint64_t))v344)(v158, v352, v369);
    v342(v157, v360, v371);
    v340(v156, v361, v150);
    uint64_t v160 = v299;
    uint64_t v161 = v377;
    v338(v299, v151, v377);
    v153(v155, v351, v373);
    v335(v313, v325, v372);
    uint64_t v162 = v349;
    v333(v300, v349, v376);
    uint64_t v163 = (void (*)(char *, char *, uint64_t))v347[4];
    v249 = v347 + 4;
    v250 = v163;
    v163(v314, v160, v161);
    uint64_t v164 = v331;
    v299 = &v319[*(int *)(v331 + 48)];
    v314 = &v319[*((int *)v350 + 12)];
    v165 = &v319[*((int *)v358 + 12)];
    uint64_t v255 = &v319[*((int *)v365 + 12)];
    uint64_t v166 = v255;
    v256 = &v319[*((int *)v366 + 12)];
    v167 = v256;
    uint64_t v168 = v359;
    v257 = &v319[*((int *)v359 + 12)];
    uint64_t v169 = v257;
    v258 = &v319[*((int *)v367 + 12)];
    uint64_t v170 = v258;
    v259 = &v319[*((int *)v368 + 12)];
    uint64_t v171 = v259;
    v327();
    ((void (*)(char *, char *, uint64_t))v346)(v171, v353, v370);
    ((void (*)(char *, char *, uint64_t))v344)(v170, v352, v369);
    v342(v169, v360, v371);
    v340(v167, v361, v374);
    uint64_t v172 = v166;
    v173 = v329;
    v338(v172, v329, v377);
    uint64_t v174 = v165;
    uint64_t v175 = v373;
    v326(v165, v351, v373);
    uint64_t v176 = v325;
    v335(v314, v325, v372);
    v333(v299, v162, v376);
    uint64_t v177 = (void (*)(char *, char *, uint64_t))v362[4];
    v243[1] = v362 + 4;
    v244 = v177;
    v177(v315, v174, v175);
    v315 = &v318[*(int *)(v164 + 48)];
    v243[0] = &v318[*((int *)v350 + 12)];
    v245 = &v318[*((int *)v358 + 12)];
    v178 = v245;
    v246 = &v318[*((int *)v365 + 12)];
    v179 = v246;
    v247 = &v318[*((int *)v366 + 12)];
    v180 = v247;
    v248 = &v318[*((int *)v168 + 12)];
    v181 = v248;
    v251 = &v318[*((int *)v367 + 12)];
    uint64_t v182 = v251;
    v252 = &v318[*((int *)v368 + 12)];
    v183 = v252;
    v327();
    uint64_t v184 = v370;
    ((void (*)(char *, char *, uint64_t))v346)(v183, v353, v370);
    uint64_t v185 = v182;
    uint64_t v186 = v369;
    ((void (*)(char *, char *, uint64_t))v344)(v185, v352, v369);
    v342(v181, v360, v371);
    v340(v180, v361, v374);
    v338(v179, v173, v377);
    v326(v178, v351, v373);
    uint64_t v187 = v243[0];
    uint64_t v188 = v372;
    v335((char *)v243[0], v176, v372);
    v333(v315, v349, v376);
    v345 = (void (*)(uint64_t, uint64_t, uint64_t))v355[4];
    v345(v316, v187, v188);
    v189 = v317;
    v346 = &v317[*(int *)(v331 + 48)];
    v343 = &v317[*((int *)v350 + 12)];
    v358 = &v317[*((int *)v358 + 12)];
    v365 = &v317[*((int *)v365 + 12)];
    uint64_t v190 = v365;
    v344 = &v317[*((int *)v366 + 12)];
    uint64_t v191 = v344;
    v366 = &v317[*((int *)v359 + 12)];
    uint64_t v192 = v366;
    v350 = &v317[*((int *)v367 + 12)];
    uint64_t v193 = v350;
    v359 = &v317[*((int *)v368 + 12)];
    uint64_t v194 = v359;
    v276(v317, v328, v375);
    v270(v194, v353, v184);
    v264(v193, v352, v186);
    v261(v192, v360, v371);
    v254(v191, v361, v374);
    v250(v190, v329, v377);
    v195 = v358;
    uint64_t v196 = v373;
    v244(v358, v351, v373);
    v197 = v343;
    uint64_t v198 = v372;
    v345((uint64_t)v343, (uint64_t)v325, v372);
    v199 = (void (*)(char *, char *, uint64_t))v354[4];
    uint64_t v200 = v346;
    uint64_t v201 = v376;
    v199(v346, v349, v376);
    v199(v287, v200, v201);
    v360 = (char *)v355[1];
    ++v355;
    ((void (*)(char *, uint64_t))v360)(v197, v198);
    v202 = (int *)v362[1];
    ++v362;
    v367 = (void (*)(char *, uint64_t))v202;
    ((void (*)(char *, uint64_t))v202)(v195, v196);
    uint64_t v203 = v347 + 1;
    v358 = (char *)v347[1];
    uint64_t v204 = v377;
    ((void (*)(char *, uint64_t))v358)(v365, v377);
    v365 = (char *)v356[1];
    ++v356;
    ((void (*)(char *, uint64_t))v365)(v344, v374);
    v205 = (char *)v348[1];
    ++v348;
    v353 = v205;
    ((void (*)(char *, uint64_t))v205)(v366, v371);
    v366 = (char *)v357[1];
    ++v357;
    uint64_t v206 = v369;
    ((void (*)(char *, uint64_t))v366)(v350, v369);
    v207 = (int *)v364[1];
    ++v364;
    v368 = (void (*)(char *, uint64_t))v207;
    uint64_t v208 = v370;
    ((void (*)(char *, uint64_t))v207)(v359, v370);
    v361 = (char *)v363[1];
    ++v363;
    uint64_t v209 = v375;
    ((void (*)(char *, uint64_t))v361)(v189, v375);
    uint64_t v210 = (char *)v354[1];
    ++v354;
    v359 = v210;
    ((void (*)(char *, uint64_t))v210)(v315, v376);
    v367(v245, v196);
    uint64_t v211 = v358;
    v347 = v203;
    ((void (*)(char *, uint64_t))v358)(v246, v204);
    uint64_t v212 = v374;
    ((void (*)(char *, uint64_t))v365)(v247, v374);
    uint64_t v213 = v371;
    ((void (*)(char *, uint64_t))v353)(v248, v371);
    v214 = v366;
    ((void (*)(char *, uint64_t))v366)(v251, v206);
    v368(v252, v208);
    ((void (*)(char *, uint64_t))v361)(v318, v209);
    uint64_t v215 = v376;
    ((void (*)(char *, uint64_t))v359)(v299, v376);
    v216 = v360;
    ((void (*)(char *, uint64_t))v360)(v314, v372);
    ((void (*)(char *, uint64_t))v211)(v255, v377);
    v217 = v365;
    ((void (*)(char *, uint64_t))v365)(v256, v212);
    ((void (*)(char *, uint64_t))v353)(v257, v213);
    uint64_t v218 = v369;
    ((void (*)(char *, uint64_t))v214)(v258, v369);
    v368(v259, v370);
    uint64_t v219 = v375;
    ((void (*)(char *, uint64_t))v361)(v319, v375);
    v220 = v359;
    ((void (*)(char *, uint64_t))v359)(v300, v215);
    ((void (*)(char *, uint64_t))v216)(v313, v372);
    v367(v262, v373);
    ((void (*)(char *, uint64_t))v217)(v265, v374);
    v221 = v353;
    ((void (*)(char *, uint64_t))v353)(v266, v371);
    ((void (*)(char *, uint64_t))v366)(v267, v218);
    v368(v268, v370);
    uint64_t v222 = v219;
    v223 = v361;
    ((void (*)(char *, uint64_t))v361)(v320, v222);
    uint64_t v224 = v376;
    ((void (*)(char *, uint64_t))v220)(v301, v376);
    uint64_t v225 = v372;
    ((void (*)(char *, uint64_t))v360)(v312, v372);
    v367(v271, v373);
    ((void (*)(char *, uint64_t))v358)(v272, v377);
    ((void (*)(char *, uint64_t))v221)(v273, v371);
    ((void (*)(char *, uint64_t))v366)(v274, v369);
    uint64_t v226 = v368;
    v368(v277, v370);
    uint64_t v227 = v375;
    ((void (*)(char *, uint64_t))v223)(v321, v375);
    uint64_t v228 = v359;
    ((void (*)(char *, uint64_t))v359)(v302, v224);
    uint64_t v229 = v360;
    ((void (*)(char *, uint64_t))v360)(v303, v225);
    v367(v278, v373);
    uint64_t v230 = v377;
    ((void (*)(char *, uint64_t))v358)(v279, v377);
    ((void (*)(char *, uint64_t))v365)(v280, v374);
    ((void (*)(char *, uint64_t))v366)(v281, v369);
    v226(v282, v370);
    ((void (*)(char *, uint64_t))v223)(v322, v227);
    ((void (*)(char *, uint64_t))v228)(v311, v376);
    ((void (*)(char *, uint64_t))v229)(v304, v372);
    uint64_t v231 = v373;
    v367(v283, v373);
    uint64_t v232 = v230;
    uint64_t v233 = v358;
    ((void (*)(char *, uint64_t))v358)(v284, v232);
    uint64_t v234 = v374;
    v235 = v365;
    ((void (*)(char *, uint64_t))v365)(v285, v374);
    uint64_t v236 = v371;
    v237 = v353;
    ((void (*)(char *, uint64_t))v353)(v286, v371);
    v368(v288, v370);
    ((void (*)(char *, uint64_t))v361)(v323, v375);
    ((void (*)(char *, uint64_t))v359)(v310, v376);
    uint64_t v238 = v372;
    ((void (*)(char *, uint64_t))v360)(v305, v372);
    uint64_t v239 = v231;
    v240 = v367;
    v367(v289, v239);
    ((void (*)(char *, uint64_t))v233)(v290, v377);
    ((void (*)(char *, uint64_t))v235)(v291, v234);
    ((void (*)(char *, uint64_t))v237)(v292, v236);
    uint64_t v241 = v369;
    v242 = v366;
    ((void (*)(char *, uint64_t))v366)(v293, v369);
    ((void (*)(char *, uint64_t))v361)(v324, v375);
    ((void (*)(char *, uint64_t))v359)(v307, v376);
    ((void (*)(char *, uint64_t))v360)(v308, v238);
    v240(v309, v373);
    ((void (*)(char *, uint64_t))v233)(v306, v377);
    ((void (*)(char *, uint64_t))v365)(v294, v374);
    ((void (*)(char *, uint64_t))v237)(v295, v236);
    ((void (*)(char *, uint64_t))v242)(v296, v241);
    return ((uint64_t (*)(char *, uint64_t))v368)(v297, v370);
  }
  return result;
}

uint64_t sub_25874B694@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258749190(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], (uint64_t)&a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], a1, a2, a3);
}

uint64_t (*Flatten_9.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_25874B790(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, uint64_t a9, char *a10, uint64_t a11, uint64_t a12, void *a13)
{
  v358 = a8;
  v357 = a7;
  v356 = a6;
  v355 = a5;
  v354 = a4;
  v353 = a3;
  v352 = a2;
  v351 = a1;
  uint64_t v14 = a13[4];
  uint64_t v419 = a13[3];
  uint64_t v420 = v14;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v16 = a13[5];
  uint64_t v410 = TupleTypeMetadata2;
  uint64_t v417 = v16;
  uint64_t v17 = swift_getTupleTypeMetadata2();
  uint64_t v18 = a13[6];
  uint64_t v409 = v17;
  uint64_t v416 = v18;
  uint64_t v19 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a13[7];
  v415 = (void (*)(char *, uint64_t))v19;
  uint64_t v423 = v20;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a13[8];
  v414 = (char *)v21;
  uint64_t v422 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a13[9];
  v413 = (void (*)(char *, uint64_t))v23;
  uint64_t v418 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v26 = a13[10];
  v412 = (char *)v25;
  uint64_t v421 = v26;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v28 = a13[11];
  v411 = (char *)v27;
  uint64_t v424 = v28;
  uint64_t v29 = swift_getTupleTypeMetadata2();
  uint64_t v425 = a13[12];
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v34 = MEMORY[0x270FA5388](v30, v31, v32, v33);
  v359 = (char *)&v264 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v34, v36, v37, v38);
  v360 = (char *)&v264 - v40;
  uint64_t v44 = MEMORY[0x270FA5388](v39, v41, v42, v43);
  v361 = (char *)&v264 - v45;
  uint64_t v49 = MEMORY[0x270FA5388](v44, v46, v47, v48);
  v362 = (char *)&v264 - v50;
  uint64_t v54 = MEMORY[0x270FA5388](v49, v51, v52, v53);
  v363 = (char *)&v264 - v55;
  uint64_t v59 = MEMORY[0x270FA5388](v54, v56, v57, v58);
  v364 = (char *)&v264 - v60;
  uint64_t v64 = MEMORY[0x270FA5388](v59, v61, v62, v63);
  uint64_t v66 = (char *)&v264 - v65;
  uint64_t v70 = MEMORY[0x270FA5388](v64, v67, v68, v69);
  v365 = (char *)&v264 - v71;
  uint64_t v75 = MEMORY[0x270FA5388](v70, v72, v73, v74);
  v366 = (char *)&v264 - v76;
  uint64_t v80 = MEMORY[0x270FA5388](v75, v77, v78, v79);
  uint64_t v82 = (char *)&v264 - v81;
  MEMORY[0x270FA5388](v80, v83, v84, v85);
  uint64_t v87 = (char *)&v264 - v86;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a13[13] + 24))(a11, a12, a13[2]);
  if (!v13)
  {
    v315 = a10;
    uint64_t v312 = a9;
    uint64_t v89 = *(int *)(v410 + 48);
    v90 = &v87[v89];
    v396 = &v87[v89];
    uint64_t v91 = *(int *)(v409 + 48);
    v92 = &v87[v91];
    v395 = &v87[v91];
    uint64_t v93 = *((int *)v415 + 12);
    v403 = &v87[v93];
    uint64_t v94 = *((int *)v414 + 12);
    v393 = &v87[v94];
    uint64_t v95 = *((int *)v413 + 12);
    v394 = &v87[v95];
    uint64_t v96 = *((int *)v412 + 12);
    v404 = &v87[v96];
    uint64_t v97 = *((int *)v411 + 12);
    v405 = &v87[v97];
    v397 = (char *)v29;
    uint64_t v98 = *(int *)(v29 + 48);
    v392 = &v87[v98];
    uint64_t v373 = v30;
    uint64_t v99 = *(int *)(v30 + 48);
    v391 = &v87[v99];
    uint64_t v100 = v87;
    uint64_t v372 = v87;
    v348 = &v82[v99];
    v349 = &v82[v98];
    v350 = &v82[v97];
    v342 = v66;
    v345 = &v82[v96];
    v346 = &v82[v95];
    v347 = &v82[v94];
    v101 = &v82[v93];
    v328 = &v82[v93];
    v102 = &v82[v91];
    v329 = &v82[v91];
    v103 = &v82[v89];
    v330 = &v82[v89];
    uint64_t v104 = v419;
    v406 = *(void **)(v419 - 8);
    v388 = (void (*)(void))v406[2];
    v389 = (char *)(v406 + 2);
    uint64_t v331 = 0;
    ((void (*)(char *, char *, uint64_t))v388)(v82, v100, v419);
    uint64_t v105 = v420;
    v408 = *(void **)(v420 - 8);
    uint64_t v106 = (void (*)(char *, char *, uint64_t))v408[2];
    v368 = v408 + 2;
    v367 = v106;
    v106(v103, v90, v420);
    v402 = *(void **)(v417 - 8);
    v107 = (char *)v402[2];
    v386 = (char *)(v402 + 2);
    v387 = v107;
    ((void (*)(char *, char *))v107)(v102, v92);
    uint64_t v369 = *(void **)(v416 - 8);
    uint64_t v108 = (void (*)(char *, char *, uint64_t))v369[2];
    v384 = v369 + 2;
    v385 = v108;
    v108(v101, v403, v416);
    v390 = *(void **)(v423 - 8);
    uint64_t v109 = (void (*)(char *, char *, uint64_t))v390[2];
    v382 = v390 + 2;
    v383 = v109;
    v109(v347, v393, v423);
    v401 = *(void **)(v422 - 8);
    uint64_t v371 = (void (*)(char *, char *, uint64_t))v401[2];
    v381 = v401 + 2;
    v371(v346, v394, v422);
    v407 = *(void **)(v418 - 8);
    uint64_t v370 = (void (*)(char *, char *, uint64_t))v407[2];
    v380 = v407 + 2;
    v370(v345, v404, v418);
    v400 = *(void **)(v421 - 8);
    uint64_t v110 = (void (*)(char *, char *, uint64_t))v400[2];
    v378 = v400 + 2;
    v379 = v110;
    v110(v350, v405, v421);
    v399 = *(void **)(v424 - 8);
    uint64_t v111 = (void (*)(char *, char *, uint64_t))v399[2];
    uint64_t v376 = v399 + 2;
    uint64_t v377 = v111;
    v111(v349, v392, v424);
    v398 = *(void **)(v425 - 8);
    uint64_t v112 = (void (*)(char *, char *, uint64_t))v398[2];
    uint64_t v374 = v398 + 2;
    uint64_t v375 = v112;
    v112(v348, v391, v425);
    uint64_t v113 = (void (*)(void))v406[4];
    v302 = v406 + 4;
    v303 = v113;
    ((void (*)(char *, char *, uint64_t))v113)(v351, v82, v104);
    v344 = &v366[*(int *)(v373 + 48)];
    v351 = &v366[*((int *)v397 + 12)];
    uint64_t v322 = &v366[*((int *)v411 + 12)];
    uint64_t v114 = v322;
    uint64_t v323 = &v366[*((int *)v412 + 12)];
    uint64_t v115 = v323;
    uint64_t v324 = &v366[*((int *)v413 + 12)];
    uint64_t v116 = v324;
    uint64_t v325 = &v366[*((int *)v414 + 12)];
    uint64_t v117 = v325;
    v326 = &v366[*((int *)v415 + 12)];
    uint64_t v118 = v326;
    v327 = &v366[*(int *)(v409 + 48)];
    uint64_t v119 = v327;
    v120 = &v366[*(int *)(v410 + 48)];
    v388();
    uint64_t v121 = v120;
    v367(v120, v396, v105);
    ((void (*)(char *, char *, uint64_t))v387)(v119, v395, v417);
    uint64_t v122 = v416;
    v385(v118, v403, v416);
    v383(v117, v393, v423);
    v371(v116, v394, v422);
    v370(v115, v404, v418);
    v379(v114, v405, v421);
    v377(v351, v392, v424);
    v375(v344, v391, v425);
    v123 = (void (*)(char *, char *, uint64_t))v408[4];
    v299 = v408 + 4;
    v300 = v123;
    v123(v352, v121, v105);
    v343 = &v365[*(int *)(v373 + 48)];
    v352 = &v365[*((int *)v397 + 12)];
    uint64_t v316 = &v365[*((int *)v411 + 12)];
    uint64_t v124 = v316;
    v317 = &v365[*((int *)v412 + 12)];
    uint64_t v125 = v317;
    uint64_t v318 = &v365[*((int *)v413 + 12)];
    uint64_t v126 = v318;
    uint64_t v319 = &v365[*((int *)v414 + 12)];
    uint64_t v127 = v319;
    uint64_t v320 = &v365[*((int *)v415 + 12)];
    uint64_t v128 = v320;
    v341 = &v365[*(int *)(v409 + 48)];
    v129 = v341;
    uint64_t v321 = &v365[*(int *)(v410 + 48)];
    uint64_t v130 = v321;
    v388();
    v367(v130, v396, v105);
    uint64_t v131 = v129;
    uint64_t v132 = v417;
    ((void (*)(char *, char *, uint64_t))v387)(v131, v395, v417);
    v385(v128, v403, v122);
    v383(v127, v393, v423);
    v371(v126, v394, v422);
    uint64_t v133 = v418;
    v370(v125, v404, v418);
    v379(v124, v405, v421);
    v377(v352, v392, v424);
    v375(v343, v391, v425);
    uint64_t v134 = (void (*)(char *, char *, uint64_t))v402[4];
    v293 = v402 + 4;
    v294 = v134;
    uint64_t v135 = v132;
    v134(v353, v341, v132);
    v340 = &v342[*(int *)(v373 + 48)];
    v341 = &v342[*((int *)v397 + 12)];
    v353 = &v342[*((int *)v411 + 12)];
    v309 = &v342[*((int *)v412 + 12)];
    uint64_t v136 = v309;
    v310 = &v342[*((int *)v413 + 12)];
    uint64_t v137 = v310;
    v311 = &v342[*((int *)v414 + 12)];
    v138 = v311;
    uint64_t v139 = &v342[*((int *)v415 + 12)];
    v313 = &v342[*(int *)(v409 + 48)];
    uint64_t v140 = v313;
    v314 = &v342[*(int *)(v410 + 48)];
    uint64_t v141 = v314;
    v388();
    v142 = v141;
    uint64_t v143 = v367;
    v367(v142, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v140, v395, v135);
    uint64_t v144 = v416;
    v385(v139, v403, v416);
    v383(v138, v393, v423);
    v371(v137, v394, v422);
    v370(v136, v404, v133);
    uint64_t v145 = v421;
    v379(v353, v405, v421);
    v377(v341, v392, v424);
    v375(v340, v391, v425);
    uint64_t v146 = (void (*)(char *, char *, uint64_t))v369[4];
    v287 = v369 + 4;
    v288 = v146;
    uint64_t v147 = v144;
    v146(v354, v139, v144);
    v338 = &v364[*(int *)(v373 + 48)];
    v339 = &v364[*((int *)v397 + 12)];
    v354 = &v364[*((int *)v411 + 12)];
    v304 = &v364[*((int *)v412 + 12)];
    v148 = v304;
    v305 = &v364[*((int *)v413 + 12)];
    uint64_t v149 = v305;
    v337 = &v364[*((int *)v414 + 12)];
    v306 = &v364[*((int *)v415 + 12)];
    uint64_t v150 = v306;
    uint64_t v151 = v409;
    v307 = &v364[*(int *)(v409 + 48)];
    uint64_t v152 = v307;
    v308 = &v364[*(int *)(v410 + 48)];
    v153 = v308;
    v388();
    v143(v153, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v152, v395, v417);
    v385(v150, v403, v147);
    uint64_t v154 = v337;
    v155 = v393;
    uint64_t v156 = v423;
    v383(v337, v393, v423);
    uint64_t v157 = v394;
    v371(v149, v394, v422);
    v370(v148, v404, v418);
    v379(v354, v405, v145);
    v377(v339, v392, v424);
    v375(v338, v391, v425);
    uint64_t v158 = (void (*)(char *, char *, uint64_t))v390[4];
    v284 = v390 + 4;
    v285 = v158;
    v158(v355, v154, v156);
    v336 = &v363[*(int *)(v373 + 48)];
    v337 = &v363[*((int *)v397 + 12)];
    v355 = &v363[*((int *)v411 + 12)];
    v295 = &v363[*((int *)v412 + 12)];
    uint64_t v159 = v295;
    v335 = &v363[*((int *)v413 + 12)];
    v296 = &v363[*((int *)v414 + 12)];
    uint64_t v160 = v296;
    v297 = &v363[*((int *)v415 + 12)];
    uint64_t v161 = v297;
    uint64_t v298 = &v363[*(int *)(v151 + 48)];
    uint64_t v162 = v298;
    v301 = &v363[*(int *)(v410 + 48)];
    uint64_t v163 = v301;
    v388();
    v367(v163, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v162, v395, v417);
    v385(v161, v403, v416);
    v383(v160, v155, v156);
    uint64_t v164 = v335;
    uint64_t v165 = v422;
    v371(v335, v157, v422);
    v370(v159, v404, v418);
    v379(v355, v405, v421);
    v377(v337, v392, v424);
    uint64_t v166 = v391;
    v375(v336, v391, v425);
    v167 = (void (*)(char *, char *, uint64_t))v401[4];
    v276 = v401 + 4;
    v277 = v167;
    v167(v356, v164, v165);
    v334 = &v362[*(int *)(v373 + 48)];
    v335 = &v362[*((int *)v397 + 12)];
    v356 = &v362[*((int *)v411 + 12)];
    v333 = &v362[*((int *)v412 + 12)];
    v286 = &v362[*((int *)v413 + 12)];
    uint64_t v168 = v286;
    v289 = &v362[*((int *)v414 + 12)];
    uint64_t v169 = v289;
    v290 = &v362[*((int *)v415 + 12)];
    uint64_t v170 = v290;
    v291 = &v362[*(int *)(v409 + 48)];
    uint64_t v171 = v291;
    uint64_t v172 = v410;
    v292 = &v362[*(int *)(v410 + 48)];
    v173 = v292;
    v388();
    v367(v173, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v171, v395, v417);
    v385(v170, v403, v416);
    v383(v169, v393, v423);
    uint64_t v174 = v168;
    uint64_t v175 = v422;
    v371(v174, v394, v422);
    uint64_t v176 = v333;
    uint64_t v177 = v418;
    v370(v333, v404, v418);
    v379(v356, v405, v421);
    v377(v335, v392, v424);
    v375(v334, v166, v425);
    v178 = (void (*)(char *, char *, uint64_t))v407[4];
    v272 = v407 + 4;
    v273 = v178;
    v178(v357, v176, v177);
    uint64_t v179 = v373;
    v333 = &v361[*(int *)(v373 + 48)];
    v357 = &v361[*((int *)v397 + 12)];
    v332 = &v361[*((int *)v411 + 12)];
    v278 = &v361[*((int *)v412 + 12)];
    v180 = v278;
    uint64_t v279 = &v361[*((int *)v413 + 12)];
    v181 = v279;
    v280 = &v361[*((int *)v414 + 12)];
    uint64_t v182 = v280;
    v281 = &v361[*((int *)v415 + 12)];
    v183 = v281;
    v282 = &v361[*(int *)(v409 + 48)];
    uint64_t v184 = v282;
    uint64_t v185 = &v361[*(int *)(v172 + 48)];
    v283 = v185;
    v388();
    v367(v185, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v184, v395, v417);
    uint64_t v186 = v416;
    v385(v183, v403, v416);
    uint64_t v187 = v423;
    v383(v182, v393, v423);
    v371(v181, v394, v175);
    v370(v180, v404, v418);
    uint64_t v188 = v332;
    uint64_t v189 = v421;
    v379(v332, v405, v421);
    uint64_t v190 = v392;
    v377(v357, v392, v424);
    v375(v333, v391, v425);
    uint64_t v191 = (void (*)(char *, char *, uint64_t))v400[4];
    uint64_t v266 = v400 + 4;
    uint64_t v267 = v191;
    v191(v358, v188, v189);
    v332 = &v360[*(int *)(v179 + 48)];
    uint64_t v265 = &v360[*((int *)v397 + 12)];
    v358 = &v360[*((int *)v411 + 12)];
    uint64_t v268 = &v360[*((int *)v412 + 12)];
    uint64_t v192 = v268;
    uint64_t v269 = &v360[*((int *)v413 + 12)];
    uint64_t v193 = v269;
    v270 = &v360[*((int *)v414 + 12)];
    uint64_t v194 = v270;
    uint64_t v271 = &v360[*((int *)v415 + 12)];
    v195 = v271;
    v274 = &v360[*(int *)(v409 + 48)];
    uint64_t v196 = v274;
    v275 = &v360[*(int *)(v410 + 48)];
    v197 = v275;
    v388();
    uint64_t v198 = v197;
    uint64_t v199 = v420;
    v367(v198, v396, v420);
    ((void (*)(char *, char *, uint64_t))v387)(v196, v395, v417);
    v385(v195, v403, v186);
    v383(v194, v393, v187);
    v371(v193, v394, v422);
    uint64_t v200 = v418;
    v370(v192, v404, v418);
    v379(v358, v405, v421);
    uint64_t v201 = v265;
    uint64_t v202 = v424;
    v377(v265, v190, v424);
    v375(v332, v391, v425);
    uint64_t v203 = (void (*)(uint64_t, char *, uint64_t))v399[4];
    v203(v312, v201, v202);
    uint64_t v204 = (void (*)(void (*)(void), char *, uint64_t))v203;
    v389 = &v359[*(int *)(v373 + 48)];
    v388 = (void (*)(void))&v359[*((int *)v397 + 12)];
    v386 = &v359[*((int *)v411 + 12)];
    v412 = &v359[*((int *)v412 + 12)];
    v387 = &v359[*((int *)v413 + 12)];
    v205 = v387;
    v397 = &v359[*((int *)v414 + 12)];
    uint64_t v206 = v397;
    v411 = &v359[*((int *)v415 + 12)];
    v207 = v411;
    uint64_t v208 = &v359[*(int *)(v409 + 48)];
    v414 = &v359[*(int *)(v410 + 48)];
    uint64_t v209 = v414;
    v415 = (void (*)(char *, uint64_t))v208;
    v303();
    v300(v209, v396, v199);
    v294(v208, v395, v417);
    v288(v207, v403, v416);
    v285(v206, v393, v423);
    uint64_t v210 = v422;
    v277(v205, v394, v422);
    v273(v412, v404, v200);
    uint64_t v211 = v386;
    uint64_t v212 = v421;
    v267(v386, v405, v421);
    uint64_t v213 = v388;
    uint64_t v214 = v424;
    v204(v388, v392, v424);
    uint64_t v215 = (void (*)(char *, char *, uint64_t))v398[4];
    v216 = v389;
    uint64_t v217 = v425;
    v215(v389, v391, v425);
    v215(v315, v216, v217);
    uint64_t v218 = (char *)v399[1];
    ++v399;
    v403 = v218;
    ((void (*)(void (*)(void), uint64_t))v218)(v213, v214);
    uint64_t v219 = (char *)v400[1];
    ++v400;
    v404 = v219;
    ((void (*)(char *, uint64_t))v219)(v211, v212);
    v220 = (int *)v407[1];
    ++v407;
    v413 = (void (*)(char *, uint64_t))v220;
    uint64_t v221 = v418;
    ((void (*)(char *, uint64_t))v220)(v412, v418);
    uint64_t v222 = v401 + 1;
    uint64_t v410 = v401[1];
    ((void (*)(char *, uint64_t))v410)(v387, v210);
    v401 = v222;
    v405 = (char *)v390[1];
    ++v390;
    uint64_t v223 = v423;
    ((void (*)(char *, uint64_t))v405)(v397, v423);
    uint64_t v224 = v369 + 1;
    uint64_t v409 = v369[1];
    ((void (*)(char *, uint64_t))v409)(v411, v416);
    uint64_t v369 = v224;
    uint64_t v225 = (char *)v402[1];
    ++v402;
    v411 = v225;
    uint64_t v226 = v417;
    ((void (*)(void, uint64_t))v225)(v415, v417);
    uint64_t v227 = (int *)v408[1];
    ++v408;
    v415 = (void (*)(char *, uint64_t))v227;
    uint64_t v228 = v420;
    ((void (*)(char *, uint64_t))v227)(v414, v420);
    v412 = (char *)v406[1];
    ++v406;
    uint64_t v229 = v419;
    ((void (*)(char *, uint64_t))v412)(v359, v419);
    uint64_t v230 = (char *)v398[1];
    ++v398;
    v414 = v230;
    uint64_t v231 = v425;
    ((void (*)(char *, uint64_t))v230)(v332, v425);
    ((void (*)(char *, uint64_t))v404)(v358, v421);
    v413(v268, v221);
    uint64_t v232 = v422;
    uint64_t v233 = (void (*)(char *, uint64_t))v410;
    ((void (*)(char *, uint64_t))v410)(v269, v422);
    uint64_t v234 = v405;
    ((void (*)(char *, uint64_t))v405)(v270, v223);
    uint64_t v235 = v416;
    ((void (*)(char *, uint64_t))v409)(v271, v416);
    ((void (*)(char *, uint64_t))v411)(v274, v226);
    v415(v275, v228);
    ((void (*)(char *, uint64_t))v412)(v360, v229);
    ((void (*)(char *, uint64_t))v414)(v333, v231);
    uint64_t v236 = v424;
    ((void (*)(char *, uint64_t))v403)(v357, v424);
    v413(v278, v418);
    v233(v279, v232);
    ((void (*)(char *, uint64_t))v234)(v280, v423);
    ((void (*)(char *, uint64_t))v409)(v281, v235);
    ((void (*)(char *, uint64_t))v411)(v282, v226);
    v237 = v415;
    v415(v283, v420);
    uint64_t v238 = v419;
    ((void (*)(char *, uint64_t))v412)(v361, v419);
    ((void (*)(char *, uint64_t))v414)(v334, v425);
    ((void (*)(char *, uint64_t))v403)(v335, v236);
    uint64_t v239 = v421;
    v240 = v404;
    ((void (*)(char *, uint64_t))v404)(v356, v421);
    ((void (*)(char *, uint64_t))v410)(v286, v422);
    ((void (*)(char *, uint64_t))v405)(v289, v423);
    ((void (*)(char *, uint64_t))v409)(v290, v416);
    ((void (*)(char *, uint64_t))v411)(v291, v417);
    v237(v292, v420);
    uint64_t v241 = v412;
    ((void (*)(char *, uint64_t))v412)(v362, v238);
    uint64_t v242 = v425;
    ((void (*)(char *, uint64_t))v414)(v336, v425);
    v243 = v403;
    ((void (*)(char *, uint64_t))v403)(v337, v424);
    ((void (*)(char *, uint64_t))v240)(v355, v239);
    uint64_t v244 = v418;
    v245 = v413;
    v413(v295, v418);
    ((void (*)(char *, uint64_t))v405)(v296, v423);
    uint64_t v246 = v416;
    v247 = (void (*)(char *, uint64_t))v409;
    ((void (*)(char *, uint64_t))v409)(v297, v416);
    ((void (*)(char *, uint64_t))v411)(v298, v417);
    v415(v301, v420);
    ((void (*)(char *, uint64_t))v241)(v363, v419);
    ((void (*)(char *, uint64_t))v414)(v338, v242);
    ((void (*)(char *, uint64_t))v243)(v339, v424);
    ((void (*)(char *, uint64_t))v404)(v354, v421);
    v245(v304, v244);
    uint64_t v248 = v422;
    ((void (*)(char *, uint64_t))v410)(v305, v422);
    v247(v306, v246);
    uint64_t v249 = v417;
    v250 = v411;
    ((void (*)(char *, uint64_t))v411)(v307, v417);
    v415(v308, v420);
    ((void (*)(char *, uint64_t))v412)(v364, v419);
    v251 = v414;
    ((void (*)(char *, uint64_t))v414)(v340, v425);
    ((void (*)(char *, uint64_t))v243)(v341, v424);
    ((void (*)(char *, uint64_t))v404)(v353, v421);
    v413(v309, v418);
    ((void (*)(char *, uint64_t))v410)(v310, v248);
    v252 = v405;
    ((void (*)(char *, uint64_t))v405)(v311, v423);
    ((void (*)(char *, uint64_t))v250)(v313, v249);
    v415(v314, v420);
    ((void (*)(char *, uint64_t))v412)(v342, v419);
    ((void (*)(char *, uint64_t))v251)(v343, v425);
    uint64_t v253 = v424;
    ((void (*)(char *, uint64_t))v243)(v352, v424);
    uint64_t v254 = v421;
    ((void (*)(char *, uint64_t))v404)(v316, v421);
    v413(v317, v418);
    uint64_t v255 = (void (*)(char *, uint64_t))v410;
    ((void (*)(char *, uint64_t))v410)(v318, v422);
    uint64_t v256 = v423;
    ((void (*)(char *, uint64_t))v252)(v319, v423);
    uint64_t v257 = v416;
    ((void (*)(char *, uint64_t))v409)(v320, v416);
    v415(v321, v420);
    uint64_t v258 = v419;
    ((void (*)(char *, uint64_t))v412)(v365, v419);
    ((void (*)(char *, uint64_t))v414)(v344, v425);
    ((void (*)(char *, uint64_t))v403)(v351, v253);
    v259 = v404;
    ((void (*)(char *, uint64_t))v404)(v322, v254);
    uint64_t v260 = v418;
    v413(v323, v418);
    v255(v324, v422);
    ((void (*)(char *, uint64_t))v405)(v325, v256);
    uint64_t v261 = (void (*)(char *, uint64_t))v409;
    ((void (*)(char *, uint64_t))v409)(v326, v257);
    uint64_t v262 = v417;
    uint64_t v263 = v411;
    ((void (*)(char *, uint64_t))v411)(v327, v417);
    ((void (*)(char *, uint64_t))v412)(v366, v258);
    ((void (*)(char *, uint64_t))v414)(v348, v425);
    ((void (*)(char *, uint64_t))v403)(v349, v424);
    ((void (*)(char *, uint64_t))v259)(v350, v421);
    v413(v345, v260);
    ((void (*)(char *, uint64_t))v410)(v346, v422);
    ((void (*)(char *, uint64_t))v405)(v347, v423);
    v261(v328, v416);
    ((void (*)(char *, uint64_t))v263)(v329, v262);
    return ((uint64_t (*)(char *, uint64_t))v415)(v330, v420);
  }
  return result;
}

uint64_t sub_25874E554@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25874B790(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], (uint64_t)&a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], a1, a2, a3);
}

uint64_t (*Flatten_10.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_25874E65C(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, void *a14)
{
  v412 = a8;
  v411 = a7;
  uint64_t v410 = a6;
  uint64_t v409 = a5;
  v408 = a4;
  v407 = a3;
  v406 = a2;
  v405 = a1;
  uint64_t v15 = a14[4];
  uint64_t v486 = a14[3];
  uint64_t v480 = v15;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v17 = a14[5];
  v475 = (char *)TupleTypeMetadata2;
  uint64_t v477 = v17;
  uint64_t v18 = swift_getTupleTypeMetadata2();
  uint64_t v19 = a14[6];
  v474 = (void (*)(char *, uint64_t))v18;
  uint64_t v476 = v19;
  uint64_t v20 = swift_getTupleTypeMetadata2();
  uint64_t v21 = a14[7];
  v473 = (void (*)(char *, uint64_t))v20;
  uint64_t v478 = v21;
  uint64_t v22 = swift_getTupleTypeMetadata2();
  uint64_t v23 = a14[8];
  v472 = (void (*)(char *, uint64_t))v22;
  uint64_t v485 = v23;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a14[9];
  v471 = (void (*)(char *, uint64_t))v24;
  uint64_t v484 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a14[10];
  v470 = (char *)v26;
  uint64_t v479 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a14[11];
  v469 = (char *)v28;
  uint64_t v483 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a14[12];
  uint64_t v468 = v30;
  uint64_t v482 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v481 = a14[13];
  uint64_t v33 = swift_getTupleTypeMetadata2();
  uint64_t v37 = MEMORY[0x270FA5388](v33, v34, v35, v36);
  v413 = (char *)v300 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = MEMORY[0x270FA5388](v37, v39, v40, v41);
  v415 = (char *)v300 - v43;
  uint64_t v47 = MEMORY[0x270FA5388](v42, v44, v45, v46);
  v414 = (char *)v300 - v48;
  uint64_t v52 = MEMORY[0x270FA5388](v47, v49, v50, v51);
  uint64_t v416 = (char *)v300 - v53;
  uint64_t v57 = MEMORY[0x270FA5388](v52, v54, v55, v56);
  uint64_t v417 = (char *)v300 - v58;
  uint64_t v62 = MEMORY[0x270FA5388](v57, v59, v60, v61);
  uint64_t v418 = (char *)v300 - v63;
  uint64_t v67 = MEMORY[0x270FA5388](v62, v64, v65, v66);
  uint64_t v419 = (char *)v300 - v68;
  uint64_t v72 = MEMORY[0x270FA5388](v67, v69, v70, v71);
  uint64_t v74 = (char *)v300 - v73;
  uint64_t v78 = MEMORY[0x270FA5388](v72, v75, v76, v77);
  uint64_t v420 = (char *)v300 - v79;
  uint64_t v83 = MEMORY[0x270FA5388](v78, v80, v81, v82);
  uint64_t v421 = (char *)v300 - v84;
  uint64_t v88 = MEMORY[0x270FA5388](v83, v85, v86, v87);
  v90 = (char *)v300 - v89;
  MEMORY[0x270FA5388](v88, v91, v92, v93);
  uint64_t v95 = (char *)v300 - v94;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a14[14] + 24))(a12, a13, a14[2]);
  if (!v14)
  {
    v363 = a11;
    uint64_t v356 = a10;
    v383 = a9;
    uint64_t v97 = *((int *)v475 + 12);
    uint64_t v98 = &v95[v97];
    v451 = &v95[v97];
    uint64_t v99 = *((int *)v474 + 12);
    uint64_t v100 = &v95[v99];
    v448 = &v95[v99];
    uint64_t v101 = *((int *)v473 + 12);
    v447 = &v95[v101];
    uint64_t v102 = *((int *)v472 + 12);
    v461 = &v95[v102];
    uint64_t v103 = *((int *)v471 + 12);
    v450 = &v95[v103];
    uint64_t v104 = *((int *)v470 + 12);
    uint64_t v424 = &v95[v104];
    uint64_t v105 = *((int *)v469 + 12);
    v462 = &v95[v105];
    uint64_t v106 = *(int *)(v468 + 48);
    v463 = &v95[v106];
    v446 = (char *)v32;
    uint64_t v107 = *(int *)(v32 + 48);
    v464 = &v95[v107];
    v455 = (char *)v33;
    uint64_t v108 = *(int *)(v33 + 48);
    v465 = &v95[v108];
    uint64_t v109 = v95;
    v449 = v95;
    v401 = &v90[v108];
    v402 = &v90[v107];
    v403 = &v90[v106];
    v404 = &v90[v105];
    v395 = v74;
    v399 = &v90[v104];
    v400 = &v90[v103];
    uint64_t v110 = &v90[v102];
    uint64_t v377 = &v90[v102];
    uint64_t v111 = &v90[v101];
    v378 = &v90[v101];
    uint64_t v112 = &v90[v99];
    v379 = &v90[v99];
    uint64_t v113 = &v90[v97];
    v380 = &v90[v97];
    v467 = *(void **)(v486 - 8);
    v444 = (void (*)(void))v467[2];
    uint64_t v425 = v467 + 2;
    uint64_t v114 = v486;
    uint64_t v381 = 0;
    ((void (*)(char *, char *))v444)(v90, v109);
    v460 = *(void **)(v480 - 8);
    uint64_t v423 = (void (*)(char *, char *))v460[2];
    v443 = v460 + 2;
    v423(v113, v98);
    v459 = *(void **)(v477 - 8);
    uint64_t v115 = (char *)v459[2];
    v441 = v459 + 2;
    v442 = v115;
    ((void (*)(char *, char *))v115)(v112, v100);
    v445 = *(void **)(v476 - 8);
    uint64_t v116 = (void (*)(char *, char *, uint64_t))v445[2];
    v439 = v445 + 2;
    v440 = v116;
    v116(v111, v447, v476);
    v458 = *(void **)(v478 - 8);
    uint64_t v422 = (void (*)(char *, char *, uint64_t))v458[2];
    v438 = v458 + 2;
    v422(v110, v461, v478);
    v457 = *(void **)(v485 - 8);
    uint64_t v117 = (void (*)(char *, char *, uint64_t))v457[2];
    v436 = v457 + 2;
    v437 = v117;
    v117(v400, v450, v485);
    v456 = *(void **)(v484 - 8);
    uint64_t v118 = (void (*)(char *, char *, uint64_t))v456[2];
    v434 = v456 + 2;
    v435 = v118;
    v118(v399, v424, v484);
    v454 = *(void **)(v479 - 8);
    v426 = (void (*)(char *, char *, uint64_t))v454[2];
    v433 = v454 + 2;
    v426(v404, v462, v479);
    v453 = *(void **)(v483 - 8);
    uint64_t v119 = (void (*)(char *, char *, uint64_t))v453[2];
    v431 = v453 + 2;
    v432 = v119;
    v119(v403, v463, v483);
    v452 = *(void **)(v482 - 8);
    v120 = (void (*)(char *, char *, uint64_t))v452[2];
    v429 = v452 + 2;
    v430 = v120;
    v120(v402, v464, v482);
    v466 = *(void **)(v481 - 8);
    uint64_t v121 = (void (*)(char *, char *, uint64_t))v466[2];
    v427 = v466 + 2;
    v428 = v121;
    v121(v401, v465, v481);
    uint64_t v122 = (void (*)(char *, char *, uint64_t))v467[4];
    v348 = v467 + 4;
    v349 = v122;
    v122(v405, v90, v114);
    v398 = &v421[*((int *)v455 + 12)];
    v405 = &v421[*((int *)v446 + 12)];
    uint64_t v370 = &v421[*(int *)(v468 + 48)];
    v123 = v370;
    uint64_t v371 = &v421[*((int *)v469 + 12)];
    uint64_t v124 = v371;
    uint64_t v372 = &v421[*((int *)v470 + 12)];
    uint64_t v125 = v372;
    uint64_t v373 = &v421[*((int *)v471 + 12)];
    uint64_t v126 = v373;
    uint64_t v374 = &v421[*((int *)v472 + 12)];
    uint64_t v127 = v374;
    uint64_t v375 = &v421[*((int *)v473 + 12)];
    uint64_t v128 = v375;
    uint64_t v376 = &v421[*((int *)v474 + 12)];
    v129 = v376;
    v397 = &v421[*((int *)v475 + 12)];
    uint64_t v130 = v397;
    v444();
    uint64_t v131 = v480;
    ((void (*)(char *, char *, uint64_t))v423)(v130, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v129, v448, v477);
    v440(v128, v447, v476);
    uint64_t v132 = v478;
    v422(v127, v461, v478);
    v437(v126, v450, v485);
    v435(v125, v424, v484);
    v426(v124, v462, v479);
    v432(v123, v463, v483);
    v430(v405, v464, v482);
    v428(v398, v465, v481);
    uint64_t v133 = (void (*)(char *, char *, uint64_t))v460[4];
    v340 = v460 + 4;
    v341 = v133;
    v133(v406, v397, v131);
    v396 = &v420[*((int *)v455 + 12)];
    v397 = &v420[*((int *)v446 + 12)];
    v406 = &v420[*(int *)(v468 + 48)];
    v364 = &v420[*((int *)v469 + 12)];
    uint64_t v134 = v364;
    v365 = &v420[*((int *)v470 + 12)];
    uint64_t v135 = v365;
    v366 = &v420[*((int *)v471 + 12)];
    uint64_t v136 = v366;
    v367 = &v420[*((int *)v472 + 12)];
    uint64_t v137 = v367;
    v368 = &v420[*((int *)v473 + 12)];
    v138 = v368;
    uint64_t v139 = &v420[*((int *)v474 + 12)];
    uint64_t v369 = &v420[*((int *)v475 + 12)];
    uint64_t v140 = v369;
    v444();
    uint64_t v141 = v140;
    v142 = (void (*)(char *, char *, uint64_t))v423;
    ((void (*)(char *, char *, uint64_t))v423)(v141, v451, v131);
    uint64_t v143 = v139;
    uint64_t v144 = v139;
    uint64_t v145 = v477;
    ((void (*)(char *, char *))v442)(v143, v448);
    v440(v138, v447, v476);
    v422(v137, v461, v132);
    v437(v136, v450, v485);
    v435(v135, v424, v484);
    v426(v134, v462, v479);
    v432(v406, v463, v483);
    v430(v397, v464, v482);
    v428(v396, v465, v481);
    uint64_t v146 = (void (*)(char *, char *, uint64_t))v459[4];
    v337 = v459 + 4;
    v338 = v146;
    v146(v407, v144, v145);
    v393 = &v395[*((int *)v455 + 12)];
    v394 = &v395[*((int *)v446 + 12)];
    v407 = &v395[*(int *)(v468 + 48)];
    v357 = &v395[*((int *)v469 + 12)];
    uint64_t v147 = v357;
    v358 = &v395[*((int *)v470 + 12)];
    v148 = v358;
    v359 = &v395[*((int *)v471 + 12)];
    uint64_t v149 = v359;
    v360 = &v395[*((int *)v472 + 12)];
    uint64_t v150 = v360;
    uint64_t v151 = &v395[*((int *)v473 + 12)];
    v361 = &v395[*((int *)v474 + 12)];
    uint64_t v152 = v361;
    v362 = &v395[*((int *)v475 + 12)];
    v153 = v362;
    v444();
    v142(v153, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v152, v448, v145);
    uint64_t v154 = v476;
    v440(v151, v447, v476);
    v422(v150, v461, v478);
    v437(v149, v450, v485);
    v435(v148, v424, v484);
    v426(v147, v462, v479);
    v432(v407, v463, v483);
    v430(v394, v464, v482);
    uint64_t v155 = v481;
    v428(v393, v465, v481);
    uint64_t v156 = (void (*)(char *, char *, uint64_t))v445[4];
    v330 = v445 + 4;
    uint64_t v331 = v156;
    v156(v408, v151, v154);
    v391 = &v419[*((int *)v455 + 12)];
    v392 = &v419[*((int *)v446 + 12)];
    v408 = &v419[*(int *)(v468 + 48)];
    v350 = &v419[*((int *)v469 + 12)];
    uint64_t v157 = v350;
    v351 = &v419[*((int *)v470 + 12)];
    uint64_t v158 = v351;
    v352 = &v419[*((int *)v471 + 12)];
    uint64_t v159 = v352;
    uint64_t v160 = &v419[*((int *)v472 + 12)];
    v353 = &v419[*((int *)v473 + 12)];
    uint64_t v161 = v353;
    v354 = &v419[*((int *)v474 + 12)];
    uint64_t v162 = v354;
    v355 = &v419[*((int *)v475 + 12)];
    uint64_t v163 = v355;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v163, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v162, v448, v477);
    v440(v161, v447, v154);
    uint64_t v164 = v160;
    uint64_t v165 = v478;
    v422(v160, v461, v478);
    v437(v159, v450, v485);
    uint64_t v166 = v424;
    v435(v158, v424, v484);
    v426(v157, v462, v479);
    v432(v408, v463, v483);
    v430(v392, v464, v482);
    v428(v391, v465, v155);
    v167 = (void (*)(char *, char *, uint64_t))v458[4];
    uint64_t v324 = v458 + 4;
    uint64_t v325 = v167;
    v167(v409, v164, v165);
    v389 = &v418[*((int *)v455 + 12)];
    v390 = &v418[*((int *)v446 + 12)];
    uint64_t v409 = &v418[*(int *)(v468 + 48)];
    v342 = &v418[*((int *)v469 + 12)];
    uint64_t v168 = v342;
    v343 = &v418[*((int *)v470 + 12)];
    uint64_t v169 = v343;
    uint64_t v170 = &v418[*((int *)v471 + 12)];
    v344 = &v418[*((int *)v472 + 12)];
    uint64_t v171 = v344;
    v345 = &v418[*((int *)v473 + 12)];
    uint64_t v172 = v345;
    v346 = &v418[*((int *)v474 + 12)];
    v173 = v346;
    v347 = &v418[*((int *)v475 + 12)];
    uint64_t v174 = v347;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v174, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v173, v448, v477);
    uint64_t v175 = v172;
    uint64_t v176 = v447;
    v440(v175, v447, v476);
    uint64_t v177 = v165;
    v178 = v422;
    v422(v171, v461, v177);
    uint64_t v179 = v485;
    v437(v170, v450, v485);
    v435(v169, v166, v484);
    v426(v168, v462, v479);
    v432(v409, v463, v483);
    v430(v390, v464, v482);
    v428(v389, v465, v481);
    v180 = (void (*)(char *, char *, uint64_t))v457[4];
    uint64_t v320 = v457 + 4;
    uint64_t v321 = v180;
    v180(v410, v170, v179);
    v387 = &v417[*((int *)v455 + 12)];
    v388 = &v417[*((int *)v446 + 12)];
    uint64_t v410 = &v417[*(int *)(v468 + 48)];
    v332 = &v417[*((int *)v469 + 12)];
    v181 = v332;
    v386 = &v417[*((int *)v470 + 12)];
    v333 = &v417[*((int *)v471 + 12)];
    uint64_t v182 = v333;
    v334 = &v417[*((int *)v472 + 12)];
    v183 = v334;
    v335 = &v417[*((int *)v473 + 12)];
    uint64_t v184 = v335;
    v336 = &v417[*((int *)v474 + 12)];
    uint64_t v185 = v336;
    v339 = &v417[*((int *)v475 + 12)];
    uint64_t v186 = v339;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v186, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v185, v448, v477);
    uint64_t v187 = v476;
    v440(v184, v176, v476);
    v178(v183, v461, v478);
    uint64_t v188 = v182;
    uint64_t v189 = v450;
    v437(v188, v450, v179);
    uint64_t v190 = v386;
    uint64_t v191 = v424;
    uint64_t v192 = v484;
    v435(v386, v424, v484);
    v426(v181, v462, v479);
    v432(v410, v463, v483);
    v430(v388, v464, v482);
    v428(v387, v465, v481);
    uint64_t v193 = (void (*)(char *, char *, uint64_t))v456[4];
    v311 = v456 + 4;
    uint64_t v312 = v193;
    v193(v411, v190, v192);
    v385 = &v416[*((int *)v455 + 12)];
    v386 = &v416[*((int *)v446 + 12)];
    v411 = &v416[*(int *)(v468 + 48)];
    v384 = &v416[*((int *)v469 + 12)];
    uint64_t v322 = &v416[*((int *)v470 + 12)];
    uint64_t v194 = v322;
    uint64_t v323 = &v416[*((int *)v471 + 12)];
    v195 = v323;
    v326 = &v416[*((int *)v472 + 12)];
    uint64_t v196 = v326;
    v327 = &v416[*((int *)v473 + 12)];
    v197 = v327;
    v328 = &v416[*((int *)v474 + 12)];
    uint64_t v198 = v328;
    v329 = &v416[*((int *)v475 + 12)];
    uint64_t v199 = v329;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v199, v451, v480);
    uint64_t v200 = v198;
    uint64_t v201 = v477;
    ((void (*)(char *, char *, uint64_t))v442)(v200, v448, v477);
    v440(v197, v447, v187);
    v422(v196, v461, v478);
    v437(v195, v189, v485);
    v435(v194, v191, v484);
    uint64_t v202 = v384;
    uint64_t v203 = v479;
    v426(v384, v462, v479);
    v432(v411, v463, v483);
    v430(v386, v464, v482);
    v428(v385, v465, v481);
    uint64_t v204 = (void (*)(char *, char *, uint64_t))v454[4];
    v307 = v454 + 4;
    v308 = v204;
    v204(v412, v202, v203);
    v384 = &v414[*((int *)v455 + 12)];
    v412 = &v414[*((int *)v446 + 12)];
    v382 = &v414[*(int *)(v468 + 48)];
    v313 = &v414[*((int *)v469 + 12)];
    v205 = v313;
    v314 = &v414[*((int *)v470 + 12)];
    uint64_t v206 = v314;
    v315 = &v414[*((int *)v471 + 12)];
    v207 = v315;
    uint64_t v316 = &v414[*((int *)v472 + 12)];
    uint64_t v208 = v316;
    v317 = &v414[*((int *)v473 + 12)];
    uint64_t v209 = v317;
    uint64_t v318 = &v414[*((int *)v474 + 12)];
    uint64_t v210 = v318;
    uint64_t v319 = &v414[*((int *)v475 + 12)];
    uint64_t v211 = v319;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v211, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v210, v448, v201);
    v440(v209, v447, v476);
    v422(v208, v461, v478);
    v437(v207, v450, v485);
    uint64_t v212 = v206;
    uint64_t v213 = v484;
    v435(v212, v424, v484);
    v426(v205, v462, v203);
    uint64_t v214 = v382;
    uint64_t v215 = v483;
    v432(v382, v463, v483);
    v430(v412, v464, v482);
    v428(v384, v465, v481);
    v216 = (void (*)(char *, char *, uint64_t))v453[4];
    v300[1] = v453 + 4;
    v301 = v216;
    v216(v383, v214, v215);
    v382 = &v415[*((int *)v455 + 12)];
    v300[0] = &v415[*((int *)v446 + 12)];
    uint64_t v217 = v468;
    v383 = &v415[*(int *)(v468 + 48)];
    v302 = &v415[*((int *)v469 + 12)];
    uint64_t v218 = v302;
    v303 = &v415[*((int *)v470 + 12)];
    uint64_t v219 = v303;
    v304 = &v415[*((int *)v471 + 12)];
    v220 = v304;
    v305 = &v415[*((int *)v472 + 12)];
    uint64_t v221 = v305;
    v306 = &v415[*((int *)v473 + 12)];
    uint64_t v222 = v306;
    v309 = &v415[*((int *)v474 + 12)];
    uint64_t v223 = v309;
    v310 = &v415[*((int *)v475 + 12)];
    uint64_t v224 = v310;
    v444();
    ((void (*)(char *, char *, uint64_t))v423)(v224, v451, v480);
    ((void (*)(char *, char *, uint64_t))v442)(v223, v448, v477);
    v440(v222, v447, v476);
    v422(v221, v461, v478);
    v437(v220, v450, v485);
    v435(v219, v424, v213);
    v426(v218, v462, v479);
    v432(v383, v463, v483);
    uint64_t v225 = v300[0];
    uint64_t v226 = v482;
    v430((char *)v300[0], v464, v482);
    v428(v382, v465, v481);
    uint64_t v227 = (void (*)(void))v452[4];
    v443 = v452 + 4;
    v444 = v227;
    ((void (*)(uint64_t, uint64_t, uint64_t))v227)(v356, v225, v226);
    uint64_t v228 = v413;
    v455 = &v413[*((int *)v455 + 12)];
    uint64_t v229 = &v413[*((int *)v446 + 12)];
    v446 = &v413[*(int *)(v217 + 48)];
    v442 = &v413[*((int *)v469 + 12)];
    uint64_t v230 = v442;
    uint64_t v232 = &v413[*((int *)v471 + 12)];
    v470 = &v413[*((int *)v470 + 12)];
    uint64_t v231 = v470;
    v471 = (void (*)(char *, uint64_t))v232;
    uint64_t v233 = &v413[*((int *)v472 + 12)];
    v469 = &v413[*((int *)v473 + 12)];
    uint64_t v234 = v469;
    uint64_t v235 = &v413[*((int *)v474 + 12)];
    v472 = (void (*)(char *, uint64_t))v233;
    v473 = (void (*)(char *, uint64_t))v235;
    v475 = &v413[*((int *)v475 + 12)];
    uint64_t v236 = v475;
    v349(v413, v449, v486);
    v341(v236, v451, v480);
    v338(v235, v448, v477);
    v331(v234, v447, v476);
    v325(v233, v461, v478);
    v321(v232, v450, v485);
    v312(v231, v424, v484);
    v308(v230, v462, v479);
    v237 = v446;
    uint64_t v238 = v483;
    v301(v446, v463, v483);
    uint64_t v239 = v482;
    ((void (*)(char *, char *, uint64_t))v444)(v229, v464, v482);
    v240 = (void (*)(char *, char *, uint64_t))v466[4];
    uint64_t v241 = v455;
    uint64_t v242 = v481;
    v240(v455, v465, v481);
    v240(v363, v241, v242);
    v243 = (char *)v452[1];
    ++v452;
    v463 = v243;
    ((void (*)(char *, uint64_t))v243)(v229, v239);
    uint64_t v468 = v453[1];
    ++v453;
    ((void (*)(char *, uint64_t))v468)(v237, v238);
    uint64_t v244 = (int *)v454[1];
    ++v454;
    v474 = (void (*)(char *, uint64_t))v244;
    ((void (*)(char *, uint64_t))v244)(v442, v479);
    uint64_t v246 = v456 + 1;
    v245 = (char *)v456[1];
    ((void (*)(char *, uint64_t))v245)(v470, v484);
    v464 = v245;
    v456 = v246;
    v247 = (char *)v457[1];
    ++v457;
    ((void (*)(void, uint64_t))v247)(v471, v485);
    v470 = v247;
    uint64_t v248 = (int *)v458[1];
    ++v458;
    v471 = (void (*)(char *, uint64_t))v248;
    ((void (*)(void, uint64_t))v248)(v472, v478);
    uint64_t v249 = (int *)v445[1];
    ++v445;
    v472 = (void (*)(char *, uint64_t))v249;
    uint64_t v250 = v476;
    ((void (*)(char *, uint64_t))v249)(v469, v476);
    v469 = (char *)v459[1];
    ++v459;
    uint64_t v251 = v477;
    ((void (*)(void, uint64_t))v469)(v473, v477);
    v252 = (char *)v460[1];
    ++v460;
    v465 = v252;
    ((void (*)(char *, uint64_t))v252)(v475, v480);
    v475 = (char *)v467[1];
    ++v467;
    uint64_t v253 = v486;
    ((void (*)(char *, uint64_t))v475)(v228, v486);
    uint64_t v254 = (int *)v466[1];
    ++v466;
    v473 = (void (*)(char *, uint64_t))v254;
    ((void (*)(char *, uint64_t))v254)(v382, v481);
    ((void (*)(char *, uint64_t))v468)(v383, v483);
    uint64_t v255 = v479;
    v474(v302, v479);
    uint64_t v256 = v484;
    ((void (*)(char *, uint64_t))v245)(v303, v484);
    uint64_t v257 = v485;
    ((void (*)(char *, uint64_t))v247)(v304, v485);
    uint64_t v258 = v478;
    v259 = v471;
    v471(v305, v478);
    v472(v306, v250);
    ((void (*)(char *, uint64_t))v469)(v309, v251);
    ((void (*)(char *, uint64_t))v465)(v310, v480);
    uint64_t v260 = v253;
    uint64_t v261 = v475;
    ((void (*)(char *, uint64_t))v475)(v415, v260);
    v473(v384, v481);
    ((void (*)(char *, uint64_t))v463)(v412, v482);
    v474(v313, v255);
    ((void (*)(char *, uint64_t))v464)(v314, v256);
    ((void (*)(char *, uint64_t))v470)(v315, v257);
    v259(v316, v258);
    v472(v317, v250);
    uint64_t v262 = v477;
    ((void (*)(char *, uint64_t))v469)(v318, v477);
    uint64_t v263 = v480;
    uint64_t v264 = v465;
    ((void (*)(char *, uint64_t))v465)(v319, v480);
    ((void (*)(char *, uint64_t))v261)(v414, v486);
    uint64_t v265 = v481;
    v473(v385, v481);
    uint64_t v266 = v482;
    uint64_t v267 = v463;
    ((void (*)(char *, uint64_t))v463)(v386, v482);
    uint64_t v268 = v483;
    ((void (*)(char *, uint64_t))v468)(v411, v483);
    ((void (*)(char *, uint64_t))v464)(v322, v484);
    ((void (*)(char *, uint64_t))v470)(v323, v485);
    v471(v326, v478);
    v472(v327, v476);
    uint64_t v269 = v262;
    v270 = v469;
    ((void (*)(char *, uint64_t))v469)(v328, v269);
    ((void (*)(char *, uint64_t))v264)(v329, v263);
    uint64_t v271 = v486;
    ((void (*)(char *, uint64_t))v475)(v416, v486);
    v473(v387, v265);
    ((void (*)(char *, uint64_t))v267)(v388, v266);
    v272 = (void (*)(char *, uint64_t))v468;
    ((void (*)(char *, uint64_t))v468)(v410, v268);
    uint64_t v273 = v479;
    v274 = v474;
    v474(v332, v479);
    ((void (*)(char *, uint64_t))v470)(v333, v485);
    uint64_t v275 = v478;
    v471(v334, v478);
    v472(v335, v476);
    ((void (*)(char *, uint64_t))v270)(v336, v477);
    ((void (*)(char *, uint64_t))v465)(v339, v480);
    ((void (*)(char *, uint64_t))v475)(v417, v271);
    v473(v389, v481);
    v276 = v463;
    ((void (*)(char *, uint64_t))v463)(v390, v482);
    v272(v409, v483);
    v274(v342, v273);
    uint64_t v277 = v484;
    v278 = v464;
    ((void (*)(char *, uint64_t))v464)(v343, v484);
    v471(v344, v275);
    uint64_t v279 = v472;
    v472(v345, v476);
    ((void (*)(char *, uint64_t))v469)(v346, v477);
    ((void (*)(char *, uint64_t))v465)(v347, v480);
    ((void (*)(char *, uint64_t))v475)(v418, v486);
    v280 = v473;
    v473(v391, v481);
    ((void (*)(char *, uint64_t))v276)(v392, v482);
    ((void (*)(char *, uint64_t))v468)(v408, v483);
    v474(v350, v479);
    ((void (*)(char *, uint64_t))v278)(v351, v277);
    uint64_t v281 = v485;
    v282 = v470;
    ((void (*)(char *, uint64_t))v470)(v352, v485);
    v279(v353, v476);
    ((void (*)(char *, uint64_t))v469)(v354, v477);
    ((void (*)(char *, uint64_t))v465)(v355, v480);
    ((void (*)(char *, uint64_t))v475)(v419, v486);
    v280(v393, v481);
    ((void (*)(char *, uint64_t))v463)(v394, v482);
    ((void (*)(char *, uint64_t))v468)(v407, v483);
    v474(v357, v479);
    ((void (*)(char *, uint64_t))v278)(v358, v484);
    ((void (*)(char *, uint64_t))v282)(v359, v281);
    uint64_t v283 = v478;
    v284 = v471;
    v471(v360, v478);
    ((void (*)(char *, uint64_t))v469)(v361, v477);
    uint64_t v285 = v480;
    v286 = v465;
    ((void (*)(char *, uint64_t))v465)(v362, v480);
    ((void (*)(char *, uint64_t))v475)(v395, v486);
    uint64_t v287 = v481;
    v473(v396, v481);
    uint64_t v288 = v482;
    ((void (*)(char *, uint64_t))v463)(v397, v482);
    uint64_t v289 = v483;
    ((void (*)(char *, uint64_t))v468)(v406, v483);
    v474(v364, v479);
    ((void (*)(char *, uint64_t))v464)(v365, v484);
    ((void (*)(char *, uint64_t))v470)(v366, v485);
    v284(v367, v283);
    uint64_t v290 = v476;
    v291 = v472;
    v472(v368, v476);
    ((void (*)(char *, uint64_t))v286)(v369, v285);
    ((void (*)(char *, uint64_t))v475)(v420, v486);
    v473(v398, v287);
    uint64_t v292 = v288;
    v293 = v463;
    ((void (*)(char *, uint64_t))v463)(v405, v292);
    uint64_t v294 = v289;
    v295 = (void (*)(char *, uint64_t))v468;
    ((void (*)(char *, uint64_t))v468)(v370, v294);
    uint64_t v296 = v479;
    v474(v371, v479);
    ((void (*)(char *, uint64_t))v464)(v372, v484);
    ((void (*)(char *, uint64_t))v470)(v373, v485);
    v471(v374, v478);
    uint64_t v297 = v290;
    v291(v375, v290);
    uint64_t v298 = v477;
    v299 = v469;
    ((void (*)(char *, uint64_t))v469)(v376, v477);
    ((void (*)(char *, uint64_t))v475)(v421, v486);
    v473(v401, v481);
    ((void (*)(char *, uint64_t))v293)(v402, v482);
    v295(v403, v483);
    v474(v404, v296);
    ((void (*)(char *, uint64_t))v464)(v399, v484);
    ((void (*)(char *, uint64_t))v470)(v400, v485);
    v471(v377, v478);
    v472(v378, v297);
    ((void (*)(char *, uint64_t))v299)(v379, v298);
    return ((uint64_t (*)(char *, uint64_t))v465)(v380, v480);
  }
  return result;
}

uint64_t sub_258751D5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25874E65C(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], (uint64_t)&a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], a1, a2, a3);
}

uint64_t (*Flatten_11.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258751E74(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, uint64_t a11, char *a12, uint64_t a13, uint64_t a14, void *a15)
{
  v456 = a8;
  v452 = a7;
  v455 = a6;
  v454 = a5;
  v453 = a4;
  v451 = a3;
  v450 = a2;
  uint64_t v17 = a15[4];
  uint64_t v528 = a15[3];
  uint64_t v536 = v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = a15[5];
  v525 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v527 = v19;
  uint64_t v20 = swift_getTupleTypeMetadata2();
  uint64_t v21 = a15[6];
  v524 = (char *)v20;
  uint64_t v535 = v21;
  uint64_t v22 = swift_getTupleTypeMetadata2();
  uint64_t v23 = a15[7];
  v523 = (void (*)(char *, uint64_t))v22;
  uint64_t v534 = v23;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a15[8];
  v522 = (void (*)(char *, uint64_t))v24;
  uint64_t v533 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a15[9];
  v521 = (char *)v26;
  uint64_t v532 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a15[10];
  v520 = (char *)v28;
  uint64_t v537 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a15[11];
  v519 = (char *)v30;
  uint64_t v526 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v33 = a15[12];
  v518 = (char *)v32;
  uint64_t v531 = v33;
  uint64_t v34 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a15[13];
  v517 = (void (*)(char *, uint64_t))v34;
  uint64_t v530 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a15[14];
  v516 = (char *)v36;
  uint64_t v529 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v42 = MEMORY[0x270FA5388](v38, v39, v40, v41);
  v457 = (char *)&v320 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = MEMORY[0x270FA5388](v42, v44, v45, v46);
  v459 = (char *)&v320 - v48;
  uint64_t v52 = MEMORY[0x270FA5388](v47, v49, v50, v51);
  v460 = (char *)&v320 - v53;
  uint64_t v57 = MEMORY[0x270FA5388](v52, v54, v55, v56);
  v458 = (char *)&v320 - v58;
  uint64_t v62 = MEMORY[0x270FA5388](v57, v59, v60, v61);
  v461 = (char *)&v320 - v63;
  uint64_t v67 = MEMORY[0x270FA5388](v62, v64, v65, v66);
  v462 = (char *)&v320 - v68;
  uint64_t v72 = MEMORY[0x270FA5388](v67, v69, v70, v71);
  v463 = (char *)&v320 - v73;
  uint64_t v77 = MEMORY[0x270FA5388](v72, v74, v75, v76);
  v464 = (char *)&v320 - v78;
  uint64_t v82 = MEMORY[0x270FA5388](v77, v79, v80, v81);
  uint64_t v84 = (char *)&v320 - v83;
  uint64_t v88 = MEMORY[0x270FA5388](v82, v85, v86, v87);
  v465 = (char *)&v320 - v89;
  uint64_t v93 = MEMORY[0x270FA5388](v88, v90, v91, v92);
  v466 = (char *)&v320 - v94;
  uint64_t v98 = MEMORY[0x270FA5388](v93, v95, v96, v97);
  uint64_t v100 = (char *)&v320 - v99;
  MEMORY[0x270FA5388](v98, v101, v102, v103);
  uint64_t v105 = (char *)&v320 - v104;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a15[15] + 24))(a13, a14, a15[2]);
  if (!v15)
  {
    v397 = a12;
    uint64_t v393 = a11;
    uint64_t v423 = a10;
    uint64_t v425 = a9;
    uint64_t v107 = *((int *)v525 + 12);
    v443 = a1;
    uint64_t v108 = &v105[v107];
    v494 = &v105[v107];
    uint64_t v109 = *((int *)v524 + 12);
    uint64_t v110 = &v105[v109];
    v495 = &v105[v109];
    uint64_t v111 = *((int *)v523 + 12);
    v506 = &v105[v111];
    uint64_t v112 = *((int *)v522 + 12);
    v493 = &v105[v112];
    uint64_t v113 = *((int *)v521 + 12);
    v510 = &v105[v113];
    uint64_t v114 = *((int *)v520 + 12);
    v511 = &v105[v114];
    uint64_t v115 = *((int *)v519 + 12);
    v512 = &v105[v115];
    uint64_t v116 = *((int *)v518 + 12);
    v507 = &v105[v116];
    uint64_t v117 = *((int *)v517 + 12);
    v508 = &v105[v117];
    uint64_t v118 = *((int *)v516 + 12);
    v509 = &v105[v118];
    uint64_t v421 = 0;
    v497 = (char *)v38;
    uint64_t v119 = *(int *)(v38 + 48);
    v513 = &v105[v119];
    v120 = v105;
    v496 = v105;
    v445 = &v100[v119];
    v446 = &v100[v118];
    v447 = &v100[v117];
    v448 = &v100[v116];
    v449 = &v100[v115];
    v438 = v84;
    v444 = &v100[v114];
    uint64_t v121 = &v100[v113];
    uint64_t v416 = &v100[v113];
    uint64_t v122 = &v100[v112];
    uint64_t v417 = &v100[v112];
    v123 = &v100[v111];
    uint64_t v418 = &v100[v111];
    uint64_t v124 = &v100[v109];
    uint64_t v419 = &v100[v109];
    uint64_t v125 = &v100[v107];
    uint64_t v420 = &v100[v107];
    uint64_t v126 = v528;
    v505 = *(void **)(v528 - 8);
    v470 = (void (*)(void))v505[2];
    v471 = v505 + 2;
    ((void (*)(char *, char *, uint64_t))v470)(v100, v120, v528);
    v514 = *(void **)(v536 - 8);
    v469 = (void (*)(char *, char *))v514[2];
    v490 = (char *)(v514 + 2);
    v469(v125, v108);
    v504 = *(void **)(v527 - 8);
    uint64_t v468 = (void (*)(char *, char *))v504[2];
    v489 = (void (*)(uint64_t, char *, uint64_t))(v504 + 2);
    v468(v124, v110);
    v515 = *(void **)(v535 - 8);
    uint64_t v127 = (char *)v515[2];
    v487 = (char *)(v515 + 2);
    v488 = v127;
    ((void (*)(char *, char *, uint64_t))v127)(v123, v506, v535);
    v503 = *(void **)(v534 - 8);
    uint64_t v128 = (char *)v503[2];
    uint64_t v485 = v503 + 2;
    uint64_t v486 = v128;
    ((void (*)(char *, char *, uint64_t))v128)(v122, v493, v534);
    v502 = *(void **)(v533 - 8);
    v129 = (void (*)(char *, char *, uint64_t))v502[2];
    uint64_t v483 = v502 + 2;
    uint64_t v484 = v129;
    v129(v121, v510, v533);
    v501 = *(void **)(v532 - 8);
    uint64_t v130 = (void (*)(char *, char *, uint64_t))v501[2];
    uint64_t v481 = v501 + 2;
    uint64_t v482 = v130;
    v130(v444, v511, v532);
    v492 = *(void **)(v537 - 8);
    v467 = (void (*)(char *, char *, uint64_t))v492[2];
    uint64_t v480 = v492 + 2;
    v467(v449, v512, v537);
    v491 = *(void **)(v526 - 8);
    v472 = (void (*)(char *, char *, uint64_t))v491[2];
    uint64_t v479 = v491 + 2;
    v472(v448, v507, v526);
    v499 = *(void **)(v531 - 8);
    uint64_t v131 = (void (*)(char *, char *, uint64_t))v499[2];
    uint64_t v477 = v499 + 2;
    uint64_t v478 = v131;
    v131(v447, v508, v531);
    v498 = *(void **)(v530 - 8);
    uint64_t v132 = (void (*)(char *, char *, uint64_t))v498[2];
    v475 = v498 + 2;
    uint64_t v476 = v132;
    v132(v446, v509, v530);
    v500 = *(void **)(v529 - 8);
    uint64_t v133 = (void (*)(char *, char *, uint64_t))v500[2];
    v473 = v500 + 2;
    v474 = v133;
    v133(v445, v513, v529);
    uint64_t v134 = (void (*)(char *, char *, uint64_t))v505[4];
    v380 = v505 + 4;
    uint64_t v381 = v134;
    v134(v443, v100, v126);
    v442 = &v466[*((int *)v497 + 12)];
    v443 = &v466[*((int *)v516 + 12)];
    v441 = &v466[*((int *)v517 + 12)];
    uint64_t v409 = &v466[*((int *)v518 + 12)];
    uint64_t v135 = v409;
    uint64_t v410 = &v466[*((int *)v519 + 12)];
    uint64_t v136 = v410;
    v411 = &v466[*((int *)v520 + 12)];
    uint64_t v137 = v411;
    v412 = &v466[*((int *)v521 + 12)];
    v138 = v412;
    v413 = &v466[*((int *)v522 + 12)];
    uint64_t v139 = v413;
    v414 = &v466[*((int *)v523 + 12)];
    uint64_t v140 = v414;
    v415 = &v466[*((int *)v524 + 12)];
    uint64_t v141 = v415;
    v142 = &v466[*((int *)v525 + 12)];
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v142, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v141, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v140, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v139, v493, v534);
    v484(v138, v510, v533);
    v482(v137, v511, v532);
    v467(v136, v512, v537);
    v472(v135, v507, v526);
    v478(v441, v508, v531);
    v476(v443, v509, v530);
    v474(v442, v513, v529);
    uint64_t v143 = (void (*)(char *, char *, uint64_t))v514[4];
    uint64_t v375 = v514 + 4;
    uint64_t v376 = v143;
    uint64_t v144 = v142;
    uint64_t v145 = v536;
    v143(v450, v144, v536);
    v440 = &v465[*((int *)v497 + 12)];
    v450 = &v465[*((int *)v516 + 12)];
    v439 = &v465[*((int *)v517 + 12)];
    v402 = &v465[*((int *)v518 + 12)];
    uint64_t v146 = v402;
    v403 = &v465[*((int *)v519 + 12)];
    uint64_t v147 = v403;
    v404 = &v465[*((int *)v520 + 12)];
    v148 = v404;
    v405 = &v465[*((int *)v521 + 12)];
    uint64_t v149 = v405;
    v406 = &v465[*((int *)v522 + 12)];
    uint64_t v150 = v406;
    v407 = &v465[*((int *)v523 + 12)];
    uint64_t v151 = v407;
    uint64_t v152 = &v465[*((int *)v524 + 12)];
    v408 = &v465[*((int *)v525 + 12)];
    v153 = v408;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v153, v494, v145);
    uint64_t v154 = v527;
    ((void (*)(char *, char *, uint64_t))v468)(v152, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v151, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v150, v493, v534);
    v484(v149, v510, v533);
    v482(v148, v511, v532);
    v467(v147, v512, v537);
    v472(v146, v507, v526);
    v478(v439, v508, v531);
    v476(v450, v509, v530);
    v474(v440, v513, v529);
    uint64_t v155 = (void (*)(char *, char *, uint64_t))v504[4];
    v366 = v504 + 4;
    v368 = v155;
    v155(v451, v152, v154);
    v437 = &v438[*((int *)v497 + 12)];
    v451 = &v438[*((int *)v516 + 12)];
    v436 = &v438[*((int *)v517 + 12)];
    v394 = &v438[*((int *)v518 + 12)];
    uint64_t v156 = v394;
    v395 = &v438[*((int *)v519 + 12)];
    uint64_t v157 = v395;
    v396 = &v438[*((int *)v520 + 12)];
    uint64_t v158 = v396;
    v398 = &v438[*((int *)v521 + 12)];
    uint64_t v159 = v398;
    v399 = &v438[*((int *)v522 + 12)];
    uint64_t v160 = v399;
    uint64_t v161 = &v438[*((int *)v523 + 12)];
    v400 = &v438[*((int *)v524 + 12)];
    uint64_t v162 = v400;
    v401 = &v438[*((int *)v525 + 12)];
    uint64_t v163 = v401;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v163, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v162, v495, v154);
    uint64_t v164 = v535;
    ((void (*)(char *, char *, uint64_t))v488)(v161, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v160, v493, v534);
    v484(v159, v510, v533);
    v482(v158, v511, v532);
    v467(v157, v512, v537);
    v472(v156, v507, v526);
    v478(v436, v508, v531);
    v476(v451, v509, v530);
    v474(v437, v513, v529);
    uint64_t v165 = (void (*)(char *, char *, uint64_t))v515[4];
    v362 = v515 + 4;
    v364 = v165;
    uint64_t v166 = v161;
    uint64_t v167 = v164;
    v165(v453, v166, v164);
    v434 = &v464[*((int *)v497 + 12)];
    v435 = &v464[*((int *)v516 + 12)];
    v453 = &v464[*((int *)v517 + 12)];
    v386 = &v464[*((int *)v518 + 12)];
    uint64_t v168 = v386;
    v387 = &v464[*((int *)v519 + 12)];
    uint64_t v169 = v387;
    v388 = &v464[*((int *)v520 + 12)];
    uint64_t v170 = v388;
    v389 = &v464[*((int *)v521 + 12)];
    uint64_t v171 = v389;
    uint64_t v172 = &v464[*((int *)v522 + 12)];
    v390 = &v464[*((int *)v523 + 12)];
    v173 = v390;
    v391 = &v464[*((int *)v524 + 12)];
    uint64_t v174 = v391;
    v392 = &v464[*((int *)v525 + 12)];
    uint64_t v175 = v392;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v175, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v174, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v173, v506, v167);
    uint64_t v176 = v534;
    ((void (*)(char *, char *, uint64_t))v486)(v172, v493, v534);
    v484(v171, v510, v533);
    v482(v170, v511, v532);
    v467(v169, v512, v537);
    v472(v168, v507, v526);
    v478(v453, v508, v531);
    v476(v435, v509, v530);
    v474(v434, v513, v529);
    uint64_t v177 = (void (*)(char *, char *, uint64_t))v503[4];
    v355 = v503 + 4;
    uint64_t v356 = v177;
    v177(v454, v172, v176);
    v432 = &v463[*((int *)v497 + 12)];
    v433 = &v463[*((int *)v516 + 12)];
    v454 = &v463[*((int *)v517 + 12)];
    uint64_t v377 = &v463[*((int *)v518 + 12)];
    v178 = v377;
    v378 = &v463[*((int *)v519 + 12)];
    uint64_t v179 = v378;
    v379 = &v463[*((int *)v520 + 12)];
    v180 = v379;
    v181 = &v463[*((int *)v521 + 12)];
    v382 = &v463[*((int *)v522 + 12)];
    uint64_t v182 = v382;
    v383 = &v463[*((int *)v523 + 12)];
    v183 = v383;
    v384 = &v463[*((int *)v524 + 12)];
    uint64_t v184 = v384;
    v385 = &v463[*((int *)v525 + 12)];
    uint64_t v185 = v385;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v185, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v184, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v183, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v182, v493, v176);
    uint64_t v186 = v533;
    v484(v181, v510, v533);
    v482(v180, v511, v532);
    v467(v179, v512, v537);
    uint64_t v187 = v178;
    uint64_t v188 = v526;
    v472(v187, v507, v526);
    v478(v454, v508, v531);
    v476(v433, v509, v530);
    v474(v432, v513, v529);
    uint64_t v189 = (void (*)(char *, char *, uint64_t))v502[4];
    v348 = v502 + 4;
    v349 = v189;
    v189(v455, v181, v186);
    v430 = &v462[*((int *)v497 + 12)];
    v431 = &v462[*((int *)v516 + 12)];
    v455 = &v462[*((int *)v517 + 12)];
    v367 = &v462[*((int *)v518 + 12)];
    uint64_t v190 = v367;
    uint64_t v369 = &v462[*((int *)v519 + 12)];
    uint64_t v191 = v369;
    v429 = &v462[*((int *)v520 + 12)];
    uint64_t v370 = &v462[*((int *)v521 + 12)];
    uint64_t v192 = v370;
    uint64_t v371 = &v462[*((int *)v522 + 12)];
    uint64_t v193 = v371;
    uint64_t v372 = &v462[*((int *)v523 + 12)];
    uint64_t v194 = v372;
    uint64_t v373 = &v462[*((int *)v524 + 12)];
    v195 = v373;
    uint64_t v374 = &v462[*((int *)v525 + 12)];
    uint64_t v196 = v374;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v196, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v195, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v194, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v193, v493, v534);
    v484(v192, v510, v186);
    v197 = v429;
    uint64_t v198 = v532;
    v482(v429, v511, v532);
    uint64_t v199 = v467;
    v467(v191, v512, v537);
    v472(v190, v507, v188);
    v478(v455, v508, v531);
    v476(v431, v509, v530);
    v474(v430, v513, v529);
    uint64_t v200 = (void (*)(char *, char *, uint64_t))v501[4];
    v344 = v501 + 4;
    v345 = v200;
    uint64_t v201 = v197;
    uint64_t v202 = v198;
    v200(v452, v201, v198);
    v428 = &v461[*((int *)v497 + 12)];
    v429 = &v461[*((int *)v516 + 12)];
    v452 = &v461[*((int *)v517 + 12)];
    v357 = &v461[*((int *)v518 + 12)];
    uint64_t v203 = v357;
    v427 = &v461[*((int *)v519 + 12)];
    v358 = &v461[*((int *)v520 + 12)];
    uint64_t v204 = v358;
    v359 = &v461[*((int *)v521 + 12)];
    v205 = v359;
    v360 = &v461[*((int *)v522 + 12)];
    uint64_t v206 = v360;
    v361 = &v461[*((int *)v523 + 12)];
    v207 = v361;
    v363 = &v461[*((int *)v524 + 12)];
    uint64_t v208 = v363;
    v365 = &v461[*((int *)v525 + 12)];
    uint64_t v209 = v365;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v209, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v208, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v207, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v206, v493, v534);
    v484(v205, v510, v533);
    v482(v204, v511, v202);
    uint64_t v210 = v427;
    uint64_t v211 = v537;
    v199(v427, v512, v537);
    uint64_t v212 = v526;
    v472(v203, v507, v526);
    v478(v452, v508, v531);
    v476(v429, v509, v530);
    v474(v428, v513, v529);
    uint64_t v213 = (void (*)(char *, char *, uint64_t))v492[4];
    v334 = v492 + 4;
    v335 = v213;
    v213(v456, v210, v211);
    v426 = &v458[*((int *)v497 + 12)];
    v427 = &v458[*((int *)v516 + 12)];
    v456 = &v458[*((int *)v517 + 12)];
    uint64_t v214 = &v458[*((int *)v518 + 12)];
    v346 = &v458[*((int *)v519 + 12)];
    uint64_t v215 = v346;
    v347 = &v458[*((int *)v520 + 12)];
    v216 = v347;
    v350 = &v458[*((int *)v521 + 12)];
    uint64_t v217 = v350;
    v351 = &v458[*((int *)v522 + 12)];
    uint64_t v218 = v351;
    v352 = &v458[*((int *)v523 + 12)];
    uint64_t v219 = v352;
    v353 = &v458[*((int *)v524 + 12)];
    v220 = v353;
    v354 = &v458[*((int *)v525 + 12)];
    uint64_t v221 = v354;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v221, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v220, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v219, v506, v535);
    uint64_t v222 = v493;
    ((void (*)(char *, char *, uint64_t))v486)(v218, v493, v534);
    v484(v217, v510, v533);
    v482(v216, v511, v532);
    v467(v215, v512, v537);
    v472(v214, v507, v212);
    v478(v456, v508, v531);
    v476(v427, v509, v530);
    v474(v426, v513, v529);
    uint64_t v223 = (void (*)(char *, char *, uint64_t))v491[4];
    v330 = v491 + 4;
    uint64_t v331 = v223;
    v223(v425, v214, v212);
    uint64_t v424 = &v460[*((int *)v497 + 12)];
    uint64_t v425 = &v460[*((int *)v516 + 12)];
    uint64_t v422 = &v460[*((int *)v517 + 12)];
    v336 = &v460[*((int *)v518 + 12)];
    uint64_t v224 = v336;
    v337 = &v460[*((int *)v519 + 12)];
    uint64_t v225 = v337;
    v338 = &v460[*((int *)v520 + 12)];
    uint64_t v226 = v338;
    v339 = &v460[*((int *)v521 + 12)];
    uint64_t v227 = v339;
    v340 = &v460[*((int *)v522 + 12)];
    uint64_t v228 = v340;
    v341 = &v460[*((int *)v523 + 12)];
    uint64_t v229 = v341;
    v342 = &v460[*((int *)v524 + 12)];
    uint64_t v230 = v342;
    v343 = &v460[*((int *)v525 + 12)];
    uint64_t v231 = v343;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v231, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v230, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v229, v506, v535);
    uint64_t v232 = v222;
    uint64_t v233 = v534;
    ((void (*)(char *, char *, uint64_t))v486)(v228, v232, v534);
    v484(v227, v510, v533);
    v482(v226, v511, v532);
    v467(v225, v512, v537);
    v472(v224, v507, v526);
    uint64_t v234 = v422;
    uint64_t v235 = v531;
    v478(v422, v508, v531);
    v476(v425, v509, v530);
    v474(v424, v513, v529);
    uint64_t v236 = (void (*)(char *, char *, uint64_t))v499[4];
    uint64_t v322 = v499 + 4;
    uint64_t v323 = v236;
    v236(v423, v234, v235);
    uint64_t v422 = &v459[*((int *)v497 + 12)];
    uint64_t v321 = &v459[*((int *)v516 + 12)];
    uint64_t v423 = &v459[*((int *)v517 + 12)];
    uint64_t v324 = &v459[*((int *)v518 + 12)];
    v237 = v324;
    uint64_t v325 = &v459[*((int *)v519 + 12)];
    uint64_t v238 = v325;
    v326 = &v459[*((int *)v520 + 12)];
    uint64_t v239 = v326;
    v327 = &v459[*((int *)v521 + 12)];
    v240 = v327;
    v328 = &v459[*((int *)v522 + 12)];
    uint64_t v241 = v328;
    v329 = &v459[*((int *)v523 + 12)];
    uint64_t v242 = v329;
    v332 = &v459[*((int *)v524 + 12)];
    v243 = v332;
    v333 = &v459[*((int *)v525 + 12)];
    uint64_t v244 = v333;
    v470();
    ((void (*)(char *, char *, uint64_t))v469)(v244, v494, v536);
    ((void (*)(char *, char *, uint64_t))v468)(v243, v495, v527);
    ((void (*)(char *, char *, uint64_t))v488)(v242, v506, v535);
    ((void (*)(char *, char *, uint64_t))v486)(v241, v493, v233);
    v484(v240, v510, v533);
    v482(v239, v511, v532);
    v467(v238, v512, v537);
    v472(v237, v507, v526);
    v478(v423, v508, v531);
    v245 = v321;
    uint64_t v246 = v530;
    v476(v321, v509, v530);
    v474(v422, v513, v529);
    v489 = (void (*)(uint64_t, char *, uint64_t))v498[4];
    v489(v393, v245, v246);
    v247 = v457;
    v490 = &v457[*((int *)v497 + 12)];
    v487 = &v457[*((int *)v516 + 12)];
    v516 = &v457[*((int *)v517 + 12)];
    v518 = &v457[*((int *)v518 + 12)];
    uint64_t v486 = &v457[*((int *)v519 + 12)];
    uint64_t v248 = v486;
    v519 = &v457[*((int *)v520 + 12)];
    uint64_t v249 = v519;
    v488 = &v457[*((int *)v521 + 12)];
    uint64_t v250 = v488;
    v520 = &v457[*((int *)v522 + 12)];
    uint64_t v251 = v520;
    v497 = &v457[*((int *)v523 + 12)];
    v252 = v497;
    v521 = &v457[*((int *)v524 + 12)];
    uint64_t v253 = v521;
    v524 = &v457[*((int *)v525 + 12)];
    uint64_t v254 = v524;
    v381(v457, v496, v528);
    v376(v254, v494, v536);
    v368(v253, v495, v527);
    v364(v252, v506, v535);
    v356(v251, v493, v534);
    v349(v250, v510, v533);
    v345(v249, v511, v532);
    v335(v248, v512, v537);
    uint64_t v255 = v526;
    v331(v518, v507, v526);
    uint64_t v256 = v531;
    v323(v516, v508, v531);
    uint64_t v257 = v487;
    uint64_t v258 = v530;
    v489((uint64_t)v487, v509, v530);
    v259 = (void (*)(char *, char *, uint64_t))v500[4];
    uint64_t v260 = v490;
    uint64_t v261 = v529;
    v259(v490, v513, v529);
    uint64_t v262 = v260;
    uint64_t v263 = v261;
    v259(v397, v262, v261);
    uint64_t v264 = (int *)v498[1];
    ++v498;
    v523 = (void (*)(char *, uint64_t))v264;
    ((void (*)(char *, uint64_t))v264)(v257, v258);
    uint64_t v265 = (int *)v499[1];
    ++v499;
    v517 = (void (*)(char *, uint64_t))v265;
    ((void (*)(char *, uint64_t))v265)(v516, v256);
    uint64_t v266 = (char *)v491[1];
    ++v491;
    v512 = v266;
    ((void (*)(char *, uint64_t))v266)(v518, v255);
    uint64_t v267 = v492 + 1;
    v513 = (char *)v492[1];
    uint64_t v268 = v537;
    ((void (*)(char *, uint64_t))v513)(v486, v537);
    v492 = v267;
    uint64_t v269 = (int *)v501[1];
    ++v501;
    v522 = (void (*)(char *, uint64_t))v269;
    ((void (*)(char *, uint64_t))v269)(v519, v532);
    v270 = (char *)v502[1];
    ++v502;
    v519 = v270;
    ((void (*)(char *, uint64_t))v270)(v488, v533);
    v518 = (char *)v503[1];
    ++v503;
    ((void (*)(char *, uint64_t))v518)(v520, v534);
    v520 = (char *)v515[1];
    ++v515;
    ((void (*)(char *, uint64_t))v520)(v497, v535);
    v516 = (char *)v504[1];
    ++v504;
    uint64_t v271 = v527;
    ((void (*)(char *, uint64_t))v516)(v521, v527);
    v272 = (int *)v514[1];
    ++v514;
    v525 = (void (*)(char *, uint64_t))v272;
    ((void (*)(char *, uint64_t))v272)(v524, v536);
    v521 = (char *)v505[1];
    ++v505;
    uint64_t v273 = v528;
    ((void (*)(char *, uint64_t))v521)(v247, v528);
    v274 = v500 + 1;
    v524 = (char *)v500[1];
    uint64_t v275 = v263;
    ((void (*)(char *, uint64_t))v524)(v422, v263);
    v500 = v274;
    v517(v423, v531);
    v276 = v512;
    ((void (*)(char *, uint64_t))v512)(v324, v255);
    ((void (*)(char *, uint64_t))v513)(v325, v268);
    uint64_t v277 = v532;
    v522(v326, v532);
    ((void (*)(char *, uint64_t))v519)(v327, v533);
    ((void (*)(char *, uint64_t))v518)(v328, v534);
    uint64_t v278 = v535;
    ((void (*)(char *, uint64_t))v520)(v329, v535);
    uint64_t v279 = v516;
    ((void (*)(char *, uint64_t))v516)(v332, v271);
    v525(v333, v536);
    uint64_t v280 = v273;
    uint64_t v281 = v521;
    ((void (*)(char *, uint64_t))v521)(v459, v280);
    ((void (*)(char *, uint64_t))v524)(v424, v275);
    uint64_t v282 = v530;
    v523(v425, v530);
    ((void (*)(char *, uint64_t))v276)(v336, v526);
    uint64_t v283 = v513;
    ((void (*)(char *, uint64_t))v513)(v337, v537);
    v522(v338, v277);
    ((void (*)(char *, uint64_t))v519)(v339, v533);
    ((void (*)(char *, uint64_t))v518)(v340, v534);
    ((void (*)(char *, uint64_t))v520)(v341, v278);
    ((void (*)(char *, uint64_t))v279)(v342, v271);
    uint64_t v284 = v536;
    v525(v343, v536);
    uint64_t v285 = v528;
    ((void (*)(char *, uint64_t))v281)(v460, v528);
    ((void (*)(char *, uint64_t))v524)(v426, v529);
    v523(v427, v282);
    uint64_t v286 = v531;
    uint64_t v287 = v517;
    v517(v456, v531);
    ((void (*)(char *, uint64_t))v283)(v346, v537);
    v522(v347, v532);
    ((void (*)(char *, uint64_t))v519)(v350, v533);
    uint64_t v288 = v534;
    ((void (*)(char *, uint64_t))v518)(v351, v534);
    ((void (*)(char *, uint64_t))v520)(v352, v535);
    ((void (*)(char *, uint64_t))v516)(v353, v527);
    v525(v354, v284);
    ((void (*)(char *, uint64_t))v521)(v458, v285);
    ((void (*)(char *, uint64_t))v524)(v428, v529);
    v523(v429, v530);
    v287(v452, v286);
    uint64_t v289 = v526;
    uint64_t v290 = v512;
    ((void (*)(char *, uint64_t))v512)(v357, v526);
    v522(v358, v532);
    uint64_t v291 = v533;
    uint64_t v292 = v519;
    ((void (*)(char *, uint64_t))v519)(v359, v533);
    v293 = v518;
    ((void (*)(char *, uint64_t))v518)(v360, v288);
    ((void (*)(char *, uint64_t))v520)(v361, v535);
    ((void (*)(char *, uint64_t))v516)(v363, v527);
    uint64_t v294 = v536;
    v525(v365, v536);
    ((void (*)(char *, uint64_t))v521)(v461, v528);
    ((void (*)(char *, uint64_t))v524)(v430, v529);
    v523(v431, v530);
    v517(v455, v531);
    ((void (*)(char *, uint64_t))v290)(v367, v289);
    uint64_t v295 = v537;
    ((void (*)(char *, uint64_t))v513)(v369, v537);
    ((void (*)(char *, uint64_t))v292)(v370, v291);
    ((void (*)(char *, uint64_t))v293)(v371, v534);
    uint64_t v296 = v520;
    ((void (*)(char *, uint64_t))v520)(v372, v535);
    uint64_t v297 = v527;
    ((void (*)(char *, uint64_t))v516)(v373, v527);
    v525(v374, v294);
    ((void (*)(char *, uint64_t))v521)(v462, v528);
    uint64_t v298 = v529;
    ((void (*)(char *, uint64_t))v524)(v432, v529);
    v299 = v523;
    v523(v433, v530);
    v517(v454, v531);
    ((void (*)(char *, uint64_t))v512)(v377, v526);
    ((void (*)(char *, uint64_t))v513)(v378, v295);
    v300 = v522;
    v522(v379, v532);
    ((void (*)(char *, uint64_t))v518)(v382, v534);
    uint64_t v301 = v535;
    ((void (*)(char *, uint64_t))v296)(v383, v535);
    ((void (*)(char *, uint64_t))v516)(v384, v297);
    v525(v385, v536);
    uint64_t v302 = v528;
    ((void (*)(char *, uint64_t))v521)(v463, v528);
    ((void (*)(char *, uint64_t))v524)(v434, v298);
    v299(v435, v530);
    v517(v453, v531);
    ((void (*)(char *, uint64_t))v512)(v386, v526);
    v303 = v513;
    ((void (*)(char *, uint64_t))v513)(v387, v537);
    uint64_t v304 = v532;
    v300(v388, v532);
    ((void (*)(char *, uint64_t))v519)(v389, v533);
    ((void (*)(char *, uint64_t))v520)(v390, v301);
    v305 = v516;
    ((void (*)(char *, uint64_t))v516)(v391, v527);
    v306 = v525;
    v525(v392, v536);
    ((void (*)(char *, uint64_t))v521)(v464, v302);
    v307 = v524;
    ((void (*)(char *, uint64_t))v524)(v437, v529);
    v523(v451, v530);
    v517(v436, v531);
    ((void (*)(char *, uint64_t))v512)(v394, v526);
    ((void (*)(char *, uint64_t))v303)(v395, v537);
    v522(v396, v304);
    ((void (*)(char *, uint64_t))v519)(v398, v533);
    ((void (*)(char *, uint64_t))v518)(v399, v534);
    ((void (*)(char *, uint64_t))v305)(v400, v527);
    v306(v401, v536);
    uint64_t v308 = v528;
    v309 = v521;
    ((void (*)(char *, uint64_t))v521)(v438, v528);
    ((void (*)(char *, uint64_t))v307)(v440, v529);
    uint64_t v310 = v530;
    v523(v450, v530);
    uint64_t v311 = v531;
    uint64_t v312 = v517;
    v517(v439, v531);
    ((void (*)(char *, uint64_t))v512)(v402, v526);
    ((void (*)(char *, uint64_t))v513)(v403, v537);
    v522(v404, v532);
    uint64_t v313 = v533;
    ((void (*)(char *, uint64_t))v519)(v405, v533);
    ((void (*)(char *, uint64_t))v518)(v406, v534);
    ((void (*)(char *, uint64_t))v520)(v407, v535);
    v525(v408, v536);
    ((void (*)(char *, uint64_t))v309)(v465, v308);
    ((void (*)(char *, uint64_t))v524)(v442, v529);
    v523(v443, v310);
    v312(v441, v311);
    uint64_t v314 = v526;
    v315 = v512;
    ((void (*)(char *, uint64_t))v512)(v409, v526);
    ((void (*)(char *, uint64_t))v513)(v410, v537);
    v522(v411, v532);
    uint64_t v316 = v519;
    ((void (*)(char *, uint64_t))v519)(v412, v313);
    v317 = v518;
    ((void (*)(char *, uint64_t))v518)(v413, v534);
    uint64_t v318 = v520;
    ((void (*)(char *, uint64_t))v520)(v414, v535);
    uint64_t v319 = v527;
    ((void (*)(char *, uint64_t))v516)(v415, v527);
    ((void (*)(char *, uint64_t))v521)(v466, v528);
    ((void (*)(char *, uint64_t))v524)(v445, v529);
    v523(v446, v530);
    v517(v447, v531);
    ((void (*)(char *, uint64_t))v315)(v448, v314);
    ((void (*)(char *, uint64_t))v513)(v449, v537);
    v522(v444, v532);
    ((void (*)(char *, uint64_t))v316)(v416, v533);
    ((void (*)(char *, uint64_t))v317)(v417, v534);
    ((void (*)(char *, uint64_t))v318)(v418, v535);
    ((void (*)(char *, uint64_t))v516)(v419, v319);
    return ((uint64_t (*)(char *, uint64_t))v525)(v420, v536);
  }
  return result;
}

uint64_t sub_258755F88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258751E74(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], (uint64_t)&a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], a1, a2, a3);
}

uint64_t (*Flatten_12.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_2587560A8(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, uint64_t a12, char *a13, uint64_t a14, uint64_t a15, void *a16)
{
  v505 = a8;
  v504 = a7;
  v503 = a6;
  v502 = a5;
  v501 = a4;
  v500 = a3;
  v499 = a2;
  v498 = a1;
  uint64_t v17 = a16[4];
  uint64_t v591 = a16[3];
  uint64_t v585 = v17;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v19 = a16[5];
  uint64_t v579 = TupleTypeMetadata2;
  uint64_t v580 = v19;
  uint64_t v20 = swift_getTupleTypeMetadata2();
  uint64_t v21 = a16[6];
  v578 = (char *)v20;
  uint64_t v581 = v21;
  uint64_t v22 = swift_getTupleTypeMetadata2();
  uint64_t v23 = a16[7];
  uint64_t v577 = v22;
  uint64_t v584 = v23;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a16[8];
  v576 = (void (*)(char *, uint64_t))v24;
  uint64_t v583 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a16[9];
  v575 = (void (*)(char *, uint64_t))v26;
  uint64_t v582 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a16[10];
  v574 = (char *)v28;
  uint64_t v590 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a16[11];
  v573 = (char *)v30;
  uint64_t v592 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v33 = a16[12];
  v572 = (char *)v32;
  uint64_t v589 = v33;
  uint64_t v34 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a16[13];
  v571 = (void (*)(char *, uint64_t))v34;
  uint64_t v588 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a16[14];
  v570 = (void (*)(char *, uint64_t))v36;
  uint64_t v587 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a16[15];
  v569 = (char *)v38;
  uint64_t v586 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v44 = MEMORY[0x270FA5388](v40, v41, v42, v43);
  v506 = (char *)v346 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = MEMORY[0x270FA5388](v44, v46, v47, v48);
  v507 = (char *)v346 - v50;
  uint64_t v54 = MEMORY[0x270FA5388](v49, v51, v52, v53);
  v508 = (char *)v346 - v55;
  uint64_t v59 = MEMORY[0x270FA5388](v54, v56, v57, v58);
  v509 = (char *)v346 - v60;
  uint64_t v64 = MEMORY[0x270FA5388](v59, v61, v62, v63);
  v510 = (char *)v346 - v65;
  uint64_t v69 = MEMORY[0x270FA5388](v64, v66, v67, v68);
  v511 = (char *)v346 - v70;
  uint64_t v74 = MEMORY[0x270FA5388](v69, v71, v72, v73);
  v512 = (char *)v346 - v75;
  uint64_t v79 = MEMORY[0x270FA5388](v74, v76, v77, v78);
  v513 = (char *)v346 - v80;
  uint64_t v84 = MEMORY[0x270FA5388](v79, v81, v82, v83);
  uint64_t v86 = (char *)v346 - v85;
  uint64_t v90 = MEMORY[0x270FA5388](v84, v87, v88, v89);
  uint64_t v92 = (char *)v346 - v91;
  uint64_t v96 = MEMORY[0x270FA5388](v90, v93, v94, v95);
  v514 = (char *)v346 - v97;
  uint64_t v101 = MEMORY[0x270FA5388](v96, v98, v99, v100);
  v515 = (char *)v346 - v102;
  uint64_t v106 = MEMORY[0x270FA5388](v101, v103, v104, v105);
  uint64_t v108 = (char *)v346 - v107;
  MEMORY[0x270FA5388](v106, v109, v110, v111);
  uint64_t v113 = (char *)v346 - v112;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a16[16] + 24))(a14, a15, a16[2]);
  if (!v16)
  {
    v431 = a13;
    uint64_t v426 = a12;
    v459 = a11;
    uint64_t v115 = *(int *)(v579 + 48);
    uint64_t v116 = &v113[v115];
    v546 = &v113[v115];
    uint64_t v117 = *((int *)v578 + 12);
    v561 = &v113[v117];
    uint64_t v118 = *(int *)(v577 + 48);
    v555 = &v113[v118];
    uint64_t v119 = *((int *)v576 + 12);
    v562 = &v113[v119];
    uint64_t v120 = *((int *)v575 + 12);
    v563 = &v113[v120];
    uint64_t v121 = *((int *)v574 + 12);
    v564 = &v113[v121];
    uint64_t v122 = *((int *)v573 + 12);
    v565 = &v113[v122];
    uint64_t v123 = *((int *)v572 + 12);
    v556 = &v113[v123];
    uint64_t v124 = *((int *)v571 + 12);
    v557 = &v113[v124];
    uint64_t v125 = *((int *)v570 + 12);
    v558 = &v113[v125];
    uint64_t v457 = 0;
    uint64_t v126 = *((int *)v569 + 12);
    v559 = &v113[v126];
    uint64_t v520 = v40;
    uint64_t v127 = *(int *)(v40 + 48);
    v560 = &v113[v127];
    uint64_t v128 = v113;
    v547 = v113;
    v493 = &v108[v127];
    v494 = &v108[v126];
    v495 = &v108[v125];
    v496 = &v108[v124];
    v497 = &v108[v123];
    uint64_t v479 = v86;
    v490 = &v108[v122];
    uint64_t v483 = v92;
    v491 = &v108[v121];
    v492 = &v108[v120];
    v129 = &v108[v119];
    v453 = &v108[v119];
    uint64_t v130 = &v108[v118];
    v454 = &v108[v118];
    uint64_t v131 = &v108[v117];
    v455 = &v108[v117];
    uint64_t v132 = &v108[v115];
    v456 = &v108[v115];
    uint64_t v133 = v591;
    v568 = *(void **)(v591 - 8);
    v519 = (void (*)(void))v568[2];
    v521 = v568 + 2;
    v462 = a10;
    v465 = a9;
    ((void (*)(char *, char *, uint64_t))v519)(v108, v128, v591);
    v554 = *(void **)(v585 - 8);
    v517 = (void (*)(char *, char *))v554[2];
    v542 = (char *)(v554 + 2);
    v517(v132, v116);
    v545 = *(void **)(v580 - 8);
    v516 = (void (*)(char *, char *))v545[2];
    v541 = (char *)(v545 + 2);
    v516(v131, v561);
    v567 = *(void **)(v581 - 8);
    v518 = (void (*)(char *, char *, uint64_t))v567[2];
    v540 = (char *)(v567 + 2);
    v518(v130, v555, v581);
    v553 = *(void **)(v584 - 8);
    uint64_t v134 = (char *)v553[2];
    v538 = (void (*)(uint64_t, uint64_t, uint64_t))(v553 + 2);
    v539 = v134;
    ((void (*)(char *, char *, uint64_t))v134)(v129, v562, v584);
    v552 = *(void **)(v583 - 8);
    uint64_t v135 = (char *)v552[2];
    uint64_t v536 = (char *)(v552 + 2);
    uint64_t v537 = v135;
    ((void (*)(char *, char *, uint64_t))v135)(v492, v563, v583);
    v551 = *(void **)(v582 - 8);
    uint64_t v136 = (char *)v551[2];
    uint64_t v534 = v551 + 2;
    uint64_t v535 = v136;
    ((void (*)(char *, char *, uint64_t))v136)(v491, v564, v582);
    v566 = *(void **)(v590 - 8);
    uint64_t v137 = (void (*)(char *, char *, uint64_t))v566[2];
    uint64_t v532 = v566 + 2;
    uint64_t v533 = v137;
    v137(v490, v565, v590);
    v550 = *(void **)(v592 - 8);
    v138 = (void (*)(char *, char *, uint64_t))v550[2];
    uint64_t v530 = v550 + 2;
    uint64_t v531 = v138;
    v138(v497, v556, v592);
    v549 = *(void **)(v589 - 8);
    uint64_t v139 = (void (*)(char *, char *, uint64_t))v549[2];
    uint64_t v528 = v549 + 2;
    uint64_t v529 = v139;
    v139(v496, v557, v589);
    v548 = *(void **)(v588 - 8);
    uint64_t v140 = (void (*)(char *, char *, uint64_t))v548[2];
    uint64_t v526 = v548 + 2;
    uint64_t v527 = v140;
    v140(v495, v558, v588);
    v544 = *(void **)(v587 - 8);
    uint64_t v141 = (void (*)(char *, char *, uint64_t))v544[2];
    v524 = v544 + 2;
    v525 = v141;
    v141(v494, v559, v587);
    v543 = *(void **)(v586 - 8);
    v142 = (void (*)(char *, char *, uint64_t))v543[2];
    v522 = v543 + 2;
    v523 = v142;
    v142(v493, v560, v586);
    uint64_t v143 = (void (*)(char *, char *, uint64_t))v568[4];
    v414 = v568 + 4;
    v415 = v143;
    v143(v498, v108, v133);
    v488 = &v515[*(int *)(v520 + 48)];
    v489 = &v515[*((int *)v569 + 12)];
    v498 = &v515[*((int *)v570 + 12)];
    v487 = &v515[*((int *)v571 + 12)];
    v446 = &v515[*((int *)v572 + 12)];
    uint64_t v144 = v446;
    v447 = &v515[*((int *)v573 + 12)];
    uint64_t v145 = v447;
    v448 = &v515[*((int *)v574 + 12)];
    uint64_t v146 = v448;
    v449 = &v515[*((int *)v575 + 12)];
    uint64_t v147 = v449;
    v450 = &v515[*((int *)v576 + 12)];
    v148 = v450;
    v451 = &v515[*(int *)(v577 + 48)];
    uint64_t v149 = v451;
    v452 = &v515[*((int *)v578 + 12)];
    uint64_t v150 = v452;
    uint64_t v151 = &v515[*(int *)(v579 + 48)];
    v519();
    uint64_t v152 = v585;
    ((void (*)(char *, char *, uint64_t))v517)(v151, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v150, v561, v580);
    v518(v149, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v148, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v147, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v146, v564, v582);
    v533(v145, v565, v590);
    v531(v144, v556, v592);
    v529(v487, v557, v589);
    v527(v498, v558, v588);
    v525(v489, v559, v587);
    v523(v488, v560, v586);
    v153 = (void (*)(char *, char *, uint64_t))v554[4];
    v408 = v554 + 4;
    uint64_t v409 = v153;
    uint64_t v154 = v152;
    v153(v499, v151, v152);
    uint64_t v485 = &v514[*(int *)(v520 + 48)];
    uint64_t v486 = &v514[*((int *)v569 + 12)];
    v499 = &v514[*((int *)v570 + 12)];
    uint64_t v484 = &v514[*((int *)v571 + 12)];
    v439 = &v514[*((int *)v572 + 12)];
    uint64_t v155 = v439;
    v440 = &v514[*((int *)v573 + 12)];
    uint64_t v156 = v440;
    v441 = &v514[*((int *)v574 + 12)];
    uint64_t v157 = v441;
    v442 = &v514[*((int *)v575 + 12)];
    uint64_t v158 = v442;
    v443 = &v514[*((int *)v576 + 12)];
    uint64_t v159 = v443;
    v444 = &v514[*(int *)(v577 + 48)];
    uint64_t v160 = v444;
    uint64_t v161 = &v514[*((int *)v578 + 12)];
    v445 = &v514[*(int *)(v579 + 48)];
    uint64_t v162 = v445;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v162, v546, v154);
    uint64_t v163 = v580;
    v516(v161, v561);
    v518(v160, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v159, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v158, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v157, v564, v582);
    v533(v156, v565, v590);
    v531(v155, v556, v592);
    v529(v484, v557, v589);
    v527(v499, v558, v588);
    v525(v486, v559, v587);
    v523(v485, v560, v586);
    uint64_t v164 = (void (*)(char *, char *, uint64_t))v545[4];
    v402 = v545 + 4;
    v403 = v164;
    uint64_t v165 = v163;
    v164(v500, v161, v163);
    uint64_t v480 = &v483[*(int *)(v520 + 48)];
    uint64_t v481 = &v483[*((int *)v569 + 12)];
    uint64_t v482 = &v483[*((int *)v570 + 12)];
    v500 = &v483[*((int *)v571 + 12)];
    v432 = &v483[*((int *)v572 + 12)];
    uint64_t v166 = v432;
    v433 = &v483[*((int *)v573 + 12)];
    uint64_t v167 = v433;
    v434 = &v483[*((int *)v574 + 12)];
    uint64_t v168 = v434;
    v435 = &v483[*((int *)v575 + 12)];
    uint64_t v169 = v435;
    v436 = &v483[*((int *)v576 + 12)];
    uint64_t v170 = v436;
    uint64_t v171 = &v483[*(int *)(v577 + 48)];
    v437 = &v483[*((int *)v578 + 12)];
    uint64_t v172 = v437;
    v438 = &v483[*(int *)(v579 + 48)];
    v173 = v438;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v173, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v172, v561, v165);
    uint64_t v174 = v581;
    v518(v171, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v170, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v169, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v168, v564, v582);
    v533(v167, v565, v590);
    v531(v166, v556, v592);
    v529(v500, v557, v589);
    v527(v482, v558, v588);
    v525(v481, v559, v587);
    v523(v480, v560, v586);
    uint64_t v175 = (void (*)(char *, char *, uint64_t))v567[4];
    uint64_t v393 = v567 + 4;
    v394 = v175;
    v175(v501, v171, v174);
    uint64_t v477 = &v479[*(int *)(v520 + 48)];
    uint64_t v478 = &v479[*((int *)v569 + 12)];
    v501 = &v479[*((int *)v570 + 12)];
    uint64_t v476 = &v479[*((int *)v571 + 12)];
    uint64_t v423 = &v479[*((int *)v572 + 12)];
    uint64_t v176 = v423;
    uint64_t v424 = &v479[*((int *)v573 + 12)];
    uint64_t v177 = v424;
    uint64_t v425 = &v479[*((int *)v574 + 12)];
    v178 = v425;
    v427 = &v479[*((int *)v575 + 12)];
    uint64_t v179 = v427;
    v180 = &v479[*((int *)v576 + 12)];
    v428 = &v479[*(int *)(v577 + 48)];
    v181 = v428;
    v429 = &v479[*((int *)v578 + 12)];
    uint64_t v182 = v429;
    v430 = &v479[*(int *)(v579 + 48)];
    v183 = v430;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v183, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v182, v561, v580);
    v518(v181, v555, v174);
    uint64_t v184 = v584;
    ((void (*)(char *, char *, uint64_t))v539)(v180, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v179, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v178, v564, v582);
    v533(v177, v565, v590);
    v531(v176, v556, v592);
    v529(v476, v557, v589);
    v527(v501, v558, v588);
    v525(v478, v559, v587);
    v523(v477, v560, v586);
    uint64_t v185 = (void (*)(char *, char *, uint64_t))v553[4];
    v388 = v553 + 4;
    v389 = v185;
    v185(v502, v180, v184);
    v474 = &v513[*(int *)(v520 + 48)];
    v475 = &v513[*((int *)v569 + 12)];
    v502 = &v513[*((int *)v570 + 12)];
    v473 = &v513[*((int *)v571 + 12)];
    uint64_t v416 = &v513[*((int *)v572 + 12)];
    uint64_t v186 = v416;
    uint64_t v417 = &v513[*((int *)v573 + 12)];
    uint64_t v187 = v417;
    uint64_t v418 = &v513[*((int *)v574 + 12)];
    uint64_t v188 = v418;
    uint64_t v189 = &v513[*((int *)v575 + 12)];
    uint64_t v419 = &v513[*((int *)v576 + 12)];
    uint64_t v190 = v419;
    uint64_t v420 = &v513[*(int *)(v577 + 48)];
    uint64_t v191 = v420;
    uint64_t v421 = &v513[*((int *)v578 + 12)];
    uint64_t v192 = v421;
    uint64_t v422 = &v513[*(int *)(v579 + 48)];
    uint64_t v193 = v422;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v193, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v192, v561, v580);
    v518(v191, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v190, v562, v184);
    uint64_t v194 = v583;
    ((void (*)(char *, char *, uint64_t))v537)(v189, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v188, v564, v582);
    v533(v187, v565, v590);
    v531(v186, v556, v592);
    v529(v473, v557, v589);
    v527(v502, v558, v588);
    v525(v475, v559, v587);
    v523(v474, v560, v586);
    v195 = (void (*)(char *, char *, uint64_t))v552[4];
    uint64_t v381 = v552 + 4;
    v382 = v195;
    uint64_t v196 = v194;
    v195(v503, v189, v194);
    v471 = &v512[*(int *)(v520 + 48)];
    v472 = &v512[*((int *)v569 + 12)];
    v503 = &v512[*((int *)v570 + 12)];
    v404 = &v512[*((int *)v571 + 12)];
    v197 = v404;
    v405 = &v512[*((int *)v572 + 12)];
    uint64_t v198 = v405;
    v406 = &v512[*((int *)v573 + 12)];
    uint64_t v199 = v406;
    v470 = &v512[*((int *)v574 + 12)];
    v407 = &v512[*((int *)v575 + 12)];
    uint64_t v200 = v407;
    uint64_t v410 = &v512[*((int *)v576 + 12)];
    uint64_t v201 = v410;
    v411 = &v512[*(int *)(v577 + 48)];
    uint64_t v202 = v411;
    v412 = &v512[*((int *)v578 + 12)];
    uint64_t v203 = v412;
    v413 = &v512[*(int *)(v579 + 48)];
    uint64_t v204 = v413;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v204, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v203, v561, v580);
    v518(v202, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v201, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v200, v563, v196);
    v205 = v470;
    uint64_t v206 = v582;
    ((void (*)(char *, char *, uint64_t))v535)(v470, v564, v582);
    v533(v199, v565, v590);
    v531(v198, v556, v592);
    v529(v197, v557, v589);
    v527(v503, v558, v588);
    v525(v472, v559, v587);
    v523(v471, v560, v586);
    v207 = (void (*)(char *, char *, uint64_t))v551[4];
    uint64_t v374 = v551 + 4;
    uint64_t v375 = v207;
    v207(v504, v205, v206);
    v469 = &v511[*(int *)(v520 + 48)];
    v470 = &v511[*((int *)v569 + 12)];
    v504 = &v511[*((int *)v570 + 12)];
    v392 = &v511[*((int *)v571 + 12)];
    uint64_t v208 = v392;
    v395 = &v511[*((int *)v572 + 12)];
    uint64_t v209 = v395;
    uint64_t v468 = &v511[*((int *)v573 + 12)];
    v396 = &v511[*((int *)v574 + 12)];
    uint64_t v210 = v396;
    v397 = &v511[*((int *)v575 + 12)];
    uint64_t v211 = v397;
    v398 = &v511[*((int *)v576 + 12)];
    uint64_t v212 = v398;
    v399 = &v511[*(int *)(v577 + 48)];
    uint64_t v213 = v399;
    v400 = &v511[*((int *)v578 + 12)];
    uint64_t v214 = v400;
    v401 = &v511[*(int *)(v579 + 48)];
    uint64_t v215 = v401;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v215, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v214, v561, v580);
    v518(v213, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v212, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v211, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v210, v564, v206);
    v216 = v468;
    uint64_t v217 = v590;
    v533(v468, v565, v590);
    v531(v209, v556, v592);
    v529(v208, v557, v589);
    v527(v504, v558, v588);
    v525(v470, v559, v587);
    v523(v469, v560, v586);
    uint64_t v218 = (void (*)(char *, char *, uint64_t))v566[4];
    uint64_t v369 = v566 + 4;
    uint64_t v370 = v218;
    uint64_t v219 = v217;
    v218(v505, v216, v217);
    v467 = &v510[*(int *)(v520 + 48)];
    uint64_t v468 = &v510[*((int *)v569 + 12)];
    v505 = &v510[*((int *)v570 + 12)];
    v466 = &v510[*((int *)v571 + 12)];
    v220 = &v510[*((int *)v572 + 12)];
    v383 = &v510[*((int *)v573 + 12)];
    uint64_t v221 = v383;
    v384 = &v510[*((int *)v574 + 12)];
    uint64_t v222 = v384;
    v385 = &v510[*((int *)v575 + 12)];
    uint64_t v223 = v385;
    v386 = &v510[*((int *)v576 + 12)];
    uint64_t v224 = v386;
    v387 = &v510[*(int *)(v577 + 48)];
    uint64_t v225 = v387;
    v390 = &v510[*((int *)v578 + 12)];
    uint64_t v226 = v390;
    v391 = &v510[*(int *)(v579 + 48)];
    uint64_t v227 = v391;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v227, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v226, v561, v580);
    v518(v225, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v224, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v223, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v222, v564, v582);
    v533(v221, v565, v219);
    uint64_t v228 = v592;
    v531(v220, v556, v592);
    v529(v466, v557, v589);
    v527(v505, v558, v588);
    v525(v468, v559, v587);
    v523(v467, v560, v586);
    uint64_t v229 = (void (*)(char *, char *, uint64_t))v550[4];
    v359 = v550 + 4;
    v360 = v229;
    v229(v465, v220, v228);
    uint64_t v230 = v520;
    v463 = &v509[*(int *)(v520 + 48)];
    v464 = &v509[*((int *)v569 + 12)];
    v465 = &v509[*((int *)v570 + 12)];
    v461 = &v509[*((int *)v571 + 12)];
    uint64_t v371 = &v509[*((int *)v572 + 12)];
    uint64_t v231 = v371;
    uint64_t v372 = &v509[*((int *)v573 + 12)];
    uint64_t v232 = v372;
    uint64_t v373 = &v509[*((int *)v574 + 12)];
    uint64_t v233 = v373;
    uint64_t v376 = &v509[*((int *)v575 + 12)];
    uint64_t v234 = v376;
    uint64_t v377 = &v509[*((int *)v576 + 12)];
    uint64_t v235 = v377;
    v378 = &v509[*(int *)(v577 + 48)];
    uint64_t v236 = v378;
    v379 = &v509[*((int *)v578 + 12)];
    v237 = v379;
    v380 = &v509[*(int *)(v579 + 48)];
    uint64_t v238 = v380;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v238, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v237, v561, v580);
    v518(v236, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v235, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v234, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v233, v564, v582);
    v533(v232, v565, v590);
    v531(v231, v556, v592);
    uint64_t v239 = v461;
    uint64_t v240 = v589;
    v529(v461, v557, v589);
    v527(v465, v558, v588);
    v525(v464, v559, v587);
    v523(v463, v560, v586);
    uint64_t v241 = (void (*)(char *, char *, uint64_t))v549[4];
    v354 = v549 + 4;
    uint64_t v356 = v241;
    v241(v462, v239, v240);
    v461 = &v508[*(int *)(v230 + 48)];
    v462 = &v508[*((int *)v569 + 12)];
    uint64_t v242 = &v508[*((int *)v570 + 12)];
    v460 = &v508[*((int *)v571 + 12)];
    v361 = &v508[*((int *)v572 + 12)];
    v243 = v361;
    v362 = &v508[*((int *)v573 + 12)];
    uint64_t v244 = v362;
    v363 = &v508[*((int *)v574 + 12)];
    v245 = v363;
    v364 = &v508[*((int *)v575 + 12)];
    uint64_t v246 = v364;
    v365 = &v508[*((int *)v576 + 12)];
    v247 = v365;
    v366 = &v508[*(int *)(v577 + 48)];
    uint64_t v248 = v366;
    v367 = &v508[*((int *)v578 + 12)];
    uint64_t v249 = v367;
    v368 = &v508[*(int *)(v579 + 48)];
    uint64_t v250 = v368;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v250, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v249, v561, v580);
    v518(v248, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v247, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v246, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v245, v564, v582);
    v533(v244, v565, v590);
    v531(v243, v556, v592);
    v529(v460, v557, v589);
    uint64_t v251 = v588;
    v527(v242, v558, v588);
    v525(v462, v559, v587);
    v523(v461, v560, v586);
    v252 = (void (*)(char *, char *, uint64_t))v548[4];
    v346[1] = v548 + 4;
    v347 = v252;
    v252(v459, v242, v251);
    v458 = &v507[*(int *)(v520 + 48)];
    v346[0] = &v507[*((int *)v569 + 12)];
    v459 = &v507[*((int *)v570 + 12)];
    v348 = &v507[*((int *)v571 + 12)];
    uint64_t v253 = v348;
    v349 = &v507[*((int *)v572 + 12)];
    uint64_t v254 = v349;
    v350 = &v507[*((int *)v573 + 12)];
    uint64_t v255 = v350;
    v351 = &v507[*((int *)v574 + 12)];
    uint64_t v256 = v351;
    v352 = &v507[*((int *)v575 + 12)];
    uint64_t v257 = v352;
    v353 = &v507[*((int *)v576 + 12)];
    uint64_t v258 = v353;
    v355 = &v507[*(int *)(v577 + 48)];
    v259 = v355;
    v357 = &v507[*((int *)v578 + 12)];
    uint64_t v260 = v357;
    v358 = &v507[*(int *)(v579 + 48)];
    uint64_t v261 = v358;
    v519();
    ((void (*)(char *, char *, uint64_t))v517)(v261, v546, v585);
    ((void (*)(char *, char *, uint64_t))v516)(v260, v561, v580);
    v518(v259, v555, v581);
    ((void (*)(char *, char *, uint64_t))v539)(v258, v562, v584);
    ((void (*)(char *, char *, uint64_t))v537)(v257, v563, v583);
    ((void (*)(char *, char *, uint64_t))v535)(v256, v564, v582);
    v533(v255, v565, v590);
    v531(v254, v556, v592);
    v529(v253, v557, v589);
    v527(v459, v558, v588);
    uint64_t v262 = v346[0];
    uint64_t v263 = v587;
    v525((char *)v346[0], v559, v587);
    v523(v458, v560, v586);
    v538 = (void (*)(uint64_t, uint64_t, uint64_t))v544[4];
    v538(v426, v262, v263);
    uint64_t v264 = v506;
    v539 = &v506[*(int *)(v520 + 48)];
    uint64_t v537 = &v506[*((int *)v569 + 12)];
    v542 = &v506[*((int *)v570 + 12)];
    v569 = &v506[*((int *)v571 + 12)];
    v572 = &v506[*((int *)v572 + 12)];
    uint64_t v535 = &v506[*((int *)v573 + 12)];
    uint64_t v265 = v535;
    uint64_t v536 = &v506[*((int *)v574 + 12)];
    uint64_t v266 = v536;
    v574 = &v506[*((int *)v575 + 12)];
    uint64_t v267 = v574;
    v540 = &v506[*((int *)v576 + 12)];
    uint64_t v268 = v540;
    v573 = &v506[*(int *)(v577 + 48)];
    uint64_t v269 = v573;
    v541 = &v506[*((int *)v578 + 12)];
    v270 = v541;
    v578 = &v506[*(int *)(v579 + 48)];
    uint64_t v271 = v578;
    v415(v506, v547, v591);
    v409(v271, v546, v585);
    v403(v270, v561, v580);
    v394(v269, v555, v581);
    v389(v268, v562, v584);
    v382(v267, v563, v583);
    v375(v266, v564, v582);
    v370(v265, v565, v590);
    v360(v572, v556, v592);
    uint64_t v272 = v589;
    v356(v569, v557, v589);
    uint64_t v273 = v588;
    v347(v542, v558, v588);
    v274 = v537;
    uint64_t v275 = v587;
    v538((uint64_t)v537, (uint64_t)v559, v587);
    v276 = (void (*)(char *, char *, uint64_t))v543[4];
    uint64_t v277 = v539;
    uint64_t v278 = v586;
    v276(v539, v560, v586);
    v276(v431, v277, v278);
    uint64_t v279 = (int *)v544[1];
    ++v544;
    v576 = (void (*)(char *, uint64_t))v279;
    ((void (*)(char *, uint64_t))v279)(v274, v275);
    uint64_t v280 = (int *)v548[1];
    ++v548;
    v570 = (void (*)(char *, uint64_t))v280;
    ((void (*)(char *, uint64_t))v280)(v542, v273);
    uint64_t v281 = (int *)v549[1];
    ++v549;
    v571 = (void (*)(char *, uint64_t))v281;
    ((void (*)(char *, uint64_t))v281)(v569, v272);
    uint64_t v282 = (void (*)(char *, uint64_t))v550[1];
    ++v550;
    v282(v572, v592);
    uint64_t v283 = v282;
    v565 = (char *)v282;
    uint64_t v284 = (int *)v566[1];
    ++v566;
    v575 = (void (*)(char *, uint64_t))v284;
    ((void (*)(char *, uint64_t))v284)(v535, v590);
    v572 = (char *)v551[1];
    ++v551;
    uint64_t v285 = v582;
    ((void (*)(char *, uint64_t))v572)(v536, v582);
    uint64_t v286 = (char *)v552[1];
    ++v552;
    ((void (*)(char *, uint64_t))v286)(v574, v583);
    v564 = v286;
    uint64_t v287 = (char *)v553[1];
    ++v553;
    v574 = v287;
    ((void (*)(char *, uint64_t))v287)(v540, v584);
    uint64_t v577 = v567[1];
    ++v567;
    uint64_t v288 = v581;
    ((void (*)(char *, uint64_t))v577)(v573, v581);
    v573 = (char *)v545[1];
    ++v545;
    uint64_t v289 = v580;
    ((void (*)(char *, uint64_t))v573)(v541, v580);
    uint64_t v579 = v554[1];
    ++v554;
    ((void (*)(char *, uint64_t))v579)(v578, v585);
    uint64_t v290 = (char *)v568[1];
    ++v568;
    v578 = v290;
    ((void (*)(char *, uint64_t))v290)(v264, v591);
    uint64_t v291 = v543 + 1;
    v569 = (char *)v543[1];
    uint64_t v292 = v586;
    ((void (*)(char *, uint64_t))v569)(v458, v586);
    v543 = v291;
    v570(v459, v588);
    v571(v348, v589);
    v283(v349, v592);
    uint64_t v293 = v590;
    v575(v350, v590);
    uint64_t v294 = v572;
    ((void (*)(char *, uint64_t))v572)(v351, v285);
    uint64_t v295 = v583;
    ((void (*)(char *, uint64_t))v286)(v352, v583);
    uint64_t v296 = v584;
    ((void (*)(char *, uint64_t))v574)(v353, v584);
    ((void (*)(char *, uint64_t))v577)(v355, v288);
    uint64_t v297 = v573;
    ((void (*)(char *, uint64_t))v573)(v357, v289);
    uint64_t v298 = v585;
    ((void (*)(char *, uint64_t))v579)(v358, v585);
    ((void (*)(char *, uint64_t))v578)(v507, v591);
    uint64_t v299 = v292;
    v300 = v569;
    ((void (*)(char *, uint64_t))v569)(v461, v299);
    v576(v462, v587);
    v571(v460, v589);
    ((void (*)(char *, uint64_t))v565)(v361, v592);
    v575(v362, v293);
    ((void (*)(char *, uint64_t))v294)(v363, v582);
    ((void (*)(char *, uint64_t))v564)(v364, v295);
    ((void (*)(char *, uint64_t))v574)(v365, v296);
    uint64_t v301 = v581;
    ((void (*)(char *, uint64_t))v577)(v366, v581);
    ((void (*)(char *, uint64_t))v297)(v367, v289);
    ((void (*)(char *, uint64_t))v579)(v368, v298);
    uint64_t v302 = v591;
    ((void (*)(char *, uint64_t))v578)(v508, v591);
    ((void (*)(char *, uint64_t))v300)(v463, v586);
    v576(v464, v587);
    v303 = v570;
    v570(v465, v588);
    ((void (*)(char *, uint64_t))v565)(v371, v592);
    v575(v372, v590);
    uint64_t v304 = v582;
    ((void (*)(char *, uint64_t))v572)(v373, v582);
    ((void (*)(char *, uint64_t))v564)(v376, v583);
    uint64_t v305 = v584;
    ((void (*)(char *, uint64_t))v574)(v377, v584);
    ((void (*)(char *, uint64_t))v577)(v378, v301);
    ((void (*)(char *, uint64_t))v573)(v379, v580);
    ((void (*)(char *, uint64_t))v579)(v380, v585);
    ((void (*)(char *, uint64_t))v578)(v509, v302);
    ((void (*)(char *, uint64_t))v569)(v467, v586);
    v576(v468, v587);
    v303(v505, v588);
    uint64_t v306 = v589;
    v307 = v571;
    v571(v466, v589);
    v575(v383, v590);
    ((void (*)(char *, uint64_t))v572)(v384, v304);
    uint64_t v308 = v583;
    ((void (*)(char *, uint64_t))v564)(v385, v583);
    ((void (*)(char *, uint64_t))v574)(v386, v305);
    ((void (*)(char *, uint64_t))v577)(v387, v581);
    ((void (*)(char *, uint64_t))v573)(v390, v580);
    ((void (*)(char *, uint64_t))v579)(v391, v585);
    ((void (*)(char *, uint64_t))v578)(v510, v591);
    uint64_t v309 = v586;
    ((void (*)(char *, uint64_t))v569)(v469, v586);
    uint64_t v310 = v587;
    uint64_t v311 = v576;
    v576(v470, v587);
    uint64_t v312 = v588;
    v570(v504, v588);
    v307(v392, v306);
    uint64_t v313 = v592;
    uint64_t v314 = v565;
    ((void (*)(char *, uint64_t))v565)(v395, v592);
    ((void (*)(char *, uint64_t))v572)(v396, v582);
    v315 = v564;
    ((void (*)(char *, uint64_t))v564)(v397, v308);
    ((void (*)(char *, uint64_t))v574)(v398, v584);
    ((void (*)(char *, uint64_t))v577)(v399, v581);
    uint64_t v316 = v580;
    ((void (*)(char *, uint64_t))v573)(v400, v580);
    ((void (*)(char *, uint64_t))v579)(v401, v585);
    ((void (*)(char *, uint64_t))v578)(v511, v591);
    ((void (*)(char *, uint64_t))v569)(v471, v309);
    v311(v472, v310);
    v570(v503, v312);
    v571(v404, v589);
    ((void (*)(char *, uint64_t))v314)(v405, v313);
    uint64_t v317 = v590;
    uint64_t v318 = v575;
    v575(v406, v590);
    ((void (*)(char *, uint64_t))v315)(v407, v583);
    uint64_t v319 = v574;
    ((void (*)(char *, uint64_t))v574)(v410, v584);
    uint64_t v320 = v581;
    uint64_t v321 = (void (*)(char *, uint64_t))v577;
    ((void (*)(char *, uint64_t))v577)(v411, v581);
    ((void (*)(char *, uint64_t))v573)(v412, v316);
    ((void (*)(char *, uint64_t))v579)(v413, v585);
    ((void (*)(char *, uint64_t))v578)(v512, v591);
    ((void (*)(char *, uint64_t))v569)(v474, v586);
    v576(v475, v587);
    v570(v502, v588);
    v571(v473, v589);
    ((void (*)(char *, uint64_t))v565)(v416, v592);
    v318(v417, v317);
    uint64_t v322 = v582;
    uint64_t v323 = v572;
    ((void (*)(char *, uint64_t))v572)(v418, v582);
    ((void (*)(char *, uint64_t))v319)(v419, v584);
    v321(v420, v320);
    ((void (*)(char *, uint64_t))v573)(v421, v580);
    ((void (*)(char *, uint64_t))v579)(v422, v585);
    uint64_t v324 = v578;
    ((void (*)(char *, uint64_t))v578)(v513, v591);
    ((void (*)(char *, uint64_t))v569)(v477, v586);
    uint64_t v325 = v587;
    v576(v478, v587);
    v326 = v570;
    v570(v501, v588);
    v571(v476, v589);
    ((void (*)(char *, uint64_t))v565)(v423, v592);
    v575(v424, v590);
    ((void (*)(char *, uint64_t))v323)(v425, v322);
    uint64_t v327 = v583;
    ((void (*)(char *, uint64_t))v564)(v427, v583);
    ((void (*)(char *, uint64_t))v577)(v428, v581);
    v328 = v573;
    ((void (*)(char *, uint64_t))v573)(v429, v580);
    ((void (*)(char *, uint64_t))v579)(v430, v585);
    ((void (*)(char *, uint64_t))v324)(v479, v591);
    v329 = v569;
    ((void (*)(char *, uint64_t))v569)(v480, v586);
    v576(v481, v325);
    v326(v482, v588);
    uint64_t v330 = v589;
    v571(v500, v589);
    ((void (*)(char *, uint64_t))v565)(v432, v592);
    v575(v433, v590);
    ((void (*)(char *, uint64_t))v572)(v434, v582);
    ((void (*)(char *, uint64_t))v564)(v435, v327);
    ((void (*)(char *, uint64_t))v574)(v436, v584);
    ((void (*)(char *, uint64_t))v328)(v437, v580);
    uint64_t v331 = v585;
    v332 = (void (*)(char *, uint64_t))v579;
    ((void (*)(char *, uint64_t))v579)(v438, v585);
    uint64_t v333 = v591;
    ((void (*)(char *, uint64_t))v578)(v483, v591);
    ((void (*)(char *, uint64_t))v329)(v485, v586);
    v576(v486, v587);
    v570(v499, v588);
    v334 = v571;
    v571(v484, v330);
    uint64_t v335 = v592;
    ((void (*)(char *, uint64_t))v565)(v439, v592);
    v575(v440, v590);
    ((void (*)(char *, uint64_t))v572)(v441, v582);
    v336 = v564;
    ((void (*)(char *, uint64_t))v564)(v442, v583);
    uint64_t v337 = v584;
    ((void (*)(char *, uint64_t))v574)(v443, v584);
    ((void (*)(char *, uint64_t))v577)(v444, v581);
    v332(v445, v331);
    ((void (*)(char *, uint64_t))v578)(v514, v333);
    uint64_t v338 = v586;
    v339 = v569;
    ((void (*)(char *, uint64_t))v569)(v488, v586);
    v576(v489, v587);
    uint64_t v340 = v588;
    v570(v498, v588);
    v334(v487, v589);
    uint64_t v341 = v335;
    v342 = v565;
    ((void (*)(char *, uint64_t))v565)(v446, v341);
    v575(v447, v590);
    ((void (*)(char *, uint64_t))v572)(v448, v582);
    ((void (*)(char *, uint64_t))v336)(v449, v583);
    v343 = v574;
    ((void (*)(char *, uint64_t))v574)(v450, v337);
    uint64_t v344 = v581;
    ((void (*)(char *, uint64_t))v577)(v451, v581);
    uint64_t v345 = v580;
    ((void (*)(char *, uint64_t))v573)(v452, v580);
    ((void (*)(char *, uint64_t))v578)(v515, v591);
    ((void (*)(char *, uint64_t))v339)(v493, v338);
    v576(v494, v587);
    v570(v495, v340);
    v571(v496, v589);
    ((void (*)(char *, uint64_t))v342)(v497, v592);
    v575(v490, v590);
    ((void (*)(char *, uint64_t))v572)(v491, v582);
    ((void (*)(char *, uint64_t))v564)(v492, v583);
    ((void (*)(char *, uint64_t))v343)(v453, v584);
    ((void (*)(char *, uint64_t))v577)(v454, v344);
    ((void (*)(char *, uint64_t))v573)(v455, v345);
    return ((uint64_t (*)(char *, uint64_t))v579)(v456, v585);
  }
  return result;
}

uint64_t sub_25875AD24@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587560A8(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], (uint64_t)&a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], a1, a2, a3);
}

uint64_t (*Flatten_13.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_25875AE54(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, uint64_t a13, char *a14, uint64_t a15, uint64_t a16, void *a17)
{
  v557 = a8;
  v556 = a7;
  v555 = a6;
  v554 = a5;
  v553 = a4;
  v552 = a3;
  v551 = a2;
  v550 = a1;
  uint64_t v18 = a17[4];
  uint64_t v647 = a17[3];
  uint64_t v639 = v18;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v20 = a17[5];
  uint64_t v637 = TupleTypeMetadata2;
  uint64_t v640 = v20;
  uint64_t v21 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a17[6];
  v636 = (void (*)(char *, uint64_t))v21;
  uint64_t v638 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a17[7];
  v635 = (char *)v23;
  uint64_t v648 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v26 = a17[8];
  uint64_t v634 = v25;
  uint64_t v642 = v26;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v28 = a17[9];
  v633 = (void (*)(char *, uint64_t))v27;
  uint64_t v646 = v28;
  uint64_t v29 = swift_getTupleTypeMetadata2();
  uint64_t v30 = a17[10];
  v632 = (void (*)(char *, uint64_t))v29;
  uint64_t v641 = v30;
  uint64_t v31 = swift_getTupleTypeMetadata2();
  uint64_t v32 = a17[11];
  uint64_t v631 = v31;
  uint64_t v651 = v32;
  uint64_t v33 = swift_getTupleTypeMetadata2();
  uint64_t v34 = a17[12];
  v630 = (char *)v33;
  uint64_t v650 = v34;
  uint64_t v35 = swift_getTupleTypeMetadata2();
  uint64_t v36 = a17[13];
  v629 = (char *)v35;
  uint64_t v645 = v36;
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = a17[14];
  v628 = (char *)v37;
  uint64_t v644 = v38;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v40 = a17[15];
  v627 = (void (*)(char *, uint64_t))v39;
  uint64_t v643 = v40;
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v42 = a17[16];
  v626 = (char *)v41;
  uint64_t v649 = v42;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v47 = MEMORY[0x270FA5388](v43, v44, v45, v46);
  v558 = (char *)&v370 - ((v48 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v47, v49, v50, v51);
  v559 = (char *)&v370 - v53;
  uint64_t v57 = MEMORY[0x270FA5388](v52, v54, v55, v56);
  v560 = (char *)&v370 - v58;
  uint64_t v62 = MEMORY[0x270FA5388](v57, v59, v60, v61);
  v561 = (char *)&v370 - v63;
  uint64_t v67 = MEMORY[0x270FA5388](v62, v64, v65, v66);
  v562 = (char *)&v370 - v68;
  uint64_t v72 = MEMORY[0x270FA5388](v67, v69, v70, v71);
  v563 = (char *)&v370 - v73;
  uint64_t v77 = MEMORY[0x270FA5388](v72, v74, v75, v76);
  v564 = (char *)&v370 - v78;
  uint64_t v82 = MEMORY[0x270FA5388](v77, v79, v80, v81);
  v565 = (char *)&v370 - v83;
  uint64_t v87 = MEMORY[0x270FA5388](v82, v84, v85, v86);
  v566 = (char *)&v370 - v88;
  uint64_t v92 = MEMORY[0x270FA5388](v87, v89, v90, v91);
  uint64_t v94 = (char *)&v370 - v93;
  uint64_t v98 = MEMORY[0x270FA5388](v92, v95, v96, v97);
  uint64_t v100 = (char *)&v370 - v99;
  uint64_t v104 = MEMORY[0x270FA5388](v98, v101, v102, v103);
  v567 = (char *)&v370 - v105;
  uint64_t v109 = MEMORY[0x270FA5388](v104, v106, v107, v108);
  v568 = (char *)&v370 - v110;
  uint64_t v114 = MEMORY[0x270FA5388](v109, v111, v112, v113);
  uint64_t v116 = (char *)&v370 - v115;
  MEMORY[0x270FA5388](v114, v117, v118, v119);
  uint64_t v121 = (char *)&v370 - v120;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a17[17] + 24))(a15, a16, a17[2]);
  if (!v17)
  {
    uint64_t v123 = *(int *)(v637 + 48);
    uint64_t v124 = v121;
    uint64_t v125 = &v121[v123];
    v600 = &v121[v123];
    uint64_t v126 = *((int *)v636 + 12);
    v615 = &v121[v126];
    uint64_t v127 = *((int *)v635 + 12);
    v616 = &v121[v127];
    uint64_t v128 = *(int *)(v634 + 48);
    v613 = &v121[v128];
    uint64_t v129 = *((int *)v633 + 12);
    v617 = &v121[v129];
    uint64_t v130 = *((int *)v632 + 12);
    v609 = &v121[v130];
    uint64_t v131 = *(int *)(v631 + 48);
    v610 = &v121[v131];
    uint64_t v132 = *((int *)v630 + 12);
    v611 = &v121[v132];
    uint64_t v133 = *((int *)v629 + 12);
    v612 = &v121[v133];
    uint64_t v134 = *((int *)v628 + 12);
    v618 = &v121[v134];
    uint64_t v494 = 0;
    uint64_t v135 = *((int *)v627 + 12);
    v619 = &v121[v135];
    uint64_t v136 = *((int *)v626 + 12);
    v620 = &v121[v136];
    v599 = (char *)v43;
    uint64_t v137 = *(int *)(v43 + 48);
    v614 = &v121[v137];
    v601 = v121;
    v544 = &v116[v137];
    v545 = &v116[v136];
    v461 = a14;
    uint64_t v458 = a13;
    v546 = &v116[v135];
    v547 = &v116[v134];
    v548 = &v116[v133];
    v549 = &v116[v132];
    uint64_t v532 = v100;
    v541 = &v116[v131];
    uint64_t v527 = v94;
    v542 = &v116[v130];
    v543 = &v116[v129];
    v138 = &v116[v128];
    v490 = &v116[v128];
    uint64_t v139 = &v116[v127];
    v491 = &v116[v127];
    uint64_t v140 = &v116[v126];
    v492 = &v116[v126];
    uint64_t v141 = &v116[v123];
    v493 = &v116[v123];
    v608 = *(void **)(v647 - 8);
    v572 = (void (*)(void))v608[2];
    v573 = v608 + 2;
    v497 = a12;
    v501 = a11;
    v505 = a10;
    v509 = a9;
    uint64_t v142 = v647;
    ((void (*)(char *, char *))v572)(v116, v124);
    v625 = *(void **)(v639 - 8);
    v571 = (void (*)(char *, char *))v625[2];
    v596 = (char *)(v625 + 2);
    v571(v141, v125);
    v607 = *(void **)(v640 - 8);
    uint64_t v143 = (char *)v607[2];
    v594 = (char *)(v607 + 2);
    v595 = v143;
    ((void (*)(char *, char *))v143)(v140, v615);
    v598 = *(void **)(v638 - 8);
    uint64_t v144 = (char *)v598[2];
    uint64_t v592 = (void (*)(uint64_t, char *, uint64_t))(v598 + 2);
    v593 = v144;
    ((void (*)(char *, char *, uint64_t))v144)(v139, v616, v638);
    v606 = *(void **)(v648 - 8);
    uint64_t v145 = (char *)v606[2];
    uint64_t v590 = (char *)(v606 + 2);
    uint64_t v591 = v145;
    ((void (*)(char *, char *, uint64_t))v145)(v138, v613, v648);
    v605 = *(void **)(v642 - 8);
    uint64_t v146 = (char *)v605[2];
    uint64_t v588 = v605 + 2;
    uint64_t v589 = v146;
    ((void (*)(char *, char *, uint64_t))v146)(v543, v617, v642);
    v604 = *(void **)(v646 - 8);
    uint64_t v147 = (void (*)(char *, char *, uint64_t))v604[2];
    uint64_t v586 = v604 + 2;
    uint64_t v587 = v147;
    v147(v542, v609, v646);
    v624 = *(void **)(v641 - 8);
    v148 = (void (*)(char *, char *, uint64_t))v624[2];
    uint64_t v584 = v624 + 2;
    uint64_t v585 = v148;
    v148(v541, v610, v641);
    v623 = *(void **)(v651 - 8);
    uint64_t v149 = (void (*)(char *, char *, uint64_t))v623[2];
    uint64_t v582 = v623 + 2;
    uint64_t v583 = v149;
    v149(v549, v611, v651);
    v622 = *(void **)(v650 - 8);
    uint64_t v150 = (void (*)(char *, char *, uint64_t))v622[2];
    uint64_t v580 = v622 + 2;
    uint64_t v581 = v150;
    v150(v548, v612, v650);
    v597 = *(void **)(v645 - 8);
    uint64_t v151 = (void (*)(char *, char *, uint64_t))v597[2];
    v569 = v597 + 2;
    v570 = v151;
    v151(v547, v618, v645);
    v603 = *(void **)(v644 - 8);
    uint64_t v152 = (void (*)(char *, char *, uint64_t))v603[2];
    v578 = v603 + 2;
    uint64_t v579 = v152;
    v152(v546, v619, v644);
    v621 = *(void **)(v643 - 8);
    v153 = (void (*)(char *, char *, uint64_t))v621[2];
    v576 = v621 + 2;
    uint64_t v577 = v153;
    v153(v545, v620, v643);
    v602 = *(void **)(v649 - 8);
    uint64_t v154 = (void (*)(char *, char *, uint64_t))v602[2];
    v574 = v602 + 2;
    v575 = v154;
    v154(v544, v614, v649);
    uint64_t v155 = (void (*)(char *, char *, uint64_t))v608[4];
    v450 = v608 + 4;
    v451 = v155;
    v155(v550, v116, v142);
    uint64_t v537 = &v568[*((int *)v599 + 12)];
    v538 = &v568[*((int *)v626 + 12)];
    v539 = &v568[*((int *)v627 + 12)];
    v540 = &v568[*((int *)v628 + 12)];
    v550 = &v568[*((int *)v629 + 12)];
    uint64_t v483 = &v568[*((int *)v630 + 12)];
    uint64_t v156 = v483;
    uint64_t v484 = &v568[*(int *)(v631 + 48)];
    uint64_t v157 = v484;
    uint64_t v485 = &v568[*((int *)v632 + 12)];
    uint64_t v158 = v485;
    uint64_t v486 = &v568[*((int *)v633 + 12)];
    uint64_t v159 = v486;
    v487 = &v568[*(int *)(v634 + 48)];
    uint64_t v160 = v487;
    v488 = &v568[*((int *)v635 + 12)];
    uint64_t v161 = v488;
    v489 = &v568[*((int *)v636 + 12)];
    uint64_t v162 = v489;
    uint64_t v163 = &v568[*(int *)(v637 + 48)];
    v572();
    uint64_t v164 = v639;
    ((void (*)(char *, char *, uint64_t))v571)(v163, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v162, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v161, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v160, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v159, v617, v642);
    v587(v158, v609, v646);
    v585(v157, v610, v641);
    v583(v156, v611, v651);
    v581(v550, v612, v650);
    v570(v540, v618, v645);
    v579(v539, v619, v644);
    v577(v538, v620, v643);
    v575(v537, v614, v649);
    uint64_t v165 = (void (*)(char *, char *, uint64_t))v625[4];
    v441 = v625 + 4;
    v442 = v165;
    uint64_t v166 = v163;
    uint64_t v167 = v164;
    v165(v551, v166, v164);
    uint64_t v534 = &v567[*((int *)v599 + 12)];
    uint64_t v535 = &v567[*((int *)v626 + 12)];
    uint64_t v536 = &v567[*((int *)v627 + 12)];
    v551 = &v567[*((int *)v628 + 12)];
    uint64_t v533 = &v567[*((int *)v629 + 12)];
    uint64_t v476 = &v567[*((int *)v630 + 12)];
    uint64_t v168 = v476;
    uint64_t v477 = &v567[*(int *)(v631 + 48)];
    uint64_t v169 = v477;
    uint64_t v478 = &v567[*((int *)v632 + 12)];
    uint64_t v170 = v478;
    uint64_t v479 = &v567[*((int *)v633 + 12)];
    uint64_t v171 = v479;
    uint64_t v480 = &v567[*(int *)(v634 + 48)];
    uint64_t v172 = v480;
    uint64_t v481 = &v567[*((int *)v635 + 12)];
    v173 = v481;
    uint64_t v174 = &v567[*((int *)v636 + 12)];
    uint64_t v482 = &v567[*(int *)(v637 + 48)];
    uint64_t v175 = v482;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v175, v600, v167);
    uint64_t v176 = v640;
    ((void (*)(char *, char *, uint64_t))v595)(v174, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v173, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v172, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v171, v617, v642);
    v587(v170, v609, v646);
    v585(v169, v610, v641);
    v583(v168, v611, v651);
    v581(v533, v612, v650);
    v570(v551, v618, v645);
    v579(v536, v619, v644);
    v577(v535, v620, v643);
    v575(v534, v614, v649);
    uint64_t v177 = (void (*)(char *, char *, uint64_t))v607[4];
    v435 = v607 + 4;
    v436 = v177;
    uint64_t v178 = v176;
    v177(v552, v174, v176);
    uint64_t v529 = &v532[*((int *)v599 + 12)];
    uint64_t v530 = &v532[*((int *)v626 + 12)];
    uint64_t v531 = &v532[*((int *)v627 + 12)];
    v552 = &v532[*((int *)v628 + 12)];
    uint64_t v528 = &v532[*((int *)v629 + 12)];
    v469 = &v532[*((int *)v630 + 12)];
    uint64_t v179 = v469;
    v470 = &v532[*(int *)(v631 + 48)];
    v180 = v470;
    v471 = &v532[*((int *)v632 + 12)];
    v181 = v471;
    v472 = &v532[*((int *)v633 + 12)];
    uint64_t v182 = v472;
    v473 = &v532[*(int *)(v634 + 48)];
    v183 = v473;
    uint64_t v184 = &v532[*((int *)v635 + 12)];
    v474 = &v532[*((int *)v636 + 12)];
    uint64_t v185 = v474;
    v475 = &v532[*(int *)(v637 + 48)];
    uint64_t v186 = v475;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v186, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v185, v615, v178);
    uint64_t v187 = v638;
    ((void (*)(char *, char *, uint64_t))v593)(v184, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v183, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v182, v617, v642);
    v587(v181, v609, v646);
    v585(v180, v610, v641);
    v583(v179, v611, v651);
    v581(v528, v612, v650);
    v570(v552, v618, v645);
    v579(v531, v619, v644);
    v577(v530, v620, v643);
    v575(v529, v614, v649);
    uint64_t v188 = (void (*)(char *, char *, uint64_t))v598[4];
    v429 = v598 + 4;
    v430 = v188;
    v188(v553, v184, v187);
    v524 = &v527[*((int *)v599 + 12)];
    v525 = &v527[*((int *)v626 + 12)];
    uint64_t v526 = &v527[*((int *)v627 + 12)];
    v553 = &v527[*((int *)v628 + 12)];
    v523 = &v527[*((int *)v629 + 12)];
    v462 = &v527[*((int *)v630 + 12)];
    uint64_t v189 = v462;
    v463 = &v527[*(int *)(v631 + 48)];
    uint64_t v190 = v463;
    v464 = &v527[*((int *)v632 + 12)];
    uint64_t v191 = v464;
    v465 = &v527[*((int *)v633 + 12)];
    uint64_t v192 = v465;
    uint64_t v193 = &v527[*(int *)(v634 + 48)];
    v466 = &v527[*((int *)v635 + 12)];
    uint64_t v194 = v466;
    v467 = &v527[*((int *)v636 + 12)];
    v195 = v467;
    uint64_t v468 = &v527[*(int *)(v637 + 48)];
    uint64_t v196 = v468;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v196, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v195, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v194, v616, v187);
    uint64_t v197 = v648;
    ((void (*)(char *, char *, uint64_t))v591)(v193, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v192, v617, v642);
    v587(v191, v609, v646);
    v585(v190, v610, v641);
    v583(v189, v611, v651);
    v581(v523, v612, v650);
    v570(v553, v618, v645);
    v579(v526, v619, v644);
    v577(v525, v620, v643);
    v575(v524, v614, v649);
    uint64_t v198 = (void (*)(char *, char *, uint64_t))v606[4];
    uint64_t v419 = v606 + 4;
    uint64_t v420 = v198;
    v198(v554, v193, v197);
    uint64_t v520 = &v566[*((int *)v599 + 12)];
    v521 = &v566[*((int *)v626 + 12)];
    v522 = &v566[*((int *)v627 + 12)];
    v554 = &v566[*((int *)v628 + 12)];
    v519 = &v566[*((int *)v629 + 12)];
    v453 = &v566[*((int *)v630 + 12)];
    uint64_t v199 = v453;
    v454 = &v566[*(int *)(v631 + 48)];
    uint64_t v200 = v454;
    v455 = &v566[*((int *)v632 + 12)];
    uint64_t v201 = v455;
    uint64_t v202 = &v566[*((int *)v633 + 12)];
    v456 = &v566[*(int *)(v634 + 48)];
    uint64_t v203 = v456;
    uint64_t v457 = &v566[*((int *)v635 + 12)];
    uint64_t v204 = v457;
    v459 = &v566[*((int *)v636 + 12)];
    v205 = v459;
    v460 = &v566[*(int *)(v637 + 48)];
    uint64_t v206 = v460;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v206, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v205, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v204, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v203, v613, v197);
    uint64_t v207 = v642;
    ((void (*)(char *, char *, uint64_t))v589)(v202, v617, v642);
    v587(v201, v609, v646);
    v585(v200, v610, v641);
    v583(v199, v611, v651);
    v581(v519, v612, v650);
    v570(v554, v618, v645);
    v579(v522, v619, v644);
    v577(v521, v620, v643);
    v575(v520, v614, v649);
    uint64_t v208 = (void (*)(char *, char *, uint64_t))v605[4];
    v415 = v605 + 4;
    uint64_t v416 = v208;
    v208(v555, v202, v207);
    v516 = &v565[*((int *)v599 + 12)];
    v517 = &v565[*((int *)v626 + 12)];
    v518 = &v565[*((int *)v627 + 12)];
    v555 = &v565[*((int *)v628 + 12)];
    v443 = &v565[*((int *)v629 + 12)];
    uint64_t v209 = v443;
    v444 = &v565[*((int *)v630 + 12)];
    uint64_t v210 = v444;
    v445 = &v565[*(int *)(v631 + 48)];
    uint64_t v211 = v445;
    v515 = &v565[*((int *)v632 + 12)];
    v446 = &v565[*((int *)v633 + 12)];
    uint64_t v212 = v446;
    v447 = &v565[*(int *)(v634 + 48)];
    uint64_t v213 = v447;
    v448 = &v565[*((int *)v635 + 12)];
    uint64_t v214 = v448;
    v449 = &v565[*((int *)v636 + 12)];
    uint64_t v215 = v449;
    v452 = &v565[*(int *)(v637 + 48)];
    v216 = v452;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v216, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v215, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v214, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v213, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v212, v617, v207);
    uint64_t v217 = v515;
    uint64_t v218 = v646;
    v587(v515, v609, v646);
    v585(v211, v610, v641);
    v583(v210, v611, v651);
    v581(v209, v612, v650);
    v570(v555, v618, v645);
    v579(v518, v619, v644);
    v577(v517, v620, v643);
    v575(v516, v614, v649);
    uint64_t v219 = (void (*)(char *, char *, uint64_t))v604[4];
    v407 = v604 + 4;
    v408 = v219;
    v219(v556, v217, v218);
    v513 = &v564[*((int *)v599 + 12)];
    v514 = &v564[*((int *)v626 + 12)];
    v515 = &v564[*((int *)v627 + 12)];
    v556 = &v564[*((int *)v628 + 12)];
    v431 = &v564[*((int *)v629 + 12)];
    v220 = v431;
    v432 = &v564[*((int *)v630 + 12)];
    uint64_t v221 = v432;
    v512 = &v564[*(int *)(v631 + 48)];
    v433 = &v564[*((int *)v632 + 12)];
    uint64_t v222 = v433;
    v434 = &v564[*((int *)v633 + 12)];
    uint64_t v223 = v434;
    v437 = &v564[*(int *)(v634 + 48)];
    uint64_t v224 = v437;
    v438 = &v564[*((int *)v635 + 12)];
    uint64_t v225 = v438;
    v439 = &v564[*((int *)v636 + 12)];
    uint64_t v226 = v439;
    v440 = &v564[*(int *)(v637 + 48)];
    uint64_t v227 = v440;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v227, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v226, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v225, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v224, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v223, v617, v642);
    v587(v222, v609, v218);
    uint64_t v228 = v512;
    uint64_t v229 = v641;
    v585(v512, v610, v641);
    v583(v221, v611, v651);
    v581(v220, v612, v650);
    v570(v556, v618, v645);
    v579(v515, v619, v644);
    v577(v514, v620, v643);
    v575(v513, v614, v649);
    uint64_t v230 = (void (*)(char *, char *, uint64_t))v624[4];
    v400 = v624 + 4;
    v401 = v230;
    v230(v557, v228, v229);
    v510 = &v563[*((int *)v599 + 12)];
    v511 = &v563[*((int *)v626 + 12)];
    v512 = &v563[*((int *)v627 + 12)];
    v557 = &v563[*((int *)v628 + 12)];
    uint64_t v421 = &v563[*((int *)v629 + 12)];
    uint64_t v231 = v421;
    uint64_t v232 = &v563[*((int *)v630 + 12)];
    uint64_t v422 = &v563[*(int *)(v631 + 48)];
    uint64_t v233 = v422;
    uint64_t v423 = &v563[*((int *)v632 + 12)];
    uint64_t v234 = v423;
    uint64_t v424 = &v563[*((int *)v633 + 12)];
    uint64_t v235 = v424;
    uint64_t v425 = &v563[*(int *)(v634 + 48)];
    uint64_t v236 = v425;
    uint64_t v426 = &v563[*((int *)v635 + 12)];
    v237 = v426;
    v427 = &v563[*((int *)v636 + 12)];
    uint64_t v238 = v427;
    v428 = &v563[*(int *)(v637 + 48)];
    uint64_t v239 = v428;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v239, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v238, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v237, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v236, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v235, v617, v642);
    v587(v234, v609, v646);
    uint64_t v240 = v641;
    v585(v233, v610, v641);
    uint64_t v241 = v651;
    v583(v232, v611, v651);
    v581(v231, v612, v650);
    v570(v557, v618, v645);
    v579(v512, v619, v644);
    v577(v511, v620, v643);
    v575(v510, v614, v649);
    uint64_t v242 = (void (*)(char *, char *, uint64_t))v623[4];
    v395 = v623 + 4;
    v396 = v242;
    v242(v509, v232, v241);
    v506 = &v562[*((int *)v599 + 12)];
    v507 = &v562[*((int *)v626 + 12)];
    v508 = &v562[*((int *)v627 + 12)];
    v509 = &v562[*((int *)v628 + 12)];
    v504 = &v562[*((int *)v629 + 12)];
    uint64_t v409 = &v562[*((int *)v630 + 12)];
    v243 = v409;
    uint64_t v410 = &v562[*(int *)(v631 + 48)];
    uint64_t v244 = v410;
    v411 = &v562[*((int *)v632 + 12)];
    v245 = v411;
    v412 = &v562[*((int *)v633 + 12)];
    uint64_t v246 = v412;
    v413 = &v562[*(int *)(v634 + 48)];
    v247 = v413;
    v414 = &v562[*((int *)v635 + 12)];
    uint64_t v248 = v414;
    uint64_t v417 = &v562[*((int *)v636 + 12)];
    uint64_t v249 = v417;
    uint64_t v418 = &v562[*(int *)(v637 + 48)];
    uint64_t v250 = v418;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v250, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v249, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v248, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v247, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v246, v617, v642);
    v587(v245, v609, v646);
    v585(v244, v610, v240);
    v583(v243, v611, v651);
    uint64_t v251 = v504;
    uint64_t v252 = v650;
    v581(v504, v612, v650);
    v570(v509, v618, v645);
    v579(v508, v619, v644);
    v577(v507, v620, v643);
    v575(v506, v614, v649);
    uint64_t v253 = (void (*)(char *, char *, uint64_t))v622[4];
    v385 = v622 + 4;
    v386 = v253;
    v253(v505, v251, v252);
    v503 = &v561[*((int *)v599 + 12)];
    v504 = &v561[*((int *)v626 + 12)];
    v505 = &v561[*((int *)v627 + 12)];
    uint64_t v254 = &v561[*((int *)v628 + 12)];
    v502 = &v561[*((int *)v629 + 12)];
    v397 = &v561[*((int *)v630 + 12)];
    uint64_t v255 = v397;
    v398 = &v561[*(int *)(v631 + 48)];
    uint64_t v256 = v398;
    v399 = &v561[*((int *)v632 + 12)];
    uint64_t v257 = v399;
    v402 = &v561[*((int *)v633 + 12)];
    uint64_t v258 = v402;
    v403 = &v561[*(int *)(v634 + 48)];
    v259 = v403;
    v404 = &v561[*((int *)v635 + 12)];
    uint64_t v260 = v404;
    v405 = &v561[*((int *)v636 + 12)];
    uint64_t v261 = v405;
    v406 = &v561[*(int *)(v637 + 48)];
    uint64_t v262 = v406;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v262, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v261, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v260, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v259, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v258, v617, v642);
    v587(v257, v609, v646);
    v585(v256, v610, v641);
    v583(v255, v611, v651);
    v581(v502, v612, v650);
    uint64_t v263 = v645;
    v570(v254, v618, v645);
    v579(v505, v619, v644);
    v577(v504, v620, v643);
    v575(v503, v614, v649);
    uint64_t v264 = (void (*)(char *, char *, uint64_t))v597[4];
    v380 = v597 + 4;
    uint64_t v381 = v264;
    v264(v501, v254, v263);
    v499 = &v560[*((int *)v599 + 12)];
    v500 = &v560[*((int *)v626 + 12)];
    uint64_t v265 = &v560[*((int *)v627 + 12)];
    v501 = &v560[*((int *)v628 + 12)];
    v498 = &v560[*((int *)v629 + 12)];
    v387 = &v560[*((int *)v630 + 12)];
    uint64_t v266 = v387;
    v388 = &v560[*(int *)(v631 + 48)];
    uint64_t v267 = v388;
    v389 = &v560[*((int *)v632 + 12)];
    uint64_t v268 = v389;
    v390 = &v560[*((int *)v633 + 12)];
    uint64_t v269 = v390;
    v391 = &v560[*(int *)(v634 + 48)];
    v270 = v391;
    v392 = &v560[*((int *)v635 + 12)];
    uint64_t v271 = v392;
    uint64_t v393 = &v560[*((int *)v636 + 12)];
    uint64_t v272 = v393;
    v394 = &v560[*(int *)(v637 + 48)];
    uint64_t v273 = v394;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v273, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v272, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v271, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v270, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v269, v617, v642);
    v587(v268, v609, v646);
    v585(v267, v610, v641);
    v583(v266, v611, v651);
    v581(v498, v612, v650);
    v570(v501, v618, v645);
    uint64_t v274 = v644;
    v579(v265, v619, v644);
    v577(v500, v620, v643);
    v575(v499, v614, v649);
    uint64_t v275 = (void (*)(char *, char *, uint64_t))v603[4];
    uint64_t v372 = v603 + 4;
    uint64_t v373 = v275;
    v275(v497, v265, v274);
    v495 = &v559[*((int *)v599 + 12)];
    uint64_t v371 = &v559[*((int *)v626 + 12)];
    v496 = &v559[*((int *)v627 + 12)];
    v497 = &v559[*((int *)v628 + 12)];
    uint64_t v374 = &v559[*((int *)v629 + 12)];
    v276 = v374;
    uint64_t v375 = &v559[*((int *)v630 + 12)];
    uint64_t v277 = v375;
    uint64_t v376 = &v559[*(int *)(v631 + 48)];
    uint64_t v278 = v376;
    uint64_t v377 = &v559[*((int *)v632 + 12)];
    uint64_t v279 = v377;
    v378 = &v559[*((int *)v633 + 12)];
    uint64_t v280 = v378;
    v379 = &v559[*(int *)(v634 + 48)];
    uint64_t v281 = v379;
    v382 = &v559[*((int *)v635 + 12)];
    uint64_t v282 = v382;
    v383 = &v559[*((int *)v636 + 12)];
    uint64_t v283 = v383;
    v384 = &v559[*(int *)(v637 + 48)];
    uint64_t v284 = v384;
    v572();
    ((void (*)(char *, char *, uint64_t))v571)(v284, v600, v639);
    ((void (*)(char *, char *, uint64_t))v595)(v283, v615, v640);
    ((void (*)(char *, char *, uint64_t))v593)(v282, v616, v638);
    ((void (*)(char *, char *, uint64_t))v591)(v281, v613, v648);
    ((void (*)(char *, char *, uint64_t))v589)(v280, v617, v642);
    v587(v279, v609, v646);
    v585(v278, v610, v641);
    v583(v277, v611, v651);
    v581(v276, v612, v650);
    v570(v497, v618, v645);
    v579(v496, v619, v644);
    uint64_t v285 = v371;
    uint64_t v286 = v643;
    v577(v371, v620, v643);
    v575(v495, v614, v649);
    uint64_t v592 = (void (*)(uint64_t, char *, uint64_t))v621[4];
    v592(v458, v285, v286);
    uint64_t v287 = v558;
    v593 = &v558[*((int *)v599 + 12)];
    uint64_t v590 = &v558[*((int *)v626 + 12)];
    v626 = &v558[*((int *)v627 + 12)];
    v628 = &v558[*((int *)v628 + 12)];
    v629 = &v558[*((int *)v629 + 12)];
    v630 = &v558[*((int *)v630 + 12)];
    uint64_t v589 = &v558[*(int *)(v631 + 48)];
    uint64_t v288 = v589;
    uint64_t v591 = &v558[*((int *)v632 + 12)];
    uint64_t v289 = v591;
    v594 = &v558[*((int *)v633 + 12)];
    uint64_t v290 = v594;
    v595 = &v558[*(int *)(v634 + 48)];
    uint64_t v291 = v595;
    v596 = &v558[*((int *)v635 + 12)];
    uint64_t v292 = v596;
    v635 = &v558[*((int *)v636 + 12)];
    uint64_t v293 = v635;
    v599 = &v558[*(int *)(v637 + 48)];
    uint64_t v294 = v599;
    v451(v558, v601, v647);
    v442(v294, v600, v639);
    v436(v293, v615, v640);
    v430(v292, v616, v638);
    v420(v291, v613, v648);
    v416(v290, v617, v642);
    v408(v289, v609, v646);
    v401(v288, v610, v641);
    v396(v630, v611, v651);
    v386(v629, v612, v650);
    uint64_t v295 = v645;
    v381(v628, v618, v645);
    uint64_t v296 = v644;
    v373(v626, v619, v644);
    uint64_t v297 = v590;
    uint64_t v298 = v643;
    v592((uint64_t)v590, v620, v643);
    uint64_t v299 = (void (*)(char *, char *, uint64_t))v602[4];
    v300 = v593;
    uint64_t v301 = v649;
    v299(v593, v614, v649);
    v299(v461, v300, v301);
    uint64_t v637 = v621[1];
    ++v621;
    ((void (*)(char *, uint64_t))v637)(v297, v298);
    uint64_t v302 = (int *)v603[1];
    ++v603;
    v627 = (void (*)(char *, uint64_t))v302;
    ((void (*)(char *, uint64_t))v302)(v626, v296);
    v303 = v597 + 1;
    uint64_t v631 = v597[1];
    ((void (*)(char *, uint64_t))v631)(v628, v295);
    uint64_t v304 = (char *)v622[1];
    ++v622;
    ((void (*)(char *, uint64_t))v304)(v629, v650);
    v619 = v304;
    uint64_t v634 = v623[1];
    ++v623;
    uint64_t v305 = v651;
    ((void (*)(char *, uint64_t))v634)(v630, v651);
    uint64_t v306 = (int *)v624[1];
    ++v624;
    v633 = (void (*)(char *, uint64_t))v306;
    ((void (*)(char *, uint64_t))v306)(v589, v641);
    v307 = (int *)v604[1];
    ++v604;
    v632 = (void (*)(char *, uint64_t))v307;
    ((void (*)(char *, uint64_t))v307)(v591, v646);
    v628 = (char *)v605[1];
    ++v605;
    ((void (*)(char *, uint64_t))v628)(v594, v642);
    uint64_t v308 = (char *)v606[1];
    ++v606;
    ((void (*)(char *, uint64_t))v308)(v595, v648);
    v620 = v308;
    uint64_t v309 = (int *)v598[1];
    ++v598;
    v636 = (void (*)(char *, uint64_t))v309;
    uint64_t v310 = v638;
    ((void (*)(char *, uint64_t))v309)(v596, v638);
    v630 = (char *)v607[1];
    ++v607;
    ((void (*)(char *, uint64_t))v630)(v635, v640);
    v635 = (char *)v625[1];
    ++v625;
    uint64_t v311 = v639;
    ((void (*)(char *, uint64_t))v635)(v599, v639);
    v629 = (char *)v608[1];
    ++v608;
    ((void (*)(char *, uint64_t))v629)(v287, v647);
    uint64_t v312 = (char *)v602[1];
    ++v602;
    v626 = v312;
    uint64_t v313 = v649;
    ((void (*)(char *, uint64_t))v312)(v495, v649);
    v627(v496, v644);
    v597 = v303;
    ((void (*)(char *, uint64_t))v631)(v497, v645);
    ((void (*)(char *, uint64_t))v304)(v374, v650);
    ((void (*)(char *, uint64_t))v634)(v375, v305);
    uint64_t v314 = v641;
    v633(v376, v641);
    uint64_t v315 = v646;
    v632(v377, v646);
    uint64_t v316 = v642;
    ((void (*)(char *, uint64_t))v628)(v378, v642);
    uint64_t v317 = v648;
    ((void (*)(char *, uint64_t))v308)(v379, v648);
    v636(v382, v310);
    ((void (*)(char *, uint64_t))v630)(v383, v640);
    ((void (*)(char *, uint64_t))v635)(v384, v311);
    uint64_t v318 = v647;
    ((void (*)(char *, uint64_t))v629)(v559, v647);
    ((void (*)(char *, uint64_t))v626)(v499, v313);
    uint64_t v319 = v643;
    ((void (*)(char *, uint64_t))v637)(v500, v643);
    ((void (*)(char *, uint64_t))v631)(v501, v645);
    ((void (*)(char *, uint64_t))v619)(v498, v650);
    ((void (*)(char *, uint64_t))v634)(v387, v651);
    v633(v388, v314);
    v632(v389, v315);
    ((void (*)(char *, uint64_t))v628)(v390, v316);
    ((void (*)(char *, uint64_t))v620)(v391, v317);
    v636(v392, v310);
    uint64_t v320 = v640;
    uint64_t v321 = v630;
    ((void (*)(char *, uint64_t))v630)(v393, v640);
    uint64_t v322 = v639;
    uint64_t v323 = v635;
    ((void (*)(char *, uint64_t))v635)(v394, v639);
    uint64_t v324 = v629;
    ((void (*)(char *, uint64_t))v629)(v560, v318);
    ((void (*)(char *, uint64_t))v626)(v503, v649);
    ((void (*)(char *, uint64_t))v637)(v504, v319);
    uint64_t v325 = v644;
    v326 = v627;
    v627(v505, v644);
    ((void (*)(char *, uint64_t))v619)(v502, v650);
    ((void (*)(char *, uint64_t))v634)(v397, v651);
    uint64_t v327 = v641;
    v633(v398, v641);
    v632(v399, v646);
    ((void (*)(char *, uint64_t))v628)(v402, v642);
    ((void (*)(char *, uint64_t))v620)(v403, v648);
    v636(v404, v638);
    ((void (*)(char *, uint64_t))v321)(v405, v320);
    ((void (*)(char *, uint64_t))v323)(v406, v322);
    ((void (*)(char *, uint64_t))v324)(v561, v647);
    v328 = v626;
    ((void (*)(char *, uint64_t))v626)(v506, v649);
    ((void (*)(char *, uint64_t))v637)(v507, v643);
    v326(v508, v325);
    uint64_t v329 = v645;
    uint64_t v330 = (void (*)(char *, uint64_t))v631;
    ((void (*)(char *, uint64_t))v631)(v509, v645);
    ((void (*)(char *, uint64_t))v634)(v409, v651);
    uint64_t v331 = v633;
    v633(v410, v327);
    v632(v411, v646);
    uint64_t v332 = v642;
    ((void (*)(char *, uint64_t))v628)(v412, v642);
    ((void (*)(char *, uint64_t))v620)(v413, v648);
    uint64_t v333 = v638;
    v636(v414, v638);
    ((void (*)(char *, uint64_t))v630)(v417, v640);
    ((void (*)(char *, uint64_t))v635)(v418, v639);
    ((void (*)(char *, uint64_t))v629)(v562, v647);
    ((void (*)(char *, uint64_t))v328)(v510, v649);
    ((void (*)(char *, uint64_t))v637)(v511, v643);
    v627(v512, v644);
    v330(v557, v329);
    v334 = v619;
    ((void (*)(char *, uint64_t))v619)(v421, v650);
    v331(v422, v641);
    uint64_t v335 = v632;
    v632(v423, v646);
    ((void (*)(char *, uint64_t))v628)(v424, v332);
    ((void (*)(char *, uint64_t))v620)(v425, v648);
    v636(v426, v333);
    ((void (*)(char *, uint64_t))v630)(v427, v640);
    ((void (*)(char *, uint64_t))v635)(v428, v639);
    uint64_t v336 = v647;
    ((void (*)(char *, uint64_t))v629)(v563, v647);
    uint64_t v337 = v649;
    ((void (*)(char *, uint64_t))v626)(v513, v649);
    uint64_t v338 = (void (*)(char *, uint64_t))v637;
    ((void (*)(char *, uint64_t))v637)(v514, v643);
    uint64_t v339 = v644;
    v627(v515, v644);
    ((void (*)(char *, uint64_t))v631)(v556, v645);
    uint64_t v340 = v650;
    ((void (*)(char *, uint64_t))v334)(v431, v650);
    uint64_t v341 = (void (*)(char *, uint64_t))v634;
    ((void (*)(char *, uint64_t))v634)(v432, v651);
    v335(v433, v646);
    v342 = v628;
    ((void (*)(char *, uint64_t))v628)(v434, v642);
    ((void (*)(char *, uint64_t))v620)(v437, v648);
    v636(v438, v638);
    ((void (*)(char *, uint64_t))v630)(v439, v640);
    ((void (*)(char *, uint64_t))v635)(v440, v639);
    ((void (*)(char *, uint64_t))v629)(v564, v336);
    ((void (*)(char *, uint64_t))v626)(v516, v337);
    v338(v517, v643);
    v627(v518, v339);
    ((void (*)(char *, uint64_t))v631)(v555, v645);
    v343 = v619;
    ((void (*)(char *, uint64_t))v619)(v443, v340);
    uint64_t v344 = v651;
    v341(v444, v651);
    v633(v445, v641);
    ((void (*)(char *, uint64_t))v342)(v446, v642);
    uint64_t v345 = v620;
    ((void (*)(char *, uint64_t))v620)(v447, v648);
    v346 = v636;
    v636(v448, v638);
    ((void (*)(char *, uint64_t))v630)(v449, v640);
    ((void (*)(char *, uint64_t))v635)(v452, v639);
    ((void (*)(char *, uint64_t))v629)(v565, v647);
    ((void (*)(char *, uint64_t))v626)(v520, v649);
    ((void (*)(char *, uint64_t))v637)(v521, v643);
    v627(v522, v644);
    ((void (*)(char *, uint64_t))v631)(v554, v645);
    ((void (*)(char *, uint64_t))v343)(v519, v650);
    v341(v453, v344);
    v633(v454, v641);
    uint64_t v347 = v646;
    v632(v455, v646);
    ((void (*)(char *, uint64_t))v345)(v456, v648);
    v346(v457, v638);
    uint64_t v348 = v640;
    ((void (*)(char *, uint64_t))v630)(v459, v640);
    uint64_t v349 = v639;
    ((void (*)(char *, uint64_t))v635)(v460, v639);
    ((void (*)(char *, uint64_t))v629)(v566, v647);
    ((void (*)(char *, uint64_t))v626)(v524, v649);
    ((void (*)(char *, uint64_t))v637)(v525, v643);
    v350 = v627;
    v627(v526, v644);
    ((void (*)(char *, uint64_t))v631)(v553, v645);
    ((void (*)(char *, uint64_t))v619)(v523, v650);
    ((void (*)(char *, uint64_t))v634)(v462, v651);
    v633(v463, v641);
    v632(v464, v347);
    ((void (*)(char *, uint64_t))v628)(v465, v642);
    v636(v466, v638);
    v351 = v630;
    ((void (*)(char *, uint64_t))v630)(v467, v348);
    ((void (*)(char *, uint64_t))v635)(v468, v349);
    v352 = v629;
    ((void (*)(char *, uint64_t))v629)(v527, v647);
    v353 = v626;
    ((void (*)(char *, uint64_t))v626)(v529, v649);
    uint64_t v354 = v643;
    ((void (*)(char *, uint64_t))v637)(v530, v643);
    v350(v531, v644);
    uint64_t v355 = v645;
    ((void (*)(char *, uint64_t))v631)(v552, v645);
    ((void (*)(char *, uint64_t))v619)(v528, v650);
    ((void (*)(char *, uint64_t))v634)(v469, v651);
    v633(v470, v641);
    v632(v471, v646);
    uint64_t v356 = v642;
    ((void (*)(char *, uint64_t))v628)(v472, v642);
    uint64_t v357 = v648;
    ((void (*)(char *, uint64_t))v620)(v473, v648);
    ((void (*)(char *, uint64_t))v351)(v474, v640);
    v358 = v635;
    ((void (*)(char *, uint64_t))v635)(v475, v639);
    ((void (*)(char *, uint64_t))v352)(v532, v647);
    ((void (*)(char *, uint64_t))v353)(v534, v649);
    ((void (*)(char *, uint64_t))v637)(v535, v354);
    v627(v536, v644);
    v359 = (void (*)(char *, uint64_t))v631;
    ((void (*)(char *, uint64_t))v631)(v551, v355);
    ((void (*)(char *, uint64_t))v619)(v533, v650);
    ((void (*)(char *, uint64_t))v634)(v476, v651);
    uint64_t v360 = v641;
    v361 = v633;
    v633(v477, v641);
    v632(v478, v646);
    ((void (*)(char *, uint64_t))v628)(v479, v356);
    ((void (*)(char *, uint64_t))v620)(v480, v357);
    uint64_t v362 = v638;
    v636(v481, v638);
    ((void (*)(char *, uint64_t))v358)(v482, v639);
    ((void (*)(char *, uint64_t))v629)(v567, v647);
    ((void (*)(char *, uint64_t))v626)(v537, v649);
    ((void (*)(char *, uint64_t))v637)(v538, v643);
    v627(v539, v644);
    v359(v540, v645);
    uint64_t v363 = v650;
    ((void (*)(char *, uint64_t))v619)(v550, v650);
    ((void (*)(char *, uint64_t))v634)(v483, v651);
    v361(v484, v360);
    v364 = v632;
    v632(v485, v646);
    v365 = v628;
    ((void (*)(char *, uint64_t))v628)(v486, v642);
    v366 = v620;
    ((void (*)(char *, uint64_t))v620)(v487, v648);
    uint64_t v367 = v362;
    v368 = v636;
    v636(v488, v367);
    uint64_t v369 = v640;
    ((void (*)(char *, uint64_t))v630)(v489, v640);
    ((void (*)(char *, uint64_t))v629)(v568, v647);
    ((void (*)(char *, uint64_t))v626)(v544, v649);
    ((void (*)(char *, uint64_t))v637)(v545, v643);
    v627(v546, v644);
    ((void (*)(char *, uint64_t))v631)(v547, v645);
    ((void (*)(char *, uint64_t))v619)(v548, v363);
    ((void (*)(char *, uint64_t))v634)(v549, v651);
    v633(v541, v641);
    v364(v542, v646);
    ((void (*)(char *, uint64_t))v365)(v543, v642);
    ((void (*)(char *, uint64_t))v366)(v490, v648);
    v368(v491, v638);
    ((void (*)(char *, uint64_t))v630)(v492, v369);
    return ((uint64_t (*)(char *, uint64_t))v635)(v493, v639);
  }
  return result;
}

uint64_t sub_25876074C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25875AE54(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], (uint64_t)&a4[TupleTypeMetadata[56]], &a4[TupleTypeMetadata[60]], a1, a2, a3);
}

uint64_t (*Flatten_14.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258760888(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, char *a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, void *a18)
{
  v606 = a8;
  v605 = a7;
  v604 = a6;
  v603 = a5;
  v602 = a4;
  v601 = a3;
  v600 = a2;
  v599 = a1;
  uint64_t v19 = a18[4];
  uint64_t v702 = a18[3];
  uint64_t v693 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v21 = a18[5];
  uint64_t v691 = TupleTypeMetadata2;
  uint64_t v692 = v21;
  uint64_t v22 = swift_getTupleTypeMetadata2();
  uint64_t v23 = a18[6];
  uint64_t v690 = v22;
  uint64_t v697 = v23;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a18[7];
  v689 = (char *)v24;
  uint64_t v703 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a18[8];
  uint64_t v688 = v26;
  uint64_t v696 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a18[9];
  uint64_t v687 = v28;
  uint64_t v701 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a18[10];
  v686 = (void (*)(char *, uint64_t))v30;
  uint64_t v695 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v33 = a18[11];
  v685 = (void (*)(char *, uint64_t))v32;
  uint64_t v706 = v33;
  uint64_t v34 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a18[12];
  v684 = (char *)v34;
  uint64_t v700 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a18[13];
  uint64_t v683 = v36;
  uint64_t v705 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a18[14];
  v682 = (char *)v38;
  uint64_t v699 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v41 = a18[15];
  v681 = (char *)v40;
  uint64_t v698 = v41;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v43 = a18[16];
  v680 = (char *)v42;
  uint64_t v694 = v43;
  uint64_t v44 = swift_getTupleTypeMetadata2();
  uint64_t v45 = a18[17];
  v679 = (char *)v44;
  uint64_t v704 = v45;
  uint64_t v678 = swift_getTupleTypeMetadata2();
  uint64_t v49 = MEMORY[0x270FA5388](v678, v46, v47, v48);
  v607 = (char *)v392 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v49, v51, v52, v53);
  v608 = (char *)v392 - v55;
  uint64_t v59 = MEMORY[0x270FA5388](v54, v56, v57, v58);
  v609 = (char *)v392 - v60;
  uint64_t v64 = MEMORY[0x270FA5388](v59, v61, v62, v63);
  v610 = (char *)v392 - v65;
  uint64_t v69 = MEMORY[0x270FA5388](v64, v66, v67, v68);
  v611 = (char *)v392 - v70;
  uint64_t v74 = MEMORY[0x270FA5388](v69, v71, v72, v73);
  v612 = (char *)v392 - v75;
  uint64_t v79 = MEMORY[0x270FA5388](v74, v76, v77, v78);
  v613 = (char *)v392 - v80;
  uint64_t v84 = MEMORY[0x270FA5388](v79, v81, v82, v83);
  v614 = (char *)v392 - v85;
  uint64_t v89 = MEMORY[0x270FA5388](v84, v86, v87, v88);
  v615 = (char *)v392 - v90;
  uint64_t v94 = MEMORY[0x270FA5388](v89, v91, v92, v93);
  uint64_t v96 = (char *)v392 - v95;
  uint64_t v100 = MEMORY[0x270FA5388](v94, v97, v98, v99);
  uint64_t v102 = (char *)v392 - v101;
  uint64_t v106 = MEMORY[0x270FA5388](v100, v103, v104, v105);
  uint64_t v108 = (char *)v392 - v107;
  uint64_t v112 = MEMORY[0x270FA5388](v106, v109, v110, v111);
  v616 = (char *)v392 - v113;
  uint64_t v117 = MEMORY[0x270FA5388](v112, v114, v115, v116);
  v617 = (char *)v392 - v118;
  uint64_t v122 = MEMORY[0x270FA5388](v117, v119, v120, v121);
  uint64_t v124 = (char *)v392 - v123;
  MEMORY[0x270FA5388](v122, v125, v126, v127);
  uint64_t v129 = (char *)v392 - v128;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a18[18] + 24))(a16, a17, a18[2]);
  if (!v18)
  {
    uint64_t v131 = *(int *)(v691 + 48);
    v667 = &v129[v131];
    uint64_t v132 = *(int *)(v690 + 48);
    v668 = &v129[v132];
    uint64_t v133 = *((int *)v689 + 12);
    v666 = &v129[v133];
    uint64_t v134 = *(int *)(v688 + 48);
    v669 = &v129[v134];
    uint64_t v135 = *(int *)(v687 + 48);
    v662 = &v129[v135];
    uint64_t v136 = *((int *)v686 + 12);
    v663 = &v129[v136];
    uint64_t v137 = *((int *)v685 + 12);
    v664 = &v129[v137];
    uint64_t v138 = *((int *)v684 + 12);
    v665 = &v129[v138];
    uint64_t v139 = *(int *)(v683 + 48);
    v661 = &v129[v139];
    uint64_t v140 = *((int *)v682 + 12);
    v659 = &v129[v140];
    uint64_t v526 = 0;
    uint64_t v141 = *((int *)v681 + 12);
    v660 = &v129[v141];
    uint64_t v142 = *((int *)v680 + 12);
    v670 = &v129[v142];
    uint64_t v143 = *((int *)v679 + 12);
    v671 = &v129[v143];
    uint64_t v144 = *(int *)(v678 + 48);
    v672 = &v129[v144];
    uint64_t v145 = v129;
    uint64_t v650 = v129;
    v593 = &v124[v144];
    v594 = &v124[v143];
    v595 = &v124[v142];
    v596 = &v124[v141];
    v597 = &v124[v140];
    v598 = &v124[v139];
    v568 = v96;
    uint64_t v591 = &v124[v138];
    v574 = v102;
    uint64_t v592 = &v124[v137];
    uint64_t v580 = v108;
    uint64_t v146 = &v124[v136];
    uint64_t v520 = &v124[v136];
    uint64_t v147 = &v124[v135];
    v521 = &v124[v135];
    v148 = &v124[v134];
    v522 = &v124[v134];
    uint64_t v149 = &v124[v133];
    v523 = &v124[v133];
    uint64_t v150 = &v124[v132];
    v524 = &v124[v132];
    uint64_t v151 = &v124[v131];
    v525 = &v124[v131];
    v658 = *(void **)(v702 - 8);
    v624 = (void (*)(void))v658[2];
    v627 = v658 + 2;
    uint64_t v491 = a15;
    uint64_t v483 = a14;
    uint64_t v531 = a13;
    uint64_t v535 = a12;
    v539 = a11;
    v543 = a10;
    v548 = a9;
    uint64_t v152 = v702;
    ((void (*)(char *, char *))v624)(v124, v145);
    v677 = *(void **)(v693 - 8);
    v625 = (void (*)(char *, char *))v677[2];
    v630 = v677 + 2;
    v625(v151, v667);
    uint64_t v649 = *(void **)(v692 - 8);
    v153 = (void (*)(char *, char *, uint64_t))v649[2];
    v623 = v649 + 2;
    v626 = v153;
    ((void (*)(char *, char *))v153)(v150, v668);
    v618 = *(void **)(v697 - 8);
    v629 = (void (*)(char *, char *, uint64_t))v618[2];
    v633 = v618 + 2;
    v629(v149, v666, v697);
    v676 = *(void **)(v703 - 8);
    uint64_t v154 = (void (*)(char *, char *, uint64_t))v676[2];
    v622 = v676 + 2;
    v628 = v154;
    v154(v148, v669, v703);
    v675 = *(void **)(v696 - 8);
    v621 = (void (*)(char *, char *, uint64_t))v675[2];
    uint64_t v648 = (char *)(v675 + 2);
    v621(v147, v662, v696);
    v657 = *(void **)(v701 - 8);
    uint64_t v155 = (char *)v657[2];
    uint64_t v646 = (char *)(v657 + 2);
    uint64_t v647 = v155;
    ((void (*)(char *, char *, uint64_t))v155)(v146, v663, v701);
    v656 = *(void **)(v695 - 8);
    uint64_t v156 = (char *)v656[2];
    uint64_t v644 = (char *)(v656 + 2);
    uint64_t v645 = v156;
    ((void (*)(char *, char *, uint64_t))v156)(v592, v664, v695);
    v674 = *(void **)(v706 - 8);
    v620 = (void (*)(char *, char *, uint64_t))v674[2];
    uint64_t v643 = (void (*)(uint64_t, uint64_t, uint64_t))(v674 + 2);
    v620(v591, v665, v706);
    v654 = *(void **)(v700 - 8);
    uint64_t v157 = (char *)v654[2];
    uint64_t v641 = (char *)(v654 + 2);
    uint64_t v642 = v157;
    ((void (*)(char *, char *, uint64_t))v157)(v598, v661, v700);
    v653 = *(void **)(v705 - 8);
    v619 = (void (*)(char *, char *, uint64_t))v653[2];
    uint64_t v640 = v653 + 2;
    v619(v597, v659, v705);
    v673 = *(void **)(v699 - 8);
    uint64_t v158 = (void (*)(char *, char *, uint64_t))v673[2];
    uint64_t v638 = v673 + 2;
    uint64_t v639 = v158;
    v158(v596, v660, v699);
    v652 = *(void **)(v698 - 8);
    v632 = (void (*)(char *, char *, uint64_t))v652[2];
    uint64_t v637 = v652 + 2;
    v632(v595, v670, v698);
    uint64_t v651 = *(void **)(v694 - 8);
    uint64_t v159 = (void (*)(char *, char *, uint64_t))v651[2];
    v635 = v651 + 2;
    v636 = v159;
    v159(v594, v671, v694);
    v655 = *(void **)(v704 - 8);
    uint64_t v631 = (void (*)(char *, char *, uint64_t))v655[2];
    uint64_t v634 = v655 + 2;
    v631(v593, v672, v704);
    uint64_t v160 = (void (*)(char *, char *, uint64_t))v658[4];
    v474 = v658 + 4;
    v475 = v160;
    v160(v599, v124, v152);
    uint64_t v587 = &v617[*(int *)(v678 + 48)];
    uint64_t v588 = &v617[*((int *)v679 + 12)];
    uint64_t v589 = &v617[*((int *)v680 + 12)];
    uint64_t v590 = &v617[*((int *)v681 + 12)];
    v599 = &v617[*((int *)v682 + 12)];
    uint64_t v586 = &v617[*(int *)(v683 + 48)];
    v513 = &v617[*((int *)v684 + 12)];
    uint64_t v161 = v513;
    v514 = &v617[*((int *)v685 + 12)];
    uint64_t v162 = v514;
    v515 = &v617[*((int *)v686 + 12)];
    uint64_t v163 = v515;
    v516 = &v617[*(int *)(v687 + 48)];
    uint64_t v164 = v516;
    v517 = &v617[*(int *)(v688 + 48)];
    uint64_t v165 = v517;
    v518 = &v617[*((int *)v689 + 12)];
    uint64_t v166 = v518;
    v519 = &v617[*(int *)(v690 + 48)];
    uint64_t v167 = v519;
    uint64_t v168 = &v617[*(int *)(v691 + 48)];
    v624();
    uint64_t v169 = v693;
    ((void (*)(char *, char *, uint64_t))v625)(v168, v667, v693);
    v626(v167, v668, v692);
    v629(v166, v666, v697);
    v628(v165, v669, v703);
    v621(v164, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v163, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v162, v664, v695);
    v620(v161, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v586, v661, v700);
    v619(v599, v659, v705);
    v639(v590, v660, v699);
    v632(v589, v670, v698);
    v636(v588, v671, v694);
    v631(v587, v672, v704);
    uint64_t v170 = (void (*)(char *, char *, uint64_t))v677[4];
    v471 = v677 + 4;
    v472 = v170;
    uint64_t v171 = v169;
    v170(v600, v168, v169);
    uint64_t v583 = &v616[*(int *)(v678 + 48)];
    uint64_t v584 = &v616[*((int *)v679 + 12)];
    uint64_t v585 = &v616[*((int *)v680 + 12)];
    v600 = &v616[*((int *)v681 + 12)];
    uint64_t v581 = &v616[*((int *)v682 + 12)];
    uint64_t v582 = &v616[*(int *)(v683 + 48)];
    v506 = &v616[*((int *)v684 + 12)];
    uint64_t v172 = v506;
    v507 = &v616[*((int *)v685 + 12)];
    v173 = v507;
    v508 = &v616[*((int *)v686 + 12)];
    uint64_t v174 = v508;
    v509 = &v616[*(int *)(v687 + 48)];
    uint64_t v175 = v509;
    v510 = &v616[*(int *)(v688 + 48)];
    uint64_t v176 = v510;
    v511 = &v616[*((int *)v689 + 12)];
    uint64_t v177 = v511;
    uint64_t v178 = &v616[*(int *)(v690 + 48)];
    v512 = &v616[*(int *)(v691 + 48)];
    uint64_t v179 = v512;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v179, v667, v171);
    uint64_t v180 = v692;
    v626(v178, v668, v692);
    v629(v177, v666, v697);
    v628(v176, v669, v703);
    v621(v175, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v174, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v173, v664, v695);
    v620(v172, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v582, v661, v700);
    v619(v581, v659, v705);
    v639(v600, v660, v699);
    v632(v585, v670, v698);
    v636(v584, v671, v694);
    v631(v583, v672, v704);
    v181 = (void (*)(char *, char *, uint64_t))v649[4];
    v463 = v649 + 4;
    v464 = v181;
    v181(v601, v178, v180);
    uint64_t v577 = &v580[*(int *)(v678 + 48)];
    v578 = &v580[*((int *)v679 + 12)];
    uint64_t v579 = &v580[*((int *)v680 + 12)];
    v601 = &v580[*((int *)v681 + 12)];
    v575 = &v580[*((int *)v682 + 12)];
    v576 = &v580[*(int *)(v683 + 48)];
    v499 = &v580[*((int *)v684 + 12)];
    uint64_t v182 = v499;
    v500 = &v580[*((int *)v685 + 12)];
    v183 = v500;
    v501 = &v580[*((int *)v686 + 12)];
    uint64_t v184 = v501;
    v502 = &v580[*(int *)(v687 + 48)];
    uint64_t v185 = v502;
    v503 = &v580[*(int *)(v688 + 48)];
    uint64_t v186 = v503;
    uint64_t v187 = &v580[*((int *)v689 + 12)];
    v504 = &v580[*(int *)(v690 + 48)];
    uint64_t v188 = v504;
    v505 = &v580[*(int *)(v691 + 48)];
    uint64_t v189 = v505;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v189, v667, v693);
    v626(v188, v668, v180);
    uint64_t v190 = v697;
    v629(v187, v666, v697);
    v628(v186, v669, v703);
    v621(v185, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v184, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v183, v664, v695);
    v620(v182, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v576, v661, v700);
    v619(v575, v659, v705);
    v639(v601, v660, v699);
    v632(v579, v670, v698);
    v636(v578, v671, v694);
    v631(v577, v672, v704);
    uint64_t v191 = (void (*)(char *, char *, uint64_t))v618[4];
    v456 = v618 + 4;
    uint64_t v457 = v191;
    uint64_t v192 = v190;
    v191(v602, v187, v190);
    v571 = &v574[*(int *)(v678 + 48)];
    v572 = &v574[*((int *)v679 + 12)];
    v573 = &v574[*((int *)v680 + 12)];
    v602 = &v574[*((int *)v681 + 12)];
    v569 = &v574[*((int *)v682 + 12)];
    v570 = &v574[*(int *)(v683 + 48)];
    v492 = &v574[*((int *)v684 + 12)];
    uint64_t v193 = v492;
    v493 = &v574[*((int *)v685 + 12)];
    uint64_t v194 = v493;
    uint64_t v494 = &v574[*((int *)v686 + 12)];
    v195 = v494;
    v495 = &v574[*(int *)(v687 + 48)];
    uint64_t v196 = v495;
    uint64_t v197 = &v574[*(int *)(v688 + 48)];
    v496 = &v574[*((int *)v689 + 12)];
    uint64_t v198 = v496;
    v497 = &v574[*(int *)(v690 + 48)];
    uint64_t v199 = v497;
    v498 = &v574[*(int *)(v691 + 48)];
    uint64_t v200 = v498;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v200, v667, v693);
    v626(v199, v668, v692);
    v629(v198, v666, v192);
    uint64_t v201 = v703;
    v628(v197, v669, v703);
    v621(v196, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v195, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v194, v664, v695);
    v620(v193, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v570, v661, v700);
    v619(v569, v659, v705);
    v639(v602, v660, v699);
    v632(v573, v670, v698);
    v636(v572, v671, v694);
    v631(v571, v672, v704);
    uint64_t v202 = (void (*)(char *, char *, uint64_t))v676[4];
    v451 = v676 + 4;
    v452 = v202;
    uint64_t v203 = v201;
    v202(v603, v197, v201);
    v565 = &v568[*(int *)(v678 + 48)];
    v566 = &v568[*((int *)v679 + 12)];
    v567 = &v568[*((int *)v680 + 12)];
    v603 = &v568[*((int *)v681 + 12)];
    v563 = &v568[*((int *)v682 + 12)];
    v564 = &v568[*(int *)(v683 + 48)];
    uint64_t v484 = &v568[*((int *)v684 + 12)];
    uint64_t v204 = v484;
    uint64_t v485 = &v568[*((int *)v685 + 12)];
    v205 = v485;
    uint64_t v486 = &v568[*((int *)v686 + 12)];
    uint64_t v206 = v486;
    uint64_t v207 = &v568[*(int *)(v687 + 48)];
    v487 = &v568[*(int *)(v688 + 48)];
    uint64_t v208 = v487;
    v488 = &v568[*((int *)v689 + 12)];
    uint64_t v209 = v488;
    v489 = &v568[*(int *)(v690 + 48)];
    uint64_t v210 = v489;
    v490 = &v568[*(int *)(v691 + 48)];
    uint64_t v211 = v490;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v211, v667, v693);
    v626(v210, v668, v692);
    v629(v209, v666, v697);
    v628(v208, v669, v203);
    uint64_t v212 = v696;
    v621(v207, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v206, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v205, v664, v695);
    v620(v204, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v564, v661, v700);
    v619(v563, v659, v705);
    v639(v603, v660, v699);
    v632(v567, v670, v698);
    v636(v566, v671, v694);
    v631(v565, v672, v704);
    uint64_t v213 = (void (*)(char *, char *, uint64_t))v675[4];
    v441 = v675 + 4;
    v442 = v213;
    uint64_t v214 = v212;
    v213(v604, v207, v212);
    v560 = &v615[*(int *)(v678 + 48)];
    v561 = &v615[*((int *)v679 + 12)];
    v562 = &v615[*((int *)v680 + 12)];
    v604 = &v615[*((int *)v681 + 12)];
    v558 = &v615[*((int *)v682 + 12)];
    v559 = &v615[*(int *)(v683 + 48)];
    uint64_t v476 = &v615[*((int *)v684 + 12)];
    uint64_t v215 = v476;
    uint64_t v477 = &v615[*((int *)v685 + 12)];
    v216 = v477;
    uint64_t v217 = &v615[*((int *)v686 + 12)];
    uint64_t v478 = &v615[*(int *)(v687 + 48)];
    uint64_t v218 = v478;
    uint64_t v479 = &v615[*(int *)(v688 + 48)];
    uint64_t v219 = v479;
    uint64_t v480 = &v615[*((int *)v689 + 12)];
    v220 = v480;
    uint64_t v481 = &v615[*(int *)(v690 + 48)];
    uint64_t v221 = v481;
    uint64_t v482 = &v615[*(int *)(v691 + 48)];
    uint64_t v222 = v482;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v222, v667, v693);
    v626(v221, v668, v692);
    v629(v220, v666, v697);
    v628(v219, v669, v703);
    v621(v218, v662, v214);
    uint64_t v223 = v701;
    ((void (*)(char *, char *, uint64_t))v647)(v217, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v216, v664, v695);
    v620(v215, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v559, v661, v700);
    v619(v558, v659, v705);
    v639(v604, v660, v699);
    v632(v562, v670, v698);
    v636(v561, v671, v694);
    v631(v560, v672, v704);
    uint64_t v224 = (void (*)(char *, char *, uint64_t))v657[4];
    v437 = v657 + 4;
    v438 = v224;
    v224(v605, v217, v223);
    v554 = &v614[*(int *)(v678 + 48)];
    v555 = &v614[*((int *)v679 + 12)];
    v556 = &v614[*((int *)v680 + 12)];
    v557 = &v614[*((int *)v681 + 12)];
    v605 = &v614[*((int *)v682 + 12)];
    v553 = &v614[*(int *)(v683 + 48)];
    v465 = &v614[*((int *)v684 + 12)];
    uint64_t v225 = v465;
    uint64_t v226 = &v614[*((int *)v685 + 12)];
    v466 = &v614[*((int *)v686 + 12)];
    uint64_t v227 = v466;
    v467 = &v614[*(int *)(v687 + 48)];
    uint64_t v228 = v467;
    uint64_t v468 = &v614[*(int *)(v688 + 48)];
    uint64_t v229 = v468;
    v469 = &v614[*((int *)v689 + 12)];
    uint64_t v230 = v469;
    v470 = &v614[*(int *)(v690 + 48)];
    uint64_t v231 = v470;
    v473 = &v614[*(int *)(v691 + 48)];
    uint64_t v232 = v473;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v232, v667, v693);
    v626(v231, v668, v692);
    v629(v230, v666, v697);
    v628(v229, v669, v703);
    v621(v228, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v227, v663, v223);
    uint64_t v233 = v695;
    ((void (*)(char *, char *, uint64_t))v645)(v226, v664, v695);
    v620(v225, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v553, v661, v700);
    v619(v605, v659, v705);
    v639(v557, v660, v699);
    v632(v556, v670, v698);
    v636(v555, v671, v694);
    v631(v554, v672, v704);
    uint64_t v234 = (void (*)(char *, char *, uint64_t))v656[4];
    v428 = v656 + 4;
    v429 = v234;
    uint64_t v235 = v233;
    v234(v606, v226, v233);
    v550 = &v613[*(int *)(v678 + 48)];
    v551 = &v613[*((int *)v679 + 12)];
    v552 = &v613[*((int *)v680 + 12)];
    v606 = &v613[*((int *)v681 + 12)];
    v549 = &v613[*((int *)v682 + 12)];
    v453 = &v613[*(int *)(v683 + 48)];
    uint64_t v236 = v453;
    v547 = &v613[*((int *)v684 + 12)];
    v454 = &v613[*((int *)v685 + 12)];
    v237 = v454;
    v455 = &v613[*((int *)v686 + 12)];
    uint64_t v238 = v455;
    uint64_t v458 = &v613[*(int *)(v687 + 48)];
    uint64_t v239 = v458;
    v459 = &v613[*(int *)(v688 + 48)];
    uint64_t v240 = v459;
    v460 = &v613[*((int *)v689 + 12)];
    uint64_t v241 = v460;
    v461 = &v613[*(int *)(v690 + 48)];
    uint64_t v242 = v461;
    v462 = &v613[*(int *)(v691 + 48)];
    v243 = v462;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v243, v667, v693);
    v626(v242, v668, v692);
    v629(v241, v666, v697);
    v628(v240, v669, v703);
    v621(v239, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v238, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v237, v664, v235);
    uint64_t v244 = v547;
    uint64_t v245 = v706;
    v620(v547, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v236, v661, v700);
    v619(v549, v659, v705);
    v639(v606, v660, v699);
    v632(v552, v670, v698);
    v636(v551, v671, v694);
    v631(v550, v672, v704);
    uint64_t v246 = (void (*)(char *, char *, uint64_t))v674[4];
    uint64_t v420 = v674 + 4;
    uint64_t v421 = v246;
    v246(v548, v244, v245);
    v545 = &v612[*(int *)(v678 + 48)];
    v546 = &v612[*((int *)v679 + 12)];
    v547 = &v612[*((int *)v680 + 12)];
    v548 = &v612[*((int *)v681 + 12)];
    v544 = &v612[*((int *)v682 + 12)];
    v247 = &v612[*(int *)(v683 + 48)];
    v443 = &v612[*((int *)v684 + 12)];
    uint64_t v248 = v443;
    v444 = &v612[*((int *)v685 + 12)];
    uint64_t v249 = v444;
    v445 = &v612[*((int *)v686 + 12)];
    uint64_t v250 = v445;
    v446 = &v612[*(int *)(v687 + 48)];
    uint64_t v251 = v446;
    v447 = &v612[*(int *)(v688 + 48)];
    uint64_t v252 = v447;
    v448 = &v612[*((int *)v689 + 12)];
    uint64_t v253 = v448;
    v449 = &v612[*(int *)(v690 + 48)];
    uint64_t v254 = v449;
    v450 = &v612[*(int *)(v691 + 48)];
    uint64_t v255 = v450;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v255, v667, v693);
    v626(v254, v668, v692);
    v629(v253, v666, v697);
    v628(v252, v669, v703);
    v621(v251, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v250, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v249, v664, v695);
    v620(v248, v665, v706);
    uint64_t v256 = v700;
    ((void (*)(char *, char *, uint64_t))v642)(v247, v661, v700);
    v619(v544, v659, v705);
    v639(v548, v660, v699);
    v632(v547, v670, v698);
    v636(v546, v671, v694);
    v631(v545, v672, v704);
    uint64_t v257 = (void (*)(char *, char *, uint64_t))v654[4];
    v415 = v654 + 4;
    uint64_t v416 = v257;
    v257(v543, v247, v256);
    v540 = &v611[*(int *)(v678 + 48)];
    v541 = &v611[*((int *)v679 + 12)];
    v542 = &v611[*((int *)v680 + 12)];
    v543 = &v611[*((int *)v681 + 12)];
    v538 = &v611[*((int *)v682 + 12)];
    v430 = &v611[*(int *)(v683 + 48)];
    uint64_t v258 = v430;
    v431 = &v611[*((int *)v684 + 12)];
    v259 = v431;
    v432 = &v611[*((int *)v685 + 12)];
    uint64_t v260 = v432;
    v433 = &v611[*((int *)v686 + 12)];
    uint64_t v261 = v433;
    v434 = &v611[*(int *)(v687 + 48)];
    uint64_t v262 = v434;
    v435 = &v611[*(int *)(v688 + 48)];
    uint64_t v263 = v435;
    v436 = &v611[*((int *)v689 + 12)];
    uint64_t v264 = v436;
    v439 = &v611[*(int *)(v690 + 48)];
    uint64_t v265 = v439;
    v440 = &v611[*(int *)(v691 + 48)];
    uint64_t v266 = v440;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v266, v667, v693);
    v626(v265, v668, v692);
    v629(v264, v666, v697);
    v628(v263, v669, v703);
    v621(v262, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v261, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v260, v664, v695);
    v620(v259, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v258, v661, v700);
    uint64_t v267 = v538;
    uint64_t v268 = v705;
    v619(v538, v659, v705);
    v639(v543, v660, v699);
    v632(v542, v670, v698);
    v636(v541, v671, v694);
    v631(v540, v672, v704);
    uint64_t v269 = (void (*)(char *, char *, uint64_t))v653[4];
    v404 = v653 + 4;
    v405 = v269;
    v269(v539, v267, v268);
    uint64_t v536 = &v610[*(int *)(v678 + 48)];
    uint64_t v537 = &v610[*((int *)v679 + 12)];
    v538 = &v610[*((int *)v680 + 12)];
    uint64_t v534 = &v610[*((int *)v681 + 12)];
    v539 = &v610[*((int *)v682 + 12)];
    uint64_t v417 = &v610[*(int *)(v683 + 48)];
    v270 = v417;
    uint64_t v418 = &v610[*((int *)v684 + 12)];
    uint64_t v271 = v418;
    uint64_t v419 = &v610[*((int *)v685 + 12)];
    uint64_t v272 = v419;
    uint64_t v422 = &v610[*((int *)v686 + 12)];
    uint64_t v273 = v422;
    uint64_t v423 = &v610[*(int *)(v687 + 48)];
    uint64_t v274 = v423;
    uint64_t v424 = &v610[*(int *)(v688 + 48)];
    uint64_t v275 = v424;
    uint64_t v425 = &v610[*((int *)v689 + 12)];
    v276 = v425;
    uint64_t v426 = &v610[*(int *)(v690 + 48)];
    uint64_t v277 = v426;
    v427 = &v610[*(int *)(v691 + 48)];
    uint64_t v278 = v427;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v278, v667, v693);
    v626(v277, v668, v692);
    v629(v276, v666, v697);
    v628(v275, v669, v703);
    v621(v274, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v273, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v272, v664, v695);
    v620(v271, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v270, v661, v700);
    v619(v539, v659, v705);
    uint64_t v279 = v534;
    uint64_t v280 = v699;
    v639(v534, v660, v699);
    v632(v538, v670, v698);
    v636(v537, v671, v694);
    v631(v536, v672, v704);
    uint64_t v281 = (void (*)(char *, char *, uint64_t))v673[4];
    v399 = v673 + 4;
    v400 = v281;
    v281(v535, v279, v280);
    uint64_t v532 = &v609[*(int *)(v678 + 48)];
    uint64_t v533 = &v609[*((int *)v679 + 12)];
    uint64_t v530 = &v609[*((int *)v680 + 12)];
    uint64_t v534 = &v609[*((int *)v681 + 12)];
    uint64_t v535 = &v609[*((int *)v682 + 12)];
    v406 = &v609[*(int *)(v683 + 48)];
    uint64_t v282 = v406;
    v407 = &v609[*((int *)v684 + 12)];
    uint64_t v283 = v407;
    v408 = &v609[*((int *)v685 + 12)];
    uint64_t v284 = v408;
    uint64_t v409 = &v609[*((int *)v686 + 12)];
    uint64_t v285 = v409;
    uint64_t v410 = &v609[*(int *)(v687 + 48)];
    uint64_t v286 = v410;
    v411 = &v609[*(int *)(v688 + 48)];
    uint64_t v287 = v411;
    v412 = &v609[*((int *)v689 + 12)];
    uint64_t v288 = v412;
    v413 = &v609[*(int *)(v690 + 48)];
    uint64_t v289 = v413;
    v414 = &v609[*(int *)(v691 + 48)];
    uint64_t v290 = v414;
    v624();
    uint64_t v291 = v290;
    uint64_t v292 = v693;
    ((void (*)(char *, char *, uint64_t))v625)(v291, v667, v693);
    v626(v289, v668, v692);
    v629(v288, v666, v697);
    v628(v287, v669, v703);
    v621(v286, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v285, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v284, v664, v695);
    v620(v283, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v282, v661, v700);
    v619(v535, v659, v705);
    v639(v534, v660, v699);
    uint64_t v293 = v530;
    uint64_t v294 = v698;
    v632(v530, v670, v698);
    v636(v533, v671, v694);
    v631(v532, v672, v704);
    uint64_t v295 = (void (*)(char *, char *, uint64_t))v652[4];
    v392[1] = v652 + 4;
    uint64_t v393 = v295;
    v295(v531, v293, v294);
    uint64_t v527 = &v608[*(int *)(v678 + 48)];
    v392[0] = &v608[*((int *)v679 + 12)];
    uint64_t v528 = &v608[*((int *)v680 + 12)];
    uint64_t v529 = &v608[*((int *)v681 + 12)];
    uint64_t v530 = &v608[*((int *)v682 + 12)];
    uint64_t v531 = &v608[*(int *)(v683 + 48)];
    v394 = &v608[*((int *)v684 + 12)];
    uint64_t v296 = v394;
    v395 = &v608[*((int *)v685 + 12)];
    uint64_t v297 = v395;
    v396 = &v608[*((int *)v686 + 12)];
    uint64_t v298 = v396;
    v397 = &v608[*(int *)(v687 + 48)];
    uint64_t v299 = v397;
    v398 = &v608[*(int *)(v688 + 48)];
    v300 = v398;
    v401 = &v608[*((int *)v689 + 12)];
    uint64_t v301 = v401;
    v402 = &v608[*(int *)(v690 + 48)];
    uint64_t v302 = v402;
    v403 = &v608[*(int *)(v691 + 48)];
    v303 = v403;
    v624();
    ((void (*)(char *, char *, uint64_t))v625)(v303, v667, v292);
    v626(v302, v668, v692);
    v629(v301, v666, v697);
    v628(v300, v669, v703);
    v621(v299, v662, v696);
    ((void (*)(char *, char *, uint64_t))v647)(v298, v663, v701);
    ((void (*)(char *, char *, uint64_t))v645)(v297, v664, v695);
    v620(v296, v665, v706);
    ((void (*)(char *, char *, uint64_t))v642)(v531, v661, v700);
    v619(v530, v659, v705);
    v639(v529, v660, v699);
    v632(v528, v670, v698);
    uint64_t v304 = v392[0];
    uint64_t v305 = v694;
    v636((char *)v392[0], v671, v694);
    v631(v527, v672, v704);
    uint64_t v643 = (void (*)(uint64_t, uint64_t, uint64_t))v651[4];
    v643(v483, v304, v305);
    uint64_t v306 = v607;
    uint64_t v678 = (uint64_t)&v607[*(int *)(v678 + 48)];
    uint64_t v642 = &v607[*((int *)v679 + 12)];
    v679 = &v607[*((int *)v680 + 12)];
    v680 = &v607[*((int *)v681 + 12)];
    v681 = &v607[*((int *)v682 + 12)];
    v682 = &v607[*(int *)(v683 + 48)];
    v684 = &v607[*((int *)v684 + 12)];
    uint64_t v641 = &v607[*((int *)v685 + 12)];
    v307 = v641;
    uint64_t v644 = &v607[*((int *)v686 + 12)];
    uint64_t v308 = v644;
    uint64_t v645 = &v607[*(int *)(v687 + 48)];
    uint64_t v309 = v645;
    uint64_t v646 = &v607[*(int *)(v688 + 48)];
    uint64_t v310 = v646;
    v689 = &v607[*((int *)v689 + 12)];
    uint64_t v311 = v689;
    uint64_t v647 = &v607[*(int *)(v690 + 48)];
    uint64_t v312 = v647;
    uint64_t v648 = &v607[*(int *)(v691 + 48)];
    uint64_t v313 = v648;
    v475(v607, v650, v702);
    v472(v313, v667, v693);
    v464(v312, v668, v692);
    v457(v311, v666, v697);
    v452(v310, v669, v703);
    v442(v309, v662, v696);
    v438(v308, v663, v701);
    v429(v307, v664, v695);
    v421(v684, v665, v706);
    v416(v682, v661, v700);
    v405(v681, v659, v705);
    uint64_t v314 = v699;
    v400(v680, v660, v699);
    uint64_t v315 = v698;
    v393(v679, v670, v698);
    uint64_t v316 = v642;
    uint64_t v317 = v694;
    v643((uint64_t)v642, (uint64_t)v671, v694);
    uint64_t v318 = (void (*)(uint64_t, char *, uint64_t))v655[4];
    uint64_t v319 = v678;
    uint64_t v320 = v704;
    v318(v678, v672, v704);
    v318(v491, (char *)v319, v320);
    uint64_t v683 = v651[1];
    ++v651;
    ((void (*)(char *, uint64_t))v683)(v316, v317);
    uint64_t v321 = (int *)v652[1];
    ++v652;
    v686 = (void (*)(char *, uint64_t))v321;
    ((void (*)(char *, uint64_t))v321)(v679, v315);
    uint64_t v687 = v673[1];
    ++v673;
    ((void (*)(char *, uint64_t))v687)(v680, v314);
    uint64_t v322 = (void (*)(char *, uint64_t))v653[1];
    ++v653;
    v322(v681, v705);
    uint64_t v323 = v322;
    v672 = (char *)v322;
    uint64_t v324 = (int *)v654[1];
    ++v654;
    v685 = (void (*)(char *, uint64_t))v324;
    ((void (*)(char *, uint64_t))v324)(v682, v700);
    uint64_t v690 = v674[1];
    ++v674;
    ((void (*)(char *, uint64_t))v690)(v684, v706);
    uint64_t v325 = (void (*)(char *, uint64_t))v656[1];
    ++v656;
    uint64_t v326 = v695;
    v325(v641, v695);
    uint64_t v327 = (char *)v657[1];
    ++v657;
    v680 = v327;
    ((void (*)(char *, uint64_t))v327)(v644, v701);
    uint64_t v691 = v675[1];
    ++v675;
    ((void (*)(char *, uint64_t))v691)(v645, v696);
    uint64_t v688 = v676[1];
    ++v676;
    ((void (*)(char *, uint64_t))v688)(v646, v703);
    v328 = (char *)v618[1];
    ++v618;
    uint64_t v329 = v697;
    ((void (*)(char *, uint64_t))v328)(v689, v697);
    uint64_t v330 = (char *)v649[1];
    ++v649;
    v689 = v330;
    ((void (*)(char *, uint64_t))v330)(v647, v692);
    v684 = (char *)v677[1];
    ++v677;
    ((void (*)(char *, uint64_t))v684)(v648, v693);
    uint64_t v331 = (char *)v658[1];
    ++v658;
    v682 = v331;
    uint64_t v332 = v702;
    ((void (*)(char *, uint64_t))v331)(v306, v702);
    uint64_t v333 = (char *)v655[1];
    ++v655;
    v681 = v333;
    ((void (*)(char *, uint64_t))v333)(v527, v704);
    v686(v528, v698);
    ((void (*)(char *, uint64_t))v687)(v529, v699);
    v323(v530, v705);
    uint64_t v334 = v700;
    v685(v531, v700);
    uint64_t v335 = v706;
    ((void (*)(char *, uint64_t))v690)(v394, v706);
    uint64_t v678 = (uint64_t)v325;
    v325(v395, v326);
    uint64_t v336 = v701;
    ((void (*)(char *, uint64_t))v680)(v396, v701);
    ((void (*)(char *, uint64_t))v691)(v397, v696);
    ((void (*)(char *, uint64_t))v688)(v398, v703);
    v679 = v328;
    ((void (*)(char *, uint64_t))v328)(v401, v329);
    ((void (*)(char *, uint64_t))v689)(v402, v692);
    ((void (*)(char *, uint64_t))v684)(v403, v693);
    ((void (*)(char *, uint64_t))v682)(v608, v332);
    ((void (*)(char *, uint64_t))v681)(v532, v704);
    ((void (*)(char *, uint64_t))v683)(v533, v694);
    ((void (*)(char *, uint64_t))v687)(v534, v699);
    ((void (*)(char *, uint64_t))v672)(v535, v705);
    v685(v406, v334);
    ((void (*)(char *, uint64_t))v690)(v407, v335);
    uint64_t v337 = v695;
    v325(v408, v695);
    ((void (*)(char *, uint64_t))v680)(v409, v336);
    uint64_t v338 = v696;
    ((void (*)(char *, uint64_t))v691)(v410, v696);
    ((void (*)(char *, uint64_t))v688)(v411, v703);
    uint64_t v339 = v697;
    ((void (*)(char *, uint64_t))v328)(v412, v697);
    uint64_t v340 = v692;
    ((void (*)(char *, uint64_t))v689)(v413, v692);
    ((void (*)(char *, uint64_t))v684)(v414, v693);
    ((void (*)(char *, uint64_t))v682)(v609, v702);
    ((void (*)(char *, uint64_t))v681)(v536, v704);
    ((void (*)(char *, uint64_t))v683)(v537, v694);
    v686(v538, v698);
    ((void (*)(char *, uint64_t))v672)(v539, v705);
    uint64_t v341 = v700;
    v685(v417, v700);
    ((void (*)(char *, uint64_t))v690)(v418, v706);
    ((void (*)(char *, uint64_t))v678)(v419, v337);
    ((void (*)(char *, uint64_t))v680)(v422, v701);
    ((void (*)(char *, uint64_t))v691)(v423, v338);
    ((void (*)(char *, uint64_t))v688)(v424, v703);
    ((void (*)(char *, uint64_t))v679)(v425, v339);
    ((void (*)(char *, uint64_t))v689)(v426, v340);
    uint64_t v342 = v693;
    v343 = v684;
    ((void (*)(char *, uint64_t))v684)(v427, v693);
    ((void (*)(char *, uint64_t))v682)(v610, v702);
    uint64_t v344 = v704;
    ((void (*)(char *, uint64_t))v681)(v540, v704);
    uint64_t v345 = v694;
    ((void (*)(char *, uint64_t))v683)(v541, v694);
    v686(v542, v698);
    uint64_t v346 = v699;
    uint64_t v347 = (void (*)(char *, uint64_t))v687;
    ((void (*)(char *, uint64_t))v687)(v543, v699);
    v685(v430, v341);
    ((void (*)(char *, uint64_t))v690)(v431, v706);
    ((void (*)(char *, uint64_t))v678)(v432, v695);
    uint64_t v348 = v680;
    ((void (*)(char *, uint64_t))v680)(v433, v701);
    ((void (*)(char *, uint64_t))v691)(v434, v696);
    uint64_t v349 = v703;
    ((void (*)(char *, uint64_t))v688)(v435, v703);
    ((void (*)(char *, uint64_t))v679)(v436, v697);
    ((void (*)(char *, uint64_t))v689)(v439, v692);
    ((void (*)(char *, uint64_t))v343)(v440, v342);
    v350 = v682;
    ((void (*)(char *, uint64_t))v682)(v611, v702);
    ((void (*)(char *, uint64_t))v681)(v545, v344);
    v351 = (void (*)(char *, uint64_t))v683;
    ((void (*)(char *, uint64_t))v683)(v546, v345);
    uint64_t v352 = v698;
    v686(v547, v698);
    v347(v548, v346);
    uint64_t v353 = v705;
    ((void (*)(char *, uint64_t))v672)(v544, v705);
    ((void (*)(char *, uint64_t))v690)(v443, v706);
    ((void (*)(char *, uint64_t))v678)(v444, v695);
    ((void (*)(char *, uint64_t))v348)(v445, v701);
    ((void (*)(char *, uint64_t))v691)(v446, v696);
    ((void (*)(char *, uint64_t))v688)(v447, v349);
    ((void (*)(char *, uint64_t))v679)(v448, v697);
    ((void (*)(char *, uint64_t))v689)(v449, v692);
    ((void (*)(char *, uint64_t))v684)(v450, v693);
    ((void (*)(char *, uint64_t))v350)(v612, v702);
    uint64_t v354 = v681;
    ((void (*)(char *, uint64_t))v681)(v550, v704);
    v351(v551, v345);
    uint64_t v355 = v686;
    v686(v552, v352);
    ((void (*)(char *, uint64_t))v687)(v606, v699);
    uint64_t v356 = v672;
    ((void (*)(char *, uint64_t))v672)(v549, v353);
    uint64_t v357 = v685;
    v685(v453, v700);
    ((void (*)(char *, uint64_t))v678)(v454, v695);
    ((void (*)(char *, uint64_t))v680)(v455, v701);
    uint64_t v358 = v696;
    ((void (*)(char *, uint64_t))v691)(v458, v696);
    ((void (*)(char *, uint64_t))v688)(v459, v703);
    ((void (*)(char *, uint64_t))v679)(v460, v697);
    ((void (*)(char *, uint64_t))v689)(v461, v692);
    ((void (*)(char *, uint64_t))v684)(v462, v693);
    ((void (*)(char *, uint64_t))v682)(v613, v702);
    ((void (*)(char *, uint64_t))v354)(v554, v704);
    ((void (*)(char *, uint64_t))v683)(v555, v694);
    v355(v556, v698);
    uint64_t v359 = v699;
    ((void (*)(char *, uint64_t))v687)(v557, v699);
    ((void (*)(char *, uint64_t))v356)(v605, v353);
    v357(v553, v700);
    uint64_t v360 = v706;
    v361 = (void (*)(char *, uint64_t))v690;
    ((void (*)(char *, uint64_t))v690)(v465, v706);
    ((void (*)(char *, uint64_t))v680)(v466, v701);
    uint64_t v362 = (void (*)(char *, uint64_t))v691;
    ((void (*)(char *, uint64_t))v691)(v467, v358);
    uint64_t v363 = (void (*)(char *, uint64_t))v688;
    ((void (*)(char *, uint64_t))v688)(v468, v703);
    ((void (*)(char *, uint64_t))v679)(v469, v697);
    uint64_t v364 = v692;
    ((void (*)(char *, uint64_t))v689)(v470, v692);
    ((void (*)(char *, uint64_t))v684)(v473, v693);
    ((void (*)(char *, uint64_t))v682)(v614, v702);
    ((void (*)(char *, uint64_t))v681)(v560, v704);
    ((void (*)(char *, uint64_t))v683)(v561, v694);
    v686(v562, v698);
    ((void (*)(char *, uint64_t))v687)(v604, v359);
    ((void (*)(char *, uint64_t))v672)(v558, v705);
    v685(v559, v700);
    v361(v476, v360);
    uint64_t v365 = v695;
    v366 = (void (*)(char *, uint64_t))v678;
    ((void (*)(char *, uint64_t))v678)(v477, v695);
    v362(v478, v696);
    v363(v479, v703);
    ((void (*)(char *, uint64_t))v679)(v480, v697);
    uint64_t v367 = v689;
    ((void (*)(char *, uint64_t))v689)(v481, v364);
    ((void (*)(char *, uint64_t))v684)(v482, v693);
    ((void (*)(char *, uint64_t))v682)(v615, v702);
    ((void (*)(char *, uint64_t))v681)(v565, v704);
    ((void (*)(char *, uint64_t))v683)(v566, v694);
    v686(v567, v698);
    ((void (*)(char *, uint64_t))v687)(v603, v699);
    ((void (*)(char *, uint64_t))v672)(v563, v705);
    uint64_t v368 = v700;
    v685(v564, v700);
    ((void (*)(char *, uint64_t))v690)(v484, v706);
    v366(v485, v365);
    uint64_t v369 = v701;
    uint64_t v370 = v680;
    ((void (*)(char *, uint64_t))v680)(v486, v701);
    ((void (*)(char *, uint64_t))v688)(v487, v703);
    uint64_t v371 = v679;
    ((void (*)(char *, uint64_t))v679)(v488, v697);
    ((void (*)(char *, uint64_t))v367)(v489, v692);
    ((void (*)(char *, uint64_t))v684)(v490, v693);
    uint64_t v372 = v702;
    ((void (*)(char *, uint64_t))v682)(v568, v702);
    ((void (*)(char *, uint64_t))v681)(v571, v704);
    ((void (*)(char *, uint64_t))v683)(v572, v694);
    v686(v573, v698);
    ((void (*)(char *, uint64_t))v687)(v602, v699);
    ((void (*)(char *, uint64_t))v672)(v569, v705);
    v685(v570, v368);
    ((void (*)(char *, uint64_t))v690)(v492, v706);
    ((void (*)(char *, uint64_t))v678)(v493, v695);
    ((void (*)(char *, uint64_t))v370)(v494, v369);
    uint64_t v373 = v696;
    ((void (*)(char *, uint64_t))v691)(v495, v696);
    ((void (*)(char *, uint64_t))v371)(v496, v697);
    ((void (*)(char *, uint64_t))v689)(v497, v692);
    uint64_t v374 = v693;
    uint64_t v375 = v684;
    ((void (*)(char *, uint64_t))v684)(v498, v693);
    ((void (*)(char *, uint64_t))v682)(v574, v372);
    uint64_t v376 = v704;
    uint64_t v377 = v681;
    ((void (*)(char *, uint64_t))v681)(v577, v704);
    ((void (*)(char *, uint64_t))v683)(v578, v694);
    v686(v579, v698);
    ((void (*)(char *, uint64_t))v687)(v601, v699);
    ((void (*)(char *, uint64_t))v672)(v575, v705);
    v685(v576, v700);
    ((void (*)(char *, uint64_t))v690)(v499, v706);
    ((void (*)(char *, uint64_t))v678)(v500, v695);
    ((void (*)(char *, uint64_t))v680)(v501, v701);
    ((void (*)(char *, uint64_t))v691)(v502, v373);
    uint64_t v378 = v703;
    ((void (*)(char *, uint64_t))v688)(v503, v703);
    ((void (*)(char *, uint64_t))v689)(v504, v692);
    ((void (*)(char *, uint64_t))v375)(v505, v374);
    v379 = v682;
    ((void (*)(char *, uint64_t))v682)(v580, v702);
    ((void (*)(char *, uint64_t))v377)(v583, v376);
    uint64_t v380 = v694;
    uint64_t v381 = (void (*)(char *, uint64_t))v683;
    ((void (*)(char *, uint64_t))v683)(v584, v694);
    uint64_t v382 = v698;
    v686(v585, v698);
    v383 = (void (*)(char *, uint64_t))v687;
    ((void (*)(char *, uint64_t))v687)(v600, v699);
    ((void (*)(char *, uint64_t))v672)(v581, v705);
    v685(v582, v700);
    ((void (*)(char *, uint64_t))v690)(v506, v706);
    ((void (*)(char *, uint64_t))v678)(v507, v695);
    ((void (*)(char *, uint64_t))v680)(v508, v701);
    ((void (*)(char *, uint64_t))v691)(v509, v696);
    uint64_t v384 = v378;
    v385 = (void (*)(char *, uint64_t))v688;
    ((void (*)(char *, uint64_t))v688)(v510, v384);
    uint64_t v386 = v697;
    ((void (*)(char *, uint64_t))v679)(v511, v697);
    ((void (*)(char *, uint64_t))v684)(v512, v693);
    ((void (*)(char *, uint64_t))v379)(v616, v702);
    ((void (*)(char *, uint64_t))v681)(v587, v704);
    v381(v588, v380);
    v387 = v686;
    v686(v589, v382);
    v383(v590, v699);
    v388 = v672;
    ((void (*)(char *, uint64_t))v672)(v599, v705);
    v389 = v685;
    v685(v586, v700);
    ((void (*)(char *, uint64_t))v690)(v513, v706);
    ((void (*)(char *, uint64_t))v678)(v514, v695);
    ((void (*)(char *, uint64_t))v680)(v515, v701);
    ((void (*)(char *, uint64_t))v691)(v516, v696);
    v385(v517, v703);
    ((void (*)(char *, uint64_t))v679)(v518, v386);
    uint64_t v390 = v692;
    v391 = v689;
    ((void (*)(char *, uint64_t))v689)(v519, v692);
    ((void (*)(char *, uint64_t))v682)(v617, v702);
    ((void (*)(char *, uint64_t))v681)(v593, v704);
    ((void (*)(char *, uint64_t))v683)(v594, v694);
    v387(v595, v698);
    ((void (*)(char *, uint64_t))v687)(v596, v699);
    ((void (*)(char *, uint64_t))v388)(v597, v705);
    v389(v598, v700);
    ((void (*)(char *, uint64_t))v690)(v591, v706);
    ((void (*)(char *, uint64_t))v678)(v592, v695);
    ((void (*)(char *, uint64_t))v680)(v520, v701);
    ((void (*)(char *, uint64_t))v691)(v521, v696);
    ((void (*)(char *, uint64_t))v688)(v522, v703);
    ((void (*)(char *, uint64_t))v679)(v523, v697);
    ((void (*)(char *, uint64_t))v391)(v524, v390);
    return ((uint64_t (*)(char *, uint64_t))v684)(v525, v693);
  }
  return result;
}

uint64_t sub_258766ED4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258760888(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], (uint64_t)&a4[TupleTypeMetadata[60]], (uint64_t)&a4[TupleTypeMetadata[64]], a1, a2, a3);
}

uint64_t (*Flatten_15.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258767020(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, uint64_t a17, uint64_t a18, void *a19)
{
  v679 = a8;
  uint64_t v678 = a7;
  v677 = a6;
  v676 = a5;
  v675 = a4;
  v674 = a3;
  v673 = a2;
  v672 = a1;
  uint64_t v20 = a19[4];
  uint64_t v782 = a19[3];
  uint64_t v778 = v20;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v22 = a19[5];
  uint64_t v771 = TupleTypeMetadata2;
  uint64_t v774 = v22;
  uint64_t v23 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a19[6];
  v770 = (void (*)(char *, uint64_t))v23;
  uint64_t v773 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v26 = a19[7];
  uint64_t v769 = v25;
  uint64_t v777 = v26;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v28 = a19[8];
  v768 = (char *)v27;
  uint64_t v783 = v28;
  uint64_t v29 = swift_getTupleTypeMetadata2();
  uint64_t v30 = a19[9];
  v767 = (char *)v29;
  uint64_t v787 = v30;
  uint64_t v31 = swift_getTupleTypeMetadata2();
  uint64_t v32 = a19[10];
  uint64_t v766 = v31;
  uint64_t v772 = v32;
  uint64_t v33 = swift_getTupleTypeMetadata2();
  uint64_t v34 = a19[11];
  v765 = (void (*)(char *, uint64_t))v33;
  uint64_t v786 = v34;
  uint64_t v35 = swift_getTupleTypeMetadata2();
  uint64_t v36 = a19[12];
  uint64_t v764 = v35;
  uint64_t v776 = v36;
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = a19[13];
  v763 = (char *)v37;
  uint64_t v785 = v38;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v40 = a19[14];
  v762 = (char *)v39;
  uint64_t v781 = v40;
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v42 = a19[15];
  v761 = (void (*)(char *, uint64_t))v41;
  uint64_t v780 = v42;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v44 = a19[16];
  v760 = (char *)v43;
  uint64_t v775 = v44;
  uint64_t v45 = swift_getTupleTypeMetadata2();
  uint64_t v46 = a19[17];
  v759 = (char *)v45;
  uint64_t v779 = v46;
  uint64_t v47 = swift_getTupleTypeMetadata2();
  uint64_t v48 = a19[18];
  v758 = (char *)v47;
  uint64_t v784 = v48;
  uint64_t v49 = swift_getTupleTypeMetadata2();
  uint64_t v53 = MEMORY[0x270FA5388](v49, v50, v51, v52);
  v680 = (char *)&v434 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = MEMORY[0x270FA5388](v53, v55, v56, v57);
  v681 = (char *)&v434 - v59;
  uint64_t v63 = MEMORY[0x270FA5388](v58, v60, v61, v62);
  v682 = (char *)&v434 - v64;
  uint64_t v68 = MEMORY[0x270FA5388](v63, v65, v66, v67);
  uint64_t v683 = (char *)&v434 - v69;
  uint64_t v73 = MEMORY[0x270FA5388](v68, v70, v71, v72);
  v684 = (char *)&v434 - v74;
  uint64_t v78 = MEMORY[0x270FA5388](v73, v75, v76, v77);
  v685 = (char *)&v434 - v79;
  uint64_t v83 = MEMORY[0x270FA5388](v78, v80, v81, v82);
  v686 = (char *)&v434 - v84;
  uint64_t v88 = MEMORY[0x270FA5388](v83, v85, v86, v87);
  uint64_t v687 = (char *)&v434 - v89;
  uint64_t v93 = MEMORY[0x270FA5388](v88, v90, v91, v92);
  uint64_t v688 = (char *)&v434 - v94;
  uint64_t v98 = MEMORY[0x270FA5388](v93, v95, v96, v97);
  v689 = (char *)&v434 - v99;
  uint64_t v103 = MEMORY[0x270FA5388](v98, v100, v101, v102);
  uint64_t v690 = (char *)&v434 - v104;
  uint64_t v108 = MEMORY[0x270FA5388](v103, v105, v106, v107);
  uint64_t v110 = (char *)&v434 - v109;
  uint64_t v114 = MEMORY[0x270FA5388](v108, v111, v112, v113);
  uint64_t v116 = (char *)&v434 - v115;
  uint64_t v120 = MEMORY[0x270FA5388](v114, v117, v118, v119);
  uint64_t v691 = (char *)&v434 - v121;
  uint64_t v125 = MEMORY[0x270FA5388](v120, v122, v123, v124);
  uint64_t v692 = (char *)&v434 - v126;
  uint64_t v130 = MEMORY[0x270FA5388](v125, v127, v128, v129);
  uint64_t v132 = (char *)&v434 - v131;
  MEMORY[0x270FA5388](v130, v133, v134, v135);
  uint64_t v137 = (char *)&v434 - v136;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a19[19] + 24))(a17, a18, a19[2]);
  if (!v19)
  {
    uint64_t v139 = *(int *)(v771 + 48);
    v743 = &v137[v139];
    uint64_t v140 = *((int *)v770 + 12);
    v744 = &v137[v140];
    uint64_t v141 = *(int *)(v769 + 48);
    v745 = &v137[v141];
    uint64_t v142 = *((int *)v768 + 12);
    v741 = &v137[v142];
    uint64_t v143 = *((int *)v767 + 12);
    v739 = &v137[v143];
    uint64_t v144 = *(int *)(v766 + 48);
    v726 = &v137[v144];
    uint64_t v145 = *((int *)v765 + 12);
    v742 = &v137[v145];
    uint64_t v146 = *(int *)(v764 + 48);
    v740 = &v137[v146];
    uint64_t v147 = *((int *)v763 + 12);
    v737 = &v137[v147];
    uint64_t v148 = *((int *)v762 + 12);
    v738 = &v137[v148];
    uint64_t v581 = 0;
    uint64_t v149 = *((int *)v761 + 12);
    v746 = &v137[v149];
    uint64_t v150 = *((int *)v760 + 12);
    v747 = &v137[v150];
    uint64_t v151 = *((int *)v759 + 12);
    v748 = &v137[v151];
    uint64_t v152 = *((int *)v758 + 12);
    v749 = &v137[v152];
    v727 = (char *)v49;
    uint64_t v153 = *(int *)(v49 + 48);
    v750 = &v137[v153];
    uint64_t v154 = v137;
    v728 = v137;
    v664 = &v132[v153];
    v665 = &v132[v152];
    v666 = &v132[v151];
    v667 = &v132[v150];
    v668 = &v132[v149];
    v669 = &v132[v148];
    v670 = &v132[v147];
    v671 = &v132[v146];
    uint64_t v650 = v116;
    v663 = &v132[v145];
    uint64_t v643 = v110;
    uint64_t v155 = &v132[v144];
    v575 = &v132[v144];
    uint64_t v156 = &v132[v143];
    v576 = &v132[v143];
    uint64_t v157 = &v132[v142];
    uint64_t v577 = &v132[v142];
    uint64_t v158 = &v132[v141];
    v578 = &v132[v141];
    uint64_t v159 = &v132[v140];
    uint64_t v579 = &v132[v140];
    uint64_t v160 = &v132[v139];
    uint64_t v580 = &v132[v139];
    v757 = *(void **)(v782 - 8);
    uint64_t v702 = (void (*)(void))v757[2];
    uint64_t v703 = v757 + 2;
    v540 = a16;
    v538 = a15;
    uint64_t v588 = a14;
    v593 = a13;
    v598 = a12;
    v605 = a11;
    v610 = a10;
    v615 = a9;
    uint64_t v161 = v782;
    ((void (*)(char *, char *))v702)(v132, v154);
    uint64_t v693 = *(void **)(v778 - 8);
    uint64_t v701 = (void (*)(char *, char *))v693[2];
    uint64_t v705 = v693 + 2;
    v701(v160, v743);
    v736 = *(void **)(v774 - 8);
    uint64_t v162 = (void (*)(char *, char *, uint64_t))v736[2];
    uint64_t v696 = v736 + 2;
    uint64_t v700 = v162;
    v162(v159, v744, v774);
    v735 = *(void **)(v773 - 8);
    uint64_t v163 = (void (*)(char *, char *, uint64_t))v735[2];
    uint64_t v697 = v735 + 2;
    uint64_t v698 = v163;
    v163(v158, v745, v773);
    v734 = *(void **)(v777 - 8);
    uint64_t v164 = (void (*)(char *, char *, uint64_t))v734[2];
    uint64_t v699 = v734 + 2;
    uint64_t v704 = v164;
    v164(v157, v741, v777);
    v733 = *(void **)(v783 - 8);
    uint64_t v165 = (void (*)(char *, char *, uint64_t))v733[2];
    uint64_t v694 = v733 + 2;
    uint64_t v695 = v165;
    v165(v156, v739, v783);
    v732 = *(void **)(v787 - 8);
    uint64_t v166 = (char *)v732[2];
    v724 = (char *)(v732 + 2);
    v725 = v166;
    ((void (*)(char *, char *, uint64_t))v166)(v155, v726, v787);
    v731 = *(void **)(v772 - 8);
    uint64_t v167 = (char *)v731[2];
    v722 = (char *)(v731 + 2);
    v723 = v167;
    ((void (*)(char *, char *, uint64_t))v167)(v663, v742, v772);
    v756 = *(void **)(v786 - 8);
    uint64_t v168 = (void (*)(char *, char *, uint64_t))v756[2];
    v720 = v756 + 2;
    v721 = v168;
    v168(v671, v740, v786);
    v755 = *(void **)(v776 - 8);
    uint64_t v169 = (char *)v755[2];
    v718 = (char *)(v755 + 2);
    v719 = v169;
    ((void (*)(char *, char *, uint64_t))v169)(v670, v737, v776);
    v754 = *(void **)(v785 - 8);
    uint64_t v170 = (char *)v754[2];
    v716 = v754 + 2;
    v717 = v170;
    ((void (*)(char *, char *, uint64_t))v170)(v669, v738, v785);
    v753 = *(void **)(v781 - 8);
    uint64_t v706 = (void (*)(char *, char *, uint64_t))v753[2];
    v715 = v753 + 2;
    v706(v668, v746, v781);
    v730 = *(void **)(v780 - 8);
    uint64_t v171 = (void (*)(char *, char *, uint64_t))v730[2];
    v713 = v730 + 2;
    v714 = v171;
    v171(v667, v747, v780);
    v729 = *(void **)(v775 - 8);
    uint64_t v172 = (void (*)(char *, char *, uint64_t))v729[2];
    v711 = v729 + 2;
    v712 = v172;
    v172(v666, v748, v775);
    v752 = *(void **)(v779 - 8);
    v173 = (void (*)(char *, char *, uint64_t))v752[2];
    v709 = v752 + 2;
    v710 = v173;
    v173(v665, v749, v779);
    v751 = *(void **)(v784 - 8);
    uint64_t v174 = (void (*)(char *, char *, uint64_t))v751[2];
    v707 = v751 + 2;
    v708 = v174;
    v174(v664, v750, v784);
    uint64_t v175 = (void (*)(char *, char *, uint64_t))v757[4];
    uint64_t v528 = v757 + 4;
    uint64_t v529 = v175;
    v175(v672, v132, v161);
    v657 = &v692[*((int *)v727 + 12)];
    v658 = &v692[*((int *)v758 + 12)];
    v659 = &v692[*((int *)v759 + 12)];
    v660 = &v692[*((int *)v760 + 12)];
    v661 = &v692[*((int *)v761 + 12)];
    v662 = &v692[*((int *)v762 + 12)];
    v672 = &v692[*((int *)v763 + 12)];
    v568 = &v692[*(int *)(v764 + 48)];
    uint64_t v176 = v568;
    v569 = &v692[*((int *)v765 + 12)];
    uint64_t v177 = v569;
    v570 = &v692[*(int *)(v766 + 48)];
    uint64_t v178 = v570;
    v571 = &v692[*((int *)v767 + 12)];
    uint64_t v179 = v571;
    v572 = &v692[*((int *)v768 + 12)];
    uint64_t v180 = v572;
    v573 = &v692[*(int *)(v769 + 48)];
    v181 = v573;
    v574 = &v692[*((int *)v770 + 12)];
    uint64_t v182 = v574;
    v183 = &v692[*(int *)(v771 + 48)];
    v702();
    uint64_t v184 = v778;
    ((void (*)(char *, char *, uint64_t))v701)(v183, v743, v778);
    v700(v182, v744, v774);
    v698(v181, v745, v773);
    v704(v180, v741, v777);
    v695(v179, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v178, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v177, v742, v772);
    v721(v176, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v672, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v662, v738, v785);
    v706(v661, v746, v781);
    v714(v660, v747, v780);
    v712(v659, v748, v775);
    v710(v658, v749, v779);
    v708(v657, v750, v784);
    uint64_t v185 = (void (*)(char *, char *, uint64_t))v693[4];
    v518 = v693 + 4;
    uint64_t v520 = v185;
    v185(v673, v183, v184);
    v652 = &v691[*((int *)v727 + 12)];
    v653 = &v691[*((int *)v758 + 12)];
    v654 = &v691[*((int *)v759 + 12)];
    v655 = &v691[*((int *)v760 + 12)];
    v656 = &v691[*((int *)v761 + 12)];
    v673 = &v691[*((int *)v762 + 12)];
    uint64_t v651 = &v691[*((int *)v763 + 12)];
    v561 = &v691[*(int *)(v764 + 48)];
    uint64_t v186 = v561;
    v562 = &v691[*((int *)v765 + 12)];
    uint64_t v187 = v562;
    v563 = &v691[*(int *)(v766 + 48)];
    uint64_t v188 = v563;
    v564 = &v691[*((int *)v767 + 12)];
    uint64_t v189 = v564;
    v565 = &v691[*((int *)v768 + 12)];
    uint64_t v190 = v565;
    v566 = &v691[*(int *)(v769 + 48)];
    uint64_t v191 = v566;
    uint64_t v192 = &v691[*((int *)v770 + 12)];
    v567 = &v691[*(int *)(v771 + 48)];
    uint64_t v193 = v567;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v193, v743, v184);
    uint64_t v194 = v774;
    v700(v192, v744, v774);
    v698(v191, v745, v773);
    v704(v190, v741, v777);
    v695(v189, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v188, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v187, v742, v772);
    v721(v186, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v651, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v673, v738, v785);
    v706(v656, v746, v781);
    v714(v655, v747, v780);
    v712(v654, v748, v775);
    v710(v653, v749, v779);
    v708(v652, v750, v784);
    v195 = (void (*)(char *, char *, uint64_t))v736[4];
    v515 = v736 + 4;
    v516 = v195;
    uint64_t v196 = v194;
    v195(v674, v192, v194);
    uint64_t v646 = &v650[*((int *)v727 + 12)];
    uint64_t v647 = &v650[*((int *)v758 + 12)];
    uint64_t v648 = &v650[*((int *)v759 + 12)];
    uint64_t v649 = &v650[*((int *)v760 + 12)];
    v674 = &v650[*((int *)v761 + 12)];
    uint64_t v644 = &v650[*((int *)v762 + 12)];
    uint64_t v645 = &v650[*((int *)v763 + 12)];
    v554 = &v650[*(int *)(v764 + 48)];
    uint64_t v197 = v554;
    v555 = &v650[*((int *)v765 + 12)];
    uint64_t v198 = v555;
    v556 = &v650[*(int *)(v766 + 48)];
    uint64_t v199 = v556;
    v557 = &v650[*((int *)v767 + 12)];
    uint64_t v200 = v557;
    v558 = &v650[*((int *)v768 + 12)];
    uint64_t v201 = v558;
    uint64_t v202 = &v650[*(int *)(v769 + 48)];
    v559 = &v650[*((int *)v770 + 12)];
    uint64_t v203 = v559;
    v560 = &v650[*(int *)(v771 + 48)];
    uint64_t v204 = v560;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v204, v743, v778);
    v700(v203, v744, v196);
    uint64_t v205 = v773;
    v698(v202, v745, v773);
    v704(v201, v741, v777);
    v695(v200, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v199, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v198, v742, v772);
    v721(v197, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v645, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v644, v738, v785);
    v706(v674, v746, v781);
    v714(v649, v747, v780);
    v712(v648, v748, v775);
    v710(v647, v749, v779);
    v708(v646, v750, v784);
    uint64_t v206 = (void (*)(char *, char *, uint64_t))v735[4];
    v506 = v735 + 4;
    v507 = v206;
    uint64_t v207 = v205;
    v206(v675, v202, v205);
    uint64_t v639 = &v643[*((int *)v727 + 12)];
    uint64_t v640 = &v643[*((int *)v758 + 12)];
    uint64_t v641 = &v643[*((int *)v759 + 12)];
    uint64_t v642 = &v643[*((int *)v760 + 12)];
    v675 = &v643[*((int *)v761 + 12)];
    uint64_t v637 = &v643[*((int *)v762 + 12)];
    uint64_t v638 = &v643[*((int *)v763 + 12)];
    v547 = &v643[*(int *)(v764 + 48)];
    uint64_t v208 = v547;
    v548 = &v643[*((int *)v765 + 12)];
    uint64_t v209 = v548;
    v549 = &v643[*(int *)(v766 + 48)];
    uint64_t v210 = v549;
    v550 = &v643[*((int *)v767 + 12)];
    uint64_t v211 = v550;
    uint64_t v212 = &v643[*((int *)v768 + 12)];
    v551 = &v643[*(int *)(v769 + 48)];
    uint64_t v213 = v551;
    v552 = &v643[*((int *)v770 + 12)];
    uint64_t v214 = v552;
    v553 = &v643[*(int *)(v771 + 48)];
    uint64_t v215 = v553;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v215, v743, v778);
    v700(v214, v744, v774);
    v698(v213, v745, v207);
    v216 = v212;
    uint64_t v217 = v212;
    uint64_t v218 = v777;
    v704(v217, v741, v777);
    v695(v211, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v210, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v209, v742, v772);
    v721(v208, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v638, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v637, v738, v785);
    v706(v675, v746, v781);
    v714(v642, v747, v780);
    v712(v641, v748, v775);
    v710(v640, v749, v779);
    v708(v639, v750, v784);
    uint64_t v219 = (void (*)(char *, char *, uint64_t))v734[4];
    v499 = v734 + 4;
    v500 = v219;
    v219(v676, v216, v218);
    v633 = &v690[*((int *)v727 + 12)];
    uint64_t v634 = &v690[*((int *)v758 + 12)];
    v635 = &v690[*((int *)v759 + 12)];
    v636 = &v690[*((int *)v760 + 12)];
    v676 = &v690[*((int *)v761 + 12)];
    uint64_t v631 = &v690[*((int *)v762 + 12)];
    v632 = &v690[*((int *)v763 + 12)];
    v539 = &v690[*(int *)(v764 + 48)];
    v220 = v539;
    v541 = &v690[*((int *)v765 + 12)];
    uint64_t v221 = v541;
    v542 = &v690[*(int *)(v766 + 48)];
    uint64_t v222 = v542;
    uint64_t v223 = &v690[*((int *)v767 + 12)];
    v543 = &v690[*((int *)v768 + 12)];
    uint64_t v224 = v543;
    v544 = &v690[*(int *)(v769 + 48)];
    uint64_t v225 = v544;
    v545 = &v690[*((int *)v770 + 12)];
    uint64_t v226 = v545;
    v546 = &v690[*(int *)(v771 + 48)];
    uint64_t v227 = v546;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v227, v743, v778);
    v700(v226, v744, v774);
    v698(v225, v745, v773);
    v704(v224, v741, v218);
    uint64_t v228 = v783;
    v695(v223, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v222, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v221, v742, v772);
    v721(v220, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v632, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v631, v738, v785);
    v706(v676, v746, v781);
    v714(v636, v747, v780);
    v712(v635, v748, v775);
    v710(v634, v749, v779);
    v708(v633, v750, v784);
    uint64_t v229 = (void (*)(char *, char *, uint64_t))v733[4];
    v493 = v733 + 4;
    uint64_t v494 = v229;
    v229(v677, v223, v228);
    v626 = &v689[*((int *)v727 + 12)];
    v627 = &v689[*((int *)v758 + 12)];
    v628 = &v689[*((int *)v759 + 12)];
    v629 = &v689[*((int *)v760 + 12)];
    v630 = &v689[*((int *)v761 + 12)];
    v677 = &v689[*((int *)v762 + 12)];
    uint64_t v530 = &v689[*((int *)v763 + 12)];
    uint64_t v230 = v530;
    uint64_t v531 = &v689[*(int *)(v764 + 48)];
    uint64_t v231 = v531;
    uint64_t v532 = &v689[*((int *)v765 + 12)];
    uint64_t v232 = v532;
    v625 = &v689[*(int *)(v766 + 48)];
    uint64_t v533 = &v689[*((int *)v767 + 12)];
    uint64_t v233 = v533;
    uint64_t v534 = &v689[*((int *)v768 + 12)];
    uint64_t v234 = v534;
    uint64_t v535 = &v689[*(int *)(v769 + 48)];
    uint64_t v235 = v535;
    uint64_t v536 = &v689[*((int *)v770 + 12)];
    uint64_t v236 = v536;
    uint64_t v537 = &v689[*(int *)(v771 + 48)];
    v237 = v537;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v237, v743, v778);
    v700(v236, v744, v774);
    v698(v235, v745, v773);
    v704(v234, v741, v777);
    v695(v233, v739, v228);
    uint64_t v238 = v625;
    uint64_t v239 = v787;
    ((void (*)(char *, char *, uint64_t))v725)(v625, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v232, v742, v772);
    v721(v231, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v230, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v677, v738, v785);
    v706(v630, v746, v781);
    v714(v629, v747, v780);
    v712(v628, v748, v775);
    v710(v627, v749, v779);
    v708(v626, v750, v784);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))v732[4];
    uint64_t v482 = v732 + 4;
    uint64_t v483 = v240;
    v240(v678, v238, v239);
    v621 = &v688[*((int *)v727 + 12)];
    v622 = &v688[*((int *)v758 + 12)];
    v623 = &v688[*((int *)v759 + 12)];
    v624 = &v688[*((int *)v760 + 12)];
    v625 = &v688[*((int *)v761 + 12)];
    uint64_t v678 = &v688[*((int *)v762 + 12)];
    v519 = &v688[*((int *)v763 + 12)];
    uint64_t v241 = v519;
    v521 = &v688[*(int *)(v764 + 48)];
    uint64_t v242 = v521;
    v620 = &v688[*((int *)v765 + 12)];
    v522 = &v688[*(int *)(v766 + 48)];
    v243 = v522;
    v523 = &v688[*((int *)v767 + 12)];
    uint64_t v244 = v523;
    v524 = &v688[*((int *)v768 + 12)];
    uint64_t v245 = v524;
    v525 = &v688[*(int *)(v769 + 48)];
    uint64_t v246 = v525;
    uint64_t v526 = &v688[*((int *)v770 + 12)];
    v247 = v526;
    uint64_t v527 = &v688[*(int *)(v771 + 48)];
    uint64_t v248 = v527;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v248, v743, v778);
    v700(v247, v744, v774);
    v698(v246, v745, v773);
    v704(v245, v741, v777);
    v695(v244, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v243, v726, v239);
    uint64_t v249 = v620;
    uint64_t v250 = v772;
    ((void (*)(char *, char *, uint64_t))v723)(v620, v742, v772);
    v721(v242, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v241, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v678, v738, v785);
    v706(v625, v746, v781);
    v714(v624, v747, v780);
    v712(v623, v748, v775);
    v710(v622, v749, v779);
    v708(v621, v750, v784);
    uint64_t v251 = (void (*)(char *, char *, uint64_t))v731[4];
    uint64_t v478 = v731 + 4;
    uint64_t v479 = v251;
    v251(v679, v249, v250);
    v616 = &v687[*((int *)v727 + 12)];
    v617 = &v687[*((int *)v758 + 12)];
    v618 = &v687[*((int *)v759 + 12)];
    v619 = &v687[*((int *)v760 + 12)];
    v620 = &v687[*((int *)v761 + 12)];
    v679 = &v687[*((int *)v762 + 12)];
    v508 = &v687[*((int *)v763 + 12)];
    uint64_t v252 = v508;
    v614 = &v687[*(int *)(v764 + 48)];
    v509 = &v687[*((int *)v765 + 12)];
    uint64_t v253 = v509;
    v510 = &v687[*(int *)(v766 + 48)];
    uint64_t v254 = v510;
    v511 = &v687[*((int *)v767 + 12)];
    uint64_t v255 = v511;
    v512 = &v687[*((int *)v768 + 12)];
    uint64_t v256 = v512;
    v513 = &v687[*(int *)(v769 + 48)];
    uint64_t v257 = v513;
    v514 = &v687[*((int *)v770 + 12)];
    uint64_t v258 = v514;
    v517 = &v687[*(int *)(v771 + 48)];
    v259 = v517;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v259, v743, v778);
    v700(v258, v744, v774);
    v698(v257, v745, v773);
    v704(v256, v741, v777);
    v695(v255, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v254, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v253, v742, v250);
    uint64_t v260 = v614;
    uint64_t v261 = v786;
    v721(v614, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v252, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v679, v738, v785);
    v706(v620, v746, v781);
    v714(v619, v747, v780);
    v712(v618, v748, v775);
    v710(v617, v749, v779);
    v708(v616, v750, v784);
    uint64_t v262 = (void (*)(char *, char *, uint64_t))v756[4];
    v471 = v756 + 4;
    v472 = v262;
    v262(v615, v260, v261);
    v611 = &v686[*((int *)v727 + 12)];
    v612 = &v686[*((int *)v758 + 12)];
    v613 = &v686[*((int *)v759 + 12)];
    v614 = &v686[*((int *)v760 + 12)];
    v615 = &v686[*((int *)v761 + 12)];
    v495 = &v686[*((int *)v762 + 12)];
    uint64_t v263 = v495;
    v609 = &v686[*((int *)v763 + 12)];
    v496 = &v686[*(int *)(v764 + 48)];
    uint64_t v264 = v496;
    v497 = &v686[*((int *)v765 + 12)];
    uint64_t v265 = v497;
    v498 = &v686[*(int *)(v766 + 48)];
    uint64_t v266 = v498;
    v501 = &v686[*((int *)v767 + 12)];
    uint64_t v267 = v501;
    v502 = &v686[*((int *)v768 + 12)];
    uint64_t v268 = v502;
    v503 = &v686[*(int *)(v769 + 48)];
    uint64_t v269 = v503;
    v504 = &v686[*((int *)v770 + 12)];
    v270 = v504;
    v505 = &v686[*(int *)(v771 + 48)];
    uint64_t v271 = v505;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v271, v743, v778);
    v700(v270, v744, v774);
    v698(v269, v745, v773);
    v704(v268, v741, v777);
    v695(v267, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v266, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v265, v742, v772);
    v721(v264, v740, v786);
    uint64_t v272 = v609;
    uint64_t v273 = v776;
    ((void (*)(char *, char *, uint64_t))v719)(v609, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v263, v738, v785);
    v706(v615, v746, v781);
    v714(v614, v747, v780);
    v712(v613, v748, v775);
    v710(v612, v749, v779);
    v708(v611, v750, v784);
    uint64_t v274 = (void (*)(char *, char *, uint64_t))v755[4];
    v463 = v755 + 4;
    v464 = v274;
    v274(v610, v272, v273);
    v606 = &v685[*((int *)v727 + 12)];
    v607 = &v685[*((int *)v758 + 12)];
    v608 = &v685[*((int *)v759 + 12)];
    v609 = &v685[*((int *)v760 + 12)];
    v610 = &v685[*((int *)v761 + 12)];
    v604 = &v685[*((int *)v762 + 12)];
    uint64_t v484 = &v685[*((int *)v763 + 12)];
    uint64_t v275 = v484;
    uint64_t v485 = &v685[*(int *)(v764 + 48)];
    v276 = v485;
    uint64_t v486 = &v685[*((int *)v765 + 12)];
    uint64_t v277 = v486;
    v487 = &v685[*(int *)(v766 + 48)];
    uint64_t v278 = v487;
    v488 = &v685[*((int *)v767 + 12)];
    uint64_t v279 = v488;
    v489 = &v685[*((int *)v768 + 12)];
    uint64_t v280 = v489;
    v490 = &v685[*(int *)(v769 + 48)];
    uint64_t v281 = v490;
    uint64_t v491 = &v685[*((int *)v770 + 12)];
    uint64_t v282 = v491;
    v492 = &v685[*(int *)(v771 + 48)];
    uint64_t v283 = v492;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v283, v743, v778);
    v700(v282, v744, v774);
    v698(v281, v745, v773);
    v704(v280, v741, v777);
    v695(v279, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v278, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v277, v742, v772);
    v721(v276, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v275, v737, v776);
    uint64_t v284 = v604;
    uint64_t v285 = v785;
    ((void (*)(char *, char *, uint64_t))v717)(v604, v738, v785);
    v706(v610, v746, v781);
    v714(v609, v747, v780);
    v712(v608, v748, v775);
    v710(v607, v749, v779);
    v708(v606, v750, v784);
    uint64_t v286 = (void (*)(char *, char *, uint64_t))v754[4];
    uint64_t v458 = v754 + 4;
    v459 = v286;
    v286(v605, v284, v285);
    v601 = &v684[*((int *)v727 + 12)];
    v602 = &v684[*((int *)v758 + 12)];
    v603 = &v684[*((int *)v759 + 12)];
    v604 = &v684[*((int *)v760 + 12)];
    uint64_t v287 = &v684[*((int *)v761 + 12)];
    v605 = &v684[*((int *)v762 + 12)];
    v599 = &v684[*((int *)v763 + 12)];
    v600 = &v684[*(int *)(v764 + 48)];
    v473 = &v684[*((int *)v765 + 12)];
    uint64_t v288 = v473;
    v474 = &v684[*(int *)(v766 + 48)];
    uint64_t v289 = v474;
    v475 = &v684[*((int *)v767 + 12)];
    uint64_t v290 = v475;
    uint64_t v476 = &v684[*((int *)v768 + 12)];
    uint64_t v291 = v476;
    uint64_t v477 = &v684[*(int *)(v769 + 48)];
    uint64_t v292 = v477;
    uint64_t v480 = &v684[*((int *)v770 + 12)];
    uint64_t v293 = v480;
    uint64_t v481 = &v684[*(int *)(v771 + 48)];
    uint64_t v294 = v481;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v294, v743, v778);
    v700(v293, v744, v774);
    v698(v292, v745, v773);
    v704(v291, v741, v777);
    v695(v290, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v289, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v288, v742, v772);
    v721(v600, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v599, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v605, v738, v785);
    uint64_t v295 = v781;
    v706(v287, v746, v781);
    v714(v604, v747, v780);
    v712(v603, v748, v775);
    v710(v602, v749, v779);
    v708(v601, v750, v784);
    uint64_t v296 = (void (*)(char *, char *, uint64_t))v753[4];
    v447 = v753 + 4;
    v448 = v296;
    v296(v598, v287, v295);
    v594 = &v683[*((int *)v727 + 12)];
    v595 = &v683[*((int *)v758 + 12)];
    v596 = &v683[*((int *)v759 + 12)];
    uint64_t v592 = &v683[*((int *)v760 + 12)];
    v597 = &v683[*((int *)v761 + 12)];
    v598 = &v683[*((int *)v762 + 12)];
    v460 = &v683[*((int *)v763 + 12)];
    uint64_t v297 = v460;
    v461 = &v683[*(int *)(v764 + 48)];
    uint64_t v298 = v461;
    v462 = &v683[*((int *)v765 + 12)];
    uint64_t v299 = v462;
    v465 = &v683[*(int *)(v766 + 48)];
    v300 = v465;
    v466 = &v683[*((int *)v767 + 12)];
    uint64_t v301 = v466;
    v467 = &v683[*((int *)v768 + 12)];
    uint64_t v302 = v467;
    uint64_t v468 = &v683[*(int *)(v769 + 48)];
    v303 = v468;
    v469 = &v683[*((int *)v770 + 12)];
    uint64_t v304 = v469;
    v470 = &v683[*(int *)(v771 + 48)];
    uint64_t v305 = v470;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v305, v743, v778);
    v700(v304, v744, v774);
    v698(v303, v745, v773);
    v704(v302, v741, v777);
    v695(v301, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v300, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v299, v742, v772);
    v721(v298, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v297, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v598, v738, v785);
    v706(v597, v746, v781);
    uint64_t v306 = v592;
    uint64_t v307 = v780;
    v714(v592, v747, v780);
    v712(v596, v748, v775);
    v710(v595, v749, v779);
    v708(v594, v750, v784);
    uint64_t v308 = (void (*)(char *, char *, uint64_t))v730[4];
    v442 = v730 + 4;
    v443 = v308;
    v308(v593, v306, v307);
    uint64_t v589 = &v682[*((int *)v727 + 12)];
    uint64_t v590 = &v682[*((int *)v758 + 12)];
    uint64_t v587 = &v682[*((int *)v759 + 12)];
    uint64_t v591 = &v682[*((int *)v760 + 12)];
    uint64_t v592 = &v682[*((int *)v761 + 12)];
    v593 = &v682[*((int *)v762 + 12)];
    v449 = &v682[*((int *)v763 + 12)];
    uint64_t v309 = v449;
    v450 = &v682[*(int *)(v764 + 48)];
    uint64_t v310 = v450;
    v451 = &v682[*((int *)v765 + 12)];
    uint64_t v311 = v451;
    v452 = &v682[*(int *)(v766 + 48)];
    uint64_t v312 = v452;
    v453 = &v682[*((int *)v767 + 12)];
    uint64_t v313 = v453;
    v454 = &v682[*((int *)v768 + 12)];
    uint64_t v314 = v454;
    v455 = &v682[*(int *)(v769 + 48)];
    uint64_t v315 = v455;
    v456 = &v682[*((int *)v770 + 12)];
    uint64_t v316 = v456;
    uint64_t v457 = &v682[*(int *)(v771 + 48)];
    uint64_t v317 = v457;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v317, v743, v778);
    uint64_t v318 = v774;
    v700(v316, v744, v774);
    v698(v315, v745, v773);
    v704(v314, v741, v777);
    v695(v313, v739, v783);
    uint64_t v319 = v726;
    ((void (*)(char *, char *, uint64_t))v725)(v312, v726, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v311, v742, v772);
    v721(v310, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v309, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v593, v738, v785);
    v706(v592, v746, v781);
    v714(v591, v747, v780);
    uint64_t v320 = v587;
    uint64_t v321 = v775;
    v712(v587, v748, v775);
    v710(v590, v749, v779);
    v708(v589, v750, v784);
    uint64_t v322 = (void (*)(char *, char *, uint64_t))v729[4];
    v436 = v729 + 4;
    v437 = v322;
    v322(v588, v320, v321);
    uint64_t v582 = &v681[*((int *)v727 + 12)];
    v435 = &v681[*((int *)v758 + 12)];
    uint64_t v583 = &v681[*((int *)v759 + 12)];
    uint64_t v584 = &v681[*((int *)v760 + 12)];
    uint64_t v585 = &v681[*((int *)v761 + 12)];
    uint64_t v586 = &v681[*((int *)v762 + 12)];
    uint64_t v587 = &v681[*((int *)v763 + 12)];
    uint64_t v588 = &v681[*(int *)(v764 + 48)];
    v438 = &v681[*((int *)v765 + 12)];
    uint64_t v323 = v438;
    v439 = &v681[*(int *)(v766 + 48)];
    uint64_t v324 = v439;
    v440 = &v681[*((int *)v767 + 12)];
    uint64_t v325 = v440;
    v441 = &v681[*((int *)v768 + 12)];
    uint64_t v326 = v441;
    v444 = &v681[*(int *)(v769 + 48)];
    uint64_t v327 = v444;
    v445 = &v681[*((int *)v770 + 12)];
    v328 = v445;
    v446 = &v681[*(int *)(v771 + 48)];
    uint64_t v329 = v446;
    v702();
    ((void (*)(char *, char *, uint64_t))v701)(v329, v743, v778);
    v700(v328, v744, v318);
    v698(v327, v745, v773);
    v704(v326, v741, v777);
    v695(v325, v739, v783);
    ((void (*)(char *, char *, uint64_t))v725)(v324, v319, v787);
    ((void (*)(char *, char *, uint64_t))v723)(v323, v742, v772);
    v721(v588, v740, v786);
    ((void (*)(char *, char *, uint64_t))v719)(v587, v737, v776);
    ((void (*)(char *, char *, uint64_t))v717)(v586, v738, v785);
    v706(v585, v746, v781);
    v714(v584, v747, v780);
    v712(v583, v748, v775);
    uint64_t v330 = v435;
    uint64_t v331 = v779;
    v710(v435, v749, v779);
    v708(v582, v750, v784);
    uint64_t v332 = (void (*)(char *, char *, uint64_t))v752[4];
    v720 = v752 + 4;
    v721 = v332;
    v332(v538, v330, v331);
    uint64_t v333 = v680;
    v722 = &v680[*((int *)v727 + 12)];
    v718 = &v680[*((int *)v758 + 12)];
    v758 = &v680[*((int *)v759 + 12)];
    v759 = &v680[*((int *)v760 + 12)];
    v760 = &v680[*((int *)v761 + 12)];
    v762 = &v680[*((int *)v762 + 12)];
    v763 = &v680[*((int *)v763 + 12)];
    v717 = &v680[*(int *)(v764 + 48)];
    uint64_t v334 = v717;
    v719 = &v680[*((int *)v765 + 12)];
    uint64_t v335 = v719;
    v723 = &v680[*(int *)(v766 + 48)];
    uint64_t v336 = v723;
    v724 = &v680[*((int *)v767 + 12)];
    uint64_t v337 = v724;
    v725 = &v680[*((int *)v768 + 12)];
    uint64_t v338 = v725;
    v767 = &v680[*(int *)(v769 + 48)];
    uint64_t v339 = v767;
    v727 = &v680[*((int *)v770 + 12)];
    uint64_t v340 = v727;
    v768 = &v680[*(int *)(v771 + 48)];
    uint64_t v341 = v768;
    v529(v680, v728, v782);
    v520(v341, v743, v778);
    v516(v340, v744, v774);
    v507(v339, v745, v773);
    v500(v338, v741, v777);
    v494(v337, v739, v783);
    v483(v336, v726, v787);
    v479(v335, v742, v772);
    v472(v334, v740, v786);
    v464(v763, v737, v776);
    v459(v762, v738, v785);
    v448(v760, v746, v781);
    uint64_t v342 = v780;
    v443(v759, v747, v780);
    uint64_t v343 = v775;
    v437(v758, v748, v775);
    uint64_t v344 = v718;
    uint64_t v345 = v779;
    v721(v718, v749, v779);
    uint64_t v346 = (void (*)(char *, char *, uint64_t))v751[4];
    uint64_t v347 = v722;
    uint64_t v348 = v784;
    v346(v722, v750, v784);
    v346(v540, v347, v348);
    uint64_t v764 = v752[1];
    ++v752;
    ((void (*)(char *, uint64_t))v764)(v344, v345);
    uint64_t v349 = (int *)v729[1];
    ++v729;
    v765 = (void (*)(char *, uint64_t))v349;
    ((void (*)(char *, uint64_t))v349)(v758, v343);
    v350 = (int *)v730[1];
    ++v730;
    v761 = (void (*)(char *, uint64_t))v350;
    uint64_t v351 = v342;
    ((void (*)(char *, uint64_t))v350)(v759, v342);
    uint64_t v352 = (void (*)(char *, uint64_t))v753[1];
    ++v753;
    uint64_t v353 = v781;
    v352(v760, v781);
    uint64_t v354 = v352;
    v749 = (char *)v352;
    uint64_t v771 = v754[1];
    ++v754;
    ((void (*)(char *, uint64_t))v771)(v762, v785);
    uint64_t v766 = v755[1];
    ++v755;
    ((void (*)(char *, uint64_t))v766)(v763, v776);
    v759 = (char *)v756[1];
    ++v756;
    ((void (*)(char *, uint64_t))v759)(v717, v786);
    uint64_t v355 = (char *)v731[1];
    ++v731;
    v758 = v355;
    uint64_t v356 = v772;
    ((void (*)(char *, uint64_t))v355)(v719, v772);
    v760 = (char *)v732[1];
    ++v732;
    ((void (*)(char *, uint64_t))v760)(v723, v787);
    uint64_t v357 = (int *)v733[1];
    ++v733;
    v770 = (void (*)(char *, uint64_t))v357;
    ((void (*)(char *, uint64_t))v357)(v724, v783);
    uint64_t v769 = v734[1];
    ++v734;
    ((void (*)(char *, uint64_t))v769)(v725, v777);
    v750 = (char *)v735[1];
    ++v735;
    ((void (*)(char *, uint64_t))v750)(v767, v773);
    v767 = (char *)v736[1];
    ++v736;
    ((void (*)(char *, uint64_t))v767)(v727, v774);
    v763 = (char *)v693[1];
    ++v693;
    uint64_t v358 = v778;
    ((void (*)(char *, uint64_t))v763)(v768, v778);
    v762 = (char *)v757[1];
    ++v757;
    ((void (*)(char *, uint64_t))v762)(v333, v782);
    v768 = (char *)v751[1];
    ++v751;
    uint64_t v359 = v784;
    ((void (*)(char *, uint64_t))v768)(v582, v784);
    v765(v583, v343);
    uint64_t v360 = v761;
    v761(v584, v351);
    v354(v585, v353);
    uint64_t v361 = v785;
    ((void (*)(char *, uint64_t))v771)(v586, v785);
    ((void (*)(char *, uint64_t))v766)(v587, v776);
    ((void (*)(char *, uint64_t))v759)(v588, v786);
    uint64_t v362 = v758;
    ((void (*)(char *, uint64_t))v758)(v438, v356);
    ((void (*)(char *, uint64_t))v760)(v439, v787);
    v770(v440, v783);
    uint64_t v363 = v777;
    ((void (*)(char *, uint64_t))v769)(v441, v777);
    uint64_t v364 = v773;
    ((void (*)(char *, uint64_t))v750)(v444, v773);
    ((void (*)(char *, uint64_t))v767)(v445, v774);
    ((void (*)(char *, uint64_t))v763)(v446, v358);
    uint64_t v365 = v782;
    ((void (*)(char *, uint64_t))v762)(v681, v782);
    uint64_t v366 = v359;
    uint64_t v367 = v768;
    ((void (*)(char *, uint64_t))v768)(v589, v366);
    ((void (*)(char *, uint64_t))v764)(v590, v779);
    v360(v591, v780);
    uint64_t v368 = v781;
    uint64_t v369 = v749;
    ((void (*)(char *, uint64_t))v749)(v592, v781);
    ((void (*)(char *, uint64_t))v771)(v593, v361);
    uint64_t v370 = v776;
    ((void (*)(char *, uint64_t))v766)(v449, v776);
    ((void (*)(char *, uint64_t))v759)(v450, v786);
    ((void (*)(char *, uint64_t))v362)(v451, v772);
    ((void (*)(char *, uint64_t))v760)(v452, v787);
    uint64_t v371 = v783;
    v770(v453, v783);
    ((void (*)(char *, uint64_t))v769)(v454, v363);
    ((void (*)(char *, uint64_t))v750)(v455, v364);
    ((void (*)(char *, uint64_t))v767)(v456, v774);
    uint64_t v372 = v763;
    ((void (*)(char *, uint64_t))v763)(v457, v778);
    uint64_t v373 = v762;
    ((void (*)(char *, uint64_t))v762)(v682, v365);
    ((void (*)(char *, uint64_t))v367)(v594, v784);
    ((void (*)(char *, uint64_t))v764)(v595, v779);
    v765(v596, v775);
    ((void (*)(char *, uint64_t))v369)(v597, v368);
    uint64_t v374 = (void (*)(char *, uint64_t))v771;
    ((void (*)(char *, uint64_t))v771)(v598, v785);
    ((void (*)(char *, uint64_t))v766)(v460, v370);
    ((void (*)(char *, uint64_t))v759)(v461, v786);
    uint64_t v375 = v772;
    uint64_t v376 = v758;
    ((void (*)(char *, uint64_t))v758)(v462, v772);
    uint64_t v377 = v760;
    ((void (*)(char *, uint64_t))v760)(v465, v787);
    v770(v466, v371);
    uint64_t v378 = v777;
    v379 = (void (*)(char *, uint64_t))v769;
    ((void (*)(char *, uint64_t))v769)(v467, v777);
    ((void (*)(char *, uint64_t))v750)(v468, v773);
    ((void (*)(char *, uint64_t))v767)(v469, v774);
    ((void (*)(char *, uint64_t))v372)(v470, v778);
    ((void (*)(char *, uint64_t))v373)(v683, v782);
    ((void (*)(char *, uint64_t))v768)(v601, v784);
    uint64_t v380 = v779;
    ((void (*)(char *, uint64_t))v764)(v602, v779);
    v765(v603, v775);
    v761(v604, v780);
    v374(v605, v785);
    uint64_t v381 = v776;
    uint64_t v382 = (void (*)(char *, uint64_t))v766;
    ((void (*)(char *, uint64_t))v766)(v599, v776);
    uint64_t v383 = v786;
    ((void (*)(char *, uint64_t))v759)(v600, v786);
    ((void (*)(char *, uint64_t))v376)(v473, v375);
    ((void (*)(char *, uint64_t))v377)(v474, v787);
    v770(v475, v783);
    v379(v476, v378);
    ((void (*)(char *, uint64_t))v750)(v477, v773);
    ((void (*)(char *, uint64_t))v767)(v480, v774);
    ((void (*)(char *, uint64_t))v763)(v481, v778);
    ((void (*)(char *, uint64_t))v762)(v684, v782);
    ((void (*)(char *, uint64_t))v768)(v606, v784);
    uint64_t v384 = v380;
    v385 = (void (*)(char *, uint64_t))v764;
    ((void (*)(char *, uint64_t))v764)(v607, v384);
    uint64_t v386 = v775;
    v765(v608, v775);
    v761(v609, v780);
    ((void (*)(char *, uint64_t))v749)(v610, v781);
    v382(v484, v381);
    uint64_t v387 = v383;
    v388 = v759;
    ((void (*)(char *, uint64_t))v759)(v485, v387);
    uint64_t v389 = v772;
    ((void (*)(char *, uint64_t))v758)(v486, v772);
    ((void (*)(char *, uint64_t))v760)(v487, v787);
    v770(v488, v783);
    ((void (*)(char *, uint64_t))v769)(v489, v777);
    uint64_t v390 = v750;
    ((void (*)(char *, uint64_t))v750)(v490, v773);
    ((void (*)(char *, uint64_t))v767)(v491, v774);
    ((void (*)(char *, uint64_t))v763)(v492, v778);
    ((void (*)(char *, uint64_t))v762)(v685, v782);
    ((void (*)(char *, uint64_t))v768)(v611, v784);
    v385(v612, v779);
    v391 = v765;
    v765(v613, v386);
    v761(v614, v780);
    v392 = v749;
    ((void (*)(char *, uint64_t))v749)(v615, v781);
    ((void (*)(char *, uint64_t))v771)(v495, v785);
    ((void (*)(char *, uint64_t))v388)(v496, v786);
    ((void (*)(char *, uint64_t))v758)(v497, v389);
    ((void (*)(char *, uint64_t))v760)(v498, v787);
    v770(v501, v783);
    ((void (*)(char *, uint64_t))v769)(v502, v777);
    ((void (*)(char *, uint64_t))v390)(v503, v773);
    uint64_t v393 = v774;
    ((void (*)(char *, uint64_t))v767)(v504, v774);
    ((void (*)(char *, uint64_t))v763)(v505, v778);
    ((void (*)(char *, uint64_t))v762)(v686, v782);
    uint64_t v394 = v784;
    ((void (*)(char *, uint64_t))v768)(v616, v784);
    v395 = (void (*)(char *, uint64_t))v764;
    ((void (*)(char *, uint64_t))v764)(v617, v779);
    v391(v618, v775);
    uint64_t v396 = v780;
    v761(v619, v780);
    uint64_t v397 = v781;
    ((void (*)(char *, uint64_t))v392)(v620, v781);
    uint64_t v398 = v785;
    ((void (*)(char *, uint64_t))v771)(v679, v785);
    uint64_t v399 = v776;
    ((void (*)(char *, uint64_t))v766)(v508, v776);
    ((void (*)(char *, uint64_t))v758)(v509, v772);
    ((void (*)(char *, uint64_t))v760)(v510, v787);
    v770(v511, v783);
    ((void (*)(char *, uint64_t))v769)(v512, v777);
    ((void (*)(char *, uint64_t))v750)(v513, v773);
    uint64_t v400 = v393;
    v401 = v767;
    ((void (*)(char *, uint64_t))v767)(v514, v400);
    ((void (*)(char *, uint64_t))v763)(v517, v778);
    ((void (*)(char *, uint64_t))v762)(v687, v782);
    ((void (*)(char *, uint64_t))v768)(v621, v394);
    v395(v622, v779);
    v765(v623, v775);
    uint64_t v402 = v396;
    v403 = v761;
    v761(v624, v402);
    ((void (*)(char *, uint64_t))v749)(v625, v397);
    ((void (*)(char *, uint64_t))v771)(v678, v398);
    ((void (*)(char *, uint64_t))v766)(v519, v399);
    uint64_t v404 = v786;
    ((void (*)(char *, uint64_t))v759)(v521, v786);
    ((void (*)(char *, uint64_t))v760)(v522, v787);
    v405 = v770;
    v770(v523, v783);
    ((void (*)(char *, uint64_t))v769)(v524, v777);
    ((void (*)(char *, uint64_t))v750)(v525, v773);
    ((void (*)(char *, uint64_t))v401)(v526, v774);
    ((void (*)(char *, uint64_t))v763)(v527, v778);
    ((void (*)(char *, uint64_t))v762)(v688, v782);
    ((void (*)(char *, uint64_t))v768)(v626, v784);
    ((void (*)(char *, uint64_t))v764)(v627, v779);
    v765(v628, v775);
    v403(v629, v780);
    ((void (*)(char *, uint64_t))v749)(v630, v781);
    ((void (*)(char *, uint64_t))v771)(v677, v785);
    ((void (*)(char *, uint64_t))v766)(v530, v776);
    ((void (*)(char *, uint64_t))v759)(v531, v404);
    v406 = v758;
    ((void (*)(char *, uint64_t))v758)(v532, v772);
    v405(v533, v783);
    ((void (*)(char *, uint64_t))v769)(v534, v777);
    uint64_t v407 = v773;
    v408 = v750;
    ((void (*)(char *, uint64_t))v750)(v535, v773);
    ((void (*)(char *, uint64_t))v767)(v536, v774);
    uint64_t v409 = v778;
    ((void (*)(char *, uint64_t))v763)(v537, v778);
    ((void (*)(char *, uint64_t))v762)(v689, v782);
    ((void (*)(char *, uint64_t))v768)(v633, v784);
    ((void (*)(char *, uint64_t))v764)(v634, v779);
    v765(v635, v775);
    v761(v636, v780);
    ((void (*)(char *, uint64_t))v749)(v676, v781);
    ((void (*)(char *, uint64_t))v771)(v631, v785);
    ((void (*)(char *, uint64_t))v766)(v632, v776);
    ((void (*)(char *, uint64_t))v759)(v539, v786);
    ((void (*)(char *, uint64_t))v406)(v541, v772);
    uint64_t v410 = v760;
    ((void (*)(char *, uint64_t))v760)(v542, v787);
    ((void (*)(char *, uint64_t))v769)(v543, v777);
    ((void (*)(char *, uint64_t))v408)(v544, v407);
    ((void (*)(char *, uint64_t))v767)(v545, v774);
    uint64_t v411 = v409;
    v412 = v763;
    ((void (*)(char *, uint64_t))v763)(v546, v411);
    uint64_t v413 = v782;
    v414 = v762;
    ((void (*)(char *, uint64_t))v762)(v690, v782);
    v415 = v768;
    ((void (*)(char *, uint64_t))v768)(v639, v784);
    ((void (*)(char *, uint64_t))v764)(v640, v779);
    v765(v641, v775);
    v761(v642, v780);
    ((void (*)(char *, uint64_t))v749)(v675, v781);
    ((void (*)(char *, uint64_t))v771)(v637, v785);
    ((void (*)(char *, uint64_t))v766)(v638, v776);
    ((void (*)(char *, uint64_t))v759)(v547, v786);
    ((void (*)(char *, uint64_t))v758)(v548, v772);
    ((void (*)(char *, uint64_t))v410)(v549, v787);
    uint64_t v416 = v783;
    uint64_t v417 = v770;
    v770(v550, v783);
    ((void (*)(char *, uint64_t))v750)(v551, v773);
    ((void (*)(char *, uint64_t))v767)(v552, v774);
    ((void (*)(char *, uint64_t))v412)(v553, v778);
    ((void (*)(char *, uint64_t))v414)(v643, v413);
    ((void (*)(char *, uint64_t))v415)(v646, v784);
    uint64_t v418 = v779;
    ((void (*)(char *, uint64_t))v764)(v647, v779);
    v765(v648, v775);
    v761(v649, v780);
    uint64_t v419 = v749;
    ((void (*)(char *, uint64_t))v749)(v674, v781);
    ((void (*)(char *, uint64_t))v771)(v644, v785);
    uint64_t v420 = (void (*)(char *, uint64_t))v766;
    ((void (*)(char *, uint64_t))v766)(v645, v776);
    uint64_t v421 = v759;
    ((void (*)(char *, uint64_t))v759)(v554, v786);
    uint64_t v422 = v772;
    ((void (*)(char *, uint64_t))v758)(v555, v772);
    uint64_t v423 = v787;
    ((void (*)(char *, uint64_t))v760)(v556, v787);
    v417(v557, v416);
    uint64_t v424 = (void (*)(char *, uint64_t))v769;
    ((void (*)(char *, uint64_t))v769)(v558, v777);
    ((void (*)(char *, uint64_t))v767)(v559, v774);
    ((void (*)(char *, uint64_t))v763)(v560, v778);
    ((void (*)(char *, uint64_t))v762)(v650, v782);
    ((void (*)(char *, uint64_t))v768)(v652, v784);
    ((void (*)(char *, uint64_t))v764)(v653, v418);
    uint64_t v425 = v775;
    v765(v654, v775);
    v761(v655, v780);
    ((void (*)(char *, uint64_t))v419)(v656, v781);
    uint64_t v426 = (void (*)(char *, uint64_t))v771;
    ((void (*)(char *, uint64_t))v771)(v673, v785);
    v420(v651, v776);
    ((void (*)(char *, uint64_t))v421)(v561, v786);
    ((void (*)(char *, uint64_t))v758)(v562, v422);
    ((void (*)(char *, uint64_t))v760)(v563, v423);
    v770(v564, v783);
    uint64_t v427 = v777;
    v424(v565, v777);
    uint64_t v428 = v773;
    v429 = v750;
    ((void (*)(char *, uint64_t))v750)(v566, v773);
    ((void (*)(char *, uint64_t))v763)(v567, v778);
    ((void (*)(char *, uint64_t))v762)(v691, v782);
    ((void (*)(char *, uint64_t))v768)(v657, v784);
    ((void (*)(char *, uint64_t))v764)(v658, v779);
    v430 = v765;
    v765(v659, v425);
    v761(v660, v780);
    ((void (*)(char *, uint64_t))v749)(v661, v781);
    v426(v662, v785);
    uint64_t v431 = v776;
    ((void (*)(char *, uint64_t))v766)(v672, v776);
    ((void (*)(char *, uint64_t))v759)(v568, v786);
    ((void (*)(char *, uint64_t))v758)(v569, v772);
    ((void (*)(char *, uint64_t))v760)(v570, v787);
    v770(v571, v783);
    ((void (*)(char *, uint64_t))v769)(v572, v427);
    ((void (*)(char *, uint64_t))v429)(v573, v428);
    uint64_t v432 = v774;
    v433 = v767;
    ((void (*)(char *, uint64_t))v767)(v574, v774);
    ((void (*)(char *, uint64_t))v762)(v692, v782);
    ((void (*)(char *, uint64_t))v768)(v664, v784);
    ((void (*)(char *, uint64_t))v764)(v665, v779);
    v430(v666, v775);
    v761(v667, v780);
    ((void (*)(char *, uint64_t))v749)(v668, v781);
    ((void (*)(char *, uint64_t))v771)(v669, v785);
    ((void (*)(char *, uint64_t))v766)(v670, v431);
    ((void (*)(char *, uint64_t))v759)(v671, v786);
    ((void (*)(char *, uint64_t))v758)(v663, v772);
    ((void (*)(char *, uint64_t))v760)(v575, v787);
    v770(v576, v783);
    ((void (*)(char *, uint64_t))v769)(v577, v777);
    ((void (*)(char *, uint64_t))v429)(v578, v428);
    ((void (*)(char *, uint64_t))v433)(v579, v432);
    return ((uint64_t (*)(char *, uint64_t))v763)(v580, v778);
  }
  return result;
}

uint64_t sub_25876E4D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258767020(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], &a4[TupleTypeMetadata[60]], &a4[TupleTypeMetadata[64]], &a4[TupleTypeMetadata[68]], a1, a2, a3);
}

uint64_t (*Flatten_16.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_25876E62C(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, uint64_t a18, uint64_t a19, void *a20)
{
  v737 = a8;
  v736 = a7;
  v735 = a6;
  v734 = a5;
  v733 = a4;
  v732 = a3;
  v731 = a2;
  v730 = a1;
  uint64_t v21 = a20[4];
  uint64_t v849 = a20[3];
  uint64_t v839 = v21;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v23 = a20[5];
  v834 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v838 = v23;
  uint64_t v24 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a20[6];
  v833 = (void (*)(char *, uint64_t))v24;
  uint64_t v845 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a20[7];
  uint64_t v832 = v26;
  uint64_t v850 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a20[8];
  v831 = (char *)v28;
  uint64_t v837 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a20[9];
  v830 = (void (*)(char *, uint64_t))v30;
  uint64_t v835 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v33 = a20[10];
  v829 = (char *)v32;
  uint64_t v844 = v33;
  uint64_t v34 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a20[11];
  v828 = (void (*)(char *, uint64_t))v34;
  uint64_t v843 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a20[12];
  v827 = (char *)v36;
  uint64_t v851 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a20[13];
  v826 = (char *)v38;
  uint64_t v848 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v41 = a20[14];
  v825 = (char *)v40;
  uint64_t v847 = v41;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v43 = a20[15];
  uint64_t v824 = v42;
  uint64_t v842 = v43;
  uint64_t v44 = swift_getTupleTypeMetadata2();
  uint64_t v45 = a20[16];
  v823 = (char *)v44;
  uint64_t v836 = v45;
  uint64_t v46 = swift_getTupleTypeMetadata2();
  uint64_t v47 = a20[17];
  v822 = (void (*)(char *, uint64_t))v46;
  uint64_t v841 = v47;
  uint64_t v48 = swift_getTupleTypeMetadata2();
  uint64_t v49 = a20[18];
  v821 = (char *)v48;
  uint64_t v840 = v49;
  uint64_t v50 = swift_getTupleTypeMetadata2();
  uint64_t v51 = a20[19];
  v820 = (char *)v50;
  uint64_t v846 = v51;
  uint64_t v819 = swift_getTupleTypeMetadata2();
  uint64_t v55 = MEMORY[0x270FA5388](v819, v52, v53, v54);
  v738 = (char *)v461 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x270FA5388](v55, v57, v58, v59);
  v739 = (char *)v461 - v61;
  uint64_t v65 = MEMORY[0x270FA5388](v60, v62, v63, v64);
  v740 = (char *)v461 - v66;
  uint64_t v70 = MEMORY[0x270FA5388](v65, v67, v68, v69);
  v741 = (char *)v461 - v71;
  uint64_t v75 = MEMORY[0x270FA5388](v70, v72, v73, v74);
  v742 = (char *)v461 - v76;
  uint64_t v80 = MEMORY[0x270FA5388](v75, v77, v78, v79);
  v743 = (char *)v461 - v81;
  uint64_t v85 = MEMORY[0x270FA5388](v80, v82, v83, v84);
  v744 = (char *)v461 - v86;
  uint64_t v90 = MEMORY[0x270FA5388](v85, v87, v88, v89);
  v745 = (char *)v461 - v91;
  uint64_t v95 = MEMORY[0x270FA5388](v90, v92, v93, v94);
  v746 = (char *)v461 - v96;
  uint64_t v100 = MEMORY[0x270FA5388](v95, v97, v98, v99);
  v747 = (char *)v461 - v101;
  uint64_t v105 = MEMORY[0x270FA5388](v100, v102, v103, v104);
  v748 = (char *)v461 - v106;
  uint64_t v110 = MEMORY[0x270FA5388](v105, v107, v108, v109);
  uint64_t v112 = (char *)v461 - v111;
  uint64_t v116 = MEMORY[0x270FA5388](v110, v113, v114, v115);
  uint64_t v118 = (char *)v461 - v117;
  uint64_t v122 = MEMORY[0x270FA5388](v116, v119, v120, v121);
  uint64_t v124 = (char *)v461 - v123;
  uint64_t v128 = MEMORY[0x270FA5388](v122, v125, v126, v127);
  v750 = (char *)v461 - v129;
  uint64_t v133 = MEMORY[0x270FA5388](v128, v130, v131, v132);
  v749 = (char *)v461 - v134;
  uint64_t v138 = MEMORY[0x270FA5388](v133, v135, v136, v137);
  uint64_t v140 = (char *)v461 - v139;
  MEMORY[0x270FA5388](v138, v141, v142, v143);
  uint64_t v145 = (char *)v461 - v144;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a20[20] + 24))(a18, a19, a20[2]);
  if (!v20)
  {
    uint64_t v147 = *((int *)v833 + 12);
    v809 = &v145[v147];
    uint64_t v148 = *(int *)(v832 + 48);
    v810 = &v145[v148];
    uint64_t v149 = *((int *)v831 + 12);
    v798 = &v145[v149];
    uint64_t v150 = *((int *)v830 + 12);
    v799 = &v145[v150];
    uint64_t v151 = *((int *)v829 + 12);
    v800 = &v145[v151];
    uint64_t v152 = *((int *)v828 + 12);
    v801 = &v145[v152];
    uint64_t v153 = *((int *)v827 + 12);
    v802 = &v145[v153];
    uint64_t v154 = *((int *)v826 + 12);
    v803 = &v145[v154];
    uint64_t v155 = *((int *)v825 + 12);
    v804 = &v145[v155];
    uint64_t v156 = *(int *)(v824 + 48);
    v805 = &v145[v156];
    uint64_t v616 = 0;
    uint64_t v157 = *((int *)v823 + 12);
    v806 = &v145[v157];
    uint64_t v158 = *((int *)v822 + 12);
    v807 = &v145[v158];
    uint64_t v159 = *((int *)v821 + 12);
    v808 = &v145[v159];
    uint64_t v160 = *((int *)v820 + 12);
    v796 = &v145[v160];
    uint64_t v161 = *(int *)(v819 + 48);
    v797 = &v145[v161];
    v722 = &v140[v161];
    uint64_t v162 = *((int *)v834 + 12);
    v723 = &v140[v160];
    v724 = &v140[v159];
    v725 = &v140[v158];
    v726 = &v140[v157];
    v727 = &v140[v156];
    v728 = &v140[v155];
    v729 = &v140[v154];
    uint64_t v688 = v112;
    v719 = &v140[v153];
    uint64_t v696 = v118;
    v720 = &v140[v152];
    uint64_t v704 = v124;
    v721 = &v140[v151];
    uint64_t v163 = &v140[v150];
    v611 = &v140[v150];
    uint64_t v164 = &v140[v149];
    v612 = &v140[v149];
    uint64_t v165 = &v140[v148];
    v613 = &v140[v148];
    uint64_t v166 = &v140[v147];
    v614 = &v140[v147];
    uint64_t v167 = v145;
    v788 = v145;
    uint64_t v168 = &v145[v162];
    uint64_t v787 = &v145[v162];
    uint64_t v169 = &v140[v162];
    v615 = &v140[v162];
    v795 = *(void **)(v849 - 8);
    v759 = (void (*)(void))v795[2];
    v760 = v795 + 2;
    v575 = a17;
    v567 = a16;
    v622 = a15;
    v629 = a14;
    v636 = a13;
    uint64_t v644 = a12;
    uint64_t v651 = a11;
    v657 = a10;
    v663 = a9;
    uint64_t v170 = v849;
    ((void (*)(char *, char *))v759)(v140, v167);
    v794 = *(void **)(v839 - 8);
    uint64_t v171 = (void (*)(char *, char *, uint64_t))v794[2];
    v762 = v794 + 2;
    v767 = v171;
    ((void (*)(char *, char *))v171)(v169, v168);
    v818 = *(void **)(v838 - 8);
    uint64_t v172 = (void (*)(char *, char *, uint64_t))v818[2];
    v765 = v818 + 2;
    uint64_t v766 = v172;
    ((void (*)(char *, char *))v172)(v166, v809);
    v817 = *(void **)(v845 - 8);
    v755 = (void (*)(char *, char *))v817[2];
    uint64_t v764 = v817 + 2;
    v755(v165, v810);
    v816 = *(void **)(v850 - 8);
    v754 = (void (*)(char *, char *, uint64_t))v816[2];
    v763 = v816 + 2;
    v754(v164, v798, v850);
    v815 = *(void **)(v837 - 8);
    v756 = (void (*)(char *, char *, uint64_t))v815[2];
    v758 = v815 + 2;
    v756(v163, v799, v837);
    v814 = *(void **)(v835 - 8);
    v173 = (void (*)(char *, char *, uint64_t))v814[2];
    v753 = v814 + 2;
    v757 = v173;
    v173(v721, v800, v835);
    v793 = *(void **)(v844 - 8);
    uint64_t v174 = (char *)v793[2];
    uint64_t v784 = (char *)(v793 + 2);
    uint64_t v785 = v174;
    ((void (*)(char *, char *, uint64_t))v174)(v720, v801, v844);
    v813 = *(void **)(v843 - 8);
    uint64_t v175 = (char *)v813[2];
    uint64_t v782 = (char *)(v813 + 2);
    uint64_t v783 = v175;
    ((void (*)(char *, char *, uint64_t))v175)(v719, v802, v843);
    v812 = *(void **)(v851 - 8);
    uint64_t v176 = (char *)v812[2];
    uint64_t v780 = (void (*)(char *, char *, uint64_t))(v812 + 2);
    uint64_t v781 = v176;
    ((void (*)(char *, char *, uint64_t))v176)(v729, v803, v851);
    v811 = *(void **)(v848 - 8);
    v752 = (void (*)(char *, char *, uint64_t))v811[2];
    uint64_t v779 = v811 + 2;
    v752(v728, v804, v848);
    v791 = *(void **)(v847 - 8);
    uint64_t v177 = (char *)v791[2];
    uint64_t v777 = (char *)(v791 + 2);
    uint64_t v778 = v177;
    ((void (*)(char *, char *, uint64_t))v177)(v727, v805, v847);
    v790 = *(void **)(v842 - 8);
    uint64_t v178 = (void (*)(char *, char *, uint64_t))v790[2];
    uint64_t v775 = v790 + 2;
    uint64_t v776 = v178;
    v178(v726, v806, v842);
    v789 = *(void **)(v836 - 8);
    uint64_t v179 = (void (*)(char *, char *, uint64_t))v789[2];
    uint64_t v773 = v789 + 2;
    uint64_t v774 = v179;
    v179(v725, v807, v836);
    uint64_t v786 = *(void **)(v841 - 8);
    uint64_t v180 = (void (*)(char *, char *, uint64_t))v786[2];
    uint64_t v771 = v786 + 2;
    uint64_t v772 = v180;
    v180(v724, v808, v841);
    v751 = *(void **)(v840 - 8);
    v181 = (void (*)(char *, char *, uint64_t))v751[2];
    uint64_t v769 = v751 + 2;
    v770 = v181;
    v181(v723, v796, v840);
    v792 = *(void **)(v846 - 8);
    v761 = (void (*)(char *, char *, uint64_t))v792[2];
    v768 = v792 + 2;
    v761(v722, v797, v846);
    uint64_t v182 = (void (*)(char *, char *, uint64_t))v795[4];
    v560 = v795 + 4;
    v561 = v182;
    v182(v730, v140, v170);
    v713 = &v749[*(int *)(v819 + 48)];
    v714 = &v749[*((int *)v820 + 12)];
    v715 = &v749[*((int *)v821 + 12)];
    v716 = &v749[*((int *)v822 + 12)];
    v717 = &v749[*((int *)v823 + 12)];
    v718 = &v749[*(int *)(v824 + 48)];
    v730 = &v749[*((int *)v825 + 12)];
    v712 = &v749[*((int *)v826 + 12)];
    v604 = &v749[*((int *)v827 + 12)];
    v183 = v604;
    v605 = &v749[*((int *)v828 + 12)];
    uint64_t v184 = v605;
    v606 = &v749[*((int *)v829 + 12)];
    uint64_t v185 = v606;
    v607 = &v749[*((int *)v830 + 12)];
    uint64_t v186 = v607;
    v608 = &v749[*((int *)v831 + 12)];
    uint64_t v187 = v608;
    v609 = &v749[*(int *)(v832 + 48)];
    uint64_t v188 = v609;
    v610 = &v749[*((int *)v833 + 12)];
    uint64_t v189 = v610;
    uint64_t v190 = &v749[*((int *)v834 + 12)];
    v759();
    uint64_t v191 = v839;
    v767(v190, v787, v839);
    v766(v189, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v188, v810, v845);
    v754(v187, v798, v850);
    v756(v186, v799, v837);
    v757(v185, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v184, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v183, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v712, v803, v851);
    v752(v730, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v718, v805, v847);
    v776(v717, v806, v842);
    v774(v716, v807, v836);
    v772(v715, v808, v841);
    v770(v714, v796, v840);
    v761(v713, v797, v846);
    uint64_t v192 = (void (*)(char *, char *, uint64_t))v794[4];
    v554 = v794 + 4;
    v555 = v192;
    uint64_t v193 = v191;
    v192(v731, v190, v191);
    v707 = &v750[*(int *)(v819 + 48)];
    v708 = &v750[*((int *)v820 + 12)];
    v709 = &v750[*((int *)v821 + 12)];
    v710 = &v750[*((int *)v822 + 12)];
    v711 = &v750[*((int *)v823 + 12)];
    v731 = &v750[*(int *)(v824 + 48)];
    uint64_t v705 = &v750[*((int *)v825 + 12)];
    uint64_t v706 = &v750[*((int *)v826 + 12)];
    v597 = &v750[*((int *)v827 + 12)];
    uint64_t v194 = v597;
    v598 = &v750[*((int *)v828 + 12)];
    v195 = v598;
    v599 = &v750[*((int *)v829 + 12)];
    uint64_t v196 = v599;
    v600 = &v750[*((int *)v830 + 12)];
    uint64_t v197 = v600;
    v601 = &v750[*((int *)v831 + 12)];
    uint64_t v198 = v601;
    v602 = &v750[*(int *)(v832 + 48)];
    uint64_t v199 = v602;
    uint64_t v200 = &v750[*((int *)v833 + 12)];
    v603 = &v750[*((int *)v834 + 12)];
    uint64_t v201 = v603;
    v759();
    v767(v201, v787, v193);
    uint64_t v202 = v838;
    v766(v200, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v199, v810, v845);
    v754(v198, v798, v850);
    v756(v197, v799, v837);
    v757(v196, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v195, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v194, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v706, v803, v851);
    v752(v705, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v731, v805, v847);
    v776(v711, v806, v842);
    v774(v710, v807, v836);
    v772(v709, v808, v841);
    v770(v708, v796, v840);
    v761(v707, v797, v846);
    uint64_t v203 = (void (*)(char *, char *, uint64_t))v818[4];
    v544 = v818 + 4;
    v545 = v203;
    v203(v732, v200, v202);
    uint64_t v699 = &v704[*(int *)(v819 + 48)];
    uint64_t v700 = &v704[*((int *)v820 + 12)];
    uint64_t v701 = &v704[*((int *)v821 + 12)];
    uint64_t v702 = &v704[*((int *)v822 + 12)];
    uint64_t v703 = &v704[*((int *)v823 + 12)];
    v732 = &v704[*(int *)(v824 + 48)];
    uint64_t v697 = &v704[*((int *)v825 + 12)];
    uint64_t v698 = &v704[*((int *)v826 + 12)];
    uint64_t v590 = &v704[*((int *)v827 + 12)];
    uint64_t v204 = v590;
    uint64_t v591 = &v704[*((int *)v828 + 12)];
    uint64_t v205 = v591;
    uint64_t v592 = &v704[*((int *)v829 + 12)];
    uint64_t v206 = v592;
    v593 = &v704[*((int *)v830 + 12)];
    uint64_t v207 = v593;
    v594 = &v704[*((int *)v831 + 12)];
    uint64_t v208 = v594;
    uint64_t v209 = &v704[*(int *)(v832 + 48)];
    v595 = &v704[*((int *)v833 + 12)];
    uint64_t v210 = v595;
    v596 = &v704[*((int *)v834 + 12)];
    uint64_t v211 = v596;
    v759();
    v767(v211, v787, v839);
    v766(v210, v809, v202);
    uint64_t v212 = v845;
    ((void (*)(char *, char *, uint64_t))v755)(v209, v810, v845);
    v754(v208, v798, v850);
    v756(v207, v799, v837);
    v757(v206, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v205, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v204, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v698, v803, v851);
    v752(v697, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v732, v805, v847);
    v776(v703, v806, v842);
    v774(v702, v807, v836);
    v772(v701, v808, v841);
    v770(v700, v796, v840);
    v761(v699, v797, v846);
    uint64_t v213 = (void (*)(char *, char *, uint64_t))v817[4];
    v540 = v817 + 4;
    v541 = v213;
    uint64_t v214 = v209;
    uint64_t v215 = v212;
    v213(v733, v214, v212);
    uint64_t v691 = &v696[*(int *)(v819 + 48)];
    uint64_t v692 = &v696[*((int *)v820 + 12)];
    uint64_t v693 = &v696[*((int *)v821 + 12)];
    uint64_t v694 = &v696[*((int *)v822 + 12)];
    uint64_t v695 = &v696[*((int *)v823 + 12)];
    v733 = &v696[*(int *)(v824 + 48)];
    v689 = &v696[*((int *)v825 + 12)];
    uint64_t v690 = &v696[*((int *)v826 + 12)];
    uint64_t v583 = &v696[*((int *)v827 + 12)];
    v216 = v583;
    uint64_t v584 = &v696[*((int *)v828 + 12)];
    uint64_t v217 = v584;
    uint64_t v585 = &v696[*((int *)v829 + 12)];
    uint64_t v218 = v585;
    uint64_t v586 = &v696[*((int *)v830 + 12)];
    uint64_t v219 = v586;
    v220 = &v696[*((int *)v831 + 12)];
    uint64_t v587 = &v696[*(int *)(v832 + 48)];
    uint64_t v221 = v587;
    uint64_t v588 = &v696[*((int *)v833 + 12)];
    uint64_t v222 = v588;
    uint64_t v589 = &v696[*((int *)v834 + 12)];
    uint64_t v223 = v589;
    v759();
    v767(v223, v787, v839);
    v766(v222, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v221, v810, v215);
    uint64_t v224 = v850;
    v754(v220, v798, v850);
    v756(v219, v799, v837);
    v757(v218, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v217, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v216, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v690, v803, v851);
    v752(v689, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v733, v805, v847);
    v776(v695, v806, v842);
    v774(v694, v807, v836);
    v772(v693, v808, v841);
    v770(v692, v796, v840);
    v761(v691, v797, v846);
    uint64_t v225 = (void (*)(char *, char *, uint64_t))v816[4];
    uint64_t v530 = v816 + 4;
    uint64_t v531 = v225;
    uint64_t v226 = v224;
    v225(v734, v220, v224);
    uint64_t v683 = &v688[*(int *)(v819 + 48)];
    v684 = &v688[*((int *)v820 + 12)];
    v685 = &v688[*((int *)v821 + 12)];
    v686 = &v688[*((int *)v822 + 12)];
    uint64_t v687 = &v688[*((int *)v823 + 12)];
    v734 = &v688[*(int *)(v824 + 48)];
    v681 = &v688[*((int *)v825 + 12)];
    v682 = &v688[*((int *)v826 + 12)];
    v576 = &v688[*((int *)v827 + 12)];
    uint64_t v227 = v576;
    uint64_t v577 = &v688[*((int *)v828 + 12)];
    uint64_t v228 = v577;
    v578 = &v688[*((int *)v829 + 12)];
    uint64_t v229 = v578;
    uint64_t v230 = &v688[*((int *)v830 + 12)];
    uint64_t v579 = &v688[*((int *)v831 + 12)];
    uint64_t v231 = v579;
    uint64_t v580 = &v688[*(int *)(v832 + 48)];
    uint64_t v232 = v580;
    uint64_t v581 = &v688[*((int *)v833 + 12)];
    uint64_t v233 = v581;
    uint64_t v582 = &v688[*((int *)v834 + 12)];
    uint64_t v234 = v582;
    v759();
    v767(v234, v787, v839);
    v766(v233, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v232, v810, v845);
    v754(v231, v798, v226);
    uint64_t v235 = v837;
    v756(v230, v799, v837);
    v757(v229, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v228, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v227, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v682, v803, v851);
    v752(v681, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v734, v805, v847);
    v776(v687, v806, v842);
    v774(v686, v807, v836);
    v772(v685, v808, v841);
    v770(v684, v796, v840);
    v761(v683, v797, v846);
    uint64_t v236 = (void (*)(char *, char *, uint64_t))v815[4];
    v523 = v815 + 4;
    v524 = v236;
    uint64_t v237 = v235;
    v236(v735, v230, v235);
    v676 = &v748[*(int *)(v819 + 48)];
    v677 = &v748[*((int *)v820 + 12)];
    uint64_t v678 = &v748[*((int *)v821 + 12)];
    v679 = &v748[*((int *)v822 + 12)];
    v680 = &v748[*((int *)v823 + 12)];
    v735 = &v748[*(int *)(v824 + 48)];
    v675 = &v748[*((int *)v825 + 12)];
    v566 = &v748[*((int *)v826 + 12)];
    uint64_t v238 = v566;
    v568 = &v748[*((int *)v827 + 12)];
    uint64_t v239 = v568;
    v569 = &v748[*((int *)v828 + 12)];
    uint64_t v240 = v569;
    v674 = &v748[*((int *)v829 + 12)];
    v570 = &v748[*((int *)v830 + 12)];
    uint64_t v241 = v570;
    v571 = &v748[*((int *)v831 + 12)];
    uint64_t v242 = v571;
    v572 = &v748[*(int *)(v832 + 48)];
    v243 = v572;
    v573 = &v748[*((int *)v833 + 12)];
    uint64_t v244 = v573;
    v574 = &v748[*((int *)v834 + 12)];
    uint64_t v245 = v574;
    v759();
    v767(v245, v787, v839);
    v766(v244, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v243, v810, v845);
    v754(v242, v798, v850);
    v756(v241, v799, v237);
    uint64_t v246 = v674;
    uint64_t v247 = v835;
    v757(v674, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v240, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v239, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v238, v803, v851);
    v752(v675, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v735, v805, v847);
    v776(v680, v806, v842);
    v774(v679, v807, v836);
    v772(v678, v808, v841);
    v770(v677, v796, v840);
    v761(v676, v797, v846);
    uint64_t v248 = (void (*)(char *, char *, uint64_t))v814[4];
    v517 = v814 + 4;
    v518 = v248;
    v248(v736, v246, v247);
    v670 = &v747[*(int *)(v819 + 48)];
    v671 = &v747[*((int *)v820 + 12)];
    v672 = &v747[*((int *)v821 + 12)];
    v673 = &v747[*((int *)v822 + 12)];
    v674 = &v747[*((int *)v823 + 12)];
    v736 = &v747[*(int *)(v824 + 48)];
    v669 = &v747[*((int *)v825 + 12)];
    v556 = &v747[*((int *)v826 + 12)];
    uint64_t v249 = v556;
    v557 = &v747[*((int *)v827 + 12)];
    uint64_t v250 = v557;
    v668 = &v747[*((int *)v828 + 12)];
    v558 = &v747[*((int *)v829 + 12)];
    uint64_t v251 = v558;
    v559 = &v747[*((int *)v830 + 12)];
    uint64_t v252 = v559;
    v562 = &v747[*((int *)v831 + 12)];
    uint64_t v253 = v562;
    v563 = &v747[*(int *)(v832 + 48)];
    uint64_t v254 = v563;
    v564 = &v747[*((int *)v833 + 12)];
    uint64_t v255 = v564;
    v565 = &v747[*((int *)v834 + 12)];
    uint64_t v256 = v565;
    v759();
    v767(v256, v787, v839);
    v766(v255, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v254, v810, v845);
    v754(v253, v798, v850);
    v756(v252, v799, v837);
    v757(v251, v800, v247);
    uint64_t v257 = v668;
    uint64_t v258 = v844;
    ((void (*)(char *, char *, uint64_t))v785)(v668, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v250, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v249, v803, v851);
    v752(v669, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v736, v805, v847);
    v776(v674, v806, v842);
    v774(v673, v807, v836);
    v772(v672, v808, v841);
    v770(v671, v796, v840);
    v761(v670, v797, v846);
    v259 = (void (*)(char *, char *, uint64_t))v793[4];
    v507 = v793 + 4;
    v508 = v259;
    v259(v737, v257, v258);
    v664 = &v746[*(int *)(v819 + 48)];
    v665 = &v746[*((int *)v820 + 12)];
    v666 = &v746[*((int *)v821 + 12)];
    v667 = &v746[*((int *)v822 + 12)];
    v668 = &v746[*((int *)v823 + 12)];
    v737 = &v746[*(int *)(v824 + 48)];
    v543 = &v746[*((int *)v825 + 12)];
    uint64_t v260 = v543;
    v546 = &v746[*((int *)v826 + 12)];
    uint64_t v261 = v546;
    v662 = &v746[*((int *)v827 + 12)];
    v547 = &v746[*((int *)v828 + 12)];
    uint64_t v262 = v547;
    v548 = &v746[*((int *)v829 + 12)];
    uint64_t v263 = v548;
    v549 = &v746[*((int *)v830 + 12)];
    uint64_t v264 = v549;
    v550 = &v746[*((int *)v831 + 12)];
    uint64_t v265 = v550;
    v551 = &v746[*(int *)(v832 + 48)];
    uint64_t v266 = v551;
    v552 = &v746[*((int *)v833 + 12)];
    uint64_t v267 = v552;
    v553 = &v746[*((int *)v834 + 12)];
    uint64_t v268 = v553;
    v759();
    v767(v268, v787, v839);
    v766(v267, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v266, v810, v845);
    v754(v265, v798, v850);
    v756(v264, v799, v837);
    v757(v263, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v262, v801, v844);
    uint64_t v269 = v662;
    uint64_t v270 = v843;
    ((void (*)(char *, char *, uint64_t))v783)(v662, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v261, v803, v851);
    v752(v260, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v737, v805, v847);
    v776(v668, v806, v842);
    v774(v667, v807, v836);
    v772(v666, v808, v841);
    v770(v665, v796, v840);
    v761(v664, v797, v846);
    uint64_t v271 = (void (*)(char *, char *, uint64_t))v813[4];
    v503 = v813 + 4;
    v504 = v271;
    v271(v663, v269, v270);
    v658 = &v745[*(int *)(v819 + 48)];
    v659 = &v745[*((int *)v820 + 12)];
    v660 = &v745[*((int *)v821 + 12)];
    v661 = &v745[*((int *)v822 + 12)];
    v662 = &v745[*((int *)v823 + 12)];
    v663 = &v745[*(int *)(v824 + 48)];
    uint64_t v532 = &v745[*((int *)v825 + 12)];
    uint64_t v272 = v532;
    v656 = &v745[*((int *)v826 + 12)];
    uint64_t v533 = &v745[*((int *)v827 + 12)];
    uint64_t v273 = v533;
    uint64_t v534 = &v745[*((int *)v828 + 12)];
    uint64_t v274 = v534;
    uint64_t v535 = &v745[*((int *)v829 + 12)];
    uint64_t v275 = v535;
    uint64_t v536 = &v745[*((int *)v830 + 12)];
    v276 = v536;
    uint64_t v537 = &v745[*((int *)v831 + 12)];
    uint64_t v277 = v537;
    v538 = &v745[*(int *)(v832 + 48)];
    uint64_t v278 = v538;
    v539 = &v745[*((int *)v833 + 12)];
    uint64_t v279 = v539;
    v542 = &v745[*((int *)v834 + 12)];
    uint64_t v280 = v542;
    v759();
    v767(v280, v787, v839);
    v766(v279, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v278, v810, v845);
    v754(v277, v798, v850);
    v756(v276, v799, v837);
    v757(v275, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v274, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v273, v802, v843);
    uint64_t v281 = v656;
    uint64_t v282 = v851;
    ((void (*)(char *, char *, uint64_t))v781)(v656, v803, v851);
    v752(v272, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v663, v805, v847);
    v776(v662, v806, v842);
    v774(v661, v807, v836);
    v772(v660, v808, v841);
    v770(v659, v796, v840);
    v761(v658, v797, v846);
    uint64_t v283 = (void (*)(char *, char *, uint64_t))v812[4];
    v496 = v812 + 4;
    v497 = v283;
    v283(v657, v281, v282);
    v652 = &v744[*(int *)(v819 + 48)];
    v653 = &v744[*((int *)v820 + 12)];
    v654 = &v744[*((int *)v821 + 12)];
    v655 = &v744[*((int *)v822 + 12)];
    v656 = &v744[*((int *)v823 + 12)];
    v657 = &v744[*(int *)(v824 + 48)];
    uint64_t v650 = &v744[*((int *)v825 + 12)];
    v519 = &v744[*((int *)v826 + 12)];
    uint64_t v284 = v519;
    uint64_t v520 = &v744[*((int *)v827 + 12)];
    uint64_t v285 = v520;
    v521 = &v744[*((int *)v828 + 12)];
    uint64_t v286 = v521;
    v522 = &v744[*((int *)v829 + 12)];
    uint64_t v287 = v522;
    v525 = &v744[*((int *)v830 + 12)];
    uint64_t v288 = v525;
    uint64_t v526 = &v744[*((int *)v831 + 12)];
    uint64_t v289 = v526;
    uint64_t v527 = &v744[*(int *)(v832 + 48)];
    uint64_t v290 = v527;
    uint64_t v528 = &v744[*((int *)v833 + 12)];
    uint64_t v291 = v528;
    uint64_t v529 = &v744[*((int *)v834 + 12)];
    uint64_t v292 = v529;
    v759();
    v767(v292, v787, v839);
    v766(v291, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v290, v810, v845);
    v754(v289, v798, v850);
    v756(v288, v799, v837);
    v757(v287, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v286, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v285, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v284, v803, v851);
    uint64_t v293 = v650;
    uint64_t v294 = v848;
    v752(v650, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v657, v805, v847);
    v776(v656, v806, v842);
    v774(v655, v807, v836);
    v772(v654, v808, v841);
    v770(v653, v796, v840);
    v761(v652, v797, v846);
    uint64_t v295 = (void (*)(char *, char *, uint64_t))v811[4];
    v487 = v811 + 4;
    v489 = v295;
    v295(v651, v293, v294);
    uint64_t v646 = &v743[*(int *)(v819 + 48)];
    uint64_t v647 = &v743[*((int *)v820 + 12)];
    uint64_t v648 = &v743[*((int *)v821 + 12)];
    uint64_t v649 = &v743[*((int *)v822 + 12)];
    uint64_t v650 = &v743[*((int *)v823 + 12)];
    uint64_t v296 = &v743[*(int *)(v824 + 48)];
    uint64_t v651 = &v743[*((int *)v825 + 12)];
    uint64_t v645 = &v743[*((int *)v826 + 12)];
    v509 = &v743[*((int *)v827 + 12)];
    uint64_t v297 = v509;
    v510 = &v743[*((int *)v828 + 12)];
    uint64_t v298 = v510;
    v511 = &v743[*((int *)v829 + 12)];
    uint64_t v299 = v511;
    v512 = &v743[*((int *)v830 + 12)];
    v300 = v512;
    v513 = &v743[*((int *)v831 + 12)];
    uint64_t v301 = v513;
    v514 = &v743[*(int *)(v832 + 48)];
    uint64_t v302 = v514;
    v515 = &v743[*((int *)v833 + 12)];
    v303 = v515;
    v516 = &v743[*((int *)v834 + 12)];
    uint64_t v304 = v516;
    v759();
    v767(v304, v787, v839);
    v766(v303, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v302, v810, v845);
    v754(v301, v798, v850);
    v756(v300, v799, v837);
    v757(v299, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v298, v801, v844);
    uint64_t v305 = v297;
    uint64_t v306 = v843;
    ((void (*)(char *, char *, uint64_t))v783)(v305, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v645, v803, v851);
    v752(v651, v804, v848);
    uint64_t v307 = v296;
    uint64_t v308 = v296;
    uint64_t v309 = v847;
    ((void (*)(char *, char *, uint64_t))v778)(v308, v805, v847);
    v776(v650, v806, v842);
    v774(v649, v807, v836);
    v772(v648, v808, v841);
    v770(v647, v796, v840);
    v761(v646, v797, v846);
    uint64_t v310 = (void (*)(char *, char *, uint64_t))v791[4];
    uint64_t v484 = v791 + 4;
    uint64_t v485 = v310;
    v310(v644, v307, v309);
    uint64_t v639 = &v742[*(int *)(v819 + 48)];
    uint64_t v640 = &v742[*((int *)v820 + 12)];
    uint64_t v641 = &v742[*((int *)v821 + 12)];
    uint64_t v642 = &v742[*((int *)v822 + 12)];
    uint64_t v311 = &v742[*((int *)v823 + 12)];
    uint64_t v643 = &v742[*(int *)(v824 + 48)];
    uint64_t v644 = &v742[*((int *)v825 + 12)];
    uint64_t v637 = &v742[*((int *)v826 + 12)];
    uint64_t v638 = &v742[*((int *)v827 + 12)];
    v498 = &v742[*((int *)v828 + 12)];
    uint64_t v312 = v498;
    v499 = &v742[*((int *)v829 + 12)];
    uint64_t v313 = v499;
    v500 = &v742[*((int *)v830 + 12)];
    uint64_t v314 = v500;
    v501 = &v742[*((int *)v831 + 12)];
    uint64_t v315 = v501;
    v502 = &v742[*(int *)(v832 + 48)];
    uint64_t v316 = v502;
    v505 = &v742[*((int *)v833 + 12)];
    uint64_t v317 = v505;
    v506 = &v742[*((int *)v834 + 12)];
    uint64_t v318 = v506;
    v759();
    v767(v318, v787, v839);
    v766(v317, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v316, v810, v845);
    v754(v315, v798, v850);
    v756(v314, v799, v837);
    v757(v313, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v312, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v638, v802, v306);
    ((void (*)(char *, char *, uint64_t))v781)(v637, v803, v851);
    v752(v644, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v643, v805, v847);
    uint64_t v319 = v842;
    v776(v311, v806, v842);
    v774(v642, v807, v836);
    v772(v641, v808, v841);
    v770(v640, v796, v840);
    v761(v639, v797, v846);
    uint64_t v320 = (void (*)(char *, char *, uint64_t))v790[4];
    v474 = v790 + 4;
    v475 = v320;
    v320(v636, v311, v319);
    uint64_t v631 = &v741[*(int *)(v819 + 48)];
    v632 = &v741[*((int *)v820 + 12)];
    v633 = &v741[*((int *)v821 + 12)];
    uint64_t v321 = &v741[*((int *)v822 + 12)];
    uint64_t v634 = &v741[*((int *)v823 + 12)];
    v635 = &v741[*(int *)(v824 + 48)];
    v636 = &v741[*((int *)v825 + 12)];
    v630 = &v741[*((int *)v826 + 12)];
    uint64_t v486 = &v741[*((int *)v827 + 12)];
    uint64_t v322 = v486;
    v488 = &v741[*((int *)v828 + 12)];
    uint64_t v323 = v488;
    v490 = &v741[*((int *)v829 + 12)];
    uint64_t v324 = v490;
    uint64_t v491 = &v741[*((int *)v830 + 12)];
    uint64_t v325 = v491;
    v492 = &v741[*((int *)v831 + 12)];
    uint64_t v326 = v492;
    v493 = &v741[*(int *)(v832 + 48)];
    uint64_t v327 = v493;
    uint64_t v494 = &v741[*((int *)v833 + 12)];
    v328 = v494;
    v495 = &v741[*((int *)v834 + 12)];
    uint64_t v329 = v495;
    v759();
    v767(v329, v787, v839);
    v766(v328, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v327, v810, v845);
    v754(v326, v798, v850);
    v756(v325, v799, v837);
    v757(v324, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v323, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v322, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v630, v803, v851);
    v752(v636, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v635, v805, v847);
    v776(v634, v806, v842);
    uint64_t v330 = v836;
    v774(v321, v807, v836);
    v772(v633, v808, v841);
    v770(v632, v796, v840);
    v761(v631, v797, v846);
    uint64_t v331 = (void (*)(uint64_t, char *, uint64_t))v789[4];
    v469 = v789 + 4;
    v470 = v331;
    v331((uint64_t)v629, v321, v330);
    v624 = &v740[*(int *)(v819 + 48)];
    v625 = &v740[*((int *)v820 + 12)];
    uint64_t v332 = &v740[*((int *)v821 + 12)];
    v626 = &v740[*((int *)v822 + 12)];
    v627 = &v740[*((int *)v823 + 12)];
    v628 = &v740[*(int *)(v824 + 48)];
    v629 = &v740[*((int *)v825 + 12)];
    v623 = &v740[*((int *)v826 + 12)];
    uint64_t v476 = &v740[*((int *)v827 + 12)];
    uint64_t v333 = v476;
    uint64_t v477 = &v740[*((int *)v828 + 12)];
    uint64_t v334 = v477;
    uint64_t v478 = &v740[*((int *)v829 + 12)];
    uint64_t v335 = v478;
    uint64_t v479 = &v740[*((int *)v830 + 12)];
    uint64_t v336 = v479;
    uint64_t v480 = &v740[*((int *)v831 + 12)];
    uint64_t v337 = v480;
    uint64_t v481 = &v740[*(int *)(v832 + 48)];
    uint64_t v338 = v481;
    uint64_t v482 = &v740[*((int *)v833 + 12)];
    uint64_t v339 = v482;
    uint64_t v483 = &v740[*((int *)v834 + 12)];
    uint64_t v340 = v483;
    v759();
    v767(v340, v787, v839);
    v766(v339, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v338, v810, v845);
    v754(v337, v798, v850);
    v756(v336, v799, v837);
    v757(v335, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v334, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v333, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v623, v803, v851);
    v752(v629, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v628, v805, v847);
    v776(v627, v806, v842);
    v774(v626, v807, v836);
    uint64_t v341 = v841;
    v772(v332, v808, v841);
    v770(v625, v796, v840);
    v761(v624, v797, v846);
    uint64_t v342 = (void (*)(char *, char *, uint64_t))v786[4];
    v461[1] = v786 + 4;
    v462 = v342;
    v342(v622, v332, v341);
    v617 = &v739[*(int *)(v819 + 48)];
    v461[0] = &v739[*((int *)v820 + 12)];
    v618 = &v739[*((int *)v821 + 12)];
    v619 = &v739[*((int *)v822 + 12)];
    v620 = &v739[*((int *)v823 + 12)];
    v621 = &v739[*(int *)(v824 + 48)];
    v622 = &v739[*((int *)v825 + 12)];
    v463 = &v739[*((int *)v826 + 12)];
    uint64_t v343 = v463;
    v464 = &v739[*((int *)v827 + 12)];
    uint64_t v344 = v464;
    v465 = &v739[*((int *)v828 + 12)];
    uint64_t v345 = v465;
    v466 = &v739[*((int *)v829 + 12)];
    uint64_t v346 = v466;
    v467 = &v739[*((int *)v830 + 12)];
    uint64_t v347 = v467;
    uint64_t v468 = &v739[*((int *)v831 + 12)];
    uint64_t v348 = v468;
    v471 = &v739[*(int *)(v832 + 48)];
    uint64_t v349 = v471;
    v472 = &v739[*((int *)v833 + 12)];
    v350 = v472;
    v473 = &v739[*((int *)v834 + 12)];
    uint64_t v351 = v473;
    v759();
    uint64_t v352 = v351;
    uint64_t v353 = v839;
    v767(v352, v787, v839);
    v766(v350, v809, v838);
    ((void (*)(char *, char *, uint64_t))v755)(v349, v810, v845);
    v754(v348, v798, v850);
    v756(v347, v799, v837);
    v757(v346, v800, v835);
    ((void (*)(char *, char *, uint64_t))v785)(v345, v801, v844);
    ((void (*)(char *, char *, uint64_t))v783)(v344, v802, v843);
    ((void (*)(char *, char *, uint64_t))v781)(v343, v803, v851);
    v752(v622, v804, v848);
    ((void (*)(char *, char *, uint64_t))v778)(v621, v805, v847);
    v776(v620, v806, v842);
    v774(v619, v807, v836);
    v772(v618, v808, v841);
    uint64_t v354 = (char *)v461[0];
    uint64_t v355 = v840;
    v770((char *)v461[0], v796, v840);
    v761(v617, v797, v846);
    uint64_t v356 = (void (*)(char *, char *, uint64_t))v751[4];
    uint64_t v779 = v751 + 4;
    uint64_t v780 = v356;
    v356(v567, v354, v355);
    uint64_t v357 = v738;
    uint64_t v781 = &v738[*(int *)(v819 + 48)];
    uint64_t v777 = &v738[*((int *)v820 + 12)];
    v820 = &v738[*((int *)v821 + 12)];
    uint64_t v819 = (uint64_t)&v738[*((int *)v822 + 12)];
    v821 = &v738[*((int *)v823 + 12)];
    v823 = &v738[*(int *)(v824 + 48)];
    v825 = &v738[*((int *)v825 + 12)];
    v826 = &v738[*((int *)v826 + 12)];
    v827 = &v738[*((int *)v827 + 12)];
    uint64_t v778 = &v738[*((int *)v828 + 12)];
    uint64_t v358 = v778;
    uint64_t v782 = &v738[*((int *)v829 + 12)];
    uint64_t v359 = v782;
    uint64_t v783 = &v738[*((int *)v830 + 12)];
    uint64_t v360 = v783;
    uint64_t v784 = &v738[*((int *)v831 + 12)];
    uint64_t v361 = v784;
    v829 = &v738[*(int *)(v832 + 48)];
    uint64_t v362 = v829;
    v831 = &v738[*((int *)v833 + 12)];
    uint64_t v363 = v831;
    uint64_t v785 = &v738[*((int *)v834 + 12)];
    uint64_t v364 = v785;
    v561(v738, v788, v849);
    v555(v364, v787, v353);
    v545(v363, v809, v838);
    v541(v362, v810, v845);
    v531(v361, v798, v850);
    v524(v360, v799, v837);
    v518(v359, v800, v835);
    v508(v358, v801, v844);
    v504(v827, v802, v843);
    v497(v826, v803, v851);
    v489(v825, v804, v848);
    v485(v823, v805, v847);
    v475(v821, v806, v842);
    uint64_t v365 = v836;
    v470(v819, v807, v836);
    uint64_t v366 = v841;
    v462(v820, v808, v841);
    uint64_t v367 = v777;
    uint64_t v368 = v840;
    v780(v777, v796, v840);
    uint64_t v369 = (void (*)(char *, char *, uint64_t))v792[4];
    uint64_t v370 = v781;
    uint64_t v371 = v846;
    v369(v781, v797, v846);
    v369(v575, v370, v371);
    uint64_t v372 = (int *)v751[1];
    ++v751;
    v822 = (void (*)(char *, uint64_t))v372;
    ((void (*)(char *, uint64_t))v372)(v367, v368);
    uint64_t v373 = (char *)v786[1];
    ++v786;
    v810 = v373;
    ((void (*)(char *, uint64_t))v373)(v820, v366);
    uint64_t v374 = (char *)v789[1];
    ++v789;
    v820 = v374;
    uint64_t v375 = v365;
    ((void (*)(uint64_t, uint64_t))v374)(v819, v365);
    uint64_t v824 = v790[1];
    ++v790;
    ((void (*)(char *, uint64_t))v824)(v821, v842);
    uint64_t v376 = (char *)v791[1];
    ++v791;
    v821 = v376;
    ((void (*)(char *, uint64_t))v376)(v823, v847);
    uint64_t v377 = (int *)v811[1];
    ++v811;
    v828 = (void (*)(char *, uint64_t))v377;
    uint64_t v378 = v848;
    ((void (*)(char *, uint64_t))v377)(v825, v848);
    v379 = (int *)v812[1];
    ++v812;
    v834 = (void (*)(char *, uint64_t))v379;
    ((void (*)(char *, uint64_t))v379)(v826, v851);
    uint64_t v832 = v813[1];
    ++v813;
    uint64_t v380 = v843;
    ((void (*)(char *, uint64_t))v832)(v827, v843);
    uint64_t v381 = (char *)v793[1];
    ++v793;
    v823 = v381;
    ((void (*)(char *, uint64_t))v381)(v778, v844);
    uint64_t v382 = (int *)v814[1];
    ++v814;
    v830 = (void (*)(char *, uint64_t))v382;
    uint64_t v383 = v835;
    ((void (*)(char *, uint64_t))v382)(v782, v835);
    v826 = (char *)v815[1];
    ++v815;
    ((void (*)(char *, uint64_t))v826)(v783, v837);
    uint64_t v384 = (int *)v816[1];
    ++v816;
    v833 = (void (*)(char *, uint64_t))v384;
    ((void (*)(char *, uint64_t))v384)(v784, v850);
    v385 = (char *)v817[1];
    ++v817;
    v827 = v385;
    ((void (*)(char *, uint64_t))v385)(v829, v845);
    uint64_t v386 = (char *)v818[1];
    ++v818;
    v829 = v386;
    ((void (*)(char *, uint64_t))v386)(v831, v838);
    uint64_t v387 = (char *)v794[1];
    ++v794;
    v831 = v387;
    uint64_t v388 = v839;
    ((void (*)(char *, uint64_t))v387)(v785, v839);
    v825 = (char *)v795[1];
    ++v795;
    uint64_t v389 = v849;
    ((void (*)(char *, uint64_t))v825)(v357, v849);
    uint64_t v390 = (void (*)(char *, uint64_t))v792[1];
    ++v792;
    uint64_t v819 = (uint64_t)v390;
    v390(v617, v846);
    ((void (*)(char *, uint64_t))v810)(v618, v841);
    ((void (*)(char *, uint64_t))v820)(v619, v375);
    ((void (*)(char *, uint64_t))v824)(v620, v842);
    ((void (*)(char *, uint64_t))v821)(v621, v847);
    v828(v622, v378);
    uint64_t v391 = v851;
    v834(v463, v851);
    ((void (*)(char *, uint64_t))v832)(v464, v380);
    uint64_t v392 = v844;
    ((void (*)(char *, uint64_t))v823)(v465, v844);
    v830(v466, v383);
    uint64_t v393 = v837;
    ((void (*)(char *, uint64_t))v826)(v467, v837);
    uint64_t v394 = v850;
    v833(v468, v850);
    ((void (*)(char *, uint64_t))v827)(v471, v845);
    uint64_t v395 = v838;
    ((void (*)(char *, uint64_t))v829)(v472, v838);
    ((void (*)(char *, uint64_t))v831)(v473, v388);
    ((void (*)(char *, uint64_t))v825)(v739, v389);
    uint64_t v396 = (void (*)(char *, uint64_t))v819;
    ((void (*)(char *, uint64_t))v819)(v624, v846);
    v822(v625, v840);
    ((void (*)(char *, uint64_t))v820)(v626, v375);
    uint64_t v397 = v842;
    ((void (*)(char *, uint64_t))v824)(v627, v842);
    ((void (*)(char *, uint64_t))v821)(v628, v847);
    v828(v629, v848);
    v834(v623, v391);
    uint64_t v398 = v843;
    ((void (*)(char *, uint64_t))v832)(v476, v843);
    ((void (*)(char *, uint64_t))v823)(v477, v392);
    v830(v478, v835);
    ((void (*)(char *, uint64_t))v826)(v479, v393);
    v833(v480, v394);
    uint64_t v399 = v845;
    ((void (*)(char *, uint64_t))v827)(v481, v845);
    ((void (*)(char *, uint64_t))v829)(v482, v395);
    ((void (*)(char *, uint64_t))v831)(v483, v839);
    ((void (*)(char *, uint64_t))v825)(v740, v849);
    v396(v631, v846);
    uint64_t v400 = v840;
    v822(v632, v840);
    v401 = v810;
    ((void (*)(char *, uint64_t))v810)(v633, v841);
    ((void (*)(char *, uint64_t))v824)(v634, v397);
    uint64_t v402 = v847;
    ((void (*)(char *, uint64_t))v821)(v635, v847);
    v828(v636, v848);
    v834(v630, v851);
    ((void (*)(char *, uint64_t))v832)(v486, v398);
    uint64_t v403 = v844;
    ((void (*)(char *, uint64_t))v823)(v488, v844);
    uint64_t v404 = v835;
    v830(v490, v835);
    uint64_t v405 = v837;
    ((void (*)(char *, uint64_t))v826)(v491, v837);
    v833(v492, v850);
    ((void (*)(char *, uint64_t))v827)(v493, v399);
    uint64_t v406 = v838;
    ((void (*)(char *, uint64_t))v829)(v494, v838);
    ((void (*)(char *, uint64_t))v831)(v495, v839);
    ((void (*)(char *, uint64_t))v825)(v741, v849);
    ((void (*)(char *, uint64_t))v819)(v639, v846);
    v822(v640, v400);
    ((void (*)(char *, uint64_t))v401)(v641, v841);
    uint64_t v407 = v820;
    ((void (*)(char *, uint64_t))v820)(v642, v836);
    ((void (*)(char *, uint64_t))v821)(v643, v402);
    v828(v644, v848);
    v834(v637, v851);
    ((void (*)(char *, uint64_t))v832)(v638, v843);
    ((void (*)(char *, uint64_t))v823)(v498, v403);
    v830(v499, v404);
    ((void (*)(char *, uint64_t))v826)(v500, v405);
    v833(v501, v850);
    ((void (*)(char *, uint64_t))v827)(v502, v845);
    ((void (*)(char *, uint64_t))v829)(v505, v406);
    uint64_t v408 = v839;
    ((void (*)(char *, uint64_t))v831)(v506, v839);
    ((void (*)(char *, uint64_t))v825)(v742, v849);
    uint64_t v409 = v846;
    ((void (*)(char *, uint64_t))v819)(v646, v846);
    uint64_t v410 = v822;
    v822(v647, v840);
    uint64_t v411 = v841;
    ((void (*)(char *, uint64_t))v810)(v648, v841);
    uint64_t v412 = v836;
    ((void (*)(char *, uint64_t))v407)(v649, v836);
    uint64_t v413 = v842;
    v414 = (void (*)(char *, uint64_t))v824;
    ((void (*)(char *, uint64_t))v824)(v650, v842);
    v828(v651, v848);
    v834(v645, v851);
    ((void (*)(char *, uint64_t))v832)(v509, v843);
    ((void (*)(char *, uint64_t))v823)(v510, v844);
    uint64_t v415 = v835;
    v830(v511, v835);
    ((void (*)(char *, uint64_t))v826)(v512, v837);
    v833(v513, v850);
    ((void (*)(char *, uint64_t))v827)(v514, v845);
    ((void (*)(char *, uint64_t))v829)(v515, v838);
    ((void (*)(char *, uint64_t))v831)(v516, v408);
    ((void (*)(char *, uint64_t))v825)(v743, v849);
    ((void (*)(char *, uint64_t))v819)(v652, v409);
    v410(v653, v840);
    ((void (*)(char *, uint64_t))v810)(v654, v411);
    uint64_t v416 = v820;
    ((void (*)(char *, uint64_t))v820)(v655, v412);
    v414(v656, v413);
    uint64_t v417 = v847;
    uint64_t v418 = v821;
    ((void (*)(char *, uint64_t))v821)(v657, v847);
    v834(v519, v851);
    ((void (*)(char *, uint64_t))v832)(v520, v843);
    ((void (*)(char *, uint64_t))v823)(v521, v844);
    v830(v522, v415);
    ((void (*)(char *, uint64_t))v826)(v525, v837);
    v833(v526, v850);
    ((void (*)(char *, uint64_t))v827)(v527, v845);
    ((void (*)(char *, uint64_t))v829)(v528, v838);
    ((void (*)(char *, uint64_t))v831)(v529, v839);
    ((void (*)(char *, uint64_t))v825)(v744, v849);
    ((void (*)(char *, uint64_t))v819)(v658, v846);
    v822(v659, v840);
    ((void (*)(char *, uint64_t))v810)(v660, v841);
    ((void (*)(char *, uint64_t))v416)(v661, v836);
    ((void (*)(char *, uint64_t))v824)(v662, v413);
    ((void (*)(char *, uint64_t))v418)(v663, v417);
    uint64_t v419 = v848;
    uint64_t v420 = v828;
    v828(v532, v848);
    ((void (*)(char *, uint64_t))v832)(v533, v843);
    uint64_t v421 = v844;
    uint64_t v422 = v823;
    ((void (*)(char *, uint64_t))v823)(v534, v844);
    uint64_t v423 = v835;
    v830(v535, v835);
    uint64_t v424 = v837;
    ((void (*)(char *, uint64_t))v826)(v536, v837);
    v833(v537, v850);
    ((void (*)(char *, uint64_t))v827)(v538, v845);
    ((void (*)(char *, uint64_t))v829)(v539, v838);
    ((void (*)(char *, uint64_t))v831)(v542, v839);
    ((void (*)(char *, uint64_t))v825)(v745, v849);
    ((void (*)(char *, uint64_t))v819)(v664, v846);
    v822(v665, v840);
    ((void (*)(char *, uint64_t))v810)(v666, v841);
    ((void (*)(char *, uint64_t))v820)(v667, v836);
    ((void (*)(char *, uint64_t))v824)(v668, v842);
    ((void (*)(char *, uint64_t))v821)(v737, v847);
    v420(v543, v419);
    v834(v546, v851);
    ((void (*)(char *, uint64_t))v422)(v547, v421);
    uint64_t v425 = v830;
    v830(v548, v423);
    ((void (*)(char *, uint64_t))v826)(v549, v424);
    uint64_t v426 = v850;
    v833(v550, v850);
    uint64_t v427 = v845;
    ((void (*)(char *, uint64_t))v827)(v551, v845);
    uint64_t v428 = v829;
    ((void (*)(char *, uint64_t))v829)(v552, v838);
    ((void (*)(char *, uint64_t))v831)(v553, v839);
    ((void (*)(char *, uint64_t))v825)(v746, v849);
    ((void (*)(char *, uint64_t))v819)(v670, v846);
    v822(v671, v840);
    ((void (*)(char *, uint64_t))v810)(v672, v841);
    ((void (*)(char *, uint64_t))v820)(v673, v836);
    ((void (*)(char *, uint64_t))v824)(v674, v842);
    ((void (*)(char *, uint64_t))v821)(v736, v847);
    v828(v669, v848);
    v834(v556, v851);
    uint64_t v429 = v843;
    ((void (*)(char *, uint64_t))v832)(v557, v843);
    v425(v558, v835);
    v430 = v826;
    ((void (*)(char *, uint64_t))v826)(v559, v837);
    uint64_t v431 = v833;
    v833(v562, v426);
    uint64_t v432 = v827;
    ((void (*)(char *, uint64_t))v827)(v563, v427);
    ((void (*)(char *, uint64_t))v428)(v564, v838);
    v433 = v831;
    ((void (*)(char *, uint64_t))v831)(v565, v839);
    uint64_t v434 = v825;
    ((void (*)(char *, uint64_t))v825)(v747, v849);
    ((void (*)(char *, uint64_t))v819)(v676, v846);
    v822(v677, v840);
    ((void (*)(char *, uint64_t))v810)(v678, v841);
    ((void (*)(char *, uint64_t))v820)(v679, v836);
    ((void (*)(char *, uint64_t))v824)(v680, v842);
    ((void (*)(char *, uint64_t))v821)(v735, v847);
    uint64_t v435 = v848;
    v828(v675, v848);
    v834(v566, v851);
    v436 = (void (*)(char *, uint64_t))v832;
    ((void (*)(char *, uint64_t))v832)(v568, v429);
    ((void (*)(char *, uint64_t))v823)(v569, v844);
    ((void (*)(char *, uint64_t))v430)(v570, v837);
    v431(v571, v850);
    ((void (*)(char *, uint64_t))v432)(v572, v845);
    ((void (*)(char *, uint64_t))v829)(v573, v838);
    ((void (*)(char *, uint64_t))v433)(v574, v839);
    ((void (*)(char *, uint64_t))v434)(v748, v849);
    v437 = (void (*)(char *, uint64_t))v819;
    ((void (*)(char *, uint64_t))v819)(v683, v846);
    v822(v684, v840);
    ((void (*)(char *, uint64_t))v810)(v685, v841);
    ((void (*)(char *, uint64_t))v820)(v686, v836);
    ((void (*)(char *, uint64_t))v824)(v687, v842);
    ((void (*)(char *, uint64_t))v821)(v734, v847);
    v828(v681, v435);
    uint64_t v438 = v851;
    v439 = v834;
    v834(v682, v851);
    v436(v576, v843);
    ((void (*)(char *, uint64_t))v823)(v577, v844);
    v830(v578, v835);
    v833(v579, v850);
    ((void (*)(char *, uint64_t))v827)(v580, v845);
    ((void (*)(char *, uint64_t))v829)(v581, v838);
    ((void (*)(char *, uint64_t))v831)(v582, v839);
    uint64_t v440 = v849;
    ((void (*)(char *, uint64_t))v825)(v688, v849);
    uint64_t v441 = v846;
    v437(v691, v846);
    uint64_t v442 = v840;
    v822(v692, v840);
    uint64_t v443 = v841;
    ((void (*)(char *, uint64_t))v810)(v693, v841);
    ((void (*)(char *, uint64_t))v820)(v694, v836);
    ((void (*)(char *, uint64_t))v824)(v695, v842);
    ((void (*)(char *, uint64_t))v821)(v733, v847);
    v828(v689, v848);
    v439(v690, v438);
    ((void (*)(char *, uint64_t))v832)(v583, v843);
    ((void (*)(char *, uint64_t))v823)(v584, v844);
    v830(v585, v835);
    ((void (*)(char *, uint64_t))v826)(v586, v837);
    ((void (*)(char *, uint64_t))v827)(v587, v845);
    ((void (*)(char *, uint64_t))v829)(v588, v838);
    ((void (*)(char *, uint64_t))v831)(v589, v839);
    ((void (*)(char *, uint64_t))v825)(v696, v440);
    v444 = (void (*)(char *, uint64_t))v819;
    ((void (*)(char *, uint64_t))v819)(v699, v441);
    v445 = v822;
    v822(v700, v442);
    uint64_t v446 = v443;
    v447 = v810;
    ((void (*)(char *, uint64_t))v810)(v701, v446);
    ((void (*)(char *, uint64_t))v820)(v702, v836);
    ((void (*)(char *, uint64_t))v824)(v703, v842);
    uint64_t v448 = v847;
    ((void (*)(char *, uint64_t))v821)(v732, v847);
    v828(v697, v848);
    v834(v698, v851);
    ((void (*)(char *, uint64_t))v832)(v590, v843);
    ((void (*)(char *, uint64_t))v823)(v591, v844);
    v830(v592, v835);
    ((void (*)(char *, uint64_t))v826)(v593, v837);
    v833(v594, v850);
    ((void (*)(char *, uint64_t))v829)(v595, v838);
    ((void (*)(char *, uint64_t))v831)(v596, v839);
    ((void (*)(char *, uint64_t))v825)(v704, v849);
    v444(v707, v441);
    v445(v708, v840);
    uint64_t v449 = v841;
    ((void (*)(char *, uint64_t))v447)(v709, v841);
    uint64_t v450 = v836;
    ((void (*)(char *, uint64_t))v820)(v710, v836);
    v451 = (void (*)(char *, uint64_t))v824;
    ((void (*)(char *, uint64_t))v824)(v711, v842);
    v452 = v821;
    ((void (*)(char *, uint64_t))v821)(v731, v448);
    v828(v705, v848);
    v834(v706, v851);
    ((void (*)(char *, uint64_t))v832)(v597, v843);
    ((void (*)(char *, uint64_t))v823)(v598, v844);
    v830(v599, v835);
    ((void (*)(char *, uint64_t))v826)(v600, v837);
    v833(v601, v850);
    ((void (*)(char *, uint64_t))v827)(v602, v845);
    ((void (*)(char *, uint64_t))v831)(v603, v839);
    ((void (*)(char *, uint64_t))v825)(v750, v849);
    ((void (*)(char *, uint64_t))v819)(v713, v846);
    uint64_t v453 = v840;
    v822(v714, v840);
    v454 = v810;
    ((void (*)(char *, uint64_t))v810)(v715, v449);
    ((void (*)(char *, uint64_t))v820)(v716, v450);
    uint64_t v455 = v842;
    v451(v717, v842);
    ((void (*)(char *, uint64_t))v452)(v718, v847);
    v828(v730, v848);
    v834(v712, v851);
    ((void (*)(char *, uint64_t))v832)(v604, v843);
    uint64_t v456 = v844;
    uint64_t v457 = v823;
    ((void (*)(char *, uint64_t))v823)(v605, v844);
    uint64_t v458 = v835;
    v830(v606, v835);
    uint64_t v459 = v837;
    ((void (*)(char *, uint64_t))v826)(v607, v837);
    v833(v608, v850);
    ((void (*)(char *, uint64_t))v827)(v609, v845);
    uint64_t v460 = v838;
    ((void (*)(char *, uint64_t))v829)(v610, v838);
    ((void (*)(char *, uint64_t))v825)(v749, v849);
    ((void (*)(char *, uint64_t))v819)(v722, v846);
    v822(v723, v453);
    ((void (*)(char *, uint64_t))v454)(v724, v841);
    ((void (*)(char *, uint64_t))v820)(v725, v836);
    ((void (*)(char *, uint64_t))v824)(v726, v455);
    ((void (*)(char *, uint64_t))v821)(v727, v847);
    v828(v728, v848);
    v834(v729, v851);
    ((void (*)(char *, uint64_t))v832)(v719, v843);
    ((void (*)(char *, uint64_t))v457)(v720, v456);
    v830(v721, v458);
    ((void (*)(char *, uint64_t))v826)(v611, v459);
    v833(v612, v850);
    ((void (*)(char *, uint64_t))v827)(v613, v845);
    ((void (*)(char *, uint64_t))v829)(v614, v460);
    return ((uint64_t (*)(char *, uint64_t))v831)(v615, v839);
  }
  return result;
}

uint64_t sub_258776A5C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25876E62C(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], &a4[TupleTypeMetadata[60]], &a4[TupleTypeMetadata[64]], &a4[TupleTypeMetadata[68]], &a4[TupleTypeMetadata[72]], a1, a2,
           a3);
}

uint64_t (*Flatten_17.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258776BC0(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, uint64_t a18, uint64_t a19, uint64_t a20,void *a21)
{
  v800 = a8;
  v799 = a7;
  v798 = a6;
  v797 = a5;
  v796 = a4;
  v795 = a3;
  v794 = a2;
  v793 = a1;
  uint64_t v22 = a21[4];
  uint64_t v908 = a21[3];
  uint64_t v904 = v22;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v24 = a21[5];
  v903 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v905 = v24;
  uint64_t v25 = swift_getTupleTypeMetadata2();
  uint64_t v26 = a21[6];
  v902 = (char *)v25;
  uint64_t v907 = v26;
  uint64_t v27 = swift_getTupleTypeMetadata2();
  uint64_t v28 = a21[7];
  v901 = (void (*)(char *, uint64_t))v27;
  uint64_t v917 = v28;
  uint64_t v29 = swift_getTupleTypeMetadata2();
  uint64_t v30 = a21[8];
  v900 = (void (*)(char *, uint64_t))v29;
  uint64_t v906 = v30;
  uint64_t v31 = swift_getTupleTypeMetadata2();
  uint64_t v32 = a21[9];
  v899 = (char *)v31;
  uint64_t v916 = v32;
  uint64_t v33 = swift_getTupleTypeMetadata2();
  uint64_t v34 = a21[10];
  uint64_t v898 = v33;
  uint64_t v915 = v34;
  uint64_t v35 = swift_getTupleTypeMetadata2();
  uint64_t v36 = a21[11];
  v897 = (void (*)(char *, uint64_t))v35;
  uint64_t v914 = v36;
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = a21[12];
  v896 = (char *)v37;
  uint64_t v921 = v38;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v40 = a21[13];
  v895 = (char *)v39;
  uint64_t v913 = v40;
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v42 = a21[14];
  v894 = (char *)v41;
  uint64_t v912 = v42;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v44 = a21[15];
  v893 = (void (*)(char *, uint64_t))v43;
  uint64_t v920 = v44;
  uint64_t v45 = swift_getTupleTypeMetadata2();
  uint64_t v46 = a21[16];
  v892 = (char *)v45;
  uint64_t v911 = v46;
  uint64_t v47 = swift_getTupleTypeMetadata2();
  uint64_t v48 = a21[17];
  v891 = (char *)v47;
  uint64_t v910 = v48;
  uint64_t v49 = swift_getTupleTypeMetadata2();
  uint64_t v50 = a21[18];
  v890 = (char *)v49;
  uint64_t v909 = v50;
  uint64_t v51 = swift_getTupleTypeMetadata2();
  uint64_t v52 = a21[19];
  v889 = (char *)v51;
  uint64_t v919 = v52;
  uint64_t v53 = swift_getTupleTypeMetadata2();
  uint64_t v54 = a21[20];
  v888 = (char *)v53;
  uint64_t v918 = v54;
  uint64_t v887 = swift_getTupleTypeMetadata2();
  uint64_t v58 = MEMORY[0x270FA5388](v887, v55, v56, v57);
  v801 = (char *)&v488 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = MEMORY[0x270FA5388](v58, v60, v61, v62);
  v802 = (char *)&v488 - v64;
  uint64_t v68 = MEMORY[0x270FA5388](v63, v65, v66, v67);
  v803 = (char *)&v488 - v69;
  uint64_t v73 = MEMORY[0x270FA5388](v68, v70, v71, v72);
  v804 = (char *)&v488 - v74;
  uint64_t v78 = MEMORY[0x270FA5388](v73, v75, v76, v77);
  v805 = (char *)&v488 - v79;
  uint64_t v83 = MEMORY[0x270FA5388](v78, v80, v81, v82);
  v806 = (char *)&v488 - v84;
  uint64_t v88 = MEMORY[0x270FA5388](v83, v85, v86, v87);
  v807 = (char *)&v488 - v89;
  uint64_t v93 = MEMORY[0x270FA5388](v88, v90, v91, v92);
  v808 = (char *)&v488 - v94;
  uint64_t v98 = MEMORY[0x270FA5388](v93, v95, v96, v97);
  v809 = (char *)&v488 - v99;
  uint64_t v103 = MEMORY[0x270FA5388](v98, v100, v101, v102);
  v810 = (char *)&v488 - v104;
  uint64_t v108 = MEMORY[0x270FA5388](v103, v105, v106, v107);
  v811 = (char *)&v488 - v109;
  uint64_t v113 = MEMORY[0x270FA5388](v108, v110, v111, v112);
  v812 = (char *)&v488 - v114;
  uint64_t v118 = MEMORY[0x270FA5388](v113, v115, v116, v117);
  uint64_t v120 = (char *)&v488 - v119;
  uint64_t v124 = MEMORY[0x270FA5388](v118, v121, v122, v123);
  uint64_t v126 = (char *)&v488 - v125;
  uint64_t v130 = MEMORY[0x270FA5388](v124, v127, v128, v129);
  uint64_t v132 = (char *)&v488 - v131;
  uint64_t v136 = MEMORY[0x270FA5388](v130, v133, v134, v135);
  v814 = (char *)&v488 - v137;
  uint64_t v141 = MEMORY[0x270FA5388](v136, v138, v139, v140);
  v813 = (char *)&v488 - v142;
  uint64_t v146 = MEMORY[0x270FA5388](v141, v143, v144, v145);
  uint64_t v148 = (char *)&v488 - v147;
  MEMORY[0x270FA5388](v146, v149, v150, v151);
  uint64_t v153 = (char *)&v488 - v152;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a21[21] + 24))(a19, a20, a21[2]);
  if (!v21)
  {
    uint64_t v155 = *((int *)v902 + 12);
    uint64_t v156 = *((int *)v901 + 12);
    v876 = &v153[v156];
    uint64_t v157 = *((int *)v900 + 12);
    v877 = &v153[v157];
    uint64_t v158 = *((int *)v899 + 12);
    v878 = &v153[v158];
    uint64_t v159 = *(int *)(v898 + 48);
    v879 = &v153[v159];
    uint64_t v160 = *((int *)v897 + 12);
    v880 = &v153[v160];
    uint64_t v161 = *((int *)v896 + 12);
    v881 = &v153[v161];
    uint64_t v162 = *((int *)v895 + 12);
    v882 = &v153[v162];
    uint64_t v163 = *((int *)v894 + 12);
    uint64_t v164 = &v153[v163];
    v857 = &v153[v163];
    uint64_t v165 = *((int *)v893 + 12);
    v873 = &v153[v165];
    uint64_t v656 = 0;
    uint64_t v166 = *((int *)v892 + 12);
    v875 = &v153[v166];
    uint64_t v167 = *((int *)v891 + 12);
    v869 = &v153[v167];
    uint64_t v168 = *((int *)v890 + 12);
    v870 = &v153[v168];
    uint64_t v169 = *((int *)v889 + 12);
    v871 = &v153[v169];
    uint64_t v170 = *((int *)v888 + 12);
    v874 = &v153[v170];
    uint64_t v171 = *(int *)(v887 + 48);
    v872 = &v153[v171];
    uint64_t v784 = &v148[v171];
    uint64_t v785 = &v148[v170];
    uint64_t v786 = &v148[v169];
    uint64_t v787 = &v148[v168];
    v788 = &v148[v167];
    v789 = &v148[v166];
    v790 = &v148[v165];
    v791 = &v148[v163];
    v792 = &v148[v162];
    v744 = v120;
    uint64_t v780 = &v148[v161];
    v762 = v132;
    uint64_t v781 = &v148[v160];
    v753 = v126;
    uint64_t v782 = &v148[v159];
    uint64_t v783 = &v148[v158];
    uint64_t v172 = &v148[v157];
    v652 = &v148[v157];
    v173 = &v148[v156];
    v653 = &v148[v156];
    uint64_t v174 = &v153[v155];
    v856 = &v153[v155];
    uint64_t v175 = &v148[v155];
    v654 = &v148[v155];
    uint64_t v176 = *((int *)v903 + 12);
    uint64_t v177 = &v153[v176];
    v859 = &v153[v176];
    uint64_t v178 = v153;
    v858 = v153;
    uint64_t v179 = &v148[v176];
    v655 = &v148[v176];
    v815 = *(void **)(v908 - 8);
    v823 = (void (*)(void))v815[2];
    v828 = v815 + 2;
    uint64_t v614 = a18;
    v608 = a17;
    v663 = a16;
    v671 = a15;
    v679 = a14;
    v686 = a13;
    uint64_t v693 = a12;
    uint64_t v700 = a11;
    v707 = a10;
    v714 = a9;
    uint64_t v180 = v908;
    ((void (*)(char *, char *))v823)(v148, v178);
    v886 = *(void **)(v904 - 8);
    v822 = (void (*)(char *, char *))v886[2];
    v827 = v886 + 2;
    v181 = v179;
    uint64_t v182 = v904;
    v822(v181, v177);
    v855 = *(void **)(v905 - 8);
    v183 = (void (*)(char *, char *, uint64_t))v855[2];
    v820 = v855 + 2;
    v821 = v183;
    ((void (*)(char *, char *))v183)(v175, v174);
    v854 = *(void **)(v907 - 8);
    uint64_t v184 = (void (*)(char *, char *, uint64_t))v854[2];
    v816 = v854 + 2;
    v826 = v184;
    ((void (*)(char *, char *))v184)(v173, v876);
    v868 = *(void **)(v917 - 8);
    uint64_t v185 = (void (*)(char *, char *, uint64_t))v868[2];
    v830 = v868 + 2;
    v831 = v185;
    v185(v172, v877, v917);
    v853 = *(void **)(v906 - 8);
    uint64_t v186 = (void (*)(char *, char *, uint64_t))v853[2];
    v818 = v853 + 2;
    uint64_t v819 = v186;
    v186(v783, v878, v906);
    v867 = *(void **)(v916 - 8);
    uint64_t v187 = (void (*)(char *, char *, uint64_t))v867[2];
    uint64_t v824 = v867 + 2;
    v825 = v187;
    v187(v782, v879, v916);
    v866 = *(void **)(v915 - 8);
    v817 = (void (*)(char *, char *, uint64_t))v866[2];
    uint64_t v851 = (char *)(v866 + 2);
    v817(v781, v880, v915);
    v865 = *(void **)(v914 - 8);
    uint64_t v188 = (char *)v865[2];
    uint64_t v849 = (char *)(v865 + 2);
    uint64_t v850 = v188;
    ((void (*)(char *, char *, uint64_t))v188)(v780, v881, v914);
    v885 = *(void **)(v921 - 8);
    uint64_t v189 = (char *)v885[2];
    uint64_t v847 = (void (*)(char *, char *, uint64_t))(v885 + 2);
    uint64_t v848 = v189;
    ((void (*)(char *, char *, uint64_t))v189)(v792, v882, v921);
    v864 = *(void **)(v913 - 8);
    uint64_t v190 = (void (*)(char *, char *, uint64_t))v864[2];
    uint64_t v845 = (char *)(v864 + 2);
    uint64_t v846 = v190;
    v190(v791, v164, v913);
    v863 = *(void **)(v912 - 8);
    uint64_t v191 = (void (*)(char *, char *, uint64_t))v863[2];
    uint64_t v843 = v863 + 2;
    uint64_t v844 = v191;
    v191(v790, v873, v912);
    v862 = *(void **)(v920 - 8);
    uint64_t v192 = (void (*)(char *, char *, uint64_t))v862[2];
    uint64_t v841 = v862 + 2;
    uint64_t v842 = v192;
    v192(v789, v875, v920);
    v861 = *(void **)(v911 - 8);
    uint64_t v193 = (void (*)(char *, char *, uint64_t))v861[2];
    uint64_t v839 = v861 + 2;
    uint64_t v840 = v193;
    v193(v788, v869, v911);
    v852 = *(void **)(v910 - 8);
    uint64_t v194 = (void (*)(char *, char *, uint64_t))v852[2];
    uint64_t v837 = v852 + 2;
    uint64_t v838 = v194;
    v194(v787, v870, v910);
    v860 = *(void **)(v909 - 8);
    v195 = (void (*)(char *, char *, uint64_t))v860[2];
    uint64_t v835 = v860 + 2;
    uint64_t v836 = v195;
    v195(v786, v871, v909);
    v883 = *(void **)(v919 - 8);
    uint64_t v196 = (void (*)(char *, char *, uint64_t))v883[2];
    v833 = v883 + 2;
    v834 = v196;
    v196(v785, v874, v919);
    v884 = *(void **)(v918 - 8);
    v829 = (void (*)(char *, char *, uint64_t))v884[2];
    uint64_t v832 = v884 + 2;
    v829(v784, v872, v918);
    uint64_t v197 = (void (*)(char *, char *, uint64_t))v815[4];
    v598 = v815 + 4;
    v599 = v197;
    v197(v793, v148, v180);
    uint64_t v772 = &v813[*(int *)(v887 + 48)];
    uint64_t v773 = &v813[*((int *)v888 + 12)];
    uint64_t v774 = &v813[*((int *)v889 + 12)];
    uint64_t v775 = &v813[*((int *)v890 + 12)];
    uint64_t v776 = &v813[*((int *)v891 + 12)];
    uint64_t v777 = &v813[*((int *)v892 + 12)];
    uint64_t v778 = &v813[*((int *)v893 + 12)];
    uint64_t v779 = &v813[*((int *)v894 + 12)];
    v793 = &v813[*((int *)v895 + 12)];
    uint64_t v771 = &v813[*((int *)v896 + 12)];
    uint64_t v646 = &v813[*((int *)v897 + 12)];
    uint64_t v198 = v646;
    uint64_t v647 = &v813[*(int *)(v898 + 48)];
    uint64_t v199 = v647;
    uint64_t v648 = &v813[*((int *)v899 + 12)];
    uint64_t v200 = v648;
    uint64_t v649 = &v813[*((int *)v900 + 12)];
    uint64_t v201 = v649;
    uint64_t v650 = &v813[*((int *)v901 + 12)];
    uint64_t v202 = v650;
    uint64_t v651 = &v813[*((int *)v902 + 12)];
    uint64_t v203 = v651;
    uint64_t v204 = &v813[*((int *)v903 + 12)];
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v204, v859, v182);
    v821(v203, v856, v905);
    v826(v202, v876, v907);
    v831(v201, v877, v917);
    v819(v200, v878, v906);
    v825(v199, v879, v916);
    v817(v198, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v771, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v793, v882, v921);
    v846(v779, v857, v913);
    v844(v778, v873, v912);
    v842(v777, v875, v920);
    v840(v776, v869, v911);
    v838(v775, v870, v910);
    v836(v774, v871, v909);
    v834(v773, v874, v919);
    v829(v772, v872, v918);
    uint64_t v205 = (void (*)(char *, char *, uint64_t))v886[4];
    uint64_t v592 = v886 + 4;
    v593 = v205;
    uint64_t v206 = v182;
    v205(v794, v204, v182);
    v765 = &v814[*(int *)(v887 + 48)];
    uint64_t v766 = &v814[*((int *)v888 + 12)];
    v767 = &v814[*((int *)v889 + 12)];
    v768 = &v814[*((int *)v890 + 12)];
    uint64_t v769 = &v814[*((int *)v891 + 12)];
    v770 = &v814[*((int *)v892 + 12)];
    v794 = &v814[*((int *)v893 + 12)];
    v763 = &v814[*((int *)v894 + 12)];
    uint64_t v764 = &v814[*((int *)v895 + 12)];
    uint64_t v639 = &v814[*((int *)v896 + 12)];
    uint64_t v207 = v639;
    uint64_t v640 = &v814[*((int *)v897 + 12)];
    uint64_t v208 = v640;
    uint64_t v641 = &v814[*(int *)(v898 + 48)];
    uint64_t v209 = v641;
    uint64_t v642 = &v814[*((int *)v899 + 12)];
    uint64_t v210 = v642;
    uint64_t v643 = &v814[*((int *)v900 + 12)];
    uint64_t v211 = v643;
    uint64_t v644 = &v814[*((int *)v901 + 12)];
    uint64_t v212 = v644;
    uint64_t v213 = &v814[*((int *)v902 + 12)];
    uint64_t v645 = &v814[*((int *)v903 + 12)];
    uint64_t v214 = v645;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v214, v859, v206);
    uint64_t v215 = v905;
    v821(v213, v856, v905);
    v826(v212, v876, v907);
    v831(v211, v877, v917);
    v819(v210, v878, v906);
    v825(v209, v879, v916);
    v817(v208, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v207, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v764, v882, v921);
    v846(v763, v857, v913);
    v844(v794, v873, v912);
    v842(v770, v875, v920);
    v840(v769, v869, v911);
    v838(v768, v870, v910);
    v836(v767, v871, v909);
    v834(v766, v874, v919);
    v829(v765, v872, v918);
    v216 = (void (*)(char *, char *, uint64_t))v855[4];
    uint64_t v586 = v855 + 4;
    uint64_t v587 = v216;
    v216(v795, v213, v215);
    v756 = &v762[*(int *)(v887 + 48)];
    v757 = &v762[*((int *)v888 + 12)];
    v758 = &v762[*((int *)v889 + 12)];
    v759 = &v762[*((int *)v890 + 12)];
    v760 = &v762[*((int *)v891 + 12)];
    v761 = &v762[*((int *)v892 + 12)];
    v795 = &v762[*((int *)v893 + 12)];
    v754 = &v762[*((int *)v894 + 12)];
    v755 = &v762[*((int *)v895 + 12)];
    v632 = &v762[*((int *)v896 + 12)];
    uint64_t v217 = v632;
    v633 = &v762[*((int *)v897 + 12)];
    uint64_t v218 = v633;
    uint64_t v634 = &v762[*(int *)(v898 + 48)];
    uint64_t v219 = v634;
    v635 = &v762[*((int *)v899 + 12)];
    v220 = v635;
    v636 = &v762[*((int *)v900 + 12)];
    uint64_t v221 = v636;
    uint64_t v222 = &v762[*((int *)v901 + 12)];
    uint64_t v637 = &v762[*((int *)v902 + 12)];
    uint64_t v223 = v637;
    uint64_t v638 = &v762[*((int *)v903 + 12)];
    uint64_t v224 = v638;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v224, v859, v904);
    v821(v223, v856, v215);
    uint64_t v225 = v907;
    v826(v222, v876, v907);
    v831(v221, v877, v917);
    v819(v220, v878, v906);
    v825(v219, v879, v916);
    v817(v218, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v217, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v755, v882, v921);
    v846(v754, v857, v913);
    v844(v795, v873, v912);
    v842(v761, v875, v920);
    v840(v760, v869, v911);
    v838(v759, v870, v910);
    v836(v758, v871, v909);
    v834(v757, v874, v919);
    v829(v756, v872, v918);
    uint64_t v226 = (void (*)(char *, char *, uint64_t))v854[4];
    v576 = v854 + 4;
    uint64_t v577 = v226;
    uint64_t v227 = v222;
    uint64_t v228 = v225;
    v226(v796, v227, v225);
    v747 = &v753[*(int *)(v887 + 48)];
    v748 = &v753[*((int *)v888 + 12)];
    v749 = &v753[*((int *)v889 + 12)];
    v750 = &v753[*((int *)v890 + 12)];
    v751 = &v753[*((int *)v891 + 12)];
    v752 = &v753[*((int *)v892 + 12)];
    v796 = &v753[*((int *)v893 + 12)];
    v745 = &v753[*((int *)v894 + 12)];
    v746 = &v753[*((int *)v895 + 12)];
    v625 = &v753[*((int *)v896 + 12)];
    uint64_t v229 = v625;
    v626 = &v753[*((int *)v897 + 12)];
    uint64_t v230 = v626;
    v627 = &v753[*(int *)(v898 + 48)];
    uint64_t v231 = v627;
    v628 = &v753[*((int *)v899 + 12)];
    uint64_t v232 = v628;
    uint64_t v233 = &v753[*((int *)v900 + 12)];
    v629 = &v753[*((int *)v901 + 12)];
    uint64_t v234 = v629;
    v630 = &v753[*((int *)v902 + 12)];
    uint64_t v235 = v630;
    uint64_t v631 = &v753[*((int *)v903 + 12)];
    uint64_t v236 = v631;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v236, v859, v904);
    v821(v235, v856, v905);
    v826(v234, v876, v228);
    uint64_t v237 = v917;
    v831(v233, v877, v917);
    v819(v232, v878, v906);
    v825(v231, v879, v916);
    v817(v230, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v229, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v746, v882, v921);
    v846(v745, v857, v913);
    v844(v796, v873, v912);
    v842(v752, v875, v920);
    v840(v751, v869, v911);
    v838(v750, v870, v910);
    v836(v749, v871, v909);
    v834(v748, v874, v919);
    v829(v747, v872, v918);
    uint64_t v238 = (void (*)(char *, char *, uint64_t))v868[4];
    v572 = v868 + 4;
    v573 = v238;
    uint64_t v239 = v237;
    v238(v797, v233, v237);
    v738 = &v744[*(int *)(v887 + 48)];
    v739 = &v744[*((int *)v888 + 12)];
    v740 = &v744[*((int *)v889 + 12)];
    v741 = &v744[*((int *)v890 + 12)];
    v742 = &v744[*((int *)v891 + 12)];
    v743 = &v744[*((int *)v892 + 12)];
    v797 = &v744[*((int *)v893 + 12)];
    v736 = &v744[*((int *)v894 + 12)];
    v737 = &v744[*((int *)v895 + 12)];
    v618 = &v744[*((int *)v896 + 12)];
    uint64_t v240 = v618;
    v619 = &v744[*((int *)v897 + 12)];
    uint64_t v241 = v619;
    v620 = &v744[*(int *)(v898 + 48)];
    uint64_t v242 = v620;
    v243 = &v744[*((int *)v899 + 12)];
    v621 = &v744[*((int *)v900 + 12)];
    uint64_t v244 = v621;
    v622 = &v744[*((int *)v901 + 12)];
    uint64_t v245 = v622;
    v623 = &v744[*((int *)v902 + 12)];
    uint64_t v246 = v623;
    v624 = &v744[*((int *)v903 + 12)];
    uint64_t v247 = v624;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v247, v859, v904);
    v821(v246, v856, v905);
    v826(v245, v876, v907);
    v831(v244, v877, v239);
    uint64_t v248 = v243;
    uint64_t v249 = v243;
    uint64_t v250 = v906;
    v819(v249, v878, v906);
    v825(v242, v879, v916);
    v817(v241, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v240, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v737, v882, v921);
    v846(v736, v857, v913);
    v844(v797, v873, v912);
    v842(v743, v875, v920);
    v840(v742, v869, v911);
    v838(v741, v870, v910);
    v836(v740, v871, v909);
    v834(v739, v874, v919);
    v829(v738, v872, v918);
    uint64_t v251 = (void (*)(char *, char *, uint64_t))v853[4];
    v562 = v853 + 4;
    v563 = v251;
    v251(v798, v248, v250);
    v730 = &v812[*(int *)(v887 + 48)];
    v731 = &v812[*((int *)v888 + 12)];
    v732 = &v812[*((int *)v889 + 12)];
    v733 = &v812[*((int *)v890 + 12)];
    v734 = &v812[*((int *)v891 + 12)];
    v735 = &v812[*((int *)v892 + 12)];
    v798 = &v812[*((int *)v893 + 12)];
    v729 = &v812[*((int *)v894 + 12)];
    v609 = &v812[*((int *)v895 + 12)];
    uint64_t v252 = v609;
    v610 = &v812[*((int *)v896 + 12)];
    uint64_t v253 = v610;
    v611 = &v812[*((int *)v897 + 12)];
    uint64_t v254 = v611;
    v728 = &v812[*(int *)(v898 + 48)];
    v612 = &v812[*((int *)v899 + 12)];
    uint64_t v255 = v612;
    v613 = &v812[*((int *)v900 + 12)];
    uint64_t v256 = v613;
    v615 = &v812[*((int *)v901 + 12)];
    uint64_t v257 = v615;
    uint64_t v616 = &v812[*((int *)v902 + 12)];
    uint64_t v258 = v616;
    v617 = &v812[*((int *)v903 + 12)];
    v259 = v617;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v259, v859, v904);
    v821(v258, v856, v905);
    v826(v257, v876, v907);
    v831(v256, v877, v917);
    v819(v255, v878, v250);
    uint64_t v260 = v728;
    uint64_t v261 = v916;
    v825(v728, v879, v916);
    v817(v254, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v253, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v252, v882, v921);
    v846(v729, v857, v913);
    v844(v798, v873, v912);
    v842(v735, v875, v920);
    v840(v734, v869, v911);
    v838(v733, v870, v910);
    v836(v732, v871, v909);
    v834(v731, v874, v919);
    v829(v730, v872, v918);
    uint64_t v262 = (void (*)(char *, char *, uint64_t))v867[4];
    v554 = v867 + 4;
    v556 = v262;
    v262(v799, v260, v261);
    v722 = &v811[*(int *)(v887 + 48)];
    v723 = &v811[*((int *)v888 + 12)];
    v724 = &v811[*((int *)v889 + 12)];
    v725 = &v811[*((int *)v890 + 12)];
    v726 = &v811[*((int *)v891 + 12)];
    v727 = &v811[*((int *)v892 + 12)];
    v728 = &v811[*((int *)v893 + 12)];
    v799 = &v811[*((int *)v894 + 12)];
    v600 = &v811[*((int *)v895 + 12)];
    uint64_t v263 = v600;
    v601 = &v811[*((int *)v896 + 12)];
    uint64_t v264 = v601;
    v721 = &v811[*((int *)v897 + 12)];
    v602 = &v811[*(int *)(v898 + 48)];
    uint64_t v265 = v602;
    v603 = &v811[*((int *)v899 + 12)];
    uint64_t v266 = v603;
    v604 = &v811[*((int *)v900 + 12)];
    uint64_t v267 = v604;
    v605 = &v811[*((int *)v901 + 12)];
    uint64_t v268 = v605;
    v606 = &v811[*((int *)v902 + 12)];
    uint64_t v269 = v606;
    v607 = &v811[*((int *)v903 + 12)];
    uint64_t v270 = v607;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v270, v859, v904);
    v821(v269, v856, v905);
    v826(v268, v876, v907);
    v831(v267, v877, v917);
    v819(v266, v878, v906);
    v825(v265, v879, v261);
    uint64_t v271 = v721;
    uint64_t v272 = v915;
    v817(v721, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v264, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v263, v882, v921);
    v846(v799, v857, v913);
    v844(v728, v873, v912);
    v842(v727, v875, v920);
    v840(v726, v869, v911);
    v838(v725, v870, v910);
    v836(v724, v871, v909);
    v834(v723, v874, v919);
    v829(v722, v872, v918);
    uint64_t v273 = (void (*)(char *, char *, uint64_t))v866[4];
    v549 = v866 + 4;
    v550 = v273;
    v273(v800, v271, v272);
    v716 = &v810[*(int *)(v887 + 48)];
    v717 = &v810[*((int *)v888 + 12)];
    v718 = &v810[*((int *)v889 + 12)];
    v719 = &v810[*((int *)v890 + 12)];
    v720 = &v810[*((int *)v891 + 12)];
    v721 = &v810[*((int *)v892 + 12)];
    v800 = &v810[*((int *)v893 + 12)];
    v715 = &v810[*((int *)v894 + 12)];
    uint64_t v588 = &v810[*((int *)v895 + 12)];
    uint64_t v274 = v588;
    uint64_t v275 = &v810[*((int *)v896 + 12)];
    uint64_t v589 = &v810[*((int *)v897 + 12)];
    v276 = v589;
    uint64_t v590 = &v810[*(int *)(v898 + 48)];
    uint64_t v277 = v590;
    uint64_t v591 = &v810[*((int *)v899 + 12)];
    uint64_t v278 = v591;
    v594 = &v810[*((int *)v900 + 12)];
    uint64_t v279 = v594;
    v595 = &v810[*((int *)v901 + 12)];
    uint64_t v280 = v595;
    v596 = &v810[*((int *)v902 + 12)];
    uint64_t v281 = v596;
    v597 = &v810[*((int *)v903 + 12)];
    uint64_t v282 = v597;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v282, v859, v904);
    v821(v281, v856, v905);
    v826(v280, v876, v907);
    v831(v279, v877, v917);
    v819(v278, v878, v906);
    v825(v277, v879, v916);
    v817(v276, v880, v915);
    uint64_t v283 = v914;
    ((void (*)(char *, char *, uint64_t))v850)(v275, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v274, v882, v921);
    v846(v715, v857, v913);
    v844(v800, v873, v912);
    v842(v721, v875, v920);
    v840(v720, v869, v911);
    v838(v719, v870, v910);
    v836(v718, v871, v909);
    v834(v717, v874, v919);
    v829(v716, v872, v918);
    uint64_t v284 = (void (*)(char *, char *, uint64_t))v865[4];
    v538 = v865 + 4;
    v539 = v284;
    v284(v714, v275, v283);
    v708 = &v809[*(int *)(v887 + 48)];
    v709 = &v809[*((int *)v888 + 12)];
    v710 = &v809[*((int *)v889 + 12)];
    v711 = &v809[*((int *)v890 + 12)];
    v712 = &v809[*((int *)v891 + 12)];
    v713 = &v809[*((int *)v892 + 12)];
    v714 = &v809[*((int *)v893 + 12)];
    v575 = &v809[*((int *)v894 + 12)];
    uint64_t v285 = v575;
    uint64_t v706 = &v809[*((int *)v895 + 12)];
    v578 = &v809[*((int *)v896 + 12)];
    uint64_t v286 = v578;
    uint64_t v579 = &v809[*((int *)v897 + 12)];
    uint64_t v287 = v579;
    uint64_t v580 = &v809[*(int *)(v898 + 48)];
    uint64_t v288 = v580;
    uint64_t v581 = &v809[*((int *)v899 + 12)];
    uint64_t v289 = v581;
    uint64_t v582 = &v809[*((int *)v900 + 12)];
    uint64_t v290 = v582;
    uint64_t v583 = &v809[*((int *)v901 + 12)];
    uint64_t v291 = v583;
    uint64_t v584 = &v809[*((int *)v902 + 12)];
    uint64_t v292 = v584;
    uint64_t v585 = &v809[*((int *)v903 + 12)];
    uint64_t v293 = v585;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v293, v859, v904);
    v821(v292, v856, v905);
    v826(v291, v876, v907);
    v831(v290, v877, v917);
    v819(v289, v878, v906);
    v825(v288, v879, v916);
    v817(v287, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v286, v881, v914);
    uint64_t v294 = v706;
    uint64_t v295 = v921;
    ((void (*)(char *, char *, uint64_t))v848)(v706, v882, v921);
    v846(v285, v857, v913);
    v844(v714, v873, v912);
    v842(v713, v875, v920);
    v840(v712, v869, v911);
    v838(v711, v870, v910);
    v836(v710, v871, v909);
    v834(v709, v874, v919);
    v829(v708, v872, v918);
    uint64_t v296 = (void (*)(char *, char *, uint64_t))v885[4];
    uint64_t v534 = v885 + 4;
    uint64_t v535 = v296;
    v296(v707, v294, v295);
    uint64_t v701 = &v808[*(int *)(v887 + 48)];
    uint64_t v702 = &v808[*((int *)v888 + 12)];
    uint64_t v703 = &v808[*((int *)v889 + 12)];
    uint64_t v704 = &v808[*((int *)v890 + 12)];
    uint64_t v705 = &v808[*((int *)v891 + 12)];
    uint64_t v706 = &v808[*((int *)v892 + 12)];
    v707 = &v808[*((int *)v893 + 12)];
    uint64_t v699 = &v808[*((int *)v894 + 12)];
    v564 = &v808[*((int *)v895 + 12)];
    uint64_t v297 = v564;
    v565 = &v808[*((int *)v896 + 12)];
    uint64_t v298 = v565;
    v566 = &v808[*((int *)v897 + 12)];
    uint64_t v299 = v566;
    v567 = &v808[*(int *)(v898 + 48)];
    v300 = v567;
    v568 = &v808[*((int *)v899 + 12)];
    uint64_t v301 = v568;
    v569 = &v808[*((int *)v900 + 12)];
    uint64_t v302 = v569;
    v570 = &v808[*((int *)v901 + 12)];
    v303 = v570;
    v571 = &v808[*((int *)v902 + 12)];
    uint64_t v304 = v571;
    v574 = &v808[*((int *)v903 + 12)];
    uint64_t v305 = v574;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v305, v859, v904);
    v821(v304, v856, v905);
    v826(v303, v876, v907);
    v831(v302, v877, v917);
    v819(v301, v878, v906);
    v825(v300, v879, v916);
    v817(v299, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v298, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v297, v882, v921);
    uint64_t v306 = v699;
    uint64_t v307 = v913;
    v846(v699, v857, v913);
    v844(v707, v873, v912);
    v842(v706, v875, v920);
    v840(v705, v869, v911);
    v838(v704, v870, v910);
    v836(v703, v871, v909);
    v834(v702, v874, v919);
    v829(v701, v872, v918);
    uint64_t v308 = (void (*)(char *, char *, uint64_t))v864[4];
    v525 = v864 + 4;
    uint64_t v526 = v308;
    v308(v700, v306, v307);
    uint64_t v694 = &v807[*(int *)(v887 + 48)];
    uint64_t v695 = &v807[*((int *)v888 + 12)];
    uint64_t v696 = &v807[*((int *)v889 + 12)];
    uint64_t v697 = &v807[*((int *)v890 + 12)];
    uint64_t v698 = &v807[*((int *)v891 + 12)];
    uint64_t v699 = &v807[*((int *)v892 + 12)];
    uint64_t v692 = &v807[*((int *)v893 + 12)];
    uint64_t v700 = &v807[*((int *)v894 + 12)];
    v551 = &v807[*((int *)v895 + 12)];
    uint64_t v309 = v551;
    v552 = &v807[*((int *)v896 + 12)];
    uint64_t v310 = v552;
    v553 = &v807[*((int *)v897 + 12)];
    uint64_t v311 = v553;
    v555 = &v807[*(int *)(v898 + 48)];
    uint64_t v312 = v555;
    v557 = &v807[*((int *)v899 + 12)];
    uint64_t v313 = v557;
    v558 = &v807[*((int *)v900 + 12)];
    uint64_t v314 = v558;
    v559 = &v807[*((int *)v901 + 12)];
    uint64_t v315 = v559;
    v560 = &v807[*((int *)v902 + 12)];
    uint64_t v316 = v560;
    v561 = &v807[*((int *)v903 + 12)];
    uint64_t v317 = v561;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v317, v859, v904);
    v821(v316, v856, v905);
    v826(v315, v876, v907);
    v831(v314, v877, v917);
    v819(v313, v878, v906);
    v825(v312, v879, v916);
    v817(v311, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v310, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v309, v882, v921);
    v846(v700, v857, v913);
    uint64_t v318 = v692;
    uint64_t v319 = v912;
    v844(v692, v873, v912);
    v842(v699, v875, v920);
    v840(v698, v869, v911);
    v838(v697, v870, v910);
    v836(v696, v871, v909);
    v834(v695, v874, v919);
    v829(v694, v872, v918);
    uint64_t v320 = (void (*)(char *, char *, uint64_t))v863[4];
    v516 = v863 + 4;
    v517 = v320;
    v320(v693, v318, v319);
    uint64_t v687 = &v806[*(int *)(v887 + 48)];
    uint64_t v688 = &v806[*((int *)v888 + 12)];
    v689 = &v806[*((int *)v889 + 12)];
    uint64_t v690 = &v806[*((int *)v890 + 12)];
    uint64_t v691 = &v806[*((int *)v891 + 12)];
    v685 = &v806[*((int *)v892 + 12)];
    uint64_t v692 = &v806[*((int *)v893 + 12)];
    uint64_t v693 = &v806[*((int *)v894 + 12)];
    v540 = &v806[*((int *)v895 + 12)];
    uint64_t v321 = v540;
    v541 = &v806[*((int *)v896 + 12)];
    uint64_t v322 = v541;
    v542 = &v806[*((int *)v897 + 12)];
    uint64_t v323 = v542;
    v543 = &v806[*(int *)(v898 + 48)];
    uint64_t v324 = v543;
    v544 = &v806[*((int *)v899 + 12)];
    uint64_t v325 = v544;
    v545 = &v806[*((int *)v900 + 12)];
    uint64_t v326 = v545;
    v546 = &v806[*((int *)v901 + 12)];
    uint64_t v327 = v546;
    v547 = &v806[*((int *)v902 + 12)];
    v328 = v547;
    v548 = &v806[*((int *)v903 + 12)];
    uint64_t v329 = v548;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v329, v859, v904);
    v821(v328, v856, v905);
    v826(v327, v876, v907);
    v831(v326, v877, v917);
    v819(v325, v878, v906);
    v825(v324, v879, v916);
    v817(v323, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v322, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v321, v882, v921);
    v846(v693, v857, v913);
    v844(v692, v873, v912);
    uint64_t v330 = v685;
    uint64_t v331 = v920;
    v842(v685, v875, v920);
    v840(v691, v869, v911);
    v838(v690, v870, v910);
    v836(v689, v871, v909);
    v834(v688, v874, v919);
    v829(v687, v872, v918);
    uint64_t v332 = (void (*)(char *, char *, uint64_t))v862[4];
    v513 = v862 + 4;
    v514 = v332;
    v332(v686, v330, v331);
    v680 = &v805[*(int *)(v887 + 48)];
    v681 = &v805[*((int *)v888 + 12)];
    v682 = &v805[*((int *)v889 + 12)];
    uint64_t v683 = &v805[*((int *)v890 + 12)];
    uint64_t v678 = &v805[*((int *)v891 + 12)];
    v684 = &v805[*((int *)v892 + 12)];
    v685 = &v805[*((int *)v893 + 12)];
    v686 = &v805[*((int *)v894 + 12)];
    uint64_t v527 = &v805[*((int *)v895 + 12)];
    uint64_t v333 = v527;
    uint64_t v528 = &v805[*((int *)v896 + 12)];
    uint64_t v334 = v528;
    uint64_t v529 = &v805[*((int *)v897 + 12)];
    uint64_t v335 = v529;
    uint64_t v530 = &v805[*(int *)(v898 + 48)];
    uint64_t v336 = v530;
    uint64_t v531 = &v805[*((int *)v899 + 12)];
    uint64_t v337 = v531;
    uint64_t v532 = &v805[*((int *)v900 + 12)];
    uint64_t v338 = v532;
    uint64_t v533 = &v805[*((int *)v901 + 12)];
    uint64_t v339 = v533;
    uint64_t v536 = &v805[*((int *)v902 + 12)];
    uint64_t v340 = v536;
    uint64_t v537 = &v805[*((int *)v903 + 12)];
    uint64_t v341 = v537;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v341, v859, v904);
    v821(v340, v856, v905);
    v826(v339, v876, v907);
    v831(v338, v877, v917);
    v819(v337, v878, v906);
    v825(v336, v879, v916);
    v817(v335, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v334, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v333, v882, v921);
    v846(v686, v857, v913);
    v844(v685, v873, v912);
    v842(v684, v875, v920);
    uint64_t v342 = v678;
    uint64_t v343 = v911;
    v840(v678, v869, v911);
    v838(v683, v870, v910);
    v836(v682, v871, v909);
    v834(v681, v874, v919);
    v829(v680, v872, v918);
    uint64_t v344 = (void (*)(char *, char *, uint64_t))v861[4];
    v503 = v861 + 4;
    v504 = v344;
    v344(v679, v342, v343);
    v673 = &v804[*(int *)(v887 + 48)];
    v674 = &v804[*((int *)v888 + 12)];
    v675 = &v804[*((int *)v889 + 12)];
    uint64_t v345 = &v804[*((int *)v890 + 12)];
    v676 = &v804[*((int *)v891 + 12)];
    v677 = &v804[*((int *)v892 + 12)];
    uint64_t v678 = &v804[*((int *)v893 + 12)];
    v679 = &v804[*((int *)v894 + 12)];
    v672 = &v804[*((int *)v895 + 12)];
    v515 = &v804[*((int *)v896 + 12)];
    uint64_t v346 = v515;
    v518 = &v804[*((int *)v897 + 12)];
    uint64_t v347 = v518;
    v519 = &v804[*(int *)(v898 + 48)];
    uint64_t v348 = v519;
    uint64_t v520 = &v804[*((int *)v899 + 12)];
    uint64_t v349 = v520;
    v521 = &v804[*((int *)v900 + 12)];
    v350 = v521;
    v522 = &v804[*((int *)v901 + 12)];
    uint64_t v351 = v522;
    v523 = &v804[*((int *)v902 + 12)];
    uint64_t v352 = v523;
    v524 = &v804[*((int *)v903 + 12)];
    uint64_t v353 = v524;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v353, v859, v904);
    v821(v352, v856, v905);
    v826(v351, v876, v907);
    v831(v350, v877, v917);
    v819(v349, v878, v906);
    v825(v348, v879, v916);
    v817(v347, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v346, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v672, v882, v921);
    v846(v679, v857, v913);
    v844(v678, v873, v912);
    v842(v677, v875, v920);
    v840(v676, v869, v911);
    uint64_t v354 = v910;
    v838(v345, v870, v910);
    v836(v675, v871, v909);
    v834(v674, v874, v919);
    v829(v673, v872, v918);
    uint64_t v355 = (void (*)(char *, char *, uint64_t))v852[4];
    v498 = v852 + 4;
    v499 = v355;
    v355(v671, v345, v354);
    v665 = &v803[*(int *)(v887 + 48)];
    v666 = &v803[*((int *)v888 + 12)];
    uint64_t v356 = &v803[*((int *)v889 + 12)];
    v667 = &v803[*((int *)v890 + 12)];
    v668 = &v803[*((int *)v891 + 12)];
    v669 = &v803[*((int *)v892 + 12)];
    v670 = &v803[*((int *)v893 + 12)];
    v671 = &v803[*((int *)v894 + 12)];
    v664 = &v803[*((int *)v895 + 12)];
    v505 = &v803[*((int *)v896 + 12)];
    uint64_t v357 = v505;
    v506 = &v803[*((int *)v897 + 12)];
    uint64_t v358 = v506;
    v507 = &v803[*(int *)(v898 + 48)];
    uint64_t v359 = v507;
    v508 = &v803[*((int *)v899 + 12)];
    uint64_t v360 = v508;
    v509 = &v803[*((int *)v900 + 12)];
    uint64_t v361 = v509;
    v510 = &v803[*((int *)v901 + 12)];
    uint64_t v362 = v510;
    v511 = &v803[*((int *)v902 + 12)];
    uint64_t v363 = v511;
    v512 = &v803[*((int *)v903 + 12)];
    uint64_t v364 = v512;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v364, v859, v904);
    v821(v363, v856, v905);
    v826(v362, v876, v907);
    v831(v361, v877, v917);
    v819(v360, v878, v906);
    v825(v359, v879, v916);
    v817(v358, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v357, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v664, v882, v921);
    v846(v671, v857, v913);
    v844(v670, v873, v912);
    v842(v669, v875, v920);
    v840(v668, v869, v911);
    v838(v667, v870, v910);
    uint64_t v365 = v909;
    v836(v356, v871, v909);
    v834(v666, v874, v919);
    v829(v665, v872, v918);
    uint64_t v366 = (void (*)(char *, char *, uint64_t))v860[4];
    v490 = v860 + 4;
    uint64_t v491 = v366;
    v366(v663, v356, v365);
    v657 = &v802[*(int *)(v887 + 48)];
    v489 = &v802[*((int *)v888 + 12)];
    v658 = &v802[*((int *)v889 + 12)];
    v659 = &v802[*((int *)v890 + 12)];
    v660 = &v802[*((int *)v891 + 12)];
    v661 = &v802[*((int *)v892 + 12)];
    v662 = &v802[*((int *)v893 + 12)];
    v663 = &v802[*((int *)v894 + 12)];
    v492 = &v802[*((int *)v895 + 12)];
    uint64_t v367 = v492;
    v493 = &v802[*((int *)v896 + 12)];
    uint64_t v368 = v493;
    uint64_t v494 = &v802[*((int *)v897 + 12)];
    uint64_t v369 = v494;
    v495 = &v802[*(int *)(v898 + 48)];
    uint64_t v370 = v495;
    v496 = &v802[*((int *)v899 + 12)];
    uint64_t v371 = v496;
    v497 = &v802[*((int *)v900 + 12)];
    uint64_t v372 = v497;
    v500 = &v802[*((int *)v901 + 12)];
    uint64_t v373 = v500;
    v501 = &v802[*((int *)v902 + 12)];
    uint64_t v374 = v501;
    v502 = &v802[*((int *)v903 + 12)];
    uint64_t v375 = v502;
    v823();
    ((void (*)(char *, char *, uint64_t))v822)(v375, v859, v904);
    uint64_t v376 = v905;
    v821(v374, v856, v905);
    v826(v373, v876, v907);
    v831(v372, v877, v917);
    v819(v371, v878, v906);
    v825(v370, v879, v916);
    v817(v369, v880, v915);
    ((void (*)(char *, char *, uint64_t))v850)(v368, v881, v914);
    ((void (*)(char *, char *, uint64_t))v848)(v367, v882, v921);
    v846(v663, v857, v913);
    v844(v662, v873, v912);
    v842(v661, v875, v920);
    v840(v660, v869, v911);
    v838(v659, v870, v910);
    v836(v658, v871, v909);
    uint64_t v377 = v489;
    uint64_t v378 = v919;
    v834(v489, v874, v919);
    v829(v657, v872, v918);
    uint64_t v379 = v376;
    uint64_t v380 = (void (*)(char *, char *, uint64_t))v883[4];
    uint64_t v846 = (void (*)(char *, char *, uint64_t))(v883 + 4);
    uint64_t v847 = v380;
    v380(v608, v377, v378);
    uint64_t v381 = v801;
    uint64_t v887 = (uint64_t)&v801[*(int *)(v887 + 48)];
    uint64_t v845 = &v801[*((int *)v888 + 12)];
    v888 = &v801[*((int *)v889 + 12)];
    v889 = &v801[*((int *)v890 + 12)];
    v891 = &v801[*((int *)v891 + 12)];
    v890 = &v801[*((int *)v892 + 12)];
    v892 = &v801[*((int *)v893 + 12)];
    v894 = &v801[*((int *)v894 + 12)];
    v895 = &v801[*((int *)v895 + 12)];
    v896 = &v801[*((int *)v896 + 12)];
    uint64_t v848 = &v801[*((int *)v897 + 12)];
    uint64_t v382 = v848;
    uint64_t v849 = &v801[*(int *)(v898 + 48)];
    uint64_t v383 = v849;
    uint64_t v850 = &v801[*((int *)v899 + 12)];
    uint64_t v384 = v850;
    v899 = &v801[*((int *)v900 + 12)];
    v385 = v899;
    uint64_t v851 = &v801[*((int *)v901 + 12)];
    uint64_t v386 = v851;
    uint64_t v388 = &v801[*((int *)v903 + 12)];
    v902 = &v801[*((int *)v902 + 12)];
    uint64_t v387 = v902;
    v903 = (void (*)(char *, uint64_t))v388;
    v599(v801, v858, v908);
    v593(v388, v859, v904);
    v587(v387, v856, v379);
    v577(v386, v876, v907);
    v573(v385, v877, v917);
    v563(v384, v878, v906);
    v556(v383, v879, v916);
    v550(v382, v880, v915);
    v539(v896, v881, v914);
    v535(v895, v882, v921);
    v526(v894, v857, v913);
    v517(v892, v873, v912);
    v514(v890, v875, v920);
    v504(v891, v869, v911);
    uint64_t v389 = v910;
    v499(v889, v870, v910);
    uint64_t v390 = v909;
    v491(v888, v871, v909);
    uint64_t v391 = v845;
    uint64_t v392 = v919;
    v847(v845, v874, v919);
    uint64_t v393 = (void (*)(uint64_t, char *, uint64_t))v884[4];
    uint64_t v394 = v887;
    uint64_t v395 = v918;
    v393(v887, v872, v918);
    v393(v614, (char *)v394, v395);
    uint64_t v898 = v883[1];
    ++v883;
    ((void (*)(char *, uint64_t))v898)(v391, v392);
    uint64_t v396 = (int *)v860[1];
    ++v860;
    v900 = (void (*)(char *, uint64_t))v396;
    ((void (*)(char *, uint64_t))v396)(v888, v390);
    uint64_t v397 = v852 + 1;
    uint64_t v398 = (void (*)(char *, uint64_t))v852[1];
    v398(v889, v389);
    v852 = v397;
    v889 = (char *)v861[1];
    ++v861;
    ((void (*)(char *, uint64_t))v889)(v891, v911);
    uint64_t v399 = (char *)v862[1];
    ++v862;
    v891 = v399;
    ((void (*)(char *, uint64_t))v399)(v890, v920);
    uint64_t v400 = (int *)v863[1];
    ++v863;
    v893 = (void (*)(char *, uint64_t))v400;
    ((void (*)(char *, uint64_t))v400)(v892, v912);
    v401 = (int *)v864[1];
    ++v864;
    v897 = (void (*)(char *, uint64_t))v401;
    uint64_t v402 = v913;
    ((void (*)(char *, uint64_t))v401)(v894, v913);
    v892 = (char *)v885[1];
    ++v885;
    ((void (*)(char *, uint64_t))v892)(v895, v921);
    uint64_t v403 = (char *)v865[1];
    ++v865;
    v895 = v403;
    ((void (*)(char *, uint64_t))v403)(v896, v914);
    uint64_t v404 = (char *)v866[1];
    ++v866;
    v896 = v404;
    ((void (*)(char *, uint64_t))v404)(v848, v915);
    uint64_t v405 = (int *)v867[1];
    ++v867;
    v901 = (void (*)(char *, uint64_t))v405;
    uint64_t v406 = v916;
    ((void (*)(char *, uint64_t))v405)(v849, v916);
    uint64_t v407 = v853 + 1;
    v888 = (char *)v853[1];
    uint64_t v408 = v906;
    ((void (*)(char *, uint64_t))v888)(v850, v906);
    v890 = (char *)v868[1];
    ++v868;
    ((void (*)(char *, uint64_t))v890)(v899, v917);
    uint64_t v409 = (char *)v854[1];
    ++v854;
    v899 = v409;
    uint64_t v410 = v907;
    ((void (*)(char *, uint64_t))v409)(v851, v907);
    v894 = (char *)v855[1];
    ++v855;
    uint64_t v411 = v905;
    ((void (*)(char *, uint64_t))v894)(v902, v905);
    v882 = (char *)v886[1];
    ++v886;
    ((void (*)(void, uint64_t))v882)(v903, v904);
    uint64_t v412 = (int *)v815[1];
    ++v815;
    v903 = (void (*)(char *, uint64_t))v412;
    ((void (*)(char *, uint64_t))v412)(v381, v908);
    uint64_t v413 = (char *)v884[1];
    ++v884;
    v902 = v413;
    ((void (*)(char *, uint64_t))v413)(v657, v918);
    v900(v658, v909);
    uint64_t v887 = (uint64_t)v398;
    v398(v659, v910);
    ((void (*)(char *, uint64_t))v889)(v660, v911);
    ((void (*)(char *, uint64_t))v891)(v661, v920);
    uint64_t v414 = v912;
    v893(v662, v912);
    v897(v663, v402);
    uint64_t v415 = v921;
    uint64_t v416 = v892;
    ((void (*)(char *, uint64_t))v892)(v492, v921);
    ((void (*)(char *, uint64_t))v895)(v493, v914);
    ((void (*)(char *, uint64_t))v896)(v494, v915);
    v901(v495, v406);
    v853 = v407;
    ((void (*)(char *, uint64_t))v888)(v496, v408);
    uint64_t v417 = v917;
    ((void (*)(char *, uint64_t))v890)(v497, v917);
    ((void (*)(char *, uint64_t))v899)(v500, v410);
    ((void (*)(char *, uint64_t))v894)(v501, v411);
    uint64_t v418 = v904;
    ((void (*)(char *, uint64_t))v882)(v502, v904);
    uint64_t v419 = v908;
    v903(v802, v908);
    ((void (*)(char *, uint64_t))v902)(v665, v918);
    ((void (*)(char *, uint64_t))v898)(v666, v919);
    v398(v667, v910);
    uint64_t v420 = v911;
    ((void (*)(char *, uint64_t))v889)(v668, v911);
    ((void (*)(char *, uint64_t))v891)(v669, v920);
    v893(v670, v414);
    v897(v671, v913);
    ((void (*)(char *, uint64_t))v416)(v664, v415);
    uint64_t v421 = v914;
    ((void (*)(char *, uint64_t))v895)(v505, v914);
    uint64_t v422 = v915;
    ((void (*)(char *, uint64_t))v896)(v506, v915);
    v901(v507, v916);
    ((void (*)(char *, uint64_t))v888)(v508, v906);
    ((void (*)(char *, uint64_t))v890)(v509, v417);
    ((void (*)(char *, uint64_t))v899)(v510, v410);
    uint64_t v423 = v905;
    ((void (*)(char *, uint64_t))v894)(v511, v905);
    uint64_t v424 = v418;
    uint64_t v425 = v882;
    ((void (*)(char *, uint64_t))v882)(v512, v424);
    v903(v803, v419);
    ((void (*)(char *, uint64_t))v902)(v673, v918);
    ((void (*)(char *, uint64_t))v898)(v674, v919);
    v900(v675, v909);
    ((void (*)(char *, uint64_t))v889)(v676, v420);
    uint64_t v426 = v920;
    ((void (*)(char *, uint64_t))v891)(v677, v920);
    v893(v678, v912);
    uint64_t v427 = v913;
    v897(v679, v913);
    ((void (*)(char *, uint64_t))v892)(v672, v921);
    ((void (*)(char *, uint64_t))v895)(v515, v421);
    ((void (*)(char *, uint64_t))v896)(v518, v422);
    v901(v519, v916);
    uint64_t v428 = v906;
    ((void (*)(char *, uint64_t))v888)(v520, v906);
    uint64_t v429 = v890;
    ((void (*)(char *, uint64_t))v890)(v521, v917);
    ((void (*)(char *, uint64_t))v899)(v522, v907);
    v430 = v894;
    ((void (*)(char *, uint64_t))v894)(v523, v423);
    ((void (*)(char *, uint64_t))v425)(v524, v904);
    v903(v804, v908);
    uint64_t v431 = v918;
    ((void (*)(char *, uint64_t))v902)(v680, v918);
    ((void (*)(char *, uint64_t))v898)(v681, v919);
    uint64_t v432 = v909;
    v900(v682, v909);
    ((void (*)(char *, uint64_t))v887)(v683, v910);
    ((void (*)(char *, uint64_t))v891)(v684, v426);
    v893(v685, v912);
    v897(v686, v427);
    ((void (*)(char *, uint64_t))v892)(v527, v921);
    ((void (*)(char *, uint64_t))v895)(v528, v914);
    ((void (*)(char *, uint64_t))v896)(v529, v915);
    v901(v530, v916);
    ((void (*)(char *, uint64_t))v888)(v531, v428);
    ((void (*)(char *, uint64_t))v429)(v532, v917);
    ((void (*)(char *, uint64_t))v899)(v533, v907);
    ((void (*)(char *, uint64_t))v430)(v536, v905);
    uint64_t v433 = v904;
    ((void (*)(char *, uint64_t))v425)(v537, v904);
    v903(v805, v908);
    ((void (*)(char *, uint64_t))v902)(v687, v431);
    uint64_t v434 = (void (*)(char *, uint64_t))v898;
    ((void (*)(char *, uint64_t))v898)(v688, v919);
    v900(v689, v432);
    uint64_t v435 = v910;
    ((void (*)(char *, uint64_t))v887)(v690, v910);
    uint64_t v436 = v911;
    ((void (*)(char *, uint64_t))v889)(v691, v911);
    v893(v692, v912);
    v897(v693, v913);
    ((void (*)(char *, uint64_t))v892)(v540, v921);
    ((void (*)(char *, uint64_t))v895)(v541, v914);
    uint64_t v437 = v915;
    ((void (*)(char *, uint64_t))v896)(v542, v915);
    v901(v543, v916);
    uint64_t v438 = v888;
    ((void (*)(char *, uint64_t))v888)(v544, v906);
    ((void (*)(char *, uint64_t))v890)(v545, v917);
    ((void (*)(char *, uint64_t))v899)(v546, v907);
    ((void (*)(char *, uint64_t))v894)(v547, v905);
    ((void (*)(char *, uint64_t))v882)(v548, v433);
    uint64_t v439 = v908;
    v903(v806, v908);
    ((void (*)(char *, uint64_t))v902)(v694, v918);
    v434(v695, v919);
    v900(v696, v909);
    ((void (*)(char *, uint64_t))v887)(v697, v435);
    uint64_t v440 = v889;
    ((void (*)(char *, uint64_t))v889)(v698, v436);
    uint64_t v441 = v891;
    ((void (*)(char *, uint64_t))v891)(v699, v920);
    v897(v700, v913);
    ((void (*)(char *, uint64_t))v892)(v551, v921);
    ((void (*)(char *, uint64_t))v895)(v552, v914);
    ((void (*)(char *, uint64_t))v896)(v553, v437);
    v901(v555, v916);
    ((void (*)(char *, uint64_t))v438)(v557, v906);
    ((void (*)(char *, uint64_t))v890)(v558, v917);
    ((void (*)(char *, uint64_t))v899)(v559, v907);
    ((void (*)(char *, uint64_t))v894)(v560, v905);
    ((void (*)(char *, uint64_t))v882)(v561, v904);
    v903(v807, v439);
    ((void (*)(char *, uint64_t))v902)(v701, v918);
    uint64_t v442 = v919;
    ((void (*)(char *, uint64_t))v898)(v702, v919);
    v900(v703, v909);
    ((void (*)(char *, uint64_t))v887)(v704, v910);
    ((void (*)(char *, uint64_t))v440)(v705, v911);
    ((void (*)(char *, uint64_t))v441)(v706, v920);
    uint64_t v443 = v912;
    v444 = v893;
    v893(v707, v912);
    ((void (*)(char *, uint64_t))v892)(v564, v921);
    uint64_t v445 = v914;
    uint64_t v446 = v895;
    ((void (*)(char *, uint64_t))v895)(v565, v914);
    ((void (*)(char *, uint64_t))v896)(v566, v915);
    v901(v567, v916);
    ((void (*)(char *, uint64_t))v888)(v568, v906);
    ((void (*)(char *, uint64_t))v890)(v569, v917);
    ((void (*)(char *, uint64_t))v899)(v570, v907);
    ((void (*)(char *, uint64_t))v894)(v571, v905);
    ((void (*)(char *, uint64_t))v882)(v574, v904);
    v903(v808, v908);
    ((void (*)(char *, uint64_t))v902)(v708, v918);
    ((void (*)(char *, uint64_t))v898)(v709, v442);
    v447 = v900;
    v900(v710, v909);
    ((void (*)(char *, uint64_t))v887)(v711, v910);
    ((void (*)(char *, uint64_t))v889)(v712, v911);
    ((void (*)(char *, uint64_t))v891)(v713, v920);
    v444(v714, v443);
    uint64_t v448 = v913;
    uint64_t v449 = v897;
    v897(v575, v913);
    ((void (*)(char *, uint64_t))v446)(v578, v445);
    uint64_t v450 = v896;
    ((void (*)(char *, uint64_t))v896)(v579, v915);
    v901(v580, v916);
    ((void (*)(char *, uint64_t))v888)(v581, v906);
    ((void (*)(char *, uint64_t))v890)(v582, v917);
    ((void (*)(char *, uint64_t))v899)(v583, v907);
    ((void (*)(char *, uint64_t))v894)(v584, v905);
    ((void (*)(char *, uint64_t))v882)(v585, v904);
    v903(v809, v908);
    ((void (*)(char *, uint64_t))v902)(v716, v918);
    ((void (*)(char *, uint64_t))v898)(v717, v919);
    v447(v718, v909);
    v451 = (void (*)(char *, uint64_t))v887;
    ((void (*)(char *, uint64_t))v887)(v719, v910);
    ((void (*)(char *, uint64_t))v889)(v720, v911);
    ((void (*)(char *, uint64_t))v891)(v721, v920);
    v893(v800, v912);
    v449(v715, v448);
    uint64_t v452 = v921;
    uint64_t v453 = v892;
    ((void (*)(char *, uint64_t))v892)(v588, v921);
    ((void (*)(char *, uint64_t))v450)(v589, v915);
    uint64_t v454 = v916;
    uint64_t v455 = v901;
    v901(v590, v916);
    ((void (*)(char *, uint64_t))v888)(v591, v906);
    ((void (*)(char *, uint64_t))v890)(v594, v917);
    uint64_t v456 = v899;
    ((void (*)(char *, uint64_t))v899)(v595, v907);
    ((void (*)(char *, uint64_t))v894)(v596, v905);
    ((void (*)(char *, uint64_t))v882)(v597, v904);
    v903(v810, v908);
    ((void (*)(char *, uint64_t))v902)(v722, v918);
    ((void (*)(char *, uint64_t))v898)(v723, v919);
    uint64_t v457 = v909;
    v900(v724, v909);
    v451(v725, v910);
    ((void (*)(char *, uint64_t))v889)(v726, v911);
    ((void (*)(char *, uint64_t))v891)(v727, v920);
    v893(v728, v912);
    v897(v799, v913);
    ((void (*)(char *, uint64_t))v453)(v600, v452);
    ((void (*)(char *, uint64_t))v895)(v601, v914);
    v455(v602, v454);
    uint64_t v458 = v888;
    ((void (*)(char *, uint64_t))v888)(v603, v906);
    uint64_t v459 = v917;
    ((void (*)(char *, uint64_t))v890)(v604, v917);
    ((void (*)(char *, uint64_t))v456)(v605, v907);
    ((void (*)(char *, uint64_t))v894)(v606, v905);
    ((void (*)(char *, uint64_t))v882)(v607, v904);
    uint64_t v460 = v903;
    v903(v811, v908);
    v461 = v902;
    ((void (*)(char *, uint64_t))v902)(v730, v918);
    ((void (*)(char *, uint64_t))v898)(v731, v919);
    v900(v732, v457);
    ((void (*)(char *, uint64_t))v887)(v733, v910);
    ((void (*)(char *, uint64_t))v889)(v734, v911);
    ((void (*)(char *, uint64_t))v891)(v735, v920);
    v893(v798, v912);
    v897(v729, v913);
    ((void (*)(char *, uint64_t))v892)(v609, v921);
    ((void (*)(char *, uint64_t))v895)(v610, v914);
    ((void (*)(char *, uint64_t))v896)(v611, v915);
    ((void (*)(char *, uint64_t))v458)(v612, v906);
    v462 = v890;
    ((void (*)(char *, uint64_t))v890)(v613, v459);
    uint64_t v463 = v907;
    ((void (*)(char *, uint64_t))v899)(v615, v907);
    uint64_t v464 = v905;
    ((void (*)(char *, uint64_t))v894)(v616, v905);
    v465 = v882;
    ((void (*)(char *, uint64_t))v882)(v617, v904);
    v460(v812, v908);
    ((void (*)(char *, uint64_t))v461)(v738, v918);
    ((void (*)(char *, uint64_t))v898)(v739, v919);
    v900(v740, v909);
    ((void (*)(char *, uint64_t))v887)(v741, v910);
    ((void (*)(char *, uint64_t))v889)(v742, v911);
    ((void (*)(char *, uint64_t))v891)(v743, v920);
    v893(v797, v912);
    v897(v736, v913);
    ((void (*)(char *, uint64_t))v892)(v737, v921);
    ((void (*)(char *, uint64_t))v895)(v618, v914);
    uint64_t v466 = v915;
    ((void (*)(char *, uint64_t))v896)(v619, v915);
    v901(v620, v916);
    ((void (*)(char *, uint64_t))v462)(v621, v917);
    ((void (*)(char *, uint64_t))v899)(v622, v463);
    v467 = v894;
    ((void (*)(char *, uint64_t))v894)(v623, v464);
    uint64_t v468 = v904;
    ((void (*)(char *, uint64_t))v465)(v624, v904);
    v903(v744, v908);
    uint64_t v469 = v918;
    ((void (*)(char *, uint64_t))v902)(v747, v918);
    ((void (*)(char *, uint64_t))v898)(v748, v919);
    v900(v749, v909);
    ((void (*)(char *, uint64_t))v887)(v750, v910);
    v470 = v889;
    ((void (*)(char *, uint64_t))v889)(v751, v911);
    uint64_t v471 = v920;
    ((void (*)(char *, uint64_t))v891)(v752, v920);
    v893(v796, v912);
    v897(v745, v913);
    ((void (*)(char *, uint64_t))v892)(v746, v921);
    ((void (*)(char *, uint64_t))v895)(v625, v914);
    ((void (*)(char *, uint64_t))v896)(v626, v466);
    v901(v627, v916);
    uint64_t v472 = v906;
    ((void (*)(char *, uint64_t))v888)(v628, v906);
    ((void (*)(char *, uint64_t))v899)(v629, v907);
    ((void (*)(char *, uint64_t))v467)(v630, v905);
    v473 = v882;
    ((void (*)(char *, uint64_t))v882)(v631, v468);
    uint64_t v474 = v908;
    v903(v753, v908);
    ((void (*)(char *, uint64_t))v902)(v756, v469);
    ((void (*)(char *, uint64_t))v898)(v757, v919);
    v900(v758, v909);
    uint64_t v475 = v910;
    ((void (*)(char *, uint64_t))v887)(v759, v910);
    ((void (*)(char *, uint64_t))v470)(v760, v911);
    uint64_t v476 = v891;
    ((void (*)(char *, uint64_t))v891)(v761, v471);
    v893(v795, v912);
    v897(v754, v913);
    ((void (*)(char *, uint64_t))v892)(v755, v921);
    ((void (*)(char *, uint64_t))v895)(v632, v914);
    ((void (*)(char *, uint64_t))v896)(v633, v915);
    v901(v634, v916);
    ((void (*)(char *, uint64_t))v888)(v635, v472);
    ((void (*)(char *, uint64_t))v890)(v636, v917);
    ((void (*)(char *, uint64_t))v894)(v637, v905);
    ((void (*)(char *, uint64_t))v473)(v638, v904);
    v903(v762, v474);
    ((void (*)(char *, uint64_t))v902)(v765, v918);
    uint64_t v477 = (void (*)(char *, uint64_t))v898;
    ((void (*)(char *, uint64_t))v898)(v766, v919);
    v900(v767, v909);
    ((void (*)(char *, uint64_t))v887)(v768, v475);
    uint64_t v478 = v911;
    ((void (*)(char *, uint64_t))v889)(v769, v911);
    ((void (*)(char *, uint64_t))v476)(v770, v920);
    v893(v794, v912);
    v897(v763, v913);
    ((void (*)(char *, uint64_t))v892)(v764, v921);
    uint64_t v479 = v914;
    ((void (*)(char *, uint64_t))v895)(v639, v914);
    ((void (*)(char *, uint64_t))v896)(v640, v915);
    v901(v641, v916);
    uint64_t v480 = v906;
    ((void (*)(char *, uint64_t))v888)(v642, v906);
    ((void (*)(char *, uint64_t))v890)(v643, v917);
    ((void (*)(char *, uint64_t))v899)(v644, v907);
    ((void (*)(char *, uint64_t))v882)(v645, v904);
    v903(v814, v908);
    ((void (*)(char *, uint64_t))v902)(v772, v918);
    v477(v773, v919);
    v900(v774, v909);
    ((void (*)(char *, uint64_t))v887)(v775, v910);
    ((void (*)(char *, uint64_t))v889)(v776, v478);
    ((void (*)(char *, uint64_t))v891)(v777, v920);
    uint64_t v481 = v912;
    uint64_t v482 = v893;
    v893(v778, v912);
    uint64_t v483 = v897;
    v897(v779, v913);
    ((void (*)(char *, uint64_t))v892)(v793, v921);
    uint64_t v484 = v479;
    uint64_t v485 = v895;
    ((void (*)(char *, uint64_t))v895)(v771, v484);
    uint64_t v486 = v896;
    ((void (*)(char *, uint64_t))v896)(v646, v915);
    v901(v647, v916);
    ((void (*)(char *, uint64_t))v888)(v648, v480);
    ((void (*)(char *, uint64_t))v890)(v649, v917);
    v487 = v899;
    ((void (*)(char *, uint64_t))v899)(v650, v907);
    ((void (*)(char *, uint64_t))v894)(v651, v905);
    v903(v813, v908);
    ((void (*)(char *, uint64_t))v902)(v784, v918);
    ((void (*)(char *, uint64_t))v898)(v785, v919);
    v900(v786, v909);
    ((void (*)(char *, uint64_t))v887)(v787, v910);
    ((void (*)(char *, uint64_t))v889)(v788, v911);
    ((void (*)(char *, uint64_t))v891)(v789, v920);
    v482(v790, v481);
    v483(v791, v913);
    ((void (*)(char *, uint64_t))v892)(v792, v921);
    ((void (*)(char *, uint64_t))v485)(v780, v914);
    ((void (*)(char *, uint64_t))v486)(v781, v915);
    v901(v782, v916);
    ((void (*)(char *, uint64_t))v888)(v783, v906);
    ((void (*)(char *, uint64_t))v890)(v652, v917);
    ((void (*)(char *, uint64_t))v487)(v653, v907);
    ((void (*)(char *, uint64_t))v894)(v654, v905);
    return ((uint64_t (*)(char *, uint64_t))v882)(v655, v904);
  }
  return result;
}

uint64_t sub_25877FF90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258776BC0(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], &a4[TupleTypeMetadata[60]], &a4[TupleTypeMetadata[64]], &a4[TupleTypeMetadata[68]], &a4[TupleTypeMetadata[72]], (uint64_t)&a4[TupleTypeMetadata[76]], a1,
           a2,
           a3);
}

uint64_t (*Flatten_18.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258780100(char *a1, char *a2, char *a3, char *a4, char *a5, char *a6, char *a7, char *a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, char *a19, uint64_t a20,uint64_t a21,void *a22)
{
  v859 = a8;
  v858 = a7;
  v857 = a6;
  v856 = a5;
  v855 = a4;
  v854 = a3;
  v853 = a2;
  v852 = a1;
  uint64_t v23 = a22[4];
  uint64_t v987 = a22[3];
  uint64_t v970 = v23;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v25 = a22[5];
  v968 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v971 = v25;
  uint64_t v26 = swift_getTupleTypeMetadata2();
  uint64_t v27 = a22[6];
  v967 = (char *)v26;
  uint64_t v972 = v27;
  uint64_t v28 = swift_getTupleTypeMetadata2();
  uint64_t v29 = a22[7];
  v966 = (void (*)(char *, uint64_t))v28;
  uint64_t v974 = v29;
  uint64_t v30 = swift_getTupleTypeMetadata2();
  uint64_t v31 = a22[8];
  uint64_t v965 = v30;
  uint64_t v969 = v31;
  uint64_t v32 = swift_getTupleTypeMetadata2();
  uint64_t v33 = a22[9];
  uint64_t v964 = v32;
  uint64_t v980 = v33;
  uint64_t v34 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a22[10];
  v963 = (char *)v34;
  uint64_t v973 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a22[11];
  v962 = (void (*)(char *, uint64_t))v36;
  uint64_t v986 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a22[12];
  v961 = (char *)v38;
  uint64_t v979 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v41 = a22[13];
  uint64_t v960 = v40;
  uint64_t v985 = v41;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v43 = a22[14];
  uint64_t v959 = v42;
  uint64_t v984 = v43;
  uint64_t v44 = swift_getTupleTypeMetadata2();
  uint64_t v45 = a22[15];
  uint64_t v958 = v44;
  uint64_t v978 = v45;
  uint64_t v46 = swift_getTupleTypeMetadata2();
  uint64_t v47 = a22[16];
  v957 = (void (*)(char *, uint64_t))v46;
  uint64_t v983 = v47;
  uint64_t v48 = swift_getTupleTypeMetadata2();
  uint64_t v49 = a22[17];
  v956 = (char *)v48;
  uint64_t v982 = v49;
  uint64_t v50 = swift_getTupleTypeMetadata2();
  uint64_t v51 = a22[18];
  v955 = (char *)v50;
  uint64_t v977 = v51;
  uint64_t v52 = swift_getTupleTypeMetadata2();
  uint64_t v53 = a22[19];
  v954 = (char *)v52;
  uint64_t v976 = v53;
  uint64_t v54 = swift_getTupleTypeMetadata2();
  uint64_t v55 = a22[20];
  v953 = (char *)v54;
  uint64_t v981 = v55;
  uint64_t v56 = swift_getTupleTypeMetadata2();
  uint64_t v57 = a22[21];
  v952 = (char *)v56;
  uint64_t v975 = v57;
  uint64_t v951 = swift_getTupleTypeMetadata2();
  uint64_t v61 = MEMORY[0x270FA5388](v951, v58, v59, v60);
  v860 = (char *)v513 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = MEMORY[0x270FA5388](v61, v63, v64, v65);
  v861 = (char *)v513 - v67;
  uint64_t v71 = MEMORY[0x270FA5388](v66, v68, v69, v70);
  v862 = (char *)v513 - v72;
  uint64_t v76 = MEMORY[0x270FA5388](v71, v73, v74, v75);
  v863 = (char *)v513 - v77;
  uint64_t v81 = MEMORY[0x270FA5388](v76, v78, v79, v80);
  v864 = (char *)v513 - v82;
  uint64_t v86 = MEMORY[0x270FA5388](v81, v83, v84, v85);
  v865 = (char *)v513 - v87;
  uint64_t v91 = MEMORY[0x270FA5388](v86, v88, v89, v90);
  v866 = (char *)v513 - v92;
  uint64_t v96 = MEMORY[0x270FA5388](v91, v93, v94, v95);
  v867 = (char *)v513 - v97;
  uint64_t v101 = MEMORY[0x270FA5388](v96, v98, v99, v100);
  v868 = (char *)v513 - v102;
  uint64_t v106 = MEMORY[0x270FA5388](v101, v103, v104, v105);
  v869 = (char *)v513 - v107;
  uint64_t v111 = MEMORY[0x270FA5388](v106, v108, v109, v110);
  v870 = (char *)v513 - v112;
  uint64_t v116 = MEMORY[0x270FA5388](v111, v113, v114, v115);
  v871 = (char *)v513 - v117;
  uint64_t v121 = MEMORY[0x270FA5388](v116, v118, v119, v120);
  v872 = (char *)v513 - v122;
  uint64_t v126 = MEMORY[0x270FA5388](v121, v123, v124, v125);
  uint64_t v128 = (char *)v513 - v127;
  uint64_t v132 = MEMORY[0x270FA5388](v126, v129, v130, v131);
  uint64_t v134 = (char *)v513 - v133;
  uint64_t v138 = MEMORY[0x270FA5388](v132, v135, v136, v137);
  uint64_t v140 = (char *)v513 - v139;
  uint64_t v144 = MEMORY[0x270FA5388](v138, v141, v142, v143);
  v874 = (char *)v513 - v145;
  uint64_t v149 = MEMORY[0x270FA5388](v144, v146, v147, v148);
  v873 = (char *)v513 - v150;
  uint64_t v154 = MEMORY[0x270FA5388](v149, v151, v152, v153);
  uint64_t v156 = (char *)v513 - v155;
  MEMORY[0x270FA5388](v154, v157, v158, v159);
  uint64_t v161 = (char *)v513 - v160;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a22[22] + 24))(a20, a21, a22[2]);
  if (!v22)
  {
    uint64_t v163 = *((int *)v966 + 12);
    uint64_t v164 = *(int *)(v965 + 48);
    uint64_t v165 = &v161[v164];
    uint64_t v913 = &v161[v164];
    uint64_t v166 = *(int *)(v964 + 48);
    v941 = &v161[v166];
    uint64_t v167 = *((int *)v963 + 12);
    v940 = &v161[v167];
    uint64_t v168 = *((int *)v962 + 12);
    v939 = &v161[v168];
    uint64_t v169 = *((int *)v961 + 12);
    v934 = &v161[v169];
    uint64_t v170 = *(int *)(v960 + 48);
    v935 = &v161[v170];
    uint64_t v171 = *(int *)(v959 + 48);
    v936 = &v161[v171];
    uint64_t v172 = *(int *)(v958 + 48);
    v937 = &v161[v172];
    uint64_t v173 = *((int *)v957 + 12);
    v938 = &v161[v173];
    uint64_t v692 = 0;
    uint64_t v174 = *((int *)v956 + 12);
    v942 = &v161[v174];
    uint64_t v175 = *((int *)v955 + 12);
    v943 = &v161[v175];
    uint64_t v176 = *((int *)v954 + 12);
    v944 = &v161[v176];
    uint64_t v177 = *((int *)v953 + 12);
    v945 = &v161[v177];
    uint64_t v178 = *((int *)v952 + 12);
    v946 = &v161[v178];
    uint64_t v179 = *(int *)(v951 + 48);
    v933 = &v161[v179];
    uint64_t v842 = &v156[v179];
    uint64_t v843 = &v156[v178];
    uint64_t v844 = &v156[v177];
    uint64_t v845 = &v156[v176];
    uint64_t v846 = &v156[v175];
    uint64_t v847 = &v156[v174];
    uint64_t v848 = &v156[v173];
    uint64_t v849 = &v156[v172];
    uint64_t v850 = &v156[v171];
    uint64_t v851 = &v156[v170];
    v809 = v134;
    uint64_t v838 = &v156[v169];
    uint64_t v819 = v140;
    uint64_t v839 = &v156[v168];
    v799 = v128;
    uint64_t v840 = &v156[v167];
    uint64_t v841 = &v156[v166];
    uint64_t v180 = &v156[v164];
    uint64_t v688 = &v156[v164];
    v181 = &v161[v163];
    uint64_t v914 = &v161[v163];
    uint64_t v182 = &v156[v163];
    v689 = &v156[v163];
    uint64_t v183 = *((int *)v967 + 12);
    uint64_t v184 = &v161[v183];
    uint64_t v915 = &v161[v183];
    uint64_t v185 = &v156[v183];
    uint64_t v690 = &v156[v183];
    uint64_t v186 = *((int *)v968 + 12);
    uint64_t v187 = &v161[v186];
    uint64_t v916 = &v161[v186];
    uint64_t v188 = v161;
    uint64_t v917 = v161;
    uint64_t v189 = *(void *)(v987 - 8);
    uint64_t v190 = &v156[v186];
    uint64_t v691 = &v156[v186];
    uint64_t v950 = v189;
    uint64_t v887 = *(void (**)(void))(v189 + 16);
    uint64_t v885 = v189 + 16;
    uint64_t v644 = a19;
    uint64_t v640 = a18;
    uint64_t v700 = a17;
    v709 = a16;
    v718 = a15;
    v727 = a14;
    v735 = a13;
    v743 = a12;
    v751 = a11;
    v759 = a10;
    v767 = a9;
    ((void (*)(char *, char *, uint64_t))v887)(v156, v188, v987);
    v949 = *(void **)(v970 - 8);
    uint64_t v191 = (void (*)(char *, char *, uint64_t))v949[2];
    v886 = v949 + 2;
    v891 = v191;
    ((void (*)(char *, char *))v191)(v190, v187);
    v932 = *(void **)(v971 - 8);
    uint64_t v192 = (void (*)(char *, char *, uint64_t))v932[2];
    v889 = v932 + 2;
    v890 = v192;
    ((void (*)(char *, char *))v192)(v185, v184);
    v931 = *(void **)(v972 - 8);
    uint64_t v193 = (void (*)(char *, char *, uint64_t))v931[2];
    v880 = v931 + 2;
    v888 = v193;
    ((void (*)(char *, char *))v193)(v182, v181);
    v930 = *(void **)(v974 - 8);
    v879 = (void (*)(char *, char *, uint64_t))v930[2];
    v875 = v930 + 2;
    v879(v180, v165, v974);
    v929 = *(void **)(v969 - 8);
    v878 = (void (*)(char *, char *, uint64_t))v929[2];
    v882 = v929 + 2;
    v878(v841, v941, v969);
    v928 = *(void **)(v980 - 8);
    uint64_t v194 = (void (*)(char *, char *, uint64_t))v928[2];
    v883 = v928 + 2;
    v884 = v194;
    v194(v840, v940, v980);
    v927 = *(void **)(v973 - 8);
    v195 = (void (*)(char *, char *, uint64_t))v927[2];
    v877 = v927 + 2;
    v881 = v195;
    v195(v839, v939, v973);
    v926 = *(void **)(v986 - 8);
    v876 = (void (*)(char *, char *, uint64_t))v926[2];
    uint64_t v912 = (char *)(v926 + 2);
    v876(v838, v934, v986);
    v925 = *(void **)(v979 - 8);
    uint64_t v196 = (char *)v925[2];
    uint64_t v910 = (char *)(v925 + 2);
    uint64_t v911 = v196;
    ((void (*)(char *, char *, uint64_t))v196)(v851, v935, v979);
    v948 = *(void **)(v985 - 8);
    uint64_t v197 = (char *)v948[2];
    uint64_t v908 = (char *)(v948 + 2);
    uint64_t v909 = v197;
    ((void (*)(char *, char *, uint64_t))v197)(v850, v936, v985);
    v924 = *(void **)(v984 - 8);
    uint64_t v198 = (char *)v924[2];
    uint64_t v906 = (void (*)(char *, char *, uint64_t))(v924 + 2);
    uint64_t v907 = v198;
    ((void (*)(char *, char *, uint64_t))v198)(v849, v937, v984);
    v923 = *(void **)(v978 - 8);
    uint64_t v199 = (void (*)(char *, char *, uint64_t))v923[2];
    uint64_t v904 = (char *)(v923 + 2);
    uint64_t v905 = v199;
    v199(v848, v938, v978);
    v922 = *(void **)(v983 - 8);
    uint64_t v200 = (char *)v922[2];
    v902 = v922 + 2;
    v903 = v200;
    ((void (*)(char *, char *, uint64_t))v200)(v847, v942, v983);
    uint64_t v921 = *(void **)(v982 - 8);
    uint64_t v201 = (void (*)(char *, char *, uint64_t))v921[2];
    v900 = v921 + 2;
    v901 = v201;
    v201(v846, v943, v982);
    uint64_t v920 = *(void **)(v977 - 8);
    uint64_t v202 = (void (*)(char *, char *, uint64_t))v920[2];
    uint64_t v898 = v920 + 2;
    v899 = v202;
    v202(v845, v944, v977);
    uint64_t v919 = *(void **)(v976 - 8);
    uint64_t v203 = (void (*)(char *, char *, uint64_t))v919[2];
    v896 = v919 + 2;
    v897 = v203;
    v203(v844, v945, v976);
    uint64_t v918 = *(void **)(v981 - 8);
    uint64_t v204 = (void (*)(char *, char *, uint64_t))v918[2];
    v894 = v918 + 2;
    v895 = v204;
    v204(v843, v946, v981);
    v947 = *(void **)(v975 - 8);
    uint64_t v205 = (void (*)(char *, char *, uint64_t))v947[2];
    v892 = v947 + 2;
    v893 = v205;
    v205(v842, v933, v975);
    uint64_t v206 = *(void (**)(char *, char *, uint64_t))(v950 + 32);
    uint64_t v632 = v950 + 32;
    v633 = v206;
    v206(v852, v156, v987);
    v830 = &v873[*(int *)(v951 + 48)];
    v831 = &v873[*((int *)v952 + 12)];
    uint64_t v832 = &v873[*((int *)v953 + 12)];
    v833 = &v873[*((int *)v954 + 12)];
    v834 = &v873[*((int *)v955 + 12)];
    uint64_t v835 = &v873[*((int *)v956 + 12)];
    uint64_t v836 = &v873[*((int *)v957 + 12)];
    uint64_t v837 = &v873[*(int *)(v958 + 48)];
    v852 = &v873[*(int *)(v959 + 48)];
    v829 = &v873[*(int *)(v960 + 48)];
    v681 = &v873[*((int *)v961 + 12)];
    uint64_t v207 = v681;
    v682 = &v873[*((int *)v962 + 12)];
    uint64_t v208 = v682;
    uint64_t v683 = &v873[*((int *)v963 + 12)];
    uint64_t v209 = v683;
    v684 = &v873[*(int *)(v964 + 48)];
    uint64_t v210 = v684;
    v685 = &v873[*(int *)(v965 + 48)];
    uint64_t v211 = v685;
    v686 = &v873[*((int *)v966 + 12)];
    uint64_t v212 = v686;
    uint64_t v687 = &v873[*((int *)v967 + 12)];
    uint64_t v213 = v687;
    uint64_t v214 = &v873[*((int *)v968 + 12)];
    v887();
    uint64_t v215 = v970;
    v891(v214, v916, v970);
    v890(v213, v915, v971);
    v888(v212, v914, v972);
    v879(v211, v913, v974);
    v878(v210, v941, v969);
    v884(v209, v940, v980);
    v881(v208, v939, v973);
    v876(v207, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v829, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v852, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v837, v937, v984);
    v905(v836, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v835, v942, v983);
    v901(v834, v943, v982);
    v899(v833, v944, v977);
    v897(v832, v945, v976);
    v895(v831, v946, v981);
    v893(v830, v933, v975);
    v216 = (void (*)(char *, char *, uint64_t))v949[4];
    v621 = v949 + 4;
    v622 = v216;
    uint64_t v217 = v215;
    v216(v853, v214, v215);
    v822 = &v874[*(int *)(v951 + 48)];
    v823 = &v874[*((int *)v952 + 12)];
    uint64_t v824 = &v874[*((int *)v953 + 12)];
    v825 = &v874[*((int *)v954 + 12)];
    v826 = &v874[*((int *)v955 + 12)];
    v827 = &v874[*((int *)v956 + 12)];
    v828 = &v874[*((int *)v957 + 12)];
    v853 = &v874[*(int *)(v958 + 48)];
    v820 = &v874[*(int *)(v959 + 48)];
    v821 = &v874[*(int *)(v960 + 48)];
    v674 = &v874[*((int *)v961 + 12)];
    uint64_t v218 = v674;
    v675 = &v874[*((int *)v962 + 12)];
    uint64_t v219 = v675;
    v676 = &v874[*((int *)v963 + 12)];
    v220 = v676;
    v677 = &v874[*(int *)(v964 + 48)];
    uint64_t v221 = v677;
    uint64_t v678 = &v874[*(int *)(v965 + 48)];
    uint64_t v222 = v678;
    v679 = &v874[*((int *)v966 + 12)];
    uint64_t v223 = v679;
    uint64_t v224 = &v874[*((int *)v967 + 12)];
    v680 = &v874[*((int *)v968 + 12)];
    uint64_t v225 = v680;
    v887();
    v891(v225, v916, v217);
    uint64_t v226 = v971;
    v890(v224, v915, v971);
    v888(v223, v914, v972);
    v879(v222, v913, v974);
    v878(v221, v941, v969);
    v884(v220, v940, v980);
    v881(v219, v939, v973);
    v876(v218, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v821, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v820, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v853, v937, v984);
    v905(v828, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v827, v942, v983);
    v901(v826, v943, v982);
    v899(v825, v944, v977);
    v897(v824, v945, v976);
    v895(v823, v946, v981);
    v893(v822, v933, v975);
    uint64_t v227 = (void (*)(char *, char *, uint64_t))v932[4];
    v615 = v932 + 4;
    uint64_t v616 = v227;
    v227(v854, v224, v226);
    v812 = &v819[*(int *)(v951 + 48)];
    v813 = &v819[*((int *)v952 + 12)];
    v814 = &v819[*((int *)v953 + 12)];
    v815 = &v819[*((int *)v954 + 12)];
    v816 = &v819[*((int *)v955 + 12)];
    v817 = &v819[*((int *)v956 + 12)];
    v818 = &v819[*((int *)v957 + 12)];
    v854 = &v819[*(int *)(v958 + 48)];
    v810 = &v819[*(int *)(v959 + 48)];
    v811 = &v819[*(int *)(v960 + 48)];
    v667 = &v819[*((int *)v961 + 12)];
    uint64_t v228 = v667;
    v668 = &v819[*((int *)v962 + 12)];
    uint64_t v229 = v668;
    v669 = &v819[*((int *)v963 + 12)];
    uint64_t v230 = v669;
    v670 = &v819[*(int *)(v964 + 48)];
    uint64_t v231 = v670;
    v671 = &v819[*(int *)(v965 + 48)];
    uint64_t v232 = v671;
    uint64_t v233 = &v819[*((int *)v966 + 12)];
    v672 = &v819[*((int *)v967 + 12)];
    uint64_t v234 = v672;
    v673 = &v819[*((int *)v968 + 12)];
    uint64_t v235 = v673;
    v887();
    v891(v235, v916, v970);
    v890(v234, v915, v226);
    uint64_t v236 = v972;
    v888(v233, v914, v972);
    v879(v232, v913, v974);
    v878(v231, v941, v969);
    v884(v230, v940, v980);
    v881(v229, v939, v973);
    v876(v228, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v811, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v810, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v854, v937, v984);
    v905(v818, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v817, v942, v983);
    v901(v816, v943, v982);
    v899(v815, v944, v977);
    v897(v814, v945, v976);
    v895(v813, v946, v981);
    v893(v812, v933, v975);
    uint64_t v237 = (void (*)(char *, char *, uint64_t))v931[4];
    v608 = v931 + 4;
    v609 = v237;
    uint64_t v238 = v233;
    uint64_t v239 = v236;
    v237(v855, v238, v236);
    v802 = &v809[*(int *)(v951 + 48)];
    v803 = &v809[*((int *)v952 + 12)];
    v804 = &v809[*((int *)v953 + 12)];
    v805 = &v809[*((int *)v954 + 12)];
    v806 = &v809[*((int *)v955 + 12)];
    v807 = &v809[*((int *)v956 + 12)];
    v808 = &v809[*((int *)v957 + 12)];
    v855 = &v809[*(int *)(v958 + 48)];
    v800 = &v809[*(int *)(v959 + 48)];
    v801 = &v809[*(int *)(v960 + 48)];
    v660 = &v809[*((int *)v961 + 12)];
    uint64_t v240 = v660;
    v661 = &v809[*((int *)v962 + 12)];
    uint64_t v241 = v661;
    v662 = &v809[*((int *)v963 + 12)];
    uint64_t v242 = v662;
    v663 = &v809[*(int *)(v964 + 48)];
    v243 = v663;
    uint64_t v244 = &v809[*(int *)(v965 + 48)];
    v664 = &v809[*((int *)v966 + 12)];
    uint64_t v245 = v664;
    v665 = &v809[*((int *)v967 + 12)];
    uint64_t v246 = v665;
    v666 = &v809[*((int *)v968 + 12)];
    uint64_t v247 = v666;
    v887();
    v891(v247, v916, v970);
    v890(v246, v915, v971);
    v888(v245, v914, v239);
    uint64_t v248 = v974;
    v879(v244, v913, v974);
    v878(v243, v941, v969);
    v884(v242, v940, v980);
    v881(v241, v939, v973);
    v876(v240, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v801, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v800, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v855, v937, v984);
    v905(v808, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v807, v942, v983);
    v901(v806, v943, v982);
    v899(v805, v944, v977);
    v897(v804, v945, v976);
    v895(v803, v946, v981);
    v893(v802, v933, v975);
    uint64_t v249 = (void (*)(char *, char *, uint64_t))v930[4];
    v597 = v930 + 4;
    v598 = v249;
    uint64_t v250 = v248;
    v249(v856, v244, v248);
    v792 = &v799[*(int *)(v951 + 48)];
    v793 = &v799[*((int *)v952 + 12)];
    v794 = &v799[*((int *)v953 + 12)];
    v795 = &v799[*((int *)v954 + 12)];
    v796 = &v799[*((int *)v955 + 12)];
    v797 = &v799[*((int *)v956 + 12)];
    v798 = &v799[*((int *)v957 + 12)];
    v856 = &v799[*(int *)(v958 + 48)];
    v790 = &v799[*(int *)(v959 + 48)];
    v791 = &v799[*(int *)(v960 + 48)];
    v653 = &v799[*((int *)v961 + 12)];
    uint64_t v251 = v653;
    v654 = &v799[*((int *)v962 + 12)];
    uint64_t v252 = v654;
    v655 = &v799[*((int *)v963 + 12)];
    uint64_t v253 = v655;
    uint64_t v254 = &v799[*(int *)(v964 + 48)];
    uint64_t v656 = &v799[*(int *)(v965 + 48)];
    uint64_t v255 = v656;
    v657 = &v799[*((int *)v966 + 12)];
    uint64_t v256 = v657;
    v658 = &v799[*((int *)v967 + 12)];
    uint64_t v257 = v658;
    v659 = &v799[*((int *)v968 + 12)];
    uint64_t v258 = v659;
    v887();
    v891(v258, v916, v970);
    v890(v257, v915, v971);
    v888(v256, v914, v972);
    v879(v255, v913, v250);
    uint64_t v259 = v969;
    v878(v254, v941, v969);
    v884(v253, v940, v980);
    v881(v252, v939, v973);
    v876(v251, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v791, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v790, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v856, v937, v984);
    v905(v798, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v797, v942, v983);
    v901(v796, v943, v982);
    v899(v795, v944, v977);
    v897(v794, v945, v976);
    v895(v793, v946, v981);
    v893(v792, v933, v975);
    uint64_t v260 = (void (*)(char *, char *, uint64_t))v929[4];
    v594 = v929 + 4;
    v595 = v260;
    v260(v857, v254, v259);
    uint64_t v782 = &v872[*(int *)(v951 + 48)];
    uint64_t v783 = &v872[*((int *)v952 + 12)];
    uint64_t v784 = &v872[*((int *)v953 + 12)];
    uint64_t v785 = &v872[*((int *)v954 + 12)];
    uint64_t v786 = &v872[*((int *)v955 + 12)];
    uint64_t v787 = &v872[*((int *)v956 + 12)];
    v788 = &v872[*((int *)v957 + 12)];
    v789 = &v872[*(int *)(v958 + 48)];
    v857 = &v872[*(int *)(v959 + 48)];
    uint64_t v645 = &v872[*(int *)(v960 + 48)];
    uint64_t v261 = v645;
    uint64_t v646 = &v872[*((int *)v961 + 12)];
    uint64_t v262 = v646;
    uint64_t v647 = &v872[*((int *)v962 + 12)];
    uint64_t v263 = v647;
    uint64_t v781 = &v872[*((int *)v963 + 12)];
    uint64_t v648 = &v872[*(int *)(v964 + 48)];
    uint64_t v264 = v648;
    uint64_t v649 = &v872[*(int *)(v965 + 48)];
    uint64_t v265 = v649;
    uint64_t v650 = &v872[*((int *)v966 + 12)];
    uint64_t v266 = v650;
    uint64_t v651 = &v872[*((int *)v967 + 12)];
    uint64_t v267 = v651;
    v652 = &v872[*((int *)v968 + 12)];
    uint64_t v268 = v652;
    v887();
    v891(v268, v916, v970);
    v890(v267, v915, v971);
    v888(v266, v914, v972);
    v879(v265, v913, v974);
    v878(v264, v941, v259);
    uint64_t v269 = v781;
    uint64_t v270 = v980;
    v884(v781, v940, v980);
    v881(v263, v939, v973);
    v876(v262, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v261, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v857, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v789, v937, v984);
    v905(v788, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v787, v942, v983);
    v901(v786, v943, v982);
    v899(v785, v944, v977);
    v897(v784, v945, v976);
    v895(v783, v946, v981);
    v893(v782, v933, v975);
    uint64_t v271 = (void (*)(char *, char *, uint64_t))v928[4];
    uint64_t v584 = v928 + 4;
    uint64_t v585 = v271;
    v271(v858, v269, v270);
    uint64_t v775 = &v871[*(int *)(v951 + 48)];
    uint64_t v776 = &v871[*((int *)v952 + 12)];
    uint64_t v777 = &v871[*((int *)v953 + 12)];
    uint64_t v778 = &v871[*((int *)v954 + 12)];
    uint64_t v779 = &v871[*((int *)v955 + 12)];
    uint64_t v780 = &v871[*((int *)v956 + 12)];
    uint64_t v781 = &v871[*((int *)v957 + 12)];
    v858 = &v871[*(int *)(v958 + 48)];
    uint64_t v634 = &v871[*(int *)(v959 + 48)];
    uint64_t v272 = v634;
    v635 = &v871[*(int *)(v960 + 48)];
    uint64_t v273 = v635;
    v636 = &v871[*((int *)v961 + 12)];
    uint64_t v274 = v636;
    uint64_t v774 = &v871[*((int *)v962 + 12)];
    uint64_t v637 = &v871[*((int *)v963 + 12)];
    uint64_t v275 = v637;
    uint64_t v638 = &v871[*(int *)(v964 + 48)];
    v276 = v638;
    uint64_t v639 = &v871[*(int *)(v965 + 48)];
    uint64_t v277 = v639;
    uint64_t v641 = &v871[*((int *)v966 + 12)];
    uint64_t v278 = v641;
    uint64_t v642 = &v871[*((int *)v967 + 12)];
    uint64_t v279 = v642;
    uint64_t v643 = &v871[*((int *)v968 + 12)];
    uint64_t v280 = v643;
    v887();
    v891(v280, v916, v970);
    v890(v279, v915, v971);
    v888(v278, v914, v972);
    v879(v277, v913, v974);
    v878(v276, v941, v969);
    v884(v275, v940, v980);
    uint64_t v281 = v774;
    uint64_t v282 = v973;
    v881(v774, v939, v973);
    v876(v274, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v273, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v272, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v858, v937, v984);
    v905(v781, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v780, v942, v983);
    v901(v779, v943, v982);
    v899(v778, v944, v977);
    v897(v777, v945, v976);
    v895(v776, v946, v981);
    v893(v775, v933, v975);
    uint64_t v283 = (void (*)(char *, char *, uint64_t))v927[4];
    v576 = v927 + 4;
    uint64_t v577 = v283;
    v283(v859, v281, v282);
    v768 = &v870[*(int *)(v951 + 48)];
    uint64_t v769 = &v870[*((int *)v952 + 12)];
    v770 = &v870[*((int *)v953 + 12)];
    uint64_t v771 = &v870[*((int *)v954 + 12)];
    uint64_t v772 = &v870[*((int *)v955 + 12)];
    uint64_t v773 = &v870[*((int *)v956 + 12)];
    uint64_t v774 = &v870[*((int *)v957 + 12)];
    v859 = &v870[*(int *)(v958 + 48)];
    v623 = &v870[*(int *)(v959 + 48)];
    uint64_t v284 = v623;
    v624 = &v870[*(int *)(v960 + 48)];
    uint64_t v285 = v624;
    uint64_t v766 = &v870[*((int *)v961 + 12)];
    v625 = &v870[*((int *)v962 + 12)];
    uint64_t v286 = v625;
    v626 = &v870[*((int *)v963 + 12)];
    uint64_t v287 = v626;
    v627 = &v870[*(int *)(v964 + 48)];
    uint64_t v288 = v627;
    v628 = &v870[*(int *)(v965 + 48)];
    uint64_t v289 = v628;
    v629 = &v870[*((int *)v966 + 12)];
    uint64_t v290 = v629;
    v630 = &v870[*((int *)v967 + 12)];
    uint64_t v291 = v630;
    uint64_t v631 = &v870[*((int *)v968 + 12)];
    uint64_t v292 = v631;
    v887();
    v891(v292, v916, v970);
    v890(v291, v915, v971);
    v888(v290, v914, v972);
    v879(v289, v913, v974);
    v878(v288, v941, v969);
    v884(v287, v940, v980);
    v881(v286, v939, v973);
    uint64_t v293 = v766;
    uint64_t v294 = v986;
    v876(v766, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v285, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v284, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v859, v937, v984);
    v905(v774, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v773, v942, v983);
    v901(v772, v943, v982);
    v899(v771, v944, v977);
    v897(v770, v945, v976);
    v895(v769, v946, v981);
    v893(v768, v933, v975);
    uint64_t v295 = (void (*)(char *, char *, uint64_t))v926[4];
    v571 = v926 + 4;
    v572 = v295;
    v295(v767, v293, v294);
    v760 = &v869[*(int *)(v951 + 48)];
    v761 = &v869[*((int *)v952 + 12)];
    v762 = &v869[*((int *)v953 + 12)];
    v763 = &v869[*((int *)v954 + 12)];
    uint64_t v764 = &v869[*((int *)v955 + 12)];
    v765 = &v869[*((int *)v956 + 12)];
    uint64_t v766 = &v869[*((int *)v957 + 12)];
    v767 = &v869[*(int *)(v958 + 48)];
    v610 = &v869[*(int *)(v959 + 48)];
    uint64_t v296 = v610;
    v758 = &v869[*(int *)(v960 + 48)];
    v611 = &v869[*((int *)v961 + 12)];
    uint64_t v297 = v611;
    v612 = &v869[*((int *)v962 + 12)];
    uint64_t v298 = v612;
    v613 = &v869[*((int *)v963 + 12)];
    uint64_t v299 = v613;
    uint64_t v614 = &v869[*(int *)(v964 + 48)];
    v300 = v614;
    v617 = &v869[*(int *)(v965 + 48)];
    uint64_t v301 = v617;
    v618 = &v869[*((int *)v966 + 12)];
    uint64_t v302 = v618;
    v619 = &v869[*((int *)v967 + 12)];
    v303 = v619;
    v620 = &v869[*((int *)v968 + 12)];
    uint64_t v304 = v620;
    v887();
    v891(v304, v916, v970);
    v890(v303, v915, v971);
    v888(v302, v914, v972);
    v879(v301, v913, v974);
    v878(v300, v941, v969);
    v884(v299, v940, v980);
    v881(v298, v939, v973);
    v876(v297, v934, v986);
    uint64_t v305 = v758;
    uint64_t v306 = v979;
    ((void (*)(char *, char *, uint64_t))v911)(v758, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v296, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v767, v937, v984);
    v905(v766, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v765, v942, v983);
    v901(v764, v943, v982);
    v899(v763, v944, v977);
    v897(v762, v945, v976);
    v895(v761, v946, v981);
    v893(v760, v933, v975);
    uint64_t v307 = (void (*)(char *, char *, uint64_t))v925[4];
    v560 = v925 + 4;
    v561 = v307;
    v307(v759, v305, v306);
    v752 = &v868[*(int *)(v951 + 48)];
    v753 = &v868[*((int *)v952 + 12)];
    v754 = &v868[*((int *)v953 + 12)];
    v755 = &v868[*((int *)v954 + 12)];
    v756 = &v868[*((int *)v955 + 12)];
    v757 = &v868[*((int *)v956 + 12)];
    v758 = &v868[*((int *)v957 + 12)];
    v759 = &v868[*(int *)(v958 + 48)];
    v750 = &v868[*(int *)(v959 + 48)];
    v599 = &v868[*(int *)(v960 + 48)];
    uint64_t v308 = v599;
    v600 = &v868[*((int *)v961 + 12)];
    uint64_t v309 = v600;
    v601 = &v868[*((int *)v962 + 12)];
    uint64_t v310 = v601;
    v602 = &v868[*((int *)v963 + 12)];
    uint64_t v311 = v602;
    v603 = &v868[*(int *)(v964 + 48)];
    uint64_t v312 = v603;
    v604 = &v868[*(int *)(v965 + 48)];
    uint64_t v313 = v604;
    v605 = &v868[*((int *)v966 + 12)];
    uint64_t v314 = v605;
    v606 = &v868[*((int *)v967 + 12)];
    uint64_t v315 = v606;
    v607 = &v868[*((int *)v968 + 12)];
    uint64_t v316 = v607;
    v887();
    v891(v316, v916, v970);
    v890(v315, v915, v971);
    v888(v314, v914, v972);
    v879(v313, v913, v974);
    v878(v312, v941, v969);
    v884(v311, v940, v980);
    v881(v310, v939, v973);
    v876(v309, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v308, v935, v979);
    uint64_t v317 = v750;
    uint64_t v318 = v985;
    ((void (*)(char *, char *, uint64_t))v909)(v750, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v759, v937, v984);
    v905(v758, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v757, v942, v983);
    v901(v756, v943, v982);
    v899(v755, v944, v977);
    v897(v754, v945, v976);
    v895(v753, v946, v981);
    v893(v752, v933, v975);
    uint64_t v319 = (void (*)(char *, char *, uint64_t))v948[4];
    v556 = v948 + 4;
    v557 = v319;
    v319(v751, v317, v318);
    v744 = &v867[*(int *)(v951 + 48)];
    v745 = &v867[*((int *)v952 + 12)];
    v746 = &v867[*((int *)v953 + 12)];
    v747 = &v867[*((int *)v954 + 12)];
    v748 = &v867[*((int *)v955 + 12)];
    v749 = &v867[*((int *)v956 + 12)];
    v750 = &v867[*((int *)v957 + 12)];
    v742 = &v867[*(int *)(v958 + 48)];
    v751 = &v867[*(int *)(v959 + 48)];
    uint64_t v586 = &v867[*(int *)(v960 + 48)];
    uint64_t v320 = v586;
    uint64_t v587 = &v867[*((int *)v961 + 12)];
    uint64_t v321 = v587;
    uint64_t v588 = &v867[*((int *)v962 + 12)];
    uint64_t v322 = v588;
    uint64_t v589 = &v867[*((int *)v963 + 12)];
    uint64_t v323 = v589;
    uint64_t v590 = &v867[*(int *)(v964 + 48)];
    uint64_t v324 = v590;
    uint64_t v591 = &v867[*(int *)(v965 + 48)];
    uint64_t v325 = v591;
    uint64_t v592 = &v867[*((int *)v966 + 12)];
    uint64_t v326 = v592;
    v593 = &v867[*((int *)v967 + 12)];
    uint64_t v327 = v593;
    v596 = &v867[*((int *)v968 + 12)];
    v328 = v596;
    v887();
    v891(v328, v916, v970);
    v890(v327, v915, v971);
    v888(v326, v914, v972);
    v879(v325, v913, v974);
    v878(v324, v941, v969);
    v884(v323, v940, v980);
    v881(v322, v939, v973);
    v876(v321, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v320, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v751, v936, v985);
    uint64_t v329 = v742;
    uint64_t v330 = v984;
    ((void (*)(char *, char *, uint64_t))v907)(v742, v937, v984);
    v905(v750, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v749, v942, v983);
    v901(v748, v943, v982);
    v899(v747, v944, v977);
    v897(v746, v945, v976);
    v895(v745, v946, v981);
    v893(v744, v933, v975);
    uint64_t v331 = (void (*)(char *, char *, uint64_t))v924[4];
    v548 = v924 + 4;
    v549 = v331;
    v331(v743, v329, v330);
    v736 = &v866[*(int *)(v951 + 48)];
    v737 = &v866[*((int *)v952 + 12)];
    v738 = &v866[*((int *)v953 + 12)];
    v739 = &v866[*((int *)v954 + 12)];
    v740 = &v866[*((int *)v955 + 12)];
    v741 = &v866[*((int *)v956 + 12)];
    v734 = &v866[*((int *)v957 + 12)];
    v742 = &v866[*(int *)(v958 + 48)];
    v743 = &v866[*(int *)(v959 + 48)];
    v573 = &v866[*(int *)(v960 + 48)];
    uint64_t v332 = v573;
    v574 = &v866[*((int *)v961 + 12)];
    uint64_t v333 = v574;
    v575 = &v866[*((int *)v962 + 12)];
    uint64_t v334 = v575;
    v578 = &v866[*((int *)v963 + 12)];
    uint64_t v335 = v578;
    uint64_t v579 = &v866[*(int *)(v964 + 48)];
    uint64_t v336 = v579;
    uint64_t v580 = &v866[*(int *)(v965 + 48)];
    uint64_t v337 = v580;
    uint64_t v581 = &v866[*((int *)v966 + 12)];
    uint64_t v338 = v581;
    uint64_t v582 = &v866[*((int *)v967 + 12)];
    uint64_t v339 = v582;
    uint64_t v583 = &v866[*((int *)v968 + 12)];
    uint64_t v340 = v583;
    v887();
    v891(v340, v916, v970);
    v890(v339, v915, v971);
    v888(v338, v914, v972);
    v879(v337, v913, v974);
    v878(v336, v941, v969);
    v884(v335, v940, v980);
    v881(v334, v939, v973);
    v876(v333, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v332, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v743, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v742, v937, v984);
    uint64_t v341 = v734;
    uint64_t v342 = v978;
    v905(v734, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v741, v942, v983);
    v901(v740, v943, v982);
    v899(v739, v944, v977);
    v897(v738, v945, v976);
    v895(v737, v946, v981);
    v893(v736, v933, v975);
    uint64_t v343 = (void (*)(char *, char *, uint64_t))v923[4];
    v539 = v923 + 4;
    v540 = v343;
    v343(v735, v341, v342);
    v728 = &v865[*(int *)(v951 + 48)];
    v729 = &v865[*((int *)v952 + 12)];
    v730 = &v865[*((int *)v953 + 12)];
    v731 = &v865[*((int *)v954 + 12)];
    v732 = &v865[*((int *)v955 + 12)];
    v726 = &v865[*((int *)v956 + 12)];
    v733 = &v865[*((int *)v957 + 12)];
    v734 = &v865[*(int *)(v958 + 48)];
    v735 = &v865[*(int *)(v959 + 48)];
    v562 = &v865[*(int *)(v960 + 48)];
    uint64_t v344 = v562;
    v563 = &v865[*((int *)v961 + 12)];
    uint64_t v345 = v563;
    v564 = &v865[*((int *)v962 + 12)];
    uint64_t v346 = v564;
    v565 = &v865[*((int *)v963 + 12)];
    uint64_t v347 = v565;
    v566 = &v865[*(int *)(v964 + 48)];
    uint64_t v348 = v566;
    v567 = &v865[*(int *)(v965 + 48)];
    uint64_t v349 = v567;
    v568 = &v865[*((int *)v966 + 12)];
    v350 = v568;
    v569 = &v865[*((int *)v967 + 12)];
    uint64_t v351 = v569;
    v570 = &v865[*((int *)v968 + 12)];
    uint64_t v352 = v570;
    v887();
    v891(v352, v916, v970);
    v890(v351, v915, v971);
    v888(v350, v914, v972);
    v879(v349, v913, v974);
    v878(v348, v941, v969);
    v884(v347, v940, v980);
    v881(v346, v939, v973);
    v876(v345, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v344, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v735, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v734, v937, v984);
    v905(v733, v938, v978);
    uint64_t v353 = v726;
    uint64_t v354 = v983;
    ((void (*)(char *, char *, uint64_t))v903)(v726, v942, v983);
    v901(v732, v943, v982);
    v899(v731, v944, v977);
    v897(v730, v945, v976);
    v895(v729, v946, v981);
    v893(v728, v933, v975);
    uint64_t v355 = (void (*)(uint64_t, char *, uint64_t))v922[4];
    uint64_t v536 = v922 + 4;
    uint64_t v537 = v355;
    v355((uint64_t)v727, v353, v354);
    v720 = &v864[*(int *)(v951 + 48)];
    v721 = &v864[*((int *)v952 + 12)];
    v722 = &v864[*((int *)v953 + 12)];
    v723 = &v864[*((int *)v954 + 12)];
    uint64_t v356 = &v864[*((int *)v955 + 12)];
    v724 = &v864[*((int *)v956 + 12)];
    v725 = &v864[*((int *)v957 + 12)];
    v726 = &v864[*(int *)(v958 + 48)];
    v727 = &v864[*(int *)(v959 + 48)];
    v719 = &v864[*(int *)(v960 + 48)];
    v550 = &v864[*((int *)v961 + 12)];
    uint64_t v357 = v550;
    v551 = &v864[*((int *)v962 + 12)];
    uint64_t v358 = v551;
    v552 = &v864[*((int *)v963 + 12)];
    uint64_t v359 = v552;
    v553 = &v864[*(int *)(v964 + 48)];
    uint64_t v360 = v553;
    v554 = &v864[*(int *)(v965 + 48)];
    uint64_t v361 = v554;
    v555 = &v864[*((int *)v966 + 12)];
    uint64_t v362 = v555;
    v558 = &v864[*((int *)v967 + 12)];
    uint64_t v363 = v558;
    v559 = &v864[*((int *)v968 + 12)];
    uint64_t v364 = v559;
    v887();
    v891(v364, v916, v970);
    v890(v363, v915, v971);
    v888(v362, v914, v972);
    v879(v361, v913, v974);
    v878(v360, v941, v969);
    v884(v359, v940, v980);
    v881(v358, v939, v973);
    v876(v357, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v719, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v727, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v726, v937, v984);
    v905(v725, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v724, v942, v983);
    uint64_t v365 = v982;
    v901(v356, v943, v982);
    v899(v723, v944, v977);
    v897(v722, v945, v976);
    v895(v721, v946, v981);
    v893(v720, v933, v975);
    uint64_t v366 = (void (*)(char *, char *, uint64_t))v921[4];
    uint64_t v526 = v921 + 4;
    uint64_t v527 = v366;
    v366(v718, v356, v365);
    v711 = &v863[*(int *)(v951 + 48)];
    v712 = &v863[*((int *)v952 + 12)];
    v713 = &v863[*((int *)v953 + 12)];
    uint64_t v367 = &v863[*((int *)v954 + 12)];
    v714 = &v863[*((int *)v955 + 12)];
    v715 = &v863[*((int *)v956 + 12)];
    v716 = &v863[*((int *)v957 + 12)];
    v717 = &v863[*(int *)(v958 + 48)];
    v718 = &v863[*(int *)(v959 + 48)];
    v710 = &v863[*(int *)(v960 + 48)];
    v538 = &v863[*((int *)v961 + 12)];
    uint64_t v368 = v538;
    v541 = &v863[*((int *)v962 + 12)];
    uint64_t v369 = v541;
    v542 = &v863[*((int *)v963 + 12)];
    uint64_t v370 = v542;
    v543 = &v863[*(int *)(v964 + 48)];
    uint64_t v371 = v543;
    v544 = &v863[*(int *)(v965 + 48)];
    uint64_t v372 = v544;
    v545 = &v863[*((int *)v966 + 12)];
    uint64_t v373 = v545;
    v546 = &v863[*((int *)v967 + 12)];
    uint64_t v374 = v546;
    v547 = &v863[*((int *)v968 + 12)];
    uint64_t v375 = v547;
    v887();
    v891(v375, v916, v970);
    v890(v374, v915, v971);
    v888(v373, v914, v972);
    v879(v372, v913, v974);
    v878(v371, v941, v969);
    v884(v370, v940, v980);
    v881(v369, v939, v973);
    v876(v368, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v710, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v718, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v717, v937, v984);
    v905(v716, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v715, v942, v983);
    v901(v714, v943, v982);
    uint64_t v376 = v977;
    v899(v367, v944, v977);
    v897(v713, v945, v976);
    v895(v712, v946, v981);
    v893(v711, v933, v975);
    uint64_t v377 = (void (*)(char *, char *, uint64_t))v920[4];
    uint64_t v520 = v920 + 4;
    v521 = v377;
    v377(v709, v367, v376);
    uint64_t v702 = &v862[*(int *)(v951 + 48)];
    uint64_t v703 = &v862[*((int *)v952 + 12)];
    uint64_t v378 = &v862[*((int *)v953 + 12)];
    uint64_t v704 = &v862[*((int *)v954 + 12)];
    uint64_t v705 = &v862[*((int *)v955 + 12)];
    uint64_t v706 = &v862[*((int *)v956 + 12)];
    v707 = &v862[*((int *)v957 + 12)];
    v708 = &v862[*(int *)(v958 + 48)];
    v709 = &v862[*(int *)(v959 + 48)];
    uint64_t v701 = &v862[*(int *)(v960 + 48)];
    uint64_t v528 = &v862[*((int *)v961 + 12)];
    uint64_t v379 = v528;
    uint64_t v529 = &v862[*((int *)v962 + 12)];
    uint64_t v380 = v529;
    uint64_t v530 = &v862[*((int *)v963 + 12)];
    uint64_t v381 = v530;
    uint64_t v531 = &v862[*(int *)(v964 + 48)];
    uint64_t v382 = v531;
    uint64_t v532 = &v862[*(int *)(v965 + 48)];
    uint64_t v383 = v532;
    uint64_t v533 = &v862[*((int *)v966 + 12)];
    uint64_t v384 = v533;
    uint64_t v534 = &v862[*((int *)v967 + 12)];
    v385 = v534;
    uint64_t v535 = &v862[*((int *)v968 + 12)];
    uint64_t v386 = v535;
    v887();
    v891(v386, v916, v970);
    v890(v385, v915, v971);
    v888(v384, v914, v972);
    v879(v383, v913, v974);
    v878(v382, v941, v969);
    v884(v381, v940, v980);
    v881(v380, v939, v973);
    v876(v379, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v701, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v709, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v708, v937, v984);
    v905(v707, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v706, v942, v983);
    v901(v705, v943, v982);
    v899(v704, v944, v977);
    uint64_t v387 = v976;
    v897(v378, v945, v976);
    v895(v703, v946, v981);
    v893(v702, v933, v975);
    uint64_t v388 = (void (*)(char *, char *, uint64_t))v919[4];
    v513[1] = v919 + 4;
    v514 = v388;
    v388(v700, v378, v387);
    uint64_t v693 = &v861[*(int *)(v951 + 48)];
    v513[0] = &v861[*((int *)v952 + 12)];
    uint64_t v694 = &v861[*((int *)v953 + 12)];
    uint64_t v695 = &v861[*((int *)v954 + 12)];
    uint64_t v696 = &v861[*((int *)v955 + 12)];
    uint64_t v697 = &v861[*((int *)v956 + 12)];
    uint64_t v698 = &v861[*((int *)v957 + 12)];
    uint64_t v699 = &v861[*(int *)(v958 + 48)];
    uint64_t v700 = &v861[*(int *)(v959 + 48)];
    v515 = &v861[*(int *)(v960 + 48)];
    uint64_t v389 = v515;
    v516 = &v861[*((int *)v961 + 12)];
    uint64_t v390 = v516;
    v517 = &v861[*((int *)v962 + 12)];
    uint64_t v391 = v517;
    v518 = &v861[*((int *)v963 + 12)];
    uint64_t v392 = v518;
    v519 = &v861[*(int *)(v964 + 48)];
    uint64_t v393 = v519;
    v522 = &v861[*(int *)(v965 + 48)];
    uint64_t v394 = v522;
    v523 = &v861[*((int *)v966 + 12)];
    uint64_t v395 = v523;
    v524 = &v861[*((int *)v967 + 12)];
    uint64_t v396 = v524;
    v525 = &v861[*((int *)v968 + 12)];
    uint64_t v397 = v525;
    v887();
    v891(v397, v916, v970);
    v890(v396, v915, v971);
    uint64_t v398 = v972;
    v888(v395, v914, v972);
    v879(v394, v913, v974);
    v878(v393, v941, v969);
    v884(v392, v940, v980);
    v881(v391, v939, v973);
    v876(v390, v934, v986);
    ((void (*)(char *, char *, uint64_t))v911)(v389, v935, v979);
    ((void (*)(char *, char *, uint64_t))v909)(v700, v936, v985);
    ((void (*)(char *, char *, uint64_t))v907)(v699, v937, v984);
    v905(v698, v938, v978);
    ((void (*)(char *, char *, uint64_t))v903)(v697, v942, v983);
    v901(v696, v943, v982);
    v899(v695, v944, v977);
    v897(v694, v945, v976);
    uint64_t v399 = (char *)v513[0];
    uint64_t v400 = v981;
    v895((char *)v513[0], v946, v981);
    v893(v693, v933, v975);
    v401 = (void (*)(char *, char *, uint64_t))v918[4];
    uint64_t v905 = (void (*)(char *, char *, uint64_t))(v918 + 4);
    uint64_t v906 = v401;
    v401(v640, v399, v400);
    uint64_t v402 = v860;
    uint64_t v907 = &v860[*(int *)(v951 + 48)];
    uint64_t v904 = &v860[*((int *)v952 + 12)];
    v903 = &v860[*((int *)v953 + 12)];
    v954 = &v860[*((int *)v954 + 12)];
    uint64_t v912 = &v860[*((int *)v955 + 12)];
    uint64_t v951 = (uint64_t)&v860[*((int *)v956 + 12)];
    v955 = &v860[*((int *)v957 + 12)];
    v956 = &v860[*(int *)(v958 + 48)];
    v952 = &v860[*(int *)(v959 + 48)];
    v953 = &v860[*(int *)(v960 + 48)];
    v961 = &v860[*((int *)v961 + 12)];
    uint64_t v908 = &v860[*((int *)v962 + 12)];
    uint64_t v403 = v908;
    uint64_t v909 = &v860[*((int *)v963 + 12)];
    uint64_t v404 = v909;
    uint64_t v910 = &v860[*(int *)(v964 + 48)];
    uint64_t v405 = v910;
    uint64_t v911 = &v860[*(int *)(v965 + 48)];
    uint64_t v406 = v911;
    v963 = &v860[*((int *)v966 + 12)];
    uint64_t v407 = v963;
    uint64_t v409 = &v860[*((int *)v968 + 12)];
    v967 = &v860[*((int *)v967 + 12)];
    uint64_t v408 = v967;
    v968 = (void (*)(char *, uint64_t))v409;
    v633(v860, v917, v987);
    v622(v409, v916, v970);
    v616(v408, v915, v971);
    v609(v407, v914, v398);
    v598(v406, v913, v974);
    v595(v405, v941, v969);
    v585(v404, v940, v980);
    v577(v403, v939, v973);
    v572(v961, v934, v986);
    v561(v953, v935, v979);
    v557(v952, v936, v985);
    v549(v956, v937, v984);
    v540(v955, v938, v978);
    v537(v951, v942, v983);
    v527(v912, v943, v982);
    v521(v954, v944, v977);
    uint64_t v410 = v903;
    uint64_t v411 = v976;
    v514(v903, v945, v976);
    uint64_t v412 = v904;
    uint64_t v413 = v981;
    v906(v904, v946, v981);
    uint64_t v414 = (void (*)(char *, char *, uint64_t))v947[4];
    uint64_t v415 = v907;
    uint64_t v416 = v975;
    v414(v907, v933, v975);
    v414(v644, v415, v416);
    uint64_t v964 = v918[1];
    ++v918;
    ((void (*)(char *, uint64_t))v964)(v412, v413);
    uint64_t v417 = (int *)v919[1];
    ++v919;
    v957 = (void (*)(char *, uint64_t))v417;
    ((void (*)(char *, uint64_t))v417)(v410, v411);
    uint64_t v959 = v920[1];
    ++v920;
    uint64_t v418 = v977;
    ((void (*)(char *, uint64_t))v959)(v954, v977);
    v954 = (char *)v921[1];
    ++v921;
    ((void (*)(char *, uint64_t))v954)(v912, v982);
    uint64_t v419 = (void (*)(uint64_t, uint64_t))v922[1];
    ++v922;
    v419(v951, v983);
    uint64_t v420 = (void (*)(char *, uint64_t))v419;
    v946 = (char *)v419;
    uint64_t v958 = v923[1];
    ++v923;
    ((void (*)(char *, uint64_t))v958)(v955, v978);
    v955 = (char *)v924[1];
    ++v924;
    ((void (*)(char *, uint64_t))v955)(v956, v984);
    v956 = (char *)v948[1];
    ++v948;
    ((void (*)(char *, uint64_t))v956)(v952, v985);
    uint64_t v960 = v925[1];
    ++v925;
    uint64_t v421 = v979;
    ((void (*)(char *, uint64_t))v960)(v953, v979);
    uint64_t v422 = (int *)v926[1];
    ++v926;
    v962 = (void (*)(char *, uint64_t))v422;
    ((void (*)(char *, uint64_t))v422)(v961, v986);
    uint64_t v423 = (int *)v927[1];
    ++v927;
    v966 = (void (*)(char *, uint64_t))v423;
    uint64_t v424 = v973;
    ((void (*)(char *, uint64_t))v423)(v908, v973);
    v961 = (char *)v928[1];
    ++v928;
    ((void (*)(char *, uint64_t))v961)(v909, v980);
    v952 = (char *)v929[1];
    ++v929;
    ((void (*)(char *, uint64_t))v952)(v910, v969);
    uint64_t v965 = v930[1];
    ++v930;
    ((void (*)(char *, uint64_t))v965)(v911, v974);
    uint64_t v951 = v931[1];
    ++v931;
    ((void (*)(char *, uint64_t))v951)(v963, v972);
    v953 = (char *)v932[1];
    ++v932;
    ((void (*)(char *, uint64_t))v953)(v967, v971);
    v963 = (char *)v949[1];
    ++v949;
    ((void (*)(void, uint64_t))v963)(v968, v970);
    uint64_t v425 = *(int **)(v950 + 8);
    v950 += 8;
    v968 = (void (*)(char *, uint64_t))v425;
    uint64_t v426 = v987;
    ((void (*)(char *, uint64_t))v425)(v402, v987);
    uint64_t v427 = (char *)v947[1];
    ++v947;
    v967 = v427;
    uint64_t v428 = v975;
    ((void (*)(char *, uint64_t))v427)(v693, v975);
    v957(v694, v976);
    uint64_t v429 = (void (*)(char *, uint64_t))v959;
    ((void (*)(char *, uint64_t))v959)(v695, v418);
    ((void (*)(char *, uint64_t))v954)(v696, v982);
    v420(v697, v983);
    uint64_t v430 = v978;
    ((void (*)(char *, uint64_t))v958)(v698, v978);
    uint64_t v431 = v984;
    ((void (*)(char *, uint64_t))v955)(v699, v984);
    ((void (*)(char *, uint64_t))v956)(v700, v985);
    ((void (*)(char *, uint64_t))v960)(v515, v421);
    uint64_t v432 = v986;
    v962(v516, v986);
    v966(v517, v424);
    ((void (*)(char *, uint64_t))v961)(v518, v980);
    uint64_t v433 = v969;
    ((void (*)(char *, uint64_t))v952)(v519, v969);
    uint64_t v434 = v974;
    ((void (*)(char *, uint64_t))v965)(v522, v974);
    ((void (*)(char *, uint64_t))v951)(v523, v972);
    ((void (*)(char *, uint64_t))v953)(v524, v971);
    ((void (*)(char *, uint64_t))v963)(v525, v970);
    v968(v861, v426);
    ((void (*)(char *, uint64_t))v967)(v702, v428);
    uint64_t v435 = (void (*)(char *, uint64_t))v964;
    ((void (*)(char *, uint64_t))v964)(v703, v981);
    v429(v704, v418);
    ((void (*)(char *, uint64_t))v954)(v705, v982);
    ((void (*)(char *, uint64_t))v946)(v706, v983);
    ((void (*)(char *, uint64_t))v958)(v707, v430);
    uint64_t v436 = v955;
    ((void (*)(char *, uint64_t))v955)(v708, v431);
    uint64_t v437 = v985;
    ((void (*)(char *, uint64_t))v956)(v709, v985);
    ((void (*)(char *, uint64_t))v960)(v701, v979);
    v962(v528, v432);
    v966(v529, v973);
    uint64_t v438 = v980;
    ((void (*)(char *, uint64_t))v961)(v530, v980);
    uint64_t v439 = v952;
    ((void (*)(char *, uint64_t))v952)(v531, v433);
    ((void (*)(char *, uint64_t))v965)(v532, v434);
    ((void (*)(char *, uint64_t))v951)(v533, v972);
    uint64_t v440 = v971;
    ((void (*)(char *, uint64_t))v953)(v534, v971);
    ((void (*)(char *, uint64_t))v963)(v535, v970);
    v968(v862, v987);
    ((void (*)(char *, uint64_t))v967)(v711, v975);
    v435(v712, v981);
    uint64_t v441 = v976;
    v957(v713, v976);
    ((void (*)(char *, uint64_t))v954)(v714, v982);
    uint64_t v442 = v983;
    ((void (*)(char *, uint64_t))v946)(v715, v983);
    ((void (*)(char *, uint64_t))v958)(v716, v978);
    ((void (*)(char *, uint64_t))v436)(v717, v984);
    ((void (*)(char *, uint64_t))v956)(v718, v437);
    uint64_t v443 = v979;
    ((void (*)(char *, uint64_t))v960)(v710, v979);
    v962(v538, v986);
    uint64_t v444 = v973;
    v966(v541, v973);
    ((void (*)(char *, uint64_t))v961)(v542, v438);
    uint64_t v445 = v969;
    ((void (*)(char *, uint64_t))v439)(v543, v969);
    ((void (*)(char *, uint64_t))v965)(v544, v974);
    ((void (*)(char *, uint64_t))v951)(v545, v972);
    ((void (*)(char *, uint64_t))v953)(v546, v440);
    uint64_t v446 = v970;
    v447 = v963;
    ((void (*)(char *, uint64_t))v963)(v547, v970);
    v968(v863, v987);
    uint64_t v448 = v975;
    ((void (*)(char *, uint64_t))v967)(v720, v975);
    ((void (*)(char *, uint64_t))v964)(v721, v981);
    v957(v722, v441);
    ((void (*)(char *, uint64_t))v959)(v723, v977);
    ((void (*)(char *, uint64_t))v946)(v724, v442);
    ((void (*)(char *, uint64_t))v958)(v725, v978);
    ((void (*)(char *, uint64_t))v955)(v726, v984);
    ((void (*)(char *, uint64_t))v956)(v727, v985);
    ((void (*)(char *, uint64_t))v960)(v719, v443);
    v962(v550, v986);
    v966(v551, v444);
    ((void (*)(char *, uint64_t))v961)(v552, v980);
    ((void (*)(char *, uint64_t))v952)(v553, v445);
    ((void (*)(char *, uint64_t))v965)(v554, v974);
    uint64_t v449 = v972;
    uint64_t v450 = (void (*)(char *, uint64_t))v951;
    ((void (*)(char *, uint64_t))v951)(v555, v972);
    uint64_t v451 = v971;
    ((void (*)(char *, uint64_t))v953)(v558, v971);
    ((void (*)(char *, uint64_t))v447)(v559, v446);
    v968(v864, v987);
    ((void (*)(char *, uint64_t))v967)(v728, v448);
    ((void (*)(char *, uint64_t))v964)(v729, v981);
    v957(v730, v976);
    ((void (*)(char *, uint64_t))v959)(v731, v977);
    uint64_t v452 = v982;
    uint64_t v453 = v954;
    ((void (*)(char *, uint64_t))v954)(v732, v982);
    ((void (*)(char *, uint64_t))v958)(v733, v978);
    ((void (*)(char *, uint64_t))v955)(v734, v984);
    ((void (*)(char *, uint64_t))v956)(v735, v985);
    ((void (*)(char *, uint64_t))v960)(v562, v979);
    v962(v563, v986);
    v966(v564, v973);
    uint64_t v454 = v980;
    ((void (*)(char *, uint64_t))v961)(v565, v980);
    ((void (*)(char *, uint64_t))v952)(v566, v969);
    ((void (*)(char *, uint64_t))v965)(v567, v974);
    v450(v568, v449);
    uint64_t v455 = v953;
    ((void (*)(char *, uint64_t))v953)(v569, v451);
    uint64_t v456 = v970;
    ((void (*)(char *, uint64_t))v963)(v570, v970);
    v968(v865, v987);
    ((void (*)(char *, uint64_t))v967)(v736, v975);
    ((void (*)(char *, uint64_t))v964)(v737, v981);
    uint64_t v457 = v957;
    v957(v738, v976);
    ((void (*)(char *, uint64_t))v959)(v739, v977);
    ((void (*)(char *, uint64_t))v453)(v740, v452);
    uint64_t v458 = v946;
    ((void (*)(char *, uint64_t))v946)(v741, v983);
    ((void (*)(char *, uint64_t))v955)(v742, v984);
    uint64_t v459 = v956;
    ((void (*)(char *, uint64_t))v956)(v743, v985);
    ((void (*)(char *, uint64_t))v960)(v573, v979);
    v962(v574, v986);
    v966(v575, v973);
    ((void (*)(char *, uint64_t))v961)(v578, v454);
    uint64_t v460 = v969;
    ((void (*)(char *, uint64_t))v952)(v579, v969);
    ((void (*)(char *, uint64_t))v965)(v580, v974);
    ((void (*)(char *, uint64_t))v951)(v581, v972);
    ((void (*)(char *, uint64_t))v455)(v582, v971);
    ((void (*)(char *, uint64_t))v963)(v583, v456);
    v968(v866, v987);
    ((void (*)(char *, uint64_t))v967)(v744, v975);
    ((void (*)(char *, uint64_t))v964)(v745, v981);
    v457(v746, v976);
    ((void (*)(char *, uint64_t))v959)(v747, v977);
    ((void (*)(char *, uint64_t))v954)(v748, v982);
    ((void (*)(char *, uint64_t))v458)(v749, v983);
    uint64_t v461 = v978;
    v462 = (void (*)(char *, uint64_t))v958;
    ((void (*)(char *, uint64_t))v958)(v750, v978);
    ((void (*)(char *, uint64_t))v459)(v751, v985);
    uint64_t v463 = (void (*)(char *, uint64_t))v960;
    ((void (*)(char *, uint64_t))v960)(v586, v979);
    v962(v587, v986);
    uint64_t v464 = v973;
    v966(v588, v973);
    ((void (*)(char *, uint64_t))v961)(v589, v980);
    ((void (*)(char *, uint64_t))v952)(v590, v460);
    ((void (*)(char *, uint64_t))v965)(v591, v974);
    ((void (*)(char *, uint64_t))v951)(v592, v972);
    ((void (*)(char *, uint64_t))v953)(v593, v971);
    ((void (*)(char *, uint64_t))v963)(v596, v970);
    v968(v867, v987);
    ((void (*)(char *, uint64_t))v967)(v752, v975);
    ((void (*)(char *, uint64_t))v964)(v753, v981);
    v957(v754, v976);
    ((void (*)(char *, uint64_t))v959)(v755, v977);
    ((void (*)(char *, uint64_t))v954)(v756, v982);
    ((void (*)(char *, uint64_t))v946)(v757, v983);
    v462(v758, v461);
    ((void (*)(char *, uint64_t))v955)(v759, v984);
    v463(v599, v979);
    v465 = v962;
    v962(v600, v986);
    uint64_t v466 = v966;
    v966(v601, v464);
    v467 = v961;
    ((void (*)(char *, uint64_t))v961)(v602, v980);
    ((void (*)(char *, uint64_t))v952)(v603, v969);
    ((void (*)(char *, uint64_t))v965)(v604, v974);
    ((void (*)(char *, uint64_t))v951)(v605, v972);
    ((void (*)(char *, uint64_t))v953)(v606, v971);
    ((void (*)(char *, uint64_t))v963)(v607, v970);
    v968(v868, v987);
    ((void (*)(char *, uint64_t))v967)(v760, v975);
    uint64_t v468 = v981;
    ((void (*)(char *, uint64_t))v964)(v761, v981);
    v957(v762, v976);
    ((void (*)(char *, uint64_t))v959)(v763, v977);
    ((void (*)(char *, uint64_t))v954)(v764, v982);
    ((void (*)(char *, uint64_t))v946)(v765, v983);
    ((void (*)(char *, uint64_t))v958)(v766, v978);
    ((void (*)(char *, uint64_t))v955)(v767, v984);
    uint64_t v469 = v985;
    ((void (*)(char *, uint64_t))v956)(v610, v985);
    v465(v611, v986);
    v466(v612, v973);
    ((void (*)(char *, uint64_t))v467)(v613, v980);
    ((void (*)(char *, uint64_t))v952)(v614, v969);
    uint64_t v470 = v974;
    uint64_t v471 = (void (*)(char *, uint64_t))v965;
    ((void (*)(char *, uint64_t))v965)(v617, v974);
    ((void (*)(char *, uint64_t))v951)(v618, v972);
    ((void (*)(char *, uint64_t))v953)(v619, v971);
    ((void (*)(char *, uint64_t))v963)(v620, v970);
    uint64_t v472 = v987;
    v968(v869, v987);
    ((void (*)(char *, uint64_t))v967)(v768, v975);
    ((void (*)(char *, uint64_t))v964)(v769, v468);
    v957(v770, v976);
    v473 = (void (*)(char *, uint64_t))v959;
    ((void (*)(char *, uint64_t))v959)(v771, v977);
    ((void (*)(char *, uint64_t))v954)(v772, v982);
    ((void (*)(char *, uint64_t))v946)(v773, v983);
    ((void (*)(char *, uint64_t))v958)(v774, v978);
    uint64_t v474 = v955;
    ((void (*)(char *, uint64_t))v955)(v859, v984);
    ((void (*)(char *, uint64_t))v956)(v623, v469);
    ((void (*)(char *, uint64_t))v960)(v624, v979);
    v966(v625, v973);
    ((void (*)(char *, uint64_t))v961)(v626, v980);
    ((void (*)(char *, uint64_t))v952)(v627, v969);
    v471(v628, v470);
    ((void (*)(char *, uint64_t))v951)(v629, v972);
    ((void (*)(char *, uint64_t))v953)(v630, v971);
    ((void (*)(char *, uint64_t))v963)(v631, v970);
    uint64_t v475 = v472;
    uint64_t v476 = v968;
    v968(v870, v475);
    uint64_t v477 = v967;
    ((void (*)(char *, uint64_t))v967)(v775, v975);
    ((void (*)(char *, uint64_t))v964)(v776, v981);
    v957(v777, v976);
    v473(v778, v977);
    ((void (*)(char *, uint64_t))v954)(v779, v982);
    ((void (*)(char *, uint64_t))v946)(v780, v983);
    ((void (*)(char *, uint64_t))v958)(v781, v978);
    ((void (*)(char *, uint64_t))v474)(v858, v984);
    ((void (*)(char *, uint64_t))v956)(v634, v985);
    ((void (*)(char *, uint64_t))v960)(v635, v979);
    v962(v636, v986);
    ((void (*)(char *, uint64_t))v961)(v637, v980);
    uint64_t v478 = v952;
    ((void (*)(char *, uint64_t))v952)(v638, v969);
    ((void (*)(char *, uint64_t))v965)(v639, v974);
    ((void (*)(char *, uint64_t))v951)(v641, v972);
    ((void (*)(char *, uint64_t))v953)(v642, v971);
    ((void (*)(char *, uint64_t))v963)(v643, v970);
    v476(v871, v987);
    uint64_t v479 = v975;
    ((void (*)(char *, uint64_t))v477)(v782, v975);
    uint64_t v480 = (void (*)(char *, uint64_t))v964;
    ((void (*)(char *, uint64_t))v964)(v783, v981);
    uint64_t v481 = v976;
    v957(v784, v976);
    uint64_t v482 = v977;
    ((void (*)(char *, uint64_t))v959)(v785, v977);
    ((void (*)(char *, uint64_t))v954)(v786, v982);
    uint64_t v483 = v983;
    ((void (*)(char *, uint64_t))v946)(v787, v983);
    ((void (*)(char *, uint64_t))v958)(v788, v978);
    uint64_t v484 = v984;
    ((void (*)(char *, uint64_t))v955)(v789, v984);
    ((void (*)(char *, uint64_t))v956)(v857, v985);
    ((void (*)(char *, uint64_t))v960)(v645, v979);
    v962(v646, v986);
    v966(v647, v973);
    ((void (*)(char *, uint64_t))v478)(v648, v969);
    ((void (*)(char *, uint64_t))v965)(v649, v974);
    uint64_t v485 = (void (*)(char *, uint64_t))v951;
    ((void (*)(char *, uint64_t))v951)(v650, v972);
    uint64_t v486 = v953;
    ((void (*)(char *, uint64_t))v953)(v651, v971);
    ((void (*)(char *, uint64_t))v963)(v652, v970);
    v968(v872, v987);
    ((void (*)(char *, uint64_t))v967)(v792, v479);
    v480(v793, v981);
    v957(v794, v481);
    ((void (*)(char *, uint64_t))v959)(v795, v482);
    uint64_t v487 = v982;
    uint64_t v488 = v954;
    ((void (*)(char *, uint64_t))v954)(v796, v982);
    ((void (*)(char *, uint64_t))v946)(v797, v483);
    ((void (*)(char *, uint64_t))v958)(v798, v978);
    ((void (*)(char *, uint64_t))v955)(v856, v484);
    ((void (*)(char *, uint64_t))v956)(v790, v985);
    ((void (*)(char *, uint64_t))v960)(v791, v979);
    uint64_t v489 = v986;
    v962(v653, v986);
    v966(v654, v973);
    uint64_t v490 = v980;
    ((void (*)(char *, uint64_t))v961)(v655, v980);
    ((void (*)(char *, uint64_t))v965)(v656, v974);
    v485(v657, v972);
    uint64_t v491 = v971;
    ((void (*)(char *, uint64_t))v486)(v658, v971);
    uint64_t v492 = v970;
    v493 = v963;
    ((void (*)(char *, uint64_t))v963)(v659, v970);
    v968(v799, v987);
    ((void (*)(char *, uint64_t))v967)(v802, v975);
    ((void (*)(char *, uint64_t))v964)(v803, v981);
    v957(v804, v976);
    ((void (*)(char *, uint64_t))v959)(v805, v977);
    ((void (*)(char *, uint64_t))v488)(v806, v487);
    uint64_t v494 = v946;
    ((void (*)(char *, uint64_t))v946)(v807, v983);
    ((void (*)(char *, uint64_t))v958)(v808, v978);
    ((void (*)(char *, uint64_t))v955)(v855, v984);
    v495 = v956;
    ((void (*)(char *, uint64_t))v956)(v800, v985);
    ((void (*)(char *, uint64_t))v960)(v801, v979);
    v962(v660, v489);
    v966(v661, v973);
    uint64_t v496 = v490;
    v497 = v961;
    ((void (*)(char *, uint64_t))v961)(v662, v496);
    ((void (*)(char *, uint64_t))v952)(v663, v969);
    ((void (*)(char *, uint64_t))v951)(v664, v972);
    ((void (*)(char *, uint64_t))v953)(v665, v491);
    ((void (*)(char *, uint64_t))v493)(v666, v492);
    v968(v809, v987);
    ((void (*)(char *, uint64_t))v967)(v812, v975);
    ((void (*)(char *, uint64_t))v964)(v813, v981);
    v498 = v957;
    v957(v814, v976);
    ((void (*)(char *, uint64_t))v959)(v815, v977);
    ((void (*)(char *, uint64_t))v954)(v816, v982);
    ((void (*)(char *, uint64_t))v494)(v817, v983);
    ((void (*)(char *, uint64_t))v958)(v818, v978);
    ((void (*)(char *, uint64_t))v955)(v854, v984);
    ((void (*)(char *, uint64_t))v495)(v810, v985);
    uint64_t v499 = v979;
    ((void (*)(char *, uint64_t))v960)(v811, v979);
    v962(v667, v986);
    uint64_t v500 = v973;
    v966(v668, v973);
    ((void (*)(char *, uint64_t))v497)(v669, v980);
    uint64_t v501 = v969;
    ((void (*)(char *, uint64_t))v952)(v670, v969);
    ((void (*)(char *, uint64_t))v965)(v671, v974);
    ((void (*)(char *, uint64_t))v953)(v672, v971);
    ((void (*)(char *, uint64_t))v963)(v673, v970);
    v968(v819, v987);
    ((void (*)(char *, uint64_t))v967)(v822, v975);
    ((void (*)(char *, uint64_t))v964)(v823, v981);
    v498(v824, v976);
    ((void (*)(char *, uint64_t))v959)(v825, v977);
    ((void (*)(char *, uint64_t))v954)(v826, v982);
    ((void (*)(char *, uint64_t))v946)(v827, v983);
    uint64_t v502 = v978;
    v503 = (void (*)(char *, uint64_t))v958;
    ((void (*)(char *))v958)(v828);
    ((void (*)(char *, uint64_t))v955)(v853, v984);
    ((void (*)(char *, uint64_t))v956)(v820, v985);
    uint64_t v504 = v499;
    v505 = (void (*)(char *, uint64_t))v960;
    ((void (*)(char *, uint64_t))v960)(v821, v504);
    v506 = v962;
    v962(v674, v986);
    v966(v675, v500);
    ((void (*)(char *, uint64_t))v961)(v676, v980);
    uint64_t v507 = v501;
    v508 = v952;
    ((void (*)(char *, uint64_t))v952)(v677, v507);
    ((void (*)(char *, uint64_t))v965)(v678, v974);
    uint64_t v509 = v972;
    ((void (*)(char *, uint64_t))v951)(v679, v972);
    ((void (*)(char *, uint64_t))v963)(v680, v970);
    v968(v874, v987);
    ((void (*)(char *, uint64_t))v967)(v830, v975);
    ((void (*)(char *, uint64_t))v964)(v831, v981);
    v957(v832, v976);
    ((void (*)(char *, uint64_t))v959)(v833, v977);
    ((void (*)(char *, uint64_t))v954)(v834, v982);
    ((void (*)(char *, uint64_t))v946)(v835, v983);
    v503(v836, v502);
    ((void (*)(char *, uint64_t))v955)(v837, v984);
    ((void (*)(char *, uint64_t))v956)(v852, v985);
    v505(v829, v979);
    v506(v681, v986);
    v966(v682, v973);
    ((void (*)(char *, uint64_t))v961)(v683, v980);
    ((void (*)(char *, uint64_t))v508)(v684, v969);
    uint64_t v510 = v974;
    v511 = (void (*)(char *, uint64_t))v965;
    ((void (*)(char *, uint64_t))v965)(v685, v974);
    v512 = (void (*)(char *, uint64_t))v951;
    ((void (*)(char *, uint64_t))v951)(v686, v509);
    ((void (*)(char *, uint64_t))v953)(v687, v971);
    v968(v873, v987);
    ((void (*)(char *, uint64_t))v967)(v842, v975);
    ((void (*)(char *, uint64_t))v964)(v843, v981);
    v957(v844, v976);
    ((void (*)(char *, uint64_t))v959)(v845, v977);
    ((void (*)(char *, uint64_t))v954)(v846, v982);
    ((void (*)(char *, uint64_t))v946)(v847, v983);
    ((void (*)(char *, uint64_t))v958)(v848, v978);
    ((void (*)(char *, uint64_t))v955)(v849, v984);
    ((void (*)(char *, uint64_t))v956)(v850, v985);
    ((void (*)(char *, uint64_t))v960)(v851, v979);
    v962(v838, v986);
    v966(v839, v973);
    ((void (*)(char *, uint64_t))v961)(v840, v980);
    ((void (*)(char *, uint64_t))v952)(v841, v969);
    v511(v688, v510);
    v512(v689, v972);
    ((void (*)(char *, uint64_t))v953)(v690, v971);
    return ((uint64_t (*)(char *, uint64_t))v963)(v691, v970);
  }
  return result;
}

uint64_t sub_25878A5F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, char *a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258780100(a4, &a4[TupleTypeMetadata[12]], &a4[TupleTypeMetadata[16]], &a4[TupleTypeMetadata[20]], &a4[TupleTypeMetadata[24]], &a4[TupleTypeMetadata[28]], &a4[TupleTypeMetadata[32]], &a4[TupleTypeMetadata[36]], &a4[TupleTypeMetadata[40]], &a4[TupleTypeMetadata[44]], &a4[TupleTypeMetadata[48]], &a4[TupleTypeMetadata[52]], &a4[TupleTypeMetadata[56]], &a4[TupleTypeMetadata[60]], &a4[TupleTypeMetadata[64]], &a4[TupleTypeMetadata[68]], &a4[TupleTypeMetadata[72]], &a4[TupleTypeMetadata[76]], &a4[TupleTypeMetadata[80]],
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_19.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_25878A774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, char *a19, char *a20,uint64_t a21,uint64_t a22,void *a23)
{
  uint64_t v24 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  v935 = v25;
  v934 = v26;
  v933 = v27;
  v932 = v28;
  v931 = v29;
  v930 = v30;
  v929 = v31;
  v928 = (char *)v24;
  uint64_t v32 = a23[4];
  uint64_t v1067 = a23[3];
  uint64_t v1053 = v32;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v34 = a23[5];
  v1050 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v1051 = v34;
  uint64_t v35 = swift_getTupleTypeMetadata2();
  uint64_t v36 = a23[6];
  v1049 = (void (*)(char *, uint64_t))v35;
  uint64_t v1052 = v36;
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = a23[7];
  v1048 = (char *)v37;
  uint64_t v1058 = v38;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v40 = a23[8];
  v1047 = (void (*)(char *, uint64_t))v39;
  uint64_t v1057 = v40;
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v42 = a23[9];
  v1046 = (void (*)(char *, uint64_t))v41;
  uint64_t v1056 = v42;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v44 = a23[10];
  v1045 = (char *)v43;
  uint64_t v1055 = v44;
  uint64_t v45 = swift_getTupleTypeMetadata2();
  uint64_t v46 = a23[11];
  v1044 = (void (*)(char *, uint64_t))v45;
  uint64_t v1066 = v46;
  uint64_t v47 = swift_getTupleTypeMetadata2();
  uint64_t v48 = a23[12];
  uint64_t v1043 = v47;
  uint64_t v1065 = v48;
  uint64_t v49 = swift_getTupleTypeMetadata2();
  uint64_t v50 = a23[13];
  uint64_t v1042 = v49;
  uint64_t v1064 = v50;
  uint64_t v51 = swift_getTupleTypeMetadata2();
  uint64_t v52 = a23[14];
  v1041 = (char *)v51;
  uint64_t v1070 = v52;
  uint64_t v53 = swift_getTupleTypeMetadata2();
  uint64_t v54 = a23[15];
  uint64_t v1040 = v53;
  uint64_t v1063 = v54;
  uint64_t v55 = swift_getTupleTypeMetadata2();
  uint64_t v56 = a23[16];
  v1039 = (void (*)(char *, uint64_t))v55;
  uint64_t v1069 = v56;
  uint64_t v57 = swift_getTupleTypeMetadata2();
  uint64_t v58 = a23[17];
  v1038 = (void (*)(char *, uint64_t))v57;
  uint64_t v1062 = v58;
  uint64_t v59 = swift_getTupleTypeMetadata2();
  uint64_t v60 = a23[18];
  v1037 = (void (*)(char *, uint64_t))v59;
  uint64_t v1054 = v60;
  uint64_t v61 = swift_getTupleTypeMetadata2();
  uint64_t v62 = a23[19];
  v1036 = (char *)v61;
  uint64_t v1061 = v62;
  uint64_t v63 = swift_getTupleTypeMetadata2();
  uint64_t v64 = a23[20];
  v1035 = (char *)v63;
  uint64_t v1060 = v64;
  uint64_t v65 = swift_getTupleTypeMetadata2();
  uint64_t v66 = a23[21];
  v1034 = (char *)v65;
  uint64_t v1059 = v66;
  uint64_t v67 = swift_getTupleTypeMetadata2();
  uint64_t v68 = a23[22];
  v1033 = (char *)v67;
  uint64_t v1068 = v68;
  uint64_t v1032 = swift_getTupleTypeMetadata2();
  uint64_t v72 = MEMORY[0x270FA5388](v1032, v69, v70, v71);
  v936 = (char *)&v549 - ((v73 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v77 = MEMORY[0x270FA5388](v72, v74, v75, v76);
  v937 = (char *)&v549 - v78;
  uint64_t v82 = MEMORY[0x270FA5388](v77, v79, v80, v81);
  v938 = (char *)&v549 - v83;
  uint64_t v87 = MEMORY[0x270FA5388](v82, v84, v85, v86);
  v939 = (char *)&v549 - v88;
  uint64_t v92 = MEMORY[0x270FA5388](v87, v89, v90, v91);
  v940 = (char *)&v549 - v93;
  uint64_t v97 = MEMORY[0x270FA5388](v92, v94, v95, v96);
  v941 = (char *)&v549 - v98;
  uint64_t v102 = MEMORY[0x270FA5388](v97, v99, v100, v101);
  v942 = (char *)&v549 - v103;
  uint64_t v107 = MEMORY[0x270FA5388](v102, v104, v105, v106);
  v943 = (char *)&v549 - v108;
  uint64_t v112 = MEMORY[0x270FA5388](v107, v109, v110, v111);
  v944 = (char *)&v549 - v113;
  uint64_t v117 = MEMORY[0x270FA5388](v112, v114, v115, v116);
  v945 = (char *)&v549 - v118;
  uint64_t v122 = MEMORY[0x270FA5388](v117, v119, v120, v121);
  v946 = (char *)&v549 - v123;
  uint64_t v127 = MEMORY[0x270FA5388](v122, v124, v125, v126);
  v947 = (char *)&v549 - v128;
  uint64_t v132 = MEMORY[0x270FA5388](v127, v129, v130, v131);
  v948 = (char *)&v549 - v133;
  uint64_t v137 = MEMORY[0x270FA5388](v132, v134, v135, v136);
  v949 = (char *)&v549 - v138;
  uint64_t v142 = MEMORY[0x270FA5388](v137, v139, v140, v141);
  uint64_t v144 = (char *)&v549 - v143;
  uint64_t v148 = MEMORY[0x270FA5388](v142, v145, v146, v147);
  uint64_t v150 = (char *)&v549 - v149;
  uint64_t v154 = MEMORY[0x270FA5388](v148, v151, v152, v153);
  uint64_t v156 = (char *)&v549 - v155;
  uint64_t v160 = MEMORY[0x270FA5388](v154, v157, v158, v159);
  uint64_t v951 = (char *)&v549 - v161;
  uint64_t v165 = MEMORY[0x270FA5388](v160, v162, v163, v164);
  uint64_t v950 = (char *)&v549 - v166;
  uint64_t v170 = MEMORY[0x270FA5388](v165, v167, v168, v169);
  uint64_t v172 = (char *)&v549 - v171;
  MEMORY[0x270FA5388](v170, v173, v174, v175);
  uint64_t v177 = (char *)&v549 - v176;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a23[23] + 24))(a21, a22, a23[2]);
  if (!v23)
  {
    uint64_t v179 = *((int *)v1047 + 12);
    uint64_t v180 = *((int *)v1046 + 12);
    v1019 = &v177[v180];
    uint64_t v181 = *((int *)v1045 + 12);
    v1020 = &v177[v181];
    uint64_t v182 = *((int *)v1044 + 12);
    v1021 = &v177[v182];
    uint64_t v183 = *(int *)(v1043 + 48);
    v1022 = &v177[v183];
    uint64_t v184 = *(int *)(v1042 + 48);
    v1023 = &v177[v184];
    uint64_t v185 = *((int *)v1041 + 12);
    v1024 = &v177[v185];
    uint64_t v186 = *(int *)(v1040 + 48);
    v1014 = &v177[v186];
    uint64_t v187 = *((int *)v1039 + 12);
    v1015 = &v177[v187];
    uint64_t v188 = *((int *)v1038 + 12);
    v1016 = &v177[v188];
    uint64_t v737 = 0;
    uint64_t v189 = *((int *)v1037 + 12);
    v1017 = &v177[v189];
    uint64_t v190 = *((int *)v1036 + 12);
    v1018 = &v177[v190];
    uint64_t v191 = *((int *)v1035 + 12);
    v1013 = &v177[v191];
    uint64_t v192 = *((int *)v1034 + 12);
    v1025 = &v177[v192];
    uint64_t v193 = *((int *)v1033 + 12);
    v1026 = &v177[v193];
    uint64_t v194 = *(int *)(v1032 + 48);
    v1027 = &v177[v194];
    uint64_t v917 = &v172[v194];
    uint64_t v918 = &v172[v193];
    uint64_t v919 = &v172[v192];
    uint64_t v920 = &v172[v191];
    uint64_t v921 = &v172[v190];
    v922 = &v172[v189];
    v923 = &v172[v188];
    v924 = &v172[v187];
    v925 = &v172[v186];
    v926 = &v172[v185];
    v927 = &v172[v184];
    v880 = v150;
    uint64_t v913 = &v172[v183];
    v891 = v156;
    uint64_t v914 = &v172[v182];
    v869 = v144;
    uint64_t v915 = &v172[v181];
    uint64_t v916 = &v172[v180];
    v195 = v177;
    uint64_t v196 = &v177[v179];
    v996 = &v177[v179];
    uint64_t v197 = &v172[v179];
    v733 = &v172[v179];
    uint64_t v198 = *((int *)v1048 + 12);
    uint64_t v199 = &v177[v198];
    v997 = &v177[v198];
    uint64_t v200 = &v172[v198];
    v734 = &v172[v198];
    uint64_t v201 = *((int *)v1049 + 12);
    uint64_t v202 = &v195[v201];
    v994 = &v195[v201];
    uint64_t v203 = &v172[v201];
    v735 = &v172[v201];
    uint64_t v204 = *((int *)v1050 + 12);
    uint64_t v205 = &v195[v204];
    v995 = &v195[v204];
    v998 = v195;
    uint64_t v206 = &v172[v204];
    v736 = &v172[v204];
    v1031 = *(void **)(v1067 - 8);
    uint64_t v965 = (void (*)(void))v1031[2];
    v963 = v1031 + 2;
    uint64_t v690 = a20;
    v681 = a19;
    v747 = a18;
    v757 = a17;
    v767 = a16;
    uint64_t v777 = a15;
    uint64_t v786 = a14;
    v796 = a13;
    v805 = a12;
    v814 = a11;
    v823 = a10;
    uint64_t v832 = a9;
    ((void (*)(char *, char *, uint64_t))v965)(v172, v195, v1067);
    v993 = *(void **)(v1053 - 8);
    uint64_t v207 = (void (*)(char *, char *, uint64_t))v993[2];
    uint64_t v960 = v993 + 2;
    v961 = v207;
    uint64_t v208 = v206;
    uint64_t v209 = v1053;
    ((void (*)(char *, char *))v207)(v208, v205);
    v992 = *(void **)(v1051 - 8);
    uint64_t v210 = (void (*)(char *, char *, uint64_t))v992[2];
    uint64_t v958 = v992 + 2;
    uint64_t v959 = v210;
    ((void (*)(char *, char *))v210)(v203, v202);
    v1012 = *(void **)(v1052 - 8);
    uint64_t v211 = (void (*)(char *, char *, uint64_t))v1012[2];
    v968 = v1012 + 2;
    uint64_t v969 = v211;
    ((void (*)(char *, char *))v211)(v200, v199);
    v1011 = *(void **)(v1058 - 8);
    uint64_t v212 = (void (*)(char *, char *, uint64_t))v1011[2];
    v966 = v1011 + 2;
    v967 = v212;
    v212(v197, v196, v1058);
    v1010 = *(void **)(v1057 - 8);
    uint64_t v213 = (void (*)(char *, char *, uint64_t))v1010[2];
    v953 = v1010 + 2;
    v956 = v213;
    v213(v916, v1019, v1057);
    v1009 = *(void **)(v1056 - 8);
    v955 = (void (*)(char *, char *, uint64_t))v1009[2];
    v962 = v1009 + 2;
    v955(v915, v1020, v1056);
    v1008 = *(void **)(v1055 - 8);
    uint64_t v214 = (void (*)(char *, char *, uint64_t))v1008[2];
    v954 = v1008 + 2;
    v957 = v214;
    v214(v914, v1021, v1055);
    v1007 = *(void **)(v1066 - 8);
    uint64_t v215 = (char *)v1007[2];
    v990 = (char *)(v1007 + 2);
    v991 = v215;
    ((void (*)(char *, char *, uint64_t))v215)(v913, v1022, v1066);
    v1030 = *(void **)(v1065 - 8);
    v216 = (char *)v1030[2];
    v988 = (char *)(v1030 + 2);
    v989 = v216;
    ((void (*)(char *, char *, uint64_t))v216)(v927, v1023, v1065);
    v1029 = *(void **)(v1064 - 8);
    v952 = (void (*)(char *, char *, uint64_t))v1029[2];
    uint64_t v987 = (char *)(v1029 + 2);
    v952(v926, v1024, v1064);
    v1006 = *(void **)(v1070 - 8);
    uint64_t v217 = (char *)v1006[2];
    uint64_t v985 = (char *)(v1006 + 2);
    uint64_t v986 = v217;
    ((void (*)(char *, char *, uint64_t))v217)(v925, v1014, v1070);
    v1005 = *(void **)(v1063 - 8);
    uint64_t v218 = (char *)v1005[2];
    uint64_t v983 = (char *)(v1005 + 2);
    uint64_t v984 = v218;
    ((void (*)(char *, char *, uint64_t))v218)(v924, v1015, v1063);
    v1004 = *(void **)(v1069 - 8);
    uint64_t v219 = (char *)v1004[2];
    uint64_t v981 = (void (*)(char *, char *, uint64_t))(v1004 + 2);
    uint64_t v982 = v219;
    ((void (*)(char *, char *, uint64_t))v219)(v923, v1016, v1069);
    v1003 = *(void **)(v1062 - 8);
    v220 = (void (*)(char *, char *, uint64_t))v1003[2];
    uint64_t v979 = (char *)(v1003 + 2);
    uint64_t v980 = v220;
    v220(v922, v1017, v1062);
    v1002 = *(void **)(v1054 - 8);
    uint64_t v221 = (void (*)(char *, char *, uint64_t))v1002[2];
    uint64_t v977 = v1002 + 2;
    uint64_t v978 = v221;
    v221(v921, v1018, v1054);
    v1001 = *(void **)(v1061 - 8);
    uint64_t v222 = (void (*)(char *, char *, uint64_t))v1001[2];
    uint64_t v975 = v1001 + 2;
    uint64_t v976 = v222;
    v222(v920, v1013, v1061);
    v1000 = *(void **)(v1060 - 8);
    uint64_t v223 = (void (*)(char *, char *, uint64_t))v1000[2];
    uint64_t v973 = v1000 + 2;
    uint64_t v974 = v223;
    v223(v919, v1025, v1060);
    v999 = *(void **)(v1059 - 8);
    uint64_t v224 = (void (*)(char *, char *, uint64_t))v999[2];
    uint64_t v971 = v999 + 2;
    uint64_t v972 = v224;
    v224(v918, v1026, v1059);
    v1028 = *(void **)(v1068 - 8);
    uint64_t v964 = (void (*)(char *, char *, uint64_t))v1028[2];
    uint64_t v970 = v1028 + 2;
    v964(v917, v1027, v1068);
    uint64_t v225 = (void (*)(char *, char *, uint64_t))v1031[4];
    v671 = v1031 + 4;
    v672 = v225;
    v225(v928, v172, v1067);
    v903 = &v950[*(int *)(v1032 + 48)];
    uint64_t v904 = &v950[*((int *)v1033 + 12)];
    uint64_t v905 = &v950[*((int *)v1034 + 12)];
    uint64_t v906 = &v950[*((int *)v1035 + 12)];
    uint64_t v907 = &v950[*((int *)v1036 + 12)];
    uint64_t v908 = &v950[*((int *)v1037 + 12)];
    uint64_t v909 = &v950[*((int *)v1038 + 12)];
    uint64_t v910 = &v950[*((int *)v1039 + 12)];
    uint64_t v911 = &v950[*(int *)(v1040 + 48)];
    uint64_t v912 = &v950[*((int *)v1041 + 12)];
    v928 = &v950[*(int *)(v1042 + 48)];
    v902 = &v950[*(int *)(v1043 + 48)];
    v727 = &v950[*((int *)v1044 + 12)];
    uint64_t v226 = v727;
    v728 = &v950[*((int *)v1045 + 12)];
    uint64_t v227 = v728;
    v729 = &v950[*((int *)v1046 + 12)];
    uint64_t v228 = v729;
    v730 = &v950[*((int *)v1047 + 12)];
    uint64_t v229 = v730;
    v731 = &v950[*((int *)v1048 + 12)];
    uint64_t v230 = v731;
    v732 = &v950[*((int *)v1049 + 12)];
    uint64_t v231 = v732;
    uint64_t v232 = &v950[*((int *)v1050 + 12)];
    v965();
    v961(v232, v995, v209);
    v959(v231, v994, v1051);
    v969(v230, v997, v1052);
    v967(v229, v996, v1058);
    v956(v228, v1019, v1057);
    v955(v227, v1020, v1056);
    v957(v226, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v902, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v928, v1023, v1065);
    v952(v912, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v911, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v910, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v909, v1016, v1069);
    v980(v908, v1017, v1062);
    v978(v907, v1018, v1054);
    v976(v906, v1013, v1061);
    v974(v905, v1025, v1060);
    v972(v904, v1026, v1059);
    v964(v903, v1027, v1068);
    uint64_t v233 = (void (*)(char *, char *, uint64_t))v993[4];
    v668 = v993 + 4;
    v669 = v233;
    uint64_t v234 = v209;
    v233(v929, v232, v209);
    v894 = &v951[*(int *)(v1032 + 48)];
    v895 = &v951[*((int *)v1033 + 12)];
    v896 = &v951[*((int *)v1034 + 12)];
    v897 = &v951[*((int *)v1035 + 12)];
    uint64_t v898 = &v951[*((int *)v1036 + 12)];
    v899 = &v951[*((int *)v1037 + 12)];
    v900 = &v951[*((int *)v1038 + 12)];
    v901 = &v951[*((int *)v1039 + 12)];
    v929 = &v951[*(int *)(v1040 + 48)];
    v892 = &v951[*((int *)v1041 + 12)];
    v893 = &v951[*(int *)(v1042 + 48)];
    v720 = &v951[*(int *)(v1043 + 48)];
    uint64_t v235 = v720;
    v721 = &v951[*((int *)v1044 + 12)];
    uint64_t v236 = v721;
    v722 = &v951[*((int *)v1045 + 12)];
    uint64_t v237 = v722;
    v723 = &v951[*((int *)v1046 + 12)];
    uint64_t v238 = v723;
    v724 = &v951[*((int *)v1047 + 12)];
    uint64_t v239 = v724;
    v725 = &v951[*((int *)v1048 + 12)];
    uint64_t v240 = v725;
    uint64_t v241 = &v951[*((int *)v1049 + 12)];
    v726 = &v951[*((int *)v1050 + 12)];
    uint64_t v242 = v726;
    v965();
    v961(v242, v995, v234);
    uint64_t v243 = v1051;
    v959(v241, v994, v1051);
    v969(v240, v997, v1052);
    v967(v239, v996, v1058);
    v956(v238, v1019, v1057);
    v955(v237, v1020, v1056);
    v957(v236, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v235, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v893, v1023, v1065);
    v952(v892, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v929, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v901, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v900, v1016, v1069);
    v980(v899, v1017, v1062);
    v978(v898, v1018, v1054);
    v976(v897, v1013, v1061);
    v974(v896, v1025, v1060);
    v972(v895, v1026, v1059);
    v964(v894, v1027, v1068);
    uint64_t v244 = (void (*)(char *, char *, uint64_t))v992[4];
    v657 = v992 + 4;
    v658 = v244;
    v244(v930, v241, v243);
    v883 = &v891[*(int *)(v1032 + 48)];
    v884 = &v891[*((int *)v1033 + 12)];
    uint64_t v885 = &v891[*((int *)v1034 + 12)];
    v886 = &v891[*((int *)v1035 + 12)];
    uint64_t v887 = &v891[*((int *)v1036 + 12)];
    v888 = &v891[*((int *)v1037 + 12)];
    v889 = &v891[*((int *)v1038 + 12)];
    v890 = &v891[*((int *)v1039 + 12)];
    v930 = &v891[*(int *)(v1040 + 48)];
    v881 = &v891[*((int *)v1041 + 12)];
    v882 = &v891[*(int *)(v1042 + 48)];
    v713 = &v891[*(int *)(v1043 + 48)];
    uint64_t v245 = v713;
    v714 = &v891[*((int *)v1044 + 12)];
    uint64_t v246 = v714;
    v715 = &v891[*((int *)v1045 + 12)];
    uint64_t v247 = v715;
    v716 = &v891[*((int *)v1046 + 12)];
    uint64_t v248 = v716;
    v717 = &v891[*((int *)v1047 + 12)];
    uint64_t v249 = v717;
    uint64_t v250 = &v891[*((int *)v1048 + 12)];
    v718 = &v891[*((int *)v1049 + 12)];
    uint64_t v251 = v718;
    v719 = &v891[*((int *)v1050 + 12)];
    uint64_t v252 = v719;
    v965();
    v961(v252, v995, v1053);
    v959(v251, v994, v243);
    uint64_t v253 = v1052;
    v969(v250, v997, v1052);
    v967(v249, v996, v1058);
    v956(v248, v1019, v1057);
    v955(v247, v1020, v1056);
    v957(v246, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v245, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v882, v1023, v1065);
    v952(v881, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v930, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v890, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v889, v1016, v1069);
    v980(v888, v1017, v1062);
    v978(v887, v1018, v1054);
    v976(v886, v1013, v1061);
    v974(v885, v1025, v1060);
    v972(v884, v1026, v1059);
    v964(v883, v1027, v1068);
    uint64_t v254 = (void (*)(char *, char *, uint64_t))v1012[4];
    uint64_t v650 = v1012 + 4;
    uint64_t v651 = v254;
    v254(v931, v250, v253);
    v872 = &v880[*(int *)(v1032 + 48)];
    v873 = &v880[*((int *)v1033 + 12)];
    v874 = &v880[*((int *)v1034 + 12)];
    v875 = &v880[*((int *)v1035 + 12)];
    v876 = &v880[*((int *)v1036 + 12)];
    v877 = &v880[*((int *)v1037 + 12)];
    v878 = &v880[*((int *)v1038 + 12)];
    v879 = &v880[*((int *)v1039 + 12)];
    v931 = &v880[*(int *)(v1040 + 48)];
    v870 = &v880[*((int *)v1041 + 12)];
    v871 = &v880[*(int *)(v1042 + 48)];
    uint64_t v706 = &v880[*(int *)(v1043 + 48)];
    uint64_t v255 = v706;
    v707 = &v880[*((int *)v1044 + 12)];
    uint64_t v256 = v707;
    v708 = &v880[*((int *)v1045 + 12)];
    uint64_t v257 = v708;
    v709 = &v880[*((int *)v1046 + 12)];
    uint64_t v258 = v709;
    uint64_t v259 = &v880[*((int *)v1047 + 12)];
    v710 = &v880[*((int *)v1048 + 12)];
    uint64_t v260 = v710;
    v711 = &v880[*((int *)v1049 + 12)];
    uint64_t v261 = v711;
    v712 = &v880[*((int *)v1050 + 12)];
    uint64_t v262 = v712;
    v965();
    v961(v262, v995, v1053);
    v959(v261, v994, v1051);
    v969(v260, v997, v253);
    uint64_t v263 = v1058;
    v967(v259, v996, v1058);
    v956(v258, v1019, v1057);
    v955(v257, v1020, v1056);
    v957(v256, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v255, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v871, v1023, v1065);
    v952(v870, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v931, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v879, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v878, v1016, v1069);
    v980(v877, v1017, v1062);
    v978(v876, v1018, v1054);
    v976(v875, v1013, v1061);
    v974(v874, v1025, v1060);
    v972(v873, v1026, v1059);
    v964(v872, v1027, v1068);
    uint64_t v264 = (void (*)(char *, char *, uint64_t))v1011[4];
    uint64_t v644 = v1011 + 4;
    uint64_t v645 = v264;
    uint64_t v265 = v259;
    uint64_t v266 = v263;
    v264(v932, v265, v263);
    v861 = &v869[*(int *)(v1032 + 48)];
    v862 = &v869[*((int *)v1033 + 12)];
    v863 = &v869[*((int *)v1034 + 12)];
    v864 = &v869[*((int *)v1035 + 12)];
    v865 = &v869[*((int *)v1036 + 12)];
    v866 = &v869[*((int *)v1037 + 12)];
    v867 = &v869[*((int *)v1038 + 12)];
    v868 = &v869[*((int *)v1039 + 12)];
    v932 = &v869[*(int *)(v1040 + 48)];
    v859 = &v869[*((int *)v1041 + 12)];
    v860 = &v869[*(int *)(v1042 + 48)];
    uint64_t v699 = &v869[*(int *)(v1043 + 48)];
    uint64_t v267 = v699;
    uint64_t v700 = &v869[*((int *)v1044 + 12)];
    uint64_t v268 = v700;
    uint64_t v701 = &v869[*((int *)v1045 + 12)];
    uint64_t v269 = v701;
    uint64_t v270 = &v869[*((int *)v1046 + 12)];
    uint64_t v702 = &v869[*((int *)v1047 + 12)];
    uint64_t v271 = v702;
    uint64_t v703 = &v869[*((int *)v1048 + 12)];
    uint64_t v272 = v703;
    uint64_t v704 = &v869[*((int *)v1049 + 12)];
    uint64_t v273 = v704;
    uint64_t v705 = &v869[*((int *)v1050 + 12)];
    uint64_t v274 = v705;
    v965();
    v961(v274, v995, v1053);
    v959(v273, v994, v1051);
    v969(v272, v997, v1052);
    v967(v271, v996, v266);
    uint64_t v275 = v1057;
    v956(v270, v1019, v1057);
    v955(v269, v1020, v1056);
    v957(v268, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v267, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v860, v1023, v1065);
    v952(v859, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v932, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v868, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v867, v1016, v1069);
    v980(v866, v1017, v1062);
    v978(v865, v1018, v1054);
    v976(v864, v1013, v1061);
    v974(v863, v1025, v1060);
    v972(v862, v1026, v1059);
    v964(v861, v1027, v1068);
    v276 = (void (*)(char *, char *, uint64_t))v1010[4];
    v633 = v1010 + 4;
    uint64_t v634 = v276;
    v276(v933, v270, v275);
    uint64_t v850 = &v949[*(int *)(v1032 + 48)];
    uint64_t v851 = &v949[*((int *)v1033 + 12)];
    v852 = &v949[*((int *)v1034 + 12)];
    v853 = &v949[*((int *)v1035 + 12)];
    v854 = &v949[*((int *)v1036 + 12)];
    v855 = &v949[*((int *)v1037 + 12)];
    v856 = &v949[*((int *)v1038 + 12)];
    v857 = &v949[*((int *)v1039 + 12)];
    v858 = &v949[*(int *)(v1040 + 48)];
    v933 = &v949[*((int *)v1041 + 12)];
    uint64_t v691 = &v949[*(int *)(v1042 + 48)];
    uint64_t v277 = v691;
    uint64_t v692 = &v949[*(int *)(v1043 + 48)];
    uint64_t v278 = v692;
    uint64_t v693 = &v949[*((int *)v1044 + 12)];
    uint64_t v279 = v693;
    uint64_t v849 = &v949[*((int *)v1045 + 12)];
    uint64_t v694 = &v949[*((int *)v1046 + 12)];
    uint64_t v280 = v694;
    uint64_t v695 = &v949[*((int *)v1047 + 12)];
    uint64_t v281 = v695;
    uint64_t v696 = &v949[*((int *)v1048 + 12)];
    uint64_t v282 = v696;
    uint64_t v697 = &v949[*((int *)v1049 + 12)];
    uint64_t v283 = v697;
    uint64_t v698 = &v949[*((int *)v1050 + 12)];
    uint64_t v284 = v698;
    v965();
    v961(v284, v995, v1053);
    v959(v283, v994, v1051);
    v969(v282, v997, v1052);
    v967(v281, v996, v1058);
    v956(v280, v1019, v275);
    uint64_t v285 = v849;
    uint64_t v286 = v1056;
    v955(v849, v1020, v1056);
    v957(v279, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v278, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v277, v1023, v1065);
    v952(v933, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v858, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v857, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v856, v1016, v1069);
    v980(v855, v1017, v1062);
    v978(v854, v1018, v1054);
    v976(v853, v1013, v1061);
    v974(v852, v1025, v1060);
    v972(v851, v1026, v1059);
    v964(v850, v1027, v1068);
    uint64_t v287 = (void (*)(char *, char *, uint64_t))v1009[4];
    v630 = v1009 + 4;
    uint64_t v631 = v287;
    v287(v934, v285, v286);
    uint64_t v841 = &v948[*(int *)(v1032 + 48)];
    uint64_t v842 = &v948[*((int *)v1033 + 12)];
    uint64_t v843 = &v948[*((int *)v1034 + 12)];
    uint64_t v844 = &v948[*((int *)v1035 + 12)];
    uint64_t v845 = &v948[*((int *)v1036 + 12)];
    uint64_t v846 = &v948[*((int *)v1037 + 12)];
    uint64_t v847 = &v948[*((int *)v1038 + 12)];
    uint64_t v848 = &v948[*((int *)v1039 + 12)];
    uint64_t v849 = &v948[*(int *)(v1040 + 48)];
    v934 = &v948[*((int *)v1041 + 12)];
    v682 = &v948[*(int *)(v1042 + 48)];
    uint64_t v288 = v682;
    uint64_t v683 = &v948[*(int *)(v1043 + 48)];
    uint64_t v289 = v683;
    uint64_t v840 = &v948[*((int *)v1044 + 12)];
    v684 = &v948[*((int *)v1045 + 12)];
    uint64_t v290 = v684;
    v685 = &v948[*((int *)v1046 + 12)];
    uint64_t v291 = v685;
    v686 = &v948[*((int *)v1047 + 12)];
    uint64_t v292 = v686;
    uint64_t v687 = &v948[*((int *)v1048 + 12)];
    uint64_t v293 = v687;
    uint64_t v688 = &v948[*((int *)v1049 + 12)];
    uint64_t v294 = v688;
    v689 = &v948[*((int *)v1050 + 12)];
    uint64_t v295 = v689;
    v965();
    v961(v295, v995, v1053);
    v959(v294, v994, v1051);
    v969(v293, v997, v1052);
    v967(v292, v996, v1058);
    v956(v291, v1019, v1057);
    v955(v290, v1020, v286);
    uint64_t v296 = v840;
    uint64_t v297 = v1055;
    v957(v840, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v289, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v288, v1023, v1065);
    v952(v934, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v849, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v848, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v847, v1016, v1069);
    v980(v846, v1017, v1062);
    v978(v845, v1018, v1054);
    v976(v844, v1013, v1061);
    v974(v843, v1025, v1060);
    v972(v842, v1026, v1059);
    v964(v841, v1027, v1068);
    uint64_t v298 = (void (*)(char *, char *, uint64_t))v1008[4];
    v620 = v1008 + 4;
    v621 = v298;
    v298(v935, v296, v297);
    v833 = &v947[*(int *)(v1032 + 48)];
    v834 = &v947[*((int *)v1033 + 12)];
    uint64_t v835 = &v947[*((int *)v1034 + 12)];
    uint64_t v836 = &v947[*((int *)v1035 + 12)];
    uint64_t v837 = &v947[*((int *)v1036 + 12)];
    uint64_t v838 = &v947[*((int *)v1037 + 12)];
    uint64_t v839 = &v947[*((int *)v1038 + 12)];
    uint64_t v840 = &v947[*((int *)v1039 + 12)];
    v935 = &v947[*(int *)(v1040 + 48)];
    v670 = &v947[*((int *)v1041 + 12)];
    uint64_t v299 = v670;
    v673 = &v947[*(int *)(v1042 + 48)];
    v300 = v673;
    v831 = &v947[*(int *)(v1043 + 48)];
    v674 = &v947[*((int *)v1044 + 12)];
    uint64_t v301 = v674;
    v675 = &v947[*((int *)v1045 + 12)];
    uint64_t v302 = v675;
    v676 = &v947[*((int *)v1046 + 12)];
    v303 = v676;
    v677 = &v947[*((int *)v1047 + 12)];
    uint64_t v304 = v677;
    uint64_t v678 = &v947[*((int *)v1048 + 12)];
    uint64_t v305 = v678;
    v679 = &v947[*((int *)v1049 + 12)];
    uint64_t v306 = v679;
    v680 = &v947[*((int *)v1050 + 12)];
    uint64_t v307 = v680;
    v965();
    v961(v307, v995, v1053);
    v959(v306, v994, v1051);
    v969(v305, v997, v1052);
    v967(v304, v996, v1058);
    v956(v303, v1019, v1057);
    v955(v302, v1020, v1056);
    v957(v301, v1021, v1055);
    uint64_t v308 = v831;
    uint64_t v309 = v1066;
    ((void (*)(char *, char *, uint64_t))v991)(v831, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v300, v1023, v1065);
    v952(v299, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v935, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v840, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v839, v1016, v1069);
    v980(v838, v1017, v1062);
    v978(v837, v1018, v1054);
    v976(v836, v1013, v1061);
    v974(v835, v1025, v1060);
    v972(v834, v1026, v1059);
    v964(v833, v1027, v1068);
    uint64_t v310 = (void (*)(char *, char *, uint64_t))v1007[4];
    v612 = v1007 + 4;
    v613 = v310;
    v310(v832, v308, v309);
    uint64_t v824 = &v946[*(int *)(v1032 + 48)];
    v825 = &v946[*((int *)v1033 + 12)];
    v826 = &v946[*((int *)v1034 + 12)];
    v827 = &v946[*((int *)v1035 + 12)];
    v828 = &v946[*((int *)v1036 + 12)];
    v829 = &v946[*((int *)v1037 + 12)];
    v830 = &v946[*((int *)v1038 + 12)];
    v831 = &v946[*((int *)v1039 + 12)];
    uint64_t v832 = &v946[*(int *)(v1040 + 48)];
    v659 = &v946[*((int *)v1041 + 12)];
    uint64_t v311 = v659;
    v822 = &v946[*(int *)(v1042 + 48)];
    v660 = &v946[*(int *)(v1043 + 48)];
    uint64_t v312 = v660;
    v661 = &v946[*((int *)v1044 + 12)];
    uint64_t v313 = v661;
    v662 = &v946[*((int *)v1045 + 12)];
    uint64_t v314 = v662;
    v663 = &v946[*((int *)v1046 + 12)];
    uint64_t v315 = v663;
    v664 = &v946[*((int *)v1047 + 12)];
    uint64_t v316 = v664;
    v665 = &v946[*((int *)v1048 + 12)];
    uint64_t v317 = v665;
    v666 = &v946[*((int *)v1049 + 12)];
    uint64_t v318 = v666;
    v667 = &v946[*((int *)v1050 + 12)];
    uint64_t v319 = v667;
    v965();
    v961(v319, v995, v1053);
    v959(v318, v994, v1051);
    v969(v317, v997, v1052);
    v967(v316, v996, v1058);
    v956(v315, v1019, v1057);
    v955(v314, v1020, v1056);
    v957(v313, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v312, v1022, v1066);
    uint64_t v320 = v822;
    uint64_t v321 = v1065;
    ((void (*)(char *, char *, uint64_t))v989)(v822, v1023, v1065);
    v952(v311, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v832, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v831, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v830, v1016, v1069);
    v980(v829, v1017, v1062);
    v978(v828, v1018, v1054);
    v976(v827, v1013, v1061);
    v974(v826, v1025, v1060);
    v972(v825, v1026, v1059);
    v964(v824, v1027, v1068);
    uint64_t v322 = (void (*)(char *, char *, uint64_t))v1030[4];
    v608 = v1030 + 4;
    v609 = v322;
    v322(v823, v320, v321);
    v815 = &v945[*(int *)(v1032 + 48)];
    v816 = &v945[*((int *)v1033 + 12)];
    v817 = &v945[*((int *)v1034 + 12)];
    v818 = &v945[*((int *)v1035 + 12)];
    uint64_t v819 = &v945[*((int *)v1036 + 12)];
    v820 = &v945[*((int *)v1037 + 12)];
    v821 = &v945[*((int *)v1038 + 12)];
    v822 = &v945[*((int *)v1039 + 12)];
    v823 = &v945[*(int *)(v1040 + 48)];
    v813 = &v945[*((int *)v1041 + 12)];
    uint64_t v646 = &v945[*(int *)(v1042 + 48)];
    uint64_t v323 = v646;
    uint64_t v647 = &v945[*(int *)(v1043 + 48)];
    uint64_t v324 = v647;
    uint64_t v648 = &v945[*((int *)v1044 + 12)];
    uint64_t v325 = v648;
    uint64_t v649 = &v945[*((int *)v1045 + 12)];
    uint64_t v326 = v649;
    v652 = &v945[*((int *)v1046 + 12)];
    uint64_t v327 = v652;
    v653 = &v945[*((int *)v1047 + 12)];
    v328 = v653;
    v654 = &v945[*((int *)v1048 + 12)];
    uint64_t v329 = v654;
    v655 = &v945[*((int *)v1049 + 12)];
    uint64_t v330 = v655;
    uint64_t v656 = &v945[*((int *)v1050 + 12)];
    uint64_t v331 = v656;
    v965();
    v961(v331, v995, v1053);
    v959(v330, v994, v1051);
    v969(v329, v997, v1052);
    v967(v328, v996, v1058);
    v956(v327, v1019, v1057);
    v955(v326, v1020, v1056);
    v957(v325, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v324, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v323, v1023, v1065);
    uint64_t v332 = v813;
    uint64_t v333 = v1064;
    v952(v813, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v823, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v822, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v821, v1016, v1069);
    v980(v820, v1017, v1062);
    v978(v819, v1018, v1054);
    v976(v818, v1013, v1061);
    v974(v817, v1025, v1060);
    v972(v816, v1026, v1059);
    v964(v815, v1027, v1068);
    uint64_t v334 = (void (*)(char *, char *, uint64_t))v1029[4];
    v597 = v1029 + 4;
    v598 = v334;
    v334(v814, v332, v333);
    v806 = &v944[*(int *)(v1032 + 48)];
    v807 = &v944[*((int *)v1033 + 12)];
    v808 = &v944[*((int *)v1034 + 12)];
    v809 = &v944[*((int *)v1035 + 12)];
    v810 = &v944[*((int *)v1036 + 12)];
    v811 = &v944[*((int *)v1037 + 12)];
    v812 = &v944[*((int *)v1038 + 12)];
    v813 = &v944[*((int *)v1039 + 12)];
    v804 = &v944[*(int *)(v1040 + 48)];
    v814 = &v944[*((int *)v1041 + 12)];
    v635 = &v944[*(int *)(v1042 + 48)];
    uint64_t v335 = v635;
    v636 = &v944[*(int *)(v1043 + 48)];
    uint64_t v336 = v636;
    uint64_t v637 = &v944[*((int *)v1044 + 12)];
    uint64_t v337 = v637;
    uint64_t v638 = &v944[*((int *)v1045 + 12)];
    uint64_t v338 = v638;
    uint64_t v639 = &v944[*((int *)v1046 + 12)];
    uint64_t v339 = v639;
    uint64_t v640 = &v944[*((int *)v1047 + 12)];
    uint64_t v340 = v640;
    uint64_t v641 = &v944[*((int *)v1048 + 12)];
    uint64_t v341 = v641;
    uint64_t v642 = &v944[*((int *)v1049 + 12)];
    uint64_t v342 = v642;
    uint64_t v643 = &v944[*((int *)v1050 + 12)];
    uint64_t v343 = v643;
    v965();
    v961(v343, v995, v1053);
    v959(v342, v994, v1051);
    v969(v341, v997, v1052);
    v967(v340, v996, v1058);
    v956(v339, v1019, v1057);
    v955(v338, v1020, v1056);
    v957(v337, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v336, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v335, v1023, v1065);
    v952(v814, v1024, v1064);
    uint64_t v344 = v804;
    uint64_t v345 = v1070;
    ((void (*)(char *, char *, uint64_t))v986)(v804, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v813, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v812, v1016, v1069);
    v980(v811, v1017, v1062);
    v978(v810, v1018, v1054);
    v976(v809, v1013, v1061);
    v974(v808, v1025, v1060);
    v972(v807, v1026, v1059);
    v964(v806, v1027, v1068);
    uint64_t v346 = (void (*)(char *, char *, uint64_t))v1006[4];
    v593 = v1006 + 4;
    v594 = v346;
    v346(v805, v344, v345);
    v797 = &v943[*(int *)(v1032 + 48)];
    v798 = &v943[*((int *)v1033 + 12)];
    v799 = &v943[*((int *)v1034 + 12)];
    v800 = &v943[*((int *)v1035 + 12)];
    v801 = &v943[*((int *)v1036 + 12)];
    v802 = &v943[*((int *)v1037 + 12)];
    v803 = &v943[*((int *)v1038 + 12)];
    v795 = &v943[*((int *)v1039 + 12)];
    v804 = &v943[*(int *)(v1040 + 48)];
    v805 = &v943[*((int *)v1041 + 12)];
    v622 = &v943[*(int *)(v1042 + 48)];
    uint64_t v347 = v622;
    v623 = &v943[*(int *)(v1043 + 48)];
    uint64_t v348 = v623;
    v624 = &v943[*((int *)v1044 + 12)];
    uint64_t v349 = v624;
    v625 = &v943[*((int *)v1045 + 12)];
    v350 = v625;
    v626 = &v943[*((int *)v1046 + 12)];
    uint64_t v351 = v626;
    v627 = &v943[*((int *)v1047 + 12)];
    uint64_t v352 = v627;
    v628 = &v943[*((int *)v1048 + 12)];
    uint64_t v353 = v628;
    v629 = &v943[*((int *)v1049 + 12)];
    uint64_t v354 = v629;
    uint64_t v632 = &v943[*((int *)v1050 + 12)];
    uint64_t v355 = v632;
    v965();
    v961(v355, v995, v1053);
    v959(v354, v994, v1051);
    v969(v353, v997, v1052);
    v967(v352, v996, v1058);
    v956(v351, v1019, v1057);
    v955(v350, v1020, v1056);
    v957(v349, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v348, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v347, v1023, v1065);
    v952(v805, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v804, v1014, v1070);
    uint64_t v356 = v795;
    uint64_t v357 = v1063;
    ((void (*)(char *, char *, uint64_t))v984)(v795, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v803, v1016, v1069);
    v980(v802, v1017, v1062);
    v978(v801, v1018, v1054);
    v976(v800, v1013, v1061);
    v974(v799, v1025, v1060);
    v972(v798, v1026, v1059);
    v964(v797, v1027, v1068);
    uint64_t v358 = (void (*)(uint64_t, char *, uint64_t))v1005[4];
    uint64_t v585 = v1005 + 4;
    uint64_t v586 = v358;
    v358((uint64_t)v796, v356, v357);
    v788 = &v942[*(int *)(v1032 + 48)];
    v789 = &v942[*((int *)v1033 + 12)];
    v790 = &v942[*((int *)v1034 + 12)];
    v791 = &v942[*((int *)v1035 + 12)];
    v792 = &v942[*((int *)v1036 + 12)];
    v793 = &v942[*((int *)v1037 + 12)];
    uint64_t v359 = &v942[*((int *)v1038 + 12)];
    v794 = &v942[*((int *)v1039 + 12)];
    v795 = &v942[*(int *)(v1040 + 48)];
    v796 = &v942[*((int *)v1041 + 12)];
    uint64_t v787 = &v942[*(int *)(v1042 + 48)];
    v610 = &v942[*(int *)(v1043 + 48)];
    uint64_t v360 = v610;
    v611 = &v942[*((int *)v1044 + 12)];
    uint64_t v361 = v611;
    uint64_t v614 = &v942[*((int *)v1045 + 12)];
    uint64_t v362 = v614;
    v615 = &v942[*((int *)v1046 + 12)];
    uint64_t v363 = v615;
    uint64_t v616 = &v942[*((int *)v1047 + 12)];
    uint64_t v364 = v616;
    v617 = &v942[*((int *)v1048 + 12)];
    uint64_t v365 = v617;
    v618 = &v942[*((int *)v1049 + 12)];
    uint64_t v366 = v618;
    v619 = &v942[*((int *)v1050 + 12)];
    uint64_t v367 = v619;
    v965();
    v961(v367, v995, v1053);
    v959(v366, v994, v1051);
    v969(v365, v997, v1052);
    v967(v364, v996, v1058);
    v956(v363, v1019, v1057);
    v955(v362, v1020, v1056);
    v957(v361, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v360, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v787, v1023, v1065);
    v952(v796, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v795, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v794, v1015, v1063);
    uint64_t v368 = v1069;
    ((void (*)(char *, char *, uint64_t))v982)(v359, v1016, v1069);
    v980(v793, v1017, v1062);
    v978(v792, v1018, v1054);
    v976(v791, v1013, v1061);
    v974(v790, v1025, v1060);
    v972(v789, v1026, v1059);
    v964(v788, v1027, v1068);
    uint64_t v369 = (void (*)(char *, char *, uint64_t))v1004[4];
    v575 = v1004 + 4;
    v576 = v369;
    v369(v786, v359, v368);
    uint64_t v778 = &v941[*(int *)(v1032 + 48)];
    uint64_t v779 = &v941[*((int *)v1033 + 12)];
    uint64_t v780 = &v941[*((int *)v1034 + 12)];
    uint64_t v781 = &v941[*((int *)v1035 + 12)];
    uint64_t v782 = &v941[*((int *)v1036 + 12)];
    uint64_t v776 = &v941[*((int *)v1037 + 12)];
    uint64_t v783 = &v941[*((int *)v1038 + 12)];
    uint64_t v784 = &v941[*((int *)v1039 + 12)];
    uint64_t v785 = &v941[*(int *)(v1040 + 48)];
    uint64_t v786 = &v941[*((int *)v1041 + 12)];
    v599 = &v941[*(int *)(v1042 + 48)];
    uint64_t v370 = v599;
    v600 = &v941[*(int *)(v1043 + 48)];
    uint64_t v371 = v600;
    v601 = &v941[*((int *)v1044 + 12)];
    uint64_t v372 = v601;
    v602 = &v941[*((int *)v1045 + 12)];
    uint64_t v373 = v602;
    v603 = &v941[*((int *)v1046 + 12)];
    uint64_t v374 = v603;
    v604 = &v941[*((int *)v1047 + 12)];
    uint64_t v375 = v604;
    v605 = &v941[*((int *)v1048 + 12)];
    uint64_t v376 = v605;
    v606 = &v941[*((int *)v1049 + 12)];
    uint64_t v377 = v606;
    v607 = &v941[*((int *)v1050 + 12)];
    uint64_t v378 = v607;
    v965();
    v961(v378, v995, v1053);
    v959(v377, v994, v1051);
    v969(v376, v997, v1052);
    v967(v375, v996, v1058);
    v956(v374, v1019, v1057);
    v955(v373, v1020, v1056);
    v957(v372, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v371, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v370, v1023, v1065);
    v952(v786, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v785, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v784, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v783, v1016, v1069);
    uint64_t v379 = v776;
    uint64_t v380 = v1062;
    v980(v776, v1017, v1062);
    v978(v782, v1018, v1054);
    v976(v781, v1013, v1061);
    v974(v780, v1025, v1060);
    v972(v779, v1026, v1059);
    v964(v778, v1027, v1068);
    uint64_t v381 = (void (*)(char *, char *, uint64_t))v1003[4];
    v573 = v1003 + 4;
    v574 = v381;
    v381(v777, v379, v380);
    uint64_t v769 = &v940[*(int *)(v1032 + 48)];
    v770 = &v940[*((int *)v1033 + 12)];
    uint64_t v771 = &v940[*((int *)v1034 + 12)];
    uint64_t v772 = &v940[*((int *)v1035 + 12)];
    uint64_t v382 = &v940[*((int *)v1036 + 12)];
    uint64_t v773 = &v940[*((int *)v1037 + 12)];
    uint64_t v774 = &v940[*((int *)v1038 + 12)];
    uint64_t v775 = &v940[*((int *)v1039 + 12)];
    uint64_t v776 = &v940[*(int *)(v1040 + 48)];
    uint64_t v777 = &v940[*((int *)v1041 + 12)];
    v768 = &v940[*(int *)(v1042 + 48)];
    uint64_t v587 = &v940[*(int *)(v1043 + 48)];
    uint64_t v383 = v587;
    uint64_t v588 = &v940[*((int *)v1044 + 12)];
    uint64_t v384 = v588;
    uint64_t v589 = &v940[*((int *)v1045 + 12)];
    v385 = v589;
    uint64_t v590 = &v940[*((int *)v1046 + 12)];
    uint64_t v386 = v590;
    uint64_t v591 = &v940[*((int *)v1047 + 12)];
    uint64_t v387 = v591;
    uint64_t v592 = &v940[*((int *)v1048 + 12)];
    uint64_t v388 = v592;
    v595 = &v940[*((int *)v1049 + 12)];
    uint64_t v389 = v595;
    v596 = &v940[*((int *)v1050 + 12)];
    uint64_t v390 = v596;
    v965();
    v961(v390, v995, v1053);
    v959(v389, v994, v1051);
    v969(v388, v997, v1052);
    v967(v387, v996, v1058);
    v956(v386, v1019, v1057);
    v955(v385, v1020, v1056);
    v957(v384, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v383, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v768, v1023, v1065);
    v952(v777, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v776, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v775, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v774, v1016, v1069);
    v980(v773, v1017, v1062);
    uint64_t v391 = v1054;
    v978(v382, v1018, v1054);
    v976(v772, v1013, v1061);
    v974(v771, v1025, v1060);
    v972(v770, v1026, v1059);
    v964(v769, v1027, v1068);
    uint64_t v392 = (void (*)(char *, char *, uint64_t))v1002[4];
    v563 = v1002 + 4;
    v564 = v392;
    v392(v767, v382, v391);
    v759 = &v939[*(int *)(v1032 + 48)];
    v760 = &v939[*((int *)v1033 + 12)];
    v761 = &v939[*((int *)v1034 + 12)];
    uint64_t v393 = &v939[*((int *)v1035 + 12)];
    v762 = &v939[*((int *)v1036 + 12)];
    v763 = &v939[*((int *)v1037 + 12)];
    uint64_t v764 = &v939[*((int *)v1038 + 12)];
    v765 = &v939[*((int *)v1039 + 12)];
    uint64_t v766 = &v939[*(int *)(v1040 + 48)];
    v767 = &v939[*((int *)v1041 + 12)];
    v758 = &v939[*(int *)(v1042 + 48)];
    uint64_t v577 = &v939[*(int *)(v1043 + 48)];
    uint64_t v394 = v577;
    v578 = &v939[*((int *)v1044 + 12)];
    uint64_t v395 = v578;
    uint64_t v579 = &v939[*((int *)v1045 + 12)];
    uint64_t v396 = v579;
    uint64_t v580 = &v939[*((int *)v1046 + 12)];
    uint64_t v397 = v580;
    uint64_t v581 = &v939[*((int *)v1047 + 12)];
    uint64_t v398 = v581;
    uint64_t v582 = &v939[*((int *)v1048 + 12)];
    uint64_t v399 = v582;
    uint64_t v583 = &v939[*((int *)v1049 + 12)];
    uint64_t v400 = v583;
    uint64_t v584 = &v939[*((int *)v1050 + 12)];
    v401 = v584;
    v965();
    v961(v401, v995, v1053);
    v959(v400, v994, v1051);
    v969(v399, v997, v1052);
    v967(v398, v996, v1058);
    v956(v397, v1019, v1057);
    v955(v396, v1020, v1056);
    v957(v395, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v394, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v758, v1023, v1065);
    v952(v767, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v766, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v765, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v764, v1016, v1069);
    v980(v763, v1017, v1062);
    v978(v762, v1018, v1054);
    uint64_t v402 = v1061;
    v976(v393, v1013, v1061);
    v974(v761, v1025, v1060);
    v972(v760, v1026, v1059);
    v964(v759, v1027, v1068);
    uint64_t v403 = (void (*)(char *, char *, uint64_t))v1001[4];
    v557 = v1001 + 4;
    v558 = v403;
    v403(v757, v393, v402);
    v749 = &v938[*(int *)(v1032 + 48)];
    v750 = &v938[*((int *)v1033 + 12)];
    uint64_t v404 = &v938[*((int *)v1034 + 12)];
    v751 = &v938[*((int *)v1035 + 12)];
    v752 = &v938[*((int *)v1036 + 12)];
    v753 = &v938[*((int *)v1037 + 12)];
    v754 = &v938[*((int *)v1038 + 12)];
    v755 = &v938[*((int *)v1039 + 12)];
    v756 = &v938[*(int *)(v1040 + 48)];
    v757 = &v938[*((int *)v1041 + 12)];
    v748 = &v938[*(int *)(v1042 + 48)];
    v565 = &v938[*(int *)(v1043 + 48)];
    uint64_t v405 = v565;
    v566 = &v938[*((int *)v1044 + 12)];
    uint64_t v406 = v566;
    v567 = &v938[*((int *)v1045 + 12)];
    uint64_t v407 = v567;
    v568 = &v938[*((int *)v1046 + 12)];
    uint64_t v408 = v568;
    v569 = &v938[*((int *)v1047 + 12)];
    uint64_t v409 = v569;
    v570 = &v938[*((int *)v1048 + 12)];
    uint64_t v410 = v570;
    v571 = &v938[*((int *)v1049 + 12)];
    uint64_t v411 = v571;
    v572 = &v938[*((int *)v1050 + 12)];
    uint64_t v412 = v572;
    v965();
    v961(v412, v995, v1053);
    v959(v411, v994, v1051);
    uint64_t v413 = v1052;
    v969(v410, v997, v1052);
    v967(v409, v996, v1058);
    v956(v408, v1019, v1057);
    v955(v407, v1020, v1056);
    v957(v406, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v405, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v748, v1023, v1065);
    v952(v757, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v756, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v755, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v754, v1016, v1069);
    v980(v753, v1017, v1062);
    v978(v752, v1018, v1054);
    v976(v751, v1013, v1061);
    uint64_t v414 = v1060;
    v974(v404, v1025, v1060);
    v972(v750, v1026, v1059);
    v964(v749, v1027, v1068);
    uint64_t v415 = (void (*)(char *, char *, uint64_t))v1000[4];
    v551 = v1000 + 4;
    v552 = v415;
    v415(v747, v404, v414);
    v738 = &v937[*(int *)(v1032 + 48)];
    v550 = &v937[*((int *)v1033 + 12)];
    v739 = &v937[*((int *)v1034 + 12)];
    v740 = &v937[*((int *)v1035 + 12)];
    v741 = &v937[*((int *)v1036 + 12)];
    v742 = &v937[*((int *)v1037 + 12)];
    v743 = &v937[*((int *)v1038 + 12)];
    v744 = &v937[*((int *)v1039 + 12)];
    v745 = &v937[*(int *)(v1040 + 48)];
    v746 = &v937[*((int *)v1041 + 12)];
    v747 = &v937[*(int *)(v1042 + 48)];
    v553 = &v937[*(int *)(v1043 + 48)];
    uint64_t v416 = v553;
    v554 = &v937[*((int *)v1044 + 12)];
    uint64_t v417 = v554;
    v555 = &v937[*((int *)v1045 + 12)];
    uint64_t v418 = v555;
    v556 = &v937[*((int *)v1046 + 12)];
    uint64_t v419 = v556;
    v559 = &v937[*((int *)v1047 + 12)];
    uint64_t v420 = v559;
    v560 = &v937[*((int *)v1048 + 12)];
    uint64_t v421 = v560;
    v561 = &v937[*((int *)v1049 + 12)];
    uint64_t v422 = v561;
    v562 = &v937[*((int *)v1050 + 12)];
    uint64_t v423 = v562;
    v965();
    v961(v423, v995, v1053);
    v959(v422, v994, v1051);
    v969(v421, v997, v413);
    v967(v420, v996, v1058);
    v956(v419, v1019, v1057);
    v955(v418, v1020, v1056);
    uint64_t v424 = v1055;
    v957(v417, v1021, v1055);
    ((void (*)(char *, char *, uint64_t))v991)(v416, v1022, v1066);
    ((void (*)(char *, char *, uint64_t))v989)(v747, v1023, v1065);
    v952(v746, v1024, v1064);
    ((void (*)(char *, char *, uint64_t))v986)(v745, v1014, v1070);
    ((void (*)(char *, char *, uint64_t))v984)(v744, v1015, v1063);
    ((void (*)(char *, char *, uint64_t))v982)(v743, v1016, v1069);
    v980(v742, v1017, v1062);
    v978(v741, v1018, v1054);
    v976(v740, v1013, v1061);
    v974(v739, v1025, v1060);
    uint64_t v425 = v550;
    uint64_t v426 = v1059;
    v972(v550, v1026, v1059);
    v964(v738, v1027, v1068);
    uint64_t v427 = (void (*)(char *, char *, uint64_t))v999[4];
    uint64_t v980 = (void (*)(char *, char *, uint64_t))(v999 + 4);
    uint64_t v981 = v427;
    v427(v681, v425, v426);
    uint64_t v428 = v936;
    uint64_t v982 = &v936[*(int *)(v1032 + 48)];
    uint64_t v979 = &v936[*((int *)v1033 + 12)];
    v1033 = &v936[*((int *)v1034 + 12)];
    v988 = &v936[*((int *)v1035 + 12)];
    v989 = &v936[*((int *)v1036 + 12)];
    v990 = &v936[*((int *)v1037 + 12)];
    v991 = &v936[*((int *)v1038 + 12)];
    uint64_t v1032 = (uint64_t)&v936[*((int *)v1039 + 12)];
    v1034 = &v936[*(int *)(v1040 + 48)];
    v1035 = &v936[*((int *)v1041 + 12)];
    v1036 = &v936[*(int *)(v1042 + 48)];
    v1041 = &v936[*(int *)(v1043 + 48)];
    uint64_t v983 = &v936[*((int *)v1044 + 12)];
    uint64_t v429 = v983;
    uint64_t v984 = &v936[*((int *)v1045 + 12)];
    uint64_t v430 = v984;
    uint64_t v985 = &v936[*((int *)v1046 + 12)];
    uint64_t v431 = v985;
    uint64_t v986 = &v936[*((int *)v1047 + 12)];
    uint64_t v432 = v986;
    v1045 = &v936[*((int *)v1048 + 12)];
    uint64_t v433 = v1045;
    uint64_t v987 = &v936[*((int *)v1049 + 12)];
    uint64_t v434 = v987;
    v1048 = &v936[*((int *)v1050 + 12)];
    uint64_t v435 = v1048;
    v672(v936, v998, v1067);
    v669(v435, v995, v1053);
    v658(v434, v994, v1051);
    v651(v433, v997, v1052);
    v645(v432, v996, v1058);
    v634(v431, v1019, v1057);
    v631(v430, v1020, v1056);
    v621(v429, v1021, v424);
    v613(v1041, v1022, v1066);
    v609(v1036, v1023, v1065);
    v598(v1035, v1024, v1064);
    v594(v1034, v1014, v1070);
    v586(v1032, v1015, v1063);
    v576(v991, v1016, v1069);
    v574(v990, v1017, v1062);
    v564(v989, v1018, v1054);
    uint64_t v436 = v1061;
    v558(v988, v1013, v1061);
    uint64_t v437 = v1060;
    v552(v1033, v1025, v1060);
    uint64_t v438 = v979;
    uint64_t v439 = v1059;
    v981(v979, v1026, v1059);
    uint64_t v440 = (void (*)(char *, char *, uint64_t))v1028[4];
    uint64_t v441 = v982;
    uint64_t v442 = v1068;
    v440(v982, v1027, v1068);
    v440(v690, v441, v442);
    uint64_t v443 = (int *)v999[1];
    ++v999;
    v1039 = (void (*)(char *, uint64_t))v443;
    ((void (*)(char *, uint64_t))v443)(v438, v439);
    uint64_t v444 = (int *)v1000[1];
    ++v1000;
    v1038 = (void (*)(char *, uint64_t))v444;
    ((void (*)(char *, uint64_t))v444)(v1033, v437);
    v1033 = (char *)v1001[1];
    ++v1001;
    ((void (*)(char *, uint64_t))v1033)(v988, v436);
    uint64_t v1040 = v1002[1];
    ++v1002;
    uint64_t v445 = v1054;
    ((void (*)(char *, uint64_t))v1040)(v989, v1054);
    uint64_t v446 = (int *)v1003[1];
    ++v1003;
    v1037 = (void (*)(char *, uint64_t))v446;
    uint64_t v447 = v1062;
    ((void (*)(char *, uint64_t))v446)(v990, v1062);
    uint64_t v448 = (int *)v1004[1];
    ++v1004;
    v1044 = (void (*)(char *, uint64_t))v448;
    ((void (*)(char *, uint64_t))v448)(v991, v1069);
    uint64_t v1043 = v1005[1];
    ++v1005;
    ((void (*)(uint64_t, uint64_t))v1043)(v1032, v1063);
    uint64_t v1042 = v1006[1];
    ++v1006;
    ((void (*)(char *, uint64_t))v1042)(v1034, v1070);
    uint64_t v449 = (int *)v1029[1];
    ++v1029;
    v1047 = (void (*)(char *, uint64_t))v449;
    ((void (*)(char *, uint64_t))v449)(v1035, v1064);
    v1034 = (char *)v1030[1];
    ++v1030;
    ((void (*)(char *, uint64_t))v1034)(v1036, v1065);
    uint64_t v1032 = v1007[1];
    ++v1007;
    ((void (*)(char *, uint64_t))v1032)(v1041, v1066);
    uint64_t v450 = (int *)v1008[1];
    ++v1008;
    v1046 = (void (*)(char *, uint64_t))v450;
    uint64_t v451 = v1055;
    ((void (*)(char *, uint64_t))v450)(v983, v1055);
    v1035 = (char *)v1009[1];
    ++v1009;
    ((void (*)(char *, uint64_t))v1035)(v984, v1056);
    uint64_t v452 = (int *)v1010[1];
    ++v1010;
    v1050 = (void (*)(char *, uint64_t))v452;
    uint64_t v453 = v1057;
    ((void (*)(char *, uint64_t))v452)(v985, v1057);
    uint64_t v454 = (int *)v1011[1];
    ++v1011;
    v1049 = (void (*)(char *, uint64_t))v454;
    uint64_t v455 = v1058;
    ((void (*)(char *, uint64_t))v454)(v986, v1058);
    uint64_t v456 = (char *)v1012[1];
    ++v1012;
    v1036 = v456;
    uint64_t v457 = v1052;
    ((void (*)(char *, uint64_t))v456)(v1045, v1052);
    v1045 = (char *)v992[1];
    ++v992;
    uint64_t v458 = v1051;
    ((void (*)(char *, uint64_t))v1045)(v987, v1051);
    uint64_t v459 = (char *)v993[1];
    ++v993;
    v1027 = v459;
    ((void (*)(char *, uint64_t))v459)(v1048, v1053);
    v1041 = (char *)v1031[1];
    ++v1031;
    ((void (*)(char *, uint64_t))v1041)(v428, v1067);
    uint64_t v460 = (char *)v1028[1];
    ++v1028;
    v1048 = v460;
    ((void (*)(char *, uint64_t))v460)(v738, v1068);
    v1038(v739, v1060);
    ((void (*)(char *, uint64_t))v1033)(v740, v1061);
    ((void (*)(char *, uint64_t))v1040)(v741, v445);
    v1037(v742, v447);
    uint64_t v461 = v1069;
    v1044(v743, v1069);
    uint64_t v462 = v1063;
    ((void (*)(char *, uint64_t))v1043)(v744, v1063);
    ((void (*)(char *, uint64_t))v1042)(v745, v1070);
    v1047(v746, v1064);
    uint64_t v463 = v1065;
    ((void (*)(char *, uint64_t))v1034)(v747, v1065);
    ((void (*)(char *, uint64_t))v1032)(v553, v1066);
    v1046(v554, v451);
    uint64_t v464 = v1056;
    ((void (*)(char *, uint64_t))v1035)(v555, v1056);
    v1050(v556, v453);
    uint64_t v465 = v455;
    v1049(v559, v455);
    ((void (*)(char *, uint64_t))v1036)(v560, v457);
    ((void (*)(char *, uint64_t))v1045)(v561, v458);
    uint64_t v466 = v1053;
    ((void (*)(char *, uint64_t))v1027)(v562, v1053);
    ((void (*)(char *, uint64_t))v1041)(v937, v1067);
    ((void (*)(char *, uint64_t))v1048)(v749, v1068);
    v1039(v750, v1059);
    ((void (*)(char *, uint64_t))v1033)(v751, v1061);
    ((void (*)(char *, uint64_t))v1040)(v752, v445);
    v1037(v753, v1062);
    v1044(v754, v461);
    ((void (*)(char *, uint64_t))v1043)(v755, v462);
    ((void (*)(char *, uint64_t))v1042)(v756, v1070);
    uint64_t v467 = v1064;
    v1047(v757, v1064);
    ((void (*)(char *, uint64_t))v1034)(v748, v463);
    uint64_t v468 = v1066;
    ((void (*)(char *, uint64_t))v1032)(v565, v1066);
    v1046(v566, v1055);
    ((void (*)(char *, uint64_t))v1035)(v567, v464);
    v1050(v568, v1057);
    v1049(v569, v465);
    ((void (*)(char *, uint64_t))v1036)(v570, v1052);
    uint64_t v469 = v1051;
    uint64_t v470 = v1045;
    ((void (*)(char *, uint64_t))v1045)(v571, v1051);
    ((void (*)(char *, uint64_t))v1027)(v572, v466);
    uint64_t v471 = v1067;
    ((void (*)(char *, uint64_t))v1041)(v938, v1067);
    ((void (*)(char *, uint64_t))v1048)(v759, v1068);
    v1039(v760, v1059);
    v1038(v761, v1060);
    ((void (*)(char *, uint64_t))v1040)(v762, v1054);
    uint64_t v472 = v1062;
    v1037(v763, v1062);
    v1044(v764, v1069);
    ((void (*)(char *, uint64_t))v1043)(v765, v1063);
    ((void (*)(char *, uint64_t))v1042)(v766, v1070);
    v1047(v767, v467);
    ((void (*)(char *, uint64_t))v1034)(v758, v1065);
    uint64_t v473 = v468;
    uint64_t v474 = (void (*)(char *, uint64_t))v1032;
    ((void (*)(char *, uint64_t))v1032)(v577, v473);
    uint64_t v475 = v1055;
    v1046(v578, v1055);
    ((void (*)(char *, uint64_t))v1035)(v579, v1056);
    uint64_t v476 = v1057;
    v1050(v580, v1057);
    v1049(v581, v1058);
    ((void (*)(char *, uint64_t))v1036)(v582, v1052);
    ((void (*)(char *, uint64_t))v470)(v583, v469);
    uint64_t v477 = v1027;
    ((void (*)(char *, uint64_t))v1027)(v584, v1053);
    ((void (*)(char *, uint64_t))v1041)(v939, v471);
    ((void (*)(char *, uint64_t))v1048)(v769, v1068);
    v1039(v770, v1059);
    uint64_t v478 = v1060;
    v1038(v771, v1060);
    ((void (*)(char *, uint64_t))v1033)(v772, v1061);
    v1037(v773, v472);
    v1044(v774, v1069);
    ((void (*)(char *, uint64_t))v1043)(v775, v1063);
    ((void (*)(char *, uint64_t))v1042)(v776, v1070);
    v1047(v777, v1064);
    uint64_t v479 = v1034;
    ((void (*)(char *, uint64_t))v1034)(v768, v1065);
    v474(v587, v1066);
    v1046(v588, v475);
    ((void (*)(char *, uint64_t))v1035)(v589, v1056);
    v1050(v590, v476);
    v1049(v591, v1058);
    uint64_t v480 = v1036;
    ((void (*)(char *, uint64_t))v1036)(v592, v1052);
    ((void (*)(char *, uint64_t))v1045)(v595, v1051);
    ((void (*)(char *, uint64_t))v477)(v596, v1053);
    ((void (*)(char *, uint64_t))v1041)(v940, v1067);
    ((void (*)(char *, uint64_t))v1048)(v778, v1068);
    v1039(v779, v1059);
    v1038(v780, v478);
    uint64_t v481 = v1033;
    ((void (*)(char *, uint64_t))v1033)(v781, v1061);
    uint64_t v482 = v1054;
    ((void (*)(char *, uint64_t))v1040)(v782, v1054);
    v1044(v783, v1069);
    ((void (*)(char *, uint64_t))v1043)(v784, v1063);
    ((void (*)(char *, uint64_t))v1042)(v785, v1070);
    uint64_t v483 = v1064;
    v1047(v786, v1064);
    ((void (*)(char *, uint64_t))v479)(v599, v1065);
    uint64_t v484 = v1066;
    ((void (*)(char *, uint64_t))v1032)(v600, v1066);
    v1046(v601, v1055);
    uint64_t v485 = v1056;
    uint64_t v486 = v1035;
    ((void (*)(char *, uint64_t))v1035)(v602, v1056);
    v1050(v603, v1057);
    v1049(v604, v1058);
    ((void (*)(char *, uint64_t))v480)(v605, v1052);
    ((void (*)(char *, uint64_t))v1045)(v606, v1051);
    ((void (*)(char *, uint64_t))v477)(v607, v1053);
    uint64_t v487 = v1067;
    uint64_t v488 = v1041;
    ((void (*)(char *, uint64_t))v1041)(v941, v1067);
    ((void (*)(char *, uint64_t))v1048)(v788, v1068);
    v1039(v789, v1059);
    v1038(v790, v1060);
    ((void (*)(char *, uint64_t))v481)(v791, v1061);
    uint64_t v489 = (void (*)(char *, uint64_t))v1040;
    ((void (*)(char *, uint64_t))v1040)(v792, v482);
    v1037(v793, v1062);
    ((void (*)(char *, uint64_t))v1043)(v794, v1063);
    ((void (*)(char *, uint64_t))v1042)(v795, v1070);
    v1047(v796, v483);
    ((void (*)(char *, uint64_t))v1034)(v787, v1065);
    ((void (*)(char *, uint64_t))v1032)(v610, v484);
    v1046(v611, v1055);
    ((void (*)(char *, uint64_t))v486)(v614, v485);
    v1050(v615, v1057);
    v1049(v616, v1058);
    uint64_t v490 = v1052;
    ((void (*)(char *, uint64_t))v1036)(v617, v1052);
    uint64_t v491 = v1051;
    ((void (*)(char *, uint64_t))v1045)(v618, v1051);
    ((void (*)(char *, uint64_t))v1027)(v619, v1053);
    ((void (*)(char *, uint64_t))v488)(v942, v487);
    uint64_t v492 = v1068;
    ((void (*)(char *, uint64_t))v1048)(v797, v1068);
    uint64_t v493 = v1059;
    uint64_t v494 = v1039;
    v1039(v798, v1059);
    v1038(v799, v1060);
    uint64_t v495 = v1061;
    ((void (*)(char *, uint64_t))v1033)(v800, v1061);
    v489(v801, v1054);
    v1037(v802, v1062);
    v1044(v803, v1069);
    ((void (*)(char *, uint64_t))v1042)(v804, v1070);
    v1047(v805, v1064);
    uint64_t v496 = v1065;
    ((void (*)(char *, uint64_t))v1034)(v622, v1065);
    ((void (*)(char *, uint64_t))v1032)(v623, v1066);
    v1046(v624, v1055);
    ((void (*)(char *, uint64_t))v1035)(v625, v1056);
    v1050(v626, v1057);
    v1049(v627, v1058);
    ((void (*)(char *, uint64_t))v1036)(v628, v490);
    ((void (*)(char *, uint64_t))v1045)(v629, v491);
    ((void (*)(char *, uint64_t))v1027)(v632, v1053);
    ((void (*)(char *, uint64_t))v1041)(v943, v1067);
    ((void (*)(char *, uint64_t))v1048)(v806, v492);
    v494(v807, v493);
    v497 = v1038;
    v1038(v808, v1060);
    ((void (*)(char *, uint64_t))v1033)(v809, v495);
    ((void (*)(char *, uint64_t))v1040)(v810, v1054);
    v498 = v1037;
    v1037(v811, v1062);
    v1044(v812, v1069);
    uint64_t v499 = v1063;
    ((void (*)(char *, uint64_t))v1043)(v813, v1063);
    v1047(v814, v1064);
    ((void (*)(char *, uint64_t))v1034)(v635, v496);
    ((void (*)(char *, uint64_t))v1032)(v636, v1066);
    v1046(v637, v1055);
    ((void (*)(char *, uint64_t))v1035)(v638, v1056);
    v1050(v639, v1057);
    v1049(v640, v1058);
    ((void (*)(char *, uint64_t))v1036)(v641, v1052);
    ((void (*)(char *, uint64_t))v1045)(v642, v1051);
    ((void (*)(char *, uint64_t))v1027)(v643, v1053);
    ((void (*)(char *, uint64_t))v1041)(v944, v1067);
    ((void (*)(char *, uint64_t))v1048)(v815, v1068);
    v1039(v816, v1059);
    v497(v817, v1060);
    ((void (*)(char *, uint64_t))v1033)(v818, v1061);
    ((void (*)(char *, uint64_t))v1040)(v819, v1054);
    uint64_t v500 = v1062;
    v498(v820, v1062);
    uint64_t v501 = v1069;
    uint64_t v502 = v1044;
    v1044(v821, v1069);
    v503 = (void (*)(char *, uint64_t))v1043;
    ((void (*)(char *, uint64_t))v1043)(v822, v499);
    uint64_t v504 = v1070;
    v505 = (void (*)(char *, uint64_t))v1042;
    ((void (*)(char *, uint64_t))v1042)(v823, v1070);
    ((void (*)(char *, uint64_t))v1034)(v646, v1065);
    v506 = (void (*)(char *, uint64_t))v1032;
    ((void (*)(char *, uint64_t))v1032)(v647, v1066);
    v1046(v648, v1055);
    ((void (*)(char *, uint64_t))v1035)(v649, v1056);
    v1050(v652, v1057);
    v1049(v653, v1058);
    ((void (*)(char *, uint64_t))v1036)(v654, v1052);
    ((void (*)(char *, uint64_t))v1045)(v655, v1051);
    ((void (*)(char *, uint64_t))v1027)(v656, v1053);
    ((void (*)(char *, uint64_t))v1041)(v945, v1067);
    ((void (*)(char *, uint64_t))v1048)(v824, v1068);
    v1039(v825, v1059);
    v1038(v826, v1060);
    ((void (*)(char *, uint64_t))v1033)(v827, v1061);
    ((void (*)(char *, uint64_t))v1040)(v828, v1054);
    v1037(v829, v500);
    v502(v830, v501);
    v503(v831, v1063);
    v505(v832, v504);
    uint64_t v507 = v1047;
    v1047(v659, v1064);
    v506(v660, v1066);
    v508 = v1046;
    v1046(v661, v1055);
    ((void (*)(char *, uint64_t))v1035)(v662, v1056);
    v1050(v663, v1057);
    v1049(v664, v1058);
    ((void (*)(char *, uint64_t))v1036)(v665, v1052);
    ((void (*)(char *, uint64_t))v1045)(v666, v1051);
    ((void (*)(char *, uint64_t))v1027)(v667, v1053);
    ((void (*)(char *, uint64_t))v1041)(v946, v1067);
    ((void (*)(char *, uint64_t))v1048)(v833, v1068);
    v1039(v834, v1059);
    v1038(v835, v1060);
    ((void (*)(char *, uint64_t))v1033)(v836, v1061);
    ((void (*)(char *, uint64_t))v1040)(v837, v1054);
    v1037(v838, v1062);
    v1044(v839, v1069);
    ((void (*)(char *, uint64_t))v1043)(v840, v1063);
    ((void (*)(char *, uint64_t))v1042)(v935, v1070);
    v507(v670, v1064);
    uint64_t v509 = v1034;
    ((void (*)(char *, uint64_t))v1034)(v673, v1065);
    v508(v674, v1055);
    uint64_t v510 = v1035;
    ((void (*)(char *, uint64_t))v1035)(v675, v1056);
    v511 = v1050;
    v1050(v676, v1057);
    v512 = v1049;
    v1049(v677, v1058);
    ((void (*)(char *, uint64_t))v1036)(v678, v1052);
    ((void (*)(char *, uint64_t))v1045)(v679, v1051);
    ((void (*)(char *, uint64_t))v1027)(v680, v1053);
    ((void (*)(char *, uint64_t))v1041)(v947, v1067);
    v513 = v1048;
    ((void (*)(char *, uint64_t))v1048)(v841, v1068);
    v1039(v842, v1059);
    v1038(v843, v1060);
    ((void (*)(char *, uint64_t))v1033)(v844, v1061);
    ((void (*)(char *, uint64_t))v1040)(v845, v1054);
    v1037(v846, v1062);
    v1044(v847, v1069);
    ((void (*)(char *, uint64_t))v1043)(v848, v1063);
    ((void (*)(char *, uint64_t))v1042)(v849, v1070);
    v1047(v934, v1064);
    ((void (*)(char *, uint64_t))v509)(v682, v1065);
    uint64_t v514 = v1066;
    ((void (*)(char *, uint64_t))v1032)(v683, v1066);
    ((void (*)(char *, uint64_t))v510)(v684, v1056);
    v511(v685, v1057);
    uint64_t v515 = v1058;
    v512(v686, v1058);
    ((void (*)(char *, uint64_t))v1036)(v687, v1052);
    ((void (*)(char *, uint64_t))v1045)(v688, v1051);
    uint64_t v516 = v1053;
    ((void (*)(char *, uint64_t))v1027)(v689, v1053);
    ((void (*)(char *, uint64_t))v1041)(v948, v1067);
    ((void (*)(char *, uint64_t))v513)(v850, v1068);
    v1039(v851, v1059);
    v1038(v852, v1060);
    v517 = v1033;
    ((void (*)(char *, uint64_t))v1033)(v853, v1061);
    uint64_t v518 = v1054;
    ((void (*)(char *, uint64_t))v1040)(v854, v1054);
    v1037(v855, v1062);
    v1044(v856, v1069);
    ((void (*)(char *, uint64_t))v1043)(v857, v1063);
    ((void (*)(char *, uint64_t))v1042)(v858, v1070);
    v1047(v933, v1064);
    ((void (*)(char *, uint64_t))v1034)(v691, v1065);
    ((void (*)(char *, uint64_t))v1032)(v692, v514);
    uint64_t v519 = v1055;
    v1046(v693, v1055);
    v1050(v694, v1057);
    v1049(v695, v515);
    uint64_t v520 = v1036;
    ((void (*)(char *, uint64_t))v1036)(v696, v1052);
    uint64_t v521 = v1051;
    v522 = v1045;
    ((void (*)(char *, uint64_t))v1045)(v697, v1051);
    uint64_t v523 = v516;
    v524 = v1027;
    ((void (*)(char *, uint64_t))v1027)(v698, v523);
    ((void (*)(char *, uint64_t))v1041)(v949, v1067);
    uint64_t v525 = v1068;
    ((void (*)(char *, uint64_t))v1048)(v861, v1068);
    v1039(v862, v1059);
    v1038(v863, v1060);
    ((void (*)(char *, uint64_t))v517)(v864, v1061);
    ((void (*)(char *, uint64_t))v1040)(v865, v518);
    v1037(v866, v1062);
    v1044(v867, v1069);
    ((void (*)(char *, uint64_t))v1043)(v868, v1063);
    ((void (*)(char *, uint64_t))v1042)(v932, v1070);
    v1047(v859, v1064);
    ((void (*)(char *, uint64_t))v1034)(v860, v1065);
    ((void (*)(char *, uint64_t))v1032)(v699, v1066);
    uint64_t v526 = v519;
    uint64_t v527 = v1046;
    v1046(v700, v526);
    uint64_t v528 = v1056;
    ((void (*)(char *, uint64_t))v1035)(v701, v1056);
    v1049(v702, v1058);
    uint64_t v529 = v1052;
    ((void (*)(char *, uint64_t))v520)(v703, v1052);
    ((void (*)(char *, uint64_t))v522)(v704, v521);
    ((void (*)(char *, uint64_t))v524)(v705, v1053);
    uint64_t v530 = v1067;
    ((void (*)(char *, uint64_t))v1041)(v869, v1067);
    ((void (*)(char *, uint64_t))v1048)(v872, v525);
    v1039(v873, v1059);
    uint64_t v531 = v1060;
    v1038(v874, v1060);
    ((void (*)(char *, uint64_t))v1033)(v875, v1061);
    ((void (*)(char *, uint64_t))v1040)(v876, v1054);
    uint64_t v532 = v1037;
    v1037(v877, v1062);
    v1044(v878, v1069);
    ((void (*)(char *, uint64_t))v1043)(v879, v1063);
    ((void (*)(char *, uint64_t))v1042)(v931, v1070);
    uint64_t v533 = v1064;
    v1047(v870, v1064);
    ((void (*)(char *, uint64_t))v1034)(v871, v1065);
    ((void (*)(char *, uint64_t))v1032)(v706, v1066);
    v527(v707, v1055);
    ((void (*)(char *, uint64_t))v1035)(v708, v528);
    uint64_t v534 = v1057;
    v1050(v709, v1057);
    ((void (*)(char *, uint64_t))v1036)(v710, v529);
    ((void (*)(char *, uint64_t))v1045)(v711, v1051);
    ((void (*)(char *, uint64_t))v1027)(v712, v1053);
    uint64_t v535 = v1041;
    ((void (*)(char *, uint64_t))v1041)(v880, v530);
    ((void (*)(char *, uint64_t))v1048)(v883, v1068);
    v1039(v884, v1059);
    v1038(v885, v531);
    uint64_t v536 = v1061;
    ((void (*)(char *, uint64_t))v1033)(v886, v1061);
    uint64_t v537 = (void (*)(char *, uint64_t))v1040;
    ((void (*)(char *, uint64_t))v1040)(v887, v1054);
    v532(v888, v1062);
    v1044(v889, v1069);
    ((void (*)(char *, uint64_t))v1043)(v890, v1063);
    ((void (*)(char *, uint64_t))v1042)(v930, v1070);
    v1047(v881, v533);
    uint64_t v538 = v1065;
    ((void (*)(char *, uint64_t))v1034)(v882, v1065);
    ((void (*)(char *, uint64_t))v1032)(v713, v1066);
    v1046(v714, v1055);
    ((void (*)(char *, uint64_t))v1035)(v715, v1056);
    v1050(v716, v534);
    v1049(v717, v1058);
    ((void (*)(char *, uint64_t))v1045)(v718, v1051);
    ((void (*)(char *, uint64_t))v1027)(v719, v1053);
    ((void (*)(char *, uint64_t))v535)(v891, v1067);
    ((void (*)(char *, uint64_t))v1048)(v894, v1068);
    uint64_t v539 = v1059;
    v540 = v1039;
    v1039(v895, v1059);
    v541 = v1038;
    v1038(v896, v1060);
    ((void (*)(char *, uint64_t))v1033)(v897, v536);
    v537(v898, v1054);
    v1037(v899, v1062);
    v1044(v900, v1069);
    uint64_t v542 = v1063;
    ((void (*)(char *, uint64_t))v1043)(v901, v1063);
    ((void (*)(char *, uint64_t))v1042)(v929, v1070);
    v1047(v892, v1064);
    ((void (*)(char *, uint64_t))v1034)(v893, v538);
    ((void (*)(char *, uint64_t))v1032)(v720, v1066);
    v1046(v721, v1055);
    ((void (*)(char *, uint64_t))v1035)(v722, v1056);
    v1050(v723, v1057);
    v1049(v724, v1058);
    ((void (*)(char *, uint64_t))v1036)(v725, v1052);
    ((void (*)(char *, uint64_t))v1027)(v726, v1053);
    ((void (*)(char *, uint64_t))v1041)(v951, v1067);
    ((void (*)(char *, uint64_t))v1048)(v903, v1068);
    v540(v904, v539);
    v541(v905, v1060);
    ((void (*)(char *, uint64_t))v1033)(v906, v1061);
    ((void (*)(char *, uint64_t))v1040)(v907, v1054);
    v1037(v908, v1062);
    v543 = v1044;
    v1044(v909, v1069);
    v544 = (void (*)(char *, uint64_t))v1043;
    ((void (*)(char *, uint64_t))v1043)(v910, v542);
    uint64_t v545 = v1070;
    v546 = (void (*)(char *, uint64_t))v1042;
    ((void (*)(char *, uint64_t))v1042)(v911, v1070);
    v1047(v912, v1064);
    ((void (*)(char *, uint64_t))v1034)(v928, v1065);
    v547 = (void (*)(char *, uint64_t))v1032;
    ((void (*)(char *, uint64_t))v1032)(v902, v1066);
    v1046(v727, v1055);
    ((void (*)(char *, uint64_t))v1035)(v728, v1056);
    v1050(v729, v1057);
    v1049(v730, v1058);
    ((void (*)(char *, uint64_t))v1036)(v731, v1052);
    uint64_t v548 = v1051;
    ((void (*)(char *, uint64_t))v1045)(v732, v1051);
    ((void (*)(char *, uint64_t))v1041)(v950, v1067);
    ((void (*)(char *, uint64_t))v1048)(v917, v1068);
    v1039(v918, v1059);
    v1038(v919, v1060);
    ((void (*)(char *, uint64_t))v1033)(v920, v1061);
    ((void (*)(char *, uint64_t))v1040)(v921, v1054);
    v1037(v922, v1062);
    v543(v923, v1069);
    v544(v924, v1063);
    v546(v925, v545);
    v1047(v926, v1064);
    ((void (*)(char *, uint64_t))v1034)(v927, v1065);
    v547(v913, v1066);
    v1046(v914, v1055);
    ((void (*)(char *, uint64_t))v1035)(v915, v1056);
    v1050(v916, v1057);
    v1049(v733, v1058);
    ((void (*)(char *, uint64_t))v1036)(v734, v1052);
    ((void (*)(char *, uint64_t))v1045)(v735, v548);
    return ((uint64_t (*)(char *, uint64_t))v1027)(v736, v1053);
  }
  return result;
}

uint64_t sub_258795EB0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25878A774(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], (char *)(a4 + TupleTypeMetadata[40]), (char *)(a4 + TupleTypeMetadata[44]), (char *)(a4 + TupleTypeMetadata[48]), (char *)(a4 + TupleTypeMetadata[52]), (char *)(a4 + TupleTypeMetadata[56]), (char *)(a4 + TupleTypeMetadata[60]), (char *)(a4 + TupleTypeMetadata[64]), (char *)(a4 + TupleTypeMetadata[68]), (char *)(a4 + TupleTypeMetadata[72]), (char *)(a4 + TupleTypeMetadata[76]), (char *)(a4 + TupleTypeMetadata[80]),
           (char *)(a4 + TupleTypeMetadata[84]),
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_20.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_258796038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, char *a19, char *a20,char *a21,uint64_t a22,uint64_t a23,void *a24)
{
  uint64_t v25 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  v1007 = v26;
  v1006 = v27;
  v1005 = v28;
  v1004 = v29;
  v1003 = v30;
  v1002 = v31;
  v1001 = v32;
  v1000 = (char *)v25;
  uint64_t v33 = a24[4];
  uint64_t v1146 = a24[3];
  uint64_t v1137 = v33;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v35 = a24[5];
  v1128 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v1129 = v35;
  uint64_t v36 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a24[6];
  v1127 = (char *)v36;
  uint64_t v1138 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a24[7];
  v1126 = (char *)v38;
  uint64_t v1148 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v41 = a24[8];
  v1125 = (void (*)(char *, uint64_t))v40;
  uint64_t v1136 = v41;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v43 = a24[9];
  v1124 = (void (*)(char *, uint64_t))v42;
  uint64_t v1135 = v43;
  uint64_t v44 = swift_getTupleTypeMetadata2();
  uint64_t v45 = a24[10];
  uint64_t v1123 = v44;
  uint64_t v1147 = v45;
  uint64_t v46 = swift_getTupleTypeMetadata2();
  uint64_t v47 = a24[11];
  v1122 = (char *)v46;
  uint64_t v1145 = v47;
  uint64_t v48 = swift_getTupleTypeMetadata2();
  uint64_t v49 = a24[12];
  v1121 = (void (*)(char *, uint64_t))v48;
  uint64_t v1134 = v49;
  uint64_t v50 = swift_getTupleTypeMetadata2();
  uint64_t v51 = a24[13];
  v1120 = (char *)v50;
  uint64_t v1144 = v51;
  uint64_t v52 = swift_getTupleTypeMetadata2();
  uint64_t v53 = a24[14];
  v1119 = (char *)v52;
  uint64_t v1133 = v53;
  uint64_t v54 = swift_getTupleTypeMetadata2();
  uint64_t v55 = a24[15];
  v1118 = (void (*)(char *, uint64_t))v54;
  uint64_t v1149 = v55;
  uint64_t v56 = swift_getTupleTypeMetadata2();
  uint64_t v57 = a24[16];
  v1117 = (void (*)(char *, uint64_t))v56;
  uint64_t v1143 = v57;
  uint64_t v58 = swift_getTupleTypeMetadata2();
  uint64_t v59 = a24[17];
  v1116 = (void (*)(char *, uint64_t))v58;
  uint64_t v1142 = v59;
  uint64_t v60 = swift_getTupleTypeMetadata2();
  uint64_t v61 = a24[18];
  v1115 = (char *)v60;
  uint64_t v1141 = v61;
  uint64_t v62 = swift_getTupleTypeMetadata2();
  uint64_t v63 = a24[19];
  v1114 = (char *)v62;
  uint64_t v1132 = v63;
  uint64_t v64 = swift_getTupleTypeMetadata2();
  uint64_t v65 = a24[20];
  v1113 = (void (*)(char *, uint64_t))v64;
  uint64_t v1131 = v65;
  uint64_t v66 = swift_getTupleTypeMetadata2();
  uint64_t v67 = a24[21];
  v1112 = (char *)v66;
  uint64_t v1130 = v67;
  uint64_t v68 = swift_getTupleTypeMetadata2();
  uint64_t v69 = a24[22];
  v1111 = (char *)v68;
  uint64_t v1140 = v69;
  uint64_t v70 = swift_getTupleTypeMetadata2();
  uint64_t v71 = a24[23];
  v1110 = (char *)v70;
  uint64_t v1139 = v71;
  uint64_t v1109 = swift_getTupleTypeMetadata2();
  uint64_t v75 = MEMORY[0x270FA5388](v1109, v72, v73, v74);
  v1008 = (char *)v583 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = MEMORY[0x270FA5388](v75, v77, v78, v79);
  v1009 = (char *)v583 - v81;
  uint64_t v85 = MEMORY[0x270FA5388](v80, v82, v83, v84);
  v1010 = (char *)v583 - v86;
  uint64_t v90 = MEMORY[0x270FA5388](v85, v87, v88, v89);
  v1011 = (char *)v583 - v91;
  uint64_t v95 = MEMORY[0x270FA5388](v90, v92, v93, v94);
  v1012 = (char *)v583 - v96;
  uint64_t v100 = MEMORY[0x270FA5388](v95, v97, v98, v99);
  v1013 = (char *)v583 - v101;
  uint64_t v105 = MEMORY[0x270FA5388](v100, v102, v103, v104);
  v1014 = (char *)v583 - v106;
  uint64_t v110 = MEMORY[0x270FA5388](v105, v107, v108, v109);
  v1015 = (char *)v583 - v111;
  uint64_t v115 = MEMORY[0x270FA5388](v110, v112, v113, v114);
  v1016 = (char *)v583 - v116;
  uint64_t v120 = MEMORY[0x270FA5388](v115, v117, v118, v119);
  v1017 = (char *)v583 - v121;
  uint64_t v125 = MEMORY[0x270FA5388](v120, v122, v123, v124);
  v1018 = (char *)v583 - v126;
  uint64_t v130 = MEMORY[0x270FA5388](v125, v127, v128, v129);
  v1019 = (char *)v583 - v131;
  uint64_t v135 = MEMORY[0x270FA5388](v130, v132, v133, v134);
  v1020 = (char *)v583 - v136;
  uint64_t v140 = MEMORY[0x270FA5388](v135, v137, v138, v139);
  v1021 = (char *)v583 - v141;
  uint64_t v145 = MEMORY[0x270FA5388](v140, v142, v143, v144);
  v1022 = (char *)v583 - v146;
  uint64_t v150 = MEMORY[0x270FA5388](v145, v147, v148, v149);
  uint64_t v152 = (char *)v583 - v151;
  uint64_t v156 = MEMORY[0x270FA5388](v150, v153, v154, v155);
  uint64_t v158 = (char *)v583 - v157;
  uint64_t v162 = MEMORY[0x270FA5388](v156, v159, v160, v161);
  uint64_t v164 = (char *)v583 - v163;
  uint64_t v168 = MEMORY[0x270FA5388](v162, v165, v166, v167);
  v1023 = (char *)v583 - v169;
  uint64_t v173 = MEMORY[0x270FA5388](v168, v170, v171, v172);
  v1024 = (char *)v583 - v174;
  uint64_t v178 = MEMORY[0x270FA5388](v173, v175, v176, v177);
  uint64_t v180 = (char *)v583 - v179;
  MEMORY[0x270FA5388](v178, v181, v182, v183);
  uint64_t v185 = (char *)v583 - v184;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a24[24] + 24))(a22, a23, a24[2]);
  if (!v24)
  {
    uint64_t v187 = *((int *)v1124 + 12);
    uint64_t v188 = *(int *)(v1123 + 48);
    v1097 = &v185[v188];
    uint64_t v189 = *((int *)v1122 + 12);
    v1098 = &v185[v189];
    uint64_t v190 = *((int *)v1121 + 12);
    v1099 = &v185[v190];
    uint64_t v191 = *((int *)v1120 + 12);
    v1089 = &v185[v191];
    uint64_t v192 = *((int *)v1119 + 12);
    v1090 = &v185[v192];
    uint64_t v193 = *((int *)v1118 + 12);
    v1091 = &v185[v193];
    uint64_t v194 = *((int *)v1117 + 12);
    v1092 = &v185[v194];
    uint64_t v195 = *((int *)v1116 + 12);
    v1093 = &v185[v195];
    uint64_t v196 = *((int *)v1115 + 12);
    v1094 = &v185[v196];
    uint64_t v782 = 0;
    uint64_t v197 = *((int *)v1114 + 12);
    v1095 = &v185[v197];
    uint64_t v198 = *((int *)v1113 + 12);
    v1087 = &v185[v198];
    uint64_t v199 = *((int *)v1112 + 12);
    v1088 = &v185[v199];
    uint64_t v200 = *((int *)v1111 + 12);
    v1084 = &v185[v200];
    uint64_t v201 = *((int *)v1110 + 12);
    v1085 = &v185[v201];
    uint64_t v202 = *(int *)(v1109 + 48);
    v1086 = &v185[v202];
    v988 = &v180[v202];
    v989 = &v180[v201];
    v990 = &v180[v200];
    v991 = &v180[v199];
    v992 = &v180[v198];
    v993 = &v180[v197];
    v994 = &v180[v196];
    v995 = &v180[v195];
    v996 = &v180[v194];
    v997 = &v180[v193];
    v998 = &v180[v192];
    v999 = &v180[v191];
    v937 = v152;
    uint64_t v984 = &v180[v190];
    v949 = v158;
    uint64_t v985 = &v180[v189];
    v961 = v164;
    uint64_t v986 = &v180[v188];
    uint64_t v203 = v185;
    v1096 = &v185[v187];
    uint64_t v987 = &v180[v187];
    uint64_t v204 = *((int *)v1125 + 12);
    uint64_t v205 = &v185[v204];
    uint64_t v1070 = &v185[v204];
    uint64_t v206 = &v180[v204];
    uint64_t v778 = &v180[v204];
    uint64_t v207 = *((int *)v1126 + 12);
    uint64_t v208 = &v203[v207];
    v1071 = &v203[v207];
    uint64_t v209 = &v180[v207];
    uint64_t v779 = &v180[v207];
    uint64_t v210 = *((int *)v1127 + 12);
    uint64_t v211 = &v203[v210];
    v1073 = &v203[v210];
    uint64_t v212 = &v180[v210];
    uint64_t v780 = &v180[v210];
    uint64_t v213 = *((int *)v1128 + 12);
    uint64_t v214 = &v203[v213];
    v1074 = &v203[v213];
    v1072 = v203;
    uint64_t v215 = &v180[v213];
    uint64_t v781 = &v180[v213];
    v1108 = *(void **)(v1146 - 8);
    v1037 = (void (*)(void))v1108[2];
    v1044 = v1108 + 2;
    v728 = a21;
    v725 = a20;
    v793 = a19;
    v804 = a18;
    v815 = a17;
    v826 = a16;
    uint64_t v836 = a15;
    uint64_t v846 = a14;
    v856 = a13;
    v866 = a12;
    v876 = a11;
    v886 = a10;
    v896 = a9;
    ((void (*)(char *, char *, uint64_t))v1037)(v180, v203, v1146);
    v1083 = *(void **)(v1137 - 8);
    v216 = (void (*)(char *, char *))v1083[2];
    uint64_t v1042 = v1083 + 2;
    uint64_t v1043 = v216;
    v216(v215, v214);
    v1082 = *(void **)(v1129 - 8);
    v1036 = (void (*)(char *, char *))v1082[2];
    v1041 = v1082 + 2;
    v1036(v212, v211);
    v1081 = *(void **)(v1138 - 8);
    uint64_t v217 = (void (*)(char *, char *, uint64_t))v1081[2];
    uint64_t v1032 = v1081 + 2;
    uint64_t v1040 = v217;
    ((void (*)(char *, char *))v217)(v209, v208);
    v1107 = *(void **)(v1148 - 8);
    uint64_t v218 = (void (*)(char *, char *, uint64_t))v1107[2];
    v1031 = v1107 + 2;
    v1039 = v218;
    v218(v206, v205, v1148);
    v1080 = *(void **)(v1136 - 8);
    v1030 = (void (*)(char *, char *, uint64_t))v1080[2];
    v1048 = v1080 + 2;
    v1030(v987, v1096, v1136);
    v1106 = *(void **)(v1135 - 8);
    v1029 = (void (*)(char *, char *, uint64_t))v1106[2];
    v1047 = v1106 + 2;
    v1029(v986, v1097, v1135);
    v1079 = *(void **)(v1147 - 8);
    v1028 = (void (*)(char *, char *, uint64_t))v1079[2];
    v1046 = v1079 + 2;
    v1028(v985, v1098, v1147);
    v1078 = *(void **)(v1145 - 8);
    uint64_t v219 = (void (*)(char *, char *, uint64_t))v1078[2];
    v1045 = v1078 + 2;
    v1025 = v219;
    v219(v984, v1099, v1145);
    v1105 = *(void **)(v1134 - 8);
    v1027 = (void (*)(char *, char *, uint64_t))v1105[2];
    v1038 = v1105 + 2;
    v1027(v999, v1089, v1134);
    v1104 = *(void **)(v1144 - 8);
    v1034 = (void (*)(char *, char *, uint64_t))v1104[2];
    v1035 = v1104 + 2;
    v1034(v998, v1090, v1144);
    v1103 = *(void **)(v1133 - 8);
    v220 = (void (*)(char *, char *, uint64_t))v1103[2];
    v1026 = v1103 + 2;
    v1033 = v220;
    v220(v997, v1091, v1133);
    v1102 = *(void **)(v1149 - 8);
    uint64_t v221 = (char *)v1102[2];
    uint64_t v1065 = (char *)(v1102 + 2);
    uint64_t v1066 = v221;
    ((void (*)(char *, char *, uint64_t))v221)(v996, v1092, v1149);
    v1077 = *(void **)(v1143 - 8);
    uint64_t v222 = (char *)v1077[2];
    uint64_t v1063 = (char *)(v1077 + 2);
    uint64_t v1064 = v222;
    ((void (*)(char *, char *, uint64_t))v222)(v995, v1093, v1143);
    uint64_t v1069 = *(void **)(v1142 - 8);
    uint64_t v223 = (char *)v1069[2];
    uint64_t v1061 = (char *)(v1069 + 2);
    uint64_t v1062 = v223;
    ((void (*)(char *, char *, uint64_t))v223)(v994, v1094, v1142);
    v1076 = *(void **)(v1141 - 8);
    uint64_t v224 = (char *)v1076[2];
    uint64_t v1059 = (char *)(v1076 + 2);
    uint64_t v1060 = v224;
    ((void (*)(char *, char *, uint64_t))v224)(v993, v1095, v1141);
    v1100 = *(void **)(v1132 - 8);
    uint64_t v225 = (void (*)(char *, char *, uint64_t))v1100[2];
    uint64_t v1057 = v1100 + 2;
    uint64_t v1058 = v225;
    v225(v992, v1087, v1132);
    v1075 = *(void **)(v1131 - 8);
    uint64_t v226 = (char *)v1075[2];
    uint64_t v1055 = v1075 + 2;
    uint64_t v1056 = v226;
    ((void (*)(char *, char *, uint64_t))v226)(v991, v1088, v1131);
    uint64_t v1068 = *(void **)(v1130 - 8);
    uint64_t v227 = (void (*)(char *, char *, uint64_t))v1068[2];
    uint64_t v1053 = v1068 + 2;
    uint64_t v1054 = v227;
    v227(v990, v1084, v1130);
    uint64_t v1067 = *(void **)(v1140 - 8);
    uint64_t v228 = (void (*)(char *, char *, uint64_t))v1067[2];
    uint64_t v1051 = v1067 + 2;
    uint64_t v1052 = v228;
    v228(v989, v1085, v1140);
    v1101 = *(void **)(v1139 - 8);
    uint64_t v229 = (void (*)(char *, char *, uint64_t))v1101[2];
    v1049 = v1101 + 2;
    v1050 = v229;
    v229(v988, v1086, v1139);
    uint64_t v230 = (void (*)(char *, char *, uint64_t))v1108[4];
    v714 = v1108 + 4;
    v715 = v230;
    v230(v1000, v180, v1146);
    uint64_t v973 = &v1024[*(int *)(v1109 + 48)];
    uint64_t v974 = &v1024[*((int *)v1110 + 12)];
    uint64_t v975 = &v1024[*((int *)v1111 + 12)];
    uint64_t v976 = &v1024[*((int *)v1112 + 12)];
    uint64_t v977 = &v1024[*((int *)v1113 + 12)];
    uint64_t v978 = &v1024[*((int *)v1114 + 12)];
    uint64_t v979 = &v1024[*((int *)v1115 + 12)];
    uint64_t v980 = &v1024[*((int *)v1116 + 12)];
    uint64_t v981 = &v1024[*((int *)v1117 + 12)];
    uint64_t v982 = &v1024[*((int *)v1118 + 12)];
    uint64_t v983 = &v1024[*((int *)v1119 + 12)];
    v1000 = &v1024[*((int *)v1120 + 12)];
    uint64_t v771 = &v1024[*((int *)v1121 + 12)];
    uint64_t v231 = v771;
    uint64_t v772 = &v1024[*((int *)v1122 + 12)];
    uint64_t v232 = v772;
    uint64_t v773 = &v1024[*(int *)(v1123 + 48)];
    uint64_t v233 = v773;
    uint64_t v774 = &v1024[*((int *)v1124 + 12)];
    uint64_t v234 = v774;
    uint64_t v775 = &v1024[*((int *)v1125 + 12)];
    uint64_t v235 = v775;
    uint64_t v776 = &v1024[*((int *)v1126 + 12)];
    uint64_t v236 = v776;
    uint64_t v777 = &v1024[*((int *)v1127 + 12)];
    uint64_t v237 = v777;
    uint64_t v238 = &v1024[*((int *)v1128 + 12)];
    v1037();
    uint64_t v239 = v1137;
    v1043(v238, v1074);
    ((void (*)(char *, char *, uint64_t))v1036)(v237, v1073, v1129);
    v1040(v236, v1071, v1138);
    v1039(v235, v1070, v1148);
    v1030(v234, v1096, v1136);
    v1029(v233, v1097, v1135);
    v1028(v232, v1098, v1147);
    v1025(v231, v1099, v1145);
    v1027(v1000, v1089, v1134);
    v1034(v983, v1090, v1144);
    v1033(v982, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v981, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v980, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v979, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v978, v1095, v1141);
    v1058(v977, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v976, v1088, v1131);
    v1054(v975, v1084, v1130);
    v1052(v974, v1085, v1140);
    v1050(v973, v1086, v1139);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))v1083[4];
    uint64_t v704 = v1083 + 4;
    uint64_t v705 = v240;
    uint64_t v241 = v239;
    v240(v1001, v238, v239);
    uint64_t v964 = &v1023[*(int *)(v1109 + 48)];
    uint64_t v965 = &v1023[*((int *)v1110 + 12)];
    v966 = &v1023[*((int *)v1111 + 12)];
    v967 = &v1023[*((int *)v1112 + 12)];
    v968 = &v1023[*((int *)v1113 + 12)];
    uint64_t v969 = &v1023[*((int *)v1114 + 12)];
    uint64_t v970 = &v1023[*((int *)v1115 + 12)];
    uint64_t v971 = &v1023[*((int *)v1116 + 12)];
    uint64_t v972 = &v1023[*((int *)v1117 + 12)];
    v1001 = &v1023[*((int *)v1118 + 12)];
    v962 = &v1023[*((int *)v1119 + 12)];
    v963 = &v1023[*((int *)v1120 + 12)];
    uint64_t v764 = &v1023[*((int *)v1121 + 12)];
    uint64_t v242 = v764;
    v765 = &v1023[*((int *)v1122 + 12)];
    uint64_t v243 = v765;
    uint64_t v766 = &v1023[*(int *)(v1123 + 48)];
    uint64_t v244 = v766;
    v767 = &v1023[*((int *)v1124 + 12)];
    uint64_t v245 = v767;
    v768 = &v1023[*((int *)v1125 + 12)];
    uint64_t v246 = v768;
    uint64_t v769 = &v1023[*((int *)v1126 + 12)];
    uint64_t v247 = v769;
    uint64_t v248 = &v1023[*((int *)v1127 + 12)];
    v770 = &v1023[*((int *)v1128 + 12)];
    uint64_t v249 = v770;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v249, v1074, v241);
    uint64_t v250 = v1129;
    ((void (*)(char *, char *, uint64_t))v1036)(v248, v1073, v1129);
    v1040(v247, v1071, v1138);
    v1039(v246, v1070, v1148);
    v1030(v245, v1096, v1136);
    v1029(v244, v1097, v1135);
    v1028(v243, v1098, v1147);
    v1025(v242, v1099, v1145);
    v1027(v963, v1089, v1134);
    v1034(v962, v1090, v1144);
    v1033(v1001, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v972, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v971, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v970, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v969, v1095, v1141);
    v1058(v968, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v967, v1088, v1131);
    v1054(v966, v1084, v1130);
    v1052(v965, v1085, v1140);
    v1050(v964, v1086, v1139);
    uint64_t v251 = (void (*)(char *, char *, uint64_t))v1082[4];
    uint64_t v701 = v1082 + 4;
    uint64_t v702 = v251;
    uint64_t v252 = v248;
    uint64_t v253 = v250;
    v251(v1002, v252, v250);
    v952 = &v961[*(int *)(v1109 + 48)];
    v953 = &v961[*((int *)v1110 + 12)];
    v954 = &v961[*((int *)v1111 + 12)];
    v955 = &v961[*((int *)v1112 + 12)];
    v956 = &v961[*((int *)v1113 + 12)];
    v957 = &v961[*((int *)v1114 + 12)];
    uint64_t v958 = &v961[*((int *)v1115 + 12)];
    uint64_t v959 = &v961[*((int *)v1116 + 12)];
    uint64_t v960 = &v961[*((int *)v1117 + 12)];
    v1002 = &v961[*((int *)v1118 + 12)];
    uint64_t v950 = &v961[*((int *)v1119 + 12)];
    uint64_t v951 = &v961[*((int *)v1120 + 12)];
    v757 = &v961[*((int *)v1121 + 12)];
    uint64_t v254 = v757;
    v758 = &v961[*((int *)v1122 + 12)];
    uint64_t v255 = v758;
    v759 = &v961[*(int *)(v1123 + 48)];
    uint64_t v256 = v759;
    v760 = &v961[*((int *)v1124 + 12)];
    uint64_t v257 = v760;
    v761 = &v961[*((int *)v1125 + 12)];
    uint64_t v258 = v761;
    uint64_t v259 = &v961[*((int *)v1126 + 12)];
    v762 = &v961[*((int *)v1127 + 12)];
    uint64_t v260 = v762;
    v763 = &v961[*((int *)v1128 + 12)];
    uint64_t v261 = v763;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v261, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v260, v1073, v253);
    uint64_t v262 = v1138;
    v1040(v259, v1071, v1138);
    v1039(v258, v1070, v1148);
    v1030(v257, v1096, v1136);
    v1029(v256, v1097, v1135);
    v1028(v255, v1098, v1147);
    v1025(v254, v1099, v1145);
    v1027(v951, v1089, v1134);
    v1034(v950, v1090, v1144);
    v1033(v1002, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v960, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v959, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v958, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v957, v1095, v1141);
    v1058(v956, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v955, v1088, v1131);
    v1054(v954, v1084, v1130);
    v1052(v953, v1085, v1140);
    v1050(v952, v1086, v1139);
    uint64_t v263 = (void (*)(char *, char *, uint64_t))v1081[4];
    uint64_t v690 = v1081 + 4;
    uint64_t v691 = v263;
    v263(v1003, v259, v262);
    v940 = &v949[*(int *)(v1109 + 48)];
    v941 = &v949[*((int *)v1110 + 12)];
    v942 = &v949[*((int *)v1111 + 12)];
    v943 = &v949[*((int *)v1112 + 12)];
    v944 = &v949[*((int *)v1113 + 12)];
    v945 = &v949[*((int *)v1114 + 12)];
    v946 = &v949[*((int *)v1115 + 12)];
    v947 = &v949[*((int *)v1116 + 12)];
    v948 = &v949[*((int *)v1117 + 12)];
    v1003 = &v949[*((int *)v1118 + 12)];
    v938 = &v949[*((int *)v1119 + 12)];
    v939 = &v949[*((int *)v1120 + 12)];
    v750 = &v949[*((int *)v1121 + 12)];
    uint64_t v264 = v750;
    v751 = &v949[*((int *)v1122 + 12)];
    uint64_t v265 = v751;
    v752 = &v949[*(int *)(v1123 + 48)];
    uint64_t v266 = v752;
    v753 = &v949[*((int *)v1124 + 12)];
    uint64_t v267 = v753;
    uint64_t v268 = &v949[*((int *)v1125 + 12)];
    v754 = &v949[*((int *)v1126 + 12)];
    uint64_t v269 = v754;
    v755 = &v949[*((int *)v1127 + 12)];
    uint64_t v270 = v755;
    v756 = &v949[*((int *)v1128 + 12)];
    uint64_t v271 = v756;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v271, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v270, v1073, v1129);
    v1040(v269, v1071, v262);
    uint64_t v272 = v1148;
    v1039(v268, v1070, v1148);
    v1030(v267, v1096, v1136);
    v1029(v266, v1097, v1135);
    v1028(v265, v1098, v1147);
    v1025(v264, v1099, v1145);
    v1027(v939, v1089, v1134);
    v1034(v938, v1090, v1144);
    v1033(v1003, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v948, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v947, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v946, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v945, v1095, v1141);
    v1058(v944, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v943, v1088, v1131);
    v1054(v942, v1084, v1130);
    v1052(v941, v1085, v1140);
    v1050(v940, v1086, v1139);
    uint64_t v273 = (void (*)(char *, char *, uint64_t))v1107[4];
    uint64_t v683 = v1107 + 4;
    v684 = v273;
    uint64_t v274 = v268;
    uint64_t v275 = v272;
    v273(v1004, v274, v272);
    v928 = &v937[*(int *)(v1109 + 48)];
    v929 = &v937[*((int *)v1110 + 12)];
    v930 = &v937[*((int *)v1111 + 12)];
    v931 = &v937[*((int *)v1112 + 12)];
    v932 = &v937[*((int *)v1113 + 12)];
    v933 = &v937[*((int *)v1114 + 12)];
    v934 = &v937[*((int *)v1115 + 12)];
    v935 = &v937[*((int *)v1116 + 12)];
    v936 = &v937[*((int *)v1117 + 12)];
    v1004 = &v937[*((int *)v1118 + 12)];
    v926 = &v937[*((int *)v1119 + 12)];
    v927 = &v937[*((int *)v1120 + 12)];
    v743 = &v937[*((int *)v1121 + 12)];
    v276 = v743;
    v744 = &v937[*((int *)v1122 + 12)];
    uint64_t v277 = v744;
    v745 = &v937[*(int *)(v1123 + 48)];
    uint64_t v278 = v745;
    uint64_t v279 = &v937[*((int *)v1124 + 12)];
    v746 = &v937[*((int *)v1125 + 12)];
    uint64_t v280 = v746;
    v747 = &v937[*((int *)v1126 + 12)];
    uint64_t v281 = v747;
    v748 = &v937[*((int *)v1127 + 12)];
    uint64_t v282 = v748;
    v749 = &v937[*((int *)v1128 + 12)];
    uint64_t v283 = v749;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v283, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v282, v1073, v1129);
    v1040(v281, v1071, v1138);
    v1039(v280, v1070, v275);
    uint64_t v284 = v1136;
    v1030(v279, v1096, v1136);
    v1029(v278, v1097, v1135);
    v1028(v277, v1098, v1147);
    v1025(v276, v1099, v1145);
    v1027(v927, v1089, v1134);
    v1034(v926, v1090, v1144);
    v1033(v1004, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v936, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v935, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v934, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v933, v1095, v1141);
    v1058(v932, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v931, v1088, v1131);
    v1054(v930, v1084, v1130);
    v1052(v929, v1085, v1140);
    v1050(v928, v1086, v1139);
    uint64_t v285 = (void (*)(char *, char *, uint64_t))v1080[4];
    v677 = v1080 + 4;
    uint64_t v678 = v285;
    v285(v1005, v279, v284);
    uint64_t v916 = &v1022[*(int *)(v1109 + 48)];
    uint64_t v917 = &v1022[*((int *)v1110 + 12)];
    uint64_t v918 = &v1022[*((int *)v1111 + 12)];
    uint64_t v919 = &v1022[*((int *)v1112 + 12)];
    uint64_t v920 = &v1022[*((int *)v1113 + 12)];
    uint64_t v921 = &v1022[*((int *)v1114 + 12)];
    v922 = &v1022[*((int *)v1115 + 12)];
    v923 = &v1022[*((int *)v1116 + 12)];
    v924 = &v1022[*((int *)v1117 + 12)];
    v925 = &v1022[*((int *)v1118 + 12)];
    v1005 = &v1022[*((int *)v1119 + 12)];
    v735 = &v1022[*((int *)v1120 + 12)];
    uint64_t v286 = v735;
    v736 = &v1022[*((int *)v1121 + 12)];
    uint64_t v287 = v736;
    uint64_t v737 = &v1022[*((int *)v1122 + 12)];
    uint64_t v288 = v737;
    uint64_t v915 = &v1022[*(int *)(v1123 + 48)];
    v738 = &v1022[*((int *)v1124 + 12)];
    uint64_t v289 = v738;
    v739 = &v1022[*((int *)v1125 + 12)];
    uint64_t v290 = v739;
    v740 = &v1022[*((int *)v1126 + 12)];
    uint64_t v291 = v740;
    v741 = &v1022[*((int *)v1127 + 12)];
    uint64_t v292 = v741;
    v742 = &v1022[*((int *)v1128 + 12)];
    uint64_t v293 = v742;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v293, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v292, v1073, v1129);
    v1040(v291, v1071, v1138);
    v1039(v290, v1070, v1148);
    v1030(v289, v1096, v284);
    uint64_t v294 = v915;
    uint64_t v295 = v1135;
    v1029(v915, v1097, v1135);
    v1028(v288, v1098, v1147);
    v1025(v287, v1099, v1145);
    v1027(v286, v1089, v1134);
    v1034(v1005, v1090, v1144);
    v1033(v925, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v924, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v923, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v922, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v921, v1095, v1141);
    v1058(v920, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v919, v1088, v1131);
    v1054(v918, v1084, v1130);
    v1052(v917, v1085, v1140);
    v1050(v916, v1086, v1139);
    uint64_t v296 = (void (*)(char *, char *, uint64_t))v1106[4];
    v666 = v1106 + 4;
    v667 = v296;
    v296(v1006, v294, v295);
    uint64_t v906 = &v1021[*(int *)(v1109 + 48)];
    uint64_t v907 = &v1021[*((int *)v1110 + 12)];
    uint64_t v908 = &v1021[*((int *)v1111 + 12)];
    uint64_t v909 = &v1021[*((int *)v1112 + 12)];
    uint64_t v910 = &v1021[*((int *)v1113 + 12)];
    uint64_t v911 = &v1021[*((int *)v1114 + 12)];
    uint64_t v912 = &v1021[*((int *)v1115 + 12)];
    uint64_t v913 = &v1021[*((int *)v1116 + 12)];
    uint64_t v914 = &v1021[*((int *)v1117 + 12)];
    uint64_t v915 = &v1021[*((int *)v1118 + 12)];
    v1006 = &v1021[*((int *)v1119 + 12)];
    v726 = &v1021[*((int *)v1120 + 12)];
    uint64_t v297 = v726;
    v727 = &v1021[*((int *)v1121 + 12)];
    uint64_t v298 = v727;
    uint64_t v905 = &v1021[*((int *)v1122 + 12)];
    v729 = &v1021[*(int *)(v1123 + 48)];
    uint64_t v299 = v729;
    v730 = &v1021[*((int *)v1124 + 12)];
    v300 = v730;
    v731 = &v1021[*((int *)v1125 + 12)];
    uint64_t v301 = v731;
    v732 = &v1021[*((int *)v1126 + 12)];
    uint64_t v302 = v732;
    v733 = &v1021[*((int *)v1127 + 12)];
    v303 = v733;
    v734 = &v1021[*((int *)v1128 + 12)];
    uint64_t v304 = v734;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v304, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v303, v1073, v1129);
    v1040(v302, v1071, v1138);
    v1039(v301, v1070, v1148);
    v1030(v300, v1096, v1136);
    v1029(v299, v1097, v295);
    uint64_t v305 = v905;
    uint64_t v306 = v1147;
    v1028(v905, v1098, v1147);
    v1025(v298, v1099, v1145);
    v1027(v297, v1089, v1134);
    v1034(v1006, v1090, v1144);
    v1033(v915, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v914, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v913, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v912, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v911, v1095, v1141);
    v1058(v910, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v909, v1088, v1131);
    v1054(v908, v1084, v1130);
    v1052(v907, v1085, v1140);
    v1050(v906, v1086, v1139);
    uint64_t v307 = (void (*)(char *, char *, uint64_t))v1079[4];
    v663 = v1079 + 4;
    v664 = v307;
    v307(v1007, v305, v306);
    v897 = &v1020[*(int *)(v1109 + 48)];
    uint64_t v898 = &v1020[*((int *)v1110 + 12)];
    v899 = &v1020[*((int *)v1111 + 12)];
    v900 = &v1020[*((int *)v1112 + 12)];
    v901 = &v1020[*((int *)v1113 + 12)];
    v902 = &v1020[*((int *)v1114 + 12)];
    v903 = &v1020[*((int *)v1115 + 12)];
    uint64_t v904 = &v1020[*((int *)v1116 + 12)];
    uint64_t v905 = &v1020[*((int *)v1117 + 12)];
    v1007 = &v1020[*((int *)v1118 + 12)];
    v716 = &v1020[*((int *)v1119 + 12)];
    uint64_t v308 = v716;
    v717 = &v1020[*((int *)v1120 + 12)];
    uint64_t v309 = v717;
    v895 = &v1020[*((int *)v1121 + 12)];
    v718 = &v1020[*((int *)v1122 + 12)];
    uint64_t v310 = v718;
    v719 = &v1020[*(int *)(v1123 + 48)];
    uint64_t v311 = v719;
    v720 = &v1020[*((int *)v1124 + 12)];
    uint64_t v312 = v720;
    v721 = &v1020[*((int *)v1125 + 12)];
    uint64_t v313 = v721;
    v722 = &v1020[*((int *)v1126 + 12)];
    uint64_t v314 = v722;
    v723 = &v1020[*((int *)v1127 + 12)];
    uint64_t v315 = v723;
    v724 = &v1020[*((int *)v1128 + 12)];
    uint64_t v316 = v724;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v316, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v315, v1073, v1129);
    v1040(v314, v1071, v1138);
    v1039(v313, v1070, v1148);
    v1030(v312, v1096, v1136);
    v1029(v311, v1097, v1135);
    v1028(v310, v1098, v1147);
    uint64_t v317 = v895;
    uint64_t v318 = v1145;
    v1025(v895, v1099, v1145);
    v1027(v309, v1089, v1134);
    v1034(v308, v1090, v1144);
    v1033(v1007, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v905, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v904, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v903, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v902, v1095, v1141);
    v1058(v901, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v900, v1088, v1131);
    v1054(v899, v1084, v1130);
    v1052(v898, v1085, v1140);
    v1050(v897, v1086, v1139);
    uint64_t v319 = (void (*)(char *, char *, uint64_t))v1078[4];
    v653 = v1078 + 4;
    v654 = v319;
    v319(v896, v317, v318);
    uint64_t v887 = &v1019[*(int *)(v1109 + 48)];
    v888 = &v1019[*((int *)v1110 + 12)];
    v889 = &v1019[*((int *)v1111 + 12)];
    v890 = &v1019[*((int *)v1112 + 12)];
    v891 = &v1019[*((int *)v1113 + 12)];
    v892 = &v1019[*((int *)v1114 + 12)];
    v893 = &v1019[*((int *)v1115 + 12)];
    v894 = &v1019[*((int *)v1116 + 12)];
    v895 = &v1019[*((int *)v1117 + 12)];
    v896 = &v1019[*((int *)v1118 + 12)];
    uint64_t v703 = &v1019[*((int *)v1119 + 12)];
    uint64_t v320 = v703;
    uint64_t v885 = &v1019[*((int *)v1120 + 12)];
    uint64_t v706 = &v1019[*((int *)v1121 + 12)];
    uint64_t v321 = v706;
    v707 = &v1019[*((int *)v1122 + 12)];
    uint64_t v322 = v707;
    v708 = &v1019[*(int *)(v1123 + 48)];
    uint64_t v323 = v708;
    v709 = &v1019[*((int *)v1124 + 12)];
    uint64_t v324 = v709;
    v710 = &v1019[*((int *)v1125 + 12)];
    uint64_t v325 = v710;
    v711 = &v1019[*((int *)v1126 + 12)];
    uint64_t v326 = v711;
    v712 = &v1019[*((int *)v1127 + 12)];
    uint64_t v327 = v712;
    v713 = &v1019[*((int *)v1128 + 12)];
    v328 = v713;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v328, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v327, v1073, v1129);
    v1040(v326, v1071, v1138);
    v1039(v325, v1070, v1148);
    v1030(v324, v1096, v1136);
    v1029(v323, v1097, v1135);
    v1028(v322, v1098, v1147);
    v1025(v321, v1099, v1145);
    uint64_t v329 = v885;
    uint64_t v330 = v1134;
    v1027(v885, v1089, v1134);
    v1034(v320, v1090, v1144);
    v1033(v896, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v895, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v894, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v893, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v892, v1095, v1141);
    v1058(v891, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v890, v1088, v1131);
    v1054(v889, v1084, v1130);
    v1052(v888, v1085, v1140);
    v1050(v887, v1086, v1139);
    uint64_t v331 = (void (*)(char *, char *, uint64_t))v1105[4];
    uint64_t v645 = v1105 + 4;
    uint64_t v646 = v331;
    v331(v886, v329, v330);
    v877 = &v1018[*(int *)(v1109 + 48)];
    v878 = &v1018[*((int *)v1110 + 12)];
    v879 = &v1018[*((int *)v1111 + 12)];
    v880 = &v1018[*((int *)v1112 + 12)];
    v881 = &v1018[*((int *)v1113 + 12)];
    v882 = &v1018[*((int *)v1114 + 12)];
    v883 = &v1018[*((int *)v1115 + 12)];
    v884 = &v1018[*((int *)v1116 + 12)];
    uint64_t v885 = &v1018[*((int *)v1117 + 12)];
    v886 = &v1018[*((int *)v1118 + 12)];
    v875 = &v1018[*((int *)v1119 + 12)];
    uint64_t v692 = &v1018[*((int *)v1120 + 12)];
    uint64_t v332 = v692;
    uint64_t v693 = &v1018[*((int *)v1121 + 12)];
    uint64_t v333 = v693;
    uint64_t v694 = &v1018[*((int *)v1122 + 12)];
    uint64_t v334 = v694;
    uint64_t v695 = &v1018[*(int *)(v1123 + 48)];
    uint64_t v335 = v695;
    uint64_t v696 = &v1018[*((int *)v1124 + 12)];
    uint64_t v336 = v696;
    uint64_t v697 = &v1018[*((int *)v1125 + 12)];
    uint64_t v337 = v697;
    uint64_t v698 = &v1018[*((int *)v1126 + 12)];
    uint64_t v338 = v698;
    uint64_t v699 = &v1018[*((int *)v1127 + 12)];
    uint64_t v339 = v699;
    uint64_t v700 = &v1018[*((int *)v1128 + 12)];
    uint64_t v340 = v700;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v340, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v339, v1073, v1129);
    v1040(v338, v1071, v1138);
    v1039(v337, v1070, v1148);
    v1030(v336, v1096, v1136);
    v1029(v335, v1097, v1135);
    v1028(v334, v1098, v1147);
    v1025(v333, v1099, v1145);
    v1027(v332, v1089, v1134);
    uint64_t v341 = v875;
    uint64_t v342 = v1144;
    v1034(v875, v1090, v1144);
    v1033(v886, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v885, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v884, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v883, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v882, v1095, v1141);
    v1058(v881, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v880, v1088, v1131);
    v1054(v879, v1084, v1130);
    v1052(v878, v1085, v1140);
    v1050(v877, v1086, v1139);
    uint64_t v343 = (void (*)(char *, char *, uint64_t))v1104[4];
    uint64_t v640 = v1104 + 4;
    uint64_t v641 = v343;
    v343(v876, v341, v342);
    v867 = &v1017[*(int *)(v1109 + 48)];
    v868 = &v1017[*((int *)v1110 + 12)];
    v869 = &v1017[*((int *)v1111 + 12)];
    v870 = &v1017[*((int *)v1112 + 12)];
    v871 = &v1017[*((int *)v1113 + 12)];
    v872 = &v1017[*((int *)v1114 + 12)];
    v873 = &v1017[*((int *)v1115 + 12)];
    v874 = &v1017[*((int *)v1116 + 12)];
    v875 = &v1017[*((int *)v1117 + 12)];
    v865 = &v1017[*((int *)v1118 + 12)];
    v876 = &v1017[*((int *)v1119 + 12)];
    v679 = &v1017[*((int *)v1120 + 12)];
    uint64_t v344 = v679;
    v680 = &v1017[*((int *)v1121 + 12)];
    uint64_t v345 = v680;
    v681 = &v1017[*((int *)v1122 + 12)];
    uint64_t v346 = v681;
    v682 = &v1017[*(int *)(v1123 + 48)];
    uint64_t v347 = v682;
    v685 = &v1017[*((int *)v1124 + 12)];
    uint64_t v348 = v685;
    v686 = &v1017[*((int *)v1125 + 12)];
    uint64_t v349 = v686;
    uint64_t v687 = &v1017[*((int *)v1126 + 12)];
    v350 = v687;
    uint64_t v688 = &v1017[*((int *)v1127 + 12)];
    uint64_t v351 = v688;
    v689 = &v1017[*((int *)v1128 + 12)];
    uint64_t v352 = v689;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v352, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v351, v1073, v1129);
    v1040(v350, v1071, v1138);
    v1039(v349, v1070, v1148);
    v1030(v348, v1096, v1136);
    v1029(v347, v1097, v1135);
    v1028(v346, v1098, v1147);
    v1025(v345, v1099, v1145);
    v1027(v344, v1089, v1134);
    v1034(v876, v1090, v1144);
    uint64_t v353 = v865;
    uint64_t v354 = v1133;
    v1033(v865, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v875, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v874, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v873, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v872, v1095, v1141);
    v1058(v871, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v870, v1088, v1131);
    v1054(v869, v1084, v1130);
    v1052(v868, v1085, v1140);
    v1050(v867, v1086, v1139);
    uint64_t v355 = (void (*)(char *, char *, uint64_t))v1103[4];
    v629 = v1103 + 4;
    v630 = v355;
    v355(v866, v353, v354);
    v857 = &v1016[*(int *)(v1109 + 48)];
    v858 = &v1016[*((int *)v1110 + 12)];
    v859 = &v1016[*((int *)v1111 + 12)];
    v860 = &v1016[*((int *)v1112 + 12)];
    v861 = &v1016[*((int *)v1113 + 12)];
    v862 = &v1016[*((int *)v1114 + 12)];
    v863 = &v1016[*((int *)v1115 + 12)];
    v864 = &v1016[*((int *)v1116 + 12)];
    v855 = &v1016[*((int *)v1117 + 12)];
    v865 = &v1016[*((int *)v1118 + 12)];
    v866 = &v1016[*((int *)v1119 + 12)];
    v668 = &v1016[*((int *)v1120 + 12)];
    uint64_t v356 = v668;
    v669 = &v1016[*((int *)v1121 + 12)];
    uint64_t v357 = v669;
    v670 = &v1016[*((int *)v1122 + 12)];
    uint64_t v358 = v670;
    v671 = &v1016[*(int *)(v1123 + 48)];
    uint64_t v359 = v671;
    v672 = &v1016[*((int *)v1124 + 12)];
    uint64_t v360 = v672;
    v673 = &v1016[*((int *)v1125 + 12)];
    uint64_t v361 = v673;
    v674 = &v1016[*((int *)v1126 + 12)];
    uint64_t v362 = v674;
    v675 = &v1016[*((int *)v1127 + 12)];
    uint64_t v363 = v675;
    v676 = &v1016[*((int *)v1128 + 12)];
    uint64_t v364 = v676;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v364, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v363, v1073, v1129);
    v1040(v362, v1071, v1138);
    v1039(v361, v1070, v1148);
    v1030(v360, v1096, v1136);
    v1029(v359, v1097, v1135);
    v1028(v358, v1098, v1147);
    v1025(v357, v1099, v1145);
    v1027(v356, v1089, v1134);
    v1034(v866, v1090, v1144);
    v1033(v865, v1091, v1133);
    uint64_t v365 = v855;
    uint64_t v366 = v1149;
    ((void (*)(char *, char *, uint64_t))v1066)(v855, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v864, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v863, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v862, v1095, v1141);
    v1058(v861, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v860, v1088, v1131);
    v1054(v859, v1084, v1130);
    v1052(v858, v1085, v1140);
    v1050(v857, v1086, v1139);
    uint64_t v367 = (void (*)(uint64_t, char *, uint64_t))v1102[4];
    v625 = v1102 + 4;
    v626 = v367;
    v367((uint64_t)v856, v365, v366);
    uint64_t v847 = &v1015[*(int *)(v1109 + 48)];
    uint64_t v848 = &v1015[*((int *)v1110 + 12)];
    uint64_t v849 = &v1015[*((int *)v1111 + 12)];
    uint64_t v850 = &v1015[*((int *)v1112 + 12)];
    uint64_t v851 = &v1015[*((int *)v1113 + 12)];
    v852 = &v1015[*((int *)v1114 + 12)];
    v853 = &v1015[*((int *)v1115 + 12)];
    uint64_t v845 = &v1015[*((int *)v1116 + 12)];
    v854 = &v1015[*((int *)v1117 + 12)];
    v855 = &v1015[*((int *)v1118 + 12)];
    v856 = &v1015[*((int *)v1119 + 12)];
    v655 = &v1015[*((int *)v1120 + 12)];
    uint64_t v368 = v655;
    uint64_t v656 = &v1015[*((int *)v1121 + 12)];
    uint64_t v369 = v656;
    v657 = &v1015[*((int *)v1122 + 12)];
    uint64_t v370 = v657;
    v658 = &v1015[*(int *)(v1123 + 48)];
    uint64_t v371 = v658;
    v659 = &v1015[*((int *)v1124 + 12)];
    uint64_t v372 = v659;
    v660 = &v1015[*((int *)v1125 + 12)];
    uint64_t v373 = v660;
    v661 = &v1015[*((int *)v1126 + 12)];
    uint64_t v374 = v661;
    v662 = &v1015[*((int *)v1127 + 12)];
    uint64_t v375 = v662;
    v665 = &v1015[*((int *)v1128 + 12)];
    uint64_t v376 = v665;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v376, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v375, v1073, v1129);
    v1040(v374, v1071, v1138);
    v1039(v373, v1070, v1148);
    v1030(v372, v1096, v1136);
    v1029(v371, v1097, v1135);
    v1028(v370, v1098, v1147);
    v1025(v369, v1099, v1145);
    v1027(v368, v1089, v1134);
    v1034(v856, v1090, v1144);
    v1033(v855, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v854, v1092, v1149);
    uint64_t v377 = v845;
    uint64_t v378 = v1143;
    ((void (*)(char *, char *, uint64_t))v1064)(v845, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v853, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v852, v1095, v1141);
    v1058(v851, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v850, v1088, v1131);
    v1054(v849, v1084, v1130);
    v1052(v848, v1085, v1140);
    v1050(v847, v1086, v1139);
    uint64_t v379 = (void (*)(char *, char *, uint64_t))v1077[4];
    v617 = v1077 + 4;
    v618 = v379;
    v379(v846, v377, v378);
    uint64_t v837 = &v1014[*(int *)(v1109 + 48)];
    uint64_t v838 = &v1014[*((int *)v1110 + 12)];
    uint64_t v839 = &v1014[*((int *)v1111 + 12)];
    uint64_t v840 = &v1014[*((int *)v1112 + 12)];
    uint64_t v841 = &v1014[*((int *)v1113 + 12)];
    uint64_t v842 = &v1014[*((int *)v1114 + 12)];
    uint64_t v835 = &v1014[*((int *)v1115 + 12)];
    uint64_t v843 = &v1014[*((int *)v1116 + 12)];
    uint64_t v844 = &v1014[*((int *)v1117 + 12)];
    uint64_t v845 = &v1014[*((int *)v1118 + 12)];
    uint64_t v846 = &v1014[*((int *)v1119 + 12)];
    uint64_t v642 = &v1014[*((int *)v1120 + 12)];
    uint64_t v380 = v642;
    uint64_t v643 = &v1014[*((int *)v1121 + 12)];
    uint64_t v381 = v643;
    uint64_t v644 = &v1014[*((int *)v1122 + 12)];
    uint64_t v382 = v644;
    uint64_t v647 = &v1014[*(int *)(v1123 + 48)];
    uint64_t v383 = v647;
    uint64_t v648 = &v1014[*((int *)v1124 + 12)];
    uint64_t v384 = v648;
    uint64_t v649 = &v1014[*((int *)v1125 + 12)];
    v385 = v649;
    uint64_t v650 = &v1014[*((int *)v1126 + 12)];
    uint64_t v386 = v650;
    uint64_t v651 = &v1014[*((int *)v1127 + 12)];
    uint64_t v387 = v651;
    v652 = &v1014[*((int *)v1128 + 12)];
    uint64_t v388 = v652;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v388, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v387, v1073, v1129);
    v1040(v386, v1071, v1138);
    v1039(v385, v1070, v1148);
    v1030(v384, v1096, v1136);
    v1029(v383, v1097, v1135);
    v1028(v382, v1098, v1147);
    v1025(v381, v1099, v1145);
    v1027(v380, v1089, v1134);
    v1034(v846, v1090, v1144);
    v1033(v845, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v844, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v843, v1093, v1143);
    uint64_t v389 = v835;
    uint64_t v390 = v1142;
    ((void (*)(char *, char *, uint64_t))v1062)(v835, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v842, v1095, v1141);
    v1058(v841, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v840, v1088, v1131);
    v1054(v839, v1084, v1130);
    v1052(v838, v1085, v1140);
    v1050(v837, v1086, v1139);
    uint64_t v391 = (void (*)(char *, char *, uint64_t))v1069[4];
    v607 = v1069 + 4;
    v608 = v391;
    v391(v836, v389, v390);
    v827 = &v1013[*(int *)(v1109 + 48)];
    v828 = &v1013[*((int *)v1110 + 12)];
    v829 = &v1013[*((int *)v1111 + 12)];
    v830 = &v1013[*((int *)v1112 + 12)];
    v831 = &v1013[*((int *)v1113 + 12)];
    v825 = &v1013[*((int *)v1114 + 12)];
    uint64_t v832 = &v1013[*((int *)v1115 + 12)];
    v833 = &v1013[*((int *)v1116 + 12)];
    v834 = &v1013[*((int *)v1117 + 12)];
    uint64_t v835 = &v1013[*((int *)v1118 + 12)];
    uint64_t v836 = &v1013[*((int *)v1119 + 12)];
    uint64_t v631 = &v1013[*((int *)v1120 + 12)];
    uint64_t v392 = v631;
    uint64_t v632 = &v1013[*((int *)v1121 + 12)];
    uint64_t v393 = v632;
    v633 = &v1013[*((int *)v1122 + 12)];
    uint64_t v394 = v633;
    uint64_t v634 = &v1013[*(int *)(v1123 + 48)];
    uint64_t v395 = v634;
    v635 = &v1013[*((int *)v1124 + 12)];
    uint64_t v396 = v635;
    v636 = &v1013[*((int *)v1125 + 12)];
    uint64_t v397 = v636;
    uint64_t v637 = &v1013[*((int *)v1126 + 12)];
    uint64_t v398 = v637;
    uint64_t v638 = &v1013[*((int *)v1127 + 12)];
    uint64_t v399 = v638;
    uint64_t v639 = &v1013[*((int *)v1128 + 12)];
    uint64_t v400 = v639;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v400, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v399, v1073, v1129);
    v1040(v398, v1071, v1138);
    v1039(v397, v1070, v1148);
    v1030(v396, v1096, v1136);
    v1029(v395, v1097, v1135);
    v1028(v394, v1098, v1147);
    v1025(v393, v1099, v1145);
    v1027(v392, v1089, v1134);
    v1034(v836, v1090, v1144);
    v1033(v835, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v834, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v833, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v832, v1094, v1142);
    v401 = v825;
    uint64_t v402 = v1141;
    ((void (*)(char *, char *, uint64_t))v1060)(v825, v1095, v1141);
    v1058(v831, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v830, v1088, v1131);
    v1054(v829, v1084, v1130);
    v1052(v828, v1085, v1140);
    v1050(v827, v1086, v1139);
    uint64_t v403 = (void (*)(char *, char *, uint64_t))v1076[4];
    v605 = v1076 + 4;
    v606 = v403;
    v403(v826, v401, v402);
    v817 = &v1012[*(int *)(v1109 + 48)];
    v818 = &v1012[*((int *)v1110 + 12)];
    uint64_t v819 = &v1012[*((int *)v1111 + 12)];
    v820 = &v1012[*((int *)v1112 + 12)];
    uint64_t v404 = &v1012[*((int *)v1113 + 12)];
    v821 = &v1012[*((int *)v1114 + 12)];
    v822 = &v1012[*((int *)v1115 + 12)];
    v823 = &v1012[*((int *)v1116 + 12)];
    uint64_t v824 = &v1012[*((int *)v1117 + 12)];
    v825 = &v1012[*((int *)v1118 + 12)];
    v826 = &v1012[*((int *)v1119 + 12)];
    v816 = &v1012[*((int *)v1120 + 12)];
    v619 = &v1012[*((int *)v1121 + 12)];
    uint64_t v405 = v619;
    v620 = &v1012[*((int *)v1122 + 12)];
    uint64_t v406 = v620;
    v621 = &v1012[*(int *)(v1123 + 48)];
    uint64_t v407 = v621;
    v622 = &v1012[*((int *)v1124 + 12)];
    uint64_t v408 = v622;
    v623 = &v1012[*((int *)v1125 + 12)];
    uint64_t v409 = v623;
    v624 = &v1012[*((int *)v1126 + 12)];
    uint64_t v410 = v624;
    v627 = &v1012[*((int *)v1127 + 12)];
    uint64_t v411 = v627;
    v628 = &v1012[*((int *)v1128 + 12)];
    uint64_t v412 = v628;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v412, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v411, v1073, v1129);
    v1040(v410, v1071, v1138);
    v1039(v409, v1070, v1148);
    v1030(v408, v1096, v1136);
    v1029(v407, v1097, v1135);
    v1028(v406, v1098, v1147);
    v1025(v405, v1099, v1145);
    v1027(v816, v1089, v1134);
    v1034(v826, v1090, v1144);
    v1033(v825, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v824, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v823, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v822, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v821, v1095, v1141);
    uint64_t v413 = v1132;
    v1058(v404, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v820, v1088, v1131);
    v1054(v819, v1084, v1130);
    v1052(v818, v1085, v1140);
    v1050(v817, v1086, v1139);
    uint64_t v414 = (void (*)(char *, char *, uint64_t))v1100[4];
    v595 = v1100 + 4;
    v596 = v414;
    v414(v815, v404, v413);
    v806 = &v1011[*(int *)(v1109 + 48)];
    v807 = &v1011[*((int *)v1110 + 12)];
    v808 = &v1011[*((int *)v1111 + 12)];
    uint64_t v415 = &v1011[*((int *)v1112 + 12)];
    v809 = &v1011[*((int *)v1113 + 12)];
    v810 = &v1011[*((int *)v1114 + 12)];
    v811 = &v1011[*((int *)v1115 + 12)];
    v812 = &v1011[*((int *)v1116 + 12)];
    v813 = &v1011[*((int *)v1117 + 12)];
    v814 = &v1011[*((int *)v1118 + 12)];
    v815 = &v1011[*((int *)v1119 + 12)];
    v805 = &v1011[*((int *)v1120 + 12)];
    v609 = &v1011[*((int *)v1121 + 12)];
    uint64_t v416 = v609;
    v610 = &v1011[*((int *)v1122 + 12)];
    uint64_t v417 = v610;
    v611 = &v1011[*(int *)(v1123 + 48)];
    uint64_t v418 = v611;
    v612 = &v1011[*((int *)v1124 + 12)];
    uint64_t v419 = v612;
    v613 = &v1011[*((int *)v1125 + 12)];
    uint64_t v420 = v613;
    uint64_t v614 = &v1011[*((int *)v1126 + 12)];
    uint64_t v421 = v614;
    v615 = &v1011[*((int *)v1127 + 12)];
    uint64_t v422 = v615;
    uint64_t v616 = &v1011[*((int *)v1128 + 12)];
    uint64_t v423 = v616;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v423, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v422, v1073, v1129);
    v1040(v421, v1071, v1138);
    v1039(v420, v1070, v1148);
    v1030(v419, v1096, v1136);
    v1029(v418, v1097, v1135);
    v1028(v417, v1098, v1147);
    v1025(v416, v1099, v1145);
    v1027(v805, v1089, v1134);
    v1034(v815, v1090, v1144);
    v1033(v814, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v813, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v812, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v811, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v810, v1095, v1141);
    v1058(v809, v1087, v1132);
    uint64_t v424 = v1131;
    ((void (*)(char *, char *, uint64_t))v1056)(v415, v1088, v1131);
    v1054(v808, v1084, v1130);
    v1052(v807, v1085, v1140);
    v1050(v806, v1086, v1139);
    uint64_t v425 = (void (*)(char *, char *, uint64_t))v1075[4];
    uint64_t v589 = v1075 + 4;
    uint64_t v590 = v425;
    v425(v804, v415, v424);
    v795 = &v1010[*(int *)(v1109 + 48)];
    v796 = &v1010[*((int *)v1110 + 12)];
    uint64_t v426 = &v1010[*((int *)v1111 + 12)];
    v797 = &v1010[*((int *)v1112 + 12)];
    v798 = &v1010[*((int *)v1113 + 12)];
    v799 = &v1010[*((int *)v1114 + 12)];
    v800 = &v1010[*((int *)v1115 + 12)];
    v801 = &v1010[*((int *)v1116 + 12)];
    v802 = &v1010[*((int *)v1117 + 12)];
    v803 = &v1010[*((int *)v1118 + 12)];
    v804 = &v1010[*((int *)v1119 + 12)];
    v794 = &v1010[*((int *)v1120 + 12)];
    v597 = &v1010[*((int *)v1121 + 12)];
    uint64_t v427 = v597;
    v598 = &v1010[*((int *)v1122 + 12)];
    uint64_t v428 = v598;
    v599 = &v1010[*(int *)(v1123 + 48)];
    uint64_t v429 = v599;
    v600 = &v1010[*((int *)v1124 + 12)];
    uint64_t v430 = v600;
    v601 = &v1010[*((int *)v1125 + 12)];
    uint64_t v431 = v601;
    v602 = &v1010[*((int *)v1126 + 12)];
    uint64_t v432 = v602;
    v603 = &v1010[*((int *)v1127 + 12)];
    uint64_t v433 = v603;
    v604 = &v1010[*((int *)v1128 + 12)];
    uint64_t v434 = v604;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v434, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v433, v1073, v1129);
    v1040(v432, v1071, v1138);
    v1039(v431, v1070, v1148);
    v1030(v430, v1096, v1136);
    v1029(v429, v1097, v1135);
    v1028(v428, v1098, v1147);
    uint64_t v435 = v427;
    uint64_t v436 = v1025;
    v1025(v435, v1099, v1145);
    v1027(v794, v1089, v1134);
    v1034(v804, v1090, v1144);
    v1033(v803, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v802, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v801, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v800, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v799, v1095, v1141);
    v1058(v798, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v797, v1088, v1131);
    uint64_t v437 = v426;
    uint64_t v438 = v426;
    uint64_t v439 = v1130;
    v1054(v438, v1084, v1130);
    v1052(v796, v1085, v1140);
    v1050(v795, v1086, v1139);
    uint64_t v440 = (void (*)(char *, char *, uint64_t))v1068[4];
    v583[1] = v1068 + 4;
    uint64_t v584 = v440;
    v440(v793, v437, v439);
    uint64_t v783 = &v1009[*(int *)(v1109 + 48)];
    v583[0] = &v1009[*((int *)v1110 + 12)];
    uint64_t v784 = &v1009[*((int *)v1111 + 12)];
    uint64_t v785 = &v1009[*((int *)v1112 + 12)];
    uint64_t v786 = &v1009[*((int *)v1113 + 12)];
    uint64_t v787 = &v1009[*((int *)v1114 + 12)];
    v788 = &v1009[*((int *)v1115 + 12)];
    v789 = &v1009[*((int *)v1116 + 12)];
    v790 = &v1009[*((int *)v1117 + 12)];
    v791 = &v1009[*((int *)v1118 + 12)];
    v792 = &v1009[*((int *)v1119 + 12)];
    v793 = &v1009[*((int *)v1120 + 12)];
    uint64_t v585 = &v1009[*((int *)v1121 + 12)];
    uint64_t v441 = v585;
    uint64_t v586 = &v1009[*((int *)v1122 + 12)];
    uint64_t v442 = v586;
    uint64_t v587 = &v1009[*(int *)(v1123 + 48)];
    uint64_t v443 = v587;
    uint64_t v588 = &v1009[*((int *)v1124 + 12)];
    uint64_t v444 = v588;
    uint64_t v591 = &v1009[*((int *)v1125 + 12)];
    uint64_t v445 = v591;
    uint64_t v592 = &v1009[*((int *)v1126 + 12)];
    uint64_t v446 = v592;
    v593 = &v1009[*((int *)v1127 + 12)];
    uint64_t v447 = v593;
    v594 = &v1009[*((int *)v1128 + 12)];
    uint64_t v448 = v594;
    v1037();
    ((void (*)(char *, char *, uint64_t))v1043)(v448, v1074, v1137);
    ((void (*)(char *, char *, uint64_t))v1036)(v447, v1073, v1129);
    v1040(v446, v1071, v1138);
    v1039(v445, v1070, v1148);
    v1030(v444, v1096, v1136);
    v1029(v443, v1097, v1135);
    v1028(v442, v1098, v1147);
    v436(v441, v1099, v1145);
    uint64_t v449 = v1134;
    v1027(v793, v1089, v1134);
    v1034(v792, v1090, v1144);
    v1033(v791, v1091, v1133);
    ((void (*)(char *, char *, uint64_t))v1066)(v790, v1092, v1149);
    ((void (*)(char *, char *, uint64_t))v1064)(v789, v1093, v1143);
    ((void (*)(char *, char *, uint64_t))v1062)(v788, v1094, v1142);
    ((void (*)(char *, char *, uint64_t))v1060)(v787, v1095, v1141);
    v1058(v786, v1087, v1132);
    ((void (*)(char *, char *, uint64_t))v1056)(v785, v1088, v1131);
    v1054(v784, v1084, v1130);
    uint64_t v450 = (char *)v583[0];
    uint64_t v451 = v1140;
    v1052((char *)v583[0], v1085, v1140);
    v1050(v783, v1086, v1139);
    uint64_t v452 = (void (*)(char *, char *, uint64_t))v1067[4];
    uint64_t v1057 = v1067 + 4;
    uint64_t v1058 = v452;
    v452(v725, v450, v451);
    uint64_t v453 = v1008;
    uint64_t v1059 = &v1008[*(int *)(v1109 + 48)];
    uint64_t v1056 = &v1008[*((int *)v1110 + 12)];
    uint64_t v1064 = &v1008[*((int *)v1111 + 12)];
    v1111 = &v1008[*((int *)v1112 + 12)];
    uint64_t v1065 = &v1008[*((int *)v1113 + 12)];
    v1112 = &v1008[*((int *)v1114 + 12)];
    uint64_t v1066 = &v1008[*((int *)v1115 + 12)];
    v1115 = &v1008[*((int *)v1116 + 12)];
    uint64_t v1109 = (uint64_t)&v1008[*((int *)v1117 + 12)];
    v1110 = &v1008[*((int *)v1118 + 12)];
    v1114 = &v1008[*((int *)v1119 + 12)];
    v1119 = &v1008[*((int *)v1120 + 12)];
    v1120 = &v1008[*((int *)v1121 + 12)];
    uint64_t v1060 = &v1008[*((int *)v1122 + 12)];
    uint64_t v454 = v1060;
    uint64_t v1061 = &v1008[*(int *)(v1123 + 48)];
    uint64_t v455 = v1061;
    uint64_t v1062 = &v1008[*((int *)v1124 + 12)];
    uint64_t v456 = v1062;
    uint64_t v1063 = &v1008[*((int *)v1125 + 12)];
    uint64_t v457 = v1063;
    v1122 = &v1008[*((int *)v1126 + 12)];
    uint64_t v458 = v1122;
    v1127 = &v1008[*((int *)v1127 + 12)];
    uint64_t v459 = v1127;
    v1126 = &v1008[*((int *)v1128 + 12)];
    uint64_t v460 = v1126;
    v715(v1008, v1072, v1146);
    v705(v460, v1074, v1137);
    v702(v459, v1073, v1129);
    v691(v458, v1071, v1138);
    v684(v457, v1070, v1148);
    v678(v456, v1096, v1136);
    v667(v455, v1097, v1135);
    v664(v454, v1098, v1147);
    v654(v1120, v1099, v1145);
    v646(v1119, v1089, v449);
    v641(v1114, v1090, v1144);
    v630(v1110, v1091, v1133);
    v626(v1109, v1092, v1149);
    v618(v1115, v1093, v1143);
    v608(v1066, v1094, v1142);
    v606(v1112, v1095, v1141);
    v596(v1065, v1087, v1132);
    uint64_t v461 = v1131;
    v590(v1111, v1088, v1131);
    uint64_t v462 = v1130;
    v584(v1064, v1084, v1130);
    uint64_t v463 = v1056;
    uint64_t v464 = v1140;
    v1058(v1056, v1085, v1140);
    uint64_t v465 = (void (*)(char *, char *, uint64_t))v1101[4];
    uint64_t v466 = v1059;
    uint64_t v467 = v1139;
    v465(v1059, v1086, v1139);
    v465(v728, v466, v467);
    uint64_t v468 = (char *)v1067[1];
    ++v1067;
    v1099 = v468;
    ((void (*)(char *, uint64_t))v468)(v463, v464);
    uint64_t v469 = (int *)v1068[1];
    ++v1068;
    v1118 = (void (*)(char *, uint64_t))v469;
    ((void (*)(char *, uint64_t))v469)(v1064, v462);
    uint64_t v470 = (int *)v1075[1];
    ++v1075;
    v1113 = (void (*)(char *, uint64_t))v470;
    ((void (*)(char *, uint64_t))v470)(v1111, v461);
    v1111 = (char *)v1100[1];
    ++v1100;
    ((void (*)(char *, uint64_t))v1111)(v1065, v1132);
    uint64_t v471 = (void (*)(char *, uint64_t))v1076[1];
    ++v1076;
    uint64_t v472 = v1141;
    v471(v1112, v1141);
    v1117 = v471;
    uint64_t v473 = (char *)v1069[1];
    ++v1069;
    v1112 = v473;
    ((void (*)(char *, uint64_t))v473)(v1066, v1142);
    uint64_t v474 = (int *)v1077[1];
    ++v1077;
    v1116 = (void (*)(char *, uint64_t))v474;
    uint64_t v475 = v1143;
    ((void (*)(char *, uint64_t))v474)(v1115, v1143);
    uint64_t v476 = (char *)v1102[1];
    ++v1102;
    v1115 = v476;
    ((void (*)(uint64_t, uint64_t))v476)(v1109, v1149);
    uint64_t v1123 = v1103[1];
    ++v1103;
    ((void (*)(char *, uint64_t))v1123)(v1110, v1133);
    uint64_t v477 = (int *)v1104[1];
    ++v1104;
    v1125 = (void (*)(char *, uint64_t))v477;
    ((void (*)(char *, uint64_t))v477)(v1114, v1144);
    v1114 = (char *)v1105[1];
    ++v1105;
    uint64_t v478 = v1134;
    ((void (*)(char *, uint64_t))v1114)(v1119, v1134);
    uint64_t v479 = (int *)v1078[1];
    ++v1078;
    v1121 = (void (*)(char *, uint64_t))v479;
    ((void (*)(char *, uint64_t))v479)(v1120, v1145);
    uint64_t v480 = (int *)v1079[1];
    ++v1079;
    v1124 = (void (*)(char *, uint64_t))v480;
    uint64_t v481 = v1147;
    ((void (*)(char *, uint64_t))v480)(v1060, v1147);
    v1120 = (char *)v1106[1];
    ++v1106;
    ((void (*)(char *, uint64_t))v1120)(v1061, v1135);
    uint64_t v482 = (int *)v1080[1];
    ++v1080;
    v1128 = (void (*)(char *, uint64_t))v482;
    uint64_t v483 = v1136;
    ((void (*)(char *, uint64_t))v482)(v1062, v1136);
    v1110 = (char *)v1107[1];
    ++v1107;
    ((void (*)(char *, uint64_t))v1110)(v1063, v1148);
    v1119 = (char *)v1081[1];
    ++v1081;
    ((void (*)(char *, uint64_t))v1119)(v1122, v1138);
    uint64_t v1109 = v1082[1];
    ++v1082;
    uint64_t v484 = v1129;
    ((void (*)(char *, uint64_t))v1109)(v1127, v1129);
    uint64_t v485 = (char *)v1083[1];
    ++v1083;
    v1127 = v485;
    ((void (*)(char *, uint64_t))v485)(v1126, v1137);
    v1122 = (char *)v1108[1];
    ++v1108;
    uint64_t v486 = v1146;
    ((void (*)(char *, uint64_t))v1122)(v453, v1146);
    uint64_t v487 = (char *)v1101[1];
    ++v1101;
    v1126 = v487;
    uint64_t v488 = v1139;
    ((void (*)(char *, uint64_t))v487)(v783, v1139);
    v1118(v784, v1130);
    v1113(v785, v1131);
    ((void (*)(char *, uint64_t))v1111)(v786, v1132);
    v471(v787, v472);
    uint64_t v489 = v1142;
    ((void (*)(char *, uint64_t))v1112)(v788, v1142);
    v1116(v789, v475);
    ((void (*)(char *, uint64_t))v1115)(v790, v1149);
    ((void (*)(char *, uint64_t))v1123)(v791, v1133);
    uint64_t v490 = v1144;
    v1125(v792, v1144);
    ((void (*)(char *, uint64_t))v1114)(v793, v478);
    uint64_t v491 = v1145;
    v1121(v585, v1145);
    v1124(v586, v481);
    uint64_t v492 = v1135;
    ((void (*)(char *, uint64_t))v1120)(v587, v1135);
    v1128(v588, v483);
    uint64_t v493 = v1148;
    ((void (*)(char *, uint64_t))v1110)(v591, v1148);
    ((void (*)(char *, uint64_t))v1119)(v592, v1138);
    ((void (*)(char *, uint64_t))v1109)(v593, v484);
    ((void (*)(char *, uint64_t))v1127)(v594, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1009, v486);
    ((void (*)(char *, uint64_t))v1126)(v795, v488);
    ((void (*)(char *, uint64_t))v1099)(v796, v1140);
    v1113(v797, v1131);
    uint64_t v494 = v1132;
    ((void (*)(char *, uint64_t))v1111)(v798, v1132);
    v1117(v799, v1141);
    ((void (*)(char *, uint64_t))v1112)(v800, v489);
    v1116(v801, v1143);
    uint64_t v495 = v1149;
    ((void (*)(char *, uint64_t))v1115)(v802, v1149);
    uint64_t v496 = v1133;
    ((void (*)(char *, uint64_t))v1123)(v803, v1133);
    v1125(v804, v490);
    uint64_t v497 = v1134;
    ((void (*)(char *, uint64_t))v1114)(v794, v1134);
    v1121(v597, v491);
    v1124(v598, v1147);
    ((void (*)(char *, uint64_t))v1120)(v599, v492);
    v1128(v600, v1136);
    ((void (*)(char *, uint64_t))v1110)(v601, v493);
    uint64_t v498 = v1138;
    uint64_t v499 = v1119;
    ((void (*)(char *, uint64_t))v1119)(v602, v1138);
    uint64_t v500 = (void (*)(char *, uint64_t))v1109;
    ((void (*)(char *, uint64_t))v1109)(v603, v1129);
    ((void (*)(char *, uint64_t))v1127)(v604, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1010, v1146);
    ((void (*)(char *, uint64_t))v1126)(v806, v1139);
    ((void (*)(char *, uint64_t))v1099)(v807, v1140);
    v1118(v808, v1130);
    ((void (*)(char *, uint64_t))v1111)(v809, v494);
    v1117(v810, v1141);
    ((void (*)(char *, uint64_t))v1112)(v811, v1142);
    v1116(v812, v1143);
    ((void (*)(char *, uint64_t))v1115)(v813, v495);
    ((void (*)(char *, uint64_t))v1123)(v814, v496);
    v1125(v815, v1144);
    ((void (*)(char *, uint64_t))v1114)(v805, v497);
    v1121(v609, v1145);
    uint64_t v501 = v1147;
    v1124(v610, v1147);
    ((void (*)(char *, uint64_t))v1120)(v611, v1135);
    uint64_t v502 = v1136;
    v1128(v612, v1136);
    ((void (*)(char *, uint64_t))v1110)(v613, v1148);
    ((void (*)(char *, uint64_t))v499)(v614, v498);
    v500(v615, v1129);
    uint64_t v503 = v1137;
    ((void (*)(char *, uint64_t))v1127)(v616, v1137);
    uint64_t v504 = v1122;
    ((void (*)(char *, uint64_t))v1122)(v1011, v1146);
    ((void (*)(char *, uint64_t))v1126)(v817, v1139);
    ((void (*)(char *, uint64_t))v1099)(v818, v1140);
    uint64_t v505 = v1130;
    v1118(v819, v1130);
    uint64_t v506 = v1131;
    v1113(v820, v1131);
    v1117(v821, v1141);
    uint64_t v507 = v1142;
    ((void (*)(char *, uint64_t))v1112)(v822, v1142);
    v1116(v823, v1143);
    ((void (*)(char *, uint64_t))v1115)(v824, v1149);
    ((void (*)(char *, uint64_t))v1123)(v825, v1133);
    v1125(v826, v1144);
    ((void (*)(char *, uint64_t))v1114)(v816, v1134);
    v1121(v619, v1145);
    v1124(v620, v501);
    uint64_t v508 = v1135;
    ((void (*)(char *, uint64_t))v1120)(v621, v1135);
    v1128(v622, v502);
    ((void (*)(char *, uint64_t))v1110)(v623, v1148);
    ((void (*)(char *, uint64_t))v1119)(v624, v1138);
    ((void (*)(char *, uint64_t))v1109)(v627, v1129);
    ((void (*)(char *, uint64_t))v1127)(v628, v503);
    ((void (*)(char *, uint64_t))v504)(v1012, v1146);
    ((void (*)(char *, uint64_t))v1126)(v827, v1139);
    ((void (*)(char *, uint64_t))v1099)(v828, v1140);
    v1118(v829, v505);
    v1113(v830, v506);
    uint64_t v509 = v1132;
    ((void (*)(char *, uint64_t))v1111)(v831, v1132);
    ((void (*)(char *, uint64_t))v1112)(v832, v507);
    v1116(v833, v1143);
    ((void (*)(char *, uint64_t))v1115)(v834, v1149);
    ((void (*)(char *, uint64_t))v1123)(v835, v1133);
    uint64_t v510 = v1144;
    v1125(v836, v1144);
    ((void (*)(char *, uint64_t))v1114)(v631, v1134);
    uint64_t v511 = v1145;
    v1121(v632, v1145);
    v1124(v633, v1147);
    ((void (*)(char *, uint64_t))v1120)(v634, v508);
    v1128(v635, v1136);
    v512 = v1110;
    ((void (*)(char *, uint64_t))v1110)(v636, v1148);
    ((void (*)(char *, uint64_t))v1119)(v637, v1138);
    ((void (*)(char *, uint64_t))v1109)(v638, v1129);
    ((void (*)(char *, uint64_t))v1127)(v639, v1137);
    uint64_t v513 = v1146;
    ((void (*)(char *, uint64_t))v1122)(v1013, v1146);
    ((void (*)(char *, uint64_t))v1126)(v837, v1139);
    uint64_t v514 = v1140;
    uint64_t v515 = v1099;
    ((void (*)(char *, uint64_t))v1099)(v838, v1140);
    v1118(v839, v1130);
    v1113(v840, v1131);
    uint64_t v516 = v509;
    v517 = v1111;
    ((void (*)(char *, uint64_t))v1111)(v841, v516);
    v1117(v842, v1141);
    v1116(v843, v1143);
    ((void (*)(char *, uint64_t))v1115)(v844, v1149);
    ((void (*)(char *, uint64_t))v1123)(v845, v1133);
    v1125(v846, v510);
    ((void (*)(char *, uint64_t))v1114)(v642, v1134);
    v1121(v643, v511);
    v1124(v644, v1147);
    ((void (*)(char *, uint64_t))v1120)(v647, v1135);
    v1128(v648, v1136);
    ((void (*)(char *, uint64_t))v512)(v649, v1148);
    ((void (*)(char *, uint64_t))v1119)(v650, v1138);
    ((void (*)(char *, uint64_t))v1109)(v651, v1129);
    ((void (*)(char *, uint64_t))v1127)(v652, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1014, v513);
    ((void (*)(char *, uint64_t))v1126)(v847, v1139);
    ((void (*)(char *, uint64_t))v515)(v848, v514);
    uint64_t v518 = v515;
    uint64_t v519 = v1130;
    uint64_t v520 = v1118;
    v1118(v849, v1130);
    uint64_t v521 = v1131;
    v1113(v850, v1131);
    uint64_t v522 = v1132;
    ((void (*)(char *, uint64_t))v517)(v851, v1132);
    uint64_t v523 = v1141;
    v1117(v852, v1141);
    ((void (*)(char *, uint64_t))v1112)(v853, v1142);
    ((void (*)(char *, uint64_t))v1115)(v854, v1149);
    uint64_t v524 = v1133;
    ((void (*)(char *, uint64_t))v1123)(v855, v1133);
    v1125(v856, v1144);
    ((void (*)(char *, uint64_t))v1114)(v655, v1134);
    v1121(v656, v1145);
    v1124(v657, v1147);
    ((void (*)(char *, uint64_t))v1120)(v658, v1135);
    v1128(v659, v1136);
    ((void (*)(char *, uint64_t))v1110)(v660, v1148);
    ((void (*)(char *, uint64_t))v1119)(v661, v1138);
    ((void (*)(char *, uint64_t))v1109)(v662, v1129);
    ((void (*)(char *, uint64_t))v1127)(v665, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1015, v1146);
    ((void (*)(char *, uint64_t))v1126)(v857, v1139);
    ((void (*)(char *, uint64_t))v518)(v858, v1140);
    v520(v859, v519);
    uint64_t v525 = v1113;
    v1113(v860, v521);
    ((void (*)(char *, uint64_t))v1111)(v861, v522);
    uint64_t v526 = v1117;
    v1117(v862, v523);
    uint64_t v527 = v1112;
    ((void (*)(char *, uint64_t))v1112)(v863, v1142);
    v1116(v864, v1143);
    ((void (*)(char *, uint64_t))v1123)(v865, v524);
    v1125(v866, v1144);
    ((void (*)(char *, uint64_t))v1114)(v668, v1134);
    v1121(v669, v1145);
    v1124(v670, v1147);
    ((void (*)(char *, uint64_t))v1120)(v671, v1135);
    v1128(v672, v1136);
    ((void (*)(char *, uint64_t))v1110)(v673, v1148);
    ((void (*)(char *, uint64_t))v1119)(v674, v1138);
    uint64_t v528 = v1129;
    ((void (*)(char *, uint64_t))v1109)(v675, v1129);
    ((void (*)(char *, uint64_t))v1127)(v676, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1016, v1146);
    ((void (*)(char *, uint64_t))v1126)(v867, v1139);
    ((void (*)(char *, uint64_t))v1099)(v868, v1140);
    v1118(v869, v1130);
    v525(v870, v1131);
    ((void (*)(char *, uint64_t))v1111)(v871, v1132);
    v526(v872, v1141);
    ((void (*)(char *, uint64_t))v527)(v873, v1142);
    uint64_t v529 = v1143;
    uint64_t v530 = v1116;
    v1116(v874, v1143);
    uint64_t v531 = v1115;
    ((void (*)(char *, uint64_t))v1115)(v875, v1149);
    v1125(v876, v1144);
    uint64_t v532 = v1114;
    ((void (*)(char *, uint64_t))v1114)(v679, v1134);
    v1121(v680, v1145);
    v1124(v681, v1147);
    ((void (*)(char *, uint64_t))v1120)(v682, v1135);
    v1128(v685, v1136);
    ((void (*)(char *, uint64_t))v1110)(v686, v1148);
    ((void (*)(char *, uint64_t))v1119)(v687, v1138);
    ((void (*)(char *, uint64_t))v1109)(v688, v528);
    ((void (*)(char *, uint64_t))v1127)(v689, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1017, v1146);
    ((void (*)(char *, uint64_t))v1126)(v877, v1139);
    ((void (*)(char *, uint64_t))v1099)(v878, v1140);
    v1118(v879, v1130);
    v1113(v880, v1131);
    ((void (*)(char *, uint64_t))v1111)(v881, v1132);
    v1117(v882, v1141);
    ((void (*)(char *, uint64_t))v1112)(v883, v1142);
    v530(v884, v529);
    uint64_t v533 = v1149;
    ((void (*)(char *, uint64_t))v531)(v885, v1149);
    uint64_t v534 = v1133;
    uint64_t v535 = (void (*)(char *, uint64_t))v1123;
    ((void (*)(char *, uint64_t))v1123)(v886, v1133);
    ((void (*)(char *, uint64_t))v532)(v692, v1134);
    uint64_t v536 = v1121;
    v1121(v693, v1145);
    v1124(v694, v1147);
    uint64_t v537 = v1120;
    ((void (*)(char *, uint64_t))v1120)(v695, v1135);
    v1128(v696, v1136);
    ((void (*)(char *, uint64_t))v1110)(v697, v1148);
    ((void (*)(char *, uint64_t))v1119)(v698, v1138);
    ((void (*)(char *, uint64_t))v1109)(v699, v1129);
    ((void (*)(char *, uint64_t))v1127)(v700, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1018, v1146);
    uint64_t v538 = v1139;
    ((void (*)(char *, uint64_t))v1126)(v887, v1139);
    ((void (*)(char *, uint64_t))v1099)(v888, v1140);
    v1118(v889, v1130);
    v1113(v890, v1131);
    ((void (*)(char *, uint64_t))v1111)(v891, v1132);
    v1117(v892, v1141);
    ((void (*)(char *, uint64_t))v1112)(v893, v1142);
    v1116(v894, v1143);
    ((void (*)(char *, uint64_t))v1115)(v895, v533);
    v535(v896, v534);
    uint64_t v539 = v1125;
    v1125(v703, v1144);
    v536(v706, v1145);
    v540 = v1124;
    v1124(v707, v1147);
    ((void (*)(char *, uint64_t))v537)(v708, v1135);
    v1128(v709, v1136);
    ((void (*)(char *, uint64_t))v1110)(v710, v1148);
    ((void (*)(char *, uint64_t))v1119)(v711, v1138);
    ((void (*)(char *, uint64_t))v1109)(v712, v1129);
    ((void (*)(char *, uint64_t))v1127)(v713, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1019, v1146);
    ((void (*)(char *, uint64_t))v1126)(v897, v538);
    ((void (*)(char *, uint64_t))v1099)(v898, v1140);
    v1118(v899, v1130);
    v1113(v900, v1131);
    ((void (*)(char *, uint64_t))v1111)(v901, v1132);
    v1117(v902, v1141);
    ((void (*)(char *, uint64_t))v1112)(v903, v1142);
    v1116(v904, v1143);
    ((void (*)(char *, uint64_t))v1115)(v905, v1149);
    ((void (*)(char *, uint64_t))v1123)(v1007, v1133);
    v539(v716, v1144);
    ((void (*)(char *, uint64_t))v1114)(v717, v1134);
    v540(v718, v1147);
    ((void (*)(char *, uint64_t))v1120)(v719, v1135);
    v541 = v1128;
    v1128(v720, v1136);
    ((void (*)(char *, uint64_t))v1110)(v721, v1148);
    ((void (*)(char *, uint64_t))v1119)(v722, v1138);
    ((void (*)(char *, uint64_t))v1109)(v723, v1129);
    uint64_t v542 = v1137;
    v543 = v1127;
    ((void (*)(char *, uint64_t))v1127)(v724, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1020, v1146);
    v544 = v1126;
    ((void (*)(char *, uint64_t))v1126)(v906, v1139);
    ((void (*)(char *, uint64_t))v1099)(v907, v1140);
    v1118(v908, v1130);
    v1113(v909, v1131);
    ((void (*)(char *, uint64_t))v1111)(v910, v1132);
    v1117(v911, v1141);
    ((void (*)(char *, uint64_t))v1112)(v912, v1142);
    v1116(v913, v1143);
    ((void (*)(char *, uint64_t))v1115)(v914, v1149);
    ((void (*)(char *, uint64_t))v1123)(v915, v1133);
    v1125(v1006, v1144);
    ((void (*)(char *, uint64_t))v1114)(v726, v1134);
    v1121(v727, v1145);
    ((void (*)(char *, uint64_t))v1120)(v729, v1135);
    v541(v730, v1136);
    uint64_t v545 = v1148;
    v546 = v1110;
    ((void (*)(char *, uint64_t))v1110)(v731, v1148);
    v547 = v1119;
    ((void (*)(char *, uint64_t))v1119)(v732, v1138);
    uint64_t v548 = (void (*)(char *, uint64_t))v1109;
    ((void (*)(char *, uint64_t))v1109)(v733, v1129);
    ((void (*)(char *, uint64_t))v543)(v734, v542);
    ((void (*)(char *, uint64_t))v1122)(v1021, v1146);
    ((void (*)(char *, uint64_t))v544)(v916, v1139);
    ((void (*)(char *, uint64_t))v1099)(v917, v1140);
    v1118(v918, v1130);
    v1113(v919, v1131);
    uint64_t v549 = v1132;
    ((void (*)(char *, uint64_t))v1111)(v920, v1132);
    v1117(v921, v1141);
    ((void (*)(char *, uint64_t))v1112)(v922, v1142);
    v1116(v923, v1143);
    ((void (*)(char *, uint64_t))v1115)(v924, v1149);
    ((void (*)(char *, uint64_t))v1123)(v925, v1133);
    uint64_t v550 = v1144;
    v1125(v1005, v1144);
    ((void (*)(char *, uint64_t))v1114)(v735, v1134);
    v1121(v736, v1145);
    v1124(v737, v1147);
    v1128(v738, v1136);
    ((void (*)(char *, uint64_t))v546)(v739, v545);
    uint64_t v551 = v1138;
    ((void (*)(char *, uint64_t))v547)(v740, v1138);
    uint64_t v552 = v1129;
    v548(v741, v1129);
    ((void (*)(char *, uint64_t))v1127)(v742, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1022, v1146);
    ((void (*)(char *, uint64_t))v1126)(v928, v1139);
    ((void (*)(char *, uint64_t))v1099)(v929, v1140);
    v1118(v930, v1130);
    v1113(v931, v1131);
    uint64_t v553 = v549;
    v554 = v1111;
    ((void (*)(char *, uint64_t))v1111)(v932, v553);
    v1117(v933, v1141);
    ((void (*)(char *, uint64_t))v1112)(v934, v1142);
    v1116(v935, v1143);
    ((void (*)(char *, uint64_t))v1115)(v936, v1149);
    ((void (*)(char *, uint64_t))v1123)(v1004, v1133);
    v1125(v926, v550);
    ((void (*)(char *, uint64_t))v1114)(v927, v1134);
    v1121(v743, v1145);
    uint64_t v555 = v1147;
    v1124(v744, v1147);
    uint64_t v556 = v1135;
    ((void (*)(char *, uint64_t))v1120)(v745, v1135);
    ((void (*)(char *, uint64_t))v1110)(v746, v1148);
    ((void (*)(char *, uint64_t))v1119)(v747, v551);
    v557 = (void (*)(char *, uint64_t))v1109;
    ((void (*)(char *, uint64_t))v1109)(v748, v552);
    ((void (*)(char *, uint64_t))v1127)(v749, v1137);
    uint64_t v558 = v1146;
    v559 = v1122;
    ((void (*)(char *, uint64_t))v1122)(v937, v1146);
    ((void (*)(char *, uint64_t))v1126)(v940, v1139);
    ((void (*)(char *, uint64_t))v1099)(v941, v1140);
    v1118(v942, v1130);
    v1113(v943, v1131);
    ((void (*)(char *, uint64_t))v554)(v944, v1132);
    uint64_t v560 = v1141;
    v1117(v945, v1141);
    ((void (*)(char *, uint64_t))v1112)(v946, v1142);
    v1116(v947, v1143);
    ((void (*)(char *, uint64_t))v1115)(v948, v1149);
    uint64_t v561 = v1133;
    ((void (*)(char *, uint64_t))v1123)(v1003, v1133);
    v1125(v938, v1144);
    ((void (*)(char *, uint64_t))v1114)(v939, v1134);
    v1121(v750, v1145);
    v1124(v751, v555);
    ((void (*)(char *, uint64_t))v1120)(v752, v556);
    uint64_t v562 = v1136;
    v1128(v753, v1136);
    ((void (*)(char *, uint64_t))v1119)(v754, v1138);
    v557(v755, v1129);
    ((void (*)(char *, uint64_t))v1127)(v756, v1137);
    ((void (*)(char *, uint64_t))v559)(v949, v558);
    uint64_t v563 = v1139;
    ((void (*)(char *, uint64_t))v1126)(v952, v1139);
    uint64_t v564 = v1140;
    ((void (*)(char *, uint64_t))v1099)(v953, v1140);
    uint64_t v565 = v1130;
    v1118(v954, v1130);
    v1113(v955, v1131);
    ((void (*)(char *, uint64_t))v1111)(v956, v1132);
    v1117(v957, v560);
    uint64_t v566 = v1142;
    ((void (*)(char *, uint64_t))v1112)(v958, v1142);
    v1116(v959, v1143);
    ((void (*)(char *, uint64_t))v1115)(v960, v1149);
    ((void (*)(char *, uint64_t))v1123)(v1002, v561);
    v1125(v950, v1144);
    uint64_t v567 = v1134;
    ((void (*)(char *, uint64_t))v1114)(v951, v1134);
    uint64_t v568 = v1145;
    v1121(v757, v1145);
    v1124(v758, v1147);
    ((void (*)(char *, uint64_t))v1120)(v759, v1135);
    v1128(v760, v562);
    ((void (*)(char *, uint64_t))v1110)(v761, v1148);
    ((void (*)(char *, uint64_t))v1109)(v762, v1129);
    ((void (*)(char *, uint64_t))v1127)(v763, v1137);
    ((void (*)(char *, uint64_t))v1122)(v961, v1146);
    ((void (*)(char *, uint64_t))v1126)(v964, v563);
    v569 = v1099;
    ((void (*)(char *, uint64_t))v1099)(v965, v564);
    uint64_t v570 = v565;
    v571 = v1118;
    v1118(v966, v570);
    uint64_t v572 = v1131;
    v573 = v1113;
    v1113(v967, v1131);
    ((void (*)(char *, uint64_t))v1111)(v968, v1132);
    v1117(v969, v1141);
    uint64_t v574 = v566;
    v575 = v1112;
    ((void (*)(char *, uint64_t))v1112)(v970, v574);
    v1116(v971, v1143);
    ((void (*)(char *, uint64_t))v1115)(v972, v1149);
    ((void (*)(char *, uint64_t))v1123)(v1001, v1133);
    v1125(v962, v1144);
    ((void (*)(char *, uint64_t))v1114)(v963, v567);
    uint64_t v576 = v568;
    uint64_t v577 = v1121;
    v1121(v764, v576);
    v1124(v765, v1147);
    ((void (*)(char *, uint64_t))v1120)(v766, v1135);
    v1128(v767, v1136);
    ((void (*)(char *, uint64_t))v1110)(v768, v1148);
    ((void (*)(char *, uint64_t))v1119)(v769, v1138);
    ((void (*)(char *, uint64_t))v1127)(v770, v1137);
    ((void (*)(char *, uint64_t))v1122)(v1023, v1146);
    ((void (*)(char *, uint64_t))v1126)(v973, v1139);
    ((void (*)(char *, uint64_t))v569)(v974, v1140);
    v571(v975, v1130);
    v573(v976, v572);
    ((void (*)(char *, uint64_t))v1111)(v977, v1132);
    v1117(v978, v1141);
    ((void (*)(char *, uint64_t))v575)(v979, v1142);
    uint64_t v578 = v1143;
    uint64_t v579 = v1116;
    v1116(v980, v1143);
    uint64_t v580 = v1115;
    ((void (*)(char *, uint64_t))v1115)(v981, v1149);
    ((void (*)(char *, uint64_t))v1123)(v982, v1133);
    v1125(v983, v1144);
    uint64_t v581 = v1114;
    ((void (*)(char *, uint64_t))v1114)(v1000, v1134);
    v577(v771, v1145);
    v1124(v772, v1147);
    uint64_t v582 = v1120;
    ((void (*)(char *, uint64_t))v1120)(v773, v1135);
    v1128(v774, v1136);
    ((void (*)(char *, uint64_t))v1110)(v775, v1148);
    ((void (*)(char *, uint64_t))v1119)(v776, v1138);
    ((void (*)(char *, uint64_t))v1109)(v777, v1129);
    ((void (*)(char *, uint64_t))v1122)(v1024, v1146);
    ((void (*)(char *, uint64_t))v1126)(v988, v1139);
    ((void (*)(char *, uint64_t))v1099)(v989, v1140);
    v1118(v990, v1130);
    v1113(v991, v1131);
    ((void (*)(char *, uint64_t))v1111)(v992, v1132);
    v1117(v993, v1141);
    ((void (*)(char *, uint64_t))v1112)(v994, v1142);
    v579(v995, v578);
    ((void (*)(char *, uint64_t))v580)(v996, v1149);
    ((void (*)(char *, uint64_t))v1123)(v997, v1133);
    v1125(v998, v1144);
    ((void (*)(char *, uint64_t))v581)(v999, v1134);
    v1121(v984, v1145);
    v1124(v985, v1147);
    ((void (*)(char *, uint64_t))v582)(v986, v1135);
    v1128(v987, v1136);
    ((void (*)(char *, uint64_t))v1110)(v778, v1148);
    ((void (*)(char *, uint64_t))v1119)(v779, v1138);
    ((void (*)(char *, uint64_t))v1109)(v780, v1129);
    return ((uint64_t (*)(char *, uint64_t))v1127)(v781, v1137);
  }
  return result;
}

uint64_t sub_2587A2BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_258796038(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], (char *)(a4 + TupleTypeMetadata[40]), (char *)(a4 + TupleTypeMetadata[44]), (char *)(a4 + TupleTypeMetadata[48]), (char *)(a4 + TupleTypeMetadata[52]), (char *)(a4 + TupleTypeMetadata[56]), (char *)(a4 + TupleTypeMetadata[60]), (char *)(a4 + TupleTypeMetadata[64]), (char *)(a4 + TupleTypeMetadata[68]), (char *)(a4 + TupleTypeMetadata[72]), (char *)(a4 + TupleTypeMetadata[76]), (char *)(a4 + TupleTypeMetadata[80]),
           (char *)(a4 + TupleTypeMetadata[84]),
           (char *)(a4 + TupleTypeMetadata[88]),
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_21.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_2587A2D58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, char *a19, char *a20,char *a21,char *a22,uint64_t a23,uint64_t a24,void *a25)
{
  uint64_t v26 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  v1072 = v27;
  v1071 = v28;
  uint64_t v1070 = v29;
  uint64_t v1069 = v30;
  uint64_t v1068 = v31;
  uint64_t v1067 = v32;
  uint64_t v1066 = v33;
  uint64_t v1065 = (char *)v26;
  uint64_t v34 = a25[4];
  uint64_t v1214 = a25[3];
  uint64_t v1202 = v34;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v36 = a25[5];
  v1199 = (char *)TupleTypeMetadata2;
  uint64_t v1203 = v36;
  uint64_t v37 = swift_getTupleTypeMetadata2();
  uint64_t v38 = a25[6];
  v1198 = (void (*)(char *, uint64_t))v37;
  uint64_t v1208 = v38;
  uint64_t v39 = swift_getTupleTypeMetadata2();
  uint64_t v40 = a25[7];
  v1197 = (char *)v39;
  uint64_t v1201 = v40;
  uint64_t v41 = swift_getTupleTypeMetadata2();
  uint64_t v42 = a25[8];
  v1196 = (void (*)(char *, uint64_t))v41;
  uint64_t v1221 = v42;
  uint64_t v43 = swift_getTupleTypeMetadata2();
  uint64_t v44 = a25[9];
  v1195 = (char *)v43;
  uint64_t v1207 = v44;
  uint64_t v45 = swift_getTupleTypeMetadata2();
  uint64_t v46 = a25[10];
  v1194 = (char *)v45;
  uint64_t v1215 = v46;
  uint64_t v47 = swift_getTupleTypeMetadata2();
  uint64_t v48 = a25[11];
  v1193 = (void (*)(char *, uint64_t))v47;
  uint64_t v1206 = v48;
  uint64_t v49 = swift_getTupleTypeMetadata2();
  uint64_t v50 = a25[12];
  v1192 = (char *)v49;
  uint64_t v1213 = v50;
  uint64_t v51 = swift_getTupleTypeMetadata2();
  uint64_t v52 = a25[13];
  v1191 = (void (*)(char *, uint64_t))v51;
  uint64_t v1205 = v52;
  uint64_t v53 = swift_getTupleTypeMetadata2();
  uint64_t v54 = a25[14];
  uint64_t v1190 = v53;
  uint64_t v1200 = v54;
  uint64_t v55 = swift_getTupleTypeMetadata2();
  uint64_t v56 = a25[15];
  v1189 = (void (*)(char *, uint64_t))v55;
  uint64_t v1220 = v56;
  uint64_t v57 = swift_getTupleTypeMetadata2();
  uint64_t v58 = a25[16];
  v1188 = (char *)v57;
  uint64_t v1219 = v58;
  uint64_t v59 = swift_getTupleTypeMetadata2();
  uint64_t v60 = a25[17];
  v1187 = (char *)v59;
  uint64_t v1212 = v60;
  uint64_t v61 = swift_getTupleTypeMetadata2();
  uint64_t v62 = a25[18];
  v1186 = (char *)v61;
  uint64_t v1218 = v62;
  uint64_t v63 = swift_getTupleTypeMetadata2();
  uint64_t v64 = a25[19];
  v1185 = (char *)v63;
  uint64_t v1211 = v64;
  uint64_t v65 = swift_getTupleTypeMetadata2();
  uint64_t v66 = a25[20];
  uint64_t v1184 = v65;
  uint64_t v1217 = v66;
  uint64_t v67 = swift_getTupleTypeMetadata2();
  uint64_t v68 = a25[21];
  uint64_t v1183 = v67;
  uint64_t v1210 = v68;
  uint64_t v69 = swift_getTupleTypeMetadata2();
  uint64_t v70 = a25[22];
  v1182 = (void (*)(char *, uint64_t))v69;
  uint64_t v1204 = v70;
  uint64_t v71 = swift_getTupleTypeMetadata2();
  uint64_t v72 = a25[23];
  v1181 = (char *)v71;
  uint64_t v1209 = v72;
  uint64_t v73 = swift_getTupleTypeMetadata2();
  uint64_t v74 = a25[24];
  v1180 = (char *)v73;
  uint64_t v1216 = v74;
  uint64_t v1179 = swift_getTupleTypeMetadata2();
  uint64_t v78 = MEMORY[0x270FA5388](v1179, v75, v76, v77);
  v1073 = (char *)&v604 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = MEMORY[0x270FA5388](v78, v80, v81, v82);
  v1074 = (char *)&v604 - v84;
  uint64_t v88 = MEMORY[0x270FA5388](v83, v85, v86, v87);
  v1075 = (char *)&v604 - v89;
  uint64_t v93 = MEMORY[0x270FA5388](v88, v90, v91, v92);
  v1076 = (char *)&v604 - v94;
  uint64_t v98 = MEMORY[0x270FA5388](v93, v95, v96, v97);
  v1077 = (char *)&v604 - v99;
  uint64_t v103 = MEMORY[0x270FA5388](v98, v100, v101, v102);
  v1078 = (char *)&v604 - v104;
  uint64_t v108 = MEMORY[0x270FA5388](v103, v105, v106, v107);
  v1079 = (char *)&v604 - v109;
  uint64_t v113 = MEMORY[0x270FA5388](v108, v110, v111, v112);
  v1080 = (char *)&v604 - v114;
  uint64_t v118 = MEMORY[0x270FA5388](v113, v115, v116, v117);
  v1081 = (char *)&v604 - v119;
  uint64_t v123 = MEMORY[0x270FA5388](v118, v120, v121, v122);
  v1082 = (char *)&v604 - v124;
  uint64_t v128 = MEMORY[0x270FA5388](v123, v125, v126, v127);
  v1083 = (char *)&v604 - v129;
  uint64_t v133 = MEMORY[0x270FA5388](v128, v130, v131, v132);
  v1084 = (char *)&v604 - v134;
  uint64_t v138 = MEMORY[0x270FA5388](v133, v135, v136, v137);
  v1085 = (char *)&v604 - v139;
  uint64_t v143 = MEMORY[0x270FA5388](v138, v140, v141, v142);
  v1086 = (char *)&v604 - v144;
  uint64_t v148 = MEMORY[0x270FA5388](v143, v145, v146, v147);
  v1087 = (char *)&v604 - v149;
  uint64_t v153 = MEMORY[0x270FA5388](v148, v150, v151, v152);
  v1088 = (char *)&v604 - v154;
  uint64_t v158 = MEMORY[0x270FA5388](v153, v155, v156, v157);
  uint64_t v160 = (char *)&v604 - v159;
  uint64_t v164 = MEMORY[0x270FA5388](v158, v161, v162, v163);
  uint64_t v166 = (char *)&v604 - v165;
  uint64_t v170 = MEMORY[0x270FA5388](v164, v167, v168, v169);
  uint64_t v172 = (char *)&v604 - v171;
  uint64_t v176 = MEMORY[0x270FA5388](v170, v173, v174, v175);
  v1089 = (char *)&v604 - v177;
  uint64_t v181 = MEMORY[0x270FA5388](v176, v178, v179, v180);
  v1090 = (char *)&v604 - v182;
  uint64_t v186 = MEMORY[0x270FA5388](v181, v183, v184, v185);
  uint64_t v188 = (char *)&v604 - v187;
  MEMORY[0x270FA5388](v186, v189, v190, v191);
  uint64_t v193 = (char *)&v604 - v192;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a25[25] + 24))(a23, a24, a25[2]);
  if (!v25)
  {
    uint64_t v195 = *((int *)v1194 + 12);
    uint64_t v196 = *((int *)v1193 + 12);
    v1169 = &v193[v196];
    uint64_t v197 = *((int *)v1192 + 12);
    v1170 = &v193[v197];
    uint64_t v198 = *((int *)v1191 + 12);
    v1158 = &v193[v198];
    uint64_t v199 = *(int *)(v1190 + 48);
    v1159 = &v193[v199];
    uint64_t v200 = *((int *)v1189 + 12);
    v1162 = &v193[v200];
    uint64_t v201 = *((int *)v1188 + 12);
    v1163 = &v193[v201];
    uint64_t v202 = *((int *)v1187 + 12);
    v1164 = &v193[v202];
    uint64_t v203 = *((int *)v1186 + 12);
    v1165 = &v193[v203];
    uint64_t v204 = *((int *)v1185 + 12);
    v1166 = &v193[v204];
    uint64_t v817 = 0;
    uint64_t v205 = *(int *)(v1184 + 48);
    v1171 = &v193[v205];
    uint64_t v206 = *(int *)(v1183 + 48);
    v1172 = &v193[v206];
    uint64_t v207 = *((int *)v1182 + 12);
    v1173 = &v193[v207];
    uint64_t v208 = *((int *)v1181 + 12);
    v1160 = &v193[v208];
    uint64_t v209 = *((int *)v1180 + 12);
    v1161 = &v193[v209];
    uint64_t v210 = *(int *)(v1179 + 48);
    v1157 = &v193[v210];
    uint64_t v1052 = &v188[v210];
    uint64_t v1053 = &v188[v209];
    uint64_t v1054 = &v188[v208];
    uint64_t v1055 = &v188[v207];
    uint64_t v1056 = &v188[v206];
    uint64_t v1057 = &v188[v205];
    uint64_t v1058 = &v188[v204];
    uint64_t v1059 = &v188[v203];
    uint64_t v1060 = &v188[v202];
    uint64_t v1061 = &v188[v201];
    uint64_t v1062 = &v188[v200];
    uint64_t v1063 = &v188[v199];
    uint64_t v1064 = &v188[v198];
    v997 = v160;
    v1048 = &v188[v197];
    v1023 = v172;
    v1049 = &v188[v196];
    uint64_t v211 = v193;
    v1168 = &v193[v195];
    v1010 = v166;
    v1050 = &v188[v195];
    uint64_t v212 = *((int *)v1195 + 12);
    v1167 = &v193[v212];
    uint64_t v1051 = &v188[v212];
    uint64_t v213 = *((int *)v1196 + 12);
    uint64_t v214 = &v193[v213];
    uint64_t v1136 = &v193[v213];
    uint64_t v215 = &v188[v213];
    v813 = &v188[v213];
    uint64_t v216 = *((int *)v1197 + 12);
    uint64_t v217 = &v193[v216];
    uint64_t v1137 = &v193[v216];
    uint64_t v218 = &v188[v216];
    v814 = &v188[v216];
    uint64_t v219 = *((int *)v1198 + 12);
    v220 = &v193[v219];
    uint64_t v1138 = &v193[v219];
    uint64_t v221 = &v188[v219];
    v815 = &v188[v219];
    uint64_t v222 = *((int *)v1199 + 12);
    uint64_t v223 = &v193[v222];
    uint64_t v1139 = v223;
    uint64_t v1140 = v211;
    uint64_t v224 = &v188[v222];
    v816 = &v188[v222];
    v1156 = *(void **)(v1214 - 8);
    v1106 = (void (*)(void))v1156[2];
    v1107 = v1156 + 2;
    v759 = a22;
    v751 = a21;
    v829 = a20;
    uint64_t v841 = a19;
    v853 = a18;
    v866 = a17;
    v877 = a16;
    v888 = a15;
    v899 = a14;
    uint64_t v910 = a13;
    uint64_t v921 = a12;
    v932 = a11;
    v943 = a10;
    v954 = a9;
    ((void (*)(char *, char *, uint64_t))v1106)(v188, v211, v1214);
    v1178 = *(void **)(v1202 - 8);
    uint64_t v225 = (void (*)(char *, char *, uint64_t))v1178[2];
    v1112 = v1178 + 2;
    v1113 = v225;
    ((void (*)(char *, char *))v225)(v224, v223);
    v1155 = *(void **)(v1203 - 8);
    v1105 = (void (*)(char *, char *))v1155[2];
    v1111 = v1155 + 2;
    v1105(v221, v220);
    v1154 = *(void **)(v1208 - 8);
    v1101 = (void (*)(char *, char *))v1154[2];
    v1103 = v1154 + 2;
    v1101(v218, v217);
    v1153 = *(void **)(v1201 - 8);
    uint64_t v226 = (void (*)(char *, char *, uint64_t))v1153[2];
    v1100 = v1153 + 2;
    v1095 = v226;
    v226(v215, v214, v1201);
    v1152 = *(void **)(v1221 - 8);
    uint64_t v227 = (void (*)(char *, char *, uint64_t))v1152[2];
    v1099 = v1152 + 2;
    v1094 = v227;
    v227(v1051, v1167, v1221);
    v1151 = *(void **)(v1207 - 8);
    uint64_t v228 = (void (*)(char *, char *, uint64_t))v1151[2];
    v1098 = v1151 + 2;
    v1110 = v228;
    v228(v1050, v1168, v1207);
    v1150 = *(void **)(v1215 - 8);
    v1097 = (void (*)(char *, char *, uint64_t))v1150[2];
    v1119 = v1150 + 2;
    v1097(v1049, v1169, v1215);
    uint64_t v1149 = *(void **)(v1206 - 8);
    uint64_t v229 = (void (*)(char *, char *, uint64_t))v1149[2];
    v1117 = v1149 + 2;
    v1118 = v229;
    v229(v1048, v1170, v1206);
    uint64_t v1148 = *(void **)(v1213 - 8);
    v1096 = (void (*)(char *, char *, uint64_t))v1148[2];
    v1116 = v1148 + 2;
    v1096(v1064, v1158, v1213);
    uint64_t v1147 = *(void **)(v1205 - 8);
    uint64_t v230 = (void (*)(char *, char *, uint64_t))v1147[2];
    v1114 = v1147 + 2;
    v1115 = v230;
    v230(v1063, v1159, v1205);
    uint64_t v1146 = *(void **)(v1200 - 8);
    uint64_t v231 = (void (*)(char *, char *, uint64_t))v1146[2];
    v1091 = v1146 + 2;
    uint64_t v1109 = v231;
    v231(v1062, v1162, v1200);
    v1177 = *(void **)(v1220 - 8);
    uint64_t v232 = (void (*)(char *, char *, uint64_t))v1177[2];
    v1102 = v1177 + 2;
    v1104 = v232;
    v232(v1061, v1163, v1220);
    v1176 = *(void **)(v1219 - 8);
    v1093 = (void (*)(char *, char *, uint64_t))v1176[2];
    uint64_t v1135 = (char *)(v1176 + 2);
    v1093(v1060, v1164, v1219);
    uint64_t v1145 = *(void **)(v1212 - 8);
    uint64_t v233 = (char *)v1145[2];
    uint64_t v1133 = (char *)(v1145 + 2);
    uint64_t v1134 = v233;
    ((void (*)(char *, char *, uint64_t))v233)(v1059, v1165, v1212);
    uint64_t v1144 = *(void **)(v1218 - 8);
    uint64_t v234 = (char *)v1144[2];
    uint64_t v1131 = (char *)(v1144 + 2);
    uint64_t v1132 = v234;
    ((void (*)(char *, char *, uint64_t))v234)(v1058, v1166, v1218);
    uint64_t v1143 = *(void **)(v1211 - 8);
    uint64_t v235 = (char *)v1143[2];
    uint64_t v1129 = (char *)(v1143 + 2);
    uint64_t v1130 = v235;
    ((void (*)(char *, char *, uint64_t))v235)(v1057, v1171, v1211);
    uint64_t v1142 = *(void **)(v1217 - 8);
    uint64_t v236 = (char *)v1142[2];
    v1127 = (void (*)(char *, char *, uint64_t))(v1142 + 2);
    v1128 = v236;
    ((void (*)(char *, char *, uint64_t))v236)(v1056, v1172, v1217);
    v1174 = *(void **)(v1210 - 8);
    uint64_t v237 = (void (*)(char *, char *, uint64_t))v1174[2];
    v1125 = (char *)(v1174 + 2);
    v1126 = v237;
    v237(v1055, v1173, v1210);
    uint64_t v1141 = *(void **)(v1204 - 8);
    uint64_t v238 = (void (*)(char *, char *, uint64_t))v1141[2];
    uint64_t v1123 = v1141 + 2;
    v1124 = v238;
    v238(v1054, v1160, v1204);
    v1092 = *(void **)(v1209 - 8);
    uint64_t v239 = (void (*)(char *, char *, uint64_t))v1092[2];
    v1121 = v1092 + 2;
    v1122 = v239;
    v239(v1053, v1161, v1209);
    v1175 = *(void **)(v1216 - 8);
    v1108 = (void (*)(char *, char *, uint64_t))v1175[2];
    v1120 = v1175 + 2;
    v1108(v1052, v1157, v1216);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))v1156[4];
    v744 = v1156 + 4;
    v745 = v240;
    v240(v1065, v188, v1214);
    v1037 = &v1090[*(int *)(v1179 + 48)];
    v1038 = &v1090[*((int *)v1180 + 12)];
    v1039 = &v1090[*((int *)v1181 + 12)];
    uint64_t v1040 = &v1090[*((int *)v1182 + 12)];
    v1041 = &v1090[*(int *)(v1183 + 48)];
    uint64_t v1042 = &v1090[*(int *)(v1184 + 48)];
    uint64_t v1043 = &v1090[*((int *)v1185 + 12)];
    v1044 = &v1090[*((int *)v1186 + 12)];
    v1045 = &v1090[*((int *)v1187 + 12)];
    v1046 = &v1090[*((int *)v1188 + 12)];
    v1047 = &v1090[*((int *)v1189 + 12)];
    uint64_t v1065 = &v1090[*(int *)(v1190 + 48)];
    v1036 = &v1090[*((int *)v1191 + 12)];
    v806 = &v1090[*((int *)v1192 + 12)];
    uint64_t v241 = v806;
    v807 = &v1090[*((int *)v1193 + 12)];
    uint64_t v242 = v807;
    v808 = &v1090[*((int *)v1194 + 12)];
    uint64_t v243 = v808;
    v809 = &v1090[*((int *)v1195 + 12)];
    uint64_t v244 = v809;
    v810 = &v1090[*((int *)v1196 + 12)];
    uint64_t v245 = v810;
    v811 = &v1090[*((int *)v1197 + 12)];
    uint64_t v246 = v811;
    v812 = &v1090[*((int *)v1198 + 12)];
    uint64_t v247 = v812;
    uint64_t v248 = &v1090[*((int *)v1199 + 12)];
    v1106();
    uint64_t v249 = v1202;
    v1113(v248, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v247, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v246, v1137, v1208);
    v1095(v245, v1136, v1201);
    v1094(v244, v1167, v1221);
    v1110(v243, v1168, v1207);
    v1097(v242, v1169, v1215);
    v1118(v241, v1170, v1206);
    v1096(v1036, v1158, v1213);
    v1115(v1065, v1159, v1205);
    v1109(v1047, v1162, v1200);
    v1104(v1046, v1163, v1220);
    v1093(v1045, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v1044, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v1043, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v1042, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v1041, v1172, v1217);
    v1126(v1040, v1173, v1210);
    v1124(v1039, v1160, v1204);
    v1122(v1038, v1161, v1209);
    v1108(v1037, v1157, v1216);
    uint64_t v250 = (void (*)(char *, char *, uint64_t))v1178[4];
    v736 = v1178 + 4;
    uint64_t v737 = v250;
    uint64_t v251 = v249;
    v250(v1066, v248, v249);
    v1026 = &v1089[*(int *)(v1179 + 48)];
    v1027 = &v1089[*((int *)v1180 + 12)];
    v1028 = &v1089[*((int *)v1181 + 12)];
    v1029 = &v1089[*((int *)v1182 + 12)];
    v1030 = &v1089[*(int *)(v1183 + 48)];
    v1031 = &v1089[*(int *)(v1184 + 48)];
    uint64_t v1032 = &v1089[*((int *)v1185 + 12)];
    v1033 = &v1089[*((int *)v1186 + 12)];
    v1034 = &v1089[*((int *)v1187 + 12)];
    v1035 = &v1089[*((int *)v1188 + 12)];
    uint64_t v1066 = &v1089[*((int *)v1189 + 12)];
    v1024 = &v1089[*(int *)(v1190 + 48)];
    v1025 = &v1089[*((int *)v1191 + 12)];
    v799 = &v1089[*((int *)v1192 + 12)];
    uint64_t v252 = v799;
    v800 = &v1089[*((int *)v1193 + 12)];
    uint64_t v253 = v800;
    v801 = &v1089[*((int *)v1194 + 12)];
    uint64_t v254 = v801;
    v802 = &v1089[*((int *)v1195 + 12)];
    uint64_t v255 = v802;
    v803 = &v1089[*((int *)v1196 + 12)];
    uint64_t v256 = v803;
    v804 = &v1089[*((int *)v1197 + 12)];
    uint64_t v257 = v804;
    uint64_t v258 = &v1089[*((int *)v1198 + 12)];
    v805 = &v1089[*((int *)v1199 + 12)];
    uint64_t v259 = v805;
    v1106();
    v1113(v259, v1139, v251);
    uint64_t v260 = v1203;
    ((void (*)(char *, char *, uint64_t))v1105)(v258, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v257, v1137, v1208);
    v1095(v256, v1136, v1201);
    v1094(v255, v1167, v1221);
    v1110(v254, v1168, v1207);
    v1097(v253, v1169, v1215);
    v1118(v252, v1170, v1206);
    v1096(v1025, v1158, v1213);
    v1115(v1024, v1159, v1205);
    v1109(v1066, v1162, v1200);
    v1104(v1035, v1163, v1220);
    v1093(v1034, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v1033, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v1032, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v1031, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v1030, v1172, v1217);
    v1126(v1029, v1173, v1210);
    v1124(v1028, v1160, v1204);
    v1122(v1027, v1161, v1209);
    v1108(v1026, v1157, v1216);
    uint64_t v261 = (void (*)(char *, char *, uint64_t))v1155[4];
    v725 = v1155 + 4;
    v726 = v261;
    v261(v1067, v258, v260);
    v1013 = &v1023[*(int *)(v1179 + 48)];
    v1014 = &v1023[*((int *)v1180 + 12)];
    v1015 = &v1023[*((int *)v1181 + 12)];
    v1016 = &v1023[*((int *)v1182 + 12)];
    v1017 = &v1023[*(int *)(v1183 + 48)];
    v1018 = &v1023[*(int *)(v1184 + 48)];
    v1019 = &v1023[*((int *)v1185 + 12)];
    v1020 = &v1023[*((int *)v1186 + 12)];
    v1021 = &v1023[*((int *)v1187 + 12)];
    v1022 = &v1023[*((int *)v1188 + 12)];
    uint64_t v1067 = &v1023[*((int *)v1189 + 12)];
    v1011 = &v1023[*(int *)(v1190 + 48)];
    v1012 = &v1023[*((int *)v1191 + 12)];
    v792 = &v1023[*((int *)v1192 + 12)];
    uint64_t v262 = v792;
    v793 = &v1023[*((int *)v1193 + 12)];
    uint64_t v263 = v793;
    v794 = &v1023[*((int *)v1194 + 12)];
    uint64_t v264 = v794;
    v795 = &v1023[*((int *)v1195 + 12)];
    uint64_t v265 = v795;
    v796 = &v1023[*((int *)v1196 + 12)];
    uint64_t v266 = v796;
    uint64_t v267 = &v1023[*((int *)v1197 + 12)];
    v797 = &v1023[*((int *)v1198 + 12)];
    uint64_t v268 = v797;
    v798 = &v1023[*((int *)v1199 + 12)];
    uint64_t v269 = v798;
    v1106();
    v1113(v269, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v268, v1138, v260);
    uint64_t v270 = v1208;
    ((void (*)(char *, char *, uint64_t))v1101)(v267, v1137, v1208);
    v1095(v266, v1136, v1201);
    v1094(v265, v1167, v1221);
    v1110(v264, v1168, v1207);
    v1097(v263, v1169, v1215);
    v1118(v262, v1170, v1206);
    v1096(v1012, v1158, v1213);
    v1115(v1011, v1159, v1205);
    v1109(v1067, v1162, v1200);
    v1104(v1022, v1163, v1220);
    v1093(v1021, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v1020, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v1019, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v1018, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v1017, v1172, v1217);
    v1126(v1016, v1173, v1210);
    v1124(v1015, v1160, v1204);
    v1122(v1014, v1161, v1209);
    v1108(v1013, v1157, v1216);
    uint64_t v271 = (void (*)(char *, char *, uint64_t))v1154[4];
    v723 = v1154 + 4;
    v724 = v271;
    v271(v1068, v267, v270);
    v1000 = &v1010[*(int *)(v1179 + 48)];
    v1001 = &v1010[*((int *)v1180 + 12)];
    v1002 = &v1010[*((int *)v1181 + 12)];
    v1003 = &v1010[*((int *)v1182 + 12)];
    v1004 = &v1010[*(int *)(v1183 + 48)];
    v1005 = &v1010[*(int *)(v1184 + 48)];
    v1006 = &v1010[*((int *)v1185 + 12)];
    v1007 = &v1010[*((int *)v1186 + 12)];
    v1008 = &v1010[*((int *)v1187 + 12)];
    v1009 = &v1010[*((int *)v1188 + 12)];
    uint64_t v1068 = &v1010[*((int *)v1189 + 12)];
    v998 = &v1010[*(int *)(v1190 + 48)];
    v999 = &v1010[*((int *)v1191 + 12)];
    uint64_t v785 = &v1010[*((int *)v1192 + 12)];
    uint64_t v272 = v785;
    uint64_t v786 = &v1010[*((int *)v1193 + 12)];
    uint64_t v273 = v786;
    uint64_t v787 = &v1010[*((int *)v1194 + 12)];
    uint64_t v274 = v787;
    v788 = &v1010[*((int *)v1195 + 12)];
    uint64_t v275 = v788;
    v276 = &v1010[*((int *)v1196 + 12)];
    v789 = &v1010[*((int *)v1197 + 12)];
    uint64_t v277 = v789;
    v790 = &v1010[*((int *)v1198 + 12)];
    uint64_t v278 = v790;
    v791 = &v1010[*((int *)v1199 + 12)];
    uint64_t v279 = v791;
    v1106();
    v1113(v279, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v278, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v277, v1137, v270);
    uint64_t v280 = v1201;
    v1095(v276, v1136, v1201);
    v1094(v275, v1167, v1221);
    v1110(v274, v1168, v1207);
    v1097(v273, v1169, v1215);
    v1118(v272, v1170, v1206);
    v1096(v999, v1158, v1213);
    v1115(v998, v1159, v1205);
    v1109(v1068, v1162, v1200);
    v1104(v1009, v1163, v1220);
    v1093(v1008, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v1007, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v1006, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v1005, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v1004, v1172, v1217);
    v1126(v1003, v1173, v1210);
    v1124(v1002, v1160, v1204);
    v1122(v1001, v1161, v1209);
    v1108(v1000, v1157, v1216);
    uint64_t v281 = (void (*)(char *, char *, uint64_t))v1153[4];
    v712 = v1153 + 4;
    v713 = v281;
    v281(v1069, v276, v280);
    uint64_t v987 = &v997[*(int *)(v1179 + 48)];
    v988 = &v997[*((int *)v1180 + 12)];
    v989 = &v997[*((int *)v1181 + 12)];
    v990 = &v997[*((int *)v1182 + 12)];
    v991 = &v997[*(int *)(v1183 + 48)];
    v992 = &v997[*(int *)(v1184 + 48)];
    v993 = &v997[*((int *)v1185 + 12)];
    v994 = &v997[*((int *)v1186 + 12)];
    v995 = &v997[*((int *)v1187 + 12)];
    v996 = &v997[*((int *)v1188 + 12)];
    uint64_t v1069 = &v997[*((int *)v1189 + 12)];
    uint64_t v985 = &v997[*(int *)(v1190 + 48)];
    uint64_t v986 = &v997[*((int *)v1191 + 12)];
    uint64_t v778 = &v997[*((int *)v1192 + 12)];
    uint64_t v282 = v778;
    uint64_t v779 = &v997[*((int *)v1193 + 12)];
    uint64_t v283 = v779;
    uint64_t v780 = &v997[*((int *)v1194 + 12)];
    uint64_t v284 = v780;
    uint64_t v285 = &v997[*((int *)v1195 + 12)];
    uint64_t v781 = &v997[*((int *)v1196 + 12)];
    uint64_t v286 = v781;
    uint64_t v782 = &v997[*((int *)v1197 + 12)];
    uint64_t v287 = v782;
    uint64_t v783 = &v997[*((int *)v1198 + 12)];
    uint64_t v288 = v783;
    uint64_t v784 = &v997[*((int *)v1199 + 12)];
    uint64_t v289 = v784;
    v1106();
    v1113(v289, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v288, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v287, v1137, v1208);
    v1095(v286, v1136, v280);
    uint64_t v290 = v1221;
    v1094(v285, v1167, v1221);
    v1110(v284, v1168, v1207);
    v1097(v283, v1169, v1215);
    v1118(v282, v1170, v1206);
    v1096(v986, v1158, v1213);
    v1115(v985, v1159, v1205);
    v1109(v1069, v1162, v1200);
    v1104(v996, v1163, v1220);
    v1093(v995, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v994, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v993, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v992, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v991, v1172, v1217);
    v1126(v990, v1173, v1210);
    v1124(v989, v1160, v1204);
    v1122(v988, v1161, v1209);
    v1108(v987, v1157, v1216);
    uint64_t v291 = (void (*)(char *, char *, uint64_t))v1152[4];
    uint64_t v705 = v1152 + 4;
    uint64_t v706 = v291;
    v291(v1070, v285, v290);
    uint64_t v975 = &v1088[*(int *)(v1179 + 48)];
    uint64_t v976 = &v1088[*((int *)v1180 + 12)];
    uint64_t v977 = &v1088[*((int *)v1181 + 12)];
    uint64_t v978 = &v1088[*((int *)v1182 + 12)];
    uint64_t v979 = &v1088[*(int *)(v1183 + 48)];
    uint64_t v980 = &v1088[*(int *)(v1184 + 48)];
    uint64_t v981 = &v1088[*((int *)v1185 + 12)];
    uint64_t v982 = &v1088[*((int *)v1186 + 12)];
    uint64_t v983 = &v1088[*((int *)v1187 + 12)];
    uint64_t v984 = &v1088[*((int *)v1188 + 12)];
    uint64_t v1070 = &v1088[*((int *)v1189 + 12)];
    uint64_t v769 = &v1088[*(int *)(v1190 + 48)];
    uint64_t v292 = v769;
    v770 = &v1088[*((int *)v1191 + 12)];
    uint64_t v293 = v770;
    uint64_t v771 = &v1088[*((int *)v1192 + 12)];
    uint64_t v294 = v771;
    uint64_t v772 = &v1088[*((int *)v1193 + 12)];
    uint64_t v295 = v772;
    uint64_t v974 = &v1088[*((int *)v1194 + 12)];
    uint64_t v773 = &v1088[*((int *)v1195 + 12)];
    uint64_t v296 = v773;
    uint64_t v774 = &v1088[*((int *)v1196 + 12)];
    uint64_t v297 = v774;
    uint64_t v775 = &v1088[*((int *)v1197 + 12)];
    uint64_t v298 = v775;
    uint64_t v776 = &v1088[*((int *)v1198 + 12)];
    uint64_t v299 = v776;
    uint64_t v777 = &v1088[*((int *)v1199 + 12)];
    v300 = v777;
    v1106();
    v1113(v300, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v299, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v298, v1137, v1208);
    v1095(v297, v1136, v1201);
    v1094(v296, v1167, v1221);
    uint64_t v301 = v974;
    uint64_t v302 = v1207;
    v1110(v974, v1168, v1207);
    v1097(v295, v1169, v1215);
    v1118(v294, v1170, v1206);
    v1096(v293, v1158, v1213);
    v1115(v292, v1159, v1205);
    v1109(v1070, v1162, v1200);
    v1104(v984, v1163, v1220);
    v1093(v983, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v982, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v981, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v980, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v979, v1172, v1217);
    v1126(v978, v1173, v1210);
    v1124(v977, v1160, v1204);
    v1122(v976, v1161, v1209);
    v1108(v975, v1157, v1216);
    v303 = (void (*)(char *, char *, uint64_t))v1151[4];
    uint64_t v699 = v1151 + 4;
    uint64_t v700 = v303;
    v303(v1071, v301, v302);
    uint64_t v965 = &v1087[*(int *)(v1179 + 48)];
    v966 = &v1087[*((int *)v1180 + 12)];
    v967 = &v1087[*((int *)v1181 + 12)];
    v968 = &v1087[*((int *)v1182 + 12)];
    uint64_t v969 = &v1087[*(int *)(v1183 + 48)];
    uint64_t v970 = &v1087[*(int *)(v1184 + 48)];
    uint64_t v971 = &v1087[*((int *)v1185 + 12)];
    uint64_t v972 = &v1087[*((int *)v1186 + 12)];
    uint64_t v973 = &v1087[*((int *)v1187 + 12)];
    uint64_t v974 = &v1087[*((int *)v1188 + 12)];
    v1071 = &v1087[*((int *)v1189 + 12)];
    v760 = &v1087[*(int *)(v1190 + 48)];
    uint64_t v304 = v760;
    v761 = &v1087[*((int *)v1191 + 12)];
    uint64_t v305 = v761;
    v762 = &v1087[*((int *)v1192 + 12)];
    uint64_t v306 = v762;
    uint64_t v964 = &v1087[*((int *)v1193 + 12)];
    v763 = &v1087[*((int *)v1194 + 12)];
    uint64_t v307 = v763;
    uint64_t v764 = &v1087[*((int *)v1195 + 12)];
    uint64_t v308 = v764;
    v765 = &v1087[*((int *)v1196 + 12)];
    uint64_t v309 = v765;
    uint64_t v766 = &v1087[*((int *)v1197 + 12)];
    uint64_t v310 = v766;
    v767 = &v1087[*((int *)v1198 + 12)];
    uint64_t v311 = v767;
    v768 = &v1087[*((int *)v1199 + 12)];
    uint64_t v312 = v768;
    v1106();
    v1113(v312, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v311, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v310, v1137, v1208);
    v1095(v309, v1136, v1201);
    v1094(v308, v1167, v1221);
    v1110(v307, v1168, v1207);
    uint64_t v313 = v964;
    uint64_t v314 = v1215;
    v1097(v964, v1169, v1215);
    v1118(v306, v1170, v1206);
    v1096(v305, v1158, v1213);
    v1115(v304, v1159, v1205);
    v1109(v1071, v1162, v1200);
    v1104(v974, v1163, v1220);
    v1093(v973, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v972, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v971, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v970, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v969, v1172, v1217);
    v1126(v968, v1173, v1210);
    v1124(v967, v1160, v1204);
    v1122(v966, v1161, v1209);
    v1108(v965, v1157, v1216);
    uint64_t v315 = (void (*)(char *, char *, uint64_t))v1150[4];
    uint64_t v688 = v1150 + 4;
    v689 = v315;
    v315(v1072, v313, v314);
    v955 = &v1086[*(int *)(v1179 + 48)];
    v956 = &v1086[*((int *)v1180 + 12)];
    v957 = &v1086[*((int *)v1181 + 12)];
    uint64_t v958 = &v1086[*((int *)v1182 + 12)];
    uint64_t v959 = &v1086[*(int *)(v1183 + 48)];
    uint64_t v960 = &v1086[*(int *)(v1184 + 48)];
    v961 = &v1086[*((int *)v1185 + 12)];
    v962 = &v1086[*((int *)v1186 + 12)];
    v963 = &v1086[*((int *)v1187 + 12)];
    uint64_t v964 = &v1086[*((int *)v1188 + 12)];
    v1072 = &v1086[*((int *)v1189 + 12)];
    v749 = &v1086[*(int *)(v1190 + 48)];
    uint64_t v316 = v749;
    v750 = &v1086[*((int *)v1191 + 12)];
    uint64_t v317 = v750;
    v953 = &v1086[*((int *)v1192 + 12)];
    v752 = &v1086[*((int *)v1193 + 12)];
    uint64_t v318 = v752;
    v753 = &v1086[*((int *)v1194 + 12)];
    uint64_t v319 = v753;
    v754 = &v1086[*((int *)v1195 + 12)];
    uint64_t v320 = v754;
    v755 = &v1086[*((int *)v1196 + 12)];
    uint64_t v321 = v755;
    v756 = &v1086[*((int *)v1197 + 12)];
    uint64_t v322 = v756;
    v757 = &v1086[*((int *)v1198 + 12)];
    uint64_t v323 = v757;
    v758 = &v1086[*((int *)v1199 + 12)];
    uint64_t v324 = v758;
    v1106();
    v1113(v324, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v323, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v322, v1137, v1208);
    v1095(v321, v1136, v1201);
    v1094(v320, v1167, v1221);
    v1110(v319, v1168, v1207);
    v1097(v318, v1169, v1215);
    uint64_t v325 = v953;
    uint64_t v326 = v1206;
    v1118(v953, v1170, v1206);
    v1096(v317, v1158, v1213);
    v1115(v316, v1159, v1205);
    v1109(v1072, v1162, v1200);
    v1104(v964, v1163, v1220);
    v1093(v963, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v962, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v961, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v960, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v959, v1172, v1217);
    v1126(v958, v1173, v1210);
    v1124(v957, v1160, v1204);
    v1122(v956, v1161, v1209);
    v1108(v955, v1157, v1216);
    uint64_t v327 = (void (*)(char *, char *, uint64_t))v1149[4];
    v685 = v1149 + 4;
    v686 = v327;
    v327(v954, v325, v326);
    v944 = &v1085[*(int *)(v1179 + 48)];
    v945 = &v1085[*((int *)v1180 + 12)];
    v946 = &v1085[*((int *)v1181 + 12)];
    v947 = &v1085[*((int *)v1182 + 12)];
    v948 = &v1085[*(int *)(v1183 + 48)];
    v949 = &v1085[*(int *)(v1184 + 48)];
    uint64_t v950 = &v1085[*((int *)v1185 + 12)];
    uint64_t v951 = &v1085[*((int *)v1186 + 12)];
    v952 = &v1085[*((int *)v1187 + 12)];
    v953 = &v1085[*((int *)v1188 + 12)];
    v954 = &v1085[*((int *)v1189 + 12)];
    v738 = &v1085[*(int *)(v1190 + 48)];
    v328 = v738;
    v942 = &v1085[*((int *)v1191 + 12)];
    v739 = &v1085[*((int *)v1192 + 12)];
    uint64_t v329 = v739;
    v740 = &v1085[*((int *)v1193 + 12)];
    uint64_t v330 = v740;
    v741 = &v1085[*((int *)v1194 + 12)];
    uint64_t v331 = v741;
    v742 = &v1085[*((int *)v1195 + 12)];
    uint64_t v332 = v742;
    v743 = &v1085[*((int *)v1196 + 12)];
    uint64_t v333 = v743;
    v746 = &v1085[*((int *)v1197 + 12)];
    uint64_t v334 = v746;
    v747 = &v1085[*((int *)v1198 + 12)];
    uint64_t v335 = v747;
    v748 = &v1085[*((int *)v1199 + 12)];
    uint64_t v336 = v748;
    v1106();
    v1113(v336, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v335, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v334, v1137, v1208);
    v1095(v333, v1136, v1201);
    v1094(v332, v1167, v1221);
    v1110(v331, v1168, v1207);
    v1097(v330, v1169, v1215);
    v1118(v329, v1170, v1206);
    uint64_t v337 = v942;
    uint64_t v338 = v1213;
    v1096(v942, v1158, v1213);
    v1115(v328, v1159, v1205);
    v1109(v954, v1162, v1200);
    v1104(v953, v1163, v1220);
    v1093(v952, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v951, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v950, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v949, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v948, v1172, v1217);
    v1126(v947, v1173, v1210);
    v1124(v946, v1160, v1204);
    v1122(v945, v1161, v1209);
    v1108(v944, v1157, v1216);
    uint64_t v339 = (void (*)(char *, char *, uint64_t))v1148[4];
    v675 = v1148 + 4;
    v676 = v339;
    v339(v943, v337, v338);
    v933 = &v1084[*(int *)(v1179 + 48)];
    v934 = &v1084[*((int *)v1180 + 12)];
    v935 = &v1084[*((int *)v1181 + 12)];
    v936 = &v1084[*((int *)v1182 + 12)];
    v937 = &v1084[*(int *)(v1183 + 48)];
    v938 = &v1084[*(int *)(v1184 + 48)];
    v939 = &v1084[*((int *)v1185 + 12)];
    v940 = &v1084[*((int *)v1186 + 12)];
    v941 = &v1084[*((int *)v1187 + 12)];
    v942 = &v1084[*((int *)v1188 + 12)];
    v943 = &v1084[*((int *)v1189 + 12)];
    v931 = &v1084[*(int *)(v1190 + 48)];
    v727 = &v1084[*((int *)v1191 + 12)];
    uint64_t v340 = v727;
    v728 = &v1084[*((int *)v1192 + 12)];
    uint64_t v341 = v728;
    v729 = &v1084[*((int *)v1193 + 12)];
    uint64_t v342 = v729;
    v730 = &v1084[*((int *)v1194 + 12)];
    uint64_t v343 = v730;
    v731 = &v1084[*((int *)v1195 + 12)];
    uint64_t v344 = v731;
    v732 = &v1084[*((int *)v1196 + 12)];
    uint64_t v345 = v732;
    v733 = &v1084[*((int *)v1197 + 12)];
    uint64_t v346 = v733;
    v734 = &v1084[*((int *)v1198 + 12)];
    uint64_t v347 = v734;
    v735 = &v1084[*((int *)v1199 + 12)];
    uint64_t v348 = v735;
    v1106();
    v1113(v348, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v347, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v346, v1137, v1208);
    v1095(v345, v1136, v1201);
    v1094(v344, v1167, v1221);
    v1110(v343, v1168, v1207);
    v1097(v342, v1169, v1215);
    v1118(v341, v1170, v1206);
    v1096(v340, v1158, v1213);
    uint64_t v349 = v931;
    uint64_t v350 = v1205;
    v1115(v931, v1159, v1205);
    v1109(v943, v1162, v1200);
    v1104(v942, v1163, v1220);
    v1093(v941, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v940, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v939, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v938, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v937, v1172, v1217);
    v1126(v936, v1173, v1210);
    v1124(v935, v1160, v1204);
    v1122(v934, v1161, v1209);
    v1108(v933, v1157, v1216);
    uint64_t v351 = (void (*)(char *, char *, uint64_t))v1147[4];
    v666 = v1147 + 4;
    v667 = v351;
    v351(v932, v349, v350);
    v922 = &v1083[*(int *)(v1179 + 48)];
    v923 = &v1083[*((int *)v1180 + 12)];
    v924 = &v1083[*((int *)v1181 + 12)];
    v925 = &v1083[*((int *)v1182 + 12)];
    v926 = &v1083[*(int *)(v1183 + 48)];
    v927 = &v1083[*(int *)(v1184 + 48)];
    v928 = &v1083[*((int *)v1185 + 12)];
    v929 = &v1083[*((int *)v1186 + 12)];
    v930 = &v1083[*((int *)v1187 + 12)];
    v931 = &v1083[*((int *)v1188 + 12)];
    uint64_t v920 = &v1083[*((int *)v1189 + 12)];
    v932 = &v1083[*(int *)(v1190 + 48)];
    v714 = &v1083[*((int *)v1191 + 12)];
    uint64_t v352 = v714;
    v715 = &v1083[*((int *)v1192 + 12)];
    uint64_t v353 = v715;
    v716 = &v1083[*((int *)v1193 + 12)];
    uint64_t v354 = v716;
    v717 = &v1083[*((int *)v1194 + 12)];
    uint64_t v355 = v717;
    v718 = &v1083[*((int *)v1195 + 12)];
    uint64_t v356 = v718;
    v719 = &v1083[*((int *)v1196 + 12)];
    uint64_t v357 = v719;
    v720 = &v1083[*((int *)v1197 + 12)];
    uint64_t v358 = v720;
    v721 = &v1083[*((int *)v1198 + 12)];
    uint64_t v359 = v721;
    v722 = &v1083[*((int *)v1199 + 12)];
    uint64_t v360 = v722;
    v1106();
    v1113(v360, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v359, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v358, v1137, v1208);
    v1095(v357, v1136, v1201);
    v1094(v356, v1167, v1221);
    v1110(v355, v1168, v1207);
    v1097(v354, v1169, v1215);
    v1118(v353, v1170, v1206);
    v1096(v352, v1158, v1213);
    v1115(v932, v1159, v1205);
    uint64_t v361 = v920;
    uint64_t v362 = v1200;
    v1109(v920, v1162, v1200);
    v1104(v931, v1163, v1220);
    v1093(v930, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v929, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v928, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v927, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v926, v1172, v1217);
    v1126(v925, v1173, v1210);
    v1124(v924, v1160, v1204);
    v1122(v923, v1161, v1209);
    v1108(v922, v1157, v1216);
    uint64_t v363 = (void (*)(char *, char *, uint64_t))v1146[4];
    v662 = v1146 + 4;
    v663 = v363;
    v363(v921, v361, v362);
    uint64_t v911 = &v1082[*(int *)(v1179 + 48)];
    uint64_t v912 = &v1082[*((int *)v1180 + 12)];
    uint64_t v913 = &v1082[*((int *)v1181 + 12)];
    uint64_t v914 = &v1082[*((int *)v1182 + 12)];
    uint64_t v915 = &v1082[*(int *)(v1183 + 48)];
    uint64_t v916 = &v1082[*(int *)(v1184 + 48)];
    uint64_t v917 = &v1082[*((int *)v1185 + 12)];
    uint64_t v918 = &v1082[*((int *)v1186 + 12)];
    uint64_t v919 = &v1082[*((int *)v1187 + 12)];
    uint64_t v909 = &v1082[*((int *)v1188 + 12)];
    uint64_t v920 = &v1082[*((int *)v1189 + 12)];
    uint64_t v921 = &v1082[*(int *)(v1190 + 48)];
    uint64_t v701 = &v1082[*((int *)v1191 + 12)];
    uint64_t v364 = v701;
    uint64_t v702 = &v1082[*((int *)v1192 + 12)];
    uint64_t v365 = v702;
    uint64_t v703 = &v1082[*((int *)v1193 + 12)];
    uint64_t v366 = v703;
    uint64_t v704 = &v1082[*((int *)v1194 + 12)];
    uint64_t v367 = v704;
    v707 = &v1082[*((int *)v1195 + 12)];
    uint64_t v368 = v707;
    v708 = &v1082[*((int *)v1196 + 12)];
    uint64_t v369 = v708;
    v709 = &v1082[*((int *)v1197 + 12)];
    uint64_t v370 = v709;
    v710 = &v1082[*((int *)v1198 + 12)];
    uint64_t v371 = v710;
    v711 = &v1082[*((int *)v1199 + 12)];
    uint64_t v372 = v711;
    v1106();
    v1113(v372, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v371, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v370, v1137, v1208);
    v1095(v369, v1136, v1201);
    v1094(v368, v1167, v1221);
    v1110(v367, v1168, v1207);
    v1097(v366, v1169, v1215);
    v1118(v365, v1170, v1206);
    v1096(v364, v1158, v1213);
    v1115(v921, v1159, v1205);
    v1109(v920, v1162, v1200);
    uint64_t v373 = v909;
    uint64_t v374 = v1220;
    v1104(v909, v1163, v1220);
    v1093(v919, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v918, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v917, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v916, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v915, v1172, v1217);
    v1126(v914, v1173, v1210);
    v1124(v913, v1160, v1204);
    v1122(v912, v1161, v1209);
    v1108(v911, v1157, v1216);
    uint64_t v375 = (void (*)(char *, char *, uint64_t))v1177[4];
    uint64_t v651 = v1177 + 4;
    v652 = v375;
    v375(v910, v373, v374);
    v900 = &v1081[*(int *)(v1179 + 48)];
    v901 = &v1081[*((int *)v1180 + 12)];
    v902 = &v1081[*((int *)v1181 + 12)];
    v903 = &v1081[*((int *)v1182 + 12)];
    uint64_t v904 = &v1081[*(int *)(v1183 + 48)];
    uint64_t v905 = &v1081[*(int *)(v1184 + 48)];
    uint64_t v906 = &v1081[*((int *)v1185 + 12)];
    uint64_t v907 = &v1081[*((int *)v1186 + 12)];
    uint64_t v898 = &v1081[*((int *)v1187 + 12)];
    uint64_t v908 = &v1081[*((int *)v1188 + 12)];
    uint64_t v909 = &v1081[*((int *)v1189 + 12)];
    uint64_t v910 = &v1081[*(int *)(v1190 + 48)];
    uint64_t v690 = &v1081[*((int *)v1191 + 12)];
    uint64_t v376 = v690;
    uint64_t v691 = &v1081[*((int *)v1192 + 12)];
    uint64_t v377 = v691;
    uint64_t v692 = &v1081[*((int *)v1193 + 12)];
    uint64_t v378 = v692;
    uint64_t v693 = &v1081[*((int *)v1194 + 12)];
    uint64_t v379 = v693;
    uint64_t v694 = &v1081[*((int *)v1195 + 12)];
    uint64_t v380 = v694;
    uint64_t v695 = &v1081[*((int *)v1196 + 12)];
    uint64_t v381 = v695;
    uint64_t v696 = &v1081[*((int *)v1197 + 12)];
    uint64_t v382 = v696;
    uint64_t v697 = &v1081[*((int *)v1198 + 12)];
    uint64_t v383 = v697;
    uint64_t v698 = &v1081[*((int *)v1199 + 12)];
    uint64_t v384 = v698;
    v1106();
    v1113(v384, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v383, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v382, v1137, v1208);
    v1095(v381, v1136, v1201);
    v1094(v380, v1167, v1221);
    v1110(v379, v1168, v1207);
    v1097(v378, v1169, v1215);
    v1118(v377, v1170, v1206);
    v1096(v376, v1158, v1213);
    v1115(v910, v1159, v1205);
    v1109(v909, v1162, v1200);
    v1104(v908, v1163, v1220);
    v385 = v898;
    uint64_t v386 = v1219;
    v1093(v898, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v907, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v906, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v905, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v904, v1172, v1217);
    v1126(v903, v1173, v1210);
    v1124(v902, v1160, v1204);
    v1122(v901, v1161, v1209);
    v1108(v900, v1157, v1216);
    uint64_t v387 = (void (*)(char *, char *, uint64_t))v1176[4];
    uint64_t v647 = v1176 + 4;
    uint64_t v648 = v387;
    v387(v899, v385, v386);
    v889 = &v1080[*(int *)(v1179 + 48)];
    v890 = &v1080[*((int *)v1180 + 12)];
    v891 = &v1080[*((int *)v1181 + 12)];
    v892 = &v1080[*((int *)v1182 + 12)];
    v893 = &v1080[*(int *)(v1183 + 48)];
    v894 = &v1080[*(int *)(v1184 + 48)];
    v895 = &v1080[*((int *)v1185 + 12)];
    uint64_t v887 = &v1080[*((int *)v1186 + 12)];
    v896 = &v1080[*((int *)v1187 + 12)];
    v897 = &v1080[*((int *)v1188 + 12)];
    uint64_t v898 = &v1080[*((int *)v1189 + 12)];
    v899 = &v1080[*(int *)(v1190 + 48)];
    v677 = &v1080[*((int *)v1191 + 12)];
    uint64_t v388 = v677;
    uint64_t v678 = &v1080[*((int *)v1192 + 12)];
    uint64_t v389 = v678;
    v679 = &v1080[*((int *)v1193 + 12)];
    uint64_t v390 = v679;
    v680 = &v1080[*((int *)v1194 + 12)];
    uint64_t v391 = v680;
    v681 = &v1080[*((int *)v1195 + 12)];
    uint64_t v392 = v681;
    v682 = &v1080[*((int *)v1196 + 12)];
    uint64_t v393 = v682;
    uint64_t v683 = &v1080[*((int *)v1197 + 12)];
    uint64_t v394 = v683;
    v684 = &v1080[*((int *)v1198 + 12)];
    uint64_t v395 = v684;
    uint64_t v687 = &v1080[*((int *)v1199 + 12)];
    uint64_t v396 = v687;
    v1106();
    v1113(v396, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v395, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v394, v1137, v1208);
    v1095(v393, v1136, v1201);
    v1094(v392, v1167, v1221);
    v1110(v391, v1168, v1207);
    v1097(v390, v1169, v1215);
    v1118(v389, v1170, v1206);
    v1096(v388, v1158, v1213);
    v1115(v899, v1159, v1205);
    v1109(v898, v1162, v1200);
    v1104(v897, v1163, v1220);
    v1093(v896, v1164, v1219);
    uint64_t v397 = v887;
    uint64_t v398 = v1212;
    ((void (*)(char *, char *, uint64_t))v1134)(v887, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v895, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v894, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v893, v1172, v1217);
    v1126(v892, v1173, v1210);
    v1124(v891, v1160, v1204);
    v1122(v890, v1161, v1209);
    v1108(v889, v1157, v1216);
    uint64_t v399 = (void (*)(char *, char *, uint64_t))v1145[4];
    uint64_t v640 = v1145 + 4;
    uint64_t v641 = v399;
    v399(v888, v397, v398);
    v878 = &v1079[*(int *)(v1179 + 48)];
    v879 = &v1079[*((int *)v1180 + 12)];
    v880 = &v1079[*((int *)v1181 + 12)];
    v881 = &v1079[*((int *)v1182 + 12)];
    v882 = &v1079[*(int *)(v1183 + 48)];
    v883 = &v1079[*(int *)(v1184 + 48)];
    v876 = &v1079[*((int *)v1185 + 12)];
    v884 = &v1079[*((int *)v1186 + 12)];
    uint64_t v885 = &v1079[*((int *)v1187 + 12)];
    v886 = &v1079[*((int *)v1188 + 12)];
    uint64_t v887 = &v1079[*((int *)v1189 + 12)];
    v888 = &v1079[*(int *)(v1190 + 48)];
    v664 = &v1079[*((int *)v1191 + 12)];
    uint64_t v400 = v664;
    v665 = &v1079[*((int *)v1192 + 12)];
    v401 = v665;
    v668 = &v1079[*((int *)v1193 + 12)];
    uint64_t v402 = v668;
    v669 = &v1079[*((int *)v1194 + 12)];
    uint64_t v403 = v669;
    v670 = &v1079[*((int *)v1195 + 12)];
    uint64_t v404 = v670;
    v671 = &v1079[*((int *)v1196 + 12)];
    uint64_t v405 = v671;
    v672 = &v1079[*((int *)v1197 + 12)];
    uint64_t v406 = v672;
    v673 = &v1079[*((int *)v1198 + 12)];
    uint64_t v407 = v673;
    v674 = &v1079[*((int *)v1199 + 12)];
    uint64_t v408 = v674;
    v1106();
    v1113(v408, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v407, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v406, v1137, v1208);
    v1095(v405, v1136, v1201);
    v1094(v404, v1167, v1221);
    v1110(v403, v1168, v1207);
    v1097(v402, v1169, v1215);
    v1118(v401, v1170, v1206);
    v1096(v400, v1158, v1213);
    v1115(v888, v1159, v1205);
    v1109(v887, v1162, v1200);
    v1104(v886, v1163, v1220);
    v1093(v885, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v884, v1165, v1212);
    uint64_t v409 = v876;
    uint64_t v410 = v1218;
    ((void (*)(char *, char *, uint64_t))v1132)(v876, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v883, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v882, v1172, v1217);
    v1126(v881, v1173, v1210);
    v1124(v880, v1160, v1204);
    v1122(v879, v1161, v1209);
    v1108(v878, v1157, v1216);
    uint64_t v411 = (void (*)(char *, char *, uint64_t))v1144[4];
    v630 = v1144 + 4;
    uint64_t v631 = v411;
    v411(v877, v409, v410);
    v867 = &v1078[*(int *)(v1179 + 48)];
    v868 = &v1078[*((int *)v1180 + 12)];
    v869 = &v1078[*((int *)v1181 + 12)];
    v870 = &v1078[*((int *)v1182 + 12)];
    v871 = &v1078[*(int *)(v1183 + 48)];
    v865 = &v1078[*(int *)(v1184 + 48)];
    v872 = &v1078[*((int *)v1185 + 12)];
    v873 = &v1078[*((int *)v1186 + 12)];
    v874 = &v1078[*((int *)v1187 + 12)];
    v875 = &v1078[*((int *)v1188 + 12)];
    v876 = &v1078[*((int *)v1189 + 12)];
    v877 = &v1078[*(int *)(v1190 + 48)];
    v653 = &v1078[*((int *)v1191 + 12)];
    uint64_t v412 = v653;
    v654 = &v1078[*((int *)v1192 + 12)];
    uint64_t v413 = v654;
    v655 = &v1078[*((int *)v1193 + 12)];
    uint64_t v414 = v655;
    uint64_t v656 = &v1078[*((int *)v1194 + 12)];
    uint64_t v415 = v656;
    v657 = &v1078[*((int *)v1195 + 12)];
    uint64_t v416 = v657;
    v658 = &v1078[*((int *)v1196 + 12)];
    uint64_t v417 = v658;
    v659 = &v1078[*((int *)v1197 + 12)];
    uint64_t v418 = v659;
    v660 = &v1078[*((int *)v1198 + 12)];
    uint64_t v419 = v660;
    v661 = &v1078[*((int *)v1199 + 12)];
    uint64_t v420 = v661;
    v1106();
    v1113(v420, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v419, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v418, v1137, v1208);
    v1095(v417, v1136, v1201);
    v1094(v416, v1167, v1221);
    v1110(v415, v1168, v1207);
    v1097(v414, v1169, v1215);
    v1118(v413, v1170, v1206);
    v1096(v412, v1158, v1213);
    v1115(v877, v1159, v1205);
    v1109(v876, v1162, v1200);
    v1104(v875, v1163, v1220);
    v1093(v874, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v873, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v872, v1166, v1218);
    uint64_t v421 = v865;
    uint64_t v422 = v1211;
    ((void (*)(char *, char *, uint64_t))v1130)(v865, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v871, v1172, v1217);
    v1126(v870, v1173, v1210);
    v1124(v869, v1160, v1204);
    v1122(v868, v1161, v1209);
    v1108(v867, v1157, v1216);
    uint64_t v423 = (void (*)(char *, char *, uint64_t))v1143[4];
    v628 = v1143 + 4;
    v629 = v423;
    v423(v866, v421, v422);
    v856 = &v1077[*(int *)(v1179 + 48)];
    v857 = &v1077[*((int *)v1180 + 12)];
    v858 = &v1077[*((int *)v1181 + 12)];
    v859 = &v1077[*((int *)v1182 + 12)];
    uint64_t v424 = &v1077[*(int *)(v1183 + 48)];
    v860 = &v1077[*(int *)(v1184 + 48)];
    v861 = &v1077[*((int *)v1185 + 12)];
    v862 = &v1077[*((int *)v1186 + 12)];
    v863 = &v1077[*((int *)v1187 + 12)];
    v864 = &v1077[*((int *)v1188 + 12)];
    v865 = &v1077[*((int *)v1189 + 12)];
    v866 = &v1077[*(int *)(v1190 + 48)];
    v854 = &v1077[*((int *)v1191 + 12)];
    v855 = &v1077[*((int *)v1192 + 12)];
    uint64_t v642 = &v1077[*((int *)v1193 + 12)];
    uint64_t v425 = v642;
    uint64_t v643 = &v1077[*((int *)v1194 + 12)];
    uint64_t v426 = v643;
    uint64_t v644 = &v1077[*((int *)v1195 + 12)];
    uint64_t v427 = v644;
    uint64_t v645 = &v1077[*((int *)v1196 + 12)];
    uint64_t v428 = v645;
    uint64_t v646 = &v1077[*((int *)v1197 + 12)];
    uint64_t v429 = v646;
    uint64_t v649 = &v1077[*((int *)v1198 + 12)];
    uint64_t v430 = v649;
    uint64_t v650 = &v1077[*((int *)v1199 + 12)];
    uint64_t v431 = v650;
    v1106();
    v1113(v431, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v430, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v429, v1137, v1208);
    v1095(v428, v1136, v1201);
    v1094(v427, v1167, v1221);
    v1110(v426, v1168, v1207);
    v1097(v425, v1169, v1215);
    v1118(v855, v1170, v1206);
    v1096(v854, v1158, v1213);
    v1115(v866, v1159, v1205);
    v1109(v865, v1162, v1200);
    v1104(v864, v1163, v1220);
    v1093(v863, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v862, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v861, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v860, v1171, v1211);
    uint64_t v432 = v1217;
    ((void (*)(char *, char *, uint64_t))v1128)(v424, v1172, v1217);
    v1126(v859, v1173, v1210);
    v1124(v858, v1160, v1204);
    v1122(v857, v1161, v1209);
    v1108(v856, v1157, v1216);
    uint64_t v433 = (void (*)(uint64_t, char *, uint64_t))v1142[4];
    v618 = v1142 + 4;
    v619 = v433;
    v433((uint64_t)v853, v424, v432);
    uint64_t v843 = &v1076[*(int *)(v1179 + 48)];
    uint64_t v844 = &v1076[*((int *)v1180 + 12)];
    uint64_t v845 = &v1076[*((int *)v1181 + 12)];
    uint64_t v434 = &v1076[*((int *)v1182 + 12)];
    uint64_t v846 = &v1076[*(int *)(v1183 + 48)];
    uint64_t v847 = &v1076[*(int *)(v1184 + 48)];
    uint64_t v848 = &v1076[*((int *)v1185 + 12)];
    uint64_t v849 = &v1076[*((int *)v1186 + 12)];
    uint64_t v850 = &v1076[*((int *)v1187 + 12)];
    uint64_t v851 = &v1076[*((int *)v1188 + 12)];
    v852 = &v1076[*((int *)v1189 + 12)];
    v853 = &v1076[*(int *)(v1190 + 48)];
    uint64_t v842 = &v1076[*((int *)v1191 + 12)];
    uint64_t v632 = &v1076[*((int *)v1192 + 12)];
    uint64_t v435 = v632;
    v633 = &v1076[*((int *)v1193 + 12)];
    uint64_t v436 = v633;
    uint64_t v634 = &v1076[*((int *)v1194 + 12)];
    uint64_t v437 = v634;
    v635 = &v1076[*((int *)v1195 + 12)];
    uint64_t v438 = v635;
    v636 = &v1076[*((int *)v1196 + 12)];
    uint64_t v439 = v636;
    uint64_t v637 = &v1076[*((int *)v1197 + 12)];
    uint64_t v440 = v637;
    uint64_t v638 = &v1076[*((int *)v1198 + 12)];
    uint64_t v441 = v638;
    uint64_t v639 = &v1076[*((int *)v1199 + 12)];
    uint64_t v442 = v639;
    v1106();
    v1113(v442, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v441, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v440, v1137, v1208);
    v1095(v439, v1136, v1201);
    v1094(v438, v1167, v1221);
    v1110(v437, v1168, v1207);
    v1097(v436, v1169, v1215);
    v1118(v435, v1170, v1206);
    v1096(v842, v1158, v1213);
    v1115(v853, v1159, v1205);
    v1109(v852, v1162, v1200);
    v1104(v851, v1163, v1220);
    v1093(v850, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v849, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v848, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v847, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v846, v1172, v1217);
    uint64_t v443 = v1210;
    v1126(v434, v1173, v1210);
    v1124(v845, v1160, v1204);
    v1122(v844, v1161, v1209);
    v1108(v843, v1157, v1216);
    uint64_t v444 = (void (*)(char *, char *, uint64_t))v1174[4];
    v612 = v1174 + 4;
    v613 = v444;
    v444(v841, v434, v443);
    v831 = &v1075[*(int *)(v1179 + 48)];
    uint64_t v832 = &v1075[*((int *)v1180 + 12)];
    uint64_t v445 = &v1075[*((int *)v1181 + 12)];
    v833 = &v1075[*((int *)v1182 + 12)];
    v834 = &v1075[*(int *)(v1183 + 48)];
    uint64_t v835 = &v1075[*(int *)(v1184 + 48)];
    uint64_t v836 = &v1075[*((int *)v1185 + 12)];
    uint64_t v837 = &v1075[*((int *)v1186 + 12)];
    uint64_t v838 = &v1075[*((int *)v1187 + 12)];
    uint64_t v839 = &v1075[*((int *)v1188 + 12)];
    uint64_t v840 = &v1075[*((int *)v1189 + 12)];
    uint64_t v841 = &v1075[*(int *)(v1190 + 48)];
    v830 = &v1075[*((int *)v1191 + 12)];
    v620 = &v1075[*((int *)v1192 + 12)];
    uint64_t v446 = v620;
    v621 = &v1075[*((int *)v1193 + 12)];
    uint64_t v447 = v621;
    v622 = &v1075[*((int *)v1194 + 12)];
    uint64_t v448 = v622;
    v623 = &v1075[*((int *)v1195 + 12)];
    uint64_t v449 = v623;
    v624 = &v1075[*((int *)v1196 + 12)];
    uint64_t v450 = v624;
    v625 = &v1075[*((int *)v1197 + 12)];
    uint64_t v451 = v625;
    v626 = &v1075[*((int *)v1198 + 12)];
    uint64_t v452 = v626;
    v627 = &v1075[*((int *)v1199 + 12)];
    uint64_t v453 = v627;
    v1106();
    v1113(v453, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v452, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v451, v1137, v1208);
    v1095(v450, v1136, v1201);
    v1094(v449, v1167, v1221);
    uint64_t v454 = v1207;
    v1110(v448, v1168, v1207);
    v1097(v447, v1169, v1215);
    v1118(v446, v1170, v1206);
    v1096(v830, v1158, v1213);
    v1115(v841, v1159, v1205);
    v1109(v840, v1162, v1200);
    v1104(v839, v1163, v1220);
    v1093(v838, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v837, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v836, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v835, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v834, v1172, v1217);
    v1126(v833, v1173, v1210);
    uint64_t v455 = v1204;
    v1124(v445, v1160, v1204);
    v1122(v832, v1161, v1209);
    v1108(v831, v1157, v1216);
    uint64_t v456 = (void (*)(char *, char *, uint64_t))v1141[4];
    v606 = v1141 + 4;
    v607 = v456;
    v456(v829, v445, v455);
    v818 = &v1074[*(int *)(v1179 + 48)];
    v605 = &v1074[*((int *)v1180 + 12)];
    uint64_t v819 = &v1074[*((int *)v1181 + 12)];
    v820 = &v1074[*((int *)v1182 + 12)];
    v821 = &v1074[*(int *)(v1183 + 48)];
    v822 = &v1074[*(int *)(v1184 + 48)];
    v823 = &v1074[*((int *)v1185 + 12)];
    uint64_t v824 = &v1074[*((int *)v1186 + 12)];
    v825 = &v1074[*((int *)v1187 + 12)];
    v826 = &v1074[*((int *)v1188 + 12)];
    v827 = &v1074[*((int *)v1189 + 12)];
    v828 = &v1074[*(int *)(v1190 + 48)];
    v829 = &v1074[*((int *)v1191 + 12)];
    v608 = &v1074[*((int *)v1192 + 12)];
    uint64_t v457 = v608;
    v609 = &v1074[*((int *)v1193 + 12)];
    uint64_t v458 = v609;
    v610 = &v1074[*((int *)v1194 + 12)];
    uint64_t v459 = v610;
    v611 = &v1074[*((int *)v1195 + 12)];
    uint64_t v460 = v611;
    uint64_t v614 = &v1074[*((int *)v1196 + 12)];
    uint64_t v461 = v614;
    v615 = &v1074[*((int *)v1197 + 12)];
    uint64_t v462 = v615;
    uint64_t v616 = &v1074[*((int *)v1198 + 12)];
    uint64_t v463 = v616;
    v617 = &v1074[*((int *)v1199 + 12)];
    uint64_t v464 = v617;
    v1106();
    v1113(v464, v1139, v1202);
    ((void (*)(char *, char *, uint64_t))v1105)(v463, v1138, v1203);
    ((void (*)(char *, char *, uint64_t))v1101)(v462, v1137, v1208);
    v1095(v461, v1136, v1201);
    v1094(v460, v1167, v1221);
    v1110(v459, v1168, v454);
    v1097(v458, v1169, v1215);
    v1118(v457, v1170, v1206);
    v1096(v829, v1158, v1213);
    v1115(v828, v1159, v1205);
    uint64_t v465 = v1200;
    v1109(v827, v1162, v1200);
    v1104(v826, v1163, v1220);
    v1093(v825, v1164, v1219);
    ((void (*)(char *, char *, uint64_t))v1134)(v824, v1165, v1212);
    ((void (*)(char *, char *, uint64_t))v1132)(v823, v1166, v1218);
    ((void (*)(char *, char *, uint64_t))v1130)(v822, v1171, v1211);
    ((void (*)(char *, char *, uint64_t))v1128)(v821, v1172, v1217);
    v1126(v820, v1173, v1210);
    v1124(v819, v1160, v1204);
    uint64_t v466 = v605;
    uint64_t v467 = v1209;
    v1122(v605, v1161, v1209);
    v1108(v818, v1157, v1216);
    uint64_t v468 = (void (*)(char *, char *, uint64_t))v1092[4];
    v1126 = (void (*)(char *, char *, uint64_t))(v1092 + 4);
    v1127 = v468;
    v468(v751, v466, v467);
    uint64_t v469 = v1073;
    v1128 = &v1073[*(int *)(v1179 + 48)];
    v1125 = &v1073[*((int *)v1180 + 12)];
    uint64_t v1132 = &v1073[*((int *)v1181 + 12)];
    uint64_t v1133 = &v1073[*((int *)v1182 + 12)];
    uint64_t v1179 = (uint64_t)&v1073[*(int *)(v1183 + 48)];
    uint64_t v1134 = &v1073[*(int *)(v1184 + 48)];
    uint64_t v1135 = &v1073[*((int *)v1185 + 12)];
    v1180 = &v1073[*((int *)v1186 + 12)];
    v1185 = &v1073[*((int *)v1187 + 12)];
    v1181 = &v1073[*((int *)v1188 + 12)];
    v1188 = &v1073[*((int *)v1189 + 12)];
    v1187 = &v1073[*(int *)(v1190 + 48)];
    v1186 = &v1073[*((int *)v1191 + 12)];
    v1192 = &v1073[*((int *)v1192 + 12)];
    uint64_t v1129 = &v1073[*((int *)v1193 + 12)];
    uint64_t v470 = v1129;
    uint64_t v1130 = &v1073[*((int *)v1194 + 12)];
    uint64_t v471 = v1130;
    v1195 = &v1073[*((int *)v1195 + 12)];
    uint64_t v472 = v1195;
    uint64_t v1131 = &v1073[*((int *)v1196 + 12)];
    uint64_t v473 = v1131;
    v1194 = &v1073[*((int *)v1197 + 12)];
    uint64_t v474 = v1194;
    v1197 = &v1073[*((int *)v1198 + 12)];
    uint64_t v475 = v1197;
    v1199 = &v1073[*((int *)v1199 + 12)];
    uint64_t v476 = v1199;
    v745(v1073, v1140, v1214);
    v737(v476, v1139, v1202);
    v726(v475, v1138, v1203);
    v724(v474, v1137, v1208);
    v713(v473, v1136, v1201);
    v706(v472, v1167, v1221);
    v700(v471, v1168, v1207);
    v689(v470, v1169, v1215);
    v686(v1192, v1170, v1206);
    v676(v1186, v1158, v1213);
    v667(v1187, v1159, v1205);
    v663(v1188, v1162, v465);
    v652(v1181, v1163, v1220);
    v648(v1185, v1164, v1219);
    v641(v1180, v1165, v1212);
    v631(v1135, v1166, v1218);
    v629(v1134, v1171, v1211);
    v619(v1179, v1172, v1217);
    uint64_t v477 = v1210;
    v613(v1133, v1173, v1210);
    uint64_t v478 = v1204;
    v607(v1132, v1160, v1204);
    uint64_t v479 = v1125;
    uint64_t v480 = v1209;
    v1127(v1125, v1161, v1209);
    uint64_t v481 = (void (*)(char *, char *, uint64_t))v1175[4];
    uint64_t v482 = v1128;
    uint64_t v483 = v1216;
    v481(v1128, v1157, v1216);
    v481(v759, v482, v483);
    uint64_t v484 = (int *)v1092[1];
    ++v1092;
    v1182 = (void (*)(char *, uint64_t))v484;
    ((void (*)(char *, uint64_t))v484)(v479, v480);
    uint64_t v1190 = v1141[1];
    ++v1141;
    ((void (*)(char *, uint64_t))v1190)(v1132, v478);
    uint64_t v1183 = v1174[1];
    ++v1174;
    ((void (*)(char *, uint64_t))v1183)(v1133, v477);
    uint64_t v1184 = v1142[1];
    ++v1142;
    ((void (*)(uint64_t, uint64_t))v1184)(v1179, v1217);
    uint64_t v485 = (void (*)(char *, uint64_t))v1143[1];
    ++v1143;
    uint64_t v1179 = (uint64_t)v485;
    uint64_t v486 = v1211;
    v485(v1134, v1211);
    uint64_t v487 = (int *)v1144[1];
    ++v1144;
    v1193 = (void (*)(char *, uint64_t))v487;
    ((void (*)(char *, uint64_t))v487)(v1135, v1218);
    uint64_t v488 = (int *)v1145[1];
    ++v1145;
    v1189 = (void (*)(char *, uint64_t))v488;
    ((void (*)(char *, uint64_t))v488)(v1180, v1212);
    uint64_t v489 = (int *)v1176[1];
    ++v1176;
    v1198 = (void (*)(char *, uint64_t))v489;
    uint64_t v490 = v1219;
    ((void (*)(char *, uint64_t))v489)(v1185, v1219);
    v1185 = (char *)v1177[1];
    ++v1177;
    ((void (*)(char *, uint64_t))v1185)(v1181, v1220);
    uint64_t v491 = (int *)v1146[1];
    ++v1146;
    v1191 = (void (*)(char *, uint64_t))v491;
    uint64_t v492 = v1200;
    ((void (*)(char *, uint64_t))v491)(v1188, v1200);
    uint64_t v493 = (char *)v1147[1];
    ++v1147;
    v1188 = v493;
    uint64_t v494 = v1205;
    ((void (*)(char *))v493)(v1187);
    uint64_t v495 = (char *)v1148[1];
    ++v1148;
    v1187 = v495;
    ((void (*)(char *, uint64_t))v495)(v1186, v1213);
    uint64_t v496 = (int *)v1149[1];
    ++v1149;
    v1196 = (void (*)(char *, uint64_t))v496;
    uint64_t v497 = v1206;
    ((void (*)(char *, uint64_t))v496)(v1192, v1206);
    v1186 = (char *)v1150[1];
    ++v1150;
    uint64_t v498 = v1215;
    ((void (*)(char *, uint64_t))v1186)(v1129, v1215);
    v1181 = (char *)v1151[1];
    ++v1151;
    ((void (*)(char *, uint64_t))v1181)(v1130, v1207);
    v1192 = (char *)v1152[1];
    ++v1152;
    ((void (*)(char *, uint64_t))v1192)(v1195, v1221);
    uint64_t v499 = (char *)v1153[1];
    ++v1153;
    v1195 = v499;
    uint64_t v500 = v1201;
    ((void (*)(char *, uint64_t))v499)(v1131, v1201);
    v1173 = (char *)v1154[1];
    ++v1154;
    ((void (*)(char *, uint64_t))v1173)(v1194, v1208);
    uint64_t v501 = (char *)v1155[1];
    ++v1155;
    v1194 = v501;
    ((void (*)(char *, uint64_t))v501)(v1197, v1203);
    v1180 = (char *)v1178[1];
    ++v1178;
    ((void (*)(char *, uint64_t))v1180)(v1199, v1202);
    uint64_t v502 = (char *)v1156[1];
    ++v1156;
    v1197 = v502;
    uint64_t v503 = v1214;
    ((void (*)(char *, uint64_t))v502)(v469, v1214);
    uint64_t v504 = (char *)v1175[1];
    ++v1175;
    v1199 = v504;
    ((void (*)(char *, uint64_t))v504)(v818, v1216);
    ((void (*)(char *, uint64_t))v1190)(v819, v1204);
    ((void (*)(char *, uint64_t))v1183)(v820, v1210);
    ((void (*)(char *, uint64_t))v1184)(v821, v1217);
    ((void (*)(char *, uint64_t))v1179)(v822, v486);
    v1193(v823, v1218);
    v1189(v824, v1212);
    v1198(v825, v490);
    uint64_t v505 = v1220;
    ((void (*)(char *, uint64_t))v1185)(v826, v1220);
    uint64_t v506 = v492;
    v1191(v827, v492);
    uint64_t v507 = v494;
    ((void (*)(char *, uint64_t))v1188)(v828, v494);
    uint64_t v508 = v1213;
    ((void (*)(char *, uint64_t))v1187)(v829, v1213);
    v1196(v608, v497);
    ((void (*)(char *, uint64_t))v1186)(v609, v498);
    uint64_t v509 = v1207;
    ((void (*)(char *, uint64_t))v1181)(v610, v1207);
    ((void (*)(char *, uint64_t))v1192)(v611, v1221);
    uint64_t v510 = v500;
    ((void (*)(char *, uint64_t))v1195)(v614, v500);
    ((void (*)(char *, uint64_t))v1173)(v615, v1208);
    ((void (*)(char *, uint64_t))v1194)(v616, v1203);
    ((void (*)(char *, uint64_t))v1180)(v617, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1074, v503);
    uint64_t v511 = v1216;
    ((void (*)(char *, uint64_t))v1199)(v831, v1216);
    v1182(v832, v1209);
    ((void (*)(char *, uint64_t))v1183)(v833, v1210);
    ((void (*)(char *, uint64_t))v1184)(v834, v1217);
    ((void (*)(char *, uint64_t))v1179)(v835, v486);
    v1193(v836, v1218);
    uint64_t v512 = v1212;
    v1189(v837, v1212);
    v1198(v838, v1219);
    ((void (*)(char *, uint64_t))v1185)(v839, v505);
    v1191(v840, v506);
    ((void (*)(char *, uint64_t))v1188)(v841, v507);
    ((void (*)(char *, uint64_t))v1187)(v830, v508);
    v1196(v620, v1206);
    ((void (*)(char *, uint64_t))v1186)(v621, v1215);
    ((void (*)(char *, uint64_t))v1181)(v622, v509);
    uint64_t v513 = v1192;
    ((void (*)(char *, uint64_t))v1192)(v623, v1221);
    ((void (*)(char *, uint64_t))v1195)(v624, v510);
    uint64_t v514 = v1208;
    ((void (*)(char *, uint64_t))v1173)(v625, v1208);
    ((void (*)(char *, uint64_t))v1194)(v626, v1203);
    uint64_t v515 = v1202;
    ((void (*)(char *, uint64_t))v1180)(v627, v1202);
    uint64_t v516 = v1214;
    ((void (*)(char *, uint64_t))v1197)(v1075, v1214);
    ((void (*)(char *, uint64_t))v1199)(v843, v511);
    v1182(v844, v1209);
    uint64_t v517 = v1204;
    ((void (*)(char *, uint64_t))v1190)(v845, v1204);
    ((void (*)(char *, uint64_t))v1184)(v846, v1217);
    ((void (*)(char *, uint64_t))v1179)(v847, v1211);
    v1193(v848, v1218);
    v1189(v849, v512);
    v1198(v850, v1219);
    ((void (*)(char *, uint64_t))v1185)(v851, v1220);
    v1191(v852, v1200);
    ((void (*)(char *, uint64_t))v1188)(v853, v1205);
    ((void (*)(char *, uint64_t))v1187)(v842, v1213);
    v1196(v632, v1206);
    uint64_t v518 = v1215;
    ((void (*)(char *, uint64_t))v1186)(v633, v1215);
    ((void (*)(char *, uint64_t))v1181)(v634, v1207);
    uint64_t v519 = v1221;
    ((void (*)(char *, uint64_t))v513)(v635, v1221);
    ((void (*)(char *, uint64_t))v1195)(v636, v1201);
    ((void (*)(char *, uint64_t))v1173)(v637, v514);
    uint64_t v520 = v1203;
    ((void (*)(char *, uint64_t))v1194)(v638, v1203);
    uint64_t v521 = v515;
    uint64_t v522 = v1180;
    ((void (*)(char *, uint64_t))v1180)(v639, v521);
    ((void (*)(char *, uint64_t))v1197)(v1076, v516);
    ((void (*)(char *, uint64_t))v1199)(v856, v1216);
    uint64_t v523 = v1182;
    v1182(v857, v1209);
    ((void (*)(char *, uint64_t))v1190)(v858, v517);
    uint64_t v524 = v1210;
    ((void (*)(char *, uint64_t))v1183)(v859, v1210);
    ((void (*)(char *, uint64_t))v1179)(v860, v1211);
    v1193(v861, v1218);
    v1189(v862, v1212);
    v1198(v863, v1219);
    ((void (*)(char *, uint64_t))v1185)(v864, v1220);
    v1191(v865, v1200);
    ((void (*)(char *, uint64_t))v1188)(v866, v1205);
    ((void (*)(char *, uint64_t))v1187)(v854, v1213);
    v1196(v855, v1206);
    ((void (*)(char *, uint64_t))v1186)(v642, v518);
    uint64_t v525 = v1207;
    ((void (*)(char *, uint64_t))v1181)(v643, v1207);
    ((void (*)(char *, uint64_t))v1192)(v644, v519);
    ((void (*)(char *, uint64_t))v1195)(v645, v1201);
    ((void (*)(char *, uint64_t))v1173)(v646, v1208);
    ((void (*)(char *, uint64_t))v1194)(v649, v520);
    ((void (*)(char *, uint64_t))v522)(v650, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1077, v1214);
    ((void (*)(char *, uint64_t))v1199)(v867, v1216);
    v523(v868, v1209);
    uint64_t v526 = v1204;
    uint64_t v527 = (void (*)(char *, uint64_t))v1190;
    ((void (*)(char *, uint64_t))v1190)(v869, v1204);
    ((void (*)(char *, uint64_t))v1183)(v870, v524);
    uint64_t v528 = v1217;
    uint64_t v529 = (void (*)(char *, uint64_t))v1184;
    ((void (*)(char *, uint64_t))v1184)(v871, v1217);
    v1193(v872, v1218);
    v1189(v873, v1212);
    v1198(v874, v1219);
    ((void (*)(char *, uint64_t))v1185)(v875, v1220);
    uint64_t v530 = v1200;
    v1191(v876, v1200);
    ((void (*)(char *, uint64_t))v1188)(v877, v1205);
    ((void (*)(char *, uint64_t))v1187)(v653, v1213);
    uint64_t v531 = v1206;
    v1196(v654, v1206);
    ((void (*)(char *, uint64_t))v1186)(v655, v1215);
    ((void (*)(char *, uint64_t))v1181)(v656, v525);
    ((void (*)(char *, uint64_t))v1192)(v657, v1221);
    ((void (*)(char *, uint64_t))v1195)(v658, v1201);
    ((void (*)(char *, uint64_t))v1173)(v659, v1208);
    ((void (*)(char *, uint64_t))v1194)(v660, v1203);
    ((void (*)(char *, uint64_t))v1180)(v661, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1078, v1214);
    ((void (*)(char *, uint64_t))v1199)(v878, v1216);
    uint64_t v532 = v1209;
    v1182(v879, v1209);
    v527(v880, v526);
    ((void (*)(char *, uint64_t))v1183)(v881, v1210);
    v529(v882, v528);
    uint64_t v533 = (void (*)(char *, uint64_t))v1179;
    ((void (*)(char *, uint64_t))v1179)(v883, v1211);
    v1189(v884, v1212);
    v1198(v885, v1219);
    ((void (*)(char *, uint64_t))v1185)(v886, v1220);
    v1191(v887, v530);
    ((void (*)(char *, uint64_t))v1188)(v888, v1205);
    ((void (*)(char *, uint64_t))v1187)(v664, v1213);
    v1196(v665, v531);
    ((void (*)(char *, uint64_t))v1186)(v668, v1215);
    uint64_t v534 = v1181;
    ((void (*)(char *, uint64_t))v1181)(v669, v1207);
    ((void (*)(char *, uint64_t))v1192)(v670, v1221);
    ((void (*)(char *, uint64_t))v1195)(v671, v1201);
    uint64_t v535 = v1173;
    ((void (*)(char *, uint64_t))v1173)(v672, v1208);
    ((void (*)(char *, uint64_t))v1194)(v673, v1203);
    uint64_t v536 = v1202;
    ((void (*)(char *, uint64_t))v1180)(v674, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1079, v1214);
    ((void (*)(char *, uint64_t))v1199)(v889, v1216);
    v1182(v890, v532);
    ((void (*)(char *, uint64_t))v1190)(v891, v1204);
    ((void (*)(char *, uint64_t))v1183)(v892, v1210);
    ((void (*)(char *, uint64_t))v1184)(v893, v1217);
    v533(v894, v1211);
    uint64_t v537 = v1193;
    v1193(v895, v1218);
    v1198(v896, v1219);
    uint64_t v538 = v1185;
    ((void (*)(char *, uint64_t))v1185)(v897, v1220);
    v1191(v898, v1200);
    uint64_t v539 = v1205;
    ((void (*)(char *, uint64_t))v1188)(v899, v1205);
    ((void (*)(char *, uint64_t))v1187)(v677, v1213);
    v1196(v678, v1206);
    ((void (*)(char *, uint64_t))v1186)(v679, v1215);
    ((void (*)(char *, uint64_t))v534)(v680, v1207);
    ((void (*)(char *, uint64_t))v1192)(v681, v1221);
    uint64_t v540 = v1201;
    ((void (*)(char *, uint64_t))v1195)(v682, v1201);
    ((void (*)(char *, uint64_t))v535)(v683, v1208);
    ((void (*)(char *, uint64_t))v1194)(v684, v1203);
    ((void (*)(char *, uint64_t))v1180)(v687, v536);
    ((void (*)(char *, uint64_t))v1197)(v1080, v1214);
    ((void (*)(char *, uint64_t))v1199)(v900, v1216);
    v1182(v901, v1209);
    ((void (*)(char *, uint64_t))v1190)(v902, v1204);
    v541 = (void (*)(char *, uint64_t))v1183;
    ((void (*)(char *, uint64_t))v1183)(v903, v1210);
    ((void (*)(char *, uint64_t))v1184)(v904, v1217);
    v533(v905, v1211);
    uint64_t v542 = v1218;
    v537(v906, v1218);
    uint64_t v543 = v1212;
    v544 = v1189;
    v1189(v907, v1212);
    ((void (*)(char *, uint64_t))v538)(v908, v1220);
    uint64_t v545 = v1191;
    v1191(v909, v1200);
    ((void (*)(char *, uint64_t))v1188)(v910, v539);
    ((void (*)(char *, uint64_t))v1187)(v690, v1213);
    v1196(v691, v1206);
    ((void (*)(char *, uint64_t))v1186)(v692, v1215);
    ((void (*)(char *, uint64_t))v1181)(v693, v1207);
    ((void (*)(char *, uint64_t))v1192)(v694, v1221);
    ((void (*)(char *, uint64_t))v1195)(v695, v540);
    ((void (*)(char *, uint64_t))v1173)(v696, v1208);
    uint64_t v546 = v1203;
    ((void (*)(char *, uint64_t))v1194)(v697, v1203);
    ((void (*)(char *, uint64_t))v1180)(v698, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1081, v1214);
    ((void (*)(char *, uint64_t))v1199)(v911, v1216);
    v1182(v912, v1209);
    ((void (*)(char *, uint64_t))v1190)(v913, v1204);
    v541(v914, v1210);
    ((void (*)(char *, uint64_t))v1184)(v915, v1217);
    ((void (*)(char *, uint64_t))v1179)(v916, v1211);
    v1193(v917, v542);
    v544(v918, v543);
    v1198(v919, v1219);
    v545(v920, v1200);
    v547 = v1188;
    ((void (*)(char *, uint64_t))v1188)(v921, v1205);
    uint64_t v548 = v1187;
    ((void (*)(char *, uint64_t))v1187)(v701, v1213);
    v1196(v702, v1206);
    uint64_t v549 = v1186;
    ((void (*)(char *, uint64_t))v1186)(v703, v1215);
    ((void (*)(char *, uint64_t))v1181)(v704, v1207);
    ((void (*)(char *, uint64_t))v1192)(v707, v1221);
    ((void (*)(char *, uint64_t))v1195)(v708, v1201);
    ((void (*)(char *, uint64_t))v1173)(v709, v1208);
    ((void (*)(char *, uint64_t))v1194)(v710, v546);
    ((void (*)(char *, uint64_t))v1180)(v711, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1082, v1214);
    ((void (*)(char *, uint64_t))v1199)(v922, v1216);
    v1182(v923, v1209);
    ((void (*)(char *, uint64_t))v1190)(v924, v1204);
    ((void (*)(char *, uint64_t))v1183)(v925, v1210);
    ((void (*)(char *, uint64_t))v1184)(v926, v1217);
    ((void (*)(char *, uint64_t))v1179)(v927, v1211);
    v1193(v928, v1218);
    uint64_t v550 = v1212;
    v1189(v929, v1212);
    v1198(v930, v1219);
    ((void (*)(char *, uint64_t))v1185)(v931, v1220);
    ((void (*)(char *, uint64_t))v547)(v932, v1205);
    uint64_t v551 = v1213;
    ((void (*)(char *, uint64_t))v548)(v714, v1213);
    v1196(v715, v1206);
    ((void (*)(char *, uint64_t))v549)(v716, v1215);
    ((void (*)(char *, uint64_t))v1181)(v717, v1207);
    ((void (*)(char *, uint64_t))v1192)(v718, v1221);
    ((void (*)(char *, uint64_t))v1195)(v719, v1201);
    ((void (*)(char *, uint64_t))v1173)(v720, v1208);
    ((void (*)(char *, uint64_t))v1194)(v721, v1203);
    ((void (*)(char *, uint64_t))v1180)(v722, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1083, v1214);
    ((void (*)(char *, uint64_t))v1199)(v933, v1216);
    v1182(v934, v1209);
    ((void (*)(char *, uint64_t))v1190)(v935, v1204);
    ((void (*)(char *, uint64_t))v1183)(v936, v1210);
    uint64_t v552 = v1217;
    uint64_t v553 = (void (*)(char *, uint64_t))v1184;
    ((void (*)(char *, uint64_t))v1184)(v937, v1217);
    ((void (*)(char *, uint64_t))v1179)(v938, v1211);
    v1193(v939, v1218);
    v1189(v940, v550);
    v554 = v1198;
    v1198(v941, v1219);
    ((void (*)(char *, uint64_t))v1185)(v942, v1220);
    v1191(v943, v1200);
    ((void (*)(char *, uint64_t))v1187)(v727, v551);
    uint64_t v555 = v1196;
    v1196(v728, v1206);
    ((void (*)(char *, uint64_t))v1186)(v729, v1215);
    ((void (*)(char *, uint64_t))v1181)(v730, v1207);
    ((void (*)(char *, uint64_t))v1192)(v731, v1221);
    uint64_t v556 = v1195;
    ((void (*)(char *, uint64_t))v1195)(v732, v1201);
    ((void (*)(char *, uint64_t))v1173)(v733, v1208);
    v557 = v1194;
    ((void (*)(char *, uint64_t))v1194)(v734, v1203);
    ((void (*)(char *, uint64_t))v1180)(v735, v1202);
    uint64_t v558 = v1197;
    ((void (*)(char *, uint64_t))v1197)(v1084, v1214);
    ((void (*)(char *, uint64_t))v1199)(v944, v1216);
    v1182(v945, v1209);
    ((void (*)(char *, uint64_t))v1190)(v946, v1204);
    ((void (*)(char *, uint64_t))v1183)(v947, v1210);
    v553(v948, v552);
    ((void (*)(char *, uint64_t))v1179)(v949, v1211);
    v1193(v950, v1218);
    v1189(v951, v1212);
    uint64_t v559 = v1219;
    v554(v952, v1219);
    ((void (*)(char *, uint64_t))v1185)(v953, v1220);
    v1191(v954, v1200);
    ((void (*)(char *, uint64_t))v1188)(v738, v1205);
    v555(v739, v1206);
    ((void (*)(char *, uint64_t))v1186)(v740, v1215);
    ((void (*)(char *, uint64_t))v1181)(v741, v1207);
    uint64_t v560 = v1221;
    ((void (*)(char *, uint64_t))v1192)(v742, v1221);
    ((void (*)(char *, uint64_t))v556)(v743, v1201);
    ((void (*)(char *, uint64_t))v1173)(v746, v1208);
    ((void (*)(char *, uint64_t))v557)(v747, v1203);
    ((void (*)(char *, uint64_t))v1180)(v748, v1202);
    ((void (*)(char *, uint64_t))v558)(v1085, v1214);
    uint64_t v561 = v1199;
    ((void (*)(char *, uint64_t))v1199)(v955, v1216);
    v1182(v956, v1209);
    ((void (*)(char *, uint64_t))v1190)(v957, v1204);
    ((void (*)(char *, uint64_t))v1183)(v958, v1210);
    ((void (*)(char *, uint64_t))v1184)(v959, v1217);
    ((void (*)(char *, uint64_t))v1179)(v960, v1211);
    v1193(v961, v1218);
    v1189(v962, v1212);
    v1198(v963, v559);
    uint64_t v562 = v1220;
    ((void (*)(char *, uint64_t))v1185)(v964, v1220);
    v1191(v1072, v1200);
    ((void (*)(char *, uint64_t))v1188)(v749, v1205);
    ((void (*)(char *, uint64_t))v1187)(v750, v1213);
    ((void (*)(char *, uint64_t))v1186)(v752, v1215);
    uint64_t v563 = v1181;
    ((void (*)(char *, uint64_t))v1181)(v753, v1207);
    ((void (*)(char *, uint64_t))v1192)(v754, v560);
    uint64_t v564 = v1201;
    ((void (*)(char *, uint64_t))v1195)(v755, v1201);
    uint64_t v565 = v1173;
    ((void (*)(char *, uint64_t))v1173)(v756, v1208);
    ((void (*)(char *, uint64_t))v1194)(v757, v1203);
    ((void (*)(char *, uint64_t))v1180)(v758, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1086, v1214);
    ((void (*)(char *, uint64_t))v561)(v965, v1216);
    v1182(v966, v1209);
    ((void (*)(char *, uint64_t))v1190)(v967, v1204);
    ((void (*)(char *, uint64_t))v1183)(v968, v1210);
    ((void (*)(char *, uint64_t))v1184)(v969, v1217);
    ((void (*)(char *, uint64_t))v1179)(v970, v1211);
    v1193(v971, v1218);
    v1189(v972, v1212);
    v1198(v973, v1219);
    ((void (*)(char *, uint64_t))v1185)(v974, v562);
    v1191(v1071, v1200);
    ((void (*)(char *, uint64_t))v1188)(v760, v1205);
    ((void (*)(char *, uint64_t))v1187)(v761, v1213);
    uint64_t v566 = v1206;
    v1196(v762, v1206);
    ((void (*)(char *, uint64_t))v563)(v763, v1207);
    uint64_t v567 = v1192;
    ((void (*)(char *, uint64_t))v1192)(v764, v1221);
    ((void (*)(char *, uint64_t))v1195)(v765, v564);
    uint64_t v568 = v1208;
    ((void (*)(char *, uint64_t))v565)(v766, v1208);
    ((void (*)(char *, uint64_t))v1194)(v767, v1203);
    v569 = v1180;
    ((void (*)(char *, uint64_t))v1180)(v768, v1202);
    uint64_t v570 = v1214;
    ((void (*)(char *, uint64_t))v1197)(v1087, v1214);
    uint64_t v571 = v1216;
    ((void (*)(char *, uint64_t))v1199)(v975, v1216);
    v1182(v976, v1209);
    uint64_t v572 = v1204;
    ((void (*)(char *, uint64_t))v1190)(v977, v1204);
    ((void (*)(char *, uint64_t))v1183)(v978, v1210);
    ((void (*)(char *, uint64_t))v1184)(v979, v1217);
    uint64_t v573 = v1211;
    ((void (*)(char *, uint64_t))v1179)(v980, v1211);
    v1193(v981, v1218);
    v1189(v982, v1212);
    v1198(v983, v1219);
    ((void (*)(char *, uint64_t))v1185)(v984, v1220);
    v1191(v1070, v1200);
    ((void (*)(char *, uint64_t))v1188)(v769, v1205);
    ((void (*)(char *, uint64_t))v1187)(v770, v1213);
    v1196(v771, v566);
    ((void (*)(char *, uint64_t))v1186)(v772, v1215);
    ((void (*)(char *, uint64_t))v567)(v773, v1221);
    ((void (*)(char *, uint64_t))v1195)(v774, v1201);
    ((void (*)(char *, uint64_t))v1173)(v775, v568);
    ((void (*)(char *, uint64_t))v1194)(v776, v1203);
    uint64_t v574 = v1202;
    ((void (*)(char *, uint64_t))v569)(v777, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1088, v570);
    ((void (*)(char *, uint64_t))v1199)(v987, v571);
    uint64_t v575 = v1209;
    uint64_t v576 = v1182;
    v1182(v988, v1209);
    uint64_t v577 = v572;
    uint64_t v578 = (void (*)(char *, uint64_t))v1190;
    ((void (*)(char *, uint64_t))v1190)(v989, v577);
    uint64_t v579 = v1210;
    ((void (*)(char *, uint64_t))v1183)(v990, v1210);
    ((void (*)(char *, uint64_t))v1184)(v991, v1217);
    ((void (*)(char *, uint64_t))v1179)(v992, v573);
    v1193(v993, v1218);
    v1189(v994, v1212);
    v1198(v995, v1219);
    ((void (*)(char *, uint64_t))v1185)(v996, v1220);
    uint64_t v580 = v1200;
    v1191(v1069, v1200);
    ((void (*)(char *, uint64_t))v1188)(v985, v1205);
    ((void (*)(char *, uint64_t))v1187)(v986, v1213);
    v1196(v778, v1206);
    uint64_t v581 = v1215;
    ((void (*)(char *, uint64_t))v1186)(v779, v1215);
    uint64_t v582 = v1207;
    ((void (*)(char *, uint64_t))v1181)(v780, v1207);
    ((void (*)(char *, uint64_t))v1195)(v781, v1201);
    uint64_t v583 = v1173;
    ((void (*)(char *, uint64_t))v1173)(v782, v1208);
    ((void (*)(char *, uint64_t))v1194)(v783, v1203);
    ((void (*)(char *, uint64_t))v1180)(v784, v574);
    ((void (*)(char *, uint64_t))v1197)(v997, v1214);
    ((void (*)(char *, uint64_t))v1199)(v1000, v1216);
    v576(v1001, v575);
    v578(v1002, v1204);
    uint64_t v584 = (void (*)(char *, uint64_t))v1183;
    ((void (*)(char *, uint64_t))v1183)(v1003, v579);
    ((void (*)(char *, uint64_t))v1184)(v1004, v1217);
    ((void (*)(char *, uint64_t))v1179)(v1005, v1211);
    v1193(v1006, v1218);
    v1189(v1007, v1212);
    v1198(v1008, v1219);
    uint64_t v585 = v1185;
    ((void (*)(char *, uint64_t))v1185)(v1009, v1220);
    v1191(v1068, v580);
    ((void (*)(char *, uint64_t))v1188)(v998, v1205);
    ((void (*)(char *, uint64_t))v1187)(v999, v1213);
    v1196(v785, v1206);
    ((void (*)(char *, uint64_t))v1186)(v786, v581);
    ((void (*)(char *, uint64_t))v1181)(v787, v582);
    ((void (*)(char *, uint64_t))v1192)(v788, v1221);
    ((void (*)(char *, uint64_t))v583)(v789, v1208);
    uint64_t v586 = v1203;
    ((void (*)(char *, uint64_t))v1194)(v790, v1203);
    uint64_t v587 = v1180;
    ((void (*)(char *, uint64_t))v1180)(v791, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1010, v1214);
    ((void (*)(char *, uint64_t))v1199)(v1013, v1216);
    v1182(v1014, v1209);
    ((void (*)(char *, uint64_t))v1190)(v1015, v1204);
    v584(v1016, v1210);
    ((void (*)(char *, uint64_t))v1184)(v1017, v1217);
    uint64_t v588 = (void (*)(char *, uint64_t))v1179;
    ((void (*)(char *, uint64_t))v1179)(v1018, v1211);
    v1193(v1019, v1218);
    v1189(v1020, v1212);
    v1198(v1021, v1219);
    ((void (*)(char *, uint64_t))v585)(v1022, v1220);
    uint64_t v589 = v1200;
    v1191(v1067, v1200);
    uint64_t v590 = v1205;
    ((void (*)(char *, uint64_t))v1188)(v1011, v1205);
    ((void (*)(char *, uint64_t))v1187)(v1012, v1213);
    v1196(v792, v1206);
    ((void (*)(char *, uint64_t))v1186)(v793, v1215);
    ((void (*)(char *, uint64_t))v1181)(v794, v1207);
    ((void (*)(char *, uint64_t))v1192)(v795, v1221);
    ((void (*)(char *, uint64_t))v1195)(v796, v1201);
    ((void (*)(char *, uint64_t))v1194)(v797, v586);
    ((void (*)(char *, uint64_t))v587)(v798, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1023, v1214);
    ((void (*)(char *, uint64_t))v1199)(v1026, v1216);
    v1182(v1027, v1209);
    ((void (*)(char *, uint64_t))v1190)(v1028, v1204);
    ((void (*)(char *, uint64_t))v1183)(v1029, v1210);
    ((void (*)(char *, uint64_t))v1184)(v1030, v1217);
    v588(v1031, v1211);
    uint64_t v591 = v1218;
    v1193(v1032, v1218);
    uint64_t v592 = v1189;
    v1189(v1033, v1212);
    v1198(v1034, v1219);
    ((void (*)(char *, uint64_t))v1185)(v1035, v1220);
    v593 = v1191;
    v1191(v1066, v589);
    v594 = v1188;
    ((void (*)(char *, uint64_t))v1188)(v1024, v590);
    v595 = v1187;
    ((void (*)(char *, uint64_t))v1187)(v1025, v1213);
    uint64_t v596 = v1206;
    v1196(v799, v1206);
    v597 = v1186;
    ((void (*)(char *, uint64_t))v1186)(v800, v1215);
    ((void (*)(char *, uint64_t))v1181)(v801, v1207);
    ((void (*)(char *, uint64_t))v1192)(v802, v1221);
    ((void (*)(char *, uint64_t))v1195)(v803, v1201);
    ((void (*)(char *, uint64_t))v1173)(v804, v1208);
    ((void (*)(char *, uint64_t))v1180)(v805, v1202);
    ((void (*)(char *, uint64_t))v1197)(v1089, v1214);
    ((void (*)(char *, uint64_t))v1199)(v1037, v1216);
    v1182(v1038, v1209);
    ((void (*)(char *, uint64_t))v1190)(v1039, v1204);
    ((void (*)(char *, uint64_t))v1183)(v1040, v1210);
    ((void (*)(char *, uint64_t))v1184)(v1041, v1217);
    ((void (*)(char *, uint64_t))v1179)(v1042, v1211);
    uint64_t v598 = v591;
    v599 = v1193;
    v1193(v1043, v598);
    v592(v1044, v1212);
    v1198(v1045, v1219);
    ((void (*)(char *, uint64_t))v1185)(v1046, v1220);
    v593(v1047, v1200);
    ((void (*)(char *, uint64_t))v594)(v1065, v1205);
    uint64_t v600 = v1213;
    ((void (*)(char *, uint64_t))v595)(v1036, v1213);
    v601 = v1196;
    v1196(v806, v596);
    ((void (*)(char *, uint64_t))v597)(v807, v1215);
    ((void (*)(char *, uint64_t))v1181)(v808, v1207);
    ((void (*)(char *, uint64_t))v1192)(v809, v1221);
    v602 = v1195;
    ((void (*)(char *, uint64_t))v1195)(v810, v1201);
    ((void (*)(char *, uint64_t))v1173)(v811, v1208);
    v603 = v1194;
    ((void (*)(char *, uint64_t))v1194)(v812, v1203);
    ((void (*)(char *, uint64_t))v1197)(v1090, v1214);
    ((void (*)(char *, uint64_t))v1199)(v1052, v1216);
    v1182(v1053, v1209);
    ((void (*)(char *, uint64_t))v1190)(v1054, v1204);
    ((void (*)(char *, uint64_t))v1183)(v1055, v1210);
    ((void (*)(char *, uint64_t))v1184)(v1056, v1217);
    ((void (*)(char *, uint64_t))v1179)(v1057, v1211);
    v599(v1058, v1218);
    v1189(v1059, v1212);
    v1198(v1060, v1219);
    ((void (*)(char *, uint64_t))v1185)(v1061, v1220);
    v1191(v1062, v1200);
    ((void (*)(char *, uint64_t))v1188)(v1063, v1205);
    ((void (*)(char *, uint64_t))v1187)(v1064, v600);
    v601(v1048, v1206);
    ((void (*)(char *, uint64_t))v1186)(v1049, v1215);
    ((void (*)(char *, uint64_t))v1181)(v1050, v1207);
    ((void (*)(char *, uint64_t))v1192)(v1051, v1221);
    ((void (*)(char *, uint64_t))v602)(v813, v1201);
    ((void (*)(char *, uint64_t))v1173)(v814, v1208);
    ((void (*)(char *, uint64_t))v603)(v815, v1203);
    return ((uint64_t (*)(char *, uint64_t))v1180)(v816, v1202);
  }
  return result;
}

uint64_t sub_2587B0E04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587A2D58(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], (char *)(a4 + TupleTypeMetadata[40]), (char *)(a4 + TupleTypeMetadata[44]), (char *)(a4 + TupleTypeMetadata[48]), (char *)(a4 + TupleTypeMetadata[52]), (char *)(a4 + TupleTypeMetadata[56]), (char *)(a4 + TupleTypeMetadata[60]), (char *)(a4 + TupleTypeMetadata[64]), (char *)(a4 + TupleTypeMetadata[68]), (char *)(a4 + TupleTypeMetadata[72]), (char *)(a4 + TupleTypeMetadata[76]), (char *)(a4 + TupleTypeMetadata[80]),
           (char *)(a4 + TupleTypeMetadata[84]),
           (char *)(a4 + TupleTypeMetadata[88]),
           (char *)(a4 + TupleTypeMetadata[92]),
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_22.base.modify())()
{
  return nullsub_1;
}

uint64_t sub_2587B0FB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, char *a9, char *a10, char *a11, char *a12, char *a13, char *a14, char *a15, char *a16, char *a17, char *a18, char *a19, char *a20,char *a21,char *a22,char *a23,uint64_t a24,uint64_t a25,void *a26)
{
  uint64_t v27 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v1149 = v28;
  uint64_t v1148 = v29;
  uint64_t v1147 = v30;
  uint64_t v1146 = v31;
  uint64_t v1145 = v32;
  uint64_t v1144 = v33;
  uint64_t v1143 = v34;
  uint64_t v1142 = (char *)v27;
  uint64_t v35 = a26[4];
  uint64_t v1305 = a26[3];
  uint64_t v1287 = v35;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v37 = a26[5];
  v1282 = (void (*)(char *, uint64_t))TupleTypeMetadata2;
  uint64_t v1284 = v37;
  uint64_t v38 = swift_getTupleTypeMetadata2();
  uint64_t v39 = a26[6];
  v1281 = (char *)v38;
  uint64_t v1288 = v39;
  uint64_t v40 = swift_getTupleTypeMetadata2();
  uint64_t v41 = a26[7];
  v1280 = (void (*)(char *, uint64_t))v40;
  uint64_t v1286 = v41;
  uint64_t v42 = swift_getTupleTypeMetadata2();
  uint64_t v43 = a26[8];
  v1279 = (char *)v42;
  uint64_t v1300 = v43;
  uint64_t v44 = swift_getTupleTypeMetadata2();
  uint64_t v45 = a26[9];
  v1278 = (char *)v44;
  uint64_t v1299 = v45;
  uint64_t v46 = swift_getTupleTypeMetadata2();
  uint64_t v47 = a26[10];
  v1277 = (void (*)(char *, uint64_t))v46;
  uint64_t v1298 = v47;
  uint64_t v48 = swift_getTupleTypeMetadata2();
  uint64_t v49 = a26[11];
  v1276 = (char *)v48;
  uint64_t v1297 = v49;
  uint64_t v50 = swift_getTupleTypeMetadata2();
  uint64_t v51 = a26[12];
  v1275 = (void (*)(char *, uint64_t))v50;
  uint64_t v1296 = v51;
  uint64_t v52 = swift_getTupleTypeMetadata2();
  uint64_t v53 = a26[13];
  v1274 = (char *)v52;
  uint64_t v1295 = v53;
  uint64_t v54 = swift_getTupleTypeMetadata2();
  uint64_t v55 = a26[14];
  v1273 = (char *)v54;
  uint64_t v1294 = v55;
  uint64_t v56 = swift_getTupleTypeMetadata2();
  uint64_t v57 = a26[15];
  v1272 = (char *)v56;
  uint64_t v1293 = v57;
  uint64_t v58 = swift_getTupleTypeMetadata2();
  uint64_t v59 = a26[16];
  v1271 = (void (*)(char *, uint64_t))v58;
  uint64_t v1304 = v59;
  uint64_t v60 = swift_getTupleTypeMetadata2();
  uint64_t v61 = a26[17];
  v1270 = (void (*)(char *, uint64_t))v60;
  uint64_t v1283 = v61;
  uint64_t v62 = swift_getTupleTypeMetadata2();
  uint64_t v63 = a26[18];
  v1269 = (char *)v62;
  uint64_t v1303 = v63;
  uint64_t v64 = swift_getTupleTypeMetadata2();
  uint64_t v65 = a26[19];
  v1268 = (char *)v64;
  uint64_t v1292 = v65;
  uint64_t v66 = swift_getTupleTypeMetadata2();
  uint64_t v67 = a26[20];
  uint64_t v1267 = v66;
  uint64_t v1302 = v67;
  uint64_t v68 = swift_getTupleTypeMetadata2();
  uint64_t v69 = a26[21];
  v1266 = (void (*)(char *, uint64_t))v68;
  uint64_t v1291 = v69;
  uint64_t v70 = swift_getTupleTypeMetadata2();
  uint64_t v71 = a26[22];
  v1265 = (char *)v70;
  uint64_t v1285 = v71;
  uint64_t v72 = swift_getTupleTypeMetadata2();
  uint64_t v73 = a26[23];
  v1264 = (char *)v72;
  uint64_t v1290 = v73;
  uint64_t v74 = swift_getTupleTypeMetadata2();
  uint64_t v75 = a26[24];
  v1263 = (char *)v74;
  uint64_t v1289 = v75;
  uint64_t v76 = swift_getTupleTypeMetadata2();
  uint64_t v77 = a26[25];
  v1262 = (char *)v76;
  uint64_t v1301 = v77;
  uint64_t v1261 = swift_getTupleTypeMetadata2();
  uint64_t v81 = MEMORY[0x270FA5388](v1261, v78, v79, v80);
  v1150 = (char *)v639 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = MEMORY[0x270FA5388](v81, v83, v84, v85);
  v1151 = (char *)v639 - v87;
  uint64_t v91 = MEMORY[0x270FA5388](v86, v88, v89, v90);
  v1152 = (char *)v639 - v92;
  uint64_t v96 = MEMORY[0x270FA5388](v91, v93, v94, v95);
  v1153 = (char *)v639 - v97;
  uint64_t v101 = MEMORY[0x270FA5388](v96, v98, v99, v100);
  v1154 = (char *)v639 - v102;
  uint64_t v106 = MEMORY[0x270FA5388](v101, v103, v104, v105);
  v1155 = (char *)v639 - v107;
  uint64_t v111 = MEMORY[0x270FA5388](v106, v108, v109, v110);
  v1156 = (char *)v639 - v112;
  uint64_t v116 = MEMORY[0x270FA5388](v111, v113, v114, v115);
  v1157 = (char *)v639 - v117;
  uint64_t v121 = MEMORY[0x270FA5388](v116, v118, v119, v120);
  v1158 = (char *)v639 - v122;
  uint64_t v126 = MEMORY[0x270FA5388](v121, v123, v124, v125);
  v1159 = (char *)v639 - v127;
  uint64_t v131 = MEMORY[0x270FA5388](v126, v128, v129, v130);
  v1160 = (char *)v639 - v132;
  uint64_t v136 = MEMORY[0x270FA5388](v131, v133, v134, v135);
  v1161 = (char *)v639 - v137;
  uint64_t v141 = MEMORY[0x270FA5388](v136, v138, v139, v140);
  v1162 = (char *)v639 - v142;
  uint64_t v146 = MEMORY[0x270FA5388](v141, v143, v144, v145);
  v1163 = (char *)v639 - v147;
  uint64_t v151 = MEMORY[0x270FA5388](v146, v148, v149, v150);
  v1164 = (char *)v639 - v152;
  uint64_t v156 = MEMORY[0x270FA5388](v151, v153, v154, v155);
  v1165 = (char *)v639 - v157;
  uint64_t v161 = MEMORY[0x270FA5388](v156, v158, v159, v160);
  v1166 = (char *)v639 - v162;
  uint64_t v166 = MEMORY[0x270FA5388](v161, v163, v164, v165);
  uint64_t v168 = (char *)v639 - v167;
  uint64_t v172 = MEMORY[0x270FA5388](v166, v169, v170, v171);
  uint64_t v174 = (char *)v639 - v173;
  uint64_t v178 = MEMORY[0x270FA5388](v172, v175, v176, v177);
  uint64_t v180 = (char *)v639 - v179;
  uint64_t v184 = MEMORY[0x270FA5388](v178, v181, v182, v183);
  v1167 = (char *)v639 - v185;
  uint64_t v189 = MEMORY[0x270FA5388](v184, v186, v187, v188);
  v1168 = (char *)v639 - v190;
  uint64_t v194 = MEMORY[0x270FA5388](v189, v191, v192, v193);
  uint64_t v196 = (char *)v639 - v195;
  MEMORY[0x270FA5388](v194, v197, v198, v199);
  uint64_t v201 = (char *)v639 - v200;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void))(a26[26] + 24))(a24, a25, a26[2]);
  if (!v26)
  {
    uint64_t v203 = *((int *)v1276 + 12);
    uint64_t v204 = *((int *)v1275 + 12);
    v1246 = &v201[v204];
    uint64_t v205 = *((int *)v1274 + 12);
    v1247 = &v201[v205];
    uint64_t v206 = *((int *)v1273 + 12);
    v1254 = &v201[v206];
    uint64_t v207 = *((int *)v1272 + 12);
    v1255 = &v201[v207];
    uint64_t v208 = *((int *)v1271 + 12);
    v1242 = &v201[v208];
    uint64_t v209 = *((int *)v1270 + 12);
    v1243 = &v201[v209];
    uint64_t v210 = *((int *)v1269 + 12);
    v1244 = &v201[v210];
    uint64_t v211 = *((int *)v1268 + 12);
    v1245 = &v201[v211];
    uint64_t v212 = *(int *)(v1267 + 48);
    v1250 = &v201[v212];
    uint64_t v862 = 0;
    uint64_t v213 = *((int *)v1266 + 12);
    v1251 = &v201[v213];
    uint64_t v214 = *((int *)v1265 + 12);
    v1252 = &v201[v214];
    uint64_t v215 = *((int *)v1264 + 12);
    v1253 = &v201[v215];
    uint64_t v216 = *((int *)v1263 + 12);
    v1241 = &v201[v216];
    uint64_t v217 = *((int *)v1262 + 12);
    v1239 = &v201[v217];
    uint64_t v218 = *(int *)(v1261 + 48);
    v1240 = &v201[v218];
    v1127 = &v196[v218];
    v1128 = &v196[v217];
    uint64_t v1130 = &v196[v216];
    uint64_t v1131 = &v196[v215];
    uint64_t v1132 = &v196[v214];
    uint64_t v1133 = &v196[v213];
    uint64_t v1134 = &v196[v212];
    uint64_t v1135 = &v196[v211];
    uint64_t v1136 = &v196[v210];
    uint64_t v1137 = &v196[v209];
    uint64_t v1138 = &v196[v208];
    uint64_t v1139 = &v196[v207];
    uint64_t v1140 = &v196[v206];
    uint64_t v1141 = &v196[v205];
    v1082 = v174;
    uint64_t v1123 = &v196[v204];
    uint64_t v219 = v201;
    v1248 = &v201[v203];
    v1096 = v180;
    v1124 = &v196[v203];
    uint64_t v220 = *((int *)v1277 + 12);
    v1249 = &v201[v220];
    uint64_t v1068 = v168;
    v1125 = &v196[v220];
    uint64_t v221 = *((int *)v1278 + 12);
    uint64_t v222 = &v201[v221];
    uint64_t v1215 = &v201[v221];
    v1126 = &v196[v221];
    uint64_t v223 = *((int *)v1279 + 12);
    uint64_t v224 = &v201[v223];
    uint64_t v1216 = v224;
    uint64_t v1129 = &v196[v223];
    uint64_t v225 = *((int *)v1280 + 12);
    uint64_t v226 = &v219[v225];
    uint64_t v1217 = &v219[v225];
    uint64_t v227 = &v196[v225];
    v859 = &v196[v225];
    uint64_t v228 = *((int *)v1281 + 12);
    uint64_t v229 = &v219[v228];
    uint64_t v1218 = &v219[v228];
    uint64_t v230 = &v196[v228];
    v860 = &v196[v228];
    uint64_t v231 = *((int *)v1282 + 12);
    uint64_t v232 = &v219[v231];
    uint64_t v1219 = &v219[v231];
    uint64_t v1220 = v219;
    uint64_t v233 = &v196[v231];
    v861 = &v196[v231];
    v1238 = *(void **)(v1305 - 8);
    uint64_t v1184 = (void (*)(void))v1238[2];
    v1181 = v1238 + 2;
    v803 = a23;
    v794 = a22;
    v874 = a21;
    uint64_t v887 = a20;
    v900 = a19;
    uint64_t v912 = a18;
    v925 = a17;
    v938 = a16;
    uint64_t v950 = a15;
    v962 = a14;
    uint64_t v974 = a13;
    uint64_t v986 = a12;
    v998 = a11;
    v1010 = a10;
    v1022 = a9;
    ((void (*)(char *, char *, uint64_t))v1184)(v196, v219, v1305);
    v1260 = *(void **)(v1287 - 8);
    uint64_t v234 = (void (*)(char *, char *, uint64_t))v1260[2];
    uint64_t v1179 = v1260 + 2;
    v1180 = v234;
    ((void (*)(char *, char *))v234)(v233, v232);
    v1237 = *(void **)(v1284 - 8);
    uint64_t v235 = (void (*)(char *, char *, uint64_t))v1237[2];
    v1178 = v1237 + 2;
    uint64_t v1183 = v235;
    ((void (*)(char *, char *))v235)(v230, v229);
    v1236 = *(void **)(v1288 - 8);
    uint64_t v236 = (void (*)(char *, char *, uint64_t))v1236[2];
    v1182 = v1236 + 2;
    v1188 = v236;
    ((void (*)(char *, char *))v236)(v227, v226);
    v1235 = *(void **)(v1286 - 8);
    uint64_t v237 = (void (*)(char *, char *, uint64_t))v1235[2];
    v1175 = v1235 + 2;
    v1187 = v237;
    v237(v1129, v224, v1286);
    v1234 = *(void **)(v1300 - 8);
    uint64_t v238 = (void (*)(char *, char *, uint64_t))v1234[2];
    v1185 = v1234 + 2;
    v1186 = v238;
    v238(v1126, v222, v1300);
    v1233 = *(void **)(v1299 - 8);
    v1171 = (void (*)(char *, char *, uint64_t))v1233[2];
    v1193 = v1233 + 2;
    v1171(v1125, v1249, v1299);
    v1259 = *(void **)(v1298 - 8);
    uint64_t v239 = (void (*)(char *, char *, uint64_t))v1259[2];
    v1191 = v1259 + 2;
    v1192 = v239;
    v239(v1124, v1248, v1298);
    v1232 = *(void **)(v1297 - 8);
    uint64_t v240 = (void (*)(char *, char *, uint64_t))v1232[2];
    v1169 = v1232 + 2;
    v1173 = v240;
    v240(v1123, v1246, v1297);
    v1258 = *(void **)(v1296 - 8);
    v1172 = (void (*)(char *, char *, uint64_t))v1258[2];
    v1198 = v1258 + 2;
    v1172(v1141, v1247, v1296);
    v1231 = *(void **)(v1295 - 8);
    uint64_t v241 = (void (*)(char *, char *, uint64_t))v1231[2];
    v1196 = v1231 + 2;
    v1197 = v241;
    v241(v1140, v1254, v1295);
    v1230 = *(void **)(v1294 - 8);
    uint64_t v242 = (void (*)(char *, char *, uint64_t))v1230[2];
    uint64_t v1190 = v1230 + 2;
    v1195 = v242;
    v242(v1139, v1255, v1294);
    v1257 = *(void **)(v1293 - 8);
    uint64_t v243 = (void (*)(char *, char *, uint64_t))v1257[2];
    v1177 = v1257 + 2;
    v1194 = v243;
    v243(v1138, v1242, v1293);
    v1229 = *(void **)(v1304 - 8);
    uint64_t v244 = (void (*)(char *, char *, uint64_t))v1229[2];
    v1174 = v1229 + 2;
    v1176 = v244;
    v244(v1137, v1243, v1304);
    v1228 = *(void **)(v1283 - 8);
    v1170 = (void (*)(char *, char *, uint64_t))v1228[2];
    uint64_t v1214 = (char *)(v1228 + 2);
    v1170(v1136, v1244, v1283);
    v1227 = *(void **)(v1303 - 8);
    uint64_t v245 = (char *)v1227[2];
    uint64_t v1212 = (char *)(v1227 + 2);
    uint64_t v1213 = v245;
    ((void (*)(char *, char *, uint64_t))v245)(v1135, v1245, v1303);
    v1226 = *(void **)(v1292 - 8);
    uint64_t v246 = (char *)v1226[2];
    uint64_t v1210 = (char *)(v1226 + 2);
    uint64_t v1211 = v246;
    ((void (*)(char *, char *, uint64_t))v246)(v1134, v1250, v1292);
    v1225 = *(void **)(v1302 - 8);
    uint64_t v247 = (char *)v1225[2];
    uint64_t v1208 = (char *)(v1225 + 2);
    uint64_t v1209 = v247;
    ((void (*)(char *, char *, uint64_t))v247)(v1133, v1251, v1302);
    v1224 = *(void **)(v1291 - 8);
    uint64_t v248 = (void (*)(char *, char *, uint64_t))v1224[2];
    uint64_t v1206 = v1224 + 2;
    uint64_t v1207 = v248;
    v248(v1132, v1252, v1291);
    v1223 = *(void **)(v1285 - 8);
    uint64_t v249 = (char *)v1223[2];
    uint64_t v1204 = v1223 + 2;
    uint64_t v1205 = v249;
    ((void (*)(char *, char *, uint64_t))v249)(v1131, v1253, v1285);
    v1222 = *(void **)(v1290 - 8);
    uint64_t v250 = (void (*)(char *, char *, uint64_t))v1222[2];
    uint64_t v1202 = v1222 + 2;
    uint64_t v1203 = v250;
    v250(v1130, v1241, v1290);
    uint64_t v1221 = *(void **)(v1289 - 8);
    uint64_t v251 = (void (*)(char *, char *, uint64_t))v1221[2];
    uint64_t v1200 = v1221 + 2;
    uint64_t v1201 = v251;
    v251(v1128, v1239, v1289);
    v1256 = *(void **)(v1301 - 8);
    v1189 = (void (*)(char *, char *, uint64_t))v1256[2];
    v1199 = v1256 + 2;
    v1189(v1127, v1240, v1301);
    uint64_t v252 = (void (*)(char *, char *, uint64_t))v1238[4];
    uint64_t v783 = v1238 + 4;
    uint64_t v784 = v252;
    v252(v1142, v196, v1305);
    v1111 = &v1168[*(int *)(v1261 + 48)];
    v1112 = &v1168[*((int *)v1262 + 12)];
    v1113 = &v1168[*((int *)v1263 + 12)];
    v1114 = &v1168[*((int *)v1264 + 12)];
    v1115 = &v1168[*((int *)v1265 + 12)];
    v1116 = &v1168[*((int *)v1266 + 12)];
    v1117 = &v1168[*(int *)(v1267 + 48)];
    v1118 = &v1168[*((int *)v1268 + 12)];
    v1119 = &v1168[*((int *)v1269 + 12)];
    v1120 = &v1168[*((int *)v1270 + 12)];
    v1121 = &v1168[*((int *)v1271 + 12)];
    v1122 = &v1168[*((int *)v1272 + 12)];
    uint64_t v1142 = &v1168[*((int *)v1273 + 12)];
    v1110 = &v1168[*((int *)v1274 + 12)];
    v852 = &v1168[*((int *)v1275 + 12)];
    uint64_t v253 = v852;
    v853 = &v1168[*((int *)v1276 + 12)];
    uint64_t v254 = v853;
    v854 = &v1168[*((int *)v1277 + 12)];
    uint64_t v255 = v854;
    v855 = &v1168[*((int *)v1278 + 12)];
    uint64_t v256 = v855;
    v856 = &v1168[*((int *)v1279 + 12)];
    uint64_t v257 = v856;
    v857 = &v1168[*((int *)v1280 + 12)];
    uint64_t v258 = v857;
    v858 = &v1168[*((int *)v1281 + 12)];
    uint64_t v259 = v858;
    uint64_t v260 = &v1168[*((int *)v1282 + 12)];
    v1184();
    uint64_t v261 = v1287;
    v1180(v260, v1219, v1287);
    v1183(v259, v1218, v1284);
    v1188(v258, v1217, v1288);
    v1187(v257, v1216, v1286);
    v1186(v256, v1215, v1300);
    v1171(v255, v1249, v1299);
    v1192(v254, v1248, v1298);
    v1173(v253, v1246, v1297);
    v1172(v1110, v1247, v1296);
    v1197(v1142, v1254, v1295);
    v1195(v1122, v1255, v1294);
    v1194(v1121, v1242, v1293);
    v1176(v1120, v1243, v1304);
    v1170(v1119, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1118, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1117, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1116, v1251, v1302);
    v1207(v1115, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1114, v1253, v1285);
    v1203(v1113, v1241, v1290);
    v1201(v1112, v1239, v1289);
    v1189(v1111, v1240, v1301);
    uint64_t v262 = (void (*)(char *, char *, uint64_t))v1260[4];
    uint64_t v778 = v1260 + 4;
    uint64_t v779 = v262;
    uint64_t v263 = v261;
    v262(v1143, v260, v261);
    v1098 = &v1167[*(int *)(v1261 + 48)];
    v1099 = &v1167[*((int *)v1262 + 12)];
    v1100 = &v1167[*((int *)v1263 + 12)];
    v1101 = &v1167[*((int *)v1264 + 12)];
    v1102 = &v1167[*((int *)v1265 + 12)];
    v1103 = &v1167[*((int *)v1266 + 12)];
    v1104 = &v1167[*(int *)(v1267 + 48)];
    v1105 = &v1167[*((int *)v1268 + 12)];
    v1106 = &v1167[*((int *)v1269 + 12)];
    v1107 = &v1167[*((int *)v1270 + 12)];
    v1108 = &v1167[*((int *)v1271 + 12)];
    uint64_t v1109 = &v1167[*((int *)v1272 + 12)];
    uint64_t v1143 = &v1167[*((int *)v1273 + 12)];
    v1097 = &v1167[*((int *)v1274 + 12)];
    uint64_t v845 = &v1167[*((int *)v1275 + 12)];
    uint64_t v264 = v845;
    uint64_t v846 = &v1167[*((int *)v1276 + 12)];
    uint64_t v265 = v846;
    uint64_t v847 = &v1167[*((int *)v1277 + 12)];
    uint64_t v266 = v847;
    uint64_t v848 = &v1167[*((int *)v1278 + 12)];
    uint64_t v267 = v848;
    uint64_t v849 = &v1167[*((int *)v1279 + 12)];
    uint64_t v268 = v849;
    uint64_t v850 = &v1167[*((int *)v1280 + 12)];
    uint64_t v269 = v850;
    uint64_t v270 = &v1167[*((int *)v1281 + 12)];
    uint64_t v851 = &v1167[*((int *)v1282 + 12)];
    uint64_t v271 = v851;
    v1184();
    v1180(v271, v1219, v263);
    uint64_t v272 = v1284;
    v1183(v270, v1218, v1284);
    v1188(v269, v1217, v1288);
    v1187(v268, v1216, v1286);
    v1186(v267, v1215, v1300);
    v1171(v266, v1249, v1299);
    v1192(v265, v1248, v1298);
    v1173(v264, v1246, v1297);
    v1172(v1097, v1247, v1296);
    v1197(v1143, v1254, v1295);
    v1195(v1109, v1255, v1294);
    v1194(v1108, v1242, v1293);
    v1176(v1107, v1243, v1304);
    v1170(v1106, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1105, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1104, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1103, v1251, v1302);
    v1207(v1102, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1101, v1253, v1285);
    v1203(v1100, v1241, v1290);
    v1201(v1099, v1239, v1289);
    v1189(v1098, v1240, v1301);
    uint64_t v273 = (void (*)(char *, char *, uint64_t))v1237[4];
    v770 = v1237 + 4;
    uint64_t v771 = v273;
    uint64_t v274 = v272;
    v273(v1144, v270, v272);
    v1085 = &v1096[*(int *)(v1261 + 48)];
    v1086 = &v1096[*((int *)v1262 + 12)];
    v1087 = &v1096[*((int *)v1263 + 12)];
    v1088 = &v1096[*((int *)v1264 + 12)];
    v1089 = &v1096[*((int *)v1265 + 12)];
    v1090 = &v1096[*((int *)v1266 + 12)];
    v1091 = &v1096[*(int *)(v1267 + 48)];
    v1092 = &v1096[*((int *)v1268 + 12)];
    v1093 = &v1096[*((int *)v1269 + 12)];
    v1094 = &v1096[*((int *)v1270 + 12)];
    v1095 = &v1096[*((int *)v1271 + 12)];
    uint64_t v1144 = &v1096[*((int *)v1272 + 12)];
    v1083 = &v1096[*((int *)v1273 + 12)];
    v1084 = &v1096[*((int *)v1274 + 12)];
    uint64_t v838 = &v1096[*((int *)v1275 + 12)];
    uint64_t v275 = v838;
    uint64_t v839 = &v1096[*((int *)v1276 + 12)];
    v276 = v839;
    uint64_t v840 = &v1096[*((int *)v1277 + 12)];
    uint64_t v277 = v840;
    uint64_t v841 = &v1096[*((int *)v1278 + 12)];
    uint64_t v278 = v841;
    uint64_t v842 = &v1096[*((int *)v1279 + 12)];
    uint64_t v279 = v842;
    uint64_t v280 = &v1096[*((int *)v1280 + 12)];
    uint64_t v843 = &v1096[*((int *)v1281 + 12)];
    uint64_t v281 = v843;
    uint64_t v844 = &v1096[*((int *)v1282 + 12)];
    uint64_t v282 = v844;
    v1184();
    v1180(v282, v1219, v1287);
    v1183(v281, v1218, v274);
    uint64_t v283 = v1288;
    v1188(v280, v1217, v1288);
    v1187(v279, v1216, v1286);
    v1186(v278, v1215, v1300);
    v1171(v277, v1249, v1299);
    v1192(v276, v1248, v1298);
    v1173(v275, v1246, v1297);
    v1172(v1084, v1247, v1296);
    v1197(v1083, v1254, v1295);
    v1195(v1144, v1255, v1294);
    v1194(v1095, v1242, v1293);
    v1176(v1094, v1243, v1304);
    v1170(v1093, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1092, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1091, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1090, v1251, v1302);
    v1207(v1089, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1088, v1253, v1285);
    v1203(v1087, v1241, v1290);
    v1201(v1086, v1239, v1289);
    v1189(v1085, v1240, v1301);
    uint64_t v284 = (void (*)(char *, char *, uint64_t))v1236[4];
    v759 = v1236 + 4;
    v760 = v284;
    v284(v1145, v280, v283);
    v1071 = &v1082[*(int *)(v1261 + 48)];
    v1072 = &v1082[*((int *)v1262 + 12)];
    v1073 = &v1082[*((int *)v1263 + 12)];
    v1074 = &v1082[*((int *)v1264 + 12)];
    v1075 = &v1082[*((int *)v1265 + 12)];
    v1076 = &v1082[*((int *)v1266 + 12)];
    v1077 = &v1082[*(int *)(v1267 + 48)];
    v1078 = &v1082[*((int *)v1268 + 12)];
    v1079 = &v1082[*((int *)v1269 + 12)];
    v1080 = &v1082[*((int *)v1270 + 12)];
    v1081 = &v1082[*((int *)v1271 + 12)];
    uint64_t v1145 = &v1082[*((int *)v1272 + 12)];
    uint64_t v1069 = &v1082[*((int *)v1273 + 12)];
    uint64_t v1070 = &v1082[*((int *)v1274 + 12)];
    v831 = &v1082[*((int *)v1275 + 12)];
    uint64_t v285 = v831;
    uint64_t v832 = &v1082[*((int *)v1276 + 12)];
    uint64_t v286 = v832;
    v833 = &v1082[*((int *)v1277 + 12)];
    uint64_t v287 = v833;
    v834 = &v1082[*((int *)v1278 + 12)];
    uint64_t v288 = v834;
    uint64_t v289 = &v1082[*((int *)v1279 + 12)];
    uint64_t v835 = &v1082[*((int *)v1280 + 12)];
    uint64_t v290 = v835;
    uint64_t v836 = &v1082[*((int *)v1281 + 12)];
    uint64_t v291 = v836;
    uint64_t v837 = &v1082[*((int *)v1282 + 12)];
    uint64_t v292 = v837;
    v1184();
    v1180(v292, v1219, v1287);
    v1183(v291, v1218, v1284);
    v1188(v290, v1217, v283);
    uint64_t v293 = v1286;
    v1187(v289, v1216, v1286);
    v1186(v288, v1215, v1300);
    v1171(v287, v1249, v1299);
    v1192(v286, v1248, v1298);
    v1173(v285, v1246, v1297);
    v1172(v1070, v1247, v1296);
    v1197(v1069, v1254, v1295);
    v1195(v1145, v1255, v1294);
    v1194(v1081, v1242, v1293);
    v1176(v1080, v1243, v1304);
    v1170(v1079, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1078, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1077, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1076, v1251, v1302);
    v1207(v1075, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1074, v1253, v1285);
    v1203(v1073, v1241, v1290);
    v1201(v1072, v1239, v1289);
    v1189(v1071, v1240, v1301);
    uint64_t v294 = (void (*)(char *, char *, uint64_t))v1235[4];
    v757 = v1235 + 4;
    v758 = v294;
    v294(v1146, v289, v293);
    uint64_t v1057 = &v1068[*(int *)(v1261 + 48)];
    uint64_t v1058 = &v1068[*((int *)v1262 + 12)];
    uint64_t v1059 = &v1068[*((int *)v1263 + 12)];
    uint64_t v1060 = &v1068[*((int *)v1264 + 12)];
    uint64_t v1061 = &v1068[*((int *)v1265 + 12)];
    uint64_t v1062 = &v1068[*((int *)v1266 + 12)];
    uint64_t v1063 = &v1068[*(int *)(v1267 + 48)];
    uint64_t v1064 = &v1068[*((int *)v1268 + 12)];
    uint64_t v1065 = &v1068[*((int *)v1269 + 12)];
    uint64_t v1066 = &v1068[*((int *)v1270 + 12)];
    uint64_t v1067 = &v1068[*((int *)v1271 + 12)];
    uint64_t v1146 = &v1068[*((int *)v1272 + 12)];
    uint64_t v1056 = &v1068[*((int *)v1273 + 12)];
    v823 = &v1068[*((int *)v1274 + 12)];
    uint64_t v295 = v823;
    uint64_t v824 = &v1068[*((int *)v1275 + 12)];
    uint64_t v296 = v824;
    v825 = &v1068[*((int *)v1276 + 12)];
    uint64_t v297 = v825;
    v826 = &v1068[*((int *)v1277 + 12)];
    uint64_t v298 = v826;
    uint64_t v299 = &v1068[*((int *)v1278 + 12)];
    v827 = &v1068[*((int *)v1279 + 12)];
    v300 = v827;
    v828 = &v1068[*((int *)v1280 + 12)];
    uint64_t v301 = v828;
    v829 = &v1068[*((int *)v1281 + 12)];
    uint64_t v302 = v829;
    v830 = &v1068[*((int *)v1282 + 12)];
    v303 = v830;
    v1184();
    v1180(v303, v1219, v1287);
    v1183(v302, v1218, v1284);
    v1188(v301, v1217, v1288);
    v1187(v300, v1216, v1286);
    uint64_t v304 = v1300;
    v1186(v299, v1215, v1300);
    v1171(v298, v1249, v1299);
    v1192(v297, v1248, v1298);
    v1173(v296, v1246, v1297);
    v1172(v295, v1247, v1296);
    v1197(v1056, v1254, v1295);
    v1195(v1146, v1255, v1294);
    v1194(v1067, v1242, v1293);
    v1176(v1066, v1243, v1304);
    v1170(v1065, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1064, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1063, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1062, v1251, v1302);
    v1207(v1061, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1060, v1253, v1285);
    v1203(v1059, v1241, v1290);
    v1201(v1058, v1239, v1289);
    v1189(v1057, v1240, v1301);
    uint64_t v305 = (void (*)(char *, char *, uint64_t))v1234[4];
    v746 = v1234 + 4;
    v747 = v305;
    v305(v1147, v299, v304);
    v1045 = &v1166[*(int *)(v1261 + 48)];
    v1046 = &v1166[*((int *)v1262 + 12)];
    v1047 = &v1166[*((int *)v1263 + 12)];
    v1048 = &v1166[*((int *)v1264 + 12)];
    v1049 = &v1166[*((int *)v1265 + 12)];
    v1050 = &v1166[*((int *)v1266 + 12)];
    uint64_t v1051 = &v1166[*(int *)(v1267 + 48)];
    uint64_t v1052 = &v1166[*((int *)v1268 + 12)];
    uint64_t v1053 = &v1166[*((int *)v1269 + 12)];
    uint64_t v1054 = &v1166[*((int *)v1270 + 12)];
    uint64_t v1055 = &v1166[*((int *)v1271 + 12)];
    uint64_t v1147 = &v1166[*((int *)v1272 + 12)];
    v814 = &v1166[*((int *)v1273 + 12)];
    uint64_t v306 = v814;
    v815 = &v1166[*((int *)v1274 + 12)];
    uint64_t v307 = v815;
    v816 = &v1166[*((int *)v1275 + 12)];
    uint64_t v308 = v816;
    uint64_t v817 = &v1166[*((int *)v1276 + 12)];
    uint64_t v309 = v817;
    v1044 = &v1166[*((int *)v1277 + 12)];
    v818 = &v1166[*((int *)v1278 + 12)];
    uint64_t v310 = v818;
    uint64_t v819 = &v1166[*((int *)v1279 + 12)];
    uint64_t v311 = v819;
    v820 = &v1166[*((int *)v1280 + 12)];
    uint64_t v312 = v820;
    v821 = &v1166[*((int *)v1281 + 12)];
    uint64_t v313 = v821;
    v822 = &v1166[*((int *)v1282 + 12)];
    uint64_t v314 = v822;
    v1184();
    v1180(v314, v1219, v1287);
    v1183(v313, v1218, v1284);
    v1188(v312, v1217, v1288);
    v1187(v311, v1216, v1286);
    v1186(v310, v1215, v1300);
    uint64_t v315 = v1044;
    uint64_t v316 = v1299;
    v1171(v1044, v1249, v1299);
    v1192(v309, v1248, v1298);
    v1173(v308, v1246, v1297);
    v1172(v307, v1247, v1296);
    v1197(v306, v1254, v1295);
    v1195(v1147, v1255, v1294);
    v1194(v1055, v1242, v1293);
    v1176(v1054, v1243, v1304);
    v1170(v1053, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1052, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1051, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1050, v1251, v1302);
    v1207(v1049, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1048, v1253, v1285);
    v1203(v1047, v1241, v1290);
    v1201(v1046, v1239, v1289);
    v1189(v1045, v1240, v1301);
    uint64_t v317 = (void (*)(char *, char *, uint64_t))v1233[4];
    v739 = v1233 + 4;
    v740 = v317;
    v317(v1148, v315, v316);
    v1034 = &v1165[*(int *)(v1261 + 48)];
    v1035 = &v1165[*((int *)v1262 + 12)];
    v1036 = &v1165[*((int *)v1263 + 12)];
    v1037 = &v1165[*((int *)v1264 + 12)];
    v1038 = &v1165[*((int *)v1265 + 12)];
    v1039 = &v1165[*((int *)v1266 + 12)];
    uint64_t v1040 = &v1165[*(int *)(v1267 + 48)];
    v1041 = &v1165[*((int *)v1268 + 12)];
    uint64_t v1042 = &v1165[*((int *)v1269 + 12)];
    uint64_t v1043 = &v1165[*((int *)v1270 + 12)];
    v1044 = &v1165[*((int *)v1271 + 12)];
    uint64_t v1148 = &v1165[*((int *)v1272 + 12)];
    v805 = &v1165[*((int *)v1273 + 12)];
    uint64_t v318 = v805;
    v806 = &v1165[*((int *)v1274 + 12)];
    uint64_t v319 = v806;
    v807 = &v1165[*((int *)v1275 + 12)];
    uint64_t v320 = v807;
    v1033 = &v1165[*((int *)v1276 + 12)];
    v808 = &v1165[*((int *)v1277 + 12)];
    uint64_t v321 = v808;
    v809 = &v1165[*((int *)v1278 + 12)];
    uint64_t v322 = v809;
    v810 = &v1165[*((int *)v1279 + 12)];
    uint64_t v323 = v810;
    v811 = &v1165[*((int *)v1280 + 12)];
    uint64_t v324 = v811;
    v812 = &v1165[*((int *)v1281 + 12)];
    uint64_t v325 = v812;
    v813 = &v1165[*((int *)v1282 + 12)];
    uint64_t v326 = v813;
    v1184();
    v1180(v326, v1219, v1287);
    v1183(v325, v1218, v1284);
    v1188(v324, v1217, v1288);
    v1187(v323, v1216, v1286);
    v1186(v322, v1215, v1300);
    v1171(v321, v1249, v1299);
    uint64_t v327 = v1033;
    uint64_t v328 = v1298;
    v1192(v1033, v1248, v1298);
    v1173(v320, v1246, v1297);
    v1172(v319, v1247, v1296);
    v1197(v318, v1254, v1295);
    v1195(v1148, v1255, v1294);
    v1194(v1044, v1242, v1293);
    v1176(v1043, v1243, v1304);
    v1170(v1042, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1041, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1040, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1039, v1251, v1302);
    v1207(v1038, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1037, v1253, v1285);
    v1203(v1036, v1241, v1290);
    v1201(v1035, v1239, v1289);
    v1189(v1034, v1240, v1301);
    uint64_t v329 = (void (*)(char *, char *, uint64_t))v1259[4];
    v733 = v1259 + 4;
    v734 = v329;
    v329(v1149, v327, v328);
    v1023 = &v1164[*(int *)(v1261 + 48)];
    v1024 = &v1164[*((int *)v1262 + 12)];
    v1025 = &v1164[*((int *)v1263 + 12)];
    v1026 = &v1164[*((int *)v1264 + 12)];
    v1027 = &v1164[*((int *)v1265 + 12)];
    v1028 = &v1164[*((int *)v1266 + 12)];
    v1029 = &v1164[*(int *)(v1267 + 48)];
    v1030 = &v1164[*((int *)v1268 + 12)];
    v1031 = &v1164[*((int *)v1269 + 12)];
    uint64_t v1032 = &v1164[*((int *)v1270 + 12)];
    v1033 = &v1164[*((int *)v1271 + 12)];
    uint64_t v1149 = &v1164[*((int *)v1272 + 12)];
    v795 = &v1164[*((int *)v1273 + 12)];
    uint64_t v330 = v795;
    v796 = &v1164[*((int *)v1274 + 12)];
    uint64_t v331 = v796;
    v1021 = &v1164[*((int *)v1275 + 12)];
    v797 = &v1164[*((int *)v1276 + 12)];
    uint64_t v332 = v797;
    v798 = &v1164[*((int *)v1277 + 12)];
    uint64_t v333 = v798;
    v799 = &v1164[*((int *)v1278 + 12)];
    uint64_t v334 = v799;
    v800 = &v1164[*((int *)v1279 + 12)];
    uint64_t v335 = v800;
    v801 = &v1164[*((int *)v1280 + 12)];
    uint64_t v336 = v801;
    v802 = &v1164[*((int *)v1281 + 12)];
    uint64_t v337 = v802;
    v804 = &v1164[*((int *)v1282 + 12)];
    uint64_t v338 = v804;
    v1184();
    v1180(v338, v1219, v1287);
    v1183(v337, v1218, v1284);
    v1188(v336, v1217, v1288);
    v1187(v335, v1216, v1286);
    v1186(v334, v1215, v1300);
    v1171(v333, v1249, v1299);
    v1192(v332, v1248, v1298);
    uint64_t v339 = v1021;
    uint64_t v340 = v1297;
    v1173(v1021, v1246, v1297);
    v1172(v331, v1247, v1296);
    v1197(v330, v1254, v1295);
    v1195(v1149, v1255, v1294);
    v1194(v1033, v1242, v1293);
    v1176(v1032, v1243, v1304);
    v1170(v1031, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1030, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1029, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1028, v1251, v1302);
    v1207(v1027, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1026, v1253, v1285);
    v1203(v1025, v1241, v1290);
    v1201(v1024, v1239, v1289);
    v1189(v1023, v1240, v1301);
    uint64_t v341 = (void (*)(char *, char *, uint64_t))v1232[4];
    v722 = v1232 + 4;
    v723 = v341;
    v341(v1022, v339, v340);
    v1011 = &v1163[*(int *)(v1261 + 48)];
    v1012 = &v1163[*((int *)v1262 + 12)];
    v1013 = &v1163[*((int *)v1263 + 12)];
    v1014 = &v1163[*((int *)v1264 + 12)];
    v1015 = &v1163[*((int *)v1265 + 12)];
    v1016 = &v1163[*((int *)v1266 + 12)];
    v1017 = &v1163[*(int *)(v1267 + 48)];
    v1018 = &v1163[*((int *)v1268 + 12)];
    v1019 = &v1163[*((int *)v1269 + 12)];
    v1020 = &v1163[*((int *)v1270 + 12)];
    v1021 = &v1163[*((int *)v1271 + 12)];
    v1022 = &v1163[*((int *)v1272 + 12)];
    uint64_t v785 = &v1163[*((int *)v1273 + 12)];
    uint64_t v342 = v785;
    v1009 = &v1163[*((int *)v1274 + 12)];
    uint64_t v786 = &v1163[*((int *)v1275 + 12)];
    uint64_t v343 = v786;
    uint64_t v787 = &v1163[*((int *)v1276 + 12)];
    uint64_t v344 = v787;
    v788 = &v1163[*((int *)v1277 + 12)];
    uint64_t v345 = v788;
    v789 = &v1163[*((int *)v1278 + 12)];
    uint64_t v346 = v789;
    v790 = &v1163[*((int *)v1279 + 12)];
    uint64_t v347 = v790;
    v791 = &v1163[*((int *)v1280 + 12)];
    uint64_t v348 = v791;
    v792 = &v1163[*((int *)v1281 + 12)];
    uint64_t v349 = v792;
    v793 = &v1163[*((int *)v1282 + 12)];
    uint64_t v350 = v793;
    v1184();
    v1180(v350, v1219, v1287);
    v1183(v349, v1218, v1284);
    v1188(v348, v1217, v1288);
    v1187(v347, v1216, v1286);
    v1186(v346, v1215, v1300);
    v1171(v345, v1249, v1299);
    v1192(v344, v1248, v1298);
    v1173(v343, v1246, v1297);
    uint64_t v351 = v1009;
    uint64_t v352 = v1296;
    v1172(v1009, v1247, v1296);
    v1197(v342, v1254, v1295);
    v1195(v1022, v1255, v1294);
    v1194(v1021, v1242, v1293);
    v1176(v1020, v1243, v1304);
    v1170(v1019, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1018, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1017, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1016, v1251, v1302);
    v1207(v1015, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1014, v1253, v1285);
    v1203(v1013, v1241, v1290);
    v1201(v1012, v1239, v1289);
    v1189(v1011, v1240, v1301);
    uint64_t v353 = (void (*)(char *, char *, uint64_t))v1258[4];
    v719 = v1258 + 4;
    v720 = v353;
    v353(v1010, v351, v352);
    v999 = &v1162[*(int *)(v1261 + 48)];
    v1000 = &v1162[*((int *)v1262 + 12)];
    v1001 = &v1162[*((int *)v1263 + 12)];
    v1002 = &v1162[*((int *)v1264 + 12)];
    v1003 = &v1162[*((int *)v1265 + 12)];
    v1004 = &v1162[*((int *)v1266 + 12)];
    v1005 = &v1162[*(int *)(v1267 + 48)];
    v1006 = &v1162[*((int *)v1268 + 12)];
    v1007 = &v1162[*((int *)v1269 + 12)];
    v1008 = &v1162[*((int *)v1270 + 12)];
    v1009 = &v1162[*((int *)v1271 + 12)];
    v1010 = &v1162[*((int *)v1272 + 12)];
    v997 = &v1162[*((int *)v1273 + 12)];
    uint64_t v772 = &v1162[*((int *)v1274 + 12)];
    uint64_t v354 = v772;
    uint64_t v773 = &v1162[*((int *)v1275 + 12)];
    uint64_t v355 = v773;
    uint64_t v774 = &v1162[*((int *)v1276 + 12)];
    uint64_t v356 = v774;
    uint64_t v775 = &v1162[*((int *)v1277 + 12)];
    uint64_t v357 = v775;
    uint64_t v776 = &v1162[*((int *)v1278 + 12)];
    uint64_t v358 = v776;
    uint64_t v777 = &v1162[*((int *)v1279 + 12)];
    uint64_t v359 = v777;
    uint64_t v780 = &v1162[*((int *)v1280 + 12)];
    uint64_t v360 = v780;
    uint64_t v781 = &v1162[*((int *)v1281 + 12)];
    uint64_t v361 = v781;
    uint64_t v782 = &v1162[*((int *)v1282 + 12)];
    uint64_t v362 = v782;
    v1184();
    v1180(v362, v1219, v1287);
    v1183(v361, v1218, v1284);
    v1188(v360, v1217, v1288);
    v1187(v359, v1216, v1286);
    v1186(v358, v1215, v1300);
    v1171(v357, v1249, v1299);
    v1192(v356, v1248, v1298);
    v1173(v355, v1246, v1297);
    v1172(v354, v1247, v1296);
    uint64_t v363 = v997;
    uint64_t v364 = v1295;
    v1197(v997, v1254, v1295);
    v1195(v1010, v1255, v1294);
    v1194(v1009, v1242, v1293);
    v1176(v1008, v1243, v1304);
    v1170(v1007, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v1006, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v1005, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v1004, v1251, v1302);
    v1207(v1003, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v1002, v1253, v1285);
    v1203(v1001, v1241, v1290);
    v1201(v1000, v1239, v1289);
    v1189(v999, v1240, v1301);
    uint64_t v365 = (void (*)(char *, char *, uint64_t))v1231[4];
    v709 = v1231 + 4;
    v710 = v365;
    v365(v998, v363, v364);
    uint64_t v987 = &v1161[*(int *)(v1261 + 48)];
    v988 = &v1161[*((int *)v1262 + 12)];
    v989 = &v1161[*((int *)v1263 + 12)];
    v990 = &v1161[*((int *)v1264 + 12)];
    v991 = &v1161[*((int *)v1265 + 12)];
    v992 = &v1161[*((int *)v1266 + 12)];
    v993 = &v1161[*(int *)(v1267 + 48)];
    v994 = &v1161[*((int *)v1268 + 12)];
    v995 = &v1161[*((int *)v1269 + 12)];
    v996 = &v1161[*((int *)v1270 + 12)];
    v997 = &v1161[*((int *)v1271 + 12)];
    uint64_t v985 = &v1161[*((int *)v1272 + 12)];
    v998 = &v1161[*((int *)v1273 + 12)];
    v761 = &v1161[*((int *)v1274 + 12)];
    uint64_t v366 = v761;
    v762 = &v1161[*((int *)v1275 + 12)];
    uint64_t v367 = v762;
    v763 = &v1161[*((int *)v1276 + 12)];
    uint64_t v368 = v763;
    uint64_t v764 = &v1161[*((int *)v1277 + 12)];
    uint64_t v369 = v764;
    v765 = &v1161[*((int *)v1278 + 12)];
    uint64_t v370 = v765;
    uint64_t v766 = &v1161[*((int *)v1279 + 12)];
    uint64_t v371 = v766;
    v767 = &v1161[*((int *)v1280 + 12)];
    uint64_t v372 = v767;
    v768 = &v1161[*((int *)v1281 + 12)];
    uint64_t v373 = v768;
    uint64_t v769 = &v1161[*((int *)v1282 + 12)];
    uint64_t v374 = v769;
    v1184();
    v1180(v374, v1219, v1287);
    v1183(v373, v1218, v1284);
    v1188(v372, v1217, v1288);
    v1187(v371, v1216, v1286);
    v1186(v370, v1215, v1300);
    v1171(v369, v1249, v1299);
    v1192(v368, v1248, v1298);
    v1173(v367, v1246, v1297);
    v1172(v366, v1247, v1296);
    v1197(v998, v1254, v1295);
    uint64_t v375 = v985;
    uint64_t v376 = v1294;
    v1195(v985, v1255, v1294);
    v1194(v997, v1242, v1293);
    v1176(v996, v1243, v1304);
    v1170(v995, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v994, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v993, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v992, v1251, v1302);
    v1207(v991, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v990, v1253, v1285);
    v1203(v989, v1241, v1290);
    v1201(v988, v1239, v1289);
    v1189(v987, v1240, v1301);
    uint64_t v377 = (void (*)(char *, char *, uint64_t))v1230[4];
    uint64_t v700 = v1230 + 4;
    uint64_t v701 = v377;
    v377(v986, v375, v376);
    uint64_t v975 = &v1160[*(int *)(v1261 + 48)];
    uint64_t v976 = &v1160[*((int *)v1262 + 12)];
    uint64_t v977 = &v1160[*((int *)v1263 + 12)];
    uint64_t v978 = &v1160[*((int *)v1264 + 12)];
    uint64_t v979 = &v1160[*((int *)v1265 + 12)];
    uint64_t v980 = &v1160[*((int *)v1266 + 12)];
    uint64_t v981 = &v1160[*(int *)(v1267 + 48)];
    uint64_t v982 = &v1160[*((int *)v1268 + 12)];
    uint64_t v983 = &v1160[*((int *)v1269 + 12)];
    uint64_t v984 = &v1160[*((int *)v1270 + 12)];
    uint64_t v973 = &v1160[*((int *)v1271 + 12)];
    uint64_t v985 = &v1160[*((int *)v1272 + 12)];
    uint64_t v986 = &v1160[*((int *)v1273 + 12)];
    v748 = &v1160[*((int *)v1274 + 12)];
    uint64_t v378 = v748;
    v749 = &v1160[*((int *)v1275 + 12)];
    uint64_t v379 = v749;
    v750 = &v1160[*((int *)v1276 + 12)];
    uint64_t v380 = v750;
    v751 = &v1160[*((int *)v1277 + 12)];
    uint64_t v381 = v751;
    v752 = &v1160[*((int *)v1278 + 12)];
    uint64_t v382 = v752;
    v753 = &v1160[*((int *)v1279 + 12)];
    uint64_t v383 = v753;
    v754 = &v1160[*((int *)v1280 + 12)];
    uint64_t v384 = v754;
    v755 = &v1160[*((int *)v1281 + 12)];
    v385 = v755;
    v756 = &v1160[*((int *)v1282 + 12)];
    uint64_t v386 = v756;
    v1184();
    v1180(v386, v1219, v1287);
    v1183(v385, v1218, v1284);
    v1188(v384, v1217, v1288);
    v1187(v383, v1216, v1286);
    v1186(v382, v1215, v1300);
    v1171(v381, v1249, v1299);
    v1192(v380, v1248, v1298);
    v1173(v379, v1246, v1297);
    v1172(v378, v1247, v1296);
    v1197(v986, v1254, v1295);
    v1195(v985, v1255, v1294);
    uint64_t v387 = v973;
    uint64_t v388 = v1293;
    v1194(v973, v1242, v1293);
    v1176(v984, v1243, v1304);
    v1170(v983, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v982, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v981, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v980, v1251, v1302);
    v1207(v979, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v978, v1253, v1285);
    v1203(v977, v1241, v1290);
    v1201(v976, v1239, v1289);
    v1189(v975, v1240, v1301);
    uint64_t v389 = (void (*)(char *, char *, uint64_t))v1257[4];
    uint64_t v697 = v1257 + 4;
    uint64_t v698 = v389;
    v389(v974, v387, v388);
    v963 = &v1159[*(int *)(v1261 + 48)];
    uint64_t v964 = &v1159[*((int *)v1262 + 12)];
    uint64_t v965 = &v1159[*((int *)v1263 + 12)];
    v966 = &v1159[*((int *)v1264 + 12)];
    v967 = &v1159[*((int *)v1265 + 12)];
    v968 = &v1159[*((int *)v1266 + 12)];
    uint64_t v969 = &v1159[*(int *)(v1267 + 48)];
    uint64_t v970 = &v1159[*((int *)v1268 + 12)];
    uint64_t v971 = &v1159[*((int *)v1269 + 12)];
    v961 = &v1159[*((int *)v1270 + 12)];
    uint64_t v972 = &v1159[*((int *)v1271 + 12)];
    uint64_t v973 = &v1159[*((int *)v1272 + 12)];
    uint64_t v974 = &v1159[*((int *)v1273 + 12)];
    v735 = &v1159[*((int *)v1274 + 12)];
    uint64_t v390 = v735;
    v736 = &v1159[*((int *)v1275 + 12)];
    uint64_t v391 = v736;
    uint64_t v737 = &v1159[*((int *)v1276 + 12)];
    uint64_t v392 = v737;
    v738 = &v1159[*((int *)v1277 + 12)];
    uint64_t v393 = v738;
    v741 = &v1159[*((int *)v1278 + 12)];
    uint64_t v394 = v741;
    v742 = &v1159[*((int *)v1279 + 12)];
    uint64_t v395 = v742;
    v743 = &v1159[*((int *)v1280 + 12)];
    uint64_t v396 = v743;
    v744 = &v1159[*((int *)v1281 + 12)];
    uint64_t v397 = v744;
    v745 = &v1159[*((int *)v1282 + 12)];
    uint64_t v398 = v745;
    v1184();
    v1180(v398, v1219, v1287);
    v1183(v397, v1218, v1284);
    v1188(v396, v1217, v1288);
    v1187(v395, v1216, v1286);
    v1186(v394, v1215, v1300);
    v1171(v393, v1249, v1299);
    v1192(v392, v1248, v1298);
    v1173(v391, v1246, v1297);
    v1172(v390, v1247, v1296);
    v1197(v974, v1254, v1295);
    v1195(v973, v1255, v1294);
    v1194(v972, v1242, v1293);
    uint64_t v399 = v961;
    uint64_t v400 = v1304;
    v1176(v961, v1243, v1304);
    v1170(v971, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v970, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v969, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v968, v1251, v1302);
    v1207(v967, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v966, v1253, v1285);
    v1203(v965, v1241, v1290);
    v1201(v964, v1239, v1289);
    v1189(v963, v1240, v1301);
    v401 = (void (*)(char *, char *, uint64_t))v1229[4];
    uint64_t v687 = v1229 + 4;
    uint64_t v688 = v401;
    v401(v962, v399, v400);
    uint64_t v951 = &v1158[*(int *)(v1261 + 48)];
    v952 = &v1158[*((int *)v1262 + 12)];
    v953 = &v1158[*((int *)v1263 + 12)];
    v954 = &v1158[*((int *)v1264 + 12)];
    v955 = &v1158[*((int *)v1265 + 12)];
    v956 = &v1158[*((int *)v1266 + 12)];
    v957 = &v1158[*(int *)(v1267 + 48)];
    uint64_t v958 = &v1158[*((int *)v1268 + 12)];
    v949 = &v1158[*((int *)v1269 + 12)];
    uint64_t v959 = &v1158[*((int *)v1270 + 12)];
    uint64_t v960 = &v1158[*((int *)v1271 + 12)];
    v961 = &v1158[*((int *)v1272 + 12)];
    v962 = &v1158[*((int *)v1273 + 12)];
    v724 = &v1158[*((int *)v1274 + 12)];
    uint64_t v402 = v724;
    v725 = &v1158[*((int *)v1275 + 12)];
    uint64_t v403 = v725;
    v726 = &v1158[*((int *)v1276 + 12)];
    uint64_t v404 = v726;
    v727 = &v1158[*((int *)v1277 + 12)];
    uint64_t v405 = v727;
    v728 = &v1158[*((int *)v1278 + 12)];
    uint64_t v406 = v728;
    v729 = &v1158[*((int *)v1279 + 12)];
    uint64_t v407 = v729;
    v730 = &v1158[*((int *)v1280 + 12)];
    uint64_t v408 = v730;
    v731 = &v1158[*((int *)v1281 + 12)];
    uint64_t v409 = v731;
    v732 = &v1158[*((int *)v1282 + 12)];
    uint64_t v410 = v732;
    v1184();
    v1180(v410, v1219, v1287);
    v1183(v409, v1218, v1284);
    v1188(v408, v1217, v1288);
    v1187(v407, v1216, v1286);
    v1186(v406, v1215, v1300);
    v1171(v405, v1249, v1299);
    v1192(v404, v1248, v1298);
    v1173(v403, v1246, v1297);
    v1172(v402, v1247, v1296);
    v1197(v962, v1254, v1295);
    v1195(v961, v1255, v1294);
    v1194(v960, v1242, v1293);
    v1176(v959, v1243, v1304);
    uint64_t v411 = v949;
    uint64_t v412 = v1283;
    v1170(v949, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v958, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v957, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v956, v1251, v1302);
    v1207(v955, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v954, v1253, v1285);
    v1203(v953, v1241, v1290);
    v1201(v952, v1239, v1289);
    v1189(v951, v1240, v1301);
    uint64_t v413 = (void (*)(char *, char *, uint64_t))v1228[4];
    v682 = v1228 + 4;
    v684 = v413;
    v413(v950, v411, v412);
    v939 = &v1157[*(int *)(v1261 + 48)];
    v940 = &v1157[*((int *)v1262 + 12)];
    v941 = &v1157[*((int *)v1263 + 12)];
    v942 = &v1157[*((int *)v1264 + 12)];
    v943 = &v1157[*((int *)v1265 + 12)];
    v944 = &v1157[*((int *)v1266 + 12)];
    v945 = &v1157[*(int *)(v1267 + 48)];
    v937 = &v1157[*((int *)v1268 + 12)];
    v946 = &v1157[*((int *)v1269 + 12)];
    v947 = &v1157[*((int *)v1270 + 12)];
    v948 = &v1157[*((int *)v1271 + 12)];
    v949 = &v1157[*((int *)v1272 + 12)];
    uint64_t v950 = &v1157[*((int *)v1273 + 12)];
    v711 = &v1157[*((int *)v1274 + 12)];
    uint64_t v414 = v711;
    v712 = &v1157[*((int *)v1275 + 12)];
    uint64_t v415 = v712;
    v713 = &v1157[*((int *)v1276 + 12)];
    uint64_t v416 = v713;
    v714 = &v1157[*((int *)v1277 + 12)];
    uint64_t v417 = v714;
    v715 = &v1157[*((int *)v1278 + 12)];
    uint64_t v418 = v715;
    v716 = &v1157[*((int *)v1279 + 12)];
    uint64_t v419 = v716;
    v717 = &v1157[*((int *)v1280 + 12)];
    uint64_t v420 = v717;
    v718 = &v1157[*((int *)v1281 + 12)];
    uint64_t v421 = v718;
    v721 = &v1157[*((int *)v1282 + 12)];
    uint64_t v422 = v721;
    v1184();
    v1180(v422, v1219, v1287);
    v1183(v421, v1218, v1284);
    v1188(v420, v1217, v1288);
    v1187(v419, v1216, v1286);
    v1186(v418, v1215, v1300);
    v1171(v417, v1249, v1299);
    v1192(v416, v1248, v1298);
    v1173(v415, v1246, v1297);
    v1172(v414, v1247, v1296);
    v1197(v950, v1254, v1295);
    v1195(v949, v1255, v1294);
    v1194(v948, v1242, v1293);
    v1176(v947, v1243, v1304);
    v1170(v946, v1244, v1283);
    uint64_t v423 = v937;
    uint64_t v424 = v1303;
    ((void (*)(char *, char *, uint64_t))v1213)(v937, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v945, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v944, v1251, v1302);
    v1207(v943, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v942, v1253, v1285);
    v1203(v941, v1241, v1290);
    v1201(v940, v1239, v1289);
    v1189(v939, v1240, v1301);
    uint64_t v425 = (void (*)(char *, char *, uint64_t))v1227[4];
    v674 = v1227 + 4;
    v675 = v425;
    v425(v938, v423, v424);
    v927 = &v1156[*(int *)(v1261 + 48)];
    v928 = &v1156[*((int *)v1262 + 12)];
    v929 = &v1156[*((int *)v1263 + 12)];
    v930 = &v1156[*((int *)v1264 + 12)];
    v931 = &v1156[*((int *)v1265 + 12)];
    v932 = &v1156[*((int *)v1266 + 12)];
    uint64_t v426 = &v1156[*(int *)(v1267 + 48)];
    v933 = &v1156[*((int *)v1268 + 12)];
    v934 = &v1156[*((int *)v1269 + 12)];
    v935 = &v1156[*((int *)v1270 + 12)];
    v936 = &v1156[*((int *)v1271 + 12)];
    v937 = &v1156[*((int *)v1272 + 12)];
    v938 = &v1156[*((int *)v1273 + 12)];
    v926 = &v1156[*((int *)v1274 + 12)];
    uint64_t v699 = &v1156[*((int *)v1275 + 12)];
    uint64_t v427 = v699;
    uint64_t v702 = &v1156[*((int *)v1276 + 12)];
    uint64_t v428 = v702;
    uint64_t v703 = &v1156[*((int *)v1277 + 12)];
    uint64_t v429 = v703;
    uint64_t v704 = &v1156[*((int *)v1278 + 12)];
    uint64_t v430 = v704;
    uint64_t v705 = &v1156[*((int *)v1279 + 12)];
    uint64_t v431 = v705;
    uint64_t v706 = &v1156[*((int *)v1280 + 12)];
    uint64_t v432 = v706;
    v707 = &v1156[*((int *)v1281 + 12)];
    uint64_t v433 = v707;
    v708 = &v1156[*((int *)v1282 + 12)];
    uint64_t v434 = v708;
    v1184();
    v1180(v434, v1219, v1287);
    v1183(v433, v1218, v1284);
    v1188(v432, v1217, v1288);
    v1187(v431, v1216, v1286);
    v1186(v430, v1215, v1300);
    v1171(v429, v1249, v1299);
    v1192(v428, v1248, v1298);
    v1173(v427, v1246, v1297);
    v1172(v926, v1247, v1296);
    v1197(v938, v1254, v1295);
    v1195(v937, v1255, v1294);
    v1194(v936, v1242, v1293);
    v1176(v935, v1243, v1304);
    v1170(v934, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v933, v1245, v1303);
    uint64_t v435 = v1292;
    ((void (*)(char *, char *, uint64_t))v1211)(v426, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v932, v1251, v1302);
    v1207(v931, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v930, v1253, v1285);
    v1203(v929, v1241, v1290);
    v1201(v928, v1239, v1289);
    v1189(v927, v1240, v1301);
    uint64_t v436 = (void (*)(uint64_t, char *, uint64_t))v1226[4];
    v664 = v1226 + 4;
    v665 = v436;
    v436((uint64_t)v925, v426, v435);
    uint64_t v914 = &v1155[*(int *)(v1261 + 48)];
    uint64_t v915 = &v1155[*((int *)v1262 + 12)];
    uint64_t v916 = &v1155[*((int *)v1263 + 12)];
    uint64_t v917 = &v1155[*((int *)v1264 + 12)];
    uint64_t v918 = &v1155[*((int *)v1265 + 12)];
    uint64_t v437 = &v1155[*((int *)v1266 + 12)];
    uint64_t v919 = &v1155[*(int *)(v1267 + 48)];
    uint64_t v920 = &v1155[*((int *)v1268 + 12)];
    uint64_t v921 = &v1155[*((int *)v1269 + 12)];
    v922 = &v1155[*((int *)v1270 + 12)];
    v923 = &v1155[*((int *)v1271 + 12)];
    v924 = &v1155[*((int *)v1272 + 12)];
    v925 = &v1155[*((int *)v1273 + 12)];
    uint64_t v913 = &v1155[*((int *)v1274 + 12)];
    v689 = &v1155[*((int *)v1275 + 12)];
    uint64_t v438 = v689;
    uint64_t v690 = &v1155[*((int *)v1276 + 12)];
    uint64_t v439 = v690;
    uint64_t v691 = &v1155[*((int *)v1277 + 12)];
    uint64_t v440 = v691;
    uint64_t v692 = &v1155[*((int *)v1278 + 12)];
    uint64_t v441 = v692;
    uint64_t v693 = &v1155[*((int *)v1279 + 12)];
    uint64_t v442 = v693;
    uint64_t v694 = &v1155[*((int *)v1280 + 12)];
    uint64_t v443 = v694;
    uint64_t v695 = &v1155[*((int *)v1281 + 12)];
    uint64_t v444 = v695;
    uint64_t v696 = &v1155[*((int *)v1282 + 12)];
    uint64_t v445 = v696;
    v1184();
    v1180(v445, v1219, v1287);
    v1183(v444, v1218, v1284);
    v1188(v443, v1217, v1288);
    v1187(v442, v1216, v1286);
    v1186(v441, v1215, v1300);
    v1171(v440, v1249, v1299);
    v1192(v439, v1248, v1298);
    v1173(v438, v1246, v1297);
    v1172(v913, v1247, v1296);
    v1197(v925, v1254, v1295);
    v1195(v924, v1255, v1294);
    v1194(v923, v1242, v1293);
    v1176(v922, v1243, v1304);
    v1170(v921, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v920, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v919, v1250, v1292);
    uint64_t v446 = v437;
    uint64_t v447 = v437;
    uint64_t v448 = v1302;
    ((void (*)(char *, char *, uint64_t))v1209)(v447, v1251, v1302);
    v1207(v918, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v917, v1253, v1285);
    v1203(v916, v1241, v1290);
    v1201(v915, v1239, v1289);
    v1189(v914, v1240, v1301);
    uint64_t v449 = (void (*)(char *, char *, uint64_t))v1225[4];
    v662 = v1225 + 4;
    v663 = v449;
    v449(v912, v446, v448);
    v901 = &v1154[*(int *)(v1261 + 48)];
    v902 = &v1154[*((int *)v1262 + 12)];
    v903 = &v1154[*((int *)v1263 + 12)];
    uint64_t v904 = &v1154[*((int *)v1264 + 12)];
    v899 = &v1154[*((int *)v1265 + 12)];
    uint64_t v905 = &v1154[*((int *)v1266 + 12)];
    uint64_t v906 = &v1154[*(int *)(v1267 + 48)];
    uint64_t v907 = &v1154[*((int *)v1268 + 12)];
    uint64_t v908 = &v1154[*((int *)v1269 + 12)];
    uint64_t v909 = &v1154[*((int *)v1270 + 12)];
    uint64_t v910 = &v1154[*((int *)v1271 + 12)];
    uint64_t v911 = &v1154[*((int *)v1272 + 12)];
    uint64_t v912 = &v1154[*((int *)v1273 + 12)];
    v676 = &v1154[*((int *)v1274 + 12)];
    uint64_t v450 = v676;
    v677 = &v1154[*((int *)v1275 + 12)];
    uint64_t v451 = v677;
    uint64_t v678 = &v1154[*((int *)v1276 + 12)];
    uint64_t v452 = v678;
    v679 = &v1154[*((int *)v1277 + 12)];
    uint64_t v453 = v679;
    v680 = &v1154[*((int *)v1278 + 12)];
    uint64_t v454 = v680;
    v681 = &v1154[*((int *)v1279 + 12)];
    uint64_t v455 = v681;
    uint64_t v683 = &v1154[*((int *)v1280 + 12)];
    uint64_t v456 = v683;
    v685 = &v1154[*((int *)v1281 + 12)];
    uint64_t v457 = v685;
    v686 = &v1154[*((int *)v1282 + 12)];
    uint64_t v458 = v686;
    v1184();
    v1180(v458, v1219, v1287);
    v1183(v457, v1218, v1284);
    v1188(v456, v1217, v1288);
    v1187(v455, v1216, v1286);
    v1186(v454, v1215, v1300);
    v1171(v453, v1249, v1299);
    v1192(v452, v1248, v1298);
    v1173(v451, v1246, v1297);
    v1172(v450, v1247, v1296);
    v1197(v912, v1254, v1295);
    v1195(v911, v1255, v1294);
    v1194(v910, v1242, v1293);
    v1176(v909, v1243, v1304);
    v1170(v908, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v907, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v906, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v905, v1251, v1302);
    uint64_t v459 = v899;
    uint64_t v460 = v1291;
    v1207(v899, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v904, v1253, v1285);
    v1203(v903, v1241, v1290);
    v1201(v902, v1239, v1289);
    v1189(v901, v1240, v1301);
    uint64_t v461 = (void (*)(char *, char *, uint64_t))v1224[4];
    v652 = v1224 + 4;
    v653 = v461;
    v461(v900, v459, v460);
    v889 = &v1153[*(int *)(v1261 + 48)];
    v890 = &v1153[*((int *)v1262 + 12)];
    v891 = &v1153[*((int *)v1263 + 12)];
    uint64_t v462 = &v1153[*((int *)v1264 + 12)];
    v892 = &v1153[*((int *)v1265 + 12)];
    v893 = &v1153[*((int *)v1266 + 12)];
    v894 = &v1153[*(int *)(v1267 + 48)];
    v895 = &v1153[*((int *)v1268 + 12)];
    v896 = &v1153[*((int *)v1269 + 12)];
    v897 = &v1153[*((int *)v1270 + 12)];
    uint64_t v898 = &v1153[*((int *)v1271 + 12)];
    v899 = &v1153[*((int *)v1272 + 12)];
    v900 = &v1153[*((int *)v1273 + 12)];
    v888 = &v1153[*((int *)v1274 + 12)];
    v666 = &v1153[*((int *)v1275 + 12)];
    uint64_t v463 = v666;
    v667 = &v1153[*((int *)v1276 + 12)];
    uint64_t v464 = v667;
    v668 = &v1153[*((int *)v1277 + 12)];
    uint64_t v465 = v668;
    v669 = &v1153[*((int *)v1278 + 12)];
    uint64_t v466 = v669;
    v670 = &v1153[*((int *)v1279 + 12)];
    uint64_t v467 = v670;
    v671 = &v1153[*((int *)v1280 + 12)];
    uint64_t v468 = v671;
    v672 = &v1153[*((int *)v1281 + 12)];
    uint64_t v469 = v672;
    v673 = &v1153[*((int *)v1282 + 12)];
    uint64_t v470 = v673;
    v1184();
    v1180(v470, v1219, v1287);
    v1183(v469, v1218, v1284);
    v1188(v468, v1217, v1288);
    v1187(v467, v1216, v1286);
    v1186(v466, v1215, v1300);
    v1171(v465, v1249, v1299);
    v1192(v464, v1248, v1298);
    v1173(v463, v1246, v1297);
    v1172(v888, v1247, v1296);
    v1197(v900, v1254, v1295);
    v1195(v899, v1255, v1294);
    v1194(v898, v1242, v1293);
    v1176(v897, v1243, v1304);
    v1170(v896, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v895, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v894, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v893, v1251, v1302);
    v1207(v892, v1252, v1291);
    uint64_t v471 = v1285;
    ((void (*)(char *, char *, uint64_t))v1205)(v462, v1253, v1285);
    v1203(v891, v1241, v1290);
    v1201(v890, v1239, v1289);
    v1189(v889, v1240, v1301);
    uint64_t v472 = (void (*)(char *, char *, uint64_t))v1223[4];
    uint64_t v646 = v1223 + 4;
    uint64_t v647 = v472;
    v472(v887, v462, v471);
    v876 = &v1152[*(int *)(v1261 + 48)];
    v877 = &v1152[*((int *)v1262 + 12)];
    uint64_t v473 = &v1152[*((int *)v1263 + 12)];
    v878 = &v1152[*((int *)v1264 + 12)];
    v879 = &v1152[*((int *)v1265 + 12)];
    v880 = &v1152[*((int *)v1266 + 12)];
    v881 = &v1152[*(int *)(v1267 + 48)];
    v882 = &v1152[*((int *)v1268 + 12)];
    v883 = &v1152[*((int *)v1269 + 12)];
    v884 = &v1152[*((int *)v1270 + 12)];
    uint64_t v885 = &v1152[*((int *)v1271 + 12)];
    v886 = &v1152[*((int *)v1272 + 12)];
    uint64_t v887 = &v1152[*((int *)v1273 + 12)];
    v875 = &v1152[*((int *)v1274 + 12)];
    v654 = &v1152[*((int *)v1275 + 12)];
    uint64_t v474 = v654;
    v655 = &v1152[*((int *)v1276 + 12)];
    uint64_t v475 = v655;
    uint64_t v656 = &v1152[*((int *)v1277 + 12)];
    uint64_t v476 = v656;
    v657 = &v1152[*((int *)v1278 + 12)];
    uint64_t v477 = v657;
    v658 = &v1152[*((int *)v1279 + 12)];
    uint64_t v478 = v658;
    v659 = &v1152[*((int *)v1280 + 12)];
    uint64_t v479 = v659;
    v660 = &v1152[*((int *)v1281 + 12)];
    uint64_t v480 = v660;
    v661 = &v1152[*((int *)v1282 + 12)];
    uint64_t v481 = v661;
    v1184();
    v1180(v481, v1219, v1287);
    v1183(v480, v1218, v1284);
    v1188(v479, v1217, v1288);
    v1187(v478, v1216, v1286);
    v1186(v477, v1215, v1300);
    v1171(v476, v1249, v1299);
    v1192(v475, v1248, v1298);
    v1173(v474, v1246, v1297);
    v1172(v875, v1247, v1296);
    v1197(v887, v1254, v1295);
    v1195(v886, v1255, v1294);
    v1194(v885, v1242, v1293);
    v1176(v884, v1243, v1304);
    v1170(v883, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v882, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v881, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v880, v1251, v1302);
    v1207(v879, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v878, v1253, v1285);
    uint64_t v482 = v1290;
    v1203(v473, v1241, v1290);
    v1201(v877, v1239, v1289);
    v1189(v876, v1240, v1301);
    uint64_t v483 = (void (*)(char *, char *, uint64_t))v1222[4];
    v639[1] = v1222 + 4;
    uint64_t v640 = v483;
    v483(v874, v473, v482);
    v863 = &v1151[*(int *)(v1261 + 48)];
    v639[0] = &v1151[*((int *)v1262 + 12)];
    v864 = &v1151[*((int *)v1263 + 12)];
    v865 = &v1151[*((int *)v1264 + 12)];
    v866 = &v1151[*((int *)v1265 + 12)];
    v867 = &v1151[*((int *)v1266 + 12)];
    v868 = &v1151[*(int *)(v1267 + 48)];
    v869 = &v1151[*((int *)v1268 + 12)];
    v870 = &v1151[*((int *)v1269 + 12)];
    v871 = &v1151[*((int *)v1270 + 12)];
    v872 = &v1151[*((int *)v1271 + 12)];
    v873 = &v1151[*((int *)v1272 + 12)];
    v874 = &v1151[*((int *)v1273 + 12)];
    uint64_t v641 = &v1151[*((int *)v1274 + 12)];
    uint64_t v484 = v641;
    uint64_t v642 = &v1151[*((int *)v1275 + 12)];
    uint64_t v485 = v642;
    uint64_t v643 = &v1151[*((int *)v1276 + 12)];
    uint64_t v486 = v643;
    uint64_t v644 = &v1151[*((int *)v1277 + 12)];
    uint64_t v487 = v644;
    uint64_t v645 = &v1151[*((int *)v1278 + 12)];
    uint64_t v488 = v645;
    uint64_t v648 = &v1151[*((int *)v1279 + 12)];
    uint64_t v489 = v648;
    uint64_t v649 = &v1151[*((int *)v1280 + 12)];
    uint64_t v490 = v649;
    uint64_t v650 = &v1151[*((int *)v1281 + 12)];
    uint64_t v491 = v650;
    uint64_t v651 = &v1151[*((int *)v1282 + 12)];
    uint64_t v492 = v651;
    v1184();
    v1180(v492, v1219, v1287);
    v1183(v491, v1218, v1284);
    v1188(v490, v1217, v1288);
    v1187(v489, v1216, v1286);
    v1186(v488, v1215, v1300);
    v1171(v487, v1249, v1299);
    v1192(v486, v1248, v1298);
    v1173(v485, v1246, v1297);
    v1172(v484, v1247, v1296);
    v1197(v874, v1254, v1295);
    v1195(v873, v1255, v1294);
    v1194(v872, v1242, v1293);
    v1176(v871, v1243, v1304);
    v1170(v870, v1244, v1283);
    ((void (*)(char *, char *, uint64_t))v1213)(v869, v1245, v1303);
    ((void (*)(char *, char *, uint64_t))v1211)(v868, v1250, v1292);
    ((void (*)(char *, char *, uint64_t))v1209)(v867, v1251, v1302);
    v1207(v866, v1252, v1291);
    ((void (*)(char *, char *, uint64_t))v1205)(v865, v1253, v1285);
    v1203(v864, v1241, v1290);
    uint64_t v493 = (char *)v639[0];
    uint64_t v494 = v1289;
    v1201((char *)v639[0], v1239, v1289);
    v1189(v863, v1240, v1301);
    uint64_t v495 = (void (*)(char *, char *, uint64_t))v1221[4];
    uint64_t v1206 = v1221 + 4;
    uint64_t v1207 = v495;
    v495(v794, v493, v494);
    uint64_t v496 = v1150;
    uint64_t v1208 = &v1150[*(int *)(v1261 + 48)];
    uint64_t v1205 = &v1150[*((int *)v1262 + 12)];
    v1262 = &v1150[*((int *)v1263 + 12)];
    uint64_t v1213 = &v1150[*((int *)v1264 + 12)];
    uint64_t v1214 = &v1150[*((int *)v1265 + 12)];
    v1265 = &v1150[*((int *)v1266 + 12)];
    uint64_t v1261 = (uint64_t)&v1150[*(int *)(v1267 + 48)];
    v1264 = &v1150[*((int *)v1268 + 12)];
    v1263 = &v1150[*((int *)v1269 + 12)];
    v1268 = &v1150[*((int *)v1270 + 12)];
    v1269 = &v1150[*((int *)v1271 + 12)];
    v1272 = &v1150[*((int *)v1272 + 12)];
    v1273 = &v1150[*((int *)v1273 + 12)];
    v1274 = &v1150[*((int *)v1274 + 12)];
    uint64_t v1209 = &v1150[*((int *)v1275 + 12)];
    uint64_t v497 = v1209;
    uint64_t v1210 = &v1150[*((int *)v1276 + 12)];
    uint64_t v498 = v1210;
    uint64_t v1211 = &v1150[*((int *)v1277 + 12)];
    uint64_t v499 = v1211;
    uint64_t v1212 = &v1150[*((int *)v1278 + 12)];
    uint64_t v500 = v1212;
    v1276 = &v1150[*((int *)v1279 + 12)];
    uint64_t v501 = v1276;
    v1278 = &v1150[*((int *)v1280 + 12)];
    uint64_t v502 = v1278;
    v1279 = &v1150[*((int *)v1281 + 12)];
    uint64_t v503 = v1279;
    v1281 = &v1150[*((int *)v1282 + 12)];
    uint64_t v504 = v1281;
    v784(v1150, v1220, v1305);
    v779(v504, v1219, v1287);
    v771(v503, v1218, v1284);
    v760(v502, v1217, v1288);
    v758(v501, v1216, v1286);
    v747(v500, v1215, v1300);
    v740(v499, v1249, v1299);
    v734(v498, v1248, v1298);
    v723(v497, v1246, v1297);
    v720(v1274, v1247, v1296);
    v710(v1273, v1254, v1295);
    v701(v1272, v1255, v1294);
    v698(v1269, v1242, v1293);
    v688(v1268, v1243, v1304);
    v684(v1263, v1244, v1283);
    v675(v1264, v1245, v1303);
    v665(v1261, v1250, v1292);
    v663(v1265, v1251, v1302);
    v653(v1214, v1252, v1291);
    uint64_t v505 = v1285;
    v647(v1213, v1253, v1285);
    uint64_t v506 = v1290;
    v640(v1262, v1241, v1290);
    uint64_t v507 = v1205;
    uint64_t v508 = v1289;
    v1207(v1205, v1239, v1289);
    uint64_t v509 = (void (*)(char *, char *, uint64_t))v1256[4];
    uint64_t v510 = v1208;
    uint64_t v511 = v1301;
    v509(v1208, v1240, v1301);
    v509(v803, v510, v511);
    uint64_t v512 = (int *)v1221[1];
    ++v1221;
    v1266 = (void (*)(char *, uint64_t))v512;
    ((void (*)(char *, uint64_t))v512)(v507, v508);
    uint64_t v1267 = v1222[1];
    ++v1222;
    ((void (*)(char *, uint64_t))v1267)(v1262, v506);
    uint64_t v513 = (void (*)(char *, uint64_t))v1223[1];
    ++v1223;
    v513(v1213, v505);
    uint64_t v514 = v513;
    v1262 = (char *)v513;
    uint64_t v515 = (char *)v1224[1];
    ++v1224;
    v1255 = v515;
    ((void (*)(char *, uint64_t))v515)(v1214, v1291);
    uint64_t v516 = (int *)v1225[1];
    ++v1225;
    v1275 = (void (*)(char *, uint64_t))v516;
    uint64_t v517 = v1302;
    ((void (*)(char *, uint64_t))v516)(v1265, v1302);
    uint64_t v518 = (char *)v1226[1];
    ++v1226;
    v1265 = v518;
    ((void (*)(uint64_t, uint64_t))v518)(v1261, v1292);
    uint64_t v519 = (int *)v1227[1];
    ++v1227;
    v1271 = (void (*)(char *, uint64_t))v519;
    ((void (*)(char *, uint64_t))v519)(v1264, v1303);
    uint64_t v520 = (char *)v1228[1];
    ++v1228;
    v1264 = v520;
    uint64_t v521 = v1283;
    ((void (*)(char *, uint64_t))v520)(v1263, v1283);
    uint64_t v522 = (int *)v1229[1];
    ++v1229;
    v1270 = (void (*)(char *, uint64_t))v522;
    ((void (*)(char *, uint64_t))v522)(v1268, v1304);
    uint64_t v523 = (int *)v1257[1];
    ++v1257;
    v1280 = (void (*)(char *, uint64_t))v523;
    ((void (*)(char *, uint64_t))v523)(v1269, v1293);
    uint64_t v1261 = v1230[1];
    ++v1230;
    ((void (*)(char *, uint64_t))v1261)(v1272, v1294);
    uint64_t v524 = (int *)v1231[1];
    ++v1231;
    v1282 = (void (*)(char *, uint64_t))v524;
    ((void (*)(char *, uint64_t))v524)(v1273, v1295);
    v1269 = (char *)v1258[1];
    ++v1258;
    ((void (*)(char *, uint64_t))v1269)(v1274, v1296);
    uint64_t v525 = (int *)v1232[1];
    ++v1232;
    v1277 = (void (*)(char *, uint64_t))v525;
    uint64_t v526 = v1297;
    ((void (*)(char *, uint64_t))v525)(v1209, v1297);
    v1274 = (char *)v1259[1];
    ++v1259;
    uint64_t v527 = v1298;
    ((void (*)(char *, uint64_t))v1274)(v1210, v1298);
    v1263 = (char *)v1233[1];
    ++v1233;
    ((void (*)(char *, uint64_t))v1263)(v1211, v1299);
    uint64_t v528 = (char *)v1234[1];
    ++v1234;
    v1268 = v528;
    ((void (*)(char *, uint64_t))v528)(v1212, v1300);
    uint64_t v529 = (char *)v1235[1];
    ++v1235;
    v1273 = v529;
    uint64_t v530 = v1286;
    ((void (*)(char *, uint64_t))v529)(v1276, v1286);
    v1276 = (char *)v1236[1];
    ++v1236;
    ((void (*)(char *, uint64_t))v1276)(v1278, v1288);
    uint64_t v531 = (char *)v1237[1];
    ++v1237;
    v1278 = v531;
    ((void (*)(char *, uint64_t))v531)(v1279, v1284);
    v1272 = (char *)v1260[1];
    ++v1260;
    ((void (*)(char *, uint64_t))v1272)(v1281, v1287);
    uint64_t v532 = (char *)v1238[1];
    ++v1238;
    v1281 = v532;
    ((void (*)(char *, uint64_t))v532)(v496, v1305);
    uint64_t v533 = (char *)v1256[1];
    ++v1256;
    v1279 = v533;
    ((void (*)(char *, uint64_t))v533)(v863, v1301);
    ((void (*)(char *, uint64_t))v1267)(v864, v1290);
    uint64_t v534 = v505;
    v514(v865, v505);
    uint64_t v535 = v1291;
    uint64_t v536 = v1255;
    ((void (*)(char *, uint64_t))v1255)(v866, v1291);
    v1275(v867, v517);
    ((void (*)(char *, uint64_t))v1265)(v868, v1292);
    uint64_t v537 = v1303;
    v1271(v869, v1303);
    ((void (*)(char *, uint64_t))v1264)(v870, v521);
    uint64_t v538 = v1304;
    v1270(v871, v1304);
    uint64_t v539 = v1293;
    v1280(v872, v1293);
    ((void (*)(char *, uint64_t))v1261)(v873, v1294);
    v1282(v874, v1295);
    ((void (*)(char *, uint64_t))v1269)(v641, v1296);
    v1277(v642, v526);
    ((void (*)(char *, uint64_t))v1274)(v643, v527);
    uint64_t v540 = v1299;
    ((void (*)(char *, uint64_t))v1263)(v644, v1299);
    ((void (*)(char *, uint64_t))v1268)(v645, v1300);
    ((void (*)(char *, uint64_t))v1273)(v648, v530);
    uint64_t v541 = v1288;
    ((void (*)(char *, uint64_t))v1276)(v649, v1288);
    ((void (*)(char *, uint64_t))v1278)(v650, v1284);
    ((void (*)(char *, uint64_t))v1272)(v651, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1151, v1305);
    ((void (*)(char *, uint64_t))v1279)(v876, v1301);
    v1266(v877, v1289);
    ((void (*)(char *, uint64_t))v1262)(v878, v534);
    ((void (*)(char *, uint64_t))v536)(v879, v535);
    v1275(v880, v1302);
    ((void (*)(char *, uint64_t))v1265)(v881, v1292);
    v1271(v882, v537);
    uint64_t v542 = v1283;
    ((void (*)(char *, uint64_t))v1264)(v883, v1283);
    v1270(v884, v538);
    v1280(v885, v539);
    uint64_t v543 = v1294;
    ((void (*)(char *, uint64_t))v1261)(v886, v1294);
    v1282(v887, v1295);
    uint64_t v544 = v1296;
    ((void (*)(char *, uint64_t))v1269)(v875, v1296);
    v1277(v654, v1297);
    ((void (*)(char *, uint64_t))v1274)(v655, v1298);
    ((void (*)(char *, uint64_t))v1263)(v656, v540);
    ((void (*)(char *, uint64_t))v1268)(v657, v1300);
    ((void (*)(char *, uint64_t))v1273)(v658, v530);
    ((void (*)(char *, uint64_t))v1276)(v659, v541);
    uint64_t v545 = v1284;
    ((void (*)(char *, uint64_t))v1278)(v660, v1284);
    ((void (*)(char *, uint64_t))v1272)(v661, v1287);
    uint64_t v546 = v1305;
    ((void (*)(char *, uint64_t))v1281)(v1152, v1305);
    ((void (*)(char *, uint64_t))v1279)(v889, v1301);
    v1266(v890, v1289);
    uint64_t v547 = v1290;
    ((void (*)(char *, uint64_t))v1267)(v891, v1290);
    ((void (*)(char *, uint64_t))v1255)(v892, v1291);
    v1275(v893, v1302);
    uint64_t v548 = v1292;
    ((void (*)(char *, uint64_t))v1265)(v894, v1292);
    v1271(v895, v1303);
    ((void (*)(char *, uint64_t))v1264)(v896, v542);
    v1270(v897, v1304);
    v1280(v898, v1293);
    uint64_t v549 = v543;
    uint64_t v550 = (void (*)(char *, uint64_t))v1261;
    ((void (*)(char *, uint64_t))v1261)(v899, v549);
    v1282(v900, v1295);
    ((void (*)(char *, uint64_t))v1269)(v888, v544);
    v1277(v666, v1297);
    uint64_t v551 = v1298;
    ((void (*)(char *, uint64_t))v1274)(v667, v1298);
    ((void (*)(char *, uint64_t))v1263)(v668, v1299);
    uint64_t v552 = v1300;
    ((void (*)(char *, uint64_t))v1268)(v669, v1300);
    ((void (*)(char *, uint64_t))v1273)(v670, v1286);
    uint64_t v553 = v1276;
    ((void (*)(char *, uint64_t))v1276)(v671, v1288);
    ((void (*)(char *, uint64_t))v1278)(v672, v545);
    ((void (*)(char *, uint64_t))v1272)(v673, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1153, v546);
    ((void (*)(char *, uint64_t))v1279)(v901, v1301);
    v1266(v902, v1289);
    v554 = (void (*)(char *, uint64_t))v1267;
    ((void (*)(char *, uint64_t))v1267)(v903, v547);
    ((void (*)(char *, uint64_t))v1262)(v904, v1285);
    v1275(v905, v1302);
    ((void (*)(char *, uint64_t))v1265)(v906, v548);
    v1271(v907, v1303);
    ((void (*)(char *, uint64_t))v1264)(v908, v1283);
    v1270(v909, v1304);
    v1280(v910, v1293);
    v550(v911, v1294);
    uint64_t v555 = v1295;
    v1282(v912, v1295);
    ((void (*)(char *, uint64_t))v1269)(v676, v1296);
    v1277(v677, v1297);
    ((void (*)(char *, uint64_t))v1274)(v678, v551);
    ((void (*)(char *, uint64_t))v1263)(v679, v1299);
    ((void (*)(char *, uint64_t))v1268)(v680, v552);
    ((void (*)(char *, uint64_t))v1273)(v681, v1286);
    ((void (*)(char *, uint64_t))v553)(v683, v1288);
    ((void (*)(char *, uint64_t))v1278)(v685, v1284);
    uint64_t v556 = v1287;
    v557 = v1272;
    ((void (*)(char *, uint64_t))v1272)(v686, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1154, v1305);
    ((void (*)(char *, uint64_t))v1279)(v914, v1301);
    v1266(v915, v1289);
    v554(v916, v1290);
    uint64_t v558 = v1262;
    ((void (*)(char *, uint64_t))v1262)(v917, v1285);
    uint64_t v559 = v1291;
    ((void (*)(char *, uint64_t))v1255)(v918, v1291);
    ((void (*)(char *, uint64_t))v1265)(v919, v1292);
    v1271(v920, v1303);
    ((void (*)(char *, uint64_t))v1264)(v921, v1283);
    v1270(v922, v1304);
    v1280(v923, v1293);
    uint64_t v560 = v1294;
    ((void (*)(char *, uint64_t))v1261)(v924, v1294);
    v1282(v925, v555);
    uint64_t v561 = v1296;
    ((void (*)(char *, uint64_t))v1269)(v913, v1296);
    v1277(v689, v1297);
    ((void (*)(char *, uint64_t))v1274)(v690, v1298);
    uint64_t v562 = v1299;
    ((void (*)(char *, uint64_t))v1263)(v691, v1299);
    ((void (*)(char *, uint64_t))v1268)(v692, v1300);
    ((void (*)(char *, uint64_t))v1273)(v693, v1286);
    ((void (*)(char *, uint64_t))v1276)(v694, v1288);
    ((void (*)(char *, uint64_t))v1278)(v695, v1284);
    ((void (*)(char *, uint64_t))v557)(v696, v556);
    ((void (*)(char *, uint64_t))v1281)(v1155, v1305);
    ((void (*)(char *, uint64_t))v1279)(v927, v1301);
    v1266(v928, v1289);
    ((void (*)(char *, uint64_t))v1267)(v929, v1290);
    ((void (*)(char *, uint64_t))v558)(v930, v1285);
    uint64_t v563 = v559;
    uint64_t v564 = v1255;
    ((void (*)(char *, uint64_t))v1255)(v931, v563);
    uint64_t v565 = v1275;
    v1275(v932, v1302);
    v1271(v933, v1303);
    uint64_t v566 = v1283;
    uint64_t v567 = v1264;
    ((void (*)(char *, uint64_t))v1264)(v934, v1283);
    v1270(v935, v1304);
    v1280(v936, v1293);
    ((void (*)(char *, uint64_t))v1261)(v937, v560);
    v1282(v938, v1295);
    ((void (*)(char *, uint64_t))v1269)(v926, v561);
    v1277(v699, v1297);
    ((void (*)(char *, uint64_t))v1274)(v702, v1298);
    uint64_t v568 = v562;
    v569 = v1263;
    ((void (*)(char *, uint64_t))v1263)(v703, v568);
    ((void (*)(char *, uint64_t))v1268)(v704, v1300);
    ((void (*)(char *, uint64_t))v1273)(v705, v1286);
    ((void (*)(char *, uint64_t))v1276)(v706, v1288);
    ((void (*)(char *, uint64_t))v1278)(v707, v1284);
    ((void (*)(char *, uint64_t))v1272)(v708, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1156, v1305);
    ((void (*)(char *, uint64_t))v1279)(v939, v1301);
    v1266(v940, v1289);
    ((void (*)(char *, uint64_t))v1267)(v941, v1290);
    ((void (*)(char *, uint64_t))v1262)(v942, v1285);
    ((void (*)(char *, uint64_t))v564)(v943, v1291);
    v565(v944, v1302);
    uint64_t v570 = v1292;
    ((void (*)(char *, uint64_t))v1265)(v945, v1292);
    ((void (*)(char *, uint64_t))v567)(v946, v566);
    v1270(v947, v1304);
    uint64_t v571 = v1293;
    v1280(v948, v1293);
    ((void (*)(char *, uint64_t))v1261)(v949, v1294);
    uint64_t v572 = v1295;
    v1282(v950, v1295);
    ((void (*)(char *, uint64_t))v1269)(v711, v1296);
    v1277(v712, v1297);
    ((void (*)(char *, uint64_t))v1274)(v713, v1298);
    ((void (*)(char *, uint64_t))v569)(v714, v1299);
    ((void (*)(char *, uint64_t))v1268)(v715, v1300);
    ((void (*)(char *, uint64_t))v1273)(v716, v1286);
    ((void (*)(char *, uint64_t))v1276)(v717, v1288);
    ((void (*)(char *, uint64_t))v1278)(v718, v1284);
    ((void (*)(char *, uint64_t))v1272)(v721, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1157, v1305);
    uint64_t v573 = v1301;
    ((void (*)(char *, uint64_t))v1279)(v951, v1301);
    uint64_t v574 = v1289;
    uint64_t v575 = v1266;
    v1266(v952, v1289);
    ((void (*)(char *, uint64_t))v1267)(v953, v1290);
    ((void (*)(char *, uint64_t))v1262)(v954, v1285);
    ((void (*)(char *, uint64_t))v1255)(v955, v1291);
    v1275(v956, v1302);
    uint64_t v576 = v1265;
    ((void (*)(char *, uint64_t))v1265)(v957, v570);
    uint64_t v577 = v1271;
    v1271(v958, v1303);
    v1270(v959, v1304);
    v1280(v960, v571);
    ((void (*)(char *, uint64_t))v1261)(v961, v1294);
    v1282(v962, v572);
    ((void (*)(char *, uint64_t))v1269)(v724, v1296);
    v1277(v725, v1297);
    ((void (*)(char *, uint64_t))v1274)(v726, v1298);
    ((void (*)(char *, uint64_t))v1263)(v727, v1299);
    ((void (*)(char *, uint64_t))v1268)(v728, v1300);
    ((void (*)(char *, uint64_t))v1273)(v729, v1286);
    ((void (*)(char *, uint64_t))v1276)(v730, v1288);
    uint64_t v578 = v1284;
    ((void (*)(char *, uint64_t))v1278)(v731, v1284);
    ((void (*)(char *, uint64_t))v1272)(v732, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1158, v1305);
    ((void (*)(char *, uint64_t))v1279)(v963, v573);
    v575(v964, v574);
    ((void (*)(char *, uint64_t))v1267)(v965, v1290);
    ((void (*)(char *, uint64_t))v1262)(v966, v1285);
    ((void (*)(char *, uint64_t))v1255)(v967, v1291);
    uint64_t v579 = v1302;
    v1275(v968, v1302);
    ((void (*)(char *, uint64_t))v576)(v969, v1292);
    v577(v970, v1303);
    uint64_t v580 = v1283;
    ((void (*)(char *, uint64_t))v1264)(v971, v1283);
    v1280(v972, v1293);
    uint64_t v581 = (void (*)(char *, uint64_t))v1261;
    ((void (*)(char *, uint64_t))v1261)(v973, v1294);
    v1282(v974, v1295);
    ((void (*)(char *, uint64_t))v1269)(v735, v1296);
    v1277(v736, v1297);
    ((void (*)(char *, uint64_t))v1274)(v737, v1298);
    ((void (*)(char *, uint64_t))v1263)(v738, v1299);
    ((void (*)(char *, uint64_t))v1268)(v741, v1300);
    ((void (*)(char *, uint64_t))v1273)(v742, v1286);
    ((void (*)(char *, uint64_t))v1276)(v743, v1288);
    ((void (*)(char *, uint64_t))v1278)(v744, v578);
    ((void (*)(char *, uint64_t))v1272)(v745, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1159, v1305);
    ((void (*)(char *, uint64_t))v1279)(v975, v1301);
    v1266(v976, v1289);
    ((void (*)(char *, uint64_t))v1267)(v977, v1290);
    ((void (*)(char *, uint64_t))v1262)(v978, v1285);
    ((void (*)(char *, uint64_t))v1255)(v979, v1291);
    v1275(v980, v579);
    ((void (*)(char *, uint64_t))v1265)(v981, v1292);
    v1271(v982, v1303);
    ((void (*)(char *, uint64_t))v1264)(v983, v580);
    uint64_t v582 = v1304;
    uint64_t v583 = v1270;
    v1270(v984, v1304);
    v581(v985, v1294);
    v1282(v986, v1295);
    uint64_t v584 = v1269;
    ((void (*)(char *, uint64_t))v1269)(v748, v1296);
    v1277(v749, v1297);
    ((void (*)(char *, uint64_t))v1274)(v750, v1298);
    ((void (*)(char *, uint64_t))v1263)(v751, v1299);
    uint64_t v585 = v1268;
    ((void (*)(char *, uint64_t))v1268)(v752, v1300);
    ((void (*)(char *, uint64_t))v1273)(v753, v1286);
    ((void (*)(char *, uint64_t))v1276)(v754, v1288);
    ((void (*)(char *, uint64_t))v1278)(v755, v1284);
    ((void (*)(char *, uint64_t))v1272)(v756, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1160, v1305);
    ((void (*)(char *, uint64_t))v1279)(v987, v1301);
    v1266(v988, v1289);
    ((void (*)(char *, uint64_t))v1267)(v989, v1290);
    ((void (*)(char *, uint64_t))v1262)(v990, v1285);
    ((void (*)(char *, uint64_t))v1255)(v991, v1291);
    v1275(v992, v1302);
    ((void (*)(char *, uint64_t))v1265)(v993, v1292);
    v1271(v994, v1303);
    ((void (*)(char *, uint64_t))v1264)(v995, v1283);
    v583(v996, v582);
    uint64_t v586 = v1280;
    v1280(v997, v1293);
    v1282(v998, v1295);
    ((void (*)(char *, uint64_t))v584)(v761, v1296);
    v1277(v762, v1297);
    uint64_t v587 = v1274;
    ((void (*)(char *, uint64_t))v1274)(v763, v1298);
    ((void (*)(char *, uint64_t))v1263)(v764, v1299);
    ((void (*)(char *, uint64_t))v585)(v765, v1300);
    uint64_t v588 = v1273;
    ((void (*)(char *, uint64_t))v1273)(v766, v1286);
    ((void (*)(char *, uint64_t))v1276)(v767, v1288);
    ((void (*)(char *, uint64_t))v1278)(v768, v1284);
    ((void (*)(char *, uint64_t))v1272)(v769, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1161, v1305);
    uint64_t v589 = v1279;
    ((void (*)(char *, uint64_t))v1279)(v999, v1301);
    v1266(v1000, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1001, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1002, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1003, v1291);
    v1275(v1004, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1005, v1292);
    v1271(v1006, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1007, v1283);
    v1270(v1008, v1304);
    v586(v1009, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1010, v1294);
    ((void (*)(char *, uint64_t))v1269)(v772, v1296);
    uint64_t v590 = v1297;
    uint64_t v591 = v1277;
    v1277(v773, v1297);
    ((void (*)(char *, uint64_t))v587)(v774, v1298);
    ((void (*)(char *, uint64_t))v1263)(v775, v1299);
    uint64_t v592 = v1300;
    ((void (*)(char *, uint64_t))v1268)(v776, v1300);
    ((void (*)(char *, uint64_t))v588)(v777, v1286);
    ((void (*)(char *, uint64_t))v1276)(v780, v1288);
    ((void (*)(char *, uint64_t))v1278)(v781, v1284);
    ((void (*)(char *, uint64_t))v1272)(v782, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1162, v1305);
    ((void (*)(char *, uint64_t))v589)(v1011, v1301);
    v1266(v1012, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1013, v1290);
    uint64_t v593 = v1285;
    ((void (*)(char *, uint64_t))v1262)(v1014, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1015, v1291);
    v1275(v1016, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1017, v1292);
    uint64_t v594 = v1303;
    v1271(v1018, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1019, v1283);
    v1270(v1020, v1304);
    v1280(v1021, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1022, v1294);
    v595 = v1282;
    v1282(v785, v1295);
    v591(v786, v590);
    ((void (*)(char *, uint64_t))v1274)(v787, v1298);
    ((void (*)(char *, uint64_t))v1263)(v788, v1299);
    ((void (*)(char *, uint64_t))v1268)(v789, v592);
    uint64_t v596 = v1286;
    ((void (*)(char *, uint64_t))v1273)(v790, v1286);
    ((void (*)(char *, uint64_t))v1276)(v791, v1288);
    v597 = v1278;
    ((void (*)(char *, uint64_t))v1278)(v792, v1284);
    ((void (*)(char *, uint64_t))v1272)(v793, v1287);
    uint64_t v598 = v1281;
    ((void (*)(char *, uint64_t))v1281)(v1163, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1023, v1301);
    v1266(v1024, v1289);
    uint64_t v599 = v1290;
    ((void (*)(char *, uint64_t))v1267)(v1025, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1026, v593);
    ((void (*)(char *, uint64_t))v1255)(v1027, v1291);
    v1275(v1028, v1302);
    uint64_t v600 = v1292;
    ((void (*)(char *, uint64_t))v1265)(v1029, v1292);
    v1271(v1030, v594);
    ((void (*)(char *, uint64_t))v1264)(v1031, v1283);
    v1270(v1032, v1304);
    v1280(v1033, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1149, v1294);
    v595(v795, v1295);
    ((void (*)(char *, uint64_t))v1269)(v796, v1296);
    ((void (*)(char *, uint64_t))v1274)(v797, v1298);
    v601 = v1263;
    ((void (*)(char *, uint64_t))v1263)(v798, v1299);
    ((void (*)(char *, uint64_t))v1268)(v799, v1300);
    ((void (*)(char *, uint64_t))v1273)(v800, v596);
    uint64_t v602 = v1288;
    ((void (*)(char *, uint64_t))v1276)(v801, v1288);
    ((void (*)(char *, uint64_t))v597)(v802, v1284);
    ((void (*)(char *, uint64_t))v1272)(v804, v1287);
    uint64_t v603 = v1305;
    ((void (*)(char *, uint64_t))v598)(v1164, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1034, v1301);
    v1266(v1035, v1289);
    uint64_t v604 = (void (*)(char *, uint64_t))v1267;
    ((void (*)(char *, uint64_t))v1267)(v1036, v599);
    ((void (*)(char *, uint64_t))v1262)(v1037, v1285);
    uint64_t v605 = v1291;
    ((void (*)(char *, uint64_t))v1255)(v1038, v1291);
    v1275(v1039, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1040, v600);
    v1271(v1041, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1042, v1283);
    v1270(v1043, v1304);
    v1280(v1044, v1293);
    uint64_t v606 = v1294;
    ((void (*)(char *, uint64_t))v1261)(v1148, v1294);
    v1282(v805, v1295);
    ((void (*)(char *, uint64_t))v1269)(v806, v1296);
    v1277(v807, v1297);
    ((void (*)(char *, uint64_t))v601)(v808, v1299);
    ((void (*)(char *, uint64_t))v1268)(v809, v1300);
    ((void (*)(char *, uint64_t))v1273)(v810, v1286);
    ((void (*)(char *, uint64_t))v1276)(v811, v602);
    ((void (*)(char *, uint64_t))v1278)(v812, v1284);
    uint64_t v607 = v1287;
    ((void (*)(char *, uint64_t))v1272)(v813, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1165, v603);
    ((void (*)(char *, uint64_t))v1279)(v1045, v1301);
    v1266(v1046, v1289);
    v604(v1047, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1048, v1285);
    uint64_t v608 = v605;
    v609 = v1255;
    ((void (*)(char *, uint64_t))v1255)(v1049, v608);
    v1275(v1050, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1051, v1292);
    v1271(v1052, v1303);
    v610 = v1264;
    ((void (*)(char *, uint64_t))v1264)(v1053, v1283);
    v1270(v1054, v1304);
    v1280(v1055, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1147, v606);
    v1282(v814, v1295);
    uint64_t v611 = v1296;
    ((void (*)(char *, uint64_t))v1269)(v815, v1296);
    v1277(v816, v1297);
    uint64_t v612 = v1298;
    ((void (*)(char *, uint64_t))v1274)(v817, v1298);
    ((void (*)(char *, uint64_t))v1268)(v818, v1300);
    ((void (*)(char *, uint64_t))v1273)(v819, v1286);
    v613 = v1276;
    ((void (*)(char *, uint64_t))v1276)(v820, v1288);
    ((void (*)(char *, uint64_t))v1278)(v821, v1284);
    uint64_t v614 = v1272;
    ((void (*)(char *, uint64_t))v1272)(v822, v607);
    ((void (*)(char *, uint64_t))v1281)(v1166, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1057, v1301);
    v1266(v1058, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1059, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1060, v1285);
    ((void (*)(char *, uint64_t))v609)(v1061, v1291);
    v1275(v1062, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1063, v1292);
    v1271(v1064, v1303);
    ((void (*)(char *, uint64_t))v610)(v1065, v1283);
    v1270(v1066, v1304);
    v1280(v1067, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1146, v1294);
    v1282(v1056, v1295);
    ((void (*)(char *, uint64_t))v1269)(v823, v611);
    v1277(v824, v1297);
    ((void (*)(char *, uint64_t))v1274)(v825, v612);
    uint64_t v615 = v1299;
    ((void (*)(char *, uint64_t))v1263)(v826, v1299);
    ((void (*)(char *, uint64_t))v1273)(v827, v1286);
    ((void (*)(char *, uint64_t))v613)(v828, v1288);
    uint64_t v616 = v1284;
    ((void (*)(char *, uint64_t))v1278)(v829, v1284);
    ((void (*)(char *, uint64_t))v614)(v830, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1068, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1071, v1301);
    uint64_t v617 = v1289;
    v1266(v1072, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1073, v1290);
    v618 = v1262;
    ((void (*)(char *, uint64_t))v1262)(v1074, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1075, v1291);
    v1275(v1076, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1077, v1292);
    v1271(v1078, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1079, v1283);
    v1270(v1080, v1304);
    uint64_t v619 = v1293;
    v1280(v1081, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1145, v1294);
    uint64_t v620 = v1295;
    v1282(v1069, v1295);
    ((void (*)(char *, uint64_t))v1269)(v1070, v1296);
    v1277(v831, v1297);
    ((void (*)(char *, uint64_t))v1274)(v832, v1298);
    ((void (*)(char *, uint64_t))v1263)(v833, v615);
    ((void (*)(char *, uint64_t))v1268)(v834, v1300);
    ((void (*)(char *, uint64_t))v1276)(v835, v1288);
    ((void (*)(char *, uint64_t))v1278)(v836, v616);
    ((void (*)(char *, uint64_t))v1272)(v837, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1082, v1305);
    uint64_t v621 = v1301;
    ((void (*)(char *, uint64_t))v1279)(v1085, v1301);
    uint64_t v622 = v617;
    v623 = v1266;
    v1266(v1086, v622);
    ((void (*)(char *, uint64_t))v1267)(v1087, v1290);
    ((void (*)(char *, uint64_t))v618)(v1088, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1089, v1291);
    v1275(v1090, v1302);
    v624 = v1265;
    ((void (*)(char *, uint64_t))v1265)(v1091, v1292);
    v1271(v1092, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1093, v1283);
    v1270(v1094, v1304);
    v1280(v1095, v619);
    v625 = (void (*)(char *, uint64_t))v1261;
    ((void (*)(char *, uint64_t))v1261)(v1144, v1294);
    v1282(v1083, v620);
    v626 = v1269;
    ((void (*)(char *, uint64_t))v1269)(v1084, v1296);
    v1277(v838, v1297);
    ((void (*)(char *, uint64_t))v1274)(v839, v1298);
    ((void (*)(char *, uint64_t))v1263)(v840, v1299);
    ((void (*)(char *, uint64_t))v1268)(v841, v1300);
    ((void (*)(char *, uint64_t))v1273)(v842, v1286);
    ((void (*)(char *, uint64_t))v1278)(v843, v1284);
    ((void (*)(char *, uint64_t))v1272)(v844, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1096, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1098, v621);
    v623(v1099, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1100, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1101, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1102, v1291);
    v627 = v1275;
    v1275(v1103, v1302);
    ((void (*)(char *, uint64_t))v624)(v1104, v1292);
    v628 = v1271;
    v1271(v1105, v1303);
    uint64_t v629 = v1283;
    ((void (*)(char *, uint64_t))v1264)(v1106, v1283);
    v1270(v1107, v1304);
    v1280(v1108, v1293);
    v625(v1109, v1294);
    v1282(v1143, v1295);
    ((void (*)(char *, uint64_t))v626)(v1097, v1296);
    uint64_t v630 = v1297;
    uint64_t v631 = v1277;
    v1277(v845, v1297);
    ((void (*)(char *, uint64_t))v1274)(v846, v1298);
    ((void (*)(char *, uint64_t))v1263)(v847, v1299);
    uint64_t v632 = v1268;
    ((void (*)(char *, uint64_t))v1268)(v848, v1300);
    ((void (*)(char *, uint64_t))v1273)(v849, v1286);
    ((void (*)(char *, uint64_t))v1276)(v850, v1288);
    ((void (*)(char *, uint64_t))v1272)(v851, v1287);
    ((void (*)(char *, uint64_t))v1281)(v1167, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1111, v1301);
    v1266(v1112, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1113, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1114, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1115, v1291);
    v627(v1116, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1117, v1292);
    v628(v1118, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1119, v629);
    v633 = v1270;
    v1270(v1120, v1304);
    v1280(v1121, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1122, v1294);
    v1282(v1142, v1295);
    ((void (*)(char *, uint64_t))v1269)(v1110, v1296);
    v631(v852, v630);
    uint64_t v634 = v1274;
    ((void (*)(char *, uint64_t))v1274)(v853, v1298);
    ((void (*)(char *, uint64_t))v1263)(v854, v1299);
    uint64_t v635 = v1300;
    ((void (*)(char *, uint64_t))v632)(v855, v1300);
    uint64_t v636 = v1286;
    uint64_t v637 = v1273;
    ((void (*)(char *, uint64_t))v1273)(v856, v1286);
    ((void (*)(char *, uint64_t))v1276)(v857, v1288);
    uint64_t v638 = v1278;
    ((void (*)(char *, uint64_t))v1278)(v858, v1284);
    ((void (*)(char *, uint64_t))v1281)(v1168, v1305);
    ((void (*)(char *, uint64_t))v1279)(v1127, v1301);
    v1266(v1128, v1289);
    ((void (*)(char *, uint64_t))v1267)(v1130, v1290);
    ((void (*)(char *, uint64_t))v1262)(v1131, v1285);
    ((void (*)(char *, uint64_t))v1255)(v1132, v1291);
    v1275(v1133, v1302);
    ((void (*)(char *, uint64_t))v1265)(v1134, v1292);
    v1271(v1135, v1303);
    ((void (*)(char *, uint64_t))v1264)(v1136, v1283);
    v633(v1137, v1304);
    v1280(v1138, v1293);
    ((void (*)(char *, uint64_t))v1261)(v1139, v1294);
    v1282(v1140, v1295);
    ((void (*)(char *, uint64_t))v1269)(v1141, v1296);
    v1277(v1123, v1297);
    ((void (*)(char *, uint64_t))v634)(v1124, v1298);
    ((void (*)(char *, uint64_t))v1263)(v1125, v1299);
    ((void (*)(char *, uint64_t))v1268)(v1126, v635);
    ((void (*)(char *, uint64_t))v637)(v1129, v636);
    ((void (*)(char *, uint64_t))v1276)(v859, v1288);
    ((void (*)(char *, uint64_t))v638)(v860, v1284);
    return ((uint64_t (*)(char *, uint64_t))v1272)(v861, v1287);
  }
  return result;
}

uint64_t sub_2587C06B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587B0FB0(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], (char *)(a4 + TupleTypeMetadata[40]), (char *)(a4 + TupleTypeMetadata[44]), (char *)(a4 + TupleTypeMetadata[48]), (char *)(a4 + TupleTypeMetadata[52]), (char *)(a4 + TupleTypeMetadata[56]), (char *)(a4 + TupleTypeMetadata[60]), (char *)(a4 + TupleTypeMetadata[64]), (char *)(a4 + TupleTypeMetadata[68]), (char *)(a4 + TupleTypeMetadata[72]), (char *)(a4 + TupleTypeMetadata[76]), (char *)(a4 + TupleTypeMetadata[80]),
           (char *)(a4 + TupleTypeMetadata[84]),
           (char *)(a4 + TupleTypeMetadata[88]),
           (char *)(a4 + TupleTypeMetadata[92]),
           (char *)(a4 + TupleTypeMetadata[96]),
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_23.base.modify())()
{
  return nullsub_1;
}

#error "2587C0874: too big function (funcsize=0)"

uint64_t sub_2587D16AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587C0874(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_24.base.modify())()
{
  return nullsub_1;
}

#error "2587D1878: too big function (funcsize=0)"

uint64_t sub_2587E3F84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  long long v10 = *(_OWORD *)(a3 + 24);
  long long v11 = *(_OWORD *)(a3 + 40);
  long long v12 = *(_OWORD *)(a3 + 56);
  long long v13 = *(_OWORD *)(a3 + 72);
  long long v14 = *(_OWORD *)(a3 + 88);
  long long v15 = *(_OWORD *)(a3 + 104);
  long long v16 = *(_OWORD *)(a3 + 120);
  long long v17 = *(_OWORD *)(a3 + 136);
  long long v18 = *(_OWORD *)(a3 + 152);
  long long v19 = *(_OWORD *)(a3 + 168);
  long long v20 = *(_OWORD *)(a3 + 184);
  long long v21 = *(_OWORD *)(a3 + 200);
  uint64_t v22 = *(void *)(a3 + 216);
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587D1878(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a1,
           a2,
           a3,
           v10,
           *((void *)&v10 + 1),
           v11,
           *((void *)&v11 + 1),
           v12,
           *((void *)&v12 + 1),
           v13,
           *((void *)&v13 + 1),
           v14,
           *((void *)&v14 + 1),
           v15,
           *((void *)&v15 + 1),
           v16,
           *((void *)&v16 + 1),
           v17,
           *((void *)&v17 + 1),
           v18,
           *((void *)&v18 + 1),
           v19,
           *((void *)&v19 + 1),
           v20,
           *((void *)&v20 + 1),
           v21,
           *((void *)&v21 + 1),
           v22);
}

uint64_t (*Flatten_25.base.modify())()
{
  return nullsub_1;
}

#error "2587E4160: too big function (funcsize=0)"

uint64_t sub_2587F82B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587E4160(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_26.base.modify())()
{
  return nullsub_1;
}

#error "2587F84A0: too big function (funcsize=0)"

uint64_t sub_25880E100@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_2587F84A0(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_27.base.modify())()
{
  return nullsub_1;
}

#error "25880E300: too big function (funcsize=0)"

uint64_t sub_258825B9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  return sub_25880E300(a4, a4 + TupleTypeMetadata[12], a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a1,
           a2,
           a3);
}

uint64_t (*Flatten_28.base.modify())()
{
  return nullsub_1;
}

#error "258825DAC: too big function (funcsize=0)"

uint64_t sub_25883F3C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v8 = a4 + TupleTypeMetadata[12];
  return sub_258825DAC(a4, v8, a4 + TupleTypeMetadata[16], a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a4 + TupleTypeMetadata[120],
           a1,
           a2,
           a3,
           v8);
}

uint64_t (*Flatten_29.base.modify())()
{
  return nullsub_1;
}

#error "25883F5EC: too big function (funcsize=0)"

uint64_t sub_25885AA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v9 = a4 + TupleTypeMetadata[12];
  uint64_t v8 = a4 + TupleTypeMetadata[16];
  return sub_25883F5EC(a4, v9, v8, a4 + TupleTypeMetadata[20], a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a4 + TupleTypeMetadata[120],
           a4 + TupleTypeMetadata[124],
           a1,
           a2,
           a3,
           v8,
           v9);
}

uint64_t (*Flatten_30.base.modify())()
{
  return nullsub_1;
}

#error "25885AC6C: too big function (funcsize=0)"

uint64_t sub_25887800C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v10 = a4 + TupleTypeMetadata[12];
  uint64_t v9 = a4 + TupleTypeMetadata[16];
  uint64_t v8 = a4 + TupleTypeMetadata[20];
  return sub_25885AC6C(a4, v10, v9, v8, a4 + TupleTypeMetadata[24], a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a4 + TupleTypeMetadata[120],
           a4 + TupleTypeMetadata[124],
           a4 + TupleTypeMetadata[128],
           a1,
           a2,
           a3,
           v8,
           v9,
           v10);
}

uint64_t (*Flatten_31.base.modify())()
{
  return nullsub_1;
}

#error "25887825C: too big function (funcsize=0)"

uint64_t sub_258897658@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v11 = a4 + TupleTypeMetadata[12];
  uint64_t v10 = a4 + TupleTypeMetadata[16];
  uint64_t v9 = a4 + TupleTypeMetadata[20];
  uint64_t v8 = a4 + TupleTypeMetadata[24];
  return sub_25887825C(a4, v11, v10, v9, v8, a4 + TupleTypeMetadata[28], a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a4 + TupleTypeMetadata[120],
           a4 + TupleTypeMetadata[124],
           a4 + TupleTypeMetadata[128],
           a4 + TupleTypeMetadata[132],
           a1,
           a2,
           a3,
           v8,
           v9,
           v10,
           v11);
}

uint64_t sub_258897890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t _s15ParsingInternal9Flatten_2V4basexvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t _s15ParsingInternal9Flatten_2V4basexvs_0(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*Flatten_32.base.modify())()
{
  return nullsub_1;
}

#error "258897A04: too big function (funcsize=0)"

uint64_t sub_2588B9078@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  TupleTypeMetadata = (int *)swift_getTupleTypeMetadata();
  uint64_t v12 = a4 + TupleTypeMetadata[12];
  uint64_t v11 = a4 + TupleTypeMetadata[16];
  uint64_t v10 = a4 + TupleTypeMetadata[20];
  uint64_t v9 = a4 + TupleTypeMetadata[24];
  uint64_t v8 = a4 + TupleTypeMetadata[28];
  return sub_258897A04(a4, v12, v11, v10, v9, v8, a4 + TupleTypeMetadata[32], a4 + TupleTypeMetadata[36], a4 + TupleTypeMetadata[40], a4 + TupleTypeMetadata[44], a4 + TupleTypeMetadata[48], a4 + TupleTypeMetadata[52], a4 + TupleTypeMetadata[56], a4 + TupleTypeMetadata[60], a4 + TupleTypeMetadata[64], a4 + TupleTypeMetadata[68], a4 + TupleTypeMetadata[72], a4 + TupleTypeMetadata[76], a4 + TupleTypeMetadata[80],
           a4 + TupleTypeMetadata[84],
           a4 + TupleTypeMetadata[88],
           a4 + TupleTypeMetadata[92],
           a4 + TupleTypeMetadata[96],
           a4 + TupleTypeMetadata[100],
           a4 + TupleTypeMetadata[104],
           a4 + TupleTypeMetadata[108],
           a4 + TupleTypeMetadata[112],
           a4 + TupleTypeMetadata[116],
           a4 + TupleTypeMetadata[120],
           a4 + TupleTypeMetadata[124],
           a4 + TupleTypeMetadata[128],
           a4 + TupleTypeMetadata[132],
           a4 + TupleTypeMetadata[136],
           a1,
           a2,
           a3,
           v8,
           v9,
           v10,
           v11,
           v12);
}

uint64_t sub_2588B92C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_2588B92D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_2()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9398(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 56);
}

uint64_t sub_2588B93A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_3()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 64);
}

uint64_t sub_2588B9450()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_4()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B94F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 72);
}

uint64_t sub_2588B9500()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_5()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B95A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 80);
}

uint64_t sub_2588B95B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_6()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9658(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 88);
}

uint64_t sub_2588B9660()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_7()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9708(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 96);
}

uint64_t sub_2588B9710()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_8()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B97B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 104);
}

uint64_t sub_2588B97C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_9()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9868(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 112);
}

uint64_t sub_2588B9870()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_10()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9918(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 120);
}

uint64_t sub_2588B9920()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_11()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B99C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 128);
}

uint64_t sub_2588B99D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_12()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9A78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 136);
}

uint64_t sub_2588B9A80()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_13()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9B28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 144);
}

uint64_t sub_2588B9B30()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_14()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9BD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 152);
}

uint64_t sub_2588B9BE0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_15()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9C88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 160);
}

uint64_t sub_2588B9C90()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_16()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 168);
}

uint64_t sub_2588B9D40()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_17()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9DE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 176);
}

uint64_t sub_2588B9DF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_18()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 184);
}

uint64_t sub_2588B9EA0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_19()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9F48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 192);
}

uint64_t sub_2588B9F50()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_20()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588B9FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 200);
}

uint64_t sub_2588BA000()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_21()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA0A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 208);
}

uint64_t sub_2588BA0B0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_22()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA158(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 216);
}

uint64_t sub_2588BA160()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_23()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA208(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 224);
}

uint64_t sub_2588BA210()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_24()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA2B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 232);
}

uint64_t sub_2588BA2C0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_25()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA368(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 240);
}

uint64_t sub_2588BA370()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_26()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 248);
}

uint64_t sub_2588BA420()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_27()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA4C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 256);
}

uint64_t sub_2588BA4D0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_28()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA578(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 264);
}

uint64_t sub_2588BA580()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_29()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 272);
}

uint64_t sub_2588BA630()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_30()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA6D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 280);
}

uint64_t sub_2588BA6E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t type metadata accessor for Flatten_31()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588BA788(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 288);
}

uint64_t sub_2588BA790()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588BA820(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588BA97C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588BAB94);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        long long v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for Flatten_32()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser.unwrappingMap<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a3);
  int v13 = (void *)(a5 + *(int *)(type metadata accessor for UnwrappingMapParser() + 44));
  *int v13 = a1;
  v13[1] = a2;
  return swift_retain();
}

uint64_t UnwrappingMapParser.init(base:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for UnwrappingMapParser();
  BOOL v9 = (void *)(a5 + *(int *)(result + 44));
  *BOOL v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for UnwrappingMapParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContextfulParser.unwrapped<A>()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v5, a1);
  int v13 = (uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t@<X8>))swift_allocObject();
  *((void *)v13 + 2) = a1;
  *((void *)v13 + 3) = a2;
  *((void *)v13 + 4) = a3;
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a1);
  uint64_t result = type metadata accessor for UnwrappingMapParser();
  uint64_t v15 = (uint64_t (**)@<X0>(uint64_t@<X0>, uint64_t@<X8>))(a5 + *(int *)(result + 44));
  *uint64_t v15 = sub_2588BAEF8;
  v15[1] = v13;
  return result;
}

uint64_t sub_2588BAEE8()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_2588BAEF8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_2588F0358();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t UnwrappingMapParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UnwrappingMapParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UnwrappingMapParser.base.modify())()
{
  return nullsub_1;
}

uint64_t UnwrappingMapParser.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

uint64_t UnwrappingMapParser.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*UnwrappingMapParser.transform.modify())()
{
  return nullsub_1;
}

double UnwrappingMapParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588BB468);
}

uint64_t sub_2588BB0F4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v37 = a7;
  uint64_t v40 = a5;
  uint64_t v13 = sub_2588F0358();
  uint64_t v36 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14, v15, v16);
  uint64_t v39 = (char *)&v36 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v19, v20, v21);
  uint64_t v23 = (char *)&v36 - v22;
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a3, a4, a6);
  if (!v7)
  {
    uint64_t v25 = v40;
    uint64_t v26 = type metadata accessor for UnwrappingMapParser();
    uint64_t v27 = v39;
    (*(void (**)(char *))(a2 + *(int *)(v26 + 44)))(v23);
    uint64_t v28 = AssociatedTypeWitness;
    uint64_t v29 = v38;
    uint64_t v30 = *(void *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v27, 1, v25) == 1)
    {
      (*(void (**)(char *, uint64_t))(v36 + 8))(v27, v13);
      uint64_t v31 = *a1;
      sub_2588BBC70();
      uint64_t v32 = swift_allocError();
      void *v33 = 2;
      v33[1] = v31;
      v33[2] = 0xD000000000000022;
      v33[3] = 0x80000002589019B0;
      v33[4] = 0;
      swift_willThrow();
      uint64_t v34 = *a1;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v35 = v32;
      v35[1] = v34;
      v35[2] = 0x7272652072657355;
      v35[3] = 0xEA0000000000726FLL;
      v35[4] = v32;
      MEMORY[0x25A2CBEB0](v32);
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v23, v28);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v23, v28);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v30 + 32))(v37, v27, v25);
    }
  }
  return result;
}

uint64_t sub_2588BB468@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588BB0F4(a1, v2[5], v2[6], v2[2], v2[3], v2[4], a2);
}

double sub_2588BB48C()
{
  return UnwrappingMapParser.parse(_:context:)();
}

uint64_t sub_2588BB4A4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588BB540(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    unsigned int v12 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return v4;
}

uint64_t sub_2588BB638(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_release();
}

uint64_t sub_2588BB6A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_2588BB728(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  size_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2588BB7B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588BB830(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2588BB8B4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588BBA00);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588BBA14(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588BBBF4);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          long long v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *long long v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzr__lAA013UnwrappingMapD0Vyxqd__GAaBHPyHCTm()
{
  type metadata accessor for UnwrappingMapParser();
  return swift_getWitnessTable();
}

unint64_t sub_2588BBC70()
{
  unint64_t result = qword_26A0A18E0;
  if (!qword_26A0A18E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A18E0);
  }
  return result;
}

uint64_t Bytes(upToValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t BytesUntilParser.init(value:includeTerminator:)(unsigned __int8 a1, char a2)
{
  if (a2) {
    int v2 = 256;
  }
  else {
    int v2 = 0;
  }
  return v2 & 0xFFFFFF00 | a1;
}

uint64_t Bytes(throughValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  a2[1] = 1;
  return result;
}

void NullTerminatedBytes()(_WORD *a1@<X8>)
{
  *a1 = 256;
}

void NullTerminatedString()(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 256;
  *(void *)(a1 + 8) = sub_2588BBD24;
  *(void *)(a1 + 16) = 0;
}

void *sub_2588BBD24@<X0>(void *result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = result[1];
  uint64_t v5 = v4 - *result;
  if (__OFSUB__(v4, *result))
  {
    __break(1u);
    goto LABEL_12;
  }
  BOOL v6 = __OFSUB__(v5, 1);
  uint64_t v7 = v5 - 1;
  if (v6)
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v8 = v7 + v3;
  if (v8 < v3 || v4 < v8) {
    goto LABEL_13;
  }
  if (__OFSUB__(v8, v3))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (__OFADD__(v3, v8 - v3))
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  if (v8 >= v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_2588F0218();
    uint64_t v12 = v11;
    unint64_t result = (void *)swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v12;
    return result;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t SliceUntilParser.value.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SliceUntilParser.value.modify())()
{
  return nullsub_1;
}

uint64_t (*SliceUntilParser.includeTerminator.modify())()
{
  return nullsub_1;
}

uint64_t SliceUntilParser.parse(_:context:)(uint64_t *a1, uint64_t a2, __int16 a3)
{
  uint64_t result = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = v5 - result;
  if (__OFSUB__(v5, result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v6 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!v6) {
    goto LABEL_18;
  }
  if (result < 0) {
    goto LABEL_22;
  }
  uint64_t v7 = a1[2];
  unint64_t v8 = *(void *)(v7 + 16);
  if (result < v8)
  {
    if (*(unsigned __int8 *)(v7 + result + 32) == a3)
    {
      uint64_t v9 = (unsigned __int16)(a3 & 0x100) >> 8;
LABEL_15:
      uint64_t v14 = v9 + result;
      if (v9 + result >= result && v5 >= v14)
      {
        *a1 = v14;
        return result;
      }
      goto LABEL_24;
    }
    uint64_t v10 = 0;
    unint64_t v11 = ~result + v8;
    uint64_t v12 = result + v7 + 33;
    while (~result + v5 != v10)
    {
      if (v11 == v10)
      {
        __break(1u);
        goto LABEL_20;
      }
      int v13 = *(unsigned __int8 *)(v12 + v10++);
      if (v13 == a3)
      {
        if ((a3 & 0x100) != 0) {
          uint64_t v9 = v10 + 1;
        }
        else {
          uint64_t v9 = v10;
        }
        goto LABEL_15;
      }
    }
LABEL_18:
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    sub_2588BBC70();
    swift_allocError();
    *int v15 = 1;
    v15[1] = v5;
    v15[2] = 0xD000000000000015;
    v15[3] = 0x80000002589019E0;
    v15[4] = 0;
    return swift_willThrow();
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_2588BBFDC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (v3[1]) {
    __int16 v6 = 256;
  }
  else {
    __int16 v6 = 0;
  }
  uint64_t result = SliceUntilParser.parse(_:context:)(a1, a2, v6 | *v3);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v8;
  }
  return result;
}

uint64_t BytesUntilParser.value.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*BytesUntilParser.value.modify())()
{
  return nullsub_1;
}

uint64_t BytesUntilParser.includeTerminator.getter(unsigned int a1)
{
  return (a1 >> 8) & 1;
}

uint64_t BytesUntilParser.includeTerminator.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*BytesUntilParser.includeTerminator.modify())()
{
  return nullsub_1;
}

uint64_t BytesUntilParser.parse(_:context:)(uint64_t *a1, uint64_t a2, __int16 a3)
{
  uint64_t v5 = sub_2588BC13C(a1, a2, a3 & 0x1FF);
  if (!v4)
  {
    uint64_t v3 = v5;
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t sub_2588BC0D0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  if (v3[1]) {
    __int16 v6 = 256;
  }
  else {
    __int16 v6 = 0;
  }
  uint64_t result = sub_2588BC13C(a1, a2, v6 | *v3);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v8;
    a3[2] = v9;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t bytes(upToValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  a2[1] = 0;
  return result;
}

uint64_t bytes(throughValue:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  a2[1] = 1;
  return result;
}

uint64_t sub_2588BC13C(uint64_t *a1, uint64_t a2, __int16 a3)
{
  uint64_t result = *a1;
  uint64_t v5 = a1[1];
  uint64_t v6 = v5 - result;
  if (__OFSUB__(v5, result))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v6 < 0)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (!v6) {
    goto LABEL_18;
  }
  if (result < 0) {
    goto LABEL_22;
  }
  uint64_t v8 = a1[2];
  unint64_t v9 = *(void *)(v8 + 16);
  if (result < v9)
  {
    if (*(unsigned __int8 *)(v8 + result + 32) == a3)
    {
      uint64_t v10 = (unsigned __int16)(a3 & 0x100) >> 8;
LABEL_15:
      uint64_t v14 = v10 + result;
      if (v10 + result >= result && v5 >= v14)
      {
        *a1 = v14;
        return result;
      }
      goto LABEL_24;
    }
    uint64_t v11 = 0;
    unint64_t v12 = ~result + v9;
    while (~result + v5 != v11)
    {
      if (v12 == v11)
      {
        __break(1u);
        goto LABEL_20;
      }
      int v13 = *(unsigned __int8 *)(result + v8 + 33 + v11++);
      if (v13 == a3)
      {
        if ((a3 & 0x100) != 0) {
          uint64_t v10 = v11 + 1;
        }
        else {
          uint64_t v10 = v11;
        }
        goto LABEL_15;
      }
    }
LABEL_18:
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    sub_2588BBC70();
    swift_allocError();
    *int v15 = 1;
    v15[1] = v5;
    v15[2] = 0xD000000000000015;
    v15[3] = 0x80000002589019E0;
    v15[4] = 0;
    return swift_willThrow();
  }
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
  return result;
}

_WORD *__swift_memcpy2_1(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for SliceUntilParser()
{
  return &type metadata for SliceUntilParser;
}

uint64_t _s15ParsingInternal16SliceUntilParserVwet_0(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s15ParsingInternal16SliceUntilParserVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2588BC480);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BytesUntilParser()
{
  return &type metadata for BytesUntilParser;
}

_UNKNOWN **sub_2588BC4B8()
{
  return &protocol witness table for SliceUntilParser;
}

_UNKNOWN **sub_2588BC4C4()
{
  return &protocol witness table for BytesUntilParser;
}

unint64_t sub_2588BC4D4()
{
  unint64_t result = qword_26A0A18E8;
  if (!qword_26A0A18E8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A0A18F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A18E8);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t ParserIterator.reduce<A>(into:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v16, v17, v18);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a5);
  sub_2588BC730((uint64_t)v20, (uint64_t)v15, a2, a3, a4, a5, a6);
  return swift_retain();
}

uint64_t sub_2588BC730@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a7, a1, a5);
  uint64_t v12 = type metadata accessor for IteratorReducer();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + *(int *)(v12 + 44), a2, a6);
  uint64_t v14 = (void *)(a7 + *(int *)(v12 + 48));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t sub_2588BC810()
{
  type metadata accessor for IteratorReducer();
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for IteratorReducer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588BC874(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 40);
}

uint64_t sub_2588BC87C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2588BC958(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  unsigned int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *unsigned int v4 = *a2;
    unsigned int v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    uint64_t v19 = (void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v20 = v19[1];
    uint64_t v21 = (void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v21 = *v19;
    v21[1] = v20;
  }
  swift_retain();
  return v4;
}

uint64_t sub_2588BCAF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  (*(void (**)(unint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 8))((*(void *)(v4 + 56)
                                                                                            + a1
                                                                                            + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 24) - 8) + 80));
  return swift_release();
}

uint64_t sub_2588BCBB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 48) + 7;
  int v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *int v15 = *v16;
  v15[1] = v17;
  swift_retain();
  return a1;
}

uint64_t sub_2588BCC84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  uint64_t v14 = *(void *)(v9 + 40) + 7;
  int v15 = (void *)((v14 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = (void *)((v14 + v13) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v17 = v16[1];
  *int v15 = *v16;
  v15[1] = v17;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2588BCD64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588BCE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2588BCF0C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588BD0E4);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v12 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_2588BD0F8(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v27 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v27 = a2 - 1;
                }
                *uint64_t v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x2588BD390);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_2588BD3B8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v39 = a1;
  uint64_t v6 = *(void *)(a2 + 32);
  uint64_t v38 = *(void *)(a2 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_2588F0358();
  uint64_t v29 = *(void *)(v8 - 8);
  uint64_t v30 = v8;
  uint64_t v12 = MEMORY[0x270FA5388](v8, v9, v10, v11);
  uint64_t v14 = (char *)v28 - v13;
  uint64_t v33 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v12, v15, v16, v17);
  int v19 = (char *)v28 - v18;
  uint64_t v20 = v3 + *(int *)(a2 + 44);
  uint64_t v37 = a2;
  uint64_t v21 = *(void *)(a2 + 24);
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(a3, v20, v21);
  uint64_t v23 = v6;
  unint64_t v24 = *(void (**)(uint64_t, uint64_t))(v6 + 16);
  uint64_t v25 = v35;
  uint64_t v35 = v23;
  uint64_t v36 = v3;
  v24(v39, v38);
  if (v25) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(v22 + 8))(a3, v21);
  }
  v28[0] = v22;
  v28[1] = v21;
  uint64_t v34 = a3;
  uint64_t v26 = *(void *)(v33 + 48);
  uint64_t v31 = (void (**)(char *, char *, uint64_t))(v33 + 32);
  uint64_t v32 = (void (**)(char *, uint64_t))(v33 + 8);
  uint64_t v33 = v26;
  while (((unsigned int (*)(char *, uint64_t, uint64_t))v33)(v14, 1, AssociatedTypeWitness) != 1)
  {
    (*v31)(v19, v14, AssociatedTypeWitness);
    (*(void (**)(uint64_t, char *))(v36 + *(int *)(v37 + 48)))(v34, v19);
    (*v32)(v19, AssociatedTypeWitness);
    ((void (*)(uint64_t, uint64_t, uint64_t))v24)(v39, v38, v35);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v14, v30);
}

uint64_t sub_2588BD6E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return sub_2588BD3B8(a1, a2, a3);
}

uint64_t ParserComponent.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v17 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v9, v10, v11);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(uint64_t, uint64_t))(a4 + 32))(a3, a4);
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(AssociatedConformanceWitness + 24))(a1, v17, AssociatedTypeWitness, AssociatedConformanceWitness);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v13, AssociatedTypeWitness);
}

uint64_t sub_2588BD86C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t WitnessTable = swift_getWitnessTable();
  return ParserComponent.parse(_:context:)(a1, a2, a3, WitnessTable);
}

uint64_t AllRemaining(exceptFor:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t SliceRemainingParser.exceptCount.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SliceRemainingParser.exceptCount.modify())()
{
  return nullsub_1;
}

uint64_t *SliceRemainingParser.parse(_:context:)(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (a3 < 0)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000023;
    unint64_t v8 = 0x8000000258901A30;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 2;
    goto LABEL_7;
  }
  uint64_t v4 = result[1];
  uint64_t v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v11 = v5 < a3;
  uint64_t v6 = v5 - a3;
  if (v11)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000024;
    unint64_t v8 = 0x8000000258901A00;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 0;
LABEL_7:
    v9[1] = v3;
    v9[2] = v7;
    v9[3] = v8;
    v9[4] = 0;
    swift_willThrow();
    return (uint64_t *)v3;
  }
  uint64_t v10 = v6 + v3;
  BOOL v11 = v6 + v3 < v3 || v4 < v10;
  if (!v11)
  {
    *uint64_t result = v10;
    return (uint64_t *)v3;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t *sub_2588BDAD0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t result = SliceRemainingParser.parse(_:context:)(a1, a2, *v3);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
  }
  return result;
}

uint64_t allRemaining(exceptFor:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t *sub_2588BDB08@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t result = sub_2588BDB7C(a1, a2, *v3);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

ValueMetadata *type metadata accessor for SliceRemainingParser()
{
  return &type metadata for SliceRemainingParser;
}

_UNKNOWN **sub_2588BDB54()
{
  return &protocol witness table for SliceRemainingParser;
}

_UNKNOWN **sub_2588BDB60()
{
  return &off_26B2E4418;
}

ValueMetadata *type metadata accessor for AllRemainingParser()
{
  return &type metadata for AllRemainingParser;
}

uint64_t *sub_2588BDB7C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (a3 < 0)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000023;
    unint64_t v8 = 0x8000000258901A30;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 2;
    goto LABEL_7;
  }
  uint64_t v4 = result[1];
  uint64_t v5 = v4 - v3;
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
    goto LABEL_15;
  }
  BOOL v11 = v5 < a3;
  uint64_t v6 = v5 - a3;
  if (v11)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD000000000000024;
    unint64_t v8 = 0x8000000258901A00;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 0;
LABEL_7:
    v9[1] = v3;
    v9[2] = v7;
    v9[3] = v8;
    v9[4] = 0;
    swift_willThrow();
    return (uint64_t *)v3;
  }
  uint64_t v10 = v6 + v3;
  BOOL v11 = v6 + v3 < v3 || v4 < v10;
  if (!v11)
  {
    *uint64_t result = v10;
    return (uint64_t *)v3;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t ParsingError.init(status:location:message:userError:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, void *a6@<X8>)
{
  *a6 = result;
  a6[1] = a2;
  a6[2] = a3;
  a6[3] = a4;
  a6[4] = a5;
  return result;
}

uint64_t static ParsingError.Status.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  switch(a1)
  {
    case 0:
      if (a2) {
        goto LABEL_12;
      }
      uint64_t result = 1;
      break;
    case 1:
      if (a2 != 1) {
        goto LABEL_12;
      }
      uint64_t result = 1;
      break;
    case 2:
      if (a2 != 2) {
        goto LABEL_12;
      }
      uint64_t result = 1;
      break;
    case 3:
      if (a2 != 3) {
        goto LABEL_12;
      }
      uint64_t result = 1;
      break;
    case 4:
      if (a2 != 4) {
        goto LABEL_12;
      }
      uint64_t result = 1;
      break;
    default:
LABEL_12:
      uint64_t result = 0;
      break;
  }
  return result;
}

uint64_t sub_2588BDDDC(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  switch(*a1)
  {
    case 0:
      if (!v2) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 1:
      if (v2 == 1) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 2:
      if (v2 == 2) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 3:
      if (v2 == 3) {
        goto LABEL_11;
      }
      goto LABEL_3;
    case 4:
      if (v2 != 4) {
        goto LABEL_3;
      }
LABEL_11:
      uint64_t result = 1;
      break;
    default:
LABEL_3:
      uint64_t result = 0;
      break;
  }
  return result;
}

unint64_t ParsingError.status.getter()
{
  unint64_t v1 = *v0;
  sub_2588BDE8C(*v0);
  return v1;
}

unint64_t sub_2588BDE8C(unint64_t result)
{
  if (result >= 5) {
    JUMPOUT(0x25A2CBEB0);
  }
  return result;
}

unint64_t ParsingError.status.setter(unint64_t a1)
{
  unint64_t result = sub_2588BDEC8(*v1);
  *unint64_t v1 = a1;
  return result;
}

unint64_t sub_2588BDEC8(unint64_t result)
{
  if (result >= 5) {
    JUMPOUT(0x25A2CBEA0);
  }
  return result;
}

uint64_t (*ParsingError.status.modify())()
{
  return nullsub_1;
}

uint64_t ParsingError.location.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t ParsingError.location.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*ParsingError.location.modify())()
{
  return nullsub_1;
}

uint64_t ParsingError.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ParsingError.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t (*ParsingError.message.modify())()
{
  return nullsub_1;
}

uint64_t ParsingError.userError.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  MEMORY[0x25A2CBEB0](v1);
  return v1;
}

uint64_t ParsingError.userError.setter(uint64_t a1)
{
  uint64_t result = MEMORY[0x25A2CBEA0](*(void *)(v1 + 32));
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*ParsingError.userError.modify())()
{
  return nullsub_1;
}

uint64_t ParsingError.init(userError:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = MEMORY[0x25A2CBEB0]();
  *a2 = a1;
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = a1;
  return result;
}

uint64_t ParsingError.description.getter()
{
  uint64_t v3 = 0;
  unint64_t v4 = 0xE000000000000000;
  sub_2588F0408();
  sub_2588BE18C(v0, &v5);
  sub_2588BE18C(&v5, &v2);
  sub_2588F0428();
  sub_2588F0228();
  uint64_t v2 = v0[1];
  sub_2588F0468();
  sub_2588F0228();
  swift_bridgeObjectRelease();
  sub_2588F0228();
  swift_bridgeObjectRetain();
  sub_2588F0228();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_2588BE18C(void *a1, void *a2)
{
  *a2 = *a1;
  return a2;
}

uint64_t sub_2588BE19C()
{
  return ParsingError.description.getter();
}

uint64_t initializeBufferWithCopyOfBuffer for ParsingError(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

void destroy for ParsingError(void *a1)
{
  if (*a1 >= 5uLL) {
    MEMORY[0x25A2CBEA0]();
  }
  swift_bridgeObjectRelease();
  JUMPOUT(0x25A2CBEA0);
}

uint64_t initializeWithCopy for ParsingError(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if ((unint64_t)*a2 >= 5) {
    MEMORY[0x25A2CBEB0](*a2);
  }
  *(void *)a1 = v4;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 1);
  uint64_t v5 = a2[3];
  uint64_t v6 = a2[4];
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRetain();
  MEMORY[0x25A2CBEB0](v6);
  *(void *)(a1 + 32) = v6;
  return a1;
}

unint64_t *assignWithCopy for ParsingError(unint64_t *a1, unint64_t *a2)
{
  unint64_t v4 = *a2;
  if (*a1 >= 5)
  {
    if (v4 >= 5)
    {
      MEMORY[0x25A2CBEB0](*a2);
      unint64_t v5 = *a1;
      *a1 = v4;
      MEMORY[0x25A2CBEA0](v5);
    }
    else
    {
      MEMORY[0x25A2CBEA0]();
      *a1 = *a2;
    }
  }
  else
  {
    if (v4 >= 5) {
      MEMORY[0x25A2CBEB0](*a2);
    }
    *a1 = v4;
  }
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = a1[4];
  unint64_t v7 = a2[4];
  MEMORY[0x25A2CBEB0](v7);
  a1[4] = v7;
  MEMORY[0x25A2CBEA0](v6);
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for ParsingError(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)a2;
  if (*(void *)a1 >= 5uLL)
  {
    if (v4 >= 5)
    {
      *(void *)a1 = v4;
      MEMORY[0x25A2CBEA0]();
      goto LABEL_6;
    }
    MEMORY[0x25A2CBEA0]();
  }
  *(void *)a1 = v4;
LABEL_6:
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  MEMORY[0x25A2CBEA0](v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsingError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ParsingError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ParsingError()
{
  return &type metadata for ParsingError;
}

void *initializeBufferWithCopyOfBuffer for ParsingError.Status(void *a1, void *a2)
{
  uint64_t v3 = *a2;
  if (*a2 >= 0xFFFFFFFFuLL) {
    MEMORY[0x25A2CBEB0](*a2);
  }
  *a1 = v3;
  return a1;
}

unint64_t destroy for ParsingError.Status(unint64_t *a1)
{
  unint64_t result = *a1;
  if (result >= 0xFFFFFFFF) {
    JUMPOUT(0x25A2CBEA0);
  }
  return result;
}

unint64_t *assignWithCopy for ParsingError.Status(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF)
  {
    if (v3 >= 0xFFFFFFFF) {
      MEMORY[0x25A2CBEB0](*a2);
    }
    *a1 = v3;
  }
  else if (v3 < 0xFFFFFFFF)
  {
    MEMORY[0x25A2CBEA0]();
    *a1 = *a2;
  }
  else
  {
    MEMORY[0x25A2CBEB0](*a2);
    unint64_t v4 = *a1;
    *a1 = v3;
    MEMORY[0x25A2CBEA0](v4);
  }
  return a1;
}

void *__swift_memcpy8_8(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

unint64_t *assignWithTake for ParsingError.Status(unint64_t *a1, unint64_t *a2)
{
  unint64_t v3 = *a2;
  if (*a1 < 0xFFFFFFFF) {
    goto LABEL_6;
  }
  if (v3 < 0xFFFFFFFF)
  {
    MEMORY[0x25A2CBEA0]();
LABEL_6:
    *a1 = v3;
    return a1;
  }
  *a1 = v3;
  MEMORY[0x25A2CBEA0]();
  return a1;
}

uint64_t getEnumTagSinglePayload for ParsingError.Status(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 > 0x7FFFFFFA && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 2147483643);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 4;
  if (v4 >= 6) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ParsingError.Status(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFB)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483643;
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFB) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2 + 4;
    }
  }
  return result;
}

uint64_t sub_2588BE6C0(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_2588BE6D8(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ParsingError.Status()
{
  return &type metadata for ParsingError.Status;
}

uint64_t ContextfulParser.optional()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  unint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t OptionalParser.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t OptionalParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t OptionalParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*OptionalParser.base.modify())()
{
  return nullsub_1;
}

uint64_t OptionalParser.parse(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, void, void))(*(void *)(a3 + 24) + 24))(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  if (v4)
  {
    MEMORY[0x25A2CBEA0](v4);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a4, 1, 1, AssociatedTypeWitness);
  }
  else
  {
    uint64_t v8 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a4, 0, 1, v8);
  }
}

uint64_t sub_2588BE9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return OptionalParser.parse(_:context:)(a1, a2, a3, a4);
}

uint64_t sub_2588BE9D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 24);
}

uint64_t sub_2588BE9DC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588BEA6C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588BEBC8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588BEDE0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for OptionalParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588BEE20()
{
  type metadata accessor for OptionalParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.concatenating<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x270FA5388](v12, v13, v14, v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v18, v20, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a3);
  return LeftOnlyParser.init(left:right:)((uint64_t)v18, (uint64_t)v11, a2, a3, a5);
}

uint64_t LeftOnlyParser.init(left:right:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for LeftOnlyParser();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for LeftOnlyParser()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser<>.concatenating<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v26 = a1;
  uint64_t v27 = a6;
  uint64_t v28 = a5;
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v11 = (char *)&v25 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v9, v12, v14, v15);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = type metadata accessor for AddContext();
  MEMORY[0x270FA5388](v18, v19, v20, v21);
  uint64_t v23 = (char *)&v25 - v22;
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v17, v25, a2);
  AddContext.init(base:)((uint64_t)v17, a2, (uint64_t)v23);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v11, v26, a4);
  swift_getWitnessTable();
  return LeftOnlyParser.init(left:right:)((uint64_t)v23, (uint64_t)v11, v18, a4, v27);
}

uint64_t LeftOnlyParser.left.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t LeftOnlyParser.left.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*LeftOnlyParser.left.modify())()
{
  return nullsub_1;
}

uint64_t LeftOnlyParser.right.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t LeftOnlyParser.right.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*LeftOnlyParser.right.modify())()
{
  return nullsub_1;
}

double LeftOnlyParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588BF5BC);
}

uint64_t sub_2588BF490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a3, a4, a6);
  if (!v7)
  {
    type metadata accessor for LeftOnlyParser();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 24))(a1, a3, a5, a7);
  }
  return result;
}

uint64_t sub_2588BF5BC(uint64_t a1)
{
  return sub_2588BF490(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

double sub_2588BF5E0()
{
  return LeftOnlyParser.parse(_:context:)();
}

uint64_t sub_2588BF600()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2588BF6D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  unint64_t v11 = ((v6 + v9) & ~v9) + *(void *)(v8 + 64);
  uint64_t v12 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v8 + 80));
  if (v12 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v15 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v15 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    uint64_t v16 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v16, ((unint64_t)a2 + v10) & v16, v7);
  }
  return v4;
}

uint64_t sub_2588BF82C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v4)();
  uint64_t v5 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v6 = *(uint64_t (**)(unint64_t))(v5 + 8);
  unint64_t v7 = (*(void *)(v4 + 56) + a1 + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  return v6(v7);
}

uint64_t sub_2588BF8D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2588BF978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2588BFA20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2588BFAC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_2588BFB70(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588BFD68(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588C0034);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          unint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588C005C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588C00A8()
{
  return swift_getWitnessTable();
}

uint64_t ParserSliceIterator.collectUntilEnd()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388]();
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v6);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 32))(a2, v6, a1);
}

uint64_t SliceIteratorCollector.init(iterator:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t SliceIteratorCollector.iterator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SliceIteratorCollector.iterator.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SliceIteratorCollector.iterator.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorCollector.parse(_:context:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = sub_2588F0358();
  uint64_t v44 = *(void *)(v9 - 8);
  uint64_t v45 = v9;
  uint64_t v13 = MEMORY[0x270FA5388](v9, v10, v11, v12);
  BOOL v15 = (char *)&v43 - v14;
  uint64_t v53 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v13, v16, v17, v18);
  uint64_t v54 = (char *)&v43 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v19, v21, v22, v23);
  uint64_t v26 = (char *)&v43 - v25;
  MEMORY[0x270FA5388](v24, v27, v28, v29);
  uint64_t v31 = (char *)&v43 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v32;
  (*(void (**)(char *, uint64_t, uint64_t))(v32 + 16))(v31, v4, v6);
  uint64_t v57 = sub_2588F0298();
  uint64_t v33 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 16);
  uint64_t v34 = *a1;
  uint64_t v35 = a1[1];
  uint64_t v36 = a1[2];
  uint64_t v46 = v15;
  uint64_t v37 = v56;
  uint64_t v55 = v31;
  uint64_t v56 = v6;
  v33(v34, v35, v36, v6, v7);
  if (v37)
  {
    uint64_t v38 = v47;
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v55, v56);
  }
  else
  {
    uint64_t v49 = v33;
    uint64_t v50 = v7 + 16;
    uint64_t v51 = a1;
    uint64_t v52 = v7;
    uint64_t v39 = v54;
    uint64_t v40 = v53 + 48;
    uint64_t v53 = *(void *)(v53 + 48);
    uint64_t v48 = (void (**)(char *, char *, uint64_t))(v40 - 16);
    uint64_t v41 = v46;
    while (((unsigned int (*)(char *, uint64_t, uint64_t))v53)(v41, 1, AssociatedTypeWitness) != 1)
    {
      (*v48)(v26, v41, AssociatedTypeWitness);
      (*(void (**)(char *, char *, uint64_t))(v40 - 32))(v39, v26, AssociatedTypeWitness);
      sub_2588F02C8();
      sub_2588F02B8();
      (*(void (**)(char *, uint64_t))(v40 - 40))(v26, AssociatedTypeWitness);
      v49(*v51, v51[1], v51[2], v56, v52);
    }
    (*(void (**)(char *, uint64_t))(v47 + 8))(v55, v56);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v41, v45);
    return v57;
  }
}

uint64_t sub_2588C068C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = SliceIteratorCollector.parse(_:context:)(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_2588C06B8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588C0814(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588C0A2CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for SliceIteratorCollector()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588C0A6C()
{
  type metadata accessor for SliceIteratorCollector();
  return swift_getWitnessTable();
}

uint64_t ASCIINumber(radix:requireTerminator:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  *(void *)a3 = result;
  *(unsigned char *)(a3 + 8) = a2;
  return result;
}

uint64_t sub_2588C0AC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a1, a3, a3);
  unsigned int v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = v8(v7);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v3, a2);
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v3, v7, a2);
  return v9 & 1;
}

uint64_t sub_2588C0BBC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v112 = a3;
  uint64_t v121 = a5;
  uint64_t v122 = a1;
  uint64_t v111 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v110 = (char *)&v105 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v7 + 24);
  uint64_t v118 = *(void *)(v7 + 32);
  uint64_t v117 = *(void *)(*(void *)(*(void *)(v118 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v12 = MEMORY[0x270FA5388](AssociatedTypeWitness, v9, v10, v11);
  uint64_t v115 = (char *)&v105 - v13;
  uint64_t v14 = *(void *)(v8 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v12, v15, v16, v17);
  uint64_t v114 = (char *)&v105 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = MEMORY[0x270FA5388](v18, v20, v21, v22);
  uint64_t v113 = (char *)&v105 - v24;
  uint64_t v28 = MEMORY[0x270FA5388](v23, v25, v26, v27);
  uint64_t v30 = (char *)&v105 - v29;
  uint64_t v34 = MEMORY[0x270FA5388](v28, v31, v32, v33);
  uint64_t v36 = (char *)&v105 - v35;
  uint64_t v40 = MEMORY[0x270FA5388](v34, v37, v38, v39);
  uint64_t v42 = (char *)&v105 - v41;
  MEMORY[0x270FA5388](v40, v43, v44, v45);
  uint64_t v47 = (char *)&v105 - v46;
  uint64_t v48 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  uint64_t v125 = (char *)v5;
  uint64_t v119 = v48;
  uint64_t v120 = v14 + 16;
  v48((char *)&v105 - v46, (char *)v5, v8);
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() >= 64)
    {
LABEL_11:
      unint64_t v123 = 2;
      sub_2588C1FE0();
      sub_2588F0368();
      char v56 = sub_2588F01E8();
      uint64_t v57 = v14;
      uint64_t v58 = *(void (**)(char *, uint64_t))(v14 + 8);
      v58(v42, v8);
      uint64_t v59 = v47;
      uint64_t v55 = v58;
      uint64_t v14 = v57;
      v55(v59, v8);
      if (v56) {
        goto LABEL_50;
      }
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v53 = sub_2588F03B8();
    uint64_t v54 = v47;
    uint64_t v55 = *(void (**)(char *, uint64_t))(v14 + 8);
    v55(v54, v8);
    if (v53 < 2) {
      goto LABEL_50;
    }
    goto LABEL_12;
  }
  char v49 = sub_2588F03D8();
  uint64_t v50 = sub_2588F03C8();
  if ((v49 & 1) == 0)
  {
    if (v50 >= 64) {
      goto LABEL_11;
    }
    goto LABEL_9;
  }
  if (v50 > 64) {
    goto LABEL_11;
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v109 = v14;
  sub_2588F04B8();
  sub_2588F0498();
  char v51 = sub_2588F01E8();
  uint64_t v52 = *(void (**)(char *, uint64_t))(v109 + 8);
  v52(v42, v8);
  v119(v36, v47, v8);
  if (v51)
  {
    v52(v36, v8);
    v52(v47, v8);
    goto LABEL_50;
  }
  uint64_t v91 = sub_2588F03B8();
  v52(v36, v8);
  v52(v47, v8);
  uint64_t v55 = v52;
  uint64_t v14 = v109;
  if (v91 < 2) {
    goto LABEL_50;
  }
LABEL_12:
  v119(v30, v125, v8);
  char v60 = sub_2588F03D8();
  uint64_t v61 = sub_2588F03C8();
  if (v60)
  {
    if (v61 <= 64) {
      goto LABEL_14;
    }
  }
  else if (v61 <= 63)
  {
LABEL_14:
    uint64_t v62 = sub_2588F03B8();
    v55(v30, v8);
    if (v62 > 36) {
      goto LABEL_50;
    }
    goto LABEL_18;
  }
  unint64_t v123 = 36;
  sub_2588C1FE0();
  sub_2588F0368();
  char v63 = sub_2588F01E8();
  v55(v42, v8);
  v55(v30, v8);
  if (v63)
  {
LABEL_50:
    uint64_t v92 = *v122;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v66 = 2;
    v66[1] = v92;
    v66[2] = 0xD000000000000024;
    v66[3] = 0x8000000258901B20;
    goto LABEL_51;
  }
LABEL_18:
  uint64_t v64 = v122;
  unint64_t v65 = *v122;
  if (*v122 == v122[1])
  {
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v66 = 0;
    v66[1] = v65;
    v66[2] = 0xD000000000000018;
    v66[3] = 0x8000000258901B00;
LABEL_51:
    v66[4] = 0;
    return swift_willThrow();
  }
  uint64_t v106 = v55;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v67 = v106;
  uint64_t result = sub_2588F0498();
  LODWORD(v109) = 0;
  uint64_t v69 = v64[2];
  uint64_t v70 = v14 + 8;
  uint64_t v71 = v113;
  uint64_t v107 = v42;
  while ((v65 & 0x8000000000000000) == 0)
  {
    if (v65 >= *(void *)(v69 + 16)) {
      goto LABEL_66;
    }
    unsigned int v72 = *(unsigned __int8 *)(v69 + v65 + 32);
    if (v72 > 0x39)
    {
      if (v72 >= 0x41)
      {
        if (v72 > 0x5A)
        {
          if (v72 < 0x61) {
            int v73 = -1;
          }
          else {
            int v73 = v72 - 87;
          }
        }
        else
        {
          int v73 = v72 - 55;
        }
      }
      else
      {
        int v73 = 255;
      }
    }
    else
    {
      int v73 = v72 - 48;
    }
    v119(v71, v125, v8);
    char v74 = sub_2588F03D8();
    uint64_t v75 = sub_2588F03C8();
    if (v74)
    {
      if (v75 > 8) {
        goto LABEL_38;
      }
      LODWORD(v113) = v73;
      uint64_t v76 = v42;
      uint64_t v77 = v70;
      uint64_t v78 = v71;
      sub_2588F04B8();
      uint64_t v79 = v114;
      sub_2588F0498();
      char v80 = sub_2588F01D8();
      v67(v76, v8);
      v119(v79, v78, v8);
      if ((v80 & 1) == 0)
      {
        v67(v79, v8);
        v67(v78, v8);
        char v90 = 0;
        uint64_t v87 = v122;
LABEL_57:
        uint64_t v98 = v110;
        uint64_t v97 = v111;
        uint64_t v99 = v112;
        (*(void (**)(char *, char *, uint64_t))(v111 + 16))(v110, v125, v112);
        if (v90)
        {
          char v100 = v98[*(int *)(v99 + 36)];
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v98, v99);
          if (v100)
          {
            uint64_t v101 = *v87;
            sub_2588BBC70();
            swift_allocError();
            void *v96 = 0;
            v96[1] = v101;
            unint64_t v102 = 0xD000000000000030;
            uint64_t v103 = "n looking for ASCII digits";
LABEL_63:
            v96[2] = v102;
            v96[3] = (unint64_t)v103 | 0x8000000000000000;
            goto LABEL_64;
          }
        }
        else
        {
          uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v97 + 8))(v98, v99);
        }
        if (v109) {
          return result;
        }
        uint64_t v104 = *v87;
        sub_2588BBC70();
        swift_allocError();
        void *v96 = 1;
        v96[1] = v104;
        unint64_t v102 = 0xD00000000000003ALL;
        uint64_t v103 = "f bytes requested: ";
        goto LABEL_63;
      }
      unsigned __int8 v81 = sub_2588F03B8();
      LOBYTE(v73) = (_BYTE)v113;
      unsigned int v82 = v113;
      v67(v79, v8);
      v67(v78, v8);
      uint64_t v71 = v78;
      uint64_t v70 = v77;
      uint64_t v42 = v107;
      if (v82 >= v81) {
        goto LABEL_54;
      }
    }
    else
    {
      if (v75 >= 9)
      {
LABEL_38:
        LOBYTE(v123) = v73;
        sub_2588C2034();
        sub_2588F0368();
        char v83 = sub_2588F01E8();
        v67(v42, v8);
        v67(v71, v8);
        if ((v83 & 1) == 0) {
          goto LABEL_54;
        }
        goto LABEL_41;
      }
      unsigned __int8 v84 = sub_2588F03B8();
      v67(v71, v8);
      if (v73 >= v84)
      {
LABEL_54:
        char v90 = 0;
        uint64_t v87 = v122;
        goto LABEL_57;
      }
    }
LABEL_41:
    uint64_t v85 = v118;
    if ((sub_2588C0AC0((uint64_t)v125, v8, v118) & 1) != 0
      || (LOBYTE(v123) = v73,
          sub_2588C2034(),
          sub_2588F03E8(),
          char v86 = sub_2588C0AC0((uint64_t)v42, v8, v85),
          uint64_t result = ((uint64_t (*)(char *, uint64_t))v67)(v42, v8),
          (v86 & 1) != 0))
    {
      uint64_t v93 = *v122;
      unint64_t v123 = 0;
      unint64_t v124 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      unint64_t v123 = 0xD000000000000019;
      unint64_t v124 = 0x8000000258901AE0;
      sub_2588F0588();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      sub_2588F0228();
      unint64_t v94 = v123;
      unint64_t v95 = v124;
      sub_2588BBC70();
      swift_allocError();
      void *v96 = 2;
      v96[1] = v93;
      v96[2] = v94;
      v96[3] = v95;
LABEL_64:
      v96[4] = 0;
      swift_willThrow();
      return ((uint64_t (*)(uint64_t, uint64_t))v67)(v121, v8);
    }
    uint64_t v87 = v122;
    unint64_t v89 = *v122;
    uint64_t v88 = v122[1];
    if (*v122 == v88)
    {
      char v90 = 1;
      LODWORD(v109) = 1;
      goto LABEL_57;
    }
    if ((v89 & 0x8000000000000000) != 0) {
      goto LABEL_67;
    }
    uint64_t v69 = v122[2];
    if (v89 >= *(void *)(v69 + 16)) {
      goto LABEL_68;
    }
    if (v88 <= (uint64_t)v89) {
      goto LABEL_69;
    }
    unint64_t v65 = v89 + 1;
    void *v122 = v89 + 1;
    LODWORD(v109) = 1;
    char v90 = 1;
    if (v89 + 1 == v88) {
      goto LABEL_57;
    }
  }
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  __break(1u);
LABEL_69:
  __break(1u);
  return result;
}

uint64_t sub_2588C1840@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_2588C0BBC(a1, a2, a3, a4, a5);
}

uint64_t asciiNumber(radix:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

unint64_t sub_2588C1868()
{
  unint64_t result = qword_26A0A1AF8;
  if (!qword_26A0A1AF8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A0A1B00);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A1AF8);
  }
  return result;
}

uint64_t sub_2588C18C4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2588C195C(void *a1, void *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(_DWORD *)(v5 + 80);
  if (v7 <= 7 && (unint64_t)(v6 + 1) <= 0x18 && (*(_DWORD *)(v5 + 80) & 0x100000) == 0)
  {
    (*(void (**)(void *, void *))(v5 + 16))(a1, a2);
    *((unsigned char *)v4 + v6) = *((unsigned char *)a2 + v6);
  }
  else
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v4;
}

uint64_t sub_2588C1A30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 48) + a1) = *(unsigned char *)(*(void *)(v5 + 48) + a2);
  return a1;
}

uint64_t sub_2588C1A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 40) + a1) = *(unsigned char *)(*(void *)(v5 + 40) + a2);
  return a1;
}

uint64_t sub_2588C1B00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 32) + a1) = *(unsigned char *)(*(void *)(v5 + 32) + a2);
  return a1;
}

uint64_t sub_2588C1B68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  *(unsigned char *)(*(void *)(v5 + 24) + a1) = *(unsigned char *)(*(void *)(v5 + 24) + a2);
  return a1;
}

uint64_t sub_2588C1BD0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFE) {
    unsigned int v7 = 254;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_22;
  }
  uint64_t v9 = v6 + 1;
  char v10 = 8 * (v6 + 1);
  if ((v6 + 1) > 3) {
    goto LABEL_7;
  }
  unsigned int v12 = ((v8 + ~(-1 << v10)) >> v10) + 1;
  if (HIWORD(v12))
  {
    int v11 = *(_DWORD *)((char *)a1 + v9);
    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
    if (v12 <= 0xFF)
    {
      if (v12 < 2) {
        goto LABEL_22;
      }
LABEL_7:
      int v11 = *((unsigned __int8 *)a1 + v9);
      if (!*((unsigned char *)a1 + v9)) {
        goto LABEL_22;
      }
LABEL_14:
      int v13 = (v11 - 1) << v10;
      if (v9 > 3) {
        int v13 = 0;
      }
      if (v9)
      {
        if (v9 > 3) {
          LODWORD(v9) = 4;
        }
        switch((int)v9)
        {
          case 2:
            LODWORD(v9) = *a1;
            break;
          case 3:
            LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
            break;
          case 4:
            LODWORD(v9) = *(_DWORD *)a1;
            break;
          default:
            LODWORD(v9) = *(unsigned __int8 *)a1;
            break;
        }
      }
      return v7 + (v9 | v13) + 1;
    }
    int v11 = *(unsigned __int16 *)((char *)a1 + v9);
    if (*(unsigned __int16 *)((char *)a1 + v9)) {
      goto LABEL_14;
    }
  }
LABEL_22:
  if (v5 >= 0xFE) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v15 = *((unsigned __int8 *)a1 + v6);
  if (v15 < 2) {
    return 0;
  }
  return ((v15 + 2147483646) & 0x7FFFFFFF) + 1;
}

void sub_2588C1D60(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFE) {
    unsigned int v8 = 254;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = v9 + 1;
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v9 != -1)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v9 + 1);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x2588C1FA0);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 < 0xFE)
        {
          a1[v9] = a2 + 1;
        }
        else
        {
          uint64_t v18 = *(void (**)(void))(v6 + 56);
          v18();
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ASCIINumberParser()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2588C1FE0()
{
  unint64_t result = qword_26A0A1B88;
  if (!qword_26A0A1B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A1B88);
  }
  return result;
}

unint64_t sub_2588C2034()
{
  unint64_t result = qword_26A0A1B90;
  if (!qword_26A0A1B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A1B90);
  }
  return result;
}

double ByteBuffer.atomically<A>(_:)(void (*a1)(long long *))
{
  uint64_t v4 = *((void *)v1 + 2);
  long long v7 = *v1;
  uint64_t v8 = v4;
  swift_bridgeObjectRetain();
  a1(&v7);
  swift_bridgeObjectRelease();
  if (!v2)
  {
    uint64_t v6 = v8;
    double result = *(double *)&v7;
    *unint64_t v1 = v7;
    *((void *)v1 + 2) = v6;
  }
  return result;
}

uint64_t ByteBuffer.count.getter(uint64_t a1, uint64_t a2)
{
  BOOL v2 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v2) {
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer.dividing(atOffset:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = a2 + result;
  if (a2 + result >= a2 && v5 <= a3)
  {
    *a5 = a2;
    a5[1] = v5;
    a5[2] = a4;
    a5[3] = v5;
    a5[4] = a3;
    a5[5] = a4;
    return swift_bridgeObjectRetain_n();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t ByteBuffer.utf8String.getter(uint64_t result, uint64_t a2)
{
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_6;
  }
  if (__OFADD__(result, a2 - result))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  if (a2 >= result)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_2588F0218();
    swift_bridgeObjectRelease();
    return v2;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t ByteBuffer.subscript.getter(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (result < 0 || a3 - a2 <= result) {
    goto LABEL_8;
  }
  unint64_t v4 = a2 + result;
  if (a2 + result < 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (v4 < *(void *)(a4 + 16)) {
    return *(unsigned __int8 *)(a4 + v4 + 32);
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t ByteBuffer.divide(atOffset:)(uint64_t result)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *v1 + result;
  if (v3 < *v1)
  {
    __break(1u);
  }
  else if (v1[1] >= v3)
  {
    *unint64_t v1 = v3;
    swift_bridgeObjectRetain();
    return v2;
  }
  __break(1u);
  return result;
}

uint64_t ByteBuffer.endPosition.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

BOOL ByteBuffer.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ByteBuffer.buffer.getter(uint64_t a1)
{
  return a1;
}

uint64_t ByteBuffer.buffer.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v3 = a1;
  v3[1] = a2;
  v3[2] = a3;
  return result;
}

uint64_t (*ByteBuffer.buffer.modify())()
{
  return nullsub_1;
}

uint64_t ByteBuffer.seeking(toRange:)(uint64_t a1)
{
  return a1;
}

uint64_t ByteBuffer.seeking(toRelativeOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2588C24A4(a1, a2, a3, a4, (uint64_t (*)(void))sub_2588C2CC4);
}

uint64_t ByteBuffer.seeking(toAbsoluteOffset:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a1 < 0 || (uint64_t v4 = a1, *(void *)(a4 + 16) < a1))
  {
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v6 = 2;
    v6[1] = a2;
    v6[2] = 0xD000000000000028;
    v6[3] = 0x8000000258901B50;
    v6[4] = 0;
    swift_willThrow();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t ByteBuffer.seeking(toOffsetFromEnd:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_2588C24A4(a1, a2, a3, a4, (uint64_t (*)(void))sub_2588C2D8C);
}

uint64_t sub_2588C24A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v7 = a5();
  if (!v6)
  {
    uint64_t v5 = v7;
    swift_bridgeObjectRetain();
  }
  return v5;
}

uint64_t ByteBuffer.init<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1B98);
  sub_2588C2E84(&qword_26A0A1BA0, &qword_26A0A1B98);
  sub_2588F0508();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return v9[1];
}

{
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  uint64_t v6 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v9 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a1, a2);
  sub_2588F02D8();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  return 0;
}

uint64_t ByteBuffer.customMirror.getter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2588F0568();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4, v6, v7, v8);
  size_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1BA8);
  MEMORY[0x270FA5388](v11 - 8, v12, v13, v14);
  unsigned int v16 = (char *)v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[2] = _s15ParsingInternal10ByteBufferV11descriptionSSvg_0(a1, a2);
  v20[3] = v17;
  v20[1] = MEMORY[0x263F8EE78];
  uint64_t v18 = sub_2588F0558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v16, 1, 1, v18);
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v10, *MEMORY[0x263F8E830], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1BB0);
  sub_2588C2E84(qword_26A0A1BB8, &qword_26A0A1BB0);
  return sub_2588F0578();
}

uint64_t sub_2588C2938()
{
  return _s15ParsingInternal10ByteBufferV11descriptionSSvg_0(*v0, v0[1]);
}

uint64_t sub_2588C2940()
{
  uint64_t v1 = sub_2588F0568();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1, v3, v4, v5);
  uint64_t v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1BA8);
  MEMORY[0x270FA5388](v8 - 8, v9, v10, v11);
  uint64_t v13 = (char *)v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17[2] = _s15ParsingInternal10ByteBufferV11descriptionSSvg_0(*v0, v0[1]);
  v17[3] = v14;
  v17[1] = MEMORY[0x263F8EE78];
  uint64_t v15 = sub_2588F0558();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v13, 1, 1, v15);
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v7, *MEMORY[0x263F8E830], v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1BB0);
  sub_2588C2E84(qword_26A0A1BB8, &qword_26A0A1BB0);
  return sub_2588F0578();
}

uint64_t ByteBuffer.withUnsafeBytes<A>(_:)(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a4 < (uint64_t)a3)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((a3 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v5 = *(void *)(a5 + 16);
  if (v5 >= a3 && (uint64_t)v5 >= a4)
  {
    swift_bridgeObjectRetain();
    sub_2588F03F8();
    return swift_bridgeObjectRelease();
  }
LABEL_10:
  __break(1u);
  return result;
}

unint64_t sub_2588C2BDC(uint64_t a1, uint64_t a2)
{
  return _s15ParsingInternal10ByteBufferV2eeoiySbAC_ACtFZ_0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)a2, *(void *)(a2 + 8), *(void *)(a2 + 16));
}

uint64_t _s15ParsingInternal10ByteBufferV11descriptionSSvg_0(uint64_t a1, uint64_t a2)
{
  sub_2588F0408();
  uint64_t result = swift_bridgeObjectRelease();
  strcpy((char *)v5, "ByteBuffer (");
  BYTE5(v5[1]) = 0;
  HIWORD(v5[1]) = -5120;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else
  {
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    return v5[0];
  }
  return result;
}

uint64_t sub_2588C2CC4(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = -a2;
  if (__OFSUB__(0, a2))
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v5 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (v5 < v3)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  if (v3 > result || v5 < result)
  {
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v6 = 2;
    v6[1] = a2;
    v6[2] = 0xD000000000000032;
    v6[3] = 0x8000000258901B80;
    v6[4] = 0;
    return swift_willThrow();
  }
  result += a2;
  if (result > a3) {
    goto LABEL_12;
  }
  return result;
}

uint64_t sub_2588C2D8C(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a3 - a2;
  if (__OFSUB__(a3, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v3 < 0)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return result;
  }
  if (result < 0 || (BOOL v5 = v3 < result, v6 = v3 - result, v5))
  {
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v7 = 2;
    v7[1] = a2;
    v7[2] = 0xD000000000000032;
    v7[3] = 0x8000000258901B80;
    v7[4] = 0;
    return swift_willThrow();
  }
  uint64_t result = v6 + a2;
  if (v6 + a2 > a3) {
    goto LABEL_10;
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_2588C2E84(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t _s15ParsingInternal10ByteBufferV2eeoiySbAC_ACtFZ_0(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, uint64_t a6)
{
  size_t v6 = a2 - result;
  if (__OFSUB__(a2, result))
  {
    __break(1u);
    goto LABEL_15;
  }
  if (__OFSUB__(a5, a4))
  {
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (v6 != a5 - a4) {
    return 0;
  }
  if (a2 < (uint64_t)result) {
    goto LABEL_16;
  }
  if ((result & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  unint64_t v7 = *(void *)(a3 + 16);
  if (v7 < result || (uint64_t)v7 < a2) {
    goto LABEL_18;
  }
  if (a5 < (uint64_t)a4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if ((a4 & 0x8000000000000000) == 0)
  {
    unint64_t v8 = *(void *)(a6 + 16);
    if (v8 >= a4 && (uint64_t)v8 >= a5)
    {
      uint64_t v9 = (const void *)(a3 + result + 32);
      uint64_t v10 = (const void *)(a6 + a4 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      int v11 = memcmp(v9, v10, v6);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 == 0;
    }
    goto LABEL_21;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ByteBuffer()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ByteBuffer(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for ByteBuffer(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ByteBuffer(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ByteBuffer(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ByteBuffer()
{
  return &type metadata for ByteBuffer;
}

uint64_t ContextfulParser<>.converted<A>(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5, v10, a2);
}

{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v12;

  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5, v10, a2);
}

uint64_t RawRepresentableCast.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t RawRepresentableParsers<>.bigEndian.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_2588C32A8(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))FixedWidthIntegerParsers<>.bigEndian.getter, a2);
}

uint64_t RawRepresentableParsers<>.bigEndian(byteCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_2588C3620(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.bigEndian(byteCount:), a3);
}

{
  return sub_2588C3620(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.bigEndian(byteCount:), a3);
}

uint64_t RawRepresentableParsers<>.littleEndian.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_2588C32A8(a1, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t))FixedWidthIntegerParsers<>.littleEndian.getter, a2);
}

uint64_t sub_2588C32A8@<X0>(uint64_t a1@<X2>, void (*a2)(uint64_t *__return_ptr, uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a1 + 8));
  a2(&v12, AssociatedTypeWitness, a1);
  uint64_t v7 = type metadata accessor for FixedWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v7, v9, v10, a3);
}

uint64_t RawRepresentableParsers<>.littleEndian(byteCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return sub_2588C3620(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.littleEndian(byteCount:), a3);
}

{
  return sub_2588C3620(a1, a2, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.littleEndian(byteCount:), a3);
}

uint64_t RawRepresentableParsers<>.load(endianness:)@<X0>(char a1@<W0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5 = a1 & 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a2 + 8));
  FixedWidthIntegerParsers<>.load(endianness:)(v5, &v12);
  uint64_t v7 = type metadata accessor for FixedWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v7, v9, v10, a3);
}

uint64_t RawRepresentableParsers<>.load(bigEndian:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a2 + 8));
  FixedWidthIntegerParsers<>.load(bigEndian:)(a1, &v12);
  uint64_t v7 = type metadata accessor for FixedWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v7, v9, v10, a3);
}

uint64_t RawRepresentableParsers<>.load(endianness:byteCount:)@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return sub_2588C3718(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.load(endianness:byteCount:), a4);
}

{
  return sub_2588C3718(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.load(endianness:byteCount:), a4);
}

uint64_t RawRepresentableParsers<>.load(bigEndian:byteCount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  return sub_2588C381C(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.load(bigEndian:byteCount:), a4);
}

{
  return sub_2588C381C(a1, a2, a3, (void (*)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))FixedWidthIntegerParsers<>.load(bigEndian:byteCount:), a4);
}

uint64_t RawRepresentableParsers<>.load.getter@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a1 + 8));
  FixedWidthIntegerParsers<>.load.getter(AssociatedTypeWitness, a1);
  uint64_t Parser = type metadata accessor for LoadParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, Parser, v7, v8, a2);
}

uint64_t sub_2588C3620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, void (*a3)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a2 + 8));
  a3(&v14, a1, AssociatedTypeWitness, a2);
  uint64_t v9 = type metadata accessor for VariableWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v9, v11, v12, a4);
}

uint64_t sub_2588C3718@<X0>(char a1@<W0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a5@<X8>)
{
  uint64_t v9 = a1 & 1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a3 + 8));
  a4(&v16, v9, a2, AssociatedTypeWitness, a3);
  uint64_t v11 = type metadata accessor for VariableWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v11, v13, v14, a5);
}

uint64_t sub_2588C381C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X4>, void (*a4)(uint64_t *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t)@<X5>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  static FixedWidthInteger.parsers.getter(AssociatedTypeWitness, *(void *)(a3 + 8));
  a4(&v16, a1, a2, AssociatedTypeWitness, a3);
  uint64_t v11 = type metadata accessor for VariableWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.converted<A>(to:)(WitnessTable, v11, v13, v14, a5);
}

uint64_t RawRepresentableCast.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t RawRepresentableCast.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*RawRepresentableCast.base.modify())()
{
  return nullsub_1;
}

double RawRepresentableCast.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588C3D80);
}

uint64_t sub_2588C39F8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v41 = a6;
  uint64_t v42 = a4;
  uint64_t v39 = a7;
  uint64_t v12 = sub_2588F0358();
  uint64_t v40 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v13, v14, v15);
  uint64_t v17 = (char *)&v39 - v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = MEMORY[0x270FA5388](AssociatedTypeWitness, v18, v19, v20);
  uint64_t v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v24, v25, v26);
  uint64_t v27 = *(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a5 + 24);
  uint64_t v44 = (char *)&v39 - v28;
  uint64_t result = v27(a1, a2, a3, a5);
  if (!v7)
  {
    uint64_t v30 = v40;
    uint64_t v31 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v47 + 16))(v23, v44, AssociatedTypeWitness);
    uint64_t v32 = v42;
    sub_2588F0288();
    uint64_t v33 = *(void *)(v32 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v17, 1, v32) == 1)
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v17, v12);
      uint64_t v34 = *a1;
      uint64_t v45 = 0;
      unint64_t v46 = 0xE000000000000000;
      sub_2588F0408();
      sub_2588F0228();
      sub_2588F0588();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      sub_2588F0228();
      uint64_t v35 = v44;
      sub_2588F0478();
      uint64_t v36 = v45;
      unint64_t v37 = v46;
      sub_2588BBC70();
      swift_allocError();
      void *v38 = 2;
      v38[1] = v34;
      v38[2] = v36;
      v38[3] = v37;
      v38[4] = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v47 + 8))(v35, v31);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v31);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v33 + 32))(v39, v17, v32);
    }
  }
  return result;
}

uint64_t sub_2588C3D80@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588C39F8(a1, v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

double sub_2588C3DA4()
{
  return RawRepresentableCast.parse(_:context:)();
}

uint64_t type metadata accessor for RawRepresentableParsers()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588C3DD4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588C3E64(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588C3FC0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588C41D8);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for RawRepresentableCast()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588C4218()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588C4264(uint64_t a1)
{
  return get_witness_table_SYRz15ParsingInternal16MultiByteInteger8RawValueRpzlAA0F17RepresentableCastVyAA16FixedWidthParserVyADGxGAA010ContextfulL0HPyHCTm(a1, (void (*)(uint64_t, uint64_t, void))type metadata accessor for FixedWidthParser);
}

uint64_t sub_2588C4290(uint64_t a1)
{
  return get_witness_table_SYRz15ParsingInternal16MultiByteInteger8RawValueRpzlAA0F17RepresentableCastVyAA16FixedWidthParserVyADGxGAA010ContextfulL0HPyHCTm(a1, (void (*)(uint64_t, uint64_t, void))type metadata accessor for VariableWidthParser);
}

uint64_t sub_2588C42BC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588C4368(uint64_t a1)
{
  return get_witness_table_SYRz15ParsingInternal16MultiByteInteger8RawValueRpzlAA0F17RepresentableCastVyAA16FixedWidthParserVyADGxGAA010ContextfulL0HPyHCTm(a1, (void (*)(uint64_t, uint64_t, void))type metadata accessor for VariableWidthParser);
}

uint64_t get_witness_table_SYRz15ParsingInternal16MultiByteInteger8RawValueRpzlAA0F17RepresentableCastVyAA16FixedWidthParserVyADGxGAA010ContextfulL0HPyHCTm(uint64_t a1, void (*a2)(uint64_t, uint64_t, void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  a2(255, AssociatedTypeWitness, *(void *)(v3 + 8));
  swift_getWitnessTable();
  type metadata accessor for RawRepresentableCast();
  return swift_getWitnessTable();
}

uint64_t ParserSliceIterator.reduce<A>(into:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13, v16, v17, v18);
  uint64_t v20 = (char *)&v25 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v15, a1, a5);
  SliceIteratorReducer.init(iterator:initial:body:)((uint64_t)v20, (uint64_t)v15, a2, a3, a4, a5, a6);
  return swift_retain();
}

uint64_t SliceIteratorReducer.init(iterator:initial:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a7, a1, a5);
  uint64_t v12 = type metadata accessor for SliceIteratorReducer();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a7 + *(int *)(v12 + 44), a2, a6);
  uint64_t v14 = (void *)(a7 + *(int *)(v12 + 48));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t type metadata accessor for SliceIteratorReducer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t SliceIteratorReducer.iterator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SliceIteratorReducer.iterator.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SliceIteratorReducer.iterator.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorReducer.initial.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t SliceIteratorReducer.initial.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*SliceIteratorReducer.initial.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorReducer.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 48));
  swift_retain();
  return v2;
}

uint64_t SliceIteratorReducer.body.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 48));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*SliceIteratorReducer.body.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorReducer.parse(_:context:)@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v53 = a1;
  uint64_t v54 = v7;
  uint64_t v55 = *(void *)(a2 + 16);
  uint64_t v8 = v55;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = sub_2588F0358();
  uint64_t v43 = *(void *)(v10 - 8);
  uint64_t v44 = v10;
  uint64_t v14 = MEMORY[0x270FA5388](v10, v11, v12, v13);
  uint64_t v16 = (char *)v42 - v15;
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v14, v17, v18, v19);
  uint64_t v22 = (char *)v42 - v21;
  uint64_t v45 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v20, v23, v24, v25);
  uint64_t v27 = (char *)v42 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 16))(v27, v4, v8);
  uint64_t v29 = *(int *)(a2 + 44);
  uint64_t v51 = a2;
  uint64_t v52 = v4;
  uint64_t v30 = v4 + v29;
  uint64_t v31 = *(void *)(a2 + 24);
  uint64_t v32 = *(void *)(v31 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 16))(a3, v30, v31);
  uint64_t v33 = v54 + 16;
  uint64_t v34 = *v53;
  uint64_t v35 = v53[1];
  uint64_t v36 = v53[2];
  unint64_t v37 = v50;
  uint64_t v50 = *(void (**)(void, void, void, void))(v54 + 16);
  v50(v34, v35, v36, v55);
  uint64_t v38 = v45;
  if (v37)
  {
    (*(void (**)(uint64_t, uint64_t))(v32 + 8))(a3, v31);
    return (*(uint64_t (**)(char *, uint64_t))(v38 + 8))(v27, v55);
  }
  else
  {
    v42[0] = v32;
    v42[1] = v31;
    uint64_t v48 = v27;
    uint64_t v49 = a3;
    uint64_t v40 = v47 + 48;
    uint64_t v39 = *(void *)(v47 + 48);
    uint64_t v46 = v33;
    uint64_t v47 = v39;
    while (((unsigned int (*)(char *, uint64_t, uint64_t))v47)(v16, 1, AssociatedTypeWitness) != 1)
    {
      (*(void (**)(char *, char *, uint64_t))(v40 - 16))(v22, v16, AssociatedTypeWitness);
      (*(void (**)(uint64_t, char *))(v52 + *(int *)(v51 + 48)))(v49, v22);
      (*(void (**)(char *, uint64_t))(v40 - 40))(v22, AssociatedTypeWitness);
      ((void (*)(void, void, void, uint64_t, uint64_t))v50)(*v53, v53[1], v53[2], v55, v54);
    }
    (*(void (**)(char *, uint64_t))(v38 + 8))(v48, v55);
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v16, v44);
  }
}

uint64_t sub_2588C4CA0@<X0>(void *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return SliceIteratorReducer.parse(_:context:)(a1, a2, a3);
}

uint64_t sub_2588C4CB8(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v5 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (v10 <= 0x7FFFFFFF) {
    unsigned int v10 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(v4 - 8) + 64) + v9;
  uint64_t v12 = *(void *)(v7 + 64) + 7;
  if (v10 < a2)
  {
    unint64_t v13 = ((v12 + (v11 & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v14 = a2 - v10;
    uint64_t v15 = v13 & 0xFFFFFFF8;
    if ((v13 & 0xFFFFFFF8) != 0) {
      unsigned int v16 = 2;
    }
    else {
      unsigned int v16 = v14 + 1;
    }
    if (v16 >= 0x10000) {
      unsigned int v17 = 4;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v16 < 0x100) {
      unsigned int v17 = 1;
    }
    if (v16 >= 2) {
      uint64_t v18 = v17;
    }
    else {
      uint64_t v18 = 0;
    }
    switch(v18)
    {
      case 1:
        int v19 = *((unsigned __int8 *)a1 + v13);
        if (!v19) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v19 = *(unsigned __int16 *)((char *)a1 + v13);
        if (v19) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588C4E90);
      case 4:
        int v19 = *(int *)((char *)a1 + v13);
        if (!v19) {
          break;
        }
LABEL_24:
        int v21 = v19 - 1;
        if (v15)
        {
          int v21 = 0;
          int v22 = *a1;
        }
        else
        {
          int v22 = 0;
        }
        return v10 + (v22 | v21) + 1;
      default:
        break;
    }
  }
  if (v6 == v10) {
    return (*(uint64_t (**)(int *, uint64_t, uint64_t))(v5 + 48))(a1, v6, v4);
  }
  unint64_t v23 = ((unint64_t)a1 + v11) & ~v9;
  if (v8 == v10) {
    return (*(uint64_t (**)(unint64_t))(v7 + 48))(v23);
  }
  unint64_t v24 = *(void *)((v12 + v23) & 0xFFFFFFFFFFFFFFF8);
  if (v24 >= 0xFFFFFFFF) {
    LODWORD(v24) = -1;
  }
  return (v24 + 1);
}

void sub_2588C4EA4(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(v8 - 8) + 64) + 7;
  unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v12 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_19:
      switch(v19)
      {
        case 1:
          a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)&a1[v15] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)&a1[v15] = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v7 == v12)
            {
              unint64_t v23 = *(void (**)(void))(v6 + 56);
              v23();
            }
            else
            {
              unint64_t v24 = (unint64_t)&a1[v13] & ~v11;
              if (v10 == v12)
              {
                uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
                v25(v24);
              }
              else
              {
                uint64_t v26 = (void *)((v14 + v24) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v27 = a2 ^ 0x80000000;
                  v26[1] = 0;
                }
                else
                {
                  uint64_t v27 = a2 - 1;
                }
                *uint64_t v26 = v27;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v16 = a3 - v12;
    if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = v16 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_19;
    }
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v21 = v20;
  }
  else {
    int v21 = 1;
  }
  if (((v14 + (v13 & ~v11)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v22 = ~v12 + a2;
    bzero(a1, ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *(_DWORD *)a1 = v22;
  }
  switch(v19)
  {
    case 1:
      a1[v15] = v21;
      break;
    case 2:
      *(_WORD *)&a1[v15] = v21;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x2588C513CLL);
    case 4:
      *(_DWORD *)&a1[v15] = v21;
      break;
    default:
      return;
  }
}

uint64_t sub_2588C5164()
{
  type metadata accessor for SliceIteratorReducer();
  return swift_getWitnessTable();
}

uint64_t _s15ParsingInternal9ByteCountV5countACyxGx_tcfC_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t ByteRangeCount.init(minimum:maximum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for ByteRangeCount() + 36);
  return v9(v7, a2, a3);
}

uint64_t type metadata accessor for ByteRangeCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Bytes(maximum:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = 0;
  a2[1] = result;
  return result;
}

uint64_t (*ByteCount.count.modify())()
{
  return nullsub_1;
}

uint64_t ByteCount.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588C54AC(a1, a2, a3, (uint64_t (*)(void))sub_2588C71D8);
}

uint64_t sub_2588C5314@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588C552C((uint64_t (*)(void))sub_2588C71D8, a1);
}

uint64_t (*ByteMinCount.minimum.modify())()
{
  return nullsub_1;
}

uint64_t ByteMinCount.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588C54AC(a1, a2, a3, (uint64_t (*)(void))sub_2588C5588);
}

uint64_t sub_2588C5394@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588C552C((uint64_t (*)(void))sub_2588C5588, a1);
}

uint64_t (*ByteRangeCount.minimum.modify())()
{
  return nullsub_1;
}

uint64_t ByteRangeCount.maximum.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t ByteRangeCount.maximum.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*ByteRangeCount.maximum.modify())()
{
  return nullsub_1;
}

uint64_t ByteRangeCount.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588C54AC(a1, a2, a3, (uint64_t (*)(void))sub_2588C5F44);
}

uint64_t sub_2588C54AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v6 = a4();
  if (!v5)
  {
    uint64_t v4 = v6;
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2588C5500@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588C552C((uint64_t (*)(void))sub_2588C5F44, a1);
}

uint64_t sub_2588C552C@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t bytes(count:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t bytes(minimum:maximum:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  if (a3) {
    a2 = 0;
  }
  *(void *)a4 = result;
  *(void *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 16) = (a3 & 1) == 0;
  return result;
}

uint64_t sub_2588C5588(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v112 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) + 8);
  uint64_t v104 = *(void *)(*(void *)(v5 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness, v6, v7, v8);
  v102[2] = (char *)v102 - v10;
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9, v12, v13, v14);
  uint64_t v105 = (char *)v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v15, v17, v18, v19);
  uint64_t v106 = (char *)v102 - v21;
  uint64_t v25 = MEMORY[0x270FA5388](v20, v22, v23, v24);
  uint64_t v111 = (char *)v102 - v26;
  uint64_t v30 = MEMORY[0x270FA5388](v25, v27, v28, v29);
  uint64_t v110 = (char *)v102 - v31;
  uint64_t v35 = MEMORY[0x270FA5388](v30, v32, v33, v34);
  uint64_t v108 = (char *)v102 - v36;
  uint64_t v40 = MEMORY[0x270FA5388](v35, v37, v38, v39);
  uint64_t v42 = (char *)v102 - v41;
  uint64_t v46 = MEMORY[0x270FA5388](v40, v43, v44, v45);
  uint64_t v48 = (char *)v102 - v47;
  MEMORY[0x270FA5388](v46, v49, v50, v51);
  uint64_t v53 = (char *)v102 - v52;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v109 = v3;
  v54((char *)v102 - v52, v3, v4);
  char v55 = sub_2588F03D8();
  uint64_t v114 = (void (*)(char *, char *, uint64_t))v54;
  v54(v48, (uint64_t)v53, v4);
  uint64_t v56 = v5;
  BOOL v57 = (v55 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v107 = v11;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v11 + 8);
  v58(v48, v4);
  v114(v42, v53, v4);
  uint64_t v113 = v58;
  if (!v57)
  {
    v58(v42, v4);
    goto LABEL_9;
  }
  int64_t v115 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() < 64)
    {
LABEL_36:
      uint64_t v88 = sub_2588F03B8();
      uint64_t v58 = v113;
      v113(v42, v4);
      if (v88 < v115) {
        goto LABEL_44;
      }
      goto LABEL_9;
    }
LABEL_32:
    sub_2588C1FE0();
    uint64_t v85 = v108;
    sub_2588F0368();
    char v86 = sub_2588F01E8();
    uint64_t v87 = v85;
    uint64_t v58 = v113;
    v113(v87, v4);
    v58(v42, v4);
    if (v86) {
      goto LABEL_44;
    }
    goto LABEL_9;
  }
  char v71 = sub_2588F03D8();
  v102[1] = v56;
  uint64_t v72 = sub_2588F03C8();
  if ((v71 & 1) == 0)
  {
    if (v72 >= 64)
    {
      uint64_t v58 = v113;
      v113(v42, v4);
      goto LABEL_9;
    }
    goto LABEL_36;
  }
  if (v72 > 64) {
    goto LABEL_32;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v93 = v108;
  sub_2588F0498();
  char v94 = sub_2588F01E8();
  unint64_t v95 = v93;
  uint64_t v96 = v113;
  v113(v95, v4);
  uint64_t v97 = v105;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v105, v42, v4);
  if (v94)
  {
    v96(v97, v4);
    v96(v53, v4);
    goto LABEL_45;
  }
  uint64_t v98 = v97;
  int64_t v99 = v115;
  uint64_t v100 = sub_2588F03B8();
  v96(v98, v4);
  BOOL v101 = v100 < v99;
  uint64_t v58 = v96;
  if (v101)
  {
LABEL_44:
    v58(v53, v4);
    goto LABEL_45;
  }
LABEL_9:
  uint64_t v59 = sub_2588F03C8();
  char v60 = v110;
  uint64_t v61 = v114;
  v114(v110, v53, v4);
  if (v59 < 65)
  {
    uint64_t v69 = sub_2588F03C8();
    v58(v60, v4);
    uint64_t v62 = v111;
    if (v69 != 64)
    {
      v61(v111, v53, v4);
      goto LABEL_24;
    }
    char v70 = sub_2588F03D8();
    v61(v62, v53, v4);
    if (v70) {
      goto LABEL_24;
    }
  }
  else
  {
    v58(v60, v4);
    uint64_t v62 = v111;
    v61(v111, v53, v4);
  }
  int64_t v115 = 0x7FFFFFFFFFFFFFFFLL;
  char v63 = sub_2588F03D8();
  uint64_t v64 = sub_2588F03C8();
  if ((v63 & 1) == 0)
  {
    if (v64 > 63)
    {
      uint64_t v117 = 0x7FFFFFFFFFFFFFFFLL;
      unint64_t v89 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v108, v62, v4);
      sub_2588C1FE0();
      char v90 = v106;
      sub_2588F0368();
      char v91 = sub_2588F01E8();
      uint64_t v92 = v90;
      uint64_t v58 = v113;
      v113(v92, v4);
      v58(v89, v4);
      if (v91) {
        goto LABEL_44;
      }
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  if (v64 <= 64)
  {
LABEL_22:
    sub_2588F03B8();
LABEL_24:
    int v73 = v62;
    uint64_t v58 = v113;
    v113(v73, v4);
    goto LABEL_25;
  }
  sub_2588C1FE0();
  unint64_t v65 = v108;
  sub_2588F0368();
  char v66 = sub_2588F01E8();
  uint64_t v67 = v113;
  v113(v65, v4);
  uint64_t v68 = v62;
  uint64_t v58 = v67;
  v67(v68, v4);
  if (v66) {
    goto LABEL_44;
  }
LABEL_25:
  uint64_t v74 = sub_2588F03B8();
  uint64_t v75 = (uint64_t (*)(char *, uint64_t))v58;
  uint64_t v76 = v74;
  uint64_t result = v75(v53, v4);
  if (v76 < 0)
  {
LABEL_45:
    uint64_t v79 = *v112;
    int64_t v115 = 0;
    unint64_t v116 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    sub_2588F0488();
    int64_t v81 = v115;
    unint64_t v82 = v116;
    sub_2588BBC70();
    swift_allocError();
    *char v83 = 2;
    goto LABEL_46;
  }
  uint64_t v79 = *v112;
  uint64_t v78 = v112[1];
  uint64_t v80 = v78 - *v112;
  if (__OFSUB__(v78, *v112))
  {
    __break(1u);
  }
  else
  {
    if (v80 < v76)
    {
      int64_t v115 = 0;
      unint64_t v116 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v115 = 0xD000000000000024;
      unint64_t v116 = 0x8000000258901A00;
      uint64_t v117 = v76;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v81 = v115;
      unint64_t v82 = v116;
      sub_2588BBC70();
      swift_allocError();
      *char v83 = 0;
LABEL_46:
      v83[1] = v79;
      v83[2] = v81;
      v83[3] = v82;
      v83[4] = 0;
      swift_willThrow();
      return v79;
    }
    uint64_t v84 = v80 + v79;
    if (v80 + v79 >= v79 && v78 >= v84)
    {
      void *v112 = v84;
      return v79;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588C5F44(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v197 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v188 = a3;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v184 = *(void *)(*(void *)(v6 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = MEMORY[0x270FA5388](AssociatedTypeWitness, v7, v8, v9);
  uint64_t v182 = (char *)&v179 - v11;
  uint64_t v12 = *(void *)(v5 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v10, v13, v14, v15);
  uint64_t v180 = (char *)&v179 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v16, v18, v19, v20);
  uint64_t v189 = (char *)&v179 - v22;
  uint64_t v26 = MEMORY[0x270FA5388](v21, v23, v24, v25);
  uint64_t v186 = (char *)&v179 - v27;
  uint64_t v31 = MEMORY[0x270FA5388](v26, v28, v29, v30);
  uint64_t v191 = (char *)&v179 - v32;
  uint64_t v36 = MEMORY[0x270FA5388](v31, v33, v34, v35);
  uint64_t v187 = (char *)&v179 - v37;
  uint64_t v41 = MEMORY[0x270FA5388](v36, v38, v39, v40);
  uint64_t v190 = (char *)&v179 - v42;
  uint64_t v46 = MEMORY[0x270FA5388](v41, v43, v44, v45);
  uint64_t v181 = (char *)&v179 - v47;
  uint64_t v51 = MEMORY[0x270FA5388](v46, v48, v49, v50);
  uint64_t v185 = (char *)&v179 - v52;
  uint64_t v56 = MEMORY[0x270FA5388](v51, v53, v54, v55);
  uint64_t v194 = (char *)&v179 - v57;
  uint64_t v61 = MEMORY[0x270FA5388](v56, v58, v59, v60);
  uint64_t v196 = (char *)&v179 - v62;
  uint64_t v66 = MEMORY[0x270FA5388](v61, v63, v64, v65);
  uint64_t v192 = (char *)&v179 - v67;
  uint64_t v71 = MEMORY[0x270FA5388](v66, v68, v69, v70);
  int v73 = (char *)&v179 - v72;
  uint64_t v77 = MEMORY[0x270FA5388](v71, v74, v75, v76);
  uint64_t v79 = (char *)&v179 - v78;
  MEMORY[0x270FA5388](v77, v80, v81, v82);
  uint64_t v84 = (char *)&v179 - v83;
  uint64_t v85 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v195 = v3;
  v85((char *)&v179 - v83, v3, v5);
  char v86 = sub_2588F03D8();
  uint64_t v199 = v12 + 16;
  uint64_t v200 = (void (*)(char *, char *, uint64_t))v85;
  v85(v79, (uint64_t)v84, v5);
  uint64_t v87 = v6;
  BOOL v88 = (v86 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v193 = v12;
  unint64_t v89 = (char *)(v12 + 8);
  char v90 = *(void (**)(char *, uint64_t))(v12 + 8);
  v90(v79, v5);
  v200(v73, v84, v5);
  uint64_t v198 = v90;
  if (!v88)
  {
    v90(v73, v5);
    uint64_t v92 = v196;
    goto LABEL_9;
  }
  int64_t v201 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    uint64_t v91 = sub_2588F03C8();
    uint64_t v92 = v196;
    if (v91 < 64)
    {
LABEL_29:
      uint64_t v114 = sub_2588F03B8();
      char v90 = v198;
      v198(v73, v5);
      if (v114 < v201) {
        goto LABEL_71;
      }
      goto LABEL_9;
    }
LABEL_25:
    sub_2588C1FE0();
    uint64_t v111 = v192;
    sub_2588F0368();
    char v112 = sub_2588F01E8();
    uint64_t v113 = v111;
    char v90 = v198;
    v198(v113, v5);
    v90(v73, v5);
    if (v112) {
      goto LABEL_71;
    }
    goto LABEL_9;
  }
  char v107 = sub_2588F03D8();
  uint64_t v179 = v87;
  uint64_t v108 = sub_2588F03C8();
  uint64_t v109 = v193;
  uint64_t v92 = v196;
  if ((v107 & 1) == 0)
  {
    if (v108 >= 64)
    {
      char v90 = v198;
      v198(v73, v5);
      goto LABEL_9;
    }
    goto LABEL_29;
  }
  if (v108 > 64) {
    goto LABEL_25;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v145 = v192;
  sub_2588F0498();
  char v146 = sub_2588F01E8();
  uint64_t v147 = v145;
  uint64_t v148 = v198;
  v198(v147, v5);
  uint64_t v149 = v181;
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v181, v73, v5);
  if (v146)
  {
    v148(v149, v5);
    v148(v84, v5);
    goto LABEL_72;
  }
  int64_t v168 = v201;
  uint64_t v169 = sub_2588F03B8();
  v148(v149, v5);
  BOOL v170 = v169 < v168;
  char v90 = v148;
  uint64_t v92 = v196;
  if (v170) {
    goto LABEL_71;
  }
LABEL_9:
  uint64_t v93 = sub_2588F03C8();
  char v94 = v92;
  unint64_t v95 = v92;
  uint64_t v96 = v200;
  v200(v94, v84, v5);
  if (v93 >= 65)
  {
    v90(v95, v5);
    uint64_t v97 = v194;
    v96(v194, v84, v5);
    uint64_t v98 = v97;
    goto LABEL_11;
  }
  uint64_t v105 = sub_2588F03C8();
  v90(v95, v5);
  if (v105 != 64)
  {
    uint64_t v98 = v194;
    v200(v194, v84, v5);
LABEL_24:
    v90(v98, v5);
    goto LABEL_33;
  }
  char v106 = sub_2588F03D8();
  uint64_t v98 = v194;
  v200(v194, v84, v5);
  if (v106) {
    goto LABEL_24;
  }
LABEL_11:
  int64_t v99 = v89;
  int64_t v201 = 0x7FFFFFFFFFFFFFFFLL;
  char v100 = sub_2588F03D8();
  uint64_t v101 = sub_2588F03C8();
  if (v100)
  {
    if (v101 > 64)
    {
      sub_2588C1FE0();
      unint64_t v102 = v192;
      sub_2588F0368();
      char v103 = sub_2588F01E8();
      unint64_t v89 = v99;
      char v90 = v198;
      v198(v102, v5);
      uint64_t v104 = v98;
      goto LABEL_32;
    }
    goto LABEL_21;
  }
  if (v101 <= 63)
  {
LABEL_21:
    uint64_t v110 = sub_2588F03B8();
    unint64_t v89 = v99;
    char v90 = v198;
    v198(v98, v5);
    if (v201 >= v110) {
      goto LABEL_33;
    }
LABEL_71:
    v90(v84, v5);
    goto LABEL_72;
  }
  uint64_t v203 = 0x7FFFFFFFFFFFFFFFLL;
  int64_t v115 = v192;
  (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v192, v98, v5);
  sub_2588C1FE0();
  unint64_t v116 = v185;
  sub_2588F0368();
  char v103 = sub_2588F01E8();
  uint64_t v117 = v116;
  unint64_t v89 = v99;
  char v90 = v198;
  v198(v117, v5);
  uint64_t v104 = v115;
LABEL_32:
  v90(v104, v5);
  if (v103) {
    goto LABEL_71;
  }
LABEL_33:
  uint64_t v118 = sub_2588F03B8();
  v90(v84, v5);
  if (v118 < 0)
  {
LABEL_72:
    uint64_t v156 = *v197;
    int64_t v201 = 0;
    unint64_t v202 = 0xE000000000000000;
    sub_2588F0408();
LABEL_86:
    sub_2588F0228();
    sub_2588F0488();
    int64_t v158 = v201;
    unint64_t v159 = v202;
    sub_2588BBC70();
    swift_allocError();
    void *v160 = 2;
    goto LABEL_87;
  }
  uint64_t v119 = v190;
  v195 += *(int *)(v188 + 36);
  uint64_t v196 = (char *)v118;
  uint64_t v120 = v200;
  ((void (*)(char *))v200)(v190);
  char v121 = sub_2588F03D8();
  uint64_t v122 = v187;
  v120(v187, v119, v5);
  if ((v121 & 1) == 0)
  {
    uint64_t v132 = v122;
    uint64_t v125 = v198;
    v198(v132, v5);
    uint64_t v126 = v191;
    v120(v191, v119, v5);
    uint64_t v127 = v189;
    goto LABEL_40;
  }
  uint64_t v123 = sub_2588F03C8();
  unint64_t v124 = v122;
  uint64_t v125 = v198;
  v198(v124, v5);
  uint64_t v126 = v191;
  v120(v191, v119, v5);
  uint64_t v127 = v189;
  if (v123 < 65)
  {
LABEL_40:
    v125(v126, v5);
    goto LABEL_41;
  }
  int64_t v201 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    uint64_t v128 = v191;
    if (sub_2588F03C8() < 64)
    {
      uint64_t v129 = sub_2588F03B8();
      uint64_t v130 = v128;
      uint64_t v131 = v5;
LABEL_79:
      uint64_t v141 = v198;
      v198(v130, v131);
      if (v129 < v201) {
        goto LABEL_84;
      }
      goto LABEL_41;
    }
    sub_2588C1FE0();
    uint64_t v171 = v192;
    sub_2588F0368();
    char v165 = sub_2588F01E8();
    uint64_t v166 = v171;
    uint64_t v167 = v5;
    goto LABEL_74;
  }
  uint64_t v194 = v89;
  char v162 = sub_2588F03D8();
  uint64_t v163 = sub_2588F03C8();
  if ((v162 & 1) == 0)
  {
    if (v163 >= 64)
    {
      v198(v191, v5);
      goto LABEL_41;
    }
    uint64_t v172 = v191;
    uint64_t v129 = sub_2588F03B8();
    uint64_t v130 = v172;
    uint64_t v131 = v5;
    goto LABEL_79;
  }
  if (v163 > 64)
  {
    sub_2588C1FE0();
    uint64_t v164 = v192;
    sub_2588F0368();
    uint64_t v128 = v191;
    char v165 = sub_2588F01E8();
    uint64_t v166 = v164;
    uint64_t v167 = v5;
LABEL_74:
    uint64_t v141 = v198;
    v198(v166, v167);
    v141(v128, v5);
    if (v165) {
      goto LABEL_84;
    }
    goto LABEL_41;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v173 = v192;
  sub_2588F0498();
  uint64_t v174 = v191;
  char v175 = sub_2588F01E8();
  uint64_t v141 = v198;
  v198(v173, v5);
  uint64_t v176 = v180;
  (*(void (**)(char *, char *, uint64_t))(v193 + 32))(v180, v174, v5);
  if (v175)
  {
    v141(v176, v5);
    goto LABEL_84;
  }
  int64_t v177 = v201;
  uint64_t v178 = sub_2588F03B8();
  v141(v176, v5);
  if (v178 < v177) {
    goto LABEL_84;
  }
LABEL_41:
  uint64_t v133 = sub_2588F03C8();
  uint64_t v134 = v186;
  uint64_t v135 = v200;
  v200(v186, v119, v5);
  if (v133 >= 65)
  {
    v198(v134, v5);
    v135(v127, v119, v5);
    uint64_t v136 = v193;
    goto LABEL_43;
  }
  uint64_t v143 = sub_2588F03C8();
  v198(v134, v5);
  uint64_t v136 = v193;
  if (v143 != 64)
  {
    v200(v127, v119, v5);
LABEL_52:
    uint64_t v141 = v198;
    v198(v127, v5);
    goto LABEL_57;
  }
  char v144 = sub_2588F03D8();
  v200(v127, v119, v5);
  if (v144) {
    goto LABEL_52;
  }
LABEL_43:
  int64_t v201 = 0x7FFFFFFFFFFFFFFFLL;
  char v137 = sub_2588F03D8();
  uint64_t v138 = sub_2588F03C8();
  if (v137)
  {
    if (v138 > 64)
    {
      sub_2588C1FE0();
      uint64_t v139 = v192;
      sub_2588F0368();
      char v140 = sub_2588F01E8();
      uint64_t v141 = v198;
      v198(v139, v5);
      uint64_t v142 = v127;
      goto LABEL_56;
    }
LABEL_50:
    sub_2588F03B8();
    uint64_t v141 = v198;
    v198(v127, v5);
    goto LABEL_57;
  }
  if (v138 <= 63) {
    goto LABEL_50;
  }
  uint64_t v203 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v150 = v192;
  (*(void (**)(char *, char *, uint64_t))(v136 + 32))(v192, v127, v5);
  sub_2588C1FE0();
  uint64_t v151 = v185;
  sub_2588F0368();
  char v140 = sub_2588F01E8();
  uint64_t v141 = v198;
  v198(v151, v5);
  uint64_t v142 = v150;
LABEL_56:
  v141(v142, v5);
  if (v140)
  {
LABEL_84:
    v141(v119, v5);
    uint64_t v154 = v196;
    goto LABEL_85;
  }
LABEL_57:
  uint64_t v152 = sub_2588F03B8();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v141)(v119, v5);
  uint64_t v154 = v196;
  if (v152 < (uint64_t)v196)
  {
LABEL_85:
    uint64_t v156 = *v197;
    int64_t v201 = 0;
    unint64_t v202 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    uint64_t v203 = (uint64_t)v154;
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  uint64_t v156 = *v197;
  uint64_t v155 = v197[1];
  uint64_t v157 = v155 - *v197;
  if (__OFSUB__(v155, *v197))
  {
    __break(1u);
  }
  else
  {
    if (v157 < (uint64_t)v196)
    {
      int64_t v201 = 0;
      unint64_t v202 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v201 = 0xD000000000000024;
      unint64_t v202 = 0x8000000258901A00;
      uint64_t v203 = (uint64_t)v154;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v158 = v201;
      unint64_t v159 = v202;
      sub_2588BBC70();
      swift_allocError();
      void *v160 = 0;
LABEL_87:
      v160[1] = v156;
      v160[2] = v158;
      v160[3] = v159;
      v160[4] = 0;
      swift_willThrow();
      return v156;
    }
    if (v152 < v157) {
      uint64_t v157 = v152;
    }
    uint64_t v161 = v157 + v156;
    if (v157 + v156 >= v156 && v155 >= v161)
    {
      void *v197 = v161;
      return v156;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588C71D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v111 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) + 8);
  uint64_t v103 = *(void *)(*(void *)(v5 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = MEMORY[0x270FA5388](AssociatedTypeWitness, v6, v7, v8);
  v101[2] = (char *)v101 - v10;
  uint64_t v11 = *(void *)(v4 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v9, v12, v13, v14);
  uint64_t v104 = (char *)v101 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = MEMORY[0x270FA5388](v15, v17, v18, v19);
  uint64_t v105 = (char *)v101 - v21;
  uint64_t v25 = MEMORY[0x270FA5388](v20, v22, v23, v24);
  uint64_t v110 = (char *)v101 - v26;
  uint64_t v30 = MEMORY[0x270FA5388](v25, v27, v28, v29);
  uint64_t v109 = (char *)v101 - v31;
  uint64_t v35 = MEMORY[0x270FA5388](v30, v32, v33, v34);
  char v107 = (char *)v101 - v36;
  uint64_t v40 = MEMORY[0x270FA5388](v35, v37, v38, v39);
  uint64_t v42 = (char *)v101 - v41;
  uint64_t v46 = MEMORY[0x270FA5388](v40, v43, v44, v45);
  uint64_t v48 = (char *)v101 - v47;
  MEMORY[0x270FA5388](v46, v49, v50, v51);
  uint64_t v53 = (char *)v101 - v52;
  uint64_t v54 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  uint64_t v108 = v3;
  v54((char *)v101 - v52, v3, v4);
  char v55 = sub_2588F03D8();
  uint64_t v113 = (void (*)(char *, char *, uint64_t))v54;
  v54(v48, (uint64_t)v53, v4);
  uint64_t v56 = v5;
  BOOL v57 = (v55 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v106 = v11;
  uint64_t v58 = *(void (**)(char *, uint64_t))(v11 + 8);
  v58(v48, v4);
  v113(v42, v53, v4);
  char v112 = v58;
  if (!v57)
  {
    v58(v42, v4);
    goto LABEL_9;
  }
  int64_t v114 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() < 64)
    {
LABEL_36:
      uint64_t v87 = sub_2588F03B8();
      uint64_t v58 = v112;
      v112(v42, v4);
      if (v87 < v114) {
        goto LABEL_44;
      }
      goto LABEL_9;
    }
LABEL_32:
    sub_2588C1FE0();
    uint64_t v84 = v107;
    sub_2588F0368();
    char v85 = sub_2588F01E8();
    char v86 = v84;
    uint64_t v58 = v112;
    v112(v86, v4);
    v58(v42, v4);
    if (v85) {
      goto LABEL_44;
    }
    goto LABEL_9;
  }
  char v71 = sub_2588F03D8();
  v101[1] = v56;
  uint64_t v72 = sub_2588F03C8();
  if ((v71 & 1) == 0)
  {
    if (v72 >= 64)
    {
      uint64_t v58 = v112;
      v112(v42, v4);
      goto LABEL_9;
    }
    goto LABEL_36;
  }
  if (v72 > 64) {
    goto LABEL_32;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v92 = v107;
  sub_2588F0498();
  char v93 = sub_2588F01E8();
  char v94 = v92;
  unint64_t v95 = v112;
  v112(v94, v4);
  uint64_t v96 = v104;
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v104, v42, v4);
  if (v93)
  {
    v95(v96, v4);
    v95(v53, v4);
    goto LABEL_45;
  }
  uint64_t v97 = v96;
  int64_t v98 = v114;
  uint64_t v99 = sub_2588F03B8();
  v95(v97, v4);
  BOOL v100 = v99 < v98;
  uint64_t v58 = v95;
  if (v100)
  {
LABEL_44:
    v58(v53, v4);
    goto LABEL_45;
  }
LABEL_9:
  uint64_t v59 = sub_2588F03C8();
  uint64_t v60 = v109;
  uint64_t v61 = v113;
  v113(v109, v53, v4);
  if (v59 < 65)
  {
    uint64_t v69 = sub_2588F03C8();
    v58(v60, v4);
    uint64_t v62 = v110;
    if (v69 != 64)
    {
      v61(v110, v53, v4);
      goto LABEL_24;
    }
    char v70 = sub_2588F03D8();
    v61(v62, v53, v4);
    if (v70) {
      goto LABEL_24;
    }
  }
  else
  {
    v58(v60, v4);
    uint64_t v62 = v110;
    v61(v110, v53, v4);
  }
  int64_t v114 = 0x7FFFFFFFFFFFFFFFLL;
  char v63 = sub_2588F03D8();
  uint64_t v64 = sub_2588F03C8();
  if ((v63 & 1) == 0)
  {
    if (v64 > 63)
    {
      uint64_t v116 = 0x7FFFFFFFFFFFFFFFLL;
      BOOL v88 = v107;
      (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v107, v62, v4);
      sub_2588C1FE0();
      unint64_t v89 = v105;
      sub_2588F0368();
      char v90 = sub_2588F01E8();
      uint64_t v91 = v89;
      uint64_t v58 = v112;
      v112(v91, v4);
      v58(v88, v4);
      if (v90) {
        goto LABEL_44;
      }
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  if (v64 <= 64)
  {
LABEL_22:
    sub_2588F03B8();
LABEL_24:
    int v73 = v62;
    uint64_t v58 = v112;
    v112(v73, v4);
    goto LABEL_25;
  }
  sub_2588C1FE0();
  uint64_t v65 = v107;
  sub_2588F0368();
  char v66 = sub_2588F01E8();
  uint64_t v67 = v112;
  v112(v65, v4);
  uint64_t v68 = v62;
  uint64_t v58 = v67;
  v67(v68, v4);
  if (v66) {
    goto LABEL_44;
  }
LABEL_25:
  uint64_t v74 = sub_2588F03B8();
  uint64_t v75 = (uint64_t (*)(char *, uint64_t))v58;
  uint64_t v76 = v74;
  uint64_t result = v75(v53, v4);
  if (v76 < 0)
  {
LABEL_45:
    uint64_t v79 = *v111;
    int64_t v114 = 0;
    unint64_t v115 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    sub_2588F0488();
    int64_t v80 = v114;
    unint64_t v81 = v115;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v82 = 2;
    goto LABEL_46;
  }
  uint64_t v79 = *v111;
  uint64_t v78 = v111[1];
  if (__OFSUB__(v78, *v111))
  {
    __break(1u);
  }
  else
  {
    if (v78 - *v111 < v76)
    {
      int64_t v114 = 0;
      unint64_t v115 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v114 = 0xD000000000000024;
      unint64_t v115 = 0x8000000258901A00;
      uint64_t v116 = v76;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v80 = v114;
      unint64_t v81 = v115;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v82 = 0;
LABEL_46:
      v82[1] = v79;
      v82[2] = v80;
      v82[3] = v81;
      v82[4] = 0;
      swift_willThrow();
      return v79;
    }
    uint64_t v83 = v79 + v76;
    if (v79 + v76 >= v79 && v78 >= v83)
    {
      void *v111 = v83;
      return v79;
    }
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ByteCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588C7BB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588C7D14(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588C7F2CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for ByteMinCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588C7F6C()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588C7FFC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  uint64_t v9 = ~v8;
  uint64_t v10 = v7 + v8;
  unint64_t v11 = ((v7 + v8) & ~v8) + v7;
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v11 > 0x18)
  {
    uint64_t v14 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v14 + ((v8 + 16) & v9));
    swift_retain();
  }
  else
  {
    int v15 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16);
    v15(a1, a2, v5);
    v15((uint64_t *)(((unint64_t)v4 + v10) & v9), (uint64_t *)(((unint64_t)a2 + v10) & v9), v5);
  }
  return v4;
}

uint64_t sub_2588C8108(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(v3 - 8) + 8;
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))v6;
  (*(void (**)(uint64_t, uint64_t))v6)(a1, v3);
  unint64_t v4 = (*(void *)(v6 + 56) + a1 + *(unsigned __int8 *)(v6 + 72)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 72);
  return v7(v4, v3);
}

unint64_t sub_2588C81A4(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), (*(void *)(v8 + 48) + *(unsigned __int8 *)(v8 + 64) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 64), v5);
  return a1;
}

unint64_t sub_2588C8238(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 24);
  uint64_t v8 = v6 + 24;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), (*(void *)(v8 + 40) + *(unsigned __int8 *)(v8 + 56) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 56), v5);
  return a1;
}

unint64_t sub_2588C82CC(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 32);
  uint64_t v8 = v6 + 32;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), (*(void *)(v8 + 32) + *(unsigned __int8 *)(v8 + 48) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 48), v5);
  return a1;
}

unint64_t sub_2588C8360(unint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 40);
  uint64_t v8 = v6 + 40;
  v7(a1, a2, v5);
  v7((*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a1) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), (*(void *)(v8 + 24) + *(unsigned __int8 *)(v8 + 40) + a2) & ~(unint64_t)*(unsigned __int8 *)(v8 + 40), v5);
  return a1;
}

uint64_t sub_2588C83F4(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_2588C8560(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588C8788);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

_UNKNOWN **sub_2588C87B0()
{
  return &protocol witness table for ByteRangeCount<A>;
}

_UNKNOWN **sub_2588C87BC()
{
  return &protocol witness table for ByteCount<A>;
}

unint64_t sub_2588C87CC()
{
  unint64_t result = qword_26A0A1EC0;
  if (!qword_26A0A1EC0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A0A1EC8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A1EC0);
  }
  return result;
}

uint64_t ContextfulParser.validate(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a3);
  int v13 = (void *)(a5 + *(int *)(type metadata accessor for Validator() + 36));
  *int v13 = a1;
  v13[1] = a2;
  return swift_retain();
}

uint64_t Validator.init(base:isValid:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for Validator();
  BOOL v9 = (void *)(a5 + *(int *)(result + 36));
  *BOOL v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for Validator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Validator.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Validator.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*Validator.base.modify())()
{
  return nullsub_1;
}

uint64_t Validator.isValid.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t Validator.isValid.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 36));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*Validator.isValid.modify())()
{
  return nullsub_1;
}

double Validator.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588C8D50);
}

uint64_t sub_2588C8BB8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a3, a4, a5);
  if (!v6)
  {
    uint64_t v11 = type metadata accessor for Validator();
    uint64_t result = (*(uint64_t (**)(uint64_t))(a2 + *(int *)(v11 + 36)))(a6);
    if ((result & 1) == 0)
    {
      uint64_t v12 = *a1;
      sub_2588F0408();
      sub_2588F0228();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      sub_2588F0478();
      sub_2588F0228();
      sub_2588BBC70();
      swift_allocError();
      *unsigned int v14 = 3;
      v14[1] = v12;
      v14[2] = 0;
      v14[3] = 0xE000000000000000;
      v14[4] = 0;
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a6, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_2588C8D50@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588C8BB8(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

double sub_2588C8D70()
{
  return Validator.parse(_:context:)();
}

uint64_t sub_2588C8D88()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588C8E24(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588C8F70);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588C8F84(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588C9164);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588C918C()
{
  type metadata accessor for Validator();
  return swift_getWitnessTable();
}

uint64_t ParserIterator.collectUntilEnd()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a1);
  *(void *)a5 = 0;
  *(unsigned char *)(a5 + 8) = 1;
  uint64_t v11 = type metadata accessor for IteratorCollector();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5 + *(int *)(v11 + 36), v10, a1);
}

uint64_t IteratorCollector.init(count:iterator:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  uint64_t v7 = a5 + *(int *)(type metadata accessor for IteratorCollector() + 36);
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  return v8(v7, a3, a4);
}

uint64_t type metadata accessor for IteratorCollector()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ParserIterator.collect(count:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, v5, a2);
  *(void *)a5 = a1;
  *(unsigned char *)(a5 + 8) = 0;
  uint64_t v12 = type metadata accessor for IteratorCollector();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(a5 + *(int *)(v12 + 36), v11, a2);
}

uint64_t IteratorCollector.count.getter()
{
  return *(void *)v0;
}

uint64_t IteratorCollector.count.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*IteratorCollector.count.modify())()
{
  return nullsub_1;
}

uint64_t IteratorCollector.iterator.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t IteratorCollector.iterator.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*IteratorCollector.iterator.modify())()
{
  return nullsub_1;
}

uint64_t IteratorCollector.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v39 = a3;
  uint64_t v38 = a1;
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v36 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = sub_2588F0358();
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v32 = v6;
  uint64_t v10 = MEMORY[0x270FA5388](v6, v7, v8, v9);
  uint64_t v12 = (char *)&v31 - v11;
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v10, v14, v15, v16);
  uint64_t v34 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v19, v20, v21);
  uint64_t v23 = (char *)&v31 - v22;
  uint64_t v24 = sub_2588F0298();
  uint64_t v37 = v4;
  uint64_t v35 = v4 + 16;
  uint64_t v41 = v24;
  uint64_t v25 = (unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48);
  uint64_t v33 = (void (**)(char *, char *, uint64_t))(v13 + 32);
  uint64_t v26 = (void (**)(char *, char *, uint64_t))(v13 + 16);
  for (i = (void (**)(char *, uint64_t))(v13 + 8); ; (*i)(v23, AssociatedTypeWitness))
  {
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = MEMORY[0x25A2CBAE0](v28, AssociatedTypeWitness);
    swift_bridgeObjectRelease();
    if (*(unsigned char *)(v40 + 8) == 1)
    {
      if (v29 == 0x7FFFFFFFFFFFFFFFLL) {
        return v41;
      }
    }
    else if (v29 >= *(void *)v40)
    {
      return v41;
    }
    (*(void (**)(uint64_t, uint64_t))(v37 + 16))(v38, v36);
    if (v3) {
      return swift_bridgeObjectRelease();
    }
    if ((*v25)(v12, 1, AssociatedTypeWitness) == 1) {
      break;
    }
    (*v33)(v23, v12, AssociatedTypeWitness);
    (*v26)(v34, v23, AssociatedTypeWitness);
    sub_2588F02C8();
    sub_2588F02B8();
  }
  (*(void (**)(char *, uint64_t))(v31 + 8))(v12, v32);
  return v41;
}

uint64_t sub_2588C9858@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t result = IteratorCollector.parse(_:context:)(a1, a2, a3);
  if (!v4) {
    *a4 = result;
  }
  return result;
}

uint64_t sub_2588C9884()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_2588C9920(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 9) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(void *)a1 = *a2;
    *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
    (*(void (**)(uint64_t, unint64_t))(v4 + 16))((a1 + v5 + 9) & ~v5, ((unint64_t)a2 + v5 + 9) & ~v5);
  }
  return v3;
}

uint64_t sub_2588C9A14(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

uint64_t sub_2588C9A50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2588C9AC8(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v4;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 24))((*(unsigned __int8 *)(v5 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v5 + 80) + 9) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_2588C9B40(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2588C9BB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))((*(unsigned __int8 *)(v4 + 80) + 9 + a1) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), (*(unsigned __int8 *)(v4 + 80) + 9 + a2) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2588C9C30(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 9) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 9) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_2588C9DAC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 9) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588C9FE0);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 9] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_2588CA008()
{
  type metadata accessor for IteratorCollector();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.collectUntilEnd()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  BOOL v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a1);
  swift_getAssociatedTypeWitness();
  sub_2588F02C8();
  swift_getWitnessTable();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5, v10, a1);
}

uint64_t CollectUntilEnd.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t ContextfulParser.collectUntilEnd<A>(into:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  BOOL v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v5, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5, v10, a2);
}

uint64_t CollectUntilEnd.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CollectUntilEnd.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CollectUntilEnd.base.modify())()
{
  return nullsub_1;
}

double CollectUntilEnd.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588CA594);
}

uint64_t sub_2588CA384@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v33 = a3;
  uint64_t v35 = a6;
  uint64_t v34 = a4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v28[0] = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  uint64_t v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v20, v21, v22);
  uint64_t v24 = (char *)v28 - v23;
  uint64_t result = sub_2588F0348();
  if (*a1 != a1[1])
  {
    v28[1] = a7;
    uint64_t v30 = a8;
    uint64_t v31 = a5;
    uint64_t v29 = *(void (**)(void *, uint64_t, uint64_t, uint64_t))(v35 + 24);
    uint64_t v26 = (void (**)(char *, char *, uint64_t))(v28[0] + 16);
    uint64_t v27 = (uint64_t (**)(char *, uint64_t))(v28[0] + 8);
    while (1)
    {
      v29(a1, v33, v34, v35);
      if (v8) {
        break;
      }
      (*v26)(v19, v24, AssociatedTypeWitness);
      sub_2588F0338();
      uint64_t result = (*v27)(v24, AssociatedTypeWitness);
      if (*a1 == a1[1]) {
        return result;
      }
    }
    return (*(uint64_t (**)(uint64_t))(*(void *)(v31 - 8) + 8))(v30);
  }
  return result;
}

uint64_t sub_2588CA594@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588CA384(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

double sub_2588CA5B8()
{
  return CollectUntilEnd.parse(_:context:)();
}

uint64_t sub_2588CA5D0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588CA72C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588CA944);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for CollectUntilEnd()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588CA984()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588CAA30()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.withRange()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, v5, a2, a3);
  unsigned int v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a1);
}

uint64_t WithRange.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t WithRange.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WithRange.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*WithRange.base.modify())()
{
  return nullsub_1;
}

uint64_t WithRange.parse(_:context:)(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v19 = a1;
  uint64_t v6 = *(void *)(a4 + 16);
  uint64_t v7 = *(void *)(a4 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v10, v11, v12);
  unsigned int v14 = (char *)&v18 - v13;
  uint64_t v15 = *a2;
  uint64_t v16 = v20;
  (*(void (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(v7 + 24))(a2, a3, v6, v7);
  if (v16) {
    return v15;
  }
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v9 + 32))(v19, v14, AssociatedTypeWitness);
  if (*a2 >= v15) {
    return v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_2588CAD6C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = WithRange.parse(_:context:)(a4, a1, a2, a3);
  if (!v4)
  {
    uint64_t v8 = result;
    uint64_t v9 = v7;
    swift_getAssociatedTypeWitness();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0A20D0);
    uint64_t result = swift_getTupleTypeMetadata2();
    uint64_t v10 = (uint64_t *)(a4 + *(int *)(result + 48));
    *uint64_t v10 = v8;
    v10[1] = v9;
  }
  return result;
}

uint64_t sub_2588CAE18(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588CAF74(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588CB18CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for WithRange()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588CB1CC()
{
  type metadata accessor for WithRange();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser<>.parse(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a3 + 24))(a1, a2, a2, a3);
}

uint64_t ContextfulParser<>.parse(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v7[2] = a3;
  v7[0] = a1;
  v7[1] = a2;
  unsigned int v5 = *(void (**)(void *))(a5 + 24);
  swift_bridgeObjectRetain();
  v5(v7);
  return swift_bridgeObjectRelease();
}

void FixedWidthIntegerParsers<>.bigEndian.getter(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

void FixedWidthIntegerParsers<>.littleEndian.getter(unsigned char *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FixedWidthIntegerParsers<>.load(endianness:)@<X0>(uint64_t result@<X0>, BOOL *a2@<X8>)
{
  *a2 = (result & 1) == 0;
  return result;
}

uint64_t FixedWidthIntegerParsers<>.load(bigEndian:)@<X0>(uint64_t result@<X0>, unsigned char *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t FixedWidthIntegerParsers<>.bigEndian(byteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 1;
  return result;
}

uint64_t FixedWidthIntegerParsers<>.littleEndian(byteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t FixedWidthIntegerParsers<>.load(endianness:byteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a2;
  *(unsigned char *)(a3 + 8) = (result & 1) == 0;
  return result;
}

uint64_t FixedWidthIntegerParsers<>.load(bigEndian:byteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(void *)a3 = a2;
  *(unsigned char *)(a3 + 8) = result;
  return result;
}

BOOL sub_2588CB334(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t sub_2588CB34C()
{
  return sub_2588F0548();
}

uint64_t sub_2588CB394()
{
  return sub_2588F0538();
}

uint64_t sub_2588CB3C0()
{
  return sub_2588F0548();
}

uint64_t static Endianness.big.getter()
{
  return 0;
}

uint64_t static Endianness.little.getter()
{
  return 1;
}

ParsingInternal::Endianness __swiftcall Endianness.init(isBigEndian:)(Swift::Bool isBigEndian)
{
  return (ParsingInternal::Endianness)!isBigEndian;
}

BOOL Endianness.isBigEndian.getter(char a1)
{
  return (a1 & 1) == 0;
}

uint64_t FixedWidthParser.init(bigEndian:)(char a1)
{
  return a1 & 1;
}

uint64_t FixedWidthIntegerParsers<>.bigEndian<A>(as:)@<X0>(uint64_t a1@<X8>)
{
  return sub_2588CB5A8(1, a1);
}

uint64_t FixedWidthIntegerParsers<>.littleEndian<A>(as:)@<X0>(uint64_t a1@<X8>)
{
  return sub_2588CB5A8(0, a1);
}

uint64_t FixedWidthIntegerParsers<>.load<A>(endianness:as:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  BOOL v5 = (a1 & 1) == 0;
  uint64_t v3 = type metadata accessor for FixedWidthParser();
  swift_getWitnessTable();
  return IntegerCast.init(base:)((uint64_t)&v5, v3, a2);
}

uint64_t FixedWidthIntegerParsers<>.load<A>(bigEndian:as:)@<X0>(char a1@<W0>, uint64_t a2@<X8>)
{
  char v5 = a1;
  uint64_t v3 = type metadata accessor for FixedWidthParser();
  swift_getWitnessTable();
  return IntegerCast.init(base:)((uint64_t)&v5, v3, a2);
}

uint64_t type metadata accessor for FixedWidthParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t FixedWidthIntegerParsers<>.load<A>(as:)@<X0>(uint64_t a1@<X8>)
{
  return sub_2588CB5A8(1, a1);
}

uint64_t sub_2588CB5A8@<X0>(char a1@<W5>, uint64_t a2@<X8>)
{
  char v5 = a1;
  uint64_t v3 = type metadata accessor for FixedWidthParser();
  swift_getWitnessTable();
  return IntegerCast.init(base:)((uint64_t)&v5, v3, a2);
}

uint64_t FixedWidthParser.bigEndian.getter(char a1)
{
  return a1 & 1;
}

uint64_t FixedWidthParser.bigEndian.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*FixedWidthParser.bigEndian.modify())()
{
  return nullsub_1;
}

uint64_t *FixedWidthParser.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  size_t v8 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = (uint64_t *)MEMORY[0x270FA5388](v6, v9, v10, v11);
  uint64_t v19 = (char *)v31 - v18;
  int64_t v21 = *result;
  uint64_t v20 = result[1];
  if (__OFSUB__(v20, *result))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  if (v20 - *result < v17)
  {
    unint64_t v32 = 0;
    unint64_t v33 = 0xE000000000000000;
    sub_2588F0408();
    swift_bridgeObjectRelease();
    unint64_t v32 = 0xD000000000000025;
    unint64_t v33 = 0x8000000258901C50;
    sub_2588F0588();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v22 = v32;
    unint64_t v23 = v33;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v24 = 0;
    v24[1] = v21;
    v24[2] = v22;
    v24[3] = v23;
    v24[4] = 0;
    return (uint64_t *)swift_willThrow();
  }
  uint64_t v25 = v21 + v17;
  if (v21 + v17 < v21 || v20 < v25) {
    goto LABEL_13;
  }
  uint64_t v34 = v16;
  v31[0] = v31;
  uint64_t v27 = result[2];
  *uint64_t result = v25;
  MEMORY[0x270FA5388](result, v13, v14, v15);
  v31[-2] = a4;
  v31[-1] = v28;
  v31[1] = v28;
  char v30 = v29;
  swift_bridgeObjectRetain();
  ByteBuffer.withUnsafeBytes<A>(_:)((uint64_t)sub_2588CB8FC, (uint64_t)&v31[-4], v21, v25, v27);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, v19, a4);
  if (v30) {
    sub_2588F0458();
  }
  else {
    sub_2588F0448();
  }
  return (uint64_t *)(*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v19, a4);
}

uint64_t sub_2588CB8FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588D85B4(0, a1, *(void *)(v2 + 16), a2);
}

uint64_t *sub_2588CB938(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FixedWidthParser.parse(_:context:)(a1, a2, *v3, *(void *)(a3 + 16));
}

uint64_t VariableWidthParser.width.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*VariableWidthParser.width.modify())()
{
  return nullsub_1;
}

uint64_t VariableWidthParser.bigEndian.getter(uint64_t a1, char a2)
{
  return a2 & 1;
}

uint64_t VariableWidthParser.bigEndian.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 8) = result;
  return result;
}

uint64_t (*VariableWidthParser.bigEndian.modify())()
{
  return nullsub_1;
}

uint64_t VariableWidthParser._parseSigned(_:)@<X0>(uint64_t *a1@<X0>, unint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v97 = a6;
  uint64_t v103 = (char *)a5;
  uint64_t v10 = *(void *)(*(void *)(*(void *)(a5 + 8) + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness, v11, v12, v13);
  uint64_t v99 = (char *)&v92 - v15;
  uint64_t v109 = *((void *)a4 - 1);
  uint64_t v16 = *(void *)(v109 + 64);
  uint64_t v20 = MEMORY[0x270FA5388](v14, v17, v18, v19);
  uint64_t v24 = MEMORY[0x270FA5388](v20, v21, v22, v23);
  uint64_t v28 = MEMORY[0x270FA5388](v24, v25, v26, v27);
  uint64_t v32 = MEMORY[0x270FA5388](v28, v29, v30, v31);
  uint64_t v92 = (char *)&v92 - v33;
  uint64_t v37 = MEMORY[0x270FA5388](v32, v34, v35, v36);
  int64_t v98 = (char *)&v92 - v38;
  uint64_t v42 = MEMORY[0x270FA5388](v37, v39, v40, v41);
  char v107 = (char *)&v92 - v43;
  MEMORY[0x270FA5388](v42, v44, v45, v46);
  uint64_t v51 = MEMORY[0x270FA5388]((char *)&v92 - v47, v48, v49, v50);
  unint64_t v102 = (char *)&v92 - v52;
  uint64_t result = MEMORY[0x270FA5388](v51, v53, v54, v55);
  uint64_t v64 = (char *)&v92 - v63;
  int64_t v65 = *a1;
  unint64_t v104 = a2;
  uint64_t v66 = v65 + a2;
  if ((uint64_t)(v65 + a2) < v65)
  {
    __break(1u);
    goto LABEL_31;
  }
  if (a1[1] < v66)
  {
LABEL_31:
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v108 = result;
  uint64_t v94 = v62;
  uint64_t v95 = v61;
  uint64_t v96 = v60;
  uint64_t v105 = v10;
  char v67 = a3;
  uint64_t v68 = a1[2];
  *a1 = v66;
  MEMORY[0x270FA5388](result, v57, v58, v59);
  uint64_t v69 = v103;
  *(&v92 - 2) = a4;
  *(&v92 - 1) = v69;
  swift_bridgeObjectRetain();
  unint64_t v70 = v65;
  uint64_t v71 = AssociatedConformanceWitness;
  ByteBuffer.withUnsafeBytes<A>(_:)((uint64_t)sub_2588CC304, (uint64_t)(&v92 - 4), v70, v66, v68);
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v101 = v64;
  if (v67)
  {
    uint64_t v72 = v102;
    (*(void (**)(char *, char *, char *))(v109 + 16))(v102, v64, a4);
    uint64_t v73 = v108;
    goto LABEL_8;
  }
  if (__OFSUB__(v16, v104))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  unint64_t v74 = (v16 - v104) & ~((uint64_t)(v16 - v104) >> 63);
  if (!(v74 >> 60))
  {
    uint64_t v110 = 8 * v74;
    sub_2588C1FE0();
    uint64_t v73 = v108;
    sub_2588F03A8();
    uint64_t v72 = v102;
    sub_2588F0438();
    (*(void (**)(uint64_t, char *))(v109 + 8))(v73, a4);
LABEL_8:
    uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
    sub_2588F04B8();
    uint64_t result = sub_2588F0498();
    if ((v104 - 0x1000000000000000) >> 61 == 7)
    {
      if (!__OFSUB__(8 * v104, 1))
      {
        uint64_t v93 = 8 * v104;
        uint64_t v103 = (char *)v71;
        uint64_t v110 = 8 * v104 - 1;
        unint64_t v104 = sub_2588C1FE0();
        sub_2588F03A8();
        uint64_t v75 = *(void (**)(uint64_t, char *))(v109 + 8);
        v75(v73, a4);
        uint64_t v76 = v98;
        sub_2588F0378();
        if (sub_2588F03D8())
        {
          if (sub_2588F03C8() < 64)
          {
            uint64_t v77 = sub_2588F03B8();
LABEL_23:
            v75((uint64_t)v76, a4);
LABEL_24:
            uint64_t v81 = v108;
            if (!v77) {
              goto LABEL_27;
            }
            goto LABEL_29;
          }
          uint64_t v110 = 0;
          uint64_t v82 = v76;
          uint64_t v81 = v108;
          sub_2588F0368();
          char v83 = sub_2588F0208();
          v75(v81, a4);
          v75((uint64_t)v82, a4);
          if ((v83 & 1) == 0) {
            goto LABEL_29;
          }
        }
        else
        {
          char v78 = sub_2588F03D8();
          uint64_t v79 = sub_2588F03C8();
          if (v78)
          {
            if (v79 <= 64)
            {
              sub_2588F04B8();
              uint64_t v84 = v108;
              sub_2588F0498();
              char v85 = sub_2588F01F8();
              v75(v84, a4);
              char v86 = v92;
              (*(void (**)(char *, char *, char *))(v109 + 16))(v92, v76, a4);
              uint64_t v72 = v102;
              if (v85)
              {
                uint64_t v77 = sub_2588F03B8();
                v75((uint64_t)v86, a4);
                goto LABEL_23;
              }
              v75((uint64_t)v86, a4);
              v75((uint64_t)v76, a4);
              uint64_t v81 = v108;
LABEL_29:
              (*(void (**)(uint64_t, char *, char *))(v109 + 16))(v81, v72, a4);
              sub_2588F04B8();
              uint64_t v88 = v94;
              sub_2588F0498();
              uint64_t v89 = v95;
              sub_2588F0398();
              v75(v88, a4);
              uint64_t v110 = v93;
              char v90 = v72;
              uint64_t v91 = v96;
              sub_2588F03A8();
              v75(v89, a4);
              sub_2588F0388();
              v75(v91, a4);
              v75(v81, a4);
              v75((uint64_t)v107, a4);
              v75((uint64_t)v90, a4);
              return ((uint64_t (*)(char *, char *))v75)(v101, a4);
            }
            uint64_t v110 = 0;
            int64_t v80 = v76;
            uint64_t v81 = v108;
          }
          else
          {
            if (v79 < 64)
            {
              uint64_t v77 = sub_2588F03B8();
              v75((uint64_t)v76, a4);
              uint64_t v72 = v102;
              goto LABEL_24;
            }
            uint64_t v110 = 0;
            int64_t v80 = v76;
            uint64_t v81 = v108;
          }
          sub_2588F0368();
          char v87 = sub_2588F0208();
          v75(v81, a4);
          v75((uint64_t)v80, a4);
          uint64_t v72 = v102;
          if ((v87 & 1) == 0) {
            goto LABEL_29;
          }
        }
LABEL_27:
        v75((uint64_t)v107, a4);
        v75((uint64_t)v101, a4);
        return (*(uint64_t (**)(uint64_t, char *, char *))(v109 + 32))(v97, v72, a4);
      }
      goto LABEL_33;
    }
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_2588CC304@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2588CCE28(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), (uint64_t)sub_2588CE430, a3);
}

uint64_t VariableWidthParser._parseSigned(withPadding:_:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, unsigned __int8 a3@<W3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v59 = a6;
  uint64_t v58 = *(void *)(a5 + 8);
  uint64_t v56 = *(void *)(*(void *)(v58 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = MEMORY[0x270FA5388](AssociatedTypeWitness, v11, v12, v13);
  uint64_t v54 = (char *)&v50 - v15;
  uint64_t v16 = *(void *)(a4 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v14, v17, v18, v19);
  uint64_t v57 = (char *)&v50 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v22, v23, v24);
  uint64_t v26 = (char *)&v50 - v25;
  if ((a3 & (a1 > 0)) == 1)
  {
    uint64_t result = sub_2588CC91C(a1, a2);
    if (v6) {
      return result;
    }
    uint64_t v51 = v26;
    int v52 = result;
    uint64_t v28 = a2;
    uint64_t v53 = v16;
  }
  else
  {
    uint64_t v51 = (char *)&v50 - v25;
    uint64_t v28 = a2;
    uint64_t v53 = v16;
    int v52 = 0;
  }
  LOBYTE(v60) = a3 & 1;
  uint64_t v29 = type metadata accessor for FixedWidthParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t result = ContextfulParser<>.parse(_:)((uint64_t)v28, v29, WitnessTable);
  if (v6) {
    return result;
  }
  LODWORD(v31) = !(a3 & (a1 > 0));
  if ((a3 & 1) != 0 || a1 < 1)
  {
    uint64_t v33 = v59;
    uint64_t v32 = v28;
  }
  else
  {
    uint64_t v32 = v28;
    int v52 = sub_2588CC91C(a1, v28);
    LODWORD(v31) = 0;
    uint64_t v33 = v59;
  }
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() >= 64)
    {
      uint64_t v60 = 0;
      sub_2588C1FE0();
      char v38 = (char)v31;
      uint64_t v31 = v51;
      sub_2588F0368();
      LOBYTE(v34) = sub_2588F01E8();
      uint64_t v39 = v31;
      LOBYTE(v31) = v38;
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v39, a4);
    }
    else
    {
      uint64_t result = sub_2588F03B8();
      unint64_t v34 = (unint64_t)result >> 63;
    }
    goto LABEL_23;
  }
  char v35 = sub_2588F03D8();
  uint64_t result = sub_2588F03C8();
  if ((v35 & 1) == 0)
  {
    if (result < 64)
    {
      uint64_t result = sub_2588F03B8();
      unint64_t v34 = (unint64_t)result >> 63;
    }
    else
    {
      LOBYTE(v34) = 0;
    }
    goto LABEL_22;
  }
  if (result > 64)
  {
    uint64_t v60 = 0;
    sub_2588C1FE0();
    char v36 = (char)v31;
    uint64_t v31 = v51;
    sub_2588F0368();
    LOBYTE(v34) = sub_2588F01E8();
    uint64_t v37 = v31;
    LOBYTE(v31) = v36;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v53 + 8))(v37, a4);
LABEL_22:
    uint64_t v32 = v28;
LABEL_23:
    char v45 = v52;
    goto LABEL_24;
  }
  LODWORD(v59) = v31;
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v40 = v51;
  sub_2588F0498();
  char v41 = sub_2588F01E8();
  uint64_t v42 = v53;
  uint64_t v43 = *(void (**)(char *, uint64_t))(v53 + 8);
  v43(v40, a4);
  uint64_t v44 = v57;
  (*(void (**)(char *, uint64_t, uint64_t))(v42 + 16))(v57, v33, a4);
  uint64_t v32 = v28;
  if (v41) {
    LOBYTE(v34) = 1;
  }
  else {
    unint64_t v34 = (unint64_t)sub_2588F03B8() >> 63;
  }
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v43)(v44, a4);
  char v45 = v52;
  LOBYTE(v31) = v59;
LABEL_24:
  if (v45 == -1) {
    char v46 = 1;
  }
  else {
    char v46 = (char)v31;
  }
  if ((v46 & 1) == 0)
  {
    if (v45)
    {
      uint64_t v47 = *v32;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v48 = 2;
      v48[1] = v47;
      v48[2] = 0x2064696C61766E49;
      v48[3] = 0xEF676E6964646170;
    }
    else
    {
      if ((v34 & 1) == 0) {
        return result;
      }
      uint64_t v49 = *v32;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v48 = 2;
      v48[1] = v49;
      v48[2] = 0xD00000000000002FLL;
      v48[3] = 0x8000000258901C80;
    }
    v48[4] = 0;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v53 + 8))(v33, a4);
  }
  return result;
}

uint64_t sub_2588CC91C(uint64_t result, uint64_t *a2)
{
  unint64_t v3 = *a2;
  uint64_t v4 = *a2 + result;
  if (v4 < *a2)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (a2[1] < v4)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v6 = a2[2];
  *a2 = v4;
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
    return result;
  }
  unint64_t v7 = *(void *)(v6 + 16);
  if (v7 < v3 || (uint64_t)v7 < v4) {
    goto LABEL_14;
  }
  uint64_t v9 = v6 + v3 + 32;
  uint64_t v10 = v9 + result;
  swift_bridgeObjectRetain();
  sub_2588CC9F0(v9, v10, a2, &v11);
  uint64_t result = swift_bridgeObjectRelease();
  if (!v2) {
    return v11;
  }
  return result;
}

uint64_t sub_2588CC9F0@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, unsigned char *a4@<X8>)
{
  if (result)
  {
    if (a2 != result)
    {
      int v6 = *(unsigned __int8 *)result;
      uint64_t result = sub_2588CCB48(1, result, a2);
      if (result == v7)
      {
LABEL_12:
        *a4 = v6;
        return result;
      }
      uint64_t v10 = v9 - v8;
      if (!v8) {
        uint64_t v10 = 0;
      }
      uint64_t v11 = result;
      while (v11 < v7)
      {
        if (result < 0 || v11 >= v10) {
          goto LABEL_15;
        }
        if (*(unsigned __int8 *)(v8 + v11) != v6)
        {
          uint64_t v12 = *a3;
          sub_2588BBC70();
          swift_allocError();
          *uint64_t v13 = 2;
          v13[1] = v12;
          v13[2] = 0x2064696C61766E49;
          v13[3] = 0xEF676E6964646170;
          v13[4] = 0;
          return swift_willThrow();
        }
        if (v7 == ++v11) {
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

double static VariableWidthParser.invalidPaddingError(_:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_2588CD84C(a1, v5);
  double result = *(double *)v5;
  long long v4 = v5[1];
  *(_OWORD *)a2 = v5[0];
  *(_OWORD *)(a2 + 16) = v4;
  *(void *)(a2 + 32) = v6;
  return result;
}

uint64_t sub_2588CCB48(uint64_t result, uint64_t a2, uint64_t a3)
{
  if (result < 0)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v5 = a3 - a2;
  if (a2) {
    uint64_t v6 = a3 - a2;
  }
  else {
    uint64_t v6 = 0;
  }
  double result = sub_2588CD7C4(0, result, v6, a2, a3);
  if (v7)
  {
    double result = v5;
    if (!a2) {
      return 0;
    }
  }
  else if (!a2)
  {
    uint64_t v5 = 0;
  }
  if (v5 < result) {
    goto LABEL_13;
  }
  return result;
}

unint64_t *VariableWidthParser._parseUnsigned(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(*(void *)(a4 - 8) + 64);
  uint64_t v6 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  double result = (unint64_t *)MEMORY[0x270FA5388](v6, v7, v8, v9);
  uint64_t v18 = (char *)&v28 - v17;
  unint64_t v19 = *result;
  uint64_t v20 = *result + v11;
  if (v20 < (uint64_t)*result)
  {
    __break(1u);
    goto LABEL_10;
  }
  if ((uint64_t)result[1] < v20)
  {
LABEL_10:
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v31 = v11;
  uint64_t v32 = v16;
  uint64_t v29 = v15;
  uint64_t v33 = v14;
  uint64_t v21 = result[2];
  *double result = v20;
  MEMORY[0x270FA5388](result, v11, v12, v13);
  *(&v28 - 2) = a4;
  *(&v28 - 1) = v22;
  uint64_t v30 = v22;
  char v24 = v23;
  swift_bridgeObjectRetain();
  ByteBuffer.withUnsafeBytes<A>(_:)((uint64_t)sub_2588CD880, (uint64_t)(&v28 - 4), v19, v20, v21);
  double result = (unint64_t *)swift_bridgeObjectRelease();
  if (v24) {
    return (unint64_t *)(*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v33, v18, a4);
  }
  if (__OFSUB__(v5, v31)) {
    goto LABEL_11;
  }
  unint64_t v25 = (v5 - v31) & ~((v5 - v31) >> 63);
  if (v25 >> 60)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v34 = 8 * v25;
  sub_2588C1FE0();
  uint64_t v26 = v29;
  sub_2588F03A8();
  sub_2588F0438();
  uint64_t v27 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
  v27(v26, a4);
  return (unint64_t *)v27(v18, a4);
}

uint64_t sub_2588CCE28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v18[0] = a6;
  v18[1] = a5;
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v12 = (char *)v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  v18[6] = a1;
  v18[7] = a2;
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  sub_2588F0498();
  v18[4] = a3;
  v18[5] = a4;
  sub_2588F0278();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, a3);
}

uint64_t sub_2588CD000(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v8 = &v18[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x270FA5388](v6, v9, v10, v11);
  uint64_t v13 = &v18[-v12];
  char v15 = *v14;
  uint64_t v19 = 8;
  sub_2588C1FE0();
  sub_2588F03A8();
  v18[15] = v15;
  sub_2588C2034();
  sub_2588F03E8();
  sub_2588F0388();
  uint64_t v16 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v16(v8, a3);
  return ((uint64_t (*)(unsigned char *, uint64_t))v16)(v13, a3);
}

uint64_t VariableWidthParser._parseUnsigned(withPadding:_:)@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v14)
  {
    uint64_t result = (uint64_t)sub_2588CD390(a2, a1);
    if (!v6)
    {
      char v22 = 1;
      uint64_t v16 = type metadata accessor for FixedWidthParser();
      uint64_t WitnessTable = swift_getWitnessTable();
      return ContextfulParser<>.parse(_:)((uint64_t)a2, v16, WitnessTable);
    }
  }
  else
  {
    uint64_t v21 = v11;
    char v23 = 0;
    uint64_t v18 = type metadata accessor for FixedWidthParser();
    uint64_t v19 = swift_getWitnessTable();
    uint64_t result = ContextfulParser<>.parse(_:)((uint64_t)a2, v18, v19);
    if (!v6)
    {
      sub_2588CD390(a2, a1);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v21 + 32))(a6, v13, a5);
    }
  }
  return result;
}

unint64_t *sub_2588CD390(unint64_t *result, uint64_t a2)
{
  unint64_t v2 = *result;
  uint64_t v3 = *result + a2;
  if (v3 < (uint64_t)*result)
  {
    __break(1u);
    goto LABEL_16;
  }
  if ((uint64_t)result[1] < v3)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  unint64_t v4 = result[2];
  *uint64_t result = v3;
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  unint64_t v5 = *(void *)(v4 + 16);
  if (v5 < v2 || (uint64_t)v5 < v3) {
    goto LABEL_18;
  }
  if (a2)
  {
    for (i = (unsigned char *)(v4 + v2 + 32); !*i; ++i)
    {
      if (!--a2) {
        return result;
      }
    }
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v8 = 2;
    v8[1] = v3;
    v8[2] = 0x2064696C61766E49;
    v8[3] = 0xEF676E6964646170;
    v8[4] = 0;
    return (unint64_t *)swift_willThrow();
  }
  return result;
}

void VariableWidthParser.parse(_:context:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  if (__OFSUB__(v4, *a1))
  {
    __break(1u);
  }
  else
  {
    if (v4 - *a1 >= a3)
    {
      if (a3 >= 1)
      {
        MEMORY[0x270FA5388](a1, a2, a3, a4);
        ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588CD8B0);
        return;
      }
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v6 = 2;
      v6[1] = v5;
      v6[2] = 0xD000000000000023;
      v6[3] = 0x8000000258901CB0;
    }
    else
    {
      sub_2588F0408();
      swift_bridgeObjectRelease();
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      sub_2588F0228();
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      sub_2588F0228();
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v6 = 0;
      v6[1] = v5;
      v6[2] = 0x6974736575716552;
      v6[3] = 0xEB0000000020676ELL;
    }
    v6[4] = 0;
    swift_willThrow();
  }
}

unint64_t *sub_2588CD694@<X0>(unint64_t *result@<X0>, unint64_t a2@<X1>, char a3@<W2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = *(void *)(*((void *)a4 - 1) + 64);
  uint64_t v8 = a2 - v7;
  if (__OFSUB__(a2, v7))
  {
    __break(1u);
  }
  else
  {
    uint64_t v13 = (uint64_t *)result;
    char v14 = sub_2588F03D8();
    if (v8 < 0)
    {
      if (v14) {
        return (unint64_t *)VariableWidthParser._parseSigned(_:)(v13, a2, a3 & 1, a4, a5, a6);
      }
      else {
        return VariableWidthParser._parseUnsigned(_:)((uint64_t)v13, a2, a3 & 1, (uint64_t)a4);
      }
    }
    else if (v14)
    {
      return (unint64_t *)VariableWidthParser._parseSigned(withPadding:_:)(v8, v13, a3 & 1, (uint64_t)a4, a5, a6);
    }
    else
    {
      return (unint64_t *)VariableWidthParser._parseUnsigned(withPadding:_:)(v8, (unint64_t *)v13, v15, a3 & 1, (uint64_t)a4, a6);
    }
  }
  return result;
}

void sub_2588CD79C(void *a1, uint64_t a2)
{
  VariableWidthParser.parse(_:context:)(a1, a2, *(void *)v2, *(unsigned __int8 *)(v2 + 8));
}

uint64_t sub_2588CD7C4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5 = a5 - a4;
  if (!a4) {
    uint64_t v5 = 0;
  }
  if (result < 0 || v5 < result)
  {
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (a3 < 0 || v5 < a3) {
    goto LABEL_19;
  }
  uint64_t v6 = a3 - result;
  if (a2 > 0)
  {
    if (v6 < 0 || v6 >= (unint64_t)a2) {
      goto LABEL_14;
    }
    return 0;
  }
  if (v6 <= 0 && v6 > a2) {
    return 0;
  }
LABEL_14:
  BOOL v7 = __OFADD__(result, a2);
  result += a2;
  if (v7)
  {
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    return result;
  }
  if (result < 0 || v5 < result) {
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_2588CD84C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = 2;
  a2[1] = result;
  a2[2] = 0x2064696C61766E49;
  a2[3] = 0xEF676E6964646170;
  a2[4] = 0;
  return result;
}

uint64_t sub_2588CD880@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_2588CCE28(a1, a2, *(void *)(v3 + 16), *(void *)(v3 + 24), (uint64_t)sub_2588CE464, a3);
}

unint64_t *sub_2588CD8B0@<X0>(unint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588CD694(a1, *(void *)(v2 + 32), *(unsigned char *)(v2 + 40), *(char **)(v2 + 16), *(void *)(v2 + 24), a2);
}

unint64_t sub_2588CD8D4(uint64_t a1)
{
  unint64_t result = sub_2588CD8FC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CD8FC()
{
  unint64_t result = qword_26A0A20D8;
  if (!qword_26A0A20D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A20D8);
  }
  return result;
}

unint64_t sub_2588CD950(uint64_t a1)
{
  unint64_t result = sub_2588CD978();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CD978()
{
  unint64_t result = qword_26A0A20E0;
  if (!qword_26A0A20E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A20E0);
  }
  return result;
}

unint64_t sub_2588CD9CC(uint64_t a1)
{
  unint64_t result = sub_2588CD9F4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CD9F4()
{
  unint64_t result = qword_26A0A20E8;
  if (!qword_26A0A20E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A20E8);
  }
  return result;
}

unint64_t sub_2588CDA48(uint64_t a1)
{
  unint64_t result = sub_2588CDA70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDA70()
{
  unint64_t result = qword_26A0A20F0;
  if (!qword_26A0A20F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A20F0);
  }
  return result;
}

unint64_t sub_2588CDAC4(uint64_t a1)
{
  unint64_t result = sub_2588CDAEC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDAEC()
{
  unint64_t result = qword_26A0A20F8;
  if (!qword_26A0A20F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A20F8);
  }
  return result;
}

unint64_t sub_2588CDB40(uint64_t a1)
{
  unint64_t result = sub_2588CDB68();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDB68()
{
  unint64_t result = qword_26A0A2100;
  if (!qword_26A0A2100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A2100);
  }
  return result;
}

unint64_t sub_2588CDBBC(uint64_t a1)
{
  unint64_t result = sub_2588CDBE4();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDBE4()
{
  unint64_t result = qword_26A0A2108;
  if (!qword_26A0A2108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A2108);
  }
  return result;
}

unint64_t sub_2588CDC38(uint64_t a1)
{
  unint64_t result = sub_2588CDC60();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDC60()
{
  unint64_t result = qword_26A0A2110;
  if (!qword_26A0A2110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A2110);
  }
  return result;
}

unint64_t sub_2588CDCB4(uint64_t a1)
{
  unint64_t result = sub_2588CDCDC();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDCDC()
{
  unint64_t result = qword_26A0A2118;
  if (!qword_26A0A2118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A2118);
  }
  return result;
}

unint64_t sub_2588CDD30(uint64_t a1)
{
  unint64_t result = sub_2588CDD58();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_2588CDD58()
{
  unint64_t result = qword_26A0A2120[0];
  if (!qword_26A0A2120[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0A2120);
  }
  return result;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *unint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Endianness()
{
  return &type metadata for Endianness;
}

uint64_t sub_2588CDDD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

uint64_t type metadata accessor for FixedWidthIntegerParsers()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588CDDF0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *sub_2588CDE90(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2588CDF5CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

uint64_t sub_2588CDF98(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t sub_2588CDFEC(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

uint64_t type metadata accessor for VariableWidthParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588CE048(void *a1)
{
  return get_witness_table_15ParsingInternal16MultiByteIntegerRzlAA16FixedWidthParserVyxGAA010ContextfulH0HPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for FixedWidthParser);
}

uint64_t sub_2588CE074(void *a1)
{
  return get_witness_table_15ParsingInternal16MultiByteIntegerRzlAA16FixedWidthParserVyxGAA010ContextfulH0HPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for VariableWidthParser);
}

uint64_t sub_2588CE0A4()
{
  type metadata accessor for LoadParser();
  return swift_getWitnessTable();
}

uint64_t get_witness_table_15ParsingInternal16MultiByteIntegerRzs010FixedWidthE0Rd__r__lAA0E4CastVyAA0fG6ParserVyxGqd__GAA010ContextfulI0HPyHCTm()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588CE188(void *a1)
{
  return get_witness_table_15ParsingInternal16MultiByteIntegerRzlAA16FixedWidthParserVyxGAA010ContextfulH0HPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for VariableWidthParser);
}

uint64_t sub_2588CE1B4(void *a1)
{
  return get_witness_table_15ParsingInternal16MultiByteIntegerRzlAA16FixedWidthParserVyxGAA010ContextfulH0HPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for VariableWidthParser);
}

uint64_t get_witness_table_15ParsingInternal16MultiByteIntegerRzlAA16FixedWidthParserVyxGAA010ContextfulH0HPyHCTm(void *a1, void (*a2)(uint64_t, void, void))
{
  a2(255, *a1, *(void *)(a1[1] + 8));
  return swift_getWitnessTable();
}

uint64_t _s15ParsingInternal10EndiannessV4BaseOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s15ParsingInternal10EndiannessV4BaseOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x2588CE38CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

uint64_t sub_2588CE3B4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_2588CE3BC(unsigned char *result, char a2)
{
  *unint64_t result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Endianness.Base()
{
  return &type metadata for Endianness.Base;
}

unint64_t sub_2588CE3DC()
{
  unint64_t result = qword_26A0A22A8[0];
  if (!qword_26A0A22A8[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26A0A22A8);
  }
  return result;
}

uint64_t sub_2588CE430(uint64_t a1, uint64_t a2)
{
  return sub_2588CD000(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_2588CE464(uint64_t a1, uint64_t a2)
{
  return sub_2588CE430(a1, a2);
}

uint64_t BinaryInteger.init<A>(throwingOnOverflow:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v24 = a6;
  uint64_t v9 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_2588F0358();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12, v14, v15, v16);
  uint64_t v18 = (char *)&v23 - v17;
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v26 = a1;
  v19(v11, a1, a3);
  sub_2588F02E8();
  uint64_t v20 = *(void *)(a2 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v18, 1, a2) == 1)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v18, v12);
    sub_2588BBC70();
    swift_allocError();
    *(_OWORD *)uint64_t v21 = xmmword_2588F73E0;
    *(void *)(v21 + 16) = 3026478;
    *(void *)(v21 + 24) = 0xE300000000000000;
    *(void *)(v21 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v26, a3);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v26, a3);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v24, v18, a2);
  }
}

uint64_t FixedWidthInteger.addingThrowingOnOverflow(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588CE7E8(a1, a2, a3, MEMORY[0x263F8DEC0], a4);
}

uint64_t FixedWidthInteger.subtractingThrowingOnOverflow(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588CE7E8(a1, a2, a3, MEMORY[0x263F8DEE0], a4);
}

uint64_t FixedWidthInteger.multipliedThrowingOnOverflow(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588CE7E8(a1, a2, a3, MEMORY[0x263F8DED8], a4);
}

uint64_t FixedWidthInteger.dividedThrowingOnOverflow(by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588CE7E8(a1, a2, a3, MEMORY[0x263F8DEC8], a4);
}

uint64_t FixedWidthInteger.remainderThrowingOnOverflow(dividingBy:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588CE7E8(a1, a2, a3, MEMORY[0x263F8DED0], a4);
}

uint64_t sub_2588CE7E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a5@<X8>)
{
  uint64_t result = a4(a5, a1, a2, a3);
  if (result)
  {
    sub_2588BBC70();
    swift_allocError();
    *(_OWORD *)uint64_t v8 = xmmword_2588F73E0;
    *(void *)(v8 + 16) = 3026478;
    *(void *)(v8 + 24) = 0xE300000000000000;
    *(void *)(v8 + 32) = 0;
    swift_willThrow();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 8))(a5, a2);
  }
  return result;
}

uint64_t FixedWidthInteger.addThrowingOnOverflow(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588CE90C(a1, a2, a3, (uint64_t)FixedWidthInteger.addingThrowingOnOverflow(_:));
}

uint64_t FixedWidthInteger.subtractThrowingOnOverflow(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588CE90C(a1, a2, a3, (uint64_t)FixedWidthInteger.subtractingThrowingOnOverflow(_:));
}

uint64_t sub_2588CE90C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a2 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v11(v8);
  if (!v5)
  {
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v4, a2);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(v4, v10, a2);
  }
  return result;
}

uint64_t FixedWidthInteger.multiplyThrowingOnOverflow(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588CE90C(a1, a2, a3, (uint64_t)FixedWidthInteger.multipliedThrowingOnOverflow(by:));
}

uint64_t FixedWidthInteger.divideThrowingOnOverflow(by:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588CE90C(a1, a2, a3, (uint64_t)FixedWidthInteger.dividedThrowingOnOverflow(by:));
}

uint64_t FixedWidthInteger.formRemainderThrowingOnOverflow(dividingBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588CE90C(a1, a2, a3, (uint64_t)FixedWidthInteger.remainderThrowingOnOverflow(dividingBy:));
}

uint64_t WithCurrentPosition<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = a1;
  a3[1] = a2;
  return swift_retain();
}

uint64_t ParserPosition.range.setter(uint64_t result, uint64_t a2)
{
  *uint64_t v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*ParserPosition.range.modify())()
{
  return nullsub_1;
}

uint64_t ByteBuffer.currentParserPosition.getter(uint64_t result, uint64_t a2)
{
  if (a2 < result) {
    __break(1u);
  }
  return result;
}

uint64_t CurrentPositionParser.parse(_:context:)(uint64_t *a1)
{
  uint64_t result = *a1;
  if (a1[1] < result) {
    __break(1u);
  }
  return result;
}

void *sub_2588CEAEC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  if (v2 < *result)
  {
    __break(1u);
  }
  else
  {
    *a2 = *result;
    a2[1] = v2;
  }
  return result;
}

uint64_t WithCurrentPositionParser.body.getter(uint64_t a1)
{
  return a1;
}

uint64_t WithCurrentPositionParser.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_release();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*WithCurrentPositionParser.body.modify())()
{
  return nullsub_1;
}

uint64_t WithCurrentPositionParser.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = (uint64_t *)MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = *v12;
  if (*(void *)(a1 + 8) < result)
  {
    __break(1u);
  }
  else
  {
    uint64_t result = v13();
    if (!v6)
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a2, a5, a6);
      return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v15, a5);
    }
  }
  return result;
}

uint64_t sub_2588CECCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return WithCurrentPositionParser.parse(_:context:)(a1, a2, *v3, v3[1], *(void *)(a3 + 16), *(void *)(a3 + 24));
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for ParserPosition(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for ParserPosition(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ParserPosition()
{
  return &type metadata for ParserPosition;
}

ValueMetadata *type metadata accessor for CurrentPositionParser()
{
  return &type metadata for CurrentPositionParser;
}

void *sub_2588CED64(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_2588CED94()
{
  return swift_release();
}

void *sub_2588CED9C(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_2588CEDD8(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_2588CEE0C(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_2588CEE54(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t type metadata accessor for WithCurrentPositionParser()
{
  return __swift_instantiateGenericMetadata();
}

_UNKNOWN **sub_2588CEEA8()
{
  return &protocol witness table for CurrentPositionParser;
}

uint64_t sub_2588CEEB4()
{
  type metadata accessor for WithCurrentPositionParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser<>.concatenating<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x270FA5388](v12, v13, v14, v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v18, v20, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return RightOnlyParser.init(left:right:)((uint64_t)v18, (uint64_t)v11, a2, a4, a5);
}

uint64_t RightOnlyParser.init(left:right:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for RightOnlyParser();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for RightOnlyParser()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser<>.concatenating<A, B, C>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v28 = a7;
  uint64_t v29 = a6;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10, v13, v15, v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AddContext();
  MEMORY[0x270FA5388](v19, v20, v21, v22);
  uint64_t v24 = (char *)&v26 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, v26, a2);
  AddContext.init(base:)((uint64_t)v18, a2, (uint64_t)v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v27, a5);
  swift_getWitnessTable();
  return RightOnlyParser.init(left:right:)((uint64_t)v24, (uint64_t)v12, v19, a5, v28);
}

{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  uint64_t v27 = a1;
  uint64_t v28 = a7;
  uint64_t v29 = a6;
  uint64_t v9 = *(void *)(a5 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v10, v13, v15, v16);
  uint64_t v18 = (char *)&v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for AddContext();
  MEMORY[0x270FA5388](v19, v20, v21, v22);
  uint64_t v24 = (char *)&v26 - v23;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v18, v26, a2);
  AddContext.init(base:)((uint64_t)v18, a2, (uint64_t)v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, v27, a5);
  swift_getWitnessTable();
  return SequentialParser.init(left:right:)((uint64_t)v24, (uint64_t)v12, v19, a5, v28);
}

uint64_t RightOnlyParser.left.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t RightOnlyParser.left.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*RightOnlyParser.left.modify())()
{
  return nullsub_1;
}

uint64_t RightOnlyParser.right.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t RightOnlyParser.right.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*RightOnlyParser.right.modify())()
{
  return nullsub_1;
}

double RightOnlyParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588CF618);
}

uint64_t sub_2588CF53C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a3, a4, a6);
  if (!v7)
  {
    type metadata accessor for RightOnlyParser();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a7 + 24))(a1, a3, a5, a7);
  }
  return result;
}

uint64_t sub_2588CF618(uint64_t a1)
{
  return sub_2588CF53C(a1, v1[6], v1[7], v1[2], v1[3], v1[4], v1[5]);
}

double sub_2588CF63C()
{
  return RightOnlyParser.parse(_:context:)();
}

uint64_t sub_2588CF65C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588CF854(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588CFB20);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588CFB48()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588CFBA4()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.replacing<A>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v14, v15, v16);
  unsigned int v18 = (char *)&v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v19 + 16))(v18, v5, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, a1, a3);
  return Replacement.init(base:value:)((uint64_t)v18, (uint64_t)v13, a2, a3, a5);
}

uint64_t Replacement.init(base:value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = a5 + *(int *)(type metadata accessor for Replacement() + 44);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  return v9(v8, a2, a4);
}

uint64_t type metadata accessor for Replacement()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Replacement.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t Replacement.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*Replacement.base.modify())()
{
  return nullsub_1;
}

uint64_t Replacement.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t Replacement.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*Replacement.value.modify())()
{
  return nullsub_1;
}

uint64_t Replacement.parse(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v19[0] = a4;
  uint64_t v8 = *(void *)(a3 + 32);
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v12, v13, v14);
  uint64_t v16 = (char *)v19 - v15;
  uint64_t v17 = v19[1];
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a1, a2, v9, v8);
  if (!v17)
  {
    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, AssociatedTypeWitness);
    return (*(uint64_t (**)(void, uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 16))(v19[0], v4 + *(int *)(a3 + 44));
  }
  return result;
}

uint64_t sub_2588D0120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return Replacement.parse(_:context:)(a1, a2, a3, a4);
}

uint64_t sub_2588D0138()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_2588D0208(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588D0400(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588D06CCLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588D06F4()
{
  type metadata accessor for Replacement();
  return swift_getWitnessTable();
}

uint64_t EitherParser<>.init(condition:ifTrue:ifFalse:)(char a1, uint64_t (*a2)(void), uint64_t a3, uint64_t (*a4)(void))
{
  if (a1)
  {
    uint64_t result = a2();
    if (v4) {
      return result;
    }
  }
  else
  {
    uint64_t result = a4();
    if (v4) {
      return result;
    }
  }
  type metadata accessor for EitherParser();
  return swift_storeEnumTagMultiPayload();
}

uint64_t type metadata accessor for EitherParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588D07F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v28[0] = a5;
  v28[1] = a6;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v12 + 16);
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v9, v15, v12, v16);
  int v19 = (char *)v28 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v20, v21, v22);
  uint64_t v24 = (char *)v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v25 + 16))(v24, v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v24, v7);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v28[0] + 24))(v29, v30, v7);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v24, v13);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 24))(v29, v30, v13, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  }
}

uint64_t sub_2588D0A9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_2588D07F8(a1, a2, a3, *(void *)(a4 - 8), *(void *)(a4 - 16), a5);
}

uint64_t sub_2588D0ABC()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void *sub_2588D0B88(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  if (*(void *)(v5 + 64) <= *(void *)(v4 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(v5 + 64);
  }
  uint64_t v7 = (*(unsigned char *)(v5 + 80) | *(unsigned char *)(v4 + 80));
  if (v7 <= 7
    && (unint64_t)(v6 + 1) <= 0x18
    && ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) == 0)
  {
    unsigned int v11 = a2[v6];
    unsigned int v12 = v11 - 2;
    if (v11 >= 2)
    {
      if (v6 <= 3) {
        uint64_t v13 = v6;
      }
      else {
        uint64_t v13 = 4;
      }
      switch(v13)
      {
        case 1:
          int v14 = *a2;
          goto LABEL_21;
        case 2:
          int v14 = *(unsigned __int16 *)a2;
          goto LABEL_21;
        case 3:
          int v14 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_21;
        case 4:
          int v14 = *(_DWORD *)a2;
LABEL_21:
          int v15 = (v14 | (v12 << (8 * v6))) + 2;
          unsigned int v11 = v14 + 2;
          if (v6 < 4) {
            unsigned int v11 = v15;
          }
          break;
        default:
          break;
      }
    }
    if (v11 == 1)
    {
      (*(void (**)(void *))(v5 + 16))(a1);
      *((unsigned char *)v3 + v6) = 1;
    }
    else
    {
      (*(void (**)(void *))(v4 + 16))(a1);
      *((unsigned char *)v3 + v6) = 0;
    }
  }
  else
  {
    uint64_t v10 = *(void *)a2;
    void *v3 = *(void *)a2;
    uint64_t v3 = (void *)(v10 + ((v7 + 16) & ~v7));
    swift_retain();
  }
  return v3;
}

uint64_t sub_2588D0D5C(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 24) - 8;
  uint64_t v3 = *(void *)v2;
  unint64_t v4 = *(void *)(*(void *)v2 + 64);
  if (v4 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v4 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  unsigned int v5 = a1[v4];
  unsigned int v6 = v5 - 2;
  if (v5 >= 2)
  {
    if (v4 <= 3) {
      uint64_t v7 = v4;
    }
    else {
      uint64_t v7 = 4;
    }
    switch(v7)
    {
      case 1:
        int v8 = *a1;
        goto LABEL_12;
      case 2:
        int v8 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v8 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v8 = *(_DWORD *)a1;
LABEL_12:
        int v9 = (v8 | (v6 << (8 * v4))) + 2;
        unsigned int v5 = v8 + 2;
        if (v4 < 4) {
          unsigned int v5 = v9;
        }
        break;
      default:
        break;
    }
  }
  if (v5 == 1) {
    uint64_t v10 = v3;
  }
  else {
    uint64_t v10 = *(void *)(*(void *)(a2 + 16) - 8);
  }
  return (*(uint64_t (**)(void))(v10 + 8))();
}

uint64_t sub_2588D0E98(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 16))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_2588D100C(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 16))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_2588D124C(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  if (*(void *)(*(void *)(v4 - 8) + 64) <= *(void *)(v5 + 64)) {
    uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  else {
    uint64_t v6 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v7 = a2[v6];
  unsigned int v8 = v7 - 2;
  if (v7 >= 2)
  {
    if (v6 <= 3) {
      uint64_t v9 = v6;
    }
    else {
      uint64_t v9 = 4;
    }
    switch(v9)
    {
      case 1:
        int v10 = *a2;
        goto LABEL_13;
      case 2:
        int v10 = *(unsigned __int16 *)a2;
        goto LABEL_13;
      case 3:
        int v10 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        goto LABEL_13;
      case 4:
        int v10 = *(_DWORD *)a2;
LABEL_13:
        int v11 = (v10 | (v8 << (8 * v6))) + 2;
        unsigned int v7 = v10 + 2;
        if (v6 < 4) {
          unsigned int v7 = v11;
        }
        break;
      default:
        break;
    }
  }
  BOOL v12 = v7 == 1;
  if (v7 == 1) {
    uint64_t v5 = *(void *)(v4 - 8);
  }
  (*(void (**)(uint64_t))(v5 + 32))(a1);
  *(unsigned char *)(a1 + v6) = v12;
  return a1;
}

unsigned __int8 *sub_2588D13C0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v5 = *(void *)(a3 + 16);
    uint64_t v6 = *(void *)(a3 + 24);
    uint64_t v7 = *(void *)(v5 - 8);
    uint64_t v8 = *(void *)(v6 - 8);
    if (*(void *)(v8 + 64) <= *(void *)(v7 + 64)) {
      uint64_t v9 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      uint64_t v9 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v10 = a1[v9];
    unsigned int v11 = v10 - 2;
    if (v10 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v12 = v9;
      }
      else {
        uint64_t v12 = 4;
      }
      switch(v12)
      {
        case 1:
          int v13 = *a1;
          goto LABEL_14;
        case 2:
          int v13 = *(unsigned __int16 *)a1;
          goto LABEL_14;
        case 3:
          int v13 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          goto LABEL_14;
        case 4:
          int v13 = *(_DWORD *)a1;
LABEL_14:
          int v14 = (v13 | (v11 << (8 * v9))) + 2;
          unsigned int v10 = v13 + 2;
          if (v9 < 4) {
            unsigned int v10 = v14;
          }
          break;
        default:
          break;
      }
    }
    if (v10 == 1) {
      uint64_t v15 = *(void *)(v6 - 8);
    }
    else {
      uint64_t v15 = *(void *)(*(void *)(a3 + 16) - 8);
    }
    if (v10 == 1) {
      uint64_t v16 = *(void *)(a3 + 24);
    }
    else {
      uint64_t v16 = *(void *)(a3 + 16);
    }
    (*(void (**)(unsigned __int8 *, uint64_t))(v15 + 8))(a1, v16);
    unsigned int v17 = a2[v9];
    unsigned int v18 = v17 - 2;
    if (v17 >= 2)
    {
      if (v9 <= 3) {
        uint64_t v19 = v9;
      }
      else {
        uint64_t v19 = 4;
      }
      switch(v19)
      {
        case 1:
          int v20 = *a2;
          goto LABEL_31;
        case 2:
          int v20 = *(unsigned __int16 *)a2;
          goto LABEL_31;
        case 3:
          int v20 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          goto LABEL_31;
        case 4:
          int v20 = *(_DWORD *)a2;
LABEL_31:
          int v21 = (v20 | (v18 << (8 * v9))) + 2;
          unsigned int v17 = v20 + 2;
          if (v9 < 4) {
            unsigned int v17 = v21;
          }
          break;
        default:
          break;
      }
    }
    BOOL v22 = v17 == 1;
    if (v17 == 1) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v7;
    }
    if (v17 == 1) {
      uint64_t v24 = v6;
    }
    else {
      uint64_t v24 = v5;
    }
    (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v23 + 32))(a1, a2, v24);
    a1[v9] = v22;
  }
  return a1;
}

uint64_t sub_2588D1600(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (v3 <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
    unint64_t v3 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  }
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_22;
  }
  unint64_t v4 = v3 + 1;
  char v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    unsigned int v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      int v6 = *(_DWORD *)((char *)a1 + v4);
      if (!v6) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 > 0xFF)
    {
      int v6 = *(unsigned __int16 *)((char *)a1 + v4);
      if (!*(unsigned __int16 *)((char *)a1 + v4)) {
        goto LABEL_22;
      }
      goto LABEL_14;
    }
    if (v8 < 2)
    {
LABEL_22:
      unsigned int v10 = *((unsigned __int8 *)a1 + v3);
      if (v10 >= 2) {
        return (v10 ^ 0xFF) + 1;
      }
      else {
        return 0;
      }
    }
  }
  int v6 = *((unsigned __int8 *)a1 + v4);
  if (!*((unsigned char *)a1 + v4)) {
    goto LABEL_22;
  }
LABEL_14:
  int v9 = (v6 - 1) << v5;
  if (v4 > 3) {
    int v9 = 0;
  }
  if (v4)
  {
    if (v4 > 3) {
      LODWORD(v4) = 4;
    }
    switch((int)v4)
    {
      case 2:
        LODWORD(v4) = *a1;
        break;
      case 3:
        LODWORD(v4) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v4) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v4) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return (v4 | v9) + 255;
}

void sub_2588D1744(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  if (*(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64) > v5) {
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  }
  size_t v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    int v7 = 0;
  }
  else if (v6 <= 3)
  {
    unsigned int v10 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v10))
    {
      int v7 = 4;
    }
    else if (v10 >= 0x100)
    {
      int v7 = 2;
    }
    else
    {
      int v7 = v10 > 1;
    }
  }
  else
  {
    int v7 = 1;
  }
  if (a2 > 0xFE)
  {
    unsigned int v8 = a2 - 255;
    if (v6 < 4)
    {
      int v9 = (v8 >> (8 * v6)) + 1;
      if (v5 != -1)
      {
        int v11 = v8 & ~(-1 << (8 * v6));
        bzero(a1, v6);
        if (v6 == 3)
        {
          *(_WORD *)a1 = v11;
          a1[2] = BYTE2(v11);
        }
        else if (v6 == 2)
        {
          *(_WORD *)a1 = v11;
        }
        else
        {
          *a1 = v11;
        }
      }
    }
    else
    {
      bzero(a1, v5 + 1);
      *(_DWORD *)a1 = v8;
      int v9 = 1;
    }
    switch(v7)
    {
      case 1:
        a1[v6] = v9;
        break;
      case 2:
        *(_WORD *)&a1[v6] = v9;
        break;
      case 3:
LABEL_34:
        __break(1u);
        JUMPOUT(0x2588D191CLL);
      case 4:
        *(_DWORD *)&a1[v6] = v9;
        break;
      default:
        return;
    }
  }
  else
  {
    switch(v7)
    {
      case 1:
        a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      case 2:
        *(_WORD *)&a1[v6] = 0;
        goto LABEL_22;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v6] = 0;
        if (!a2) {
          return;
        }
        goto LABEL_23;
      default:
LABEL_22:
        if (a2) {
LABEL_23:
        }
          a1[v5] = -(char)a2;
        break;
    }
  }
}

uint64_t sub_2588D1944(unsigned __int8 *a1, uint64_t a2)
{
  unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 24) - 8) + 64);
  if (v2 <= *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64)) {
    unint64_t v2 = *(void *)(*(void *)(*(void *)(a2 + 16) - 8) + 64);
  }
  uint64_t v3 = a1[v2];
  int v4 = v3 - 2;
  if (v3 >= 2)
  {
    if (v2 <= 3) {
      uint64_t v5 = v2;
    }
    else {
      uint64_t v5 = 4;
    }
    switch(v5)
    {
      case 1:
        int v6 = *a1;
        goto LABEL_12;
      case 2:
        int v6 = *(unsigned __int16 *)a1;
        goto LABEL_12;
      case 3:
        int v6 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_12;
      case 4:
        int v6 = *(_DWORD *)a1;
LABEL_12:
        unsigned int v7 = (v6 | (v4 << (8 * v2))) + 2;
        LODWORD(v3) = v6 + 2;
        if (v2 >= 4) {
          uint64_t v3 = v3;
        }
        else {
          uint64_t v3 = v7;
        }
        break;
      default:
        return v3;
    }
  }
  return v3;
}

void sub_2588D1A0C(unsigned char *a1, unsigned int a2, uint64_t a3)
{
  if (a2 > 1)
  {
    uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
    if (*(void *)(v6 + 64) <= *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64)) {
      size_t v7 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64);
    }
    unsigned int v8 = a2 - 2;
    if (v7 < 4)
    {
      unsigned int v9 = v8 >> (8 * v7);
      int v10 = v8 & ~(-1 << (8 * v7));
      a1[v7] = v9 + 2;
      bzero(a1, v7);
      if (v7 == 3)
      {
        *(_WORD *)a1 = v10;
        a1[2] = BYTE2(v10);
      }
      else if (v7 == 2)
      {
        *(_WORD *)a1 = v10;
      }
      else
      {
        *a1 = v10;
      }
    }
    else
    {
      a1[v7] = 2;
      bzero(a1, v7);
      *(_DWORD *)a1 = v8;
    }
  }
  else
  {
    uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
    unint64_t v5 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
    if (*(void *)(v4 + 64) > v5) {
      unint64_t v5 = *(void *)(v4 + 64);
    }
    a1[v5] = a2;
  }
}

uint64_t _s15ParsingInternal16ContextfulParserPAAE11takeContextQryF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, v5, a2, a3);
  int v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a1);
}

uint64_t (*TakeContext.base.modify())()
{
  return nullsub_1;
}

uint64_t TakeContext.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v21 = a2;
  uint64_t v20 = a1;
  uint64_t v9 = *(void *)(a5 + 16);
  uint64_t v8 = *(void *)(a5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v12, v13, v14);
  uint64_t v16 = (char *)&v19 - v15;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 24))(a3, a4, v9, v8);
  if (!v5)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v11 + 32))(v20, v16, AssociatedTypeWitness);
    uint64_t v18 = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16))(v21, a4, v18);
  }
  return result;
}

uint64_t sub_2588D1DD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  return TakeContext.parse(_:context:)(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), a1, a2, a3);
}

uint64_t (*ReplaceContext.base.modify())()
{
  return nullsub_1;
}

uint64_t ReplaceContext.parse(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, void))(*(void *)(a3 + 24) + 24))(a1, a2, *(void *)(a3 + 16), *(void *)(a3 + 24));
  if (!v4)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a4, a2, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588D1F80@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return ReplaceContext.parse(_:context:)(a1, a2, a3, a4);
}

uint64_t type metadata accessor for TakeContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588D1FB8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588D2114(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588D232CLL);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for ReplaceContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588D236C(void *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzlAA11TakeContextVyxGAaBHPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for TakeContext);
}

uint64_t sub_2588D2398(void *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzlAA11TakeContextVyxGAaBHPyHCTm(a1, (void (*)(uint64_t, void, void))type metadata accessor for ReplaceContext);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzlAA11TakeContextVyxGAaBHPyHCTm(void *a1, void (*a2)(uint64_t, void, void))
{
  a2(255, *a1, a1[1]);
  return swift_getWitnessTable();
}

uint64_t Collect.count.getter()
{
  return *(void *)v0;
}

uint64_t Collect.count.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t (*Collect.count.modify())()
{
  return nullsub_1;
}

uint64_t Collect.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t Collect.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*Collect.base.modify())()
{
  return nullsub_1;
}

uint64_t Collect.init(count:into:parser:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X3>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  uint64_t v5 = type metadata accessor for Collect();
  a3(v5, v6, v7, v8);
  return swift_release();
}

uint64_t type metadata accessor for Collect()
{
  return swift_getGenericMetadata();
}

uint64_t Collect.init<>(count:parser:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, void (*a3)(uint64_t, uint64_t, uint64_t, uint64_t)@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = a1;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  swift_getAssociatedTypeWitness();
  sub_2588F02C8();
  swift_getWitnessTable();
  uint64_t v5 = type metadata accessor for Collect();
  a3(v5, v6, v7, v8);
  return swift_release();
}

uint64_t Collect.parser.getter@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v61 = a2;
  uint64_t v3 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v64 = a1[2];
  uint64_t v4 = v64;
  uint64_t v65 = v3;
  uint64_t v66 = v6;
  uint64_t v67 = v5;
  uint64_t v7 = type metadata accessor for CollectUntilEnd();
  uint64_t v55 = *(void *)(v7 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v7, v8, v9, v10);
  uint64_t v57 = (uint64_t)&v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11, v13, v14, v15);
  uint64_t v54 = (uint64_t)&v52 - v16;
  uint64_t v64 = v4;
  uint64_t v65 = v3;
  uint64_t v66 = v6;
  uint64_t v67 = v5;
  uint64_t v17 = type metadata accessor for CollectCount();
  uint64_t v56 = *(void *)(v17 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v17, v18, v19, v20);
  uint64_t v53 = (uint64_t)&v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v23, v24, v25);
  uint64_t v27 = (char *)&v52 - v26;
  uint64_t v28 = type metadata accessor for EitherParser();
  uint64_t v60 = *(void *)(v28 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v28, v29, v30, v31);
  uint64_t v59 = (uint64_t)&v52 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v32, v34, v35, v36);
  uint64_t v58 = (uint64_t)&v52 - v37;
  if (*(unsigned char *)(v2 + 8))
  {
    uint64_t v56 = v28;
    uint64_t v39 = v54;
    uint64_t v38 = v55;
    ContextfulParser.collectUntilEnd<A>(into:)(v3, v4, v3, v6, v54);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getWitnessTable();
    uint64_t v41 = v57;
    static ParserBuilder.buildPartialBlock<A, B, C>(first:)(v39, v7, v57);
    uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
    v42(v39, v7);
    swift_getWitnessTable();
    uint64_t v43 = v58;
    static ParserBuilder.buildEither<A, B, C, D>(second:)(v41, v7, v58);
    v42(v41, v7);
    uint64_t v28 = v56;
  }
  else
  {
    ContextfulParser.collect<A>(count:into:)(*(void *)v2, v4, v3, (uint64_t)v27);
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    swift_getWitnessTable();
    uint64_t v44 = v53;
    static ParserBuilder.buildPartialBlock<A, B, C>(first:)((uint64_t)v27, v17, v53);
    char v45 = *(void (**)(char *, uint64_t))(v56 + 8);
    v45(v27, v17);
    swift_getWitnessTable();
    uint64_t v43 = v58;
    static ParserBuilder.buildEither<A, B, C, D>(first:)(v44, v17, v58);
    v45((char *)v44, v17);
  }
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v62 = WitnessTable;
  uint64_t v63 = v47;
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v49 = v59;
  static ParserBuilder.buildPartialBlock<A, B, C>(first:)(v43, v28, v59);
  uint64_t v50 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
  v50(v43, v28);
  static ParserBuilder.buildFinalResult<A, B, C>(_:)(v49, v3, AssociatedTypeWitness, v28, v48);
  return ((uint64_t (*)(uint64_t, uint64_t))v50)(v49, v28);
}

uint64_t sub_2588D2B70()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_2588D2BB8(uint64_t a1)
{
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_2588D2BF4()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588D2C90(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 9) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 9) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_2588D2E0C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 9) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588D3040);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 9] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_2588D3068()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser<>.collectBytes()(uint64_t a1, uint64_t a2)
{
  return sub_2588D31B4(a1, a2, (uint64_t (*)(void))ContextfulParser<>.parseSlice<A, B>(with:));
}

{
  return sub_2588D31B4(a1, a2, (uint64_t (*)(void))ContextfulParser<>.parseOutput<A, B>(with:));
}

uint64_t type metadata accessor for CollectBytesParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContextfulParser<>.collectBytes<A>(into:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_2588D32D8(a1, a2, a3, a4, a5, (uint64_t (*)(void))ContextfulParser<>.parseSlice<A, B>(with:));
}

{
  return sub_2588D32D8(a1, a2, a3, a4, a5, (uint64_t (*)(void))ContextfulParser<>.parseOutput<A, B>(with:));
}

uint64_t sub_2588D31B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_26A0A1B98);
  swift_getAssociatedTypeWitness();
  sub_2588C2E84(&qword_26A0A1BA0, &qword_26A0A1B98);
  type metadata accessor for CollectBytesParser();
  swift_getWitnessTable();
  return a3();
}

uint64_t sub_2588D32D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  swift_getAssociatedTypeWitness();
  type metadata accessor for CollectBytesParser();
  swift_getWitnessTable();
  return a6();
}

uint64_t ContextfulParser<>.collectBytes<A>(into:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  uint64_t v8 = type metadata accessor for CollectBytesParser();
  uint64_t WitnessTable = swift_getWitnessTable();
  return ContextfulParser<>.parseOutput<A, B>(with:)(WitnessTable, a1, a2, v8, a3, WitnessTable, a4);
}

uint64_t CollectBytesParser.parse(_:context:)(unint64_t *a1)
{
  uint64_t result = sub_2588F0348();
  unint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (v4 < (uint64_t)*a1)
  {
    __break(1u);
    goto LABEL_9;
  }
  if ((v3 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  unint64_t v5 = a1[2];
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 >= v3 && (uint64_t)v6 >= v4)
  {
    swift_bridgeObjectRetain();
    sub_2588F0328();
    uint64_t result = swift_bridgeObjectRelease();
    *a1 = v4;
    a1[1] = v4;
    a1[2] = v5;
    return result;
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2588D3544(unint64_t *a1)
{
  return CollectBytesParser.parse(_:context:)(a1);
}

uint64_t sub_2588D3570()
{
  return sub_2588C2E84(&qword_26A0A26B0, qword_26A0A26B8);
}

uint64_t sub_2588D35AC()
{
  type metadata accessor for CollectBytesParser();
  return swift_getWitnessTable();
}

uint64_t sub_2588D3600(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzAA0D5RangeV6OutputRtzlAA010ParseSliceD0VyxAA012CollectBytesD0VySays5UInt8VG7ContextQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for ParseSliceParser);
}

uint64_t sub_2588D362C(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__AA0D5RangeV6OutputRtzs5UInt8V7ElementRtd__r__lAA010ParseSliceD0VyxAA012CollectBytesD0Vyqd__7ContextQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for ParseSliceParser);
}

uint64_t sub_2588D3658(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzAA0D5RangeV6OutputRtzlAA010ParseSliceD0VyxAA012CollectBytesD0VySays5UInt8VG7ContextQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for MapThroughParser);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzAA0D5RangeV6OutputRtzlAA010ParseSliceD0VyxAA012CollectBytesD0VySays5UInt8VG7ContextQzGGAaBHPyHCTm(uint64_t *a1, void (*a2)(uint64_t, void *))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_26A0A1B98);
  swift_getAssociatedTypeWitness();
  sub_2588C2E84(&qword_26A0A1BA0, &qword_26A0A1B98);
  v6[0] = v3;
  v6[1] = type metadata accessor for CollectBytesParser();
  v6[2] = v4;
  v6[3] = swift_getWitnessTable();
  a2(255, v6);
  return swift_getWitnessTable();
}

uint64_t sub_2588D3780(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__AA0D5RangeV6OutputRtzs5UInt8V7ElementRtd__r__lAA010ParseSliceD0VyxAA012CollectBytesD0Vyqd__7ContextQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for MapThroughParser);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__AA0D5RangeV6OutputRtzs5UInt8V7ElementRtd__r__lAA010ParseSliceD0VyxAA012CollectBytesD0Vyqd__7ContextQzGGAaBHPyHCTm(uint64_t *a1, void (*a2)(uint64_t, void *))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[2];
  swift_getAssociatedTypeWitness();
  v6[0] = v3;
  v6[1] = type metadata accessor for CollectBytesParser();
  v6[2] = v4;
  v6[3] = swift_getWitnessTable();
  a2(255, v6);
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.map<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v12, v5);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a3);
  unsigned int v13 = (void *)(a5 + *(int *)(type metadata accessor for MapParser() + 44));
  *unsigned int v13 = a1;
  v13[1] = a2;
  return swift_retain();
}

uint64_t MapParser.init(base:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for MapParser();
  size_t v9 = (void *)(a5 + *(int *)(result + 44));
  *size_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for MapParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t MapParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t MapParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*MapParser.base.modify())()
{
  return nullsub_1;
}

uint64_t MapParser.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 44));
  swift_retain();
  return v2;
}

uint64_t MapParser.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v6 = (void *)(v3 + *(int *)(a3 + 44));
  uint64_t result = swift_release();
  *unint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*MapParser.transform.modify())()
{
  return nullsub_1;
}

double MapParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588D3DB8);
}

uint64_t sub_2588D3BC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  v22[1] = a5;
  v22[3] = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, v17);
  uint64_t v19 = (char *)v22 - v18;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a3, a4, a6);
  if (!v7)
  {
    uint64_t v21 = type metadata accessor for MapParser();
    (*(void (**)(char *))(a2 + *(int *)(v21 + 44)))(v19);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v19, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588D3DB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588D3BC4(a1, v2[5], v2[6], v2[2], v2[3], v2[4], a2);
}

double sub_2588D3DDC()
{
  return MapParser.parse(_:context:)();
}

uint64_t sub_2588D3DF4(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588D3F40);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588D3F54(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588D4134);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588D415C()
{
  type metadata accessor for MapParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.concatenating<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v11 = (char *)&v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v16 = MEMORY[0x270FA5388](v12, v13, v14, v15);
  uint64_t v18 = (char *)&v22 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v19 + 16))(v18, v20, a2, v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a1, a4);
  return SequentialParser.init(left:right:)((uint64_t)v18, (uint64_t)v11, a2, a4, a5);
}

uint64_t SequentialParser.init(left:right:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for SequentialParser();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for SequentialParser()
{
  return swift_getGenericMetadata();
}

uint64_t SequentialParser.left.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SequentialParser.left.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SequentialParser.left.modify())()
{
  return nullsub_1;
}

uint64_t SequentialParser.right.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t SequentialParser.right.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*SequentialParser.right.modify())()
{
  return nullsub_1;
}

void SequentialParser.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  uint64_t v25 = a3;
  uint64_t v22 = a1;
  uint64_t v23 = a2;
  uint64_t v7 = a5[4];
  uint64_t v8 = a5[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = a5[5];
  uint64_t v11 = a5[3];
  uint64_t v12 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  MEMORY[0x270FA5388](TupleTypeMetadata2, v14, v15, v16);
  uint64_t v18 = (char *)&v22 - v17;
  uint64_t v26 = v8;
  uint64_t v27 = v11;
  uint64_t v28 = v7;
  uint64_t v29 = v10;
  uint64_t v30 = v24;
  uint64_t v31 = a4;
  uint64_t v19 = v32;
  double v20 = ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588D4BB8);
  if (!v19)
  {
    uint64_t v21 = &v18[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(uint64_t, char *, uint64_t, double))(*(void *)(AssociatedTypeWitness - 8) + 32))(v22, v18, AssociatedTypeWitness, v20);
    (*(void (**)(uint64_t, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v23, v21, v12);
  }
}

uint64_t sub_2588D4904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v33 = a8;
  uint64_t v34 = a7;
  uint64_t v38 = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v32 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  uint64_t v39 = (char *)&v30 - v17;
  uint64_t v18 = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18, v20, v21, v22);
  uint64_t v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24);
  uint64_t v36 = a3;
  uint64_t v37 = a1;
  uint64_t v35 = a2;
  uint64_t v24 = v44;
  uint64_t result = v23(a1, a3, a4, a6);
  if (!v24)
  {
    uint64_t v31 = v19;
    uint64_t v44 = v18;
    uint64_t v26 = v38;
    uint64_t v40 = a4;
    uint64_t v41 = v38;
    uint64_t v42 = a6;
    uint64_t v27 = v34;
    uint64_t v43 = v34;
    type metadata accessor for SequentialParser();
    uint64_t v28 = v39;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v27 + 24))(v37, v36, v26, v27);
    uint64_t v29 = v33 + *(int *)(swift_getTupleTypeMetadata2() + 48);
    (*(void (**)(void))(v31 + 32))();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v29, v28, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588D4BB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588D4904(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

void sub_2588D4BDC(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, uint64_t a4@<X8>)
{
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  SequentialParser.parse(_:context:)(a4, a4 + *(int *)(TupleTypeMetadata2 + 48), a1, a2, a3);
}

uint64_t sub_2588D4CA8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588D4EA0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588D516CLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588D5194()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588D51F0()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.collect(stoppingWhen:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_2588D5550(a1, a2, a3, a4, (uint64_t (*)(void, void *))type metadata accessor for CollectUntil, a5);
}

uint64_t CollectUntil.init(base:shouldStop:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D56E8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntil, a8);
}

uint64_t type metadata accessor for CollectUntil()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser.collect<A>(into:stoppingWhen:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D57CC(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntil, a8);
}

uint64_t ContextfulParser.collect(stoppingWhenCollection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v12 = (char *)v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v12, v13);
  size_t v14 = (void *)swift_allocObject();
  v14[2] = a3;
  v14[3] = a4;
  v14[4] = a1;
  v14[5] = a2;
  swift_getAssociatedTypeWitness();
  uint64_t v15 = sub_2588F02C8();
  uint64_t WitnessTable = swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v12, a3);
  v19[0] = a3;
  v19[1] = v15;
  void v19[2] = a4;
  v19[3] = WitnessTable;
  int v17 = (void *)(a5 + *(int *)(type metadata accessor for CollectUntilContainer() + 52));
  *int v17 = sub_2588D54C0;
  v17[1] = v14;
  return swift_retain();
}

uint64_t sub_2588D5488()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2588D54C0(void *a1)
{
  return (*(uint64_t (**)(void))(v1 + 32))(*a1) & 1;
}

uint64_t CollectUntilContainer.init(base:shouldStop:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D56E8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntilContainer, a8);
}

uint64_t type metadata accessor for CollectUntilContainer()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser.collect<A>(into:stoppingWhenCollection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D57CC(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntilContainer, a8);
}

uint64_t ContextfulParser.collect(stoppingWhenContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return sub_2588D5550(a1, a2, a3, a4, (uint64_t (*)(void, void *))type metadata accessor for CollectUntilContext, a5);
}

uint64_t sub_2588D5550@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t (*a5)(void, void *)@<X4>, uint64_t a6@<X8>)
{
  uint64_t v12 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  size_t v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v12 + 16))(v14, v15);
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_2588F02C8();
  uint64_t WitnessTable = swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, a3);
  v20[0] = a3;
  v20[1] = v16;
  v20[2] = a4;
  v20[3] = WitnessTable;
  unsigned int v18 = (void *)(a6 + *(int *)(a5(0, v20) + 52));
  *unsigned int v18 = a1;
  v18[1] = a2;
  return swift_retain();
}

uint64_t CollectUntilContext.init(base:shouldStop:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D56E8(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntilContext, a8);
}

uint64_t sub_2588D56E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(void, void *)@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a9, a1, a4);
  v19[0] = a4;
  v19[1] = a5;
  void v19[2] = a6;
  v19[3] = a7;
  uint64_t result = a8(0, v19);
  unsigned int v18 = (void *)(a9 + *(int *)(result + 52));
  *unsigned int v18 = a2;
  v18[1] = a3;
  return result;
}

uint64_t type metadata accessor for CollectUntilContext()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser.collect<A>(into:stoppingWhenContext:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588D57CC(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, void *))type metadata accessor for CollectUntilContext, a8);
}

uint64_t sub_2588D57CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(void, void *)@<X7>, uint64_t a9@<X8>)
{
  uint64_t v24 = a8;
  uint64_t v17 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v19 = (char *)&v23 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v9, v20);
  (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(a9, v19, a4);
  v25[0] = a4;
  v25[1] = a5;
  v25[2] = a6;
  v25[3] = a7;
  int v21 = (void *)(a9 + *(int *)(v24(0, v25) + 52));
  *int v21 = a2;
  v21[1] = a3;
  return swift_retain();
}

uint64_t (*CollectUntil.base.modify())()
{
  return nullsub_1;
}

uint64_t CollectUntil.shouldStop.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 52));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*CollectUntil.shouldStop.modify())()
{
  return nullsub_1;
}

double CollectUntil.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588D6104(a1, a2, a3, (void (*)(long long *))sub_2588D5CC4);
}

uint64_t sub_2588D59C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v47 = a3;
  uint64_t v42 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v38 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  uint64_t v40 = (char *)&v33 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v19, v20, v21);
  uint64_t v23 = (char *)&v33 - v22;
  uint64_t v33 = a7;
  sub_2588F0348();
  uint64_t v24 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24);
  uint64_t v25 = v39;
  v24(v42, v47, a4, a6);
  if (v25) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a5 - 8) + 8))(a8, a5);
  }
  uint64_t v39 = a8;
  uint64_t v27 = v33;
  uint64_t v34 = (void (**)(char *, char *, uint64_t))(v38 + 2);
  uint64_t v35 = v24;
  uint64_t v37 = a4;
  ++v38;
  uint64_t v36 = a6 + 24;
  while (1)
  {
    uint64_t v43 = a4;
    uint64_t v44 = a5;
    uint64_t v45 = a6;
    uint64_t v46 = v27;
    uint64_t v28 = type metadata accessor for CollectUntil();
    if ((*(uint64_t (**)(char *))(a2 + *(int *)(v28 + 52)))(v23)) {
      break;
    }
    uint64_t v29 = v23;
    uint64_t v30 = v23;
    uint64_t v31 = AssociatedTypeWitness;
    (*v34)(v40, v29, AssociatedTypeWitness);
    sub_2588F0338();
    uint64_t v32 = v31;
    uint64_t v23 = v30;
    (*v38)(v30, v32);
    a4 = v37;
    v35(v42, v47, v37, a6);
  }
  return ((uint64_t (*)(char *, uint64_t))*v38)(v23, AssociatedTypeWitness);
}

uint64_t sub_2588D5CC4(uint64_t a1)
{
  return sub_2588D6538(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2588D59C4);
}

double sub_2588D5CF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CollectUntil.parse(_:context:)(a1, a2, a3);
}

uint64_t (*CollectUntilContainer.base.modify())()
{
  return nullsub_1;
}

uint64_t (*CollectUntilContainer.shouldStop.modify())()
{
  return nullsub_1;
}

double CollectUntilContainer.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588D6104(a1, a2, a3, (void (*)(long long *))sub_2588D600C);
}

uint64_t sub_2588D5D84@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9 = v8;
  uint64_t v46 = a1;
  uint64_t v47 = a3;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v17 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v21 = MEMORY[0x270FA5388](AssociatedTypeWitness, v18, v19, v20);
  uint64_t v42 = (char *)&v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21, v23, v24, v25);
  uint64_t v48 = a8;
  uint64_t v49 = a5;
  uint64_t v27 = (char *)&v38 - v26;
  uint64_t v43 = a7;
  sub_2588F0348();
  uint64_t v44 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24);
  uint64_t v45 = a6 + 24;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v17 + 16);
  uint64_t v40 = (void (**)(char *, uint64_t))(v17 + 8);
  uint64_t v41 = v27;
  uint64_t v28 = v48;
  while (1)
  {
    v44(v46, v47, a4, a6);
    if (v9) {
      break;
    }
    (*v39)(v42, v27, AssociatedTypeWitness);
    uint64_t v29 = a6;
    uint64_t v30 = v49;
    uint64_t v54 = 0;
    uint64_t v31 = a2;
    uint64_t v32 = v43;
    sub_2588F0338();
    uint64_t v50 = a4;
    uint64_t v51 = v30;
    a6 = v29;
    uint64_t v52 = v29;
    uint64_t v53 = v32;
    a2 = v31;
    uint64_t v33 = type metadata accessor for CollectUntilContainer();
    uint64_t v34 = v54;
    char v35 = (*(uint64_t (**)(uint64_t))(v31 + *(int *)(v33 + 52)))(v28);
    uint64_t v9 = v34;
    if (v34)
    {
      (*v40)(v41, AssociatedTypeWitness);
      return (*(uint64_t (**)(uint64_t))(*(void *)(v49 - 8) + 8))(v48);
    }
    char v36 = v35;
    uint64_t v27 = v41;
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v40)(v41, AssociatedTypeWitness);
    if (v36) {
      return result;
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)(v49 - 8) + 8))(v48);
}

uint64_t sub_2588D600C(uint64_t a1)
{
  return sub_2588D6538(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2588D5D84);
}

double sub_2588D6038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CollectUntilContainer.parse(_:context:)(a1, a2, a3);
}

uint64_t (*CollectUntilContext.base.modify())()
{
  return nullsub_1;
}

uint64_t _s15ParsingInternal12CollectUntilV10shouldStopySb6OutputQzKcvg_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_retain();
  return v2;
}

uint64_t (*CollectUntilContext.shouldStop.modify())()
{
  return nullsub_1;
}

double CollectUntilContext.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588D6104(a1, a2, a3, (void (*)(long long *))sub_2588D650C);
}

double sub_2588D6104(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  return ByteBuffer.atomically<A>(_:)(a4);
}

uint64_t sub_2588D6158@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v50 = a3;
  uint64_t v60 = a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, v17);
  uint64_t v56 = (char *)&v49 - v18;
  uint64_t v61 = a4;
  uint64_t v19 = a2;
  uint64_t v20 = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v20, v22, v23, v24);
  uint64_t v55 = (char *)&v49 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25, v27, v28, v29);
  uint64_t v69 = (char *)&v49 - v30;
  uint64_t v62 = a8;
  uint64_t v63 = a5;
  uint64_t v31 = v64;
  uint64_t v32 = a6;
  uint64_t v33 = v50;
  uint64_t v57 = a7;
  sub_2588F0348();
  uint64_t v58 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 24);
  uint64_t v59 = v32 + 24;
  uint64_t v51 = (void (**)(char *, uint64_t, uint64_t))(v54 + 2);
  uint64_t v52 = (void (**)(char *, char *, uint64_t))(v21 + 16);
  uint64_t v53 = v54 + 1;
  uint64_t v54 = (void (**)(char *, uint64_t))(v21 + 8);
  while (1)
  {
    uint64_t v34 = v61;
    v58(v60, v33, v61, v32);
    if (v31) {
      break;
    }
    (*v52)(v55, v69, v20);
    uint64_t v64 = 0;
    uint64_t v35 = v63;
    uint64_t v36 = v20;
    uint64_t v37 = AssociatedTypeWitness;
    uint64_t v38 = v19;
    uint64_t v39 = v33;
    uint64_t v40 = v32;
    uint64_t v41 = v57;
    sub_2588F0338();
    uint64_t v65 = v34;
    uint64_t v66 = v35;
    uint64_t v42 = v40;
    uint64_t v67 = v40;
    uint64_t v68 = v41;
    uint64_t v33 = v39;
    uint64_t v19 = v38;
    uint64_t AssociatedTypeWitness = v37;
    uint64_t v43 = *(uint64_t (**)(char *))(v19 + *(int *)(type metadata accessor for CollectUntilContext() + 52));
    uint64_t v44 = v56;
    (*v51)(v56, v33, v37);
    uint64_t v45 = v64;
    char v46 = v43(v44);
    uint64_t v31 = v45;
    if (v45)
    {
      (*v53)(v44, v37);
      (*v54)(v69, v36);
      return (*(uint64_t (**)(uint64_t))(*(void *)(v63 - 8) + 8))(v62);
    }
    char v47 = v46;
    (*v53)(v44, v37);
    uint64_t result = ((uint64_t (*)(char *, uint64_t))*v54)(v69, v36);
    uint64_t v32 = v42;
    uint64_t v20 = v36;
    if (v47) {
      return result;
    }
  }
  return (*(uint64_t (**)(uint64_t))(*(void *)(v63 - 8) + 8))(v62);
}

uint64_t sub_2588D650C(uint64_t a1)
{
  return sub_2588D6538(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2588D6158);
}

uint64_t sub_2588D6538(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

double sub_2588D6564(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return CollectUntilContext.parse(_:context:)(a1, a2, a3);
}

uint64_t sub_2588D65A0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588D663C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588D6788);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588D679C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588D697CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588D69A4(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzlAA12CollectUntilVyxSay6OutputQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for CollectUntil);
}

uint64_t sub_2588D69D0(_OWORD *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__7ElementQyd__6OutputRtzr__lAA12CollectUntilVyxqd__GAaBHPyHCTm(a1, (void (*)(uint64_t, _OWORD *))type metadata accessor for CollectUntil);
}

uint64_t sub_2588D69FC(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzlAA12CollectUntilVyxSay6OutputQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for CollectUntilContainer);
}

uint64_t sub_2588D6A28(_OWORD *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__7ElementQyd__6OutputRtzr__lAA12CollectUntilVyxqd__GAaBHPyHCTm(a1, (void (*)(uint64_t, _OWORD *))type metadata accessor for CollectUntilContainer);
}

uint64_t sub_2588D6A54(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzlAA12CollectUntilVyxSay6OutputQzGGAaBHPyHCTm(a1, (void (*)(uint64_t, void *))type metadata accessor for CollectUntilContext);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzlAA12CollectUntilVyxSay6OutputQzGGAaBHPyHCTm(uint64_t *a1, void (*a2)(uint64_t, void *))
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  swift_getAssociatedTypeWitness();
  v6[0] = v3;
  v6[1] = sub_2588F02C8();
  v6[2] = v4;
  v6[3] = swift_getWitnessTable();
  a2(255, v6);
  return swift_getWitnessTable();
}

uint64_t sub_2588D6B30(_OWORD *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__7ElementQyd__6OutputRtzr__lAA12CollectUntilVyxqd__GAaBHPyHCTm(a1, (void (*)(uint64_t, _OWORD *))type metadata accessor for CollectUntilContext);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzSmRd__7ElementQyd__6OutputRtzr__lAA12CollectUntilVyxqd__GAaBHPyHCTm(_OWORD *a1, void (*a2)(uint64_t, _OWORD *))
{
  long long v2 = a1[1];
  v4[0] = *a1;
  v4[1] = v2;
  a2(255, v4);
  return swift_getWitnessTable();
}

uint64_t Seeking<A>(toRelativeOffset:byteCount:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v8 = a3;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v13);
  if (!v6)
  {
    uint64_t v18 = type metadata accessor for TempSeekingParser();
    uint64_t v19 = *(int *)(v18 + 40);
    int v23 = v8;
    uint64_t v20 = a6 + v19;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v15, a5);
    uint64_t v21 = a6 + *(int *)(v18 + 36);
    *(void *)(v21 + 8) = 0;
    *(void *)(v21 + 16) = 0;
    *(void *)uint64_t v21 = a1;
    *(unsigned char *)(v21 + 24) = 1;
    *(void *)uint64_t v20 = a2;
    *(unsigned char *)(v20 + 8) = v23 & 1;
  }
  return result;
}

uint64_t TempSeekingParser.init(base:offset:count:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v17 = type metadata accessor for TempSeekingParser();
  uint64_t v18 = a9 + *(int *)(v17 + 40);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a8 - 8) + 32))(a9, a1, a8);
  uint64_t v20 = a9 + *(int *)(v17 + 36);
  *(void *)uint64_t v20 = a2;
  *(void *)(v20 + 8) = a3;
  *(void *)(v20 + 16) = a4;
  *(unsigned char *)(v20 + 24) = a5;
  *(void *)uint64_t v18 = a6;
  *(unsigned char *)(v18 + 8) = a7 & 1;
  return result;
}

uint64_t type metadata accessor for TempSeekingParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Seeking<A>(toAbsoluteOffset:byteCount:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v8 = a3;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v13);
  if (!v6)
  {
    uint64_t v18 = type metadata accessor for TempSeekingParser();
    uint64_t v19 = *(int *)(v18 + 40);
    int v23 = v8;
    uint64_t v20 = a6 + v19;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v15, a5);
    uint64_t v21 = a6 + *(int *)(v18 + 36);
    *(void *)(v21 + 8) = 0;
    *(void *)(v21 + 16) = 0;
    *(void *)uint64_t v21 = a1;
    *(unsigned char *)(v21 + 24) = 0;
    *(void *)uint64_t v20 = a2;
    *(unsigned char *)(v20 + 8) = v23 & 1;
  }
  return result;
}

uint64_t Seeking<A>(toOffsetFromEnd:byteCount:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  int v8 = a3;
  uint64_t v12 = *(void *)(a5 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v16(v13);
  if (!v6)
  {
    uint64_t v18 = type metadata accessor for TempSeekingParser();
    uint64_t v19 = *(int *)(v18 + 40);
    int v23 = v8;
    uint64_t v20 = a6 + v19;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v15, a5);
    uint64_t v21 = a6 + *(int *)(v18 + 36);
    *(void *)(v21 + 8) = 0;
    *(void *)(v21 + 16) = 0;
    *(void *)uint64_t v21 = a1;
    *(unsigned char *)(v21 + 24) = 3;
    *(void *)uint64_t v20 = a2;
    *(unsigned char *)(v20 + 8) = v23 & 1;
  }
  return result;
}

uint64_t Seeking<A>(relativeTo:offset:byteCount:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X7>, uint64_t a7@<X8>)
{
  uint64_t v27 = a1;
  uint64_t v14 = *(void *)(a6 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v18(v15);
  if (!v7)
  {
    uint64_t v20 = type metadata accessor for TempSeekingParser();
    int v26 = a5;
    uint64_t v21 = v20;
    uint64_t v22 = *(int *)(v20 + 40);
    uint64_t v25 = a4;
    uint64_t v23 = a7 + v22;
    uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(a7, v17, a6);
    uint64_t v24 = a7 + *(int *)(v21 + 36);
    *(void *)uint64_t v24 = v27;
    *(void *)(v24 + 8) = a2;
    *(void *)(v24 + 16) = a3;
    *(unsigned char *)(v24 + 24) = 2;
    *(void *)uint64_t v23 = v25;
    *(unsigned char *)(v23 + 8) = v26 & 1;
  }
  return result;
}

uint64_t ByteBuffer.seeking(to:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v8 = a1;
  switch(a4)
  {
    case 1:
      uint64_t v10 = -a5;
      if (__OFSUB__(0, a5))
      {
        __break(1u);
        goto LABEL_25;
      }
      uint64_t v11 = a6 - a5;
      if (__OFSUB__(a6, a5))
      {
LABEL_25:
        __break(1u);
        goto LABEL_26;
      }
      if (v11 < v10)
      {
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x2588D7384);
      }
      unint64_t v9 = 0xD000000000000032;
      unint64_t v12 = 0x8000000258901B80;
      if (v10 > a1 || v11 < a1) {
        goto LABEL_22;
      }
      uint64_t v8 = a5 + a1;
      if (a5 + a1 > a6)
      {
        __break(1u);
LABEL_10:
        unint64_t v9 = 0xD000000000000028;
        BOOL v13 = __OFADD__(v8, a3);
        v8 += a3;
        if (v13)
        {
          unint64_t v9 = 0xD00000000000001DLL;
          unint64_t v12 = 0x8000000258901D00;
LABEL_22:
          sub_2588BBC70();
          swift_allocError();
          *uint64_t v17 = 2;
          v17[1] = a5;
          v17[2] = v9;
          v17[3] = v12;
          void v17[4] = 0;
          swift_willThrow();
          return v8;
        }
LABEL_13:
        unint64_t v12 = 0x8000000258901B50;
        if (v8 < 0 || *(void *)(a7 + 16) < v8) {
          goto LABEL_22;
        }
      }
LABEL_21:
      swift_bridgeObjectRetain();
      return v8;
    case 2:
      goto LABEL_10;
    case 3:
      uint64_t v14 = a6 - a5;
      if (__OFSUB__(a6, a5)) {
        goto LABEL_27;
      }
      if (v14 < 0) {
        goto LABEL_28;
      }
      unint64_t v9 = 0xD000000000000032;
      unint64_t v12 = 0x8000000258901B80;
      if (a1 < 0) {
        goto LABEL_22;
      }
      BOOL v15 = v14 < a1;
      uint64_t v16 = v14 - a1;
      if (v15) {
        goto LABEL_22;
      }
      uint64_t v8 = v16 + a5;
      if (v16 + a5 <= a6) {
        goto LABEL_21;
      }
      goto LABEL_29;
    default:
      unint64_t v9 = 0xD000000000000028;
      goto LABEL_13;
  }
}

uint64_t TempSeekingParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t TempSeekingParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*TempSeekingParser.base.modify())()
{
  return nullsub_1;
}

uint64_t TempSeekingParser.offset.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 36));
}

uint64_t TempSeekingParser.offset.setter(uint64_t result, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v6 = v5 + *(int *)(a5 + 36);
  *(void *)uint64_t v6 = result;
  *(void *)(v6 + 8) = a2;
  *(void *)(v6 + 16) = a3;
  *(unsigned char *)(v6 + 24) = a4;
  return result;
}

uint64_t (*TempSeekingParser.offset.modify())()
{
  return nullsub_1;
}

uint64_t TempSeekingParser.count.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 40));
}

uint64_t TempSeekingParser.count.setter(uint64_t result, char a2, uint64_t a3)
{
  uint64_t v4 = v3 + *(int *)(a3 + 40);
  *(void *)uint64_t v4 = result;
  *(unsigned char *)(v4 + 8) = a2 & 1;
  return result;
}

uint64_t (*TempSeekingParser.count.modify())()
{
  return nullsub_1;
}

uint64_t TempSeekingParser.parse(_:context:)(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v8 = a1[2];
  uint64_t v9 = v3 + *(int *)(a3 + 36);
  uint64_t v10 = *(void *)v9;
  switch(*(unsigned char *)(v9 + 24))
  {
    case 1:
      uint64_t result = sub_2588C2CC4(*(void *)v9, v7, v6);
      if (!v4) {
        goto LABEL_12;
      }
      return result;
    case 2:
      uint64_t v15 = *(void *)(v9 + 16);
      BOOL v16 = __OFADD__(v10, v15);
      v10 += v15;
      if (!v16) {
        goto LABEL_7;
      }
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v17 = 2;
      v17[1] = v7;
      v17[2] = 0xD00000000000001DLL;
      v17[3] = 0x8000000258901D00;
      goto LABEL_10;
    case 3:
      uint64_t result = sub_2588C2D8C(*(void *)v9, v7, v6);
      if (v4) {
        return result;
      }
LABEL_12:
      uint64_t v10 = result;
      uint64_t v18 = v13;
      uint64_t v8 = v14;
LABEL_13:
      swift_bridgeObjectRetain();
      uint64_t v27 = v10;
      uint64_t v28 = v18;
      uint64_t v29 = v8;
      uint64_t v20 = v3 + *(int *)(a3 + 40);
      if (*(unsigned char *)(v20 + 8)) {
        goto LABEL_16;
      }
      uint64_t v21 = sub_2588D770C(&v27, v19, *(void *)v20);
      if (!v4)
      {
        uint64_t v24 = (uint64_t)v21;
        uint64_t v25 = v22;
        uint64_t v26 = v23;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        uint64_t v27 = v24;
        uint64_t v28 = v25;
        uint64_t v29 = v26;
LABEL_16:
        (*(void (**)(uint64_t *, uint64_t, void))(*(void *)(a3 + 24) + 24))(&v27, a2, *(void *)(a3 + 16));
      }
      return swift_bridgeObjectRelease();
    default:
LABEL_7:
      if ((v10 & 0x8000000000000000) == 0)
      {
        uint64_t v18 = *(void *)(v8 + 16);
        if (v18 >= v10) {
          goto LABEL_13;
        }
      }
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v17 = 2;
      v17[1] = v7;
      v17[2] = 0xD000000000000028;
      v17[3] = 0x8000000258901B50;
LABEL_10:
      void v17[4] = 0;
      return swift_willThrow();
  }
}

uint64_t sub_2588D76F4(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return TempSeekingParser.parse(_:context:)(a1, a2, a3);
}

uint64_t *sub_2588D770C(uint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = *result;
  if (a3 < 0)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v5 = 0xD000000000000023;
    unint64_t v6 = 0x8000000258901A30;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v7 = 2;
    goto LABEL_6;
  }
  uint64_t v4 = result[1];
  if (__OFSUB__(v4, v3))
  {
    __break(1u);
  }
  else
  {
    if (v4 - v3 < a3)
    {
      sub_2588F0408();
      swift_bridgeObjectRelease();
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      unint64_t v5 = 0xD000000000000024;
      unint64_t v6 = 0x8000000258901A00;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v7 = 0;
LABEL_6:
      v7[1] = v3;
      v7[2] = v5;
      void v7[3] = v6;
      v7[4] = 0;
      swift_willThrow();
      return (uint64_t *)v3;
    }
    uint64_t v8 = v3 + a3;
    if (v3 + a3 >= v3 && v4 >= v8)
    {
      *uint64_t result = v8;
      return (uint64_t *)v3;
    }
  }
  __break(1u);
  return result;
}

__n128 __swift_memcpy25_8(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for OffsetKind(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for OffsetKind(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_2588D7968(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 24);
}

uint64_t sub_2588D7970(uint64_t result, char a2)
{
  *(unsigned char *)(result + 24) = a2;
  return result;
}

ValueMetadata *type metadata accessor for OffsetKind()
{
  return &type metadata for OffsetKind;
}

uint64_t sub_2588D7988()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588D7A2C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v9 = *a2;
    *int v4 = *a2;
    int v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (_OWORD *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = (long long *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    long long v12 = *v11;
    *(_OWORD *)((char *)v10 + 9) = *(long long *)((char *)v11 + 9);
    *uint64_t v10 = v12;
    unint64_t v13 = ((unint64_t)v4 + v6 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v14 = ((unint64_t)a2 + v6 + 39) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v10) = *(unsigned char *)(v14 + 8);
    *(void *)unint64_t v13 = *(void *)v14;
    *(unsigned char *)(v13 + 8) = (_BYTE)v10;
  }
  return v4;
}

uint64_t sub_2588D7B4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  uint64_t v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (long long *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v10 + 9);
  *uint64_t v9 = v11;
  unint64_t v12 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)unint64_t v12 = v14;
  return a1;
}

uint64_t sub_2588D7BF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  uint64_t v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (long long *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v10 + 9);
  *uint64_t v9 = v11;
  unint64_t v12 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)unint64_t v12 = v14;
  return a1;
}

uint64_t sub_2588D7C9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  uint64_t v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (long long *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v10 + 9);
  *uint64_t v9 = v11;
  unint64_t v12 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)unint64_t v12 = v14;
  return a1;
}

uint64_t sub_2588D7D44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t v7 = v6 + a1;
  uint64_t v8 = v6 + a2;
  uint64_t v9 = (_OWORD *)((v7 + 7) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (long long *)((v8 + 7) & 0xFFFFFFFFFFFFFFF8);
  long long v11 = *v10;
  *(_OWORD *)((char *)v9 + 9) = *(long long *)((char *)v10 + 9);
  *uint64_t v9 = v11;
  unint64_t v12 = (v7 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v13 = (v8 + 39) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v14 = *(void *)v13;
  *(unsigned char *)(v12 + 8) = *(unsigned char *)(v13 + 8);
  *(void *)unint64_t v12 = v14;
  return a1;
}

uint64_t sub_2588D7DEC(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0xFC) {
    unsigned int v7 = 252;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
    unsigned int v9 = (a2 - v7 + 255) >> (8 * v8);
    if (v8 < 4) {
      unsigned int v10 = v9 + 1;
    }
    else {
      unsigned int v10 = 2;
    }
    if (v10 >= 0x10000) {
      unsigned int v11 = 4;
    }
    else {
      unsigned int v11 = 2;
    }
    if (v10 < 0x100) {
      unsigned int v11 = 1;
    }
    if (v10 >= 2) {
      uint64_t v12 = v11;
    }
    else {
      uint64_t v12 = 0;
    }
    switch(v12)
    {
      case 1:
        int v13 = a1[v8];
        if (!a1[v8]) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v13 = *(unsigned __int16 *)&a1[v8];
        if (*(_WORD *)&a1[v8]) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588D7F4CLL);
      case 4:
        int v13 = *(_DWORD *)&a1[v8];
        if (!v13) {
          break;
        }
LABEL_22:
        int v15 = (v13 - 1) << (8 * v8);
        if (v8 >= 4) {
          int v15 = 0;
        }
        if (((v6 + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v16 = *a1;
        }
        else {
          int v16 = *(_DWORD *)a1;
        }
        return v7 + (v16 | v15) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0xFC) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unsigned int v17 = *(unsigned __int8 *)(((unint64_t)&a1[v6 + 7] & 0xFFFFFFFFFFFFFFF8) + 24);
  if (v17 > 3) {
    return (v17 ^ 0xFF) + 1;
  }
  else {
    return 0;
  }
}

void sub_2588D7F60(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0xFC) {
    unsigned int v8 = 252;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  size_t v10 = ((v9 + 39) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v11 = 8 * v10;
  if (v8 >= a3)
  {
    int v15 = 0;
    if (v8 >= a2)
    {
LABEL_17:
      switch(v15)
      {
        case 1:
          a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 2:
          *(_WORD *)&a1[v10] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_34;
        case 3:
          goto LABEL_46;
        case 4:
          *(_DWORD *)&a1[v10] = 0;
          goto LABEL_33;
        default:
LABEL_33:
          if (a2)
          {
LABEL_34:
            if (v7 < 0xFC)
            {
              unint64_t v21 = (unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8;
              if (a2 > 0xFC)
              {
                *(void *)(v21 + 8) = 0;
                *(void *)(v21 + 16) = 0;
                *(unsigned char *)(v21 + 24) = 0;
                *(void *)unint64_t v21 = a2 - 253;
              }
              else
              {
                *(unsigned char *)(v21 + 24) = -(char)a2;
              }
            }
            else
            {
              uint64_t v20 = *(void (**)(void))(v6 + 56);
              v20();
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v12 = (a3 - v8 + 255) >> v11;
    if (v10 <= 3) {
      unsigned int v13 = v12 + 1;
    }
    else {
      unsigned int v13 = 2;
    }
    if (v13 >= 0x10000) {
      int v14 = 4;
    }
    else {
      int v14 = 2;
    }
    if (v13 < 0x100) {
      int v14 = 1;
    }
    if (v13 >= 2) {
      int v15 = v14;
    }
    else {
      int v15 = 0;
    }
    if (v8 >= a2) {
      goto LABEL_17;
    }
  }
  unsigned int v16 = ~v8 + a2;
  unsigned int v17 = (~(_BYTE)v8 + a2);
  if (v10 < 4) {
    int v18 = (v16 >> v11) + 1;
  }
  else {
    int v18 = 1;
  }
  if (v10 >= 4) {
    unsigned int v19 = v16;
  }
  else {
    unsigned int v19 = v17;
  }
  bzero(a1, v10);
  if (v10 == 1) {
    *a1 = v19;
  }
  else {
    *(_DWORD *)a1 = v19;
  }
  switch(v15)
  {
    case 1:
      a1[v10] = v18;
      break;
    case 2:
      *(_WORD *)&a1[v10] = v18;
      break;
    case 3:
LABEL_46:
      __break(1u);
      JUMPOUT(0x2588D817CLL);
    case 4:
      *(_DWORD *)&a1[v10] = v18;
      break;
    default:
      return;
  }
}

uint64_t sub_2588D81A4()
{
  type metadata accessor for TempSeekingParser();
  return swift_getWitnessTable();
}

void *constantError<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = a1 + 32;
  uint64_t v3 = *(void *)(a1 + 32);
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(_OWORD *)(a2 + 16) = v5;
  *(void *)(a2 + 32) = v3;
  sub_2588BE18C((void *)a1, &v9);
  long long v8 = *(_OWORD *)(a1 + 16);
  sub_2588D8270(v4, (uint64_t)&v7);
  sub_2588D82D8(&v9);
  sub_2588D8304((uint64_t)&v8);
  return sub_2588D8330(&v7);
}

__n128 ConstantError.init(_:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 32);
  __n128 result = *(__n128 *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  *(__n128 *)(a2 + 16) = result;
  *(void *)(a2 + 32) = v2;
  return result;
}

uint64_t sub_2588D8270(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = __swift_instantiateConcreteTypeFromMangledName(qword_26A0A29C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t *sub_2588D82D8(unint64_t *a1)
{
  return a1;
}

uint64_t sub_2588D8304(uint64_t a1)
{
  return a1;
}

void *sub_2588D8330(void *a1)
{
  return a1;
}

uint64_t ConstantError.init(_:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t result = MEMORY[0x25A2CBEB0]();
  *a2 = a1;
  a2[1] = 0;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  a2[4] = a1;
  return result;
}

uint64_t ConstantError.parse(_:context:)()
{
  long long v1 = v0[1];
  long long v6 = *v0;
  long long v7 = v1;
  uint64_t v8 = *((void *)v0 + 4);
  sub_2588BBC70();
  swift_allocError();
  uint64_t v2 = *((void *)v0 + 4);
  long long v3 = v0[1];
  *(_OWORD *)uint64_t v4 = *v0;
  *(_OWORD *)(v4 + 16) = v3;
  *(void *)(v4 + 32) = v2;
  sub_2588BE18C(&v6, &v9);
  long long v10 = v7;
  sub_2588D8270((uint64_t)&v8, (uint64_t)&v11);
  sub_2588D82D8(&v9);
  sub_2588D8304((uint64_t)&v10);
  sub_2588D8330(&v11);
  return swift_willThrow();
}

uint64_t sub_2588D8444()
{
  return ConstantError.parse(_:context:)();
}

uint64_t type metadata accessor for ConstantError()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588D8474()
{
  type metadata accessor for ConstantError();
  return swift_getWitnessTable();
}

uint64_t static ParserSliceIteratorBuilder.buildPartialBlock<A, B>(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1);
}

uint64_t static ParserSliceIteratorBuilder.buildPartialBlock<A, B, C, D>(accumulated:next:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  return ParserSliceIterator.zipped<A>(with:)(a1, a2, a3, a4, a5);
}

uint64_t Zip<A, B>(_:)(uint64_t (*a1)(void))
{
  return a1();
}

ValueMetadata *type metadata accessor for ParserSliceIteratorBuilder()
{
  return &type metadata for ParserSliceIteratorBuilder;
}

uint64_t sub_2588D855C(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t sub_2588D8564()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588D85B4@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (a2) {
    return sub_2588D8828(result, a2, a3, a4);
  }
  __break(1u);
  return result;
}

uint64_t *LoadParser.parse(_:context:)(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = *(void *)(*(void *)(a3 - 8) + 64);
  int64_t v6 = *result;
  uint64_t v5 = result[1];
  if (__OFSUB__(v5, *result))
  {
    __break(1u);
  }
  else
  {
    if (v5 - *result < v4)
    {
      sub_2588F0408();
      swift_bridgeObjectRelease();
      sub_2588F0588();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v8 = 0;
      v8[1] = v6;
      v8[2] = 0xD000000000000025;
      v8[3] = 0x8000000258901C50;
      v8[4] = 0;
      return (uint64_t *)swift_willThrow();
    }
    uint64_t v9 = v6 + v4;
    if (v6 + v4 >= v6 && v5 >= v9)
    {
      uint64_t v11 = result[2];
      *uint64_t result = v9;
      MEMORY[0x270FA5388](result, a2, a3, a4);
      v12[2] = a3;
      swift_bridgeObjectRetain();
      ByteBuffer.withUnsafeBytes<A>(_:)((uint64_t)sub_2588D8764, (uint64_t)v12, v6, v9, v11);
      return (uint64_t *)swift_bridgeObjectRelease();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588D8764@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  if (result) {
    return sub_2588D8828(0, result, *(void *)(v2 + 16), a2);
  }
  __break(1u);
  return result;
}

uint64_t *sub_2588D87A4(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return LoadParser.parse(_:context:)(a1, a2, *(void *)(a3 + 16), a4);
}

uint64_t sub_2588D87C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 8);
}

uint64_t type metadata accessor for LoadParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588D87E0()
{
  type metadata accessor for LoadParser();
  return swift_getWitnessTable();
}

uint64_t sub_2588D8828@<X0>(uint64_t isStackAllocationSafe@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = *(void *)(a3 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = v6 + 1;
  if ((v6 & (unint64_t)(v6 + 1)) != 0)
  {
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v10 = isStackAllocationSafe;
  uint64_t v11 = *(void *)(a3 - 8);
  if (v6 > 0xF
    || *(uint64_t *)(v5 + 72) >= 1025
    && (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), !isStackAllocationSafe))
  {
    unsigned int v16 = (void *)swift_slowAlloc();
    size_t v17 = *(void *)(v11 + 64);
    if ((v17 & 0x8000000000000000) == 0)
    {
      int v18 = v16;
      memcpy(v16, (const void *)(a2 + v10), v17);
      (*(void (**)(uint64_t, void *, uint64_t))(v11 + 16))(a4, v18, a3);
LABEL_14:
      JUMPOUT(0x25A2CBFC0);
    }
    goto LABEL_12;
  }
  MEMORY[0x270FA5388](isStackAllocationSafe, v7, a2, a3);
  unsigned int v13 = (char *)&v19 - v12;
  size_t v14 = *(void *)(v11 + 64);
  if ((v14 & 0x8000000000000000) != 0)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  memcpy((char *)&v19 - v12, (const void *)(a2 + v10), v14);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 16))(a4, v13, a3);
}

uint64_t ByteBuffer.currentRange.getter(uint64_t result, uint64_t a2)
{
  if (a2 < result) {
    __break(1u);
  }
  return result;
}

uint64_t ParserRange.range.setter(uint64_t result, uint64_t a2)
{
  *uint64_t v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*ParserRange.range.modify())()
{
  return nullsub_1;
}

BOOL ParserRange.isEmpty.getter(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ContextfulParser.parse(within:in:context:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v15 = *a1;
  uint64_t v16 = a4;
  uint64_t v12 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a7 + 24);
  swift_bridgeObjectRetain();
  v12(&v15, a5, a6, a7);
  if (v7) {
    return swift_bridgeObjectRelease();
  }
  long long v14 = v15;
  uint64_t result = swift_bridgeObjectRelease();
  if (*((uint64_t *)&v14 + 1) < (uint64_t)v14) {
    __break(1u);
  }
  else {
    *a1 = v14;
  }
  return result;
}

uint64_t ContextfulParser<>.parse(within:in:)(long long *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ContextfulParser.parse(within:in:context:)(a1, a2, a3, a4, a5, a5, a6);
}

uint64_t ParserRange.slicing<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_2588F02F8();
  uint64_t result = sub_2588F0308();
  if (v11 < v10)
  {
    __break(1u);
  }
  else if (v10 > a2 || v11 < a2 || v10 > a3 || v11 < a3)
  {
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 2;
    v9[1] = a2;
    void v9[2] = 0xD00000000000002ALL;
    v9[3] = 0x8000000258901D20;
    v9[4] = 0;
    return swift_willThrow();
  }
  else
  {
    return sub_2588F0318();
  }
  return result;
}

ValueMetadata *type metadata accessor for ParserRange()
{
  return &type metadata for ParserRange;
}

uint64_t ContextfulParser.validate(is:by:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v26 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v15 = MEMORY[0x270FA5388](AssociatedTypeWitness, v12, v13, v14);
  size_t v17 = (char *)&v25 - v16;
  MEMORY[0x270FA5388](v15, v18, v19, v20);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v22, v5, a4);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v17, a1, AssociatedTypeWitness);
  EquivalentValidator.init(base:expected:areEquivalent:)((uint64_t)v22, (uint64_t)v17, v26, a3, a4, a5);
  return swift_retain();
}

uint64_t EquivalentValidator.init(base:expected:areEquivalent:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = type metadata accessor for EquivalentValidator();
  uint64_t v11 = a6 + *(int *)(v10 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v11, a2, AssociatedTypeWitness);
  uint64_t v14 = (void *)(a6 + *(int *)(v10 + 40));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t type metadata accessor for EquivalentValidator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContextfulParser<>.validate(is:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6 = v5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v17 = MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  uint64_t v19 = (char *)&v28 - v18;
  MEMORY[0x270FA5388](v17, v20, v21, v22);
  uint64_t v24 = (char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 16))(v24, v6, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v19, a1, AssociatedTypeWitness);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a2;
  v26[3] = a3;
  v26[4] = a4;
  v26[5] = AssociatedTypeWitness;
  return EquivalentValidator.init(base:expected:areEquivalent:)((uint64_t)v24, (uint64_t)v19, (uint64_t)sub_2588D90BC, (uint64_t)v26, a2, a5);
}

uint64_t sub_2588D90AC()
{
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_2588D90BC()
{
  return sub_2588F0208() & 1;
}

uint64_t EquivalentValidator.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t EquivalentValidator.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*EquivalentValidator.base.modify())()
{
  return nullsub_1;
}

uint64_t EquivalentValidator.expected.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t EquivalentValidator.expected.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*EquivalentValidator.expected.modify())()
{
  return nullsub_1;
}

uint64_t EquivalentValidator.areEquivalent.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 40));
  swift_retain();
  return v2;
}

uint64_t EquivalentValidator.areEquivalent.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 40));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*EquivalentValidator.areEquivalent.modify())()
{
  return nullsub_1;
}

double EquivalentValidator.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588D95C4);
}

uint64_t sub_2588D9408@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t *, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a3, a4, a5);
  if (!v6)
  {
    uint64_t v11 = type metadata accessor for EquivalentValidator();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(a2 + *(int *)(v11 + 40)))(a6, a2 + *(int *)(v11 + 36));
    if ((result & 1) == 0)
    {
      uint64_t v12 = *a1;
      sub_2588F0408();
      sub_2588F0228();
      uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      sub_2588F0478();
      sub_2588F0228();
      sub_2588F0478();
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v14 = 3;
      v14[1] = v12;
      v14[2] = 0;
      v14[3] = 0xE000000000000000;
      v14[4] = 0;
      swift_willThrow();
      return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a6, AssociatedTypeWitness);
    }
  }
  return result;
}

uint64_t sub_2588D95C4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588D9408(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

double sub_2588D95E4()
{
  return EquivalentValidator.parse(_:context:)();
}

uint64_t sub_2588D95FC()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_2588D96F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  unint64_t v14 = ((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
  }
  else
  {
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    uint64_t v22 = (void *)((v13 + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    uint64_t v24 = (void *)((v13 + (((unint64_t)a1 + v11) & v20)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2588D98B4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_2588D9998(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  unint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  return a1;
}

uint64_t sub_2588D9A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 40) + 7;
  unint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2588D9BA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588D9CA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2588D9DA4(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588DA020);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v24(a1, v7, v5);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)((v14 + v25) & 0xFFFFFFFFFFFFFFF8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

void sub_2588DA034(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = *(void *)(v8 + 64) + v12;
  uint64_t v15 = *(void *)(v10 + 64) + 7;
  unint64_t v16 = ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v13;
    if (a2 <= v13)
    {
LABEL_19:
      uint64_t v21 = ~v12;
      switch(v19)
      {
        case 1:
          *((unsigned char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v16) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v9 == v13)
            {
              uint64_t v24 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v29 + 56);
              v24(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v25 = ((unint64_t)a1 + v14) & v21;
              if (v11 == v13)
              {
                uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v26(v25, a2);
              }
              else
              {
                unint64_t v27 = (void *)((v15 + v25) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v28 = a2 ^ 0x80000000;
                  v27[1] = 0;
                }
                else
                {
                  uint64_t v28 = (a2 - 1);
                }
                *unint64_t v27 = v28;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = a3 - v13 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v13;
    if (a2 <= v13) {
      goto LABEL_19;
    }
  }
  if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v22 = v20;
  }
  else {
    int v22 = 1;
  }
  if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v23 = ~v13 + a2;
    bzero(a1, ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v23;
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = v22;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v16) = v22;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x2588DA314);
    case 4:
      *(_DWORD *)((char *)a1 + v16) = v22;
      break;
    default:
      return;
  }
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRzlAA19EquivalentValidatorVyxGAaBHPyHCTm()
{
  type metadata accessor for EquivalentValidator();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.compactMap<A, B>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v15 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v17 = (char *)v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v15 + 16))(v17, v7);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a7, v17, a3);
  v20[0] = a3;
  v20[1] = a4;
  v20[2] = a5;
  v20[3] = a6;
  int v18 = (void *)(a7 + *(int *)(type metadata accessor for CompactMapParser() + 52));
  *int v18 = a1;
  v18[1] = a2;
  return swift_retain();
}

uint64_t CompactMapParser.init(base:transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for CompactMapParser();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 52));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for CompactMapParser()
{
  return swift_getGenericMetadata();
}

uint64_t CompactMapParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CompactMapParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CompactMapParser.base.modify())()
{
  return nullsub_1;
}

uint64_t CompactMapParser.transform.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_retain();
  return v2;
}

uint64_t CompactMapParser.transform.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 52));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*CompactMapParser.transform.modify())()
{
  return nullsub_1;
}

double CompactMapParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588DA924);
}

uint64_t sub_2588DA720@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v30 = a7;
  uint64_t v31 = sub_2588F0358();
  uint64_t v13 = *(void *)(v31 - 8);
  MEMORY[0x270FA5388](v31, v14, v15, v16);
  int v18 = (char *)&v28 - v17;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(a1, a2, a3, a6);
  if (!v7)
  {
    uint64_t v29 = v13;
    v32[0] = a3;
    v32[1] = a4;
    uint64_t v20 = v33;
    v32[2] = v33;
    v32[3] = a6;
    uint64_t v21 = type metadata accessor for CompactMapParser();
    *(double *)&long long v25 = MEMORY[0x270FA5388](v21, v22, v23, v24);
    *(&v28 - 6) = a3;
    *(&v28 - 5) = a4;
    *(&v28 - 4) = v20;
    *(&v28 - 3) = a6;
    *((_OWORD *)&v28 - 1) = v25;
    uint64_t v26 = __swift_instantiateConcreteTypeFromMangledName(qword_26A0A2BC8);
    uint64_t v27 = v31;
    sub_2588DA948((void (*)(char *, char *))sub_2588DAFC0, (uint64_t)(&v28 - 8), v31, v26, v20, (uint64_t)v32, v30);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v18, v27);
  }
  return result;
}

uint64_t sub_2588DA924@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588DA720(a1, v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_2588DA948@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v35 = a2;
  uint64_t v36 = a1;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v33 = a6;
  uint64_t v34 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 + 16);
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v12, v18, v15, v19);
  uint64_t v22 = (char *)&v32 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v23, v24, v25);
  uint64_t v27 = (char *)&v32 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v28 + 16))(v27, v29);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v27, 1, v16) == 1) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 56))(a7, 1, 1, a5);
  }
  uint64_t v31 = v34;
  (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v27, v16);
  v36(v22, v14);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v22, v16);
  if (v7) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v31 + 32))(v33, v14, a4);
  }
  return result;
}

double sub_2588DABF4()
{
  return CompactMapParser.parse(_:context:)();
}

uint64_t sub_2588DAC0C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588DAD58);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588DAD6C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588DAF4CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588DAF74()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588DAFC0(uint64_t a1, void *a2)
{
  uint64_t result = (*(uint64_t (**)(void))(v2 + 48))();
  if (v3) {
    *a2 = v3;
  }
  return result;
}

uint64_t ConstantParser.init(value:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t ConstantParser.value.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ConstantParser.value.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ConstantParser.value.modify())()
{
  return nullsub_1;
}

uint64_t sub_2588DB0BC@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t sub_2588DB114@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return sub_2588DB0BC(a1, a2);
}

uint64_t constant<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a1, a3, a4);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a5, v9, a2);
}

uint64_t sub_2588DB204()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_2588DB294(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588DB3F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588DB608);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for ConstantParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588DB648()
{
  type metadata accessor for ConstantParser();
  return swift_getWitnessTable();
}

void StringParsers.nullTerminatedString.getter(uint64_t a1@<X8>)
{
  *(_WORD *)a1 = 256;
  *(void *)(a1 + 8) = sub_2588DB6B8;
  *(void *)(a1 + 16) = 0;
}

void *sub_2588DB6B8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result[1];
  BOOL v3 = __OFSUB__(v2, 1);
  uint64_t v4 = v2 - 1;
  if (v3)
  {
    __break(1u);
  }
  else if (v4 >= *result)
  {
    *a2 = *result;
    a2[1] = v4;
    return result;
  }
  __break(1u);
  return result;
}

void StringParsers.utf8String.getter(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t StringParsers.utf8String(byteCount:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void *UTF8Parser.parse(_:context:)(void *a1)
{
  return sub_2588DB738(a1);
}

void *sub_2588DB70C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t result = sub_2588DB738(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

void *sub_2588DB738(void *result)
{
  uint64_t v1 = *result;
  uint64_t v2 = result[1];
  if (__OFSUB__(v2, *result))
  {
    __break(1u);
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v3 = result[1];
  if (v3 < v1 || __OFSUB__(v2, v3)) {
    goto LABEL_11;
  }
  *uint64_t result = v3;
  BOOL v5 = __OFSUB__(v3, v1);
  uint64_t v6 = v3 - v1;
  if (v5)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  BOOL v5 = __OFADD__(v1, v6);
  uint64_t v7 = v1 + v6;
  if (v5)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (v7 >= v1)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_2588F0218();
    swift_bridgeObjectRelease();
    return (void *)v8;
  }
LABEL_14:
  __break(1u);
  return result;
}

ValueMetadata *type metadata accessor for StringParsers()
{
  return &type metadata for StringParsers;
}

ValueMetadata *type metadata accessor for UTF8Parser()
{
  return &type metadata for UTF8Parser;
}

uint64_t sub_2588DB808()
{
  return sub_2588DB880(&qword_26A0A2C50, &qword_26A0A2C58);
}

uint64_t sub_2588DB830()
{
  return sub_2588DB880(&qword_26A0A2C60, &qword_26A0A2C68);
}

uint64_t sub_2588DB858()
{
  return sub_2588DB880(&qword_26A0A2C70, qword_26A0A2C78);
}

uint64_t sub_2588DB880(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t ContextfulParser.blendContext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  double v11 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v10 + 16))(v13, v5, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v13, a3);
  unsigned int v14 = (void *)(a5 + *(int *)(type metadata accessor for BlendContextParser() + 36));
  *unsigned int v14 = a1;
  v14[1] = a2;
  return swift_retain();
}

uint64_t BlendContextParser.init(base:combine:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for BlendContextParser();
  BOOL v9 = (void *)(a5 + *(int *)(result + 36));
  *BOOL v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for BlendContextParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t BlendContextParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t BlendContextParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*BlendContextParser.base.modify())()
{
  return nullsub_1;
}

uint64_t BlendContextParser.combine.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t BlendContextParser.combine.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 36));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*BlendContextParser.combine.modify())()
{
  return nullsub_1;
}

double BlendContextParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588DBDB4);
}

uint64_t sub_2588DBC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  v22[1] = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  double v17 = MEMORY[0x270FA5388](AssociatedTypeWitness, v14, v15, v16);
  uint64_t v19 = (char *)v22 - v18;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(a5 + 24))(a1, a3, a4, a5, v17);
  if (!v6)
  {
    uint64_t v21 = type metadata accessor for BlendContextParser();
    (*(void (**)(char *, uint64_t))(a2 + *(int *)(v21 + 36)))(v19, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v19, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588DBDB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588DBC44(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

double sub_2588DBDD4()
{
  return BlendContextParser.parse(_:context:)();
}

uint64_t sub_2588DBDEC(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588DBF38);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588DBF4C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588DC12CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588DC154()
{
  type metadata accessor for BlendContextParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.defaultValue<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v17 = MEMORY[0x270FA5388](v13, v14, v15, v16);
  uint64_t v19 = (char *)&v22 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v20 + 16))(v19, v5, a2, v17);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a1, a3);
  return DefaultValueParser.init(base:defaultValue:)((uint64_t)v19, (uint64_t)v12, a2, a3, a5);
}

uint64_t DefaultValueParser.init(base:defaultValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = a5 + *(int *)(type metadata accessor for DefaultValueParser() + 44);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  return v9(v8, a2, a4);
}

uint64_t type metadata accessor for DefaultValueParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t DefaultValueParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DefaultValueParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DefaultValueParser.base.modify())()
{
  return nullsub_1;
}

uint64_t DefaultValueParser.defaultValue.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 44));
}

uint64_t DefaultValueParser.defaultValue.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 44), a1);
}

uint64_t (*DefaultValueParser.defaultValue.modify())()
{
  return nullsub_1;
}

uint64_t DefaultValueParser.parse(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v33 = a5;
  uint64_t v9 = (void *)(a3 - 8);
  uint64_t v35 = *(void *)(a3 - 8);
  uint64_t v36 = a3;
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = v9[4];
  uint64_t v34 = sub_2588F0358();
  uint64_t v37 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34, v13, v14, v15);
  double v17 = (char *)&v33 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v22 = MEMORY[0x270FA5388](v18, v19, v20, v21);
  uint64_t v24 = (char *)&v33 - v23;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, void, double))(v9[5] + 24))(a1, a2, v9[3], v22);
  if (!v6)
  {
    uint64_t v26 = v24;
    uint64_t v27 = v33;
    uint64_t v28 = v34;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v17, v26, v34);
    uint64_t v29 = v35;
    uint64_t v30 = v5;
    uint64_t v31 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v11, v30, v36);
    uint64_t v32 = *(void *)(v12 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v17, 1, v12) == 1)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v32 + 16))(v27, &v11[*(int *)(v31 + 44)], v12);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
      return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v17, v28);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v31);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v32 + 32))(v27, v17, v12);
    }
  }
  return result;
}

uint64_t sub_2588DC7E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  return DefaultValueParser.parse(_:context:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2588DC7FC(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588DC9F4(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588DCCC0);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588DCCE8()
{
  type metadata accessor for DefaultValueParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser<>.parseOutput<A, B>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17, v18, v19);
  int v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v23, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, a4);
  return sub_2588DD1F8((uint64_t)v21, (uint64_t)v16, a2, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for MapThroughParser, a7);
}

uint64_t ContextfulParser<>.parseSlice<A, B>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = *(void *)(a4 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v16 = (char *)&v25 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14, v17, v18, v19);
  int v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v21, v23, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, a1, a4);
  return ParseSliceParser.init(base:newParser:)((uint64_t)v21, (uint64_t)v16, a2, a4, a5, a6, a7);
}

uint64_t ParseSliceParser.init(base:newParser:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  return sub_2588DD1F8(a1, a2, a3, a4, a5, a6, (uint64_t (*)(void, void *))type metadata accessor for ParseSliceParser, a7);
}

uint64_t ContextfulParser<>.parseSlice<A, B>(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v27 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a6;
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 - 8);
  double v20 = MEMORY[0x270FA5388](v17, v18, v15, v19);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, double))(v16 + 16))(v22, v8, v20);
  a1(v23);
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, a3);
  }
  else {
    return ParseSliceParser.init(base:newParser:)((uint64_t)v22, (uint64_t)v14, a3, a5, v26, v27, v25);
  }
}

uint64_t sub_2588DD1F8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t (*a7)(void, void *)@<X6>, uint64_t a8@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a8, a1);
  v17[0] = a3;
  v17[1] = a4;
  v17[2] = a5;
  v17[3] = a6;
  uint64_t v15 = a7(0, v17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a8 + *(int *)(v15 + 52), a2, a4);
}

uint64_t type metadata accessor for ParseSliceParser()
{
  return swift_getGenericMetadata();
}

uint64_t ContextfulParser<>.parseOutput<A, B>(_:)@<X0>(void (*a1)(uint64_t)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v27 = a7;
  uint64_t v25 = a8;
  uint64_t v26 = a6;
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 - 8);
  double v20 = MEMORY[0x270FA5388](v17, v18, v15, v19);
  uint64_t v22 = (char *)&v25 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = (*(uint64_t (**)(char *, uint64_t, double))(v16 + 16))(v22, v8, v20);
  a1(v23);
  if (v9) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v22, a3);
  }
  else {
    return sub_2588DD1F8((uint64_t)v22, (uint64_t)v14, a3, a5, v26, v27, (uint64_t (*)(void, void *))type metadata accessor for MapThroughParser, v25);
  }
}

uint64_t ParseSliceParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t ParseSliceParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*ParseSliceParser.base.modify())()
{
  return nullsub_1;
}

uint64_t ParseSliceParser.newParser.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t ParseSliceParser.newParser.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*ParseSliceParser.newParser.modify())()
{
  return nullsub_1;
}

double ParseSliceParser.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588DDCF0(a1, a2, a3, (void (*)(long long *))sub_2588DD6CC);
}

void *sub_2588DD5CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(void *(**)(long long *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(&v17, a1, a3, a4, a6);
  if (!v7)
  {
    uint64_t v15 = *(void *)(a1 + 16);
    long long v20 = v17;
    uint64_t v21 = v15;
    *(void *)&long long v17 = a4;
    *((void *)&v17 + 1) = a5;
    uint64_t v18 = a6;
    uint64_t v19 = a7;
    type metadata accessor for ParseSliceParser();
    uint64_t v16 = *(void (**)(long long *, uint64_t, uint64_t, uint64_t))(a7 + 24);
    swift_bridgeObjectRetain();
    v16(&v20, a3, a5, a7);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2588DD6CC(uint64_t a1)
{
  return sub_2588DDEBC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2588DD5CC);
}

double sub_2588DD6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return ParseSliceParser.parse(_:context:)(a1, a2, a3);
}

uint64_t sub_2588DD734(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRz6OutputQyd_0_Rsd__AaBRd_0_7ContextQyd_0_AERtzAA0D5RangeVACRtzr_0_lAA010ParseSliceD0Vyxqd_0_GAaBHPyHCTm(a1, (void (*)(uint64_t, uint64_t *))type metadata accessor for ParseSliceParser);
}

uint64_t sub_2588DD760(uint64_t *a1)
{
  return get_witness_table_15ParsingInternal16ContextfulParserRz6OutputQyd_0_Rsd__AaBRd_0_7ContextQyd_0_AERtzAA0D5RangeVACRtzr_0_lAA010ParseSliceD0Vyxqd_0_GAaBHPyHCTm(a1, (void (*)(uint64_t, uint64_t *))type metadata accessor for MapThroughParser);
}

uint64_t get_witness_table_15ParsingInternal16ContextfulParserRz6OutputQyd_0_Rsd__AaBRd_0_7ContextQyd_0_AERtzAA0D5RangeVACRtzr_0_lAA010ParseSliceD0Vyxqd_0_GAaBHPyHCTm(uint64_t *a1, void (*a2)(uint64_t, uint64_t *))
{
  uint64_t v2 = a1[4];
  uint64_t v4 = *a1;
  long long v5 = *((_OWORD *)a1 + 1);
  uint64_t v6 = v2;
  a2(255, &v4);
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for MapThroughParser()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588DD804(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588DD9FC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588DDCC8);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

double sub_2588DDCF0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(long long *))
{
  return ByteBuffer.atomically<A>(_:)(a4);
}

void *sub_2588DDD88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t result = (*(void *(**)(void *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 24))(v12, a1, a3, a4, a6);
  if (!v7)
  {
    type metadata accessor for MapThroughParser();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(a7 + 24))(v12, a3, a5, a7);
    return (void *)swift_bridgeObjectRelease();
  }
  return result;
}

double sub_2588DDE64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_2588DDCF0(a1, a2, a3, (void (*)(long long *))sub_2588DDE90);
}

uint64_t sub_2588DDE90(uint64_t a1)
{
  return sub_2588DDEBC(a1, (uint64_t (*)(uint64_t, void, void, void, void, void, void))sub_2588DDD88);
}

uint64_t sub_2588DDEBC(uint64_t a1, uint64_t (*a2)(uint64_t, void, void, void, void, void, void))
{
  return a2(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5]);
}

uint64_t ContextfulParser.updateContext(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  double v11 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v10 + 16))(v13, v5, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v13, a3);
  size_t v14 = (void *)(a5 + *(int *)(type metadata accessor for UpdateContext() + 36));
  *size_t v14 = a1;
  v14[1] = a2;
  return swift_retain();
}

uint64_t UpdateContext.init(base:update:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for UpdateContext();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 36));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for UpdateContext()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t ContextfulParser<>.updateContext<A>(_:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v8 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for AddContext();
  uint64_t v12 = *(void *)(v11 - 8);
  double v16 = MEMORY[0x270FA5388](v11, v13, v14, v15);
  unsigned int v18 = (char *)&v21 - v17;
  (*(void (**)(char *, uint64_t, uint64_t, double))(v8 + 16))(v10, v21, a4, v16);
  AddContext.init(base:)((uint64_t)v10, a4, (uint64_t)v18);
  swift_getWitnessTable();
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a5, v18, v11);
  int v19 = (void *)(a5 + *(int *)(type metadata accessor for UpdateContext() + 36));
  *int v19 = v22;
  v19[1] = a3;
  return swift_retain();
}

uint64_t UpdateContext.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t UpdateContext.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*UpdateContext.base.modify())()
{
  return nullsub_1;
}

uint64_t UpdateContext.update.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t UpdateContext.update.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 36));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*UpdateContext.update.modify())()
{
  return nullsub_1;
}

double UpdateContext.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588DE530);
}

uint64_t sub_2588DE43C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a5 + 24))(a1, a3, a4, a5);
  if (!v6)
  {
    uint64_t updated = type metadata accessor for UpdateContext();
    return (*(uint64_t (**)(uint64_t, uint64_t))(a2 + *(int *)(updated + 36)))(a6, a3);
  }
  return result;
}

uint64_t sub_2588DE530@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588DE43C(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

double sub_2588DE550()
{
  return UpdateContext.parse(_:context:)();
}

uint64_t sub_2588DE568(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588DE6B4);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588DE6C8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588DE8A8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unsigned int v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *unsigned int v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588DE8D0()
{
  type metadata accessor for UpdateContext();
  return swift_getWitnessTable();
}

uint64_t sub_2588DE918()
{
  type metadata accessor for AddContext();
  swift_getWitnessTable();
  type metadata accessor for UpdateContext();
  return swift_getWitnessTable();
}

uint64_t Iterate<A>(over:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, char *a6@<X8>)
{
  uint64_t v11 = *(void *)(a5 - 8);
  double v12 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v15(v12);
  if (!v6)
  {
    *(void *)a6 = a1;
    *((void *)a6 + 1) = a2;
    uint64_t v17 = type metadata accessor for RangeIterator();
    return (*(uint64_t (**)(char *, char *, uint64_t))(v11 + 32))(&a6[*(int *)(v17 + 36)], v14, a5);
  }
  return result;
}

uint64_t RangeIterator.init(over:base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = a1;
  a5[1] = a2;
  unsigned int v7 = (char *)a5 + *(int *)(type metadata accessor for RangeIterator() + 36);
  unsigned int v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32);
  return v8(v7, a3, a4);
}

uint64_t type metadata accessor for RangeIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Iterate<A, B>(over:_:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  v26[3] = a7;
  v26[1] = a6;
  MEMORY[0x270FA5388](a1, a1, a3, a4);
  uint64_t v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v15 - 8);
  double v21 = MEMORY[0x270FA5388](v17, v18, v19, v20);
  uint64_t v23 = (char *)v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = (*(uint64_t (**)(char *, double))(v16 + 16))(v23, v21);
  a2(v24);
  if (v8) {
    return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v23, a5);
  }
  else {
    return DeferredRangeIterator.init(rangeParser:base:)((uint64_t)v23, (uint64_t)v14, a4, a5, a8);
  }
}

uint64_t DeferredRangeIterator.init(rangeParser:base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = 0;
  *(void *)(a5 + 8) = 0;
  *(unsigned char *)(a5 + 16) = 1;
  uint64_t v10 = type metadata accessor for DeferredRangeIterator();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v10 + 52), a1, a4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5 + *(int *)(v10 + 56), a2, a3);
}

uint64_t type metadata accessor for DeferredRangeIterator()
{
  return swift_getGenericMetadata();
}

uint64_t RangeIterator.range.getter()
{
  return *(void *)v0;
}

uint64_t RangeIterator.range.setter(uint64_t result, uint64_t a2)
{
  *uint64_t v2 = result;
  v2[1] = a2;
  return result;
}

uint64_t (*RangeIterator.range.modify())()
{
  return nullsub_1;
}

uint64_t RangeIterator.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t RangeIterator.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*RangeIterator.base.modify())()
{
  return nullsub_1;
}

uint64_t RangeIterator.next(in:)@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  uint64_t v8 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  double v14 = MEMORY[0x270FA5388](AssociatedTypeWitness, v11, v12, v13);
  uint64_t v16 = (char *)&v24 - v15;
  uint64_t v17 = *v4;
  uint64_t v18 = v4[1];
  if (*v4 == v18) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v10 + 56))(a3, 1, 1, AssociatedTypeWitness, v14);
  }
  uint64_t v24 = a3;
  uint64_t v25 = v17;
  uint64_t v26 = v18;
  uint64_t v27 = a1;
  swift_bridgeObjectRetain();
  uint64_t v20 = v28;
  ContextfulParser<>.parse(_:)((uint64_t)&v25, v8, v7);
  if (v20) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v21 = v25;
  uint64_t v22 = v26;
  uint64_t result = swift_bridgeObjectRelease();
  if (v22 < v21)
  {
    __break(1u);
  }
  else
  {
    *uint64_t v4 = v21;
    v4[1] = v22;
    uint64_t v23 = v24;
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v24, v16, AssociatedTypeWitness);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v10 + 56))(v23, 0, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588DF04C@<X0>(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return RangeIterator.next(in:)(a1, a2, a3);
}

uint64_t DeferredRangeIterator.range.getter()
{
  return *(void *)v0;
}

uint64_t DeferredRangeIterator.range.setter(uint64_t result, uint64_t a2, char a3)
{
  *(void *)uint64_t v3 = result;
  *(void *)(v3 + 8) = a2;
  *(unsigned char *)(v3 + 16) = a3 & 1;
  return result;
}

uint64_t (*DeferredRangeIterator.range.modify())()
{
  return nullsub_1;
}

uint64_t DeferredRangeIterator.rangeParser.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t DeferredRangeIterator.rangeParser.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*DeferredRangeIterator.rangeParser.modify())()
{
  return nullsub_1;
}

uint64_t DeferredRangeIterator.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 56));
}

uint64_t DeferredRangeIterator.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 56), a1);
}

uint64_t (*DeferredRangeIterator.base.modify())()
{
  return nullsub_1;
}

uint64_t DeferredRangeIterator.next(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = v5;
  uint64_t v13 = a4[2];
  uint64_t v37 = a4[4];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, AssociatedTypeWitness);
  uint64_t v20 = (char *)&v31 - v19;
  if (*(unsigned char *)(v7 + 16) == 1)
  {
    uint64_t v31 = v18;
    uint64_t v32 = a5;
    uint64_t v33 = v17;
    uint64_t result = ContextfulParser<>.parse(_:)(a1, a2, a3, a4[3], a4[5]);
    if (v6) {
      return result;
    }
    uint64_t v22 = &v34;
    a5 = v32;
    uint64_t v17 = v33;
    uint64_t v18 = v31;
  }
  else
  {
    uint64_t v22 = (uint64_t *)v7;
  }
  uint64_t v25 = v22;
  uint64_t v23 = *v22;
  uint64_t v24 = v25[1];
  if (v23 == v24) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 56))(a5, 1, 1, v17);
  }
  uint64_t v26 = v18;
  uint64_t v33 = v17;
  uint64_t v34 = v23;
  uint64_t v27 = a5;
  uint64_t v35 = v24;
  uint64_t v36 = a3;
  swift_bridgeObjectRetain();
  ContextfulParser<>.parse(_:)((uint64_t)&v34, v13, v37);
  if (v6) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v28 = v34;
  uint64_t v29 = v35;
  uint64_t result = swift_bridgeObjectRelease();
  if (v29 < v28)
  {
    __break(1u);
  }
  else
  {
    *(void *)uint64_t v7 = v28;
    *(void *)(v7 + 8) = v29;
    *(unsigned char *)(v7 + 16) = 0;
    uint64_t v30 = v33;
    (*(void (**)(uint64_t, char *, uint64_t))(v26 + 32))(v27, v20, v33);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v30);
  }
  return result;
}

uint64_t sub_2588DF400@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  return DeferredRangeIterator.next(in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2588DF418()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588DF4B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(_DWORD *)(v4 + 80);
  if (v5 > 7
    || (*(_DWORD *)(v4 + 80) & 0x100000) != 0
    || ((v5 + 16) & (unint64_t)~v5) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) > 0x18)
  {
    uint64_t v8 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v8 + ((v5 & 0xF8 ^ 0x1F8) & (v5 + 16)));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + v5 + 16) & ~v5, ((unint64_t)a2 + v5 + 16) & ~v5);
  }
  return v3;
}

uint64_t sub_2588DF59C(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(unint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 8))((a1 + *(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(a2 + 16) - 8) + 80));
}

_OWORD *sub_2588DF5D8(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 16))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

void *sub_2588DF648(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  a1[1] = a2[1];
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_2588DF6C0(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 32))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

_OWORD *sub_2588DF730(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v4 + 40))(((unint64_t)a1 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v4 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  return a1;
}

uint64_t sub_2588DF7A0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v8 = ((v6 + 16) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 16) & ~v6);
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_2588DF91C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  size_t v9 = ((v8 + 16) & ~v8) + *(void *)(v6 + 64);
  BOOL v10 = a3 >= v7;
  unsigned int v11 = a3 - v7;
  if (v11 != 0 && v10)
  {
    if (v9 <= 3)
    {
      unsigned int v15 = ((v11 + ~(-1 << (8 * v9))) >> (8 * v9)) + 1;
      if (HIWORD(v15))
      {
        int v12 = 4;
      }
      else if (v15 >= 0x100)
      {
        int v12 = 2;
      }
      else
      {
        int v12 = v15 > 1;
      }
    }
    else
    {
      int v12 = 1;
    }
  }
  else
  {
    int v12 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v13 = ~v7 + a2;
    if (v9 < 4)
    {
      int v14 = (v13 >> (8 * v9)) + 1;
      if (v9)
      {
        int v16 = v13 & ~(-1 << (8 * v9));
        bzero(a1, v9);
        if (v9 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v9 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v9);
      *(_DWORD *)a1 = v13;
      int v14 = 1;
    }
    switch(v12)
    {
      case 1:
        a1[v9] = v14;
        return;
      case 2:
        *(_WORD *)&a1[v9] = v14;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v9] = v14;
        return;
      default:
        return;
    }
  }
  switch(v12)
  {
    case 1:
      a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v9] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588DFB50);
    case 4:
      *(_DWORD *)&a1[v9] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unint64_t v17 = (unint64_t)&a1[v8 + 16] & ~v8;
        uint64_t v18 = *(void (**)(unint64_t))(v6 + 56);
        v18(v17);
      }
      return;
  }
}

uint64_t sub_2588DFB78()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_2588DFC54(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if ((v9 | v5) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((v6 + v9 + ((v5 + 17) & ~v5)) & ~v9) + *(void *)(v8 + 64) > 0x18)
  {
    uint64_t v13 = *a2;
    void *v3 = *a2;
    uint64_t v3 = (void *)(v13 + (((v9 | v5) & 0xF8 ^ 0x1F8) & ((v9 | v5) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v14 = ~v9;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v15 = (a1 + v5 + 17) & ~v5;
    uint64_t v16 = ((unint64_t)a2 + v5 + 17) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v15 + v10) & v14, (v16 + v10) & v14, v7);
  }
  return v3;
}

uint64_t sub_2588DFDF8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 17) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (v5 + *(void *)(v4 + 56) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v8);
}

uint64_t sub_2588DFEAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = v5 + 16;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 17 + a1) & ~v7;
  uint64_t v9 = (v7 + 17 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_2588DFF88(uint64_t a1, long long *a2, uint64_t a3)
{
  long long v5 = *a2;
  *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
  *(_OWORD *)a1 = v5;
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v7 = v6 + 24;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = (v8 + 17 + a1) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 17) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v9, v10);
  uint64_t v11 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v11 + 24))((*(void *)(v7 + 40) + *(unsigned __int8 *)(v11 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(void *)(v7 + 40) + *(unsigned __int8 *)(v11 + 80) + v10) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  return a1;
}

uint64_t sub_2588E0064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 17 + a1) & ~v7;
  uint64_t v9 = (v7 + 17 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_2588E0140(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v6 = v5 + 40;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = (v7 + 17 + a1) & ~v7;
  uint64_t v9 = (v7 + 17 + a2) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_2588E021C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v5) {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  unsigned int v13 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = ((v10 + v11 + ((v9 + 17) & ~v9)) & ~v11) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        uint64_t v21 = ((unint64_t)a1 + v9 + 17) & ~v9;
        if (v5 >= v8) {
          return (*(uint64_t (**)(uint64_t))(v4 + 48))(v21);
        }
        else {
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v21 + v10 + v11) & ~v11, v8, v6);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_2588E0438(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 16);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  size_t v15 = ((v12 + v13 + ((v11 + 17) & ~v11)) & ~v13) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v16 = a3 >= v14;
  unsigned int v17 = a3 - v14;
  if (v17 != 0 && v16)
  {
    if (v15 <= 3)
    {
      unsigned int v21 = ((v17 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
      if (HIWORD(v21))
      {
        int v18 = 4;
      }
      else if (v21 >= 0x100)
      {
        int v18 = 2;
      }
      else
      {
        int v18 = v21 > 1;
      }
    }
    else
    {
      int v18 = 1;
    }
  }
  else
  {
    int v18 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v15 < 4)
    {
      int v20 = (v19 >> (8 * v15)) + 1;
      if (v15)
      {
        int v22 = v19 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v15] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v20;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588E0724);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        unint64_t v23 = (unint64_t)&a1[v11 + 17] & ~v11;
        if (v7 >= v10)
        {
          uint64_t v26 = *(void (**)(unint64_t))(v6 + 56);
          v26(v23);
        }
        else
        {
          unint64_t v24 = (v23 + v12 + v13) & ~v13;
          uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
          v25(v24);
        }
      }
      return;
  }
}

uint64_t sub_2588E074C()
{
  type metadata accessor for RangeIterator();
  return swift_getWitnessTable();
}

uint64_t sub_2588E0794()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser<>.withContext<A>(initial:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v29 = a5;
  uint64_t v27 = a6;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v12, v13, v14);
  BOOL v16 = (char *)&v26 - v15;
  double v21 = MEMORY[0x270FA5388](v17, v18, v19, v20);
  unint64_t v23 = (char *)&v26 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v24 + 16))(v23, v6, a4, v21);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v16, a1, AssociatedTypeWitness);
  WithContextBaseParser.init(base:initial:body:)((uint64_t)v23, (uint64_t)v16, v28, a3, a4, v27);
  return swift_retain();
}

uint64_t WithContextBaseParser.init(base:initial:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6, a1, a5);
  uint64_t v10 = type metadata accessor for WithContextBaseParser();
  uint64_t v11 = a6 + *(int *)(v10 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(v11, a2, AssociatedTypeWitness);
  uint64_t v14 = (void *)(a6 + *(int *)(v10 + 56));
  *uint64_t v14 = a3;
  v14[1] = a4;
  return result;
}

uint64_t type metadata accessor for WithContextBaseParser()
{
  return swift_getGenericMetadata();
}

uint64_t WithContext<A>(initial:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v11 = MEMORY[0x270FA5388](AssociatedTypeWitness, v9, AssociatedTypeWitness, v10);
  uint64_t v13 = (char *)&v16 - v12;
  (*(void (**)(char *, uint64_t, double))(v14 + 16))((char *)&v16 - v12, a1, v11);
  WithContextParser.init(initial:body:)((uint64_t)v13, a2, a3, a4);
  return swift_retain();
}

uint64_t WithContextParser.init(initial:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32))(a4, a1, AssociatedTypeWitness);
  uint64_t result = type metadata accessor for WithContextParser();
  uint64_t v10 = (void *)(a4 + *(int *)(result + 36));
  *uint64_t v10 = a2;
  v10[1] = a3;
  return result;
}

uint64_t type metadata accessor for WithContextParser()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t WithContext<A>(initial:parser:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  uint64_t v11 = *(void *)(v10 + 64);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  double v15 = MEMORY[0x270FA5388](AssociatedTypeWitness, v13, AssociatedTypeWitness, v14);
  uint64_t v17 = (char *)&v22 - v16;
  (*(void (**)(char *, uint64_t, double))(v18 + 16))((char *)&v22 - v16, a1, v15);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a2, a3);
  unint64_t v19 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = a3;
  *(void *)(v20 + 24) = a4;
  (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v20 + v19, (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0), a3);
  return WithContextParser.init(initial:body:)((uint64_t)v17, (uint64_t)sub_2588E0F24, v20, a5);
}

uint64_t sub_2588E0E9C()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 16) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  uint64_t v4 = v3 + *(void *)(v1 + 64);
  uint64_t v5 = v2 | 7;
  (*(void (**)(uint64_t))(v1 + 8))(v0 + v3);
  return MEMORY[0x270FA0238](v0, v4, v5);
}

uint64_t sub_2588E0F24@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(uint64_t, unint64_t))(*(void *)(*(void *)(v1 + 16) - 8) + 16))(a1, v1+ ((*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(*(void *)(v1 + 16) - 8) + 80)));
}

uint64_t WithContextParser.initial.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v4(a1, v1, AssociatedTypeWitness);
}

uint64_t WithContextParser.initial.setter(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v4(v1, a1, AssociatedTypeWitness);
}

uint64_t (*WithContextParser.initial.modify())()
{
  return nullsub_1;
}

uint64_t WithContextParser.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_retain();
  return v2;
}

uint64_t WithContextParser.body.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 36));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*WithContextParser.body.modify())()
{
  return nullsub_1;
}

double WithContextParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588E151C);
}

uint64_t sub_2588E11CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)&long long v32 = a1;
  v30[1] = a5;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  *(void *)&long long v31 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v10, v11, v12);
  uint64_t v14 = (char *)v30 - v13;
  uint64_t v15 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](v16, v17, v18, v19);
  double v21 = (char *)v30 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = type metadata accessor for WithContextParser();
  (*(void (**)(void))(a2 + *(int *)(v22 + 36)))();
  if (v5)
  {
    uint64_t v36 = v5;
    MEMORY[0x25A2CBEB0](v5);
    __swift_instantiateConcreteTypeFromMangledName(qword_26A0A2BC8);
    if (swift_dynamicCast())
    {
      MEMORY[0x25A2CBEA0](v5);
      long long v31 = v34;
      long long v32 = v33;
      uint64_t v24 = v35;
      sub_2588BBC70();
      swift_allocError();
      long long v25 = v31;
      *(_OWORD *)uint64_t v26 = v32;
      *(_OWORD *)(v26 + 16) = v25;
      *(void *)(v26 + 32) = v24;
      swift_willThrow();
      return MEMORY[0x25A2CBEA0](v36);
    }
    else
    {
      MEMORY[0x25A2CBEA0](v36);
      uint64_t v27 = *(void *)v32;
      sub_2588BBC70();
      swift_allocError();
      void *v28 = v5;
      v28[1] = v27;
      void v28[2] = 0x7272652072657355;
      v28[3] = 0xEA0000000000726FLL;
      v28[4] = v5;
      MEMORY[0x25A2CBEB0](v5);
      return swift_willThrow();
    }
  }
  else
  {
    v30[0] = v15;
    uint64_t v23 = v31;
    (*(void (**)(char *, uint64_t, uint64_t))(v31 + 16))(v14, a2, AssociatedTypeWitness);
    (*(void (**)(void, char *, uint64_t, uint64_t))(a4 + 24))(v32, v14, a3, a4);
    (*(void (**)(char *, uint64_t))(v23 + 8))(v14, AssociatedTypeWitness);
    return (*(uint64_t (**)(char *, uint64_t))(v30[0] + 8))(v21, a3);
  }
}

uint64_t sub_2588E151C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588E11CC(a1, v2[4], v2[2], v2[3], a2);
}

double sub_2588E153C()
{
  return WithContextParser.parse(_:context:)();
}

uint64_t WithContextBaseParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t WithContextBaseParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*WithContextBaseParser.base.modify())()
{
  return nullsub_1;
}

uint64_t WithContextBaseParser.initial.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t WithContextBaseParser.initial.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 52);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*WithContextBaseParser.initial.modify())()
{
  return nullsub_1;
}

uint64_t WithContextBaseParser.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 56));
  swift_retain();
  return v2;
}

uint64_t WithContextBaseParser.body.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 56));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*WithContextBaseParser.body.modify())()
{
  return nullsub_1;
}

double WithContextBaseParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588E1CD4);
}

uint64_t sub_2588E1854@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v45 = a8;
  uint64_t v50 = a7;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, v17);
  uint64_t v19 = (char *)&v43 - v18;
  *(void *)&long long v51 = a5;
  uint64_t v46 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](v20, v21, v22, v23);
  *(void *)&long long v52 = (char *)&v43 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = swift_getAssociatedTypeWitness();
  uint64_t v48 = *(void *)(v25 - 8);
  double v29 = MEMORY[0x270FA5388](v25, v26, v27, v28);
  long long v31 = (char *)&v43 - v30;
  long long v32 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(a6 + 24);
  uint64_t v49 = a1;
  uint64_t v33 = a3;
  uint64_t v34 = a2;
  uint64_t v35 = v53;
  uint64_t result = v32(a1, v33, a4, a6, v29);
  if (!v35)
  {
    uint64_t v53 = v25;
    uint64_t v54 = a4;
    uint64_t v55 = v51;
    uint64_t v56 = a6;
    uint64_t v57 = v50;
    uint64_t v37 = type metadata accessor for WithContextBaseParser();
    uint64_t v38 = *(void (**)(char *))(a2 + *(int *)(v37 + 56));
    uint64_t v44 = v31;
    v38(v31);
    uint64_t v40 = v48;
    uint64_t v39 = v49;
    uint64_t v41 = v34 + *(int *)(v37 + 52);
    uint64_t v42 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v47 + 16))(v19, v41, AssociatedTypeWitness);
    (*(void (**)(uint64_t, char *, void))(v50 + 24))(v39, v19, v51);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v19, AssociatedTypeWitness);
    (*(void (**)(void, void))(v46 + 8))(v52, v51);
    return (*(uint64_t (**)(char *, uint64_t))(v40 + 8))(v44, v53);
  }
  return result;
}

uint64_t sub_2588E1CD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588E1854(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

double sub_2588E1CF8()
{
  return WithContextBaseParser.parse(_:context:)();
}

uint64_t sub_2588E1D10()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588E1DBC(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    uint64_t v10 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v11 = v10[1];
    uint64_t v12 = (void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v10;
    v12[1] = v11;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2588E1ED0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))(a1, AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_2588E1F64(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  return a1;
}

uint64_t sub_2588E2008(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v9 = v8[1];
  *int v7 = *v8;
  v7[1] = v9;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2588E20B8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 32) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 32) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E2158(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, uint64_t))v5)(a1, a2, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v5 + 24) + 7 + a1) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v5 + 24) + 7 + a2) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2588E2200(_DWORD *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v6 = *(_DWORD *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v5 + 84);
  }
  uint64_t v8 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v9 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v10 = v9 & 0xFFFFFFF8;
    if ((v9 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = a2 - v7 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v9);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v9);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588E23A0);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v9);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v6 < 0x7FFFFFFF)
  {
    unint64_t v18 = *(void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v18 >= 0xFFFFFFFF) {
      LODWORD(v18) = -1;
    }
    return (v18 + 1);
  }
  else
  {
    uint64_t v17 = *(uint64_t (**)(_DWORD *))(v5 + 48);
    return v17(a1);
  }
}

void sub_2588E23B4(_DWORD *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(v6 + 64);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = ((v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v9 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v9 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v9)
  {
    if (((v8 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v9;
    }
    else {
      int v15 = 1;
    }
    if (((v8 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v9 + a2;
      bzero(a1, v10);
      *a1 = v16;
    }
    switch(v14)
    {
      case 1:
        *((unsigned char *)a1 + v10) = v15;
        return;
      case 2:
        *(_WORD *)((char *)a1 + v10) = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)((char *)a1 + v10) = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      *((unsigned char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)((char *)a1 + v10) = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588E25B8);
    case 4:
      *(_DWORD *)((char *)a1 + v10) = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          unint64_t v18 = (void *)(((unint64_t)a1 + v8 + 7) & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = (a2 - 1);
          }
          *unint64_t v18 = v19;
        }
        else
        {
          uint64_t v17 = *(void (**)(_DWORD *, uint64_t))(v6 + 56);
          v17(a1, a2);
        }
      }
      return;
  }
}

uint64_t sub_2588E25E0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2588E26D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v7 + v10) & ~v10;
  uint64_t v13 = *(void *)(v9 + 64) + 7;
  unint64_t v14 = ((v13 + v12) & 0xFFFFFFFFFFFFFFF8) + 16;
  unsigned int v15 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (v15 > 7 || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0 || v14 > 0x18)
  {
    uint64_t v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + (((v15 | 7) + 16) & ~(unint64_t)(v15 | 7)));
  }
  else
  {
    uint64_t v19 = AssociatedTypeWitness;
    uint64_t v20 = ~v10;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unint64_t v21 = ((unint64_t)a2 + v11) & v20;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v20, v21, v19);
    uint64_t v22 = (void *)((v13 + v21) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v23 = v22[1];
    uint64_t v24 = (void *)((v13 + (((unint64_t)a1 + v11) & v20)) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v24 = *v22;
    v24[1] = v23;
  }
  swift_retain();
  return a1;
}

uint64_t sub_2588E2890(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(void))v3)();
  uint64_t v4 = *(void *)(v3 + 56) + a1;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 8))((v4 + *(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(AssociatedTypeWitness - 8) + 80), AssociatedTypeWitness);
  return swift_release();
}

uint64_t sub_2588E2970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 48) + 7;
  unint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  return a1;
}

uint64_t sub_2588E2A6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 24))(v11, v12, AssociatedTypeWitness);
  uint64_t v13 = *(void *)(v9 + 40) + 7;
  unint64_t v14 = (void *)((v13 + v11) & 0xFFFFFFFFFFFFFFF8);
  unsigned int v15 = (void *)((v13 + v12) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v16 = v15[1];
  *unint64_t v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2588E2B74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 32);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32))(v11, v12, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v9 + 32) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E2C6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (v6 + v10 + a1) & ~v10;
  uint64_t v12 = (v6 + v10 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 40))(v11, v12, AssociatedTypeWitness);
  *(_OWORD *)((*(void *)(v9 + 24) + 7 + v11) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2588E2D6C(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = v7;
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v12 = 0x7FFFFFFF;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v13 = *(void *)(v6 + 64) + v11;
  uint64_t v14 = *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) + 7;
  if (v12 < a2)
  {
    unint64_t v15 = ((v14 + (v13 & ~v11)) & 0xFFFFFFFFFFFFFFF8) + 16;
    uint64_t v16 = v15 & 0xFFFFFFF8;
    if ((v15 & 0xFFFFFFF8) != 0) {
      unsigned int v17 = 2;
    }
    else {
      unsigned int v17 = a2 - v12 + 1;
    }
    if (v17 >= 0x10000) {
      unsigned int v18 = 4;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v17 < 0x100) {
      unsigned int v18 = 1;
    }
    if (v17 >= 2) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = 0;
    }
    switch(v19)
    {
      case 1:
        int v20 = *((unsigned __int8 *)a1 + v15);
        if (!v20) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v20 = *(unsigned __int16 *)((char *)a1 + v15);
        if (v20) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588E2FECLL);
      case 4:
        int v20 = *(int *)((char *)a1 + v15);
        if (!v20) {
          break;
        }
LABEL_24:
        int v22 = v20 - 1;
        if (v16)
        {
          int v22 = 0;
          int v23 = *a1;
        }
        else
        {
          int v23 = 0;
        }
        return v12 + (v23 | v22) + 1;
      default:
        break;
    }
  }
  if (v7 == v12)
  {
    uint64_t v24 = *(uint64_t (**)(int *, uint64_t, uint64_t))(v6 + 48);
    return v24(a1, v7, v5);
  }
  else
  {
    unint64_t v25 = ((unint64_t)a1 + v13) & ~v11;
    if (v10 == v12)
    {
      uint64_t v26 = *(uint64_t (**)(unint64_t))(v9 + 48);
      return v26(v25);
    }
    else
    {
      unint64_t v27 = *(void *)((v14 + v25) & 0xFFFFFFFFFFFFFFF8);
      if (v27 >= 0xFFFFFFFF) {
        LODWORD(v27) = -1;
      }
      return (v27 + 1);
    }
  }
}

void sub_2588E3000(_DWORD *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v29 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= v9) {
    unsigned int v13 = v9;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  uint64_t v14 = *(void *)(v8 + 64) + v12;
  uint64_t v15 = *(void *)(v10 + 64) + 7;
  unint64_t v16 = ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 >= a3)
  {
    int v19 = 0;
    int v20 = a2 - v13;
    if (a2 <= v13)
    {
LABEL_19:
      uint64_t v21 = ~v12;
      switch(v19)
      {
        case 1:
          *((unsigned char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 2:
          *(_WORD *)((char *)a1 + v16) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_32;
        case 3:
          goto LABEL_49;
        case 4:
          *(_DWORD *)((char *)a1 + v16) = 0;
          goto LABEL_31;
        default:
LABEL_31:
          if (a2)
          {
LABEL_32:
            if (v9 == v13)
            {
              uint64_t v24 = *(void (**)(_DWORD *, uint64_t, uint64_t, uint64_t))(v29 + 56);
              v24(a1, a2, v9, v7);
            }
            else
            {
              unint64_t v25 = ((unint64_t)a1 + v14) & v21;
              if (v11 == v13)
              {
                uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
                v26(v25, a2);
              }
              else
              {
                unint64_t v27 = (void *)((v15 + v25) & 0xFFFFFFFFFFFFFFF8);
                if ((a2 & 0x80000000) != 0)
                {
                  uint64_t v28 = a2 ^ 0x80000000;
                  v27[1] = 0;
                }
                else
                {
                  uint64_t v28 = (a2 - 1);
                }
                *unint64_t v27 = v28;
              }
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      unsigned int v17 = a3 - v13 + 1;
    }
    else {
      unsigned int v17 = 2;
    }
    if (v17 >= 0x10000) {
      int v18 = 4;
    }
    else {
      int v18 = 2;
    }
    if (v17 < 0x100) {
      int v18 = 1;
    }
    if (v17 >= 2) {
      int v19 = v18;
    }
    else {
      int v19 = 0;
    }
    int v20 = a2 - v13;
    if (a2 <= v13) {
      goto LABEL_19;
    }
  }
  if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    int v22 = v20;
  }
  else {
    int v22 = 1;
  }
  if (((v15 + (v14 & ~v12)) & 0xFFFFFFF8) != 0xFFFFFFF0)
  {
    int v23 = ~v13 + a2;
    bzero(a1, ((v15 + (v14 & ~v12)) & 0xFFFFFFFFFFFFFFF8) + 16);
    *a1 = v23;
  }
  switch(v19)
  {
    case 1:
      *((unsigned char *)a1 + v16) = v22;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v16) = v22;
      break;
    case 3:
LABEL_49:
      __break(1u);
      JUMPOUT(0x2588E32E0);
    case 4:
      *(_DWORD *)((char *)a1 + v16) = v22;
      break;
    default:
      return;
  }
}

uint64_t sub_2588E3308()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588E3354()
{
  type metadata accessor for WithContextParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.then<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v15 = *(void *)(a3 - 8);
  double v16 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  int v18 = (char *)v21 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v15 + 16))(v18, v7, v16);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a7, v18, a3);
  v21[0] = a3;
  v21[1] = a4;
  v21[2] = a5;
  v21[3] = a6;
  int v19 = (void *)(a7 + *(int *)(type metadata accessor for FlatMapParser() + 52));
  *int v19 = a1;
  v19[1] = a2;
  return swift_retain();
}

uint64_t FlatMapParser.init(base:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5, a1, a4);
  uint64_t result = type metadata accessor for FlatMapParser();
  uint64_t v9 = (void *)(a5 + *(int *)(result + 52));
  *uint64_t v9 = a2;
  v9[1] = a3;
  return result;
}

uint64_t type metadata accessor for FlatMapParser()
{
  return swift_getGenericMetadata();
}

uint64_t FlatMapParser.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t FlatMapParser.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*FlatMapParser.base.modify())()
{
  return nullsub_1;
}

uint64_t FlatMapParser.body.getter(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 52));
  swift_retain();
  return v2;
}

uint64_t FlatMapParser.body.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = (void *)(v3 + *(int *)(a3 + 52));
  uint64_t result = swift_release();
  *uint64_t v6 = a1;
  v6[1] = a2;
  return result;
}

uint64_t (*FlatMapParser.body.modify())()
{
  return nullsub_1;
}

double FlatMapParser.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588E3AE4);
}

uint64_t sub_2588E3754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)&long long v35 = a7;
  uint64_t v31 = a8;
  *(void *)&long long v36 = a5;
  uint64_t v32 = *(void *)(a5 - 8);
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v33 = (char *)&v29 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  double v20 = MEMORY[0x270FA5388](AssociatedTypeWitness, v17, v18, v19);
  int v22 = (char *)&v29 - v21;
  int v23 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(a6 + 24);
  uint64_t v34 = a1;
  uint64_t result = v23(a1, a3, a4, a6, v20);
  if (!v8)
  {
    uint64_t v29 = v16;
    uint64_t v30 = AssociatedTypeWitness;
    uint64_t v25 = v36;
    uint64_t v37 = a4;
    uint64_t v38 = v36;
    uint64_t v39 = a6;
    uint64_t v26 = v35;
    uint64_t v40 = v35;
    uint64_t v27 = type metadata accessor for FlatMapParser();
    uint64_t v28 = v33;
    (*(void (**)(char *))(a2 + *(int *)(v27 + 52)))(v22);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 24))(v34, a3, v25, v26);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v28, v25);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v22, v30);
  }
  return result;
}

uint64_t sub_2588E3AE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588E3754(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

double sub_2588E3B08()
{
  return FlatMapParser.parse(_:context:)();
}

uint64_t sub_2588E3B24(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588E3C70);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588E3C84(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_44;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_44:
      __break(1u);
      JUMPOUT(0x2588E3E64);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            uint64_t v19 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            uint64_t v19 = a2 - 1;
          }
          *uint64_t v18 = v19;
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588E3E8C()
{
  return swift_getWitnessTable();
}

uint64_t IntegerCast.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t IntegerCast.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t IntegerCast.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*IntegerCast.base.modify())()
{
  return nullsub_1;
}

double IntegerCast.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588E4470);
}

uint64_t sub_2588E40E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>)
{
  uint64_t v44 = a6;
  uint64_t v45 = a7;
  uint64_t v42 = a8;
  uint64_t v47 = a4;
  uint64_t v13 = sub_2588F0358();
  uint64_t v43 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13, v14, v15, v16);
  uint64_t v18 = (char *)&v41 - v17;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v46 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v19, v20, v21);
  int v23 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v28 = MEMORY[0x270FA5388](v24, v25, v26, v27);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(a5 + 24);
  long long v51 = (char *)&v41 - v30;
  uint64_t result = v29(a1, a2, a3, a5, v28);
  if (!v8)
  {
    uint64_t v32 = v43;
    uint64_t v33 = v46;
    uint64_t v34 = AssociatedTypeWitness;
    (*(void (**)(char *, char *, uint64_t))(v46 + 16))(v23, v51, AssociatedTypeWitness);
    uint64_t v35 = v47;
    sub_2588F02E8();
    uint64_t v36 = *(void *)(v35 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v18, 1, v35) == 1)
    {
      (*(void (**)(char *, uint64_t))(v32 + 8))(v18, v13);
      uint64_t v49 = 0;
      unint64_t v50 = 0xE000000000000000;
      sub_2588F0408();
      uint64_t v37 = v51;
      sub_2588F0488();
      sub_2588F0228();
      sub_2588F0588();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      uint64_t v38 = v49;
      unint64_t v39 = v50;
      sub_2588BBC70();
      swift_allocError();
      *(_OWORD *)uint64_t v40 = xmmword_2588F73E0;
      *(void *)(v40 + 16) = v38;
      *(void *)(v40 + 24) = v39;
      *(void *)(v40 + 32) = 0;
      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v33 + 8))(v37, v34);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v33 + 8))(v51, v34);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v36 + 32))(v42, v18, v35);
    }
  }
  return result;
}

uint64_t sub_2588E4470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588E40E4(a1, v2[8], v2[2], v2[3], v2[4], v2[5], v2[6], a2);
}

double sub_2588E4498()
{
  return IntegerCast.parse(_:context:)();
}

uint64_t sub_2588E44B0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588E460C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588E4824);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for IntegerCast()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588E4864()
{
  return swift_getWitnessTable();
}

uint64_t Bytes(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  *a4 = a1;
  a4[1] = a2;
  a4[2] = a3;
  return swift_bridgeObjectRetain();
}

void *sub_2588E48CC@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t result = sub_2588E4A60(a1, a2, *v3, v3[1], v3[2]);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
    a3[2] = v8;
    return (void *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s15ParsingInternal10ASCIIBytesyQrSSF_0@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, void *a3@<X8>)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_9;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v4 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v4 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v4)
  {
    while (1)
    {
      unsigned int v5 = sub_2588E49DC(v4, 0);
      swift_bridgeObjectRetain();
      uint64_t result = sub_2588F0418();
      if (v7) {
        break;
      }
      if (result == v4) {
        goto LABEL_11;
      }
      __break(1u);
LABEL_9:
      uint64_t v4 = sub_2588F0238();
      if (!v4) {
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    swift_bridgeObjectRetain();
    unsigned int v5 = (void *)MEMORY[0x263F8EE78];
LABEL_11:
    uint64_t v8 = v5[2];
    uint64_t result = swift_bridgeObjectRelease();
    *a3 = 0;
    a3[1] = v8;
    a3[2] = v5;
  }
  return result;
}

void *sub_2588E49DC(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  __swift_instantiateConcreteTypeFromMangledName(qword_26A0A3200);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  _OWORD v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

_UNKNOWN **sub_2588E4A44()
{
  return &off_26B2E4088;
}

ValueMetadata *type metadata accessor for BytesParser()
{
  return &type metadata for BytesParser;
}

void *sub_2588E4A60(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = *result;
  uint64_t v5 = result[1];
  if (__OFSUB__(v5, *result))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v7 = a4 - a3;
  if (__OFSUB__(a4, a3))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v5 - *result < v7)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v8 = 0xD00000000000001BLL;
    unint64_t v9 = 0x8000000258901D90;
    sub_2588BBC70();
    swift_allocError();
    *unsigned int v10 = 0;
LABEL_25:
    v10[1] = v6;
    v10[2] = v8;
    v10[3] = v9;
    v10[4] = 0;
    swift_willThrow();
    return (void *)v6;
  }
  if (v7 < 0) {
    goto LABEL_34;
  }
  if (v7)
  {
    uint64_t v11 = 0;
    uint64_t v12 = result[2];
    uint64_t v13 = *(void *)(a5 + 16);
    uint64_t v14 = *(void *)(v12 + 16);
    if (v13 <= a3) {
      uint64_t v13 = a3;
    }
    uint64_t v15 = v13 - a3;
    if (v14 <= v6) {
      uint64_t v14 = *result;
    }
    uint64_t v16 = v14 - v6;
    while (1)
    {
      if (v7 == v11)
      {
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
LABEL_30:
        __break(1u);
LABEL_31:
        __break(1u);
        goto LABEL_32;
      }
      if (a3 < 0) {
        goto LABEL_28;
      }
      if (v15 == v11) {
        goto LABEL_29;
      }
      if (v6 < 0) {
        goto LABEL_30;
      }
      if (v16 == v11) {
        goto LABEL_31;
      }
      if (*(unsigned __int8 *)(a3 + a5 + 32 + v11) != *(unsigned __int8 *)(v6 + v12 + 32 + v11)) {
        break;
      }
      if (v7 == ++v11) {
        goto LABEL_19;
      }
    }
    if (__OFADD__(v11, v6)) {
      goto LABEL_36;
    }
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588C2034();
    sub_2588F0248();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    uint64_t result = (void *)sub_2588F0228();
    if ((unint64_t)(v6 + v11) < *(void *)(v12 + 16))
    {
      sub_2588F0248();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001ALL;
      unint64_t v9 = 0x8000000258901D70;
      sub_2588BBC70();
      swift_allocError();
      *unsigned int v10 = 1;
      v6 += v11;
      goto LABEL_25;
    }
    goto LABEL_37;
  }
LABEL_19:
  uint64_t v17 = v6 + v7;
  if (v6 + v7 >= v6 && v5 >= v17)
  {
    *uint64_t result = v17;
    return (void *)v6;
  }
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
  return result;
}

void *EndParser.parse(_:context:)(void *a1)
{
  return sub_2588E4DE8(a1);
}

void *sub_2588E4DC8(void *a1)
{
  return sub_2588E4DE8(a1);
}

void *sub_2588E4DE8(void *result)
{
  uint64_t v2 = *result;
  uint64_t v1 = result[1];
  if (__OFSUB__(v1, *result))
  {
    __break(1u);
  }
  else if (v1 != *result)
  {
    sub_2588BBC70();
    swift_allocError();
    *(void *)uint64_t v3 = 1;
    *(void *)(v3 + 8) = v2;
    strcpy((char *)(v3 + 16), "Expected end");
    *(unsigned char *)(v3 + 29) = 0;
    *(_WORD *)(v3 + 30) = -5120;
    *(void *)(v3 + 32) = 0;
    return (void *)swift_willThrow();
  }
  return result;
}

uint64_t type metadata accessor for EndParser()
{
  return __swift_instantiateGenericMetadata();
}

unint64_t sub_2588E4E90()
{
  unint64_t result = qword_26A0A3288;
  if (!qword_26A0A3288)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(qword_26A0A3290);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26A0A3288);
  }
  return result;
}

uint64_t sub_2588E4EEC()
{
  type metadata accessor for EndParser();
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.debugMessage(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v10 = *(void *)(a3 - 8);
  double v11 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, double))(v10 + 16))(v13, v5, v11);
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(a5, v13, a3);
  uint64_t v14 = (void *)(a5 + *(int *)(type metadata accessor for DebugMessage() + 36));
  *uint64_t v14 = a1;
  v14[1] = a2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_2588E5048()
{
  type metadata accessor for DebugMessage();
  return swift_getWitnessTable();
}

uint64_t type metadata accessor for DebugMessage()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588E50A8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2588E5140(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  int v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16 > 0x18)
  {
    uint64_t v9 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8));
    swift_retain();
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    uint64_t v10 = (void *)(((unint64_t)v4 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    double v11 = (void *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v10 = *v11;
    v10[1] = v11[1];
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t sub_2588E5244(uint64_t a1, uint64_t a2)
{
  (*(void (**)(void))(*(void *)(*(void *)(a2 + 16) - 8) + 8))();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2588E52B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2588E533C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2588E53D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v5)();
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  int v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *int v7 = *v8;
  v7[1] = v8[1];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2588E545C(_DWORD *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  if (v7 < a2)
  {
    unint64_t v8 = ((v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
    unsigned int v9 = a2 - v7;
    uint64_t v10 = v8 & 0xFFFFFFF8;
    if ((v8 & 0xFFFFFFF8) != 0) {
      unsigned int v11 = 2;
    }
    else {
      unsigned int v11 = v9 + 1;
    }
    if (v11 >= 0x10000) {
      unsigned int v12 = 4;
    }
    else {
      unsigned int v12 = 2;
    }
    if (v11 < 0x100) {
      unsigned int v12 = 1;
    }
    if (v11 >= 2) {
      uint64_t v13 = v12;
    }
    else {
      uint64_t v13 = 0;
    }
    switch(v13)
    {
      case 1:
        int v14 = *((unsigned __int8 *)a1 + v8);
        if (!v14) {
          break;
        }
        goto LABEL_22;
      case 2:
        int v14 = *(unsigned __int16 *)((char *)a1 + v8);
        if (v14) {
          goto LABEL_22;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588E55A8);
      case 4:
        int v14 = *(_DWORD *)((char *)a1 + v8);
        if (!v14) {
          break;
        }
LABEL_22:
        int v16 = v14 - 1;
        if (v10)
        {
          int v16 = 0;
          LODWORD(v10) = *a1;
        }
        return v7 + (v10 | v16) + 1;
      default:
        break;
    }
  }
  if (v5 >= 0x7FFFFFFF) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  unint64_t v17 = *(void *)((((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v17 >= 0xFFFFFFFF) {
    LODWORD(v17) = -1;
  }
  return (v17 + 1);
}

void sub_2588E55BC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  unint64_t v10 = ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
    unsigned int v11 = a3 - v8 + 1;
  }
  else {
    unsigned int v11 = 2;
  }
  if (v11 >= 0x10000) {
    int v12 = 4;
  }
  else {
    int v12 = 2;
  }
  if (v11 < 0x100) {
    int v12 = 1;
  }
  if (v11 >= 2) {
    unsigned int v13 = v12;
  }
  else {
    unsigned int v13 = 0;
  }
  if (v8 < a3) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0;
  }
  if (a2 > v8)
  {
    if (((v9 + 7) & 0xFFFFFFF8) == 0xFFFFFFF0) {
      int v15 = a2 - v8;
    }
    else {
      int v15 = 1;
    }
    if (((v9 + 7) & 0xFFFFFFF8) != 0xFFFFFFF0)
    {
      int v16 = ~v8 + a2;
      bzero(a1, ((v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 16);
      *(_DWORD *)a1 = v16;
    }
    switch(v14)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_43;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v14)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_33;
    case 3:
LABEL_43:
      __break(1u);
      JUMPOUT(0x2588E579CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_32;
    default:
LABEL_32:
      if (a2)
      {
LABEL_33:
        if (v7 < 0x7FFFFFFF)
        {
          uint64_t v18 = (void *)((unint64_t)&a1[v9 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((a2 & 0x80000000) != 0)
          {
            *uint64_t v18 = a2 ^ 0x80000000;
            v18[1] = 0;
          }
          else
          {
            v18[1] = a2 - 1;
          }
        }
        else
        {
          unint64_t v17 = *(void (**)(void))(v6 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_2588E57C4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v40 = a2;
  uint64_t v39 = a4;
  uint64_t v6 = *(void *)(a3 + 16);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v37 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v38 = AssociatedTypeWitness;
  MEMORY[0x270FA5388](AssociatedTypeWitness, v9, v10, v11);
  unsigned int v13 = (char *)&v36 - v12;
  __swift_instantiateConcreteTypeFromMangledName(qword_26A0A3318);
  uint64_t v14 = swift_allocObject();
  long long v42 = xmmword_2588F7E60;
  *(_OWORD *)(v14 + 16) = xmmword_2588F7E60;
  uint64_t v43 = 8254;
  unint64_t v44 = 0xE200000000000000;
  swift_bridgeObjectRetain();
  sub_2588F0228();
  swift_bridgeObjectRelease();
  uint64_t v15 = v43;
  unint64_t v16 = v44;
  *(void *)(v14 + 56) = MEMORY[0x263F8D310];
  *(void *)(v14 + 32) = v15;
  *(void *)(v14 + 40) = v16;
  sub_2588F0518();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v18 = a1[1];
  uint64_t v19 = v18 - *a1;
  if (__OFSUB__(v18, *a1))
  {
    __break(1u);
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v20 = v41;
  (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, v40, v6, v7);
  if (v20)
  {
    uint64_t v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = v42;
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    uint64_t v45 = v20;
    __swift_instantiateConcreteTypeFromMangledName(qword_26A0A2BC8);
    sub_2588F0428();
    uint64_t v22 = v43;
    unint64_t v23 = v44;
    *(void *)(v21 + 56) = MEMORY[0x263F8D310];
    *(void *)(v21 + 32) = v22;
    *(void *)(v21 + 40) = v23;
    sub_2588F0518();
    swift_bridgeObjectRelease();
    swift_willThrow();
    return sub_2588E5BFC();
  }
  uint64_t v36 = v6;
  uint64_t v40 = v7;
  uint64_t v41 = v4;
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = v42;
  uint64_t v43 = 0;
  unint64_t v44 = 0xE000000000000000;
  sub_2588F0408();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v43 = 0x73726170202D2020;
  unint64_t v44 = 0xEB00000000206465;
  uint64_t v25 = a1[1];
  uint64_t v26 = v25 - *a1;
  if (__OFSUB__(v25, *a1)) {
    goto LABEL_9;
  }
  BOOL v27 = __OFSUB__(v19, v26);
  uint64_t v28 = v19 - v26;
  if (!v27)
  {
    uint64_t v45 = v28;
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    uint64_t v29 = v43;
    unint64_t v30 = v44;
    uint64_t v31 = MEMORY[0x263F8D310];
    *(void *)(v24 + 56) = MEMORY[0x263F8D310];
    *(void *)(v24 + 32) = v29;
    *(void *)(v24 + 40) = v30;
    sub_2588F0518();
    swift_bridgeObjectRelease();
    uint64_t v32 = swift_allocObject();
    *(_OWORD *)(v32 + 16) = v42;
    uint64_t v43 = 0;
    unint64_t v44 = 0xE000000000000000;
    sub_2588F0228();
    uint64_t v33 = v38;
    sub_2588F0478();
    uint64_t v34 = v43;
    unint64_t v35 = v44;
    *(void *)(v32 + 56) = v31;
    *(void *)(v32 + 32) = v34;
    *(void *)(v32 + 40) = v35;
    sub_2588F0518();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v37 + 32))(v39, v13, v33);
    return sub_2588E5BFC();
  }
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_2588E5BFC()
{
  __swift_instantiateConcreteTypeFromMangledName(qword_26A0A3318);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2588F7E60;
  type metadata accessor for DebugMessage();
  swift_bridgeObjectRetain();
  sub_2588F0228();
  swift_bridgeObjectRelease();
  *(void *)(v0 + 56) = MEMORY[0x263F8D310];
  *(void *)(v0 + 32) = 8252;
  *(void *)(v0 + 40) = 0xE200000000000000;
  sub_2588F0518();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2588E5CE4@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_2588E57C4(a1, a2, a3, a4);
}

uint64_t ContextfulParser.collect<A>(count:into:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v10 = MEMORY[0x270FA5388](a1, v5, a2, a3);
  uint64_t v12 = (char *)&v20 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13, v14, v15);
  unint64_t v17 = (char *)&v20 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v18 + 16))(v17);
  sub_2588F0348();
  return CollectCount.init(base:initialContainer:count:)((uint64_t)v17, (uint64_t)v12, a1, a2, a3, a4);
}

uint64_t ContextfulParser.collect(count:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  double v8 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16))(v10, v12, a2, v8);
  swift_getAssociatedTypeWitness();
  uint64_t v16 = sub_2588F0298();
  uint64_t v13 = sub_2588F02C8();
  swift_getWitnessTable();
  return CollectCount.init(base:initialContainer:count:)((uint64_t)v10, (uint64_t)&v16, a1, a2, v13, a5);
}

uint64_t CollectCount.init(base:initialContainer:count:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a6, a1, a4);
  uint64_t v10 = type metadata accessor for CollectCount();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a5 - 8) + 32))(a6 + *(int *)(v10 + 52), a2, a5);
  *(void *)(a6 + *(int *)(v10 + 56)) = a3;
  return result;
}

uint64_t CollectCount.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t CollectCount.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*CollectCount.base.modify())()
{
  return nullsub_1;
}

uint64_t CollectCount.initialContainer.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t CollectCount.initialContainer.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*CollectCount.initialContainer.modify())()
{
  return nullsub_1;
}

uint64_t CollectCount.count.getter(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 56));
}

uint64_t CollectCount.count.setter(uint64_t result, uint64_t a2)
{
  *(void *)(v2 + *(int *)(a2 + 56)) = result;
  return result;
}

uint64_t (*CollectCount.count.modify())()
{
  return nullsub_1;
}

double CollectCount.parse(_:context:)()
{
  return ByteBuffer.atomically<A>(_:)((void (*)(long long *))sub_2588E64D4);
}

uint64_t sub_2588E6240@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v42 = a3;
  uint64_t v40 = a1;
  uint64_t v49 = a8;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v36 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, v17);
  uint64_t v19 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20, v21, v22, v23);
  uint64_t v25 = (char *)&v35 - v24;
  uint64_t v43 = a4;
  uint64_t v44 = a6;
  uint64_t v45 = a4;
  uint64_t v46 = a5;
  uint64_t v47 = a6;
  uint64_t v48 = a7;
  uint64_t v38 = a7;
  uint64_t v26 = type metadata accessor for CollectCount();
  uint64_t v27 = a2 + *(int *)(v26 + 52);
  uint64_t v28 = *(void *)(a5 - 8);
  uint64_t v29 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 16);
  uint64_t v39 = a5;
  uint64_t result = v29(v49, v27, a5);
  uint64_t v31 = *(int *)(v26 + 56);
  uint64_t v41 = a2;
  uint64_t v32 = *(void *)(a2 + v31);
  if (v32 < 0)
  {
    __break(1u);
  }
  else if (v32)
  {
    uint64_t v35 = v28;
    uint64_t v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 24);
    uint64_t v33 = (void (**)(char *, char *, uint64_t))(v36 + 16);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v36 + 8);
    while (1)
    {
      v37(v40, v42, v43, v44);
      if (v8) {
        break;
      }
      (*v33)(v19, v25, AssociatedTypeWitness);
      sub_2588F0338();
      uint64_t result = (*v34)(v25, AssociatedTypeWitness);
      if (!--v32) {
        return result;
      }
    }
    return (*(uint64_t (**)(uint64_t, uint64_t))(v35 + 8))(v49, v39);
  }
  return result;
}

double sub_2588E64A4()
{
  return CollectCount.parse(_:context:)();
}

uint64_t type metadata accessor for CollectCount()
{
  return swift_getGenericMetadata();
}

uint64_t sub_2588E64D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_2588E6240(a1, v2[6], v2[7], v2[2], v2[3], v2[4], v2[5], a2);
}

uint64_t sub_2588E64F8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_2588E65D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = ((v11 + ((v6 + v9) & ~v9)) & 0xFFFFFFFFFFFFFFF8) + 8;
  unsigned int v13 = v9 | *(_DWORD *)(v5 + 80) & 0xF8;
  if (v13 > 7 || ((*(_DWORD *)(v5 + 80) | *(_DWORD *)(v8 + 80)) & 0x100000) != 0 || v12 > 0x18)
  {
    uint64_t v16 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (uint64_t *)(v16 + (((v13 | 7) + 16) & ~(unint64_t)(v13 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v5 + 16))(a1, a2);
    unint64_t v18 = ((unint64_t)a2 + v10) & v17;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v8 + 16))(((unint64_t)v4 + v10) & v17, v18, v7);
    *(void *)((v11 + (((unint64_t)v4 + v10) & v17)) & 0xFFFFFFFFFFFFFFF8) = *(void *)((v11 + v18) & 0xFFFFFFFFFFFFFFF8);
  }
  return v4;
}

uint64_t sub_2588E676C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 48);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 16;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))(v12, v13);
  *(void *)((*(void *)(v9 + 48) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 48) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E683C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 40);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 24;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))(v12, v13);
  *(void *)((*(void *)(v9 + 40) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 40) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E690C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 32);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 32;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))(v12, v13);
  *(void *)((*(void *)(v9 + 32) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 32) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E69DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(void))v6)();
  uint64_t v7 = *(void *)(v6 + 24);
  uint64_t v8 = *(void *)(*(void *)(a3 + 24) - 8);
  uint64_t v9 = v8 + 40;
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = v7 + v10;
  uint64_t v12 = (v11 + a1) & ~v10;
  uint64_t v13 = (v11 + a2) & ~v10;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))(v12, v13);
  *(void *)((*(void *)(v9 + 24) + 7 + v12) & 0xFFFFFFFFFFFFFFF8) = *(void *)((*(void *)(v9 + 24) + 7 + v13) & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2588E6AAC(int *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  if (v10 < a2)
  {
    unint64_t v12 = ((*(void *)(*(void *)(v5 - 8) + 64) + (v11 & ~v9) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
    unsigned int v13 = a2 - v10;
    uint64_t v14 = v12 & 0xFFFFFFF8;
    if ((v12 & 0xFFFFFFF8) != 0) {
      unsigned int v15 = 2;
    }
    else {
      unsigned int v15 = v13 + 1;
    }
    if (v15 >= 0x10000) {
      LODWORD(v16) = 4;
    }
    else {
      LODWORD(v16) = 2;
    }
    if (v15 < 0x100) {
      LODWORD(v16) = 1;
    }
    if (v15 >= 2) {
      uint64_t v16 = v16;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = *((unsigned __int8 *)a1 + v12);
        if (!v17) {
          break;
        }
        goto LABEL_21;
      case 2:
        int v17 = *(unsigned __int16 *)((char *)a1 + v12);
        if (v17) {
          goto LABEL_21;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x2588E6C5CLL);
      case 4:
        int v17 = *(int *)((char *)a1 + v12);
        if (!v17) {
          break;
        }
LABEL_21:
        unsigned int v18 = v17 - 1;
        if (v14)
        {
          unsigned int v18 = 0;
          int v19 = *a1;
        }
        else
        {
          int v19 = 0;
        }
        return v10 + (v19 | v18) + 1;
      default:
        break;
    }
  }
  if (!v10) {
    return 0;
  }
  if (v6 >= v8) {
    return (*(uint64_t (**)(void))(v4 + 48))();
  }
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
}

void sub_2588E6C70(unsigned char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = ((*(void *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v12 >= a3)
  {
    int v18 = 0;
    int v19 = a2 - v12;
    if (a2 <= v12)
    {
LABEL_17:
      switch(v18)
      {
        case 1:
          a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 2:
          *(_WORD *)&a1[v14] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_30;
        case 3:
          goto LABEL_41;
        case 4:
          *(_DWORD *)&a1[v14] = 0;
          goto LABEL_29;
        default:
LABEL_29:
          if (a2)
          {
LABEL_30:
            if (v7 >= v10)
            {
              uint64_t v24 = *(void (**)(void))(v6 + 56);
              v24();
            }
            else
            {
              unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
              uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
              v23(v22);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    unsigned int v15 = a3 - v12;
    if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v16 = v15 + 1;
    }
    else {
      unsigned int v16 = 2;
    }
    if (v16 >= 0x10000) {
      int v17 = 4;
    }
    else {
      int v17 = 2;
    }
    if (v16 < 0x100) {
      int v17 = 1;
    }
    if (v16 >= 2) {
      int v18 = v17;
    }
    else {
      int v18 = 0;
    }
    int v19 = a2 - v12;
    if (a2 <= v12) {
      goto LABEL_17;
    }
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v20 = v19;
  }
  else {
    int v20 = 1;
  }
  if (((*(_DWORD *)(*(void *)(v8 - 8) + 64) + (v13 & ~v11) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    unsigned int v21 = ~v12 + a2;
    bzero(a1, v14);
    *(_DWORD *)a1 = v21;
  }
  switch(v18)
  {
    case 1:
      a1[v14] = v20;
      break;
    case 2:
      *(_WORD *)&a1[v14] = v20;
      break;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588E6ED0);
    case 4:
      *(_DWORD *)&a1[v14] = v20;
      break;
    default:
      return;
  }
}

uint64_t sub_2588E6EF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588E6FA4()
{
  return swift_getWitnessTable();
}

uint64_t Slice(objectCount:objectByteCount:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t _s15ParsingInternal5Slice9byteCountQrx_ts17FixedWidthIntegerRzlF_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v7 = *(void *)(a2 - 8);
  MEMORY[0x270FA5388](a1, a1, a3, a4);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v7 + 32))(a5, v9, a2);
}

uint64_t Slice<A>(minimumBytes:maximumBytes:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  MEMORY[0x270FA5388](a1, a1, a3, a4);
  unsigned int v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  double v15 = MEMORY[0x270FA5388](v11, v12, v13, v14);
  int v17 = (char *)&v22 - v16;
  int v18 = *(void (**)(char *, double))(v8 + 16);
  v18((char *)&v22 - v16, v15);
  ((void (*)(char *, uint64_t, uint64_t))v18)(v10, a2, a3);
  int v19 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
  v19(a5, v17, a3);
  uint64_t v20 = type metadata accessor for SliceRangeCount();
  return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a5 + *(int *)(v20 + 36), v10, a3);
}

uint64_t SliceRangeCount.init(minimum:maximum:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32);
  v9(a3 - 8, a4, a1);
  uint64_t v7 = a4 + *(int *)(type metadata accessor for SliceRangeCount() + 36);
  return v9(v7, a2, a3);
}

uint64_t type metadata accessor for SliceRangeCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t Slice<A, B>(byteCount:_:)@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X6>, uint64_t a7@<X8>)
{
  uint64_t v27 = a7;
  uint64_t v28 = *(void *)(a5 - 8);
  uint64_t v29 = a6;
  MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SliceByCount();
  uint64_t v14 = *(void *)(v13 - 8);
  double v18 = MEMORY[0x270FA5388](v13, v15, v16, v17);
  uint64_t v20 = (char *)&v26 - v19;
  uint64_t v21 = Slice<A>(minimumBytes:)(a1, a4, v18);
  uint64_t v22 = v30;
  a2(v21);
  if (!v22)
  {
    uint64_t v23 = v29;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    ContextfulParser<>.parseSlice<A, B>(with:)((uint64_t)v12, v13, AssociatedTypeWitness, a5, (uint64_t)&protocol witness table for SliceByCount<A>, v23, v27);
    (*(void (**)(char *, uint64_t))(v28 + 8))(v12, a5);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v20, v13);
}

uint64_t type metadata accessor for SliceByCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t (*SliceByCount.count.modify())()
{
  return nullsub_1;
}

uint64_t SliceByCount.parse(_:context:)(void *a1, uint64_t a2, uint64_t a3)
{
  char v112 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) + 8);
  uint64_t v104 = *(void *)(*(void *)(v5 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness, v6, v7, v8);
  v102[2] = (char *)v102 - v9;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v11, v12, v13, v14);
  uint64_t v105 = (char *)v102 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v17, v18, v19);
  uint64_t v106 = (char *)v102 - v20;
  MEMORY[0x270FA5388](v21, v22, v23, v24);
  uint64_t v111 = (char *)v102 - v25;
  MEMORY[0x270FA5388](v26, v27, v28, v29);
  uint64_t v110 = (char *)v102 - v30;
  MEMORY[0x270FA5388](v31, v32, v33, v34);
  uint64_t v108 = (char *)v102 - v35;
  MEMORY[0x270FA5388](v36, v37, v38, v39);
  uint64_t v41 = (char *)v102 - v40;
  MEMORY[0x270FA5388](v42, v43, v44, v45);
  uint64_t v47 = (char *)v102 - v46;
  double v52 = MEMORY[0x270FA5388](v48, v49, v50, v51);
  uint64_t v54 = (char *)v102 - v53;
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  uint64_t v109 = v3;
  v55((char *)v102 - v53, v3, v4, v52);
  char v56 = sub_2588F03D8();
  int64_t v114 = (void (*)(char *, char *, uint64_t))v55;
  ((void (*)(char *, char *, uint64_t))v55)(v47, v54, v4);
  uint64_t v57 = v5;
  BOOL v58 = (v56 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v107 = v10;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v10 + 8);
  v59(v47, v4);
  v114(v41, v54, v4);
  uint64_t v113 = v59;
  if (!v58)
  {
    v59(v41, v4);
    goto LABEL_9;
  }
  int64_t v115 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() < 64)
    {
LABEL_36:
      uint64_t v88 = sub_2588F03B8();
      uint64_t v59 = v113;
      v113(v41, v4);
      if (v88 < v115) {
        goto LABEL_44;
      }
      goto LABEL_9;
    }
LABEL_32:
    sub_2588C1FE0();
    char v85 = v108;
    sub_2588F0368();
    char v86 = sub_2588F01E8();
    char v87 = v85;
    uint64_t v59 = v113;
    v113(v87, v4);
    v59(v41, v4);
    if (v86) {
      goto LABEL_44;
    }
    goto LABEL_9;
  }
  char v72 = sub_2588F03D8();
  v102[1] = v57;
  uint64_t v73 = sub_2588F03C8();
  if ((v72 & 1) == 0)
  {
    if (v73 >= 64)
    {
      uint64_t v59 = v113;
      v113(v41, v4);
      goto LABEL_9;
    }
    goto LABEL_36;
  }
  if (v73 > 64) {
    goto LABEL_32;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v93 = v108;
  sub_2588F0498();
  char v94 = sub_2588F01E8();
  uint64_t v95 = v93;
  uint64_t v96 = v113;
  v113(v95, v4);
  uint64_t v97 = v105;
  (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v105, v41, v4);
  if (v94)
  {
    v96(v97, v4);
    v96(v54, v4);
    goto LABEL_45;
  }
  int64_t v98 = v97;
  int64_t v99 = v115;
  uint64_t v100 = sub_2588F03B8();
  v96(v98, v4);
  BOOL v101 = v100 < v99;
  uint64_t v59 = v96;
  if (v101)
  {
LABEL_44:
    v59(v54, v4);
    goto LABEL_45;
  }
LABEL_9:
  uint64_t v60 = sub_2588F03C8();
  uint64_t v61 = v110;
  uint64_t v62 = v114;
  v114(v110, v54, v4);
  if (v60 < 65)
  {
    uint64_t v70 = sub_2588F03C8();
    v59(v61, v4);
    uint64_t v63 = v111;
    if (v70 != 64)
    {
      v62(v111, v54, v4);
      goto LABEL_24;
    }
    char v71 = sub_2588F03D8();
    v62(v63, v54, v4);
    if (v71) {
      goto LABEL_24;
    }
  }
  else
  {
    v59(v61, v4);
    uint64_t v63 = v111;
    v62(v111, v54, v4);
  }
  int64_t v115 = 0x7FFFFFFFFFFFFFFFLL;
  char v64 = sub_2588F03D8();
  uint64_t v65 = sub_2588F03C8();
  if ((v64 & 1) == 0)
  {
    if (v65 > 63)
    {
      uint64_t v117 = 0x7FFFFFFFFFFFFFFFLL;
      uint64_t v89 = v108;
      (*(void (**)(char *, char *, uint64_t))(v107 + 32))(v108, v63, v4);
      sub_2588C1FE0();
      char v90 = v106;
      sub_2588F0368();
      char v91 = sub_2588F01E8();
      uint64_t v92 = v90;
      uint64_t v59 = v113;
      v113(v92, v4);
      v59(v89, v4);
      if (v91) {
        goto LABEL_44;
      }
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  if (v65 <= 64)
  {
LABEL_22:
    sub_2588F03B8();
LABEL_24:
    unint64_t v74 = v63;
    uint64_t v59 = v113;
    v113(v74, v4);
    goto LABEL_25;
  }
  sub_2588C1FE0();
  uint64_t v66 = v108;
  sub_2588F0368();
  char v67 = sub_2588F01E8();
  uint64_t v68 = v113;
  v113(v66, v4);
  uint64_t v69 = v63;
  uint64_t v59 = v68;
  v68(v69, v4);
  if (v67) {
    goto LABEL_44;
  }
LABEL_25:
  uint64_t v75 = sub_2588F03B8();
  uint64_t v76 = (uint64_t (*)(char *, uint64_t))v59;
  uint64_t v77 = v75;
  uint64_t result = v76(v54, v4);
  if (v77 < 0)
  {
LABEL_45:
    uint64_t v80 = *v112;
    int64_t v115 = 0;
    unint64_t v116 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    sub_2588F0488();
    int64_t v81 = v115;
    unint64_t v82 = v116;
    sub_2588BBC70();
    swift_allocError();
    *char v83 = 2;
    goto LABEL_46;
  }
  uint64_t v80 = *v112;
  uint64_t v79 = v112[1];
  if (__OFSUB__(v79, *v112))
  {
    __break(1u);
  }
  else
  {
    if (v79 - *v112 < v77)
    {
      int64_t v115 = 0;
      unint64_t v116 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v115 = 0xD000000000000024;
      unint64_t v116 = 0x8000000258901A00;
      uint64_t v117 = v77;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v81 = v115;
      unint64_t v82 = v116;
      sub_2588BBC70();
      swift_allocError();
      *char v83 = 0;
LABEL_46:
      v83[1] = v80;
      v83[2] = v81;
      v83[3] = v82;
      v83[4] = 0;
      swift_willThrow();
      return v80;
    }
    uint64_t v84 = v80 + v77;
    if (v80 + v77 >= v80 && v79 >= v84)
    {
      void *v112 = v84;
      return v80;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588E7EF4@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588E9F54((uint64_t (*)(void))SliceByCount.parse(_:context:), a1);
}

uint64_t SliceByObjectCount.objectCount.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SliceByObjectCount.objectCount.modify())()
{
  return nullsub_1;
}

uint64_t SliceByObjectCount.objectSize.getter(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t SliceByObjectCount.objectSize.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*SliceByObjectCount.objectSize.modify())()
{
  return nullsub_1;
}

uint64_t *SliceByObjectCount.parse(_:context:)(uint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3 * a4;
  uint64_t v5 = *result;
  if (a3 < 0 || v4 < 0 || (unsigned __int128)(a3 * (__int128)a4) >> 64 != (a3 * a4) >> 63)
  {
    sub_2588F0408();
    swift_bridgeObjectRelease();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    sub_2588F0228();
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    unint64_t v7 = 0xD00000000000002ALL;
    unint64_t v8 = 0x8000000258901DD0;
    sub_2588BBC70();
    swift_allocError();
    *uint64_t v9 = 2;
    goto LABEL_8;
  }
  uint64_t v6 = result[1];
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
  }
  else
  {
    if (v6 - v5 < v4)
    {
      sub_2588F0408();
      swift_bridgeObjectRelease();
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      unint64_t v7 = 0xD000000000000024;
      unint64_t v8 = 0x8000000258901A00;
      sub_2588BBC70();
      swift_allocError();
      *uint64_t v9 = 0;
LABEL_8:
      v9[1] = v5;
      void v9[2] = v7;
      v9[3] = v8;
      v9[4] = 0;
      swift_willThrow();
      return (uint64_t *)v5;
    }
    uint64_t v10 = v5 + v4;
    if (v5 + v4 >= v5 && v6 >= v10)
    {
      *uint64_t result = v10;
      return (uint64_t *)v5;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_2588E819C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t result = SliceByObjectCount.parse(_:context:)(a1, a2, *v3, v3[1]);
  if (!v4)
  {
    *a3 = result;
    a3[1] = v7;
  }
  return result;
}

uint64_t (*SliceMinCount.minimum.modify())()
{
  return nullsub_1;
}

uint64_t SliceMinCount.parse(_:context:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v113 = a1;
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) + 8);
  uint64_t v105 = *(void *)(*(void *)(v5 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness, v6, v7, v8);
  v103[2] = (char *)v103 - v9;
  uint64_t v10 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v11, v12, v13, v14);
  uint64_t v106 = (char *)v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16, v17, v18, v19);
  uint64_t v107 = (char *)v103 - v20;
  MEMORY[0x270FA5388](v21, v22, v23, v24);
  char v112 = (char *)v103 - v25;
  MEMORY[0x270FA5388](v26, v27, v28, v29);
  uint64_t v111 = (char *)v103 - v30;
  MEMORY[0x270FA5388](v31, v32, v33, v34);
  uint64_t v109 = (char *)v103 - v35;
  MEMORY[0x270FA5388](v36, v37, v38, v39);
  uint64_t v41 = (char *)v103 - v40;
  MEMORY[0x270FA5388](v42, v43, v44, v45);
  uint64_t v47 = (char *)v103 - v46;
  double v52 = MEMORY[0x270FA5388](v48, v49, v50, v51);
  uint64_t v54 = (char *)v103 - v53;
  uint64_t v55 = *(void (**)(char *, uint64_t, uint64_t, double))(v10 + 16);
  uint64_t v110 = v3;
  v55((char *)v103 - v53, v3, v4, v52);
  char v56 = sub_2588F03D8();
  int64_t v115 = (void (*)(char *, char *, uint64_t))v55;
  ((void (*)(char *, char *, uint64_t))v55)(v47, v54, v4);
  uint64_t v57 = v5;
  BOOL v58 = (v56 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v108 = v10;
  uint64_t v59 = *(void (**)(char *, uint64_t))(v10 + 8);
  v59(v47, v4);
  v115(v41, v54, v4);
  int64_t v114 = v59;
  if (!v58)
  {
    v59(v41, v4);
    goto LABEL_9;
  }
  int64_t v116 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    if (sub_2588F03C8() < 64)
    {
LABEL_36:
      uint64_t v89 = sub_2588F03B8();
      uint64_t v59 = v114;
      v114(v41, v4);
      if (v89 < v116) {
        goto LABEL_44;
      }
      goto LABEL_9;
    }
LABEL_32:
    sub_2588C1FE0();
    char v86 = v109;
    sub_2588F0368();
    char v87 = sub_2588F01E8();
    uint64_t v88 = v86;
    uint64_t v59 = v114;
    v114(v88, v4);
    v59(v41, v4);
    if (v87) {
      goto LABEL_44;
    }
    goto LABEL_9;
  }
  char v72 = sub_2588F03D8();
  v103[1] = v57;
  uint64_t v73 = sub_2588F03C8();
  if ((v72 & 1) == 0)
  {
    if (v73 >= 64)
    {
      uint64_t v59 = v114;
      v114(v41, v4);
      goto LABEL_9;
    }
    goto LABEL_36;
  }
  if (v73 > 64) {
    goto LABEL_32;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  char v94 = v109;
  sub_2588F0498();
  char v95 = sub_2588F01E8();
  uint64_t v96 = v94;
  uint64_t v97 = v114;
  v114(v96, v4);
  int64_t v98 = v106;
  (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v106, v41, v4);
  if (v95)
  {
    v97(v98, v4);
    v97(v54, v4);
    goto LABEL_45;
  }
  int64_t v99 = v98;
  int64_t v100 = v116;
  uint64_t v101 = sub_2588F03B8();
  v97(v99, v4);
  BOOL v102 = v101 < v100;
  uint64_t v59 = v97;
  if (v102)
  {
LABEL_44:
    v59(v54, v4);
    goto LABEL_45;
  }
LABEL_9:
  uint64_t v60 = sub_2588F03C8();
  uint64_t v61 = v111;
  uint64_t v62 = v115;
  v115(v111, v54, v4);
  if (v60 < 65)
  {
    uint64_t v70 = sub_2588F03C8();
    v59(v61, v4);
    uint64_t v63 = v112;
    if (v70 != 64)
    {
      v62(v112, v54, v4);
      goto LABEL_24;
    }
    char v71 = sub_2588F03D8();
    v62(v63, v54, v4);
    if (v71) {
      goto LABEL_24;
    }
  }
  else
  {
    v59(v61, v4);
    uint64_t v63 = v112;
    v62(v112, v54, v4);
  }
  int64_t v116 = 0x7FFFFFFFFFFFFFFFLL;
  char v64 = sub_2588F03D8();
  uint64_t v65 = sub_2588F03C8();
  if ((v64 & 1) == 0)
  {
    if (v65 > 63)
    {
      uint64_t v118 = 0x7FFFFFFFFFFFFFFFLL;
      char v90 = v109;
      (*(void (**)(char *, char *, uint64_t))(v108 + 32))(v109, v63, v4);
      sub_2588C1FE0();
      char v91 = v107;
      sub_2588F0368();
      char v92 = sub_2588F01E8();
      uint64_t v93 = v91;
      uint64_t v59 = v114;
      v114(v93, v4);
      v59(v90, v4);
      if (v92) {
        goto LABEL_44;
      }
      goto LABEL_25;
    }
    goto LABEL_22;
  }
  if (v65 <= 64)
  {
LABEL_22:
    sub_2588F03B8();
LABEL_24:
    unint64_t v74 = v63;
    uint64_t v59 = v114;
    v114(v74, v4);
    goto LABEL_25;
  }
  sub_2588C1FE0();
  uint64_t v66 = v109;
  sub_2588F0368();
  char v67 = sub_2588F01E8();
  uint64_t v68 = v114;
  v114(v66, v4);
  uint64_t v69 = v63;
  uint64_t v59 = v68;
  v68(v69, v4);
  if (v67) {
    goto LABEL_44;
  }
LABEL_25:
  uint64_t v75 = sub_2588F03B8();
  uint64_t v76 = (uint64_t (*)(char *, uint64_t))v59;
  uint64_t v77 = v75;
  uint64_t result = v76(v54, v4);
  if (v77 < 0)
  {
LABEL_45:
    uint64_t v80 = *v113;
    int64_t v116 = 0;
    unint64_t v117 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    sub_2588F0488();
    int64_t v82 = v116;
    unint64_t v83 = v117;
    sub_2588BBC70();
    swift_allocError();
    void *v84 = 2;
    goto LABEL_46;
  }
  uint64_t v80 = *v113;
  uint64_t v79 = v113[1];
  uint64_t v81 = v79 - *v113;
  if (__OFSUB__(v79, *v113))
  {
    __break(1u);
  }
  else
  {
    if (v81 < v77)
    {
      int64_t v116 = 0;
      unint64_t v117 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v116 = 0xD000000000000024;
      unint64_t v117 = 0x8000000258901A00;
      uint64_t v118 = v77;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v82 = v116;
      unint64_t v83 = v117;
      sub_2588BBC70();
      swift_allocError();
      void *v84 = 0;
LABEL_46:
      v84[1] = v80;
      v84[2] = v82;
      v84[3] = v83;
      v84[4] = 0;
      swift_willThrow();
      return v80;
    }
    uint64_t v85 = v81 + v80;
    if (v81 + v80 >= v80 && v79 >= v85)
    {
      void *v113 = v85;
      return v80;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588E8BAC@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588E9F54((uint64_t (*)(void))SliceMinCount.parse(_:context:), a1);
}

uint64_t (*SliceRangeCount.minimum.modify())()
{
  return nullsub_1;
}

uint64_t SliceRangeCount.maximum.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2 + *(int *)(a1 + 36));
}

uint64_t SliceRangeCount.maximum.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2 + *(int *)(a2 + 36), a1);
}

uint64_t (*SliceRangeCount.maximum.modify())()
{
  return nullsub_1;
}

uint64_t SliceRangeCount.parse(_:context:)(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v198 = a1;
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v4 = *(void *)(a3 + 24);
  uint64_t v189 = a3;
  uint64_t v6 = *(void *)(v4 + 8);
  uint64_t v185 = *(void *)(*(void *)(v6 + 24) + 16);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness, v7, v8, v9);
  uint64_t v183 = (char *)&v180 - v10;
  uint64_t v11 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v12, v13, v14, v15);
  uint64_t v181 = (char *)&v180 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17, v18, v19, v20);
  uint64_t v190 = (char *)&v180 - v21;
  MEMORY[0x270FA5388](v22, v23, v24, v25);
  uint64_t v187 = (char *)&v180 - v26;
  MEMORY[0x270FA5388](v27, v28, v29, v30);
  uint64_t v192 = (char *)&v180 - v31;
  MEMORY[0x270FA5388](v32, v33, v34, v35);
  uint64_t v188 = (char *)&v180 - v36;
  MEMORY[0x270FA5388](v37, v38, v39, v40);
  uint64_t v191 = (char *)&v180 - v41;
  MEMORY[0x270FA5388](v42, v43, v44, v45);
  uint64_t v182 = (char *)&v180 - v46;
  MEMORY[0x270FA5388](v47, v48, v49, v50);
  uint64_t v186 = (char *)&v180 - v51;
  MEMORY[0x270FA5388](v52, v53, v54, v55);
  uint64_t v195 = (char *)&v180 - v56;
  MEMORY[0x270FA5388](v57, v58, v59, v60);
  uint64_t v197 = (char *)&v180 - v61;
  MEMORY[0x270FA5388](v62, v63, v64, v65);
  uint64_t v193 = (char *)&v180 - v66;
  MEMORY[0x270FA5388](v67, v68, v69, v70);
  char v72 = (char *)&v180 - v71;
  MEMORY[0x270FA5388](v73, v74, v75, v76);
  char v78 = (char *)&v180 - v77;
  double v83 = MEMORY[0x270FA5388](v79, v80, v81, v82);
  uint64_t v85 = (char *)&v180 - v84;
  char v86 = *(void (**)(char *, uint64_t, uint64_t, double))(v11 + 16);
  uint64_t v196 = v3;
  v86((char *)&v180 - v84, v3, v5, v83);
  char v87 = sub_2588F03D8();
  uint64_t v200 = v11 + 16;
  int64_t v201 = (void (*)(char *, char *, uint64_t))v86;
  ((void (*)(char *, char *, uint64_t))v86)(v78, v85, v5);
  uint64_t v88 = v6;
  BOOL v89 = (v87 & 1) != 0 && sub_2588F03C8() > 64;
  uint64_t v194 = v11;
  char v90 = (char *)(v11 + 8);
  char v91 = *(void (**)(char *, uint64_t))(v11 + 8);
  v91(v78, v5);
  v201(v72, v85, v5);
  uint64_t v199 = v91;
  if (!v89)
  {
    v91(v72, v5);
    uint64_t v93 = v197;
    goto LABEL_9;
  }
  int64_t v202 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    uint64_t v92 = sub_2588F03C8();
    uint64_t v93 = v197;
    if (v92 < 64)
    {
LABEL_29:
      uint64_t v115 = sub_2588F03B8();
      char v91 = v199;
      v199(v72, v5);
      if (v115 < v202) {
        goto LABEL_71;
      }
      goto LABEL_9;
    }
LABEL_25:
    sub_2588C1FE0();
    char v112 = v193;
    sub_2588F0368();
    char v113 = sub_2588F01E8();
    int64_t v114 = v112;
    char v91 = v199;
    v199(v114, v5);
    v91(v72, v5);
    if (v113) {
      goto LABEL_71;
    }
    goto LABEL_9;
  }
  char v108 = sub_2588F03D8();
  uint64_t v180 = v88;
  uint64_t v109 = sub_2588F03C8();
  uint64_t v110 = v194;
  uint64_t v93 = v197;
  if ((v108 & 1) == 0)
  {
    if (v109 >= 64)
    {
      char v91 = v199;
      v199(v72, v5);
      goto LABEL_9;
    }
    goto LABEL_29;
  }
  if (v109 > 64) {
    goto LABEL_25;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  char v146 = v193;
  sub_2588F0498();
  char v147 = sub_2588F01E8();
  uint64_t v148 = v146;
  uint64_t v149 = v199;
  v199(v148, v5);
  uint64_t v150 = v182;
  (*(void (**)(char *, char *, uint64_t))(v110 + 32))(v182, v72, v5);
  if (v147)
  {
    v149(v150, v5);
    v149(v85, v5);
    goto LABEL_72;
  }
  int64_t v169 = v202;
  uint64_t v170 = sub_2588F03B8();
  v149(v150, v5);
  BOOL v171 = v170 < v169;
  char v91 = v149;
  uint64_t v93 = v197;
  if (v171) {
    goto LABEL_71;
  }
LABEL_9:
  uint64_t v94 = sub_2588F03C8();
  char v95 = v93;
  uint64_t v96 = v93;
  uint64_t v97 = v201;
  v201(v95, v85, v5);
  if (v94 >= 65)
  {
    v91(v96, v5);
    int64_t v98 = v195;
    v97(v195, v85, v5);
    int64_t v99 = v98;
    goto LABEL_11;
  }
  uint64_t v106 = sub_2588F03C8();
  v91(v96, v5);
  if (v106 != 64)
  {
    int64_t v99 = v195;
    v201(v195, v85, v5);
LABEL_24:
    v91(v99, v5);
    goto LABEL_33;
  }
  char v107 = sub_2588F03D8();
  int64_t v99 = v195;
  v201(v195, v85, v5);
  if (v107) {
    goto LABEL_24;
  }
LABEL_11:
  int64_t v100 = v90;
  int64_t v202 = 0x7FFFFFFFFFFFFFFFLL;
  char v101 = sub_2588F03D8();
  uint64_t v102 = sub_2588F03C8();
  if (v101)
  {
    if (v102 > 64)
    {
      sub_2588C1FE0();
      uint64_t v103 = v193;
      sub_2588F0368();
      char v104 = sub_2588F01E8();
      char v90 = v100;
      char v91 = v199;
      v199(v103, v5);
      uint64_t v105 = v99;
      goto LABEL_32;
    }
    goto LABEL_21;
  }
  if (v102 <= 63)
  {
LABEL_21:
    uint64_t v111 = sub_2588F03B8();
    char v90 = v100;
    char v91 = v199;
    v199(v99, v5);
    if (v202 >= v111) {
      goto LABEL_33;
    }
LABEL_71:
    v91(v85, v5);
    goto LABEL_72;
  }
  uint64_t v204 = 0x7FFFFFFFFFFFFFFFLL;
  int64_t v116 = v193;
  (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v193, v99, v5);
  sub_2588C1FE0();
  unint64_t v117 = v186;
  sub_2588F0368();
  char v104 = sub_2588F01E8();
  uint64_t v118 = v117;
  char v90 = v100;
  char v91 = v199;
  v199(v118, v5);
  uint64_t v105 = v116;
LABEL_32:
  v91(v105, v5);
  if (v104) {
    goto LABEL_71;
  }
LABEL_33:
  uint64_t v119 = sub_2588F03B8();
  v91(v85, v5);
  if (v119 < 0)
  {
LABEL_72:
    uint64_t v157 = *v198;
    int64_t v202 = 0;
    unint64_t v203 = 0xE000000000000000;
    sub_2588F0408();
LABEL_86:
    sub_2588F0228();
    sub_2588F0488();
    int64_t v159 = v202;
    unint64_t v160 = v203;
    sub_2588BBC70();
    swift_allocError();
    void *v161 = 2;
    goto LABEL_87;
  }
  uint64_t v120 = v191;
  v196 += *(int *)(v189 + 36);
  uint64_t v197 = (char *)v119;
  char v121 = v201;
  ((void (*)(char *))v201)(v191);
  char v122 = sub_2588F03D8();
  uint64_t v123 = v188;
  v121(v188, v120, v5);
  if ((v122 & 1) == 0)
  {
    uint64_t v133 = v123;
    uint64_t v126 = v199;
    v199(v133, v5);
    uint64_t v127 = v192;
    v121(v192, v120, v5);
    uint64_t v128 = v190;
    goto LABEL_40;
  }
  uint64_t v124 = sub_2588F03C8();
  uint64_t v125 = v123;
  uint64_t v126 = v199;
  v199(v125, v5);
  uint64_t v127 = v192;
  v121(v192, v120, v5);
  uint64_t v128 = v190;
  if (v124 < 65)
  {
LABEL_40:
    v126(v127, v5);
    goto LABEL_41;
  }
  int64_t v202 = 0x8000000000000000;
  if (sub_2588F03D8())
  {
    uint64_t v129 = v192;
    if (sub_2588F03C8() < 64)
    {
      uint64_t v130 = sub_2588F03B8();
      uint64_t v131 = v129;
      uint64_t v132 = v5;
LABEL_79:
      uint64_t v142 = v199;
      v199(v131, v132);
      if (v130 < v202) {
        goto LABEL_84;
      }
      goto LABEL_41;
    }
    sub_2588C1FE0();
    uint64_t v172 = v193;
    sub_2588F0368();
    char v166 = sub_2588F01E8();
    uint64_t v167 = v172;
    uint64_t v168 = v5;
    goto LABEL_74;
  }
  uint64_t v195 = v90;
  char v163 = sub_2588F03D8();
  uint64_t v164 = sub_2588F03C8();
  if ((v163 & 1) == 0)
  {
    if (v164 >= 64)
    {
      v199(v192, v5);
      goto LABEL_41;
    }
    uint64_t v173 = v192;
    uint64_t v130 = sub_2588F03B8();
    uint64_t v131 = v173;
    uint64_t v132 = v5;
    goto LABEL_79;
  }
  if (v164 > 64)
  {
    sub_2588C1FE0();
    char v165 = v193;
    sub_2588F0368();
    uint64_t v129 = v192;
    char v166 = sub_2588F01E8();
    uint64_t v167 = v165;
    uint64_t v168 = v5;
LABEL_74:
    uint64_t v142 = v199;
    v199(v167, v168);
    v142(v129, v5);
    if (v166) {
      goto LABEL_84;
    }
    goto LABEL_41;
  }
  swift_getAssociatedConformanceWitness();
  sub_2588F04B8();
  uint64_t v174 = v193;
  sub_2588F0498();
  char v175 = v192;
  char v176 = sub_2588F01E8();
  uint64_t v142 = v199;
  v199(v174, v5);
  int64_t v177 = v181;
  (*(void (**)(char *, char *, uint64_t))(v194 + 32))(v181, v175, v5);
  if (v176)
  {
    v142(v177, v5);
    goto LABEL_84;
  }
  int64_t v178 = v202;
  uint64_t v179 = sub_2588F03B8();
  v142(v177, v5);
  if (v179 < v178) {
    goto LABEL_84;
  }
LABEL_41:
  uint64_t v134 = sub_2588F03C8();
  uint64_t v135 = v187;
  uint64_t v136 = v201;
  v201(v187, v120, v5);
  if (v134 >= 65)
  {
    v199(v135, v5);
    v136(v128, v120, v5);
    uint64_t v137 = v194;
    goto LABEL_43;
  }
  uint64_t v144 = sub_2588F03C8();
  v199(v135, v5);
  uint64_t v137 = v194;
  if (v144 != 64)
  {
    v201(v128, v120, v5);
LABEL_52:
    uint64_t v142 = v199;
    v199(v128, v5);
    goto LABEL_57;
  }
  char v145 = sub_2588F03D8();
  v201(v128, v120, v5);
  if (v145) {
    goto LABEL_52;
  }
LABEL_43:
  int64_t v202 = 0x7FFFFFFFFFFFFFFFLL;
  char v138 = sub_2588F03D8();
  uint64_t v139 = sub_2588F03C8();
  if (v138)
  {
    if (v139 > 64)
    {
      sub_2588C1FE0();
      char v140 = v193;
      sub_2588F0368();
      char v141 = sub_2588F01E8();
      uint64_t v142 = v199;
      v199(v140, v5);
      uint64_t v143 = v128;
      goto LABEL_56;
    }
LABEL_50:
    sub_2588F03B8();
    uint64_t v142 = v199;
    v199(v128, v5);
    goto LABEL_57;
  }
  if (v139 <= 63) {
    goto LABEL_50;
  }
  uint64_t v204 = 0x7FFFFFFFFFFFFFFFLL;
  uint64_t v151 = v193;
  (*(void (**)(char *, char *, uint64_t))(v137 + 32))(v193, v128, v5);
  sub_2588C1FE0();
  uint64_t v152 = v186;
  sub_2588F0368();
  char v141 = sub_2588F01E8();
  uint64_t v142 = v199;
  v199(v152, v5);
  uint64_t v143 = v151;
LABEL_56:
  v142(v143, v5);
  if (v141)
  {
LABEL_84:
    v142(v120, v5);
    uint64_t v155 = v197;
    goto LABEL_85;
  }
LABEL_57:
  uint64_t v153 = sub_2588F03B8();
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v142)(v120, v5);
  uint64_t v155 = v197;
  if (v153 < (uint64_t)v197)
  {
LABEL_85:
    uint64_t v157 = *v198;
    int64_t v202 = 0;
    unint64_t v203 = 0xE000000000000000;
    sub_2588F0408();
    sub_2588F0228();
    uint64_t v204 = (uint64_t)v155;
    sub_2588F0468();
    sub_2588F0228();
    swift_bridgeObjectRelease();
    goto LABEL_86;
  }
  uint64_t v157 = *v198;
  uint64_t v156 = v198[1];
  uint64_t v158 = v156 - *v198;
  if (__OFSUB__(v156, *v198))
  {
    __break(1u);
  }
  else
  {
    if (v158 < (uint64_t)v197)
    {
      int64_t v202 = 0;
      unint64_t v203 = 0xE000000000000000;
      sub_2588F0408();
      swift_bridgeObjectRelease();
      int64_t v202 = 0xD000000000000024;
      unint64_t v203 = 0x8000000258901A00;
      uint64_t v204 = (uint64_t)v155;
      sub_2588F0468();
      sub_2588F0228();
      swift_bridgeObjectRelease();
      int64_t v159 = v202;
      unint64_t v160 = v203;
      sub_2588BBC70();
      swift_allocError();
      void *v161 = 0;
LABEL_87:
      v161[1] = v157;
      v161[2] = v159;
      v161[3] = v160;
      v161[4] = 0;
      swift_willThrow();
      return v157;
    }
    if (v153 < v158) {
      uint64_t v158 = v153;
    }
    uint64_t v162 = v158 + v157;
    if (v158 + v157 >= v157 && v156 >= v162)
    {
      void *v198 = v162;
      return v157;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_2588E9F28@<X0>(uint64_t *a1@<X8>)
{
  return sub_2588E9F54((uint64_t (*)(void))SliceRangeCount.parse(_:context:), a1);
}

uint64_t sub_2588E9F54@<X0>(uint64_t (*a1)(void)@<X4>, uint64_t *a2@<X8>)
{
  uint64_t result = a1();
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
  }
  return result;
}

ValueMetadata *type metadata accessor for SliceByObjectCount()
{
  return &type metadata for SliceByObjectCount;
}

uint64_t sub_2588E9F9C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588EA0F8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588EA310);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for SliceMinCount()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588EA350(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  uint64_t v6 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  uint64_t v8 = ((v6 + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)) + v6;
  char v9 = 8 * v8;
  if (v8 <= 3)
  {
    unsigned int v11 = ((v7 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v8);
      if (!v10) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 > 0xFF)
    {
      int v10 = *(unsigned __int16 *)((char *)a1 + v8);
      if (!*(unsigned __int16 *)((char *)a1 + v8)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v11 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v10 = *((unsigned __int8 *)a1 + v8);
  if (!*((unsigned char *)a1 + v8)) {
    goto LABEL_19;
  }
LABEL_11:
  int v12 = (v10 - 1) << v9;
  if (v8 > 3) {
    int v12 = 0;
  }
  if (v8)
  {
    if (v8 > 3) {
      LODWORD(v8) = 4;
    }
    switch((int)v8)
    {
      case 2:
        LODWORD(v8) = *a1;
        break;
      case 3:
        LODWORD(v8) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v8) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v8) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v8 | v12) + 1;
}

void sub_2588EA4BC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = ((*(void *)(v6 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588EA6E4);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

_UNKNOWN **sub_2588EA70C()
{
  return &protocol witness table for SliceByCount<A>;
}

_UNKNOWN **sub_2588EA718()
{
  return &protocol witness table for SliceByObjectCount;
}

_UNKNOWN **sub_2588EA724()
{
  return &protocol witness table for SliceMinCount<A>;
}

_UNKNOWN **sub_2588EA730()
{
  return &protocol witness table for SliceRangeCount<A>;
}

uint64_t sub_2588EA73C()
{
  return swift_getWitnessTable();
}

uint64_t (*LazyCollect.base.modify())()
{
  return nullsub_1;
}

uint64_t LazyCollect.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t LazyCollect.parseSequence(_:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7 = v6;
  uint64_t v29 = a1;
  uint64_t v30 = a2;
  uint64_t v12 = *(void *)(a5 + 16);
  uint64_t v11 = *(void *)(a5 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v15, v16, v17);
  uint64_t v19 = (char *)&v29 - v18;
  double v24 = MEMORY[0x270FA5388](v20, v21, v22, v23);
  uint64_t v26 = (char *)&v29 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v27 + 16))(v26, v7, v12, v24);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v19, a4, AssociatedTypeWitness);
  LazyCollect.Seq.init(base:data:context:)((uint64_t)v26, v29, v30, a3, (uint64_t)v19, v12, v11, a6);
  return swift_bridgeObjectRetain();
}

uint64_t LazyCollect.Seq.init(base:data:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588EACA0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for LazyCollect.Seq, a8);
}

uint64_t type metadata accessor for LazyCollect.Seq()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t (*LazyCollect.Seq.base.modify())()
{
  return nullsub_1;
}

uint64_t (*LazyCollect.Seq.data.modify())()
{
  return nullsub_1;
}

uint64_t (*LazyCollect.Seq.context.modify())()
{
  return nullsub_1;
}

uint64_t (*LazyCollect.Seq.Iterator.base.modify())()
{
  return nullsub_1;
}

uint64_t _s15ParsingInternal11LazyCollectV3SeqV4dataAA10ByteBufferVvg_0(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + *(int *)(a1 + 36));
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t _s15ParsingInternal11LazyCollectV3SeqV4dataAA10ByteBufferVvs_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  size_t v8 = (void *)(v4 + *(int *)(a4 + 36));
  uint64_t result = swift_bridgeObjectRelease();
  *size_t v8 = a1;
  v8[1] = a2;
  v8[2] = a3;
  return result;
}

uint64_t (*LazyCollect.Seq.Iterator.data.modify())()
{
  return nullsub_1;
}

uint64_t _s15ParsingInternal11LazyCollectV3SeqV7context7ContextQzvg_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);
  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t _s15ParsingInternal11LazyCollectV3SeqV7context7ContextQzvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);
  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*LazyCollect.Seq.Iterator.context.modify())()
{
  return nullsub_1;
}

uint64_t LazyCollect.Seq.Iterator.init(base:data:context:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  return sub_2588EACA0(a1, a2, a3, a4, a5, a6, a7, (uint64_t (*)(void, uint64_t, uint64_t))type metadata accessor for LazyCollect.Seq.Iterator, a8);
}

uint64_t sub_2588EACA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t (*a8)(void, uint64_t, uint64_t)@<X7>, uint64_t a9@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(a9, a1, a6);
  uint64_t v17 = a8(0, a6, a7);
  uint64_t v18 = (void *)(a9 + *(int *)(v17 + 36));
  *uint64_t v18 = a2;
  v18[1] = a3;
  v18[2] = a4;
  uint64_t v19 = a9 + *(int *)(v17 + 40);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 32);
  return v21(v19, a5, AssociatedTypeWitness);
}

uint64_t type metadata accessor for LazyCollect.Seq.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t LazyCollect.Seq.Iterator.next()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = sub_2588F0358();
  double v12 = MEMORY[0x270FA5388](v8, v9, v10, v11);
  uint64_t v14 = (char *)&v18 - v13;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v5 + 24))(v2 + *(int *)(a1 + 36), v2 + *(int *)(a1 + 40), v6, v5, v12);
  uint64_t v15 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v16 = *(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56);
  v16(v14, 0, 1, AssociatedTypeWitness);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a2, v14, AssociatedTypeWitness);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v16)(a2, 0, 1, AssociatedTypeWitness);
}

uint64_t LazyCollect.Seq.makeIterator()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v29 = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](AssociatedTypeWitness, v9, v10, v11);
  uint64_t v13 = (char *)&v28 - v12;
  double v18 = MEMORY[0x270FA5388](v14, v15, v16, v17);
  uint64_t v20 = (char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v21 + 16))(v20, v3, v6, v18);
  uint64_t v22 = *(int *)(a1 + 40);
  uint64_t v23 = (uint64_t *)(v3 + *(int *)(a1 + 36));
  uint64_t v24 = *v23;
  uint64_t v25 = v23[1];
  uint64_t v26 = v23[2];
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v13, v3 + v22, AssociatedTypeWitness);
  LazyCollect.Seq.Iterator.init(base:data:context:)((uint64_t)v20, v24, v25, v26, (uint64_t)v13, v6, v5, v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_2588EB1C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  LazyCollect.Seq.makeIterator()(a1, a2);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8);
  return v4(v2, a1);
}

uint64_t sub_2588EB224()
{
  return 0;
}

uint64_t sub_2588EB22C()
{
  return 2;
}

uint64_t sub_2588EB234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_2588EC7F4(v2, a1, a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a1 - 8) + 8))(v2, a1);
  return v4;
}

uint64_t sub_2588EB2A8()
{
  return sub_2588F0268();
}

uint64_t LazyCollect<>.parseSequence(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v11 = *(void *)(a4 + 16);
  double v12 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v15 + 16))(v14, v5, v11, v12);
  LazyCollect.Seq.init(base:data:context:)((uint64_t)v14, a1, a2, a3, v16, v11, *(void *)(a4 + 24), a5);
  return swift_bridgeObjectRetain();
}

uint64_t LazyCollect<>.parseSequence(in:of:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = *(void *)(a6 + 16);
  double v14 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v16 = (char *)&v20 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t, double))(v17 + 16))(v16, v7, v13, v14);
  LazyCollect.Seq.init(base:data:context:)((uint64_t)v16, a1, a2, a5, v18, v13, *(void *)(a6 + 24), a7);
  return swift_bridgeObjectRetain();
}

uint64_t ContextfulParser.lazyCollect()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, v5, a2, a3);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a1);
}

uint64_t sub_2588EB5A8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EB5C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EB5E0(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588EB73C(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588EB954);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        uint64_t v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for LazyCollect()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588EB9B8()
{
  uint64_t AssociatedTypeWitness = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return AssociatedTypeWitness;
}

uint64_t *sub_2588EBAB0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(void *)(v6 + 64);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(_DWORD *)(v9 + 80);
  unsigned int v11 = v10 | *(_DWORD *)(v6 + 80) & 0xF8;
  if (((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v9 + 80)) & 0x100000) != 0
    || (((v10 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v10)
      + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64) <= 0x18
      ? (BOOL v12 = v11 > 7)
      : (BOOL v12 = 1),
        v12))
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v11 | 7) + 16) & ~(unint64_t)(v11 | 7)));
    swift_retain();
  }
  else
  {
    uint64_t v13 = AssociatedTypeWitness;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    unsigned int v14 = (void *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    int v15 = (void *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *unsigned int v14 = *v15;
    v14[1] = v15[1];
    v14[2] = v15[2];
    uint64_t v16 = ((unint64_t)v14 + v10 + 24) & ~v10;
    uint64_t v17 = ((unint64_t)v15 + v10 + 24) & ~v10;
    uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    swift_bridgeObjectRetain();
    v18(v16, v17, v13);
  }
  return a1;
}

uint64_t sub_2588EBC8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8) + 8;
  (*(void (**)(uint64_t, void))v3)(a1, *(void *)(a2 + 16));
  unint64_t v4 = (a1 + *(void *)(v3 + 56) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t, uint64_t))(v6 + 8);
  uint64_t v8 = AssociatedTypeWitness;
  unint64_t v9 = (v4 + *(unsigned __int8 *)(v6 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  return v7(v9, v8);
}

uint64_t sub_2588EBD6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 16;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 48) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  unsigned int v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = ((unint64_t)v7 + v12 + 24) & ~v12;
  uint64_t v14 = ((unint64_t)v8 + v12 + 24) & ~v12;
  swift_bridgeObjectRetain();
  v11(v13, v14, AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2588EBE88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 24;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 40) + 7;
  uint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 24))(((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2588EBF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 32;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 32) + 7;
  unint64_t v7 = (v6 + a1) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v6 + a2) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v8 + 16);
  *(_OWORD *)unint64_t v7 = *(_OWORD *)v8;
  *(void *)(v7 + 16) = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v11 + 32))((*(unsigned __int8 *)(v11 + 80) + 24 + v7) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), (*(unsigned __int8 *)(v11 + 80) + 24 + v8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2588EC090(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8) + 40;
  (*(void (**)(uint64_t, uint64_t, void))v5)(a1, a2, *(void *)(a3 + 16));
  uint64_t v6 = *(void *)(v5 + 24) + 7;
  unint64_t v7 = (void *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v8 = (void *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v7 = *v8;
  v7[1] = v8[1];
  v7[2] = v8[2];
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v10 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 40))(((unint64_t)v7 + *(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), ((unint64_t)v8 + *(unsigned __int8 *)(v10 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), AssociatedTypeWitness);
  return a1;
}

uint64_t sub_2588EC198(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned int *)(v6 + 84);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v10 = *(void *)(v6 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v7 <= *(_DWORD *)(v9 + 84)) {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  else {
    unsigned int v12 = v7;
  }
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v13 = 0x7FFFFFFF;
  }
  else {
    unsigned int v13 = v12;
  }
  if (!a2) {
    return 0;
  }
  if (a2 <= v13) {
    goto LABEL_28;
  }
  unint64_t v14 = ((v11 + ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v11)
      + *(void *)(*(void *)(AssociatedTypeWitness - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v18 = ((a2 - v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v18))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_28;
      }
      goto LABEL_18;
    }
    if (v18 < 2)
    {
LABEL_28:
      if (v7 == v13)
      {
        uint64_t v22 = *(uint64_t (**)(unsigned __int16 *, uint64_t, uint64_t))(v6 + 48);
        return v22(a1, v7, v5);
      }
      else
      {
        unint64_t v23 = ((unint64_t)a1 + v10 + 7) & 0xFFFFFFFFFFFFFFF8;
        if ((v12 & 0x80000000) != 0)
        {
          uint64_t v25 = *(uint64_t (**)(unint64_t))(v9 + 48);
          return v25((v23 + v11 + 24) & ~v11);
        }
        else
        {
          unint64_t v24 = *(void *)(v23 + 16);
          if (v24 >= 0xFFFFFFFF) {
            LODWORD(v24) = -1;
          }
          return (v24 + 1);
        }
      }
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_28;
  }
LABEL_18:
  int v19 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v19 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v20 = v14;
    }
    else {
      int v20 = 4;
    }
    switch(v20)
    {
      case 2:
        int v21 = *a1;
        break;
      case 3:
        int v21 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v21 = *(_DWORD *)a1;
        break;
      default:
        int v21 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v21 = 0;
  }
  return v13 + (v21 | v19) + 1;
}

void sub_2588EC46C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7 = *(void *)(a4 + 16);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v24 = v8;
  uint64_t v9 = *(unsigned int *)(v8 + 84);
  uint64_t v10 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v11 = *(void *)(v8 + 64);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v9 <= *(_DWORD *)(v10 + 84)) {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  else {
    unsigned int v13 = v9;
  }
  if (v13 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = v13;
  }
  size_t v15 = ((v12 + ((v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 24) & ~v12) + *(void *)(v10 + 64);
  if (a3 <= v14)
  {
    int v16 = 0;
  }
  else if (v15 <= 3)
  {
    unsigned int v19 = ((a3 - v14 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v19))
    {
      int v16 = 4;
    }
    else if (v19 >= 0x100)
    {
      int v16 = 2;
    }
    else
    {
      int v16 = v19 > 1;
    }
  }
  else
  {
    int v16 = 1;
  }
  if (v14 < a2)
  {
    unsigned int v17 = ~v14 + a2;
    if (v15 < 4)
    {
      int v18 = (v17 >> (8 * v15)) + 1;
      if (v15)
      {
        int v20 = v17 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v20;
          a1[2] = BYTE2(v20);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v20;
        }
        else
        {
          *a1 = v20;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v17;
      int v18 = 1;
    }
    switch(v16)
    {
      case 1:
        a1[v15] = v18;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v18;
        return;
      case 3:
        goto LABEL_48;
      case 4:
        *(_DWORD *)&a1[v15] = v18;
        return;
      default:
        return;
    }
  }
  switch(v16)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_27;
    case 3:
LABEL_48:
      __break(1u);
      JUMPOUT(0x2588EC7CCLL);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_26;
    default:
LABEL_26:
      if (a2)
      {
LABEL_27:
        if (v9 == v14)
        {
          int v21 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v24 + 56);
          v21(a1, a2, v9, v7);
        }
        else
        {
          uint64_t v22 = (void *)((unint64_t)&a1[v11 + 7] & 0xFFFFFFFFFFFFFFF8);
          if ((v13 & 0x80000000) != 0)
          {
            unint64_t v23 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
            v23(((unint64_t)v22 + v12 + 24) & ~v12, a2);
          }
          else if ((a2 & 0x80000000) != 0)
          {
            v22[1] = 0;
            void v22[2] = 0;
            *uint64_t v22 = a2 ^ 0x80000000;
          }
          else
          {
            void v22[2] = (a2 - 1);
          }
        }
      }
      return;
  }
}

uint64_t Iterate<A>(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *(void *)(a3 - 8);
  uint64_t v9 = (uint64_t (*)(void))MEMORY[0x270FA5388](a1, a2, a3, a4);
  uint64_t v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = v9();
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a5, v11, a3);
  }
  return result;
}

uint64_t GeneralIterator.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t GeneralIterator.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t GeneralIterator.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*GeneralIterator.base.modify())()
{
  return nullsub_1;
}

uint64_t GeneralIterator.next(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t result = ContextfulParser<>.parse(_:)(a1, *(void *)(a2 + 16), *(void *)(a2 + 24));
  if (!v3)
  {
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 56))(a3, 0, 1, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588ECA34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return GeneralIterator.next(in:)(a1, a2, a3);
}

uint64_t sub_2588ECA4C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588ECBA8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588ECDC0);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for GeneralIterator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588ECE00()
{
  type metadata accessor for GeneralIterator();
  return swift_getWitnessTable();
}

uint64_t ParserSliceIterator.zipped<A>(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9 = *(void *)(a3 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](a1, a2, a3, a4);
  unsigned int v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10, v13, v14, v15);
  unsigned int v17 = (char *)&v21 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v17, v19, a2);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v12, a1, a3);
  return SliceIteratorZip2.init(first:second:)((uint64_t)v17, (uint64_t)v12, a2, a3, a5);
}

uint64_t SliceIteratorZip2.init(first:second:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a5, a1);
  uint64_t v8 = type metadata accessor for SliceIteratorZip2();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(a5 + *(int *)(v8 + 52), a2, a4);
}

uint64_t type metadata accessor for SliceIteratorZip2()
{
  return swift_getGenericMetadata();
}

uint64_t SliceIteratorZip2.first.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t SliceIteratorZip2.first.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*SliceIteratorZip2.first.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorZip2.second.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 52));
}

uint64_t SliceIteratorZip2.second.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 40))(v2 + *(int *)(a2 + 52), a1);
}

uint64_t (*SliceIteratorZip2.second.modify())()
{
  return nullsub_1;
}

uint64_t SliceIteratorZip2.next(in:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v67 = a5;
  uint64_t v9 = a4[3];
  uint64_t v62 = a4[5];
  uint64_t v64 = v9;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v11 = sub_2588F0358();
  uint64_t v56 = *(void *)(v11 - 8);
  uint64_t v57 = v11;
  MEMORY[0x270FA5388](v11, v12, v13, v14);
  uint64_t v61 = (char *)&v55 - v15;
  uint64_t v66 = AssociatedTypeWitness;
  uint64_t v58 = *(void *)(AssociatedTypeWitness - 8);
  MEMORY[0x270FA5388](v16, v17, v18, v19);
  uint64_t v59 = (char *)&v55 - v20;
  uint64_t v21 = a4[4];
  uint64_t v22 = a4[2];
  uint64_t v23 = swift_getAssociatedTypeWitness();
  uint64_t v60 = sub_2588F0358();
  uint64_t v69 = *(void (***)(char *, uint64_t))(v60 - 8);
  MEMORY[0x270FA5388](v60, v24, v25, v26);
  uint64_t v28 = (char *)&v55 - v27;
  uint64_t v68 = *(void *)(v23 - 8);
  double v33 = MEMORY[0x270FA5388](v29, v30, v31, v32);
  uint64_t v35 = (char *)&v55 - v34;
  uint64_t v36 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, double))(v21 + 16);
  uint64_t v63 = a1;
  uint64_t v65 = a2;
  uint64_t v37 = a2;
  uint64_t v38 = a3;
  uint64_t v39 = v70;
  uint64_t result = v36(a1, v37, a3, v22, v21, v33);
  if (!v39)
  {
    uint64_t v42 = v68;
    uint64_t v41 = v69;
    uint64_t v70 = v38;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v68 + 48))(v28, 1, v23) == 1)
    {
      v41[1](v28, v60);
      uint64_t v43 = v67;
LABEL_4:
      TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v43, 1, 1, TupleTypeMetadata2);
    }
    uint64_t v69 = *(void (***)(char *, uint64_t))(v42 + 32);
    ((void (*)(char *, char *, uint64_t))v69)(v35, v28, v23);
    uint64_t v45 = v61;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v62 + 16))(v63, v65, v70, v64);
    uint64_t v70 = v42 + 32;
    uint64_t v46 = v58;
    uint64_t v47 = v66;
    int v48 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v58 + 48))(v45, 1, v66);
    uint64_t v43 = v67;
    uint64_t v49 = v35;
    if (v48 == 1)
    {
      (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v23);
      (*(void (**)(char *, uint64_t))(v56 + 8))(v45, v57);
      goto LABEL_4;
    }
    uint64_t v50 = *(void (**)(char *, char *, uint64_t))(v46 + 32);
    v50(v59, v45, v47);
    uint64_t v51 = v23;
    uint64_t v52 = swift_getTupleTypeMetadata2();
    uint64_t v53 = v47;
    uint64_t v54 = (char *)(v43 + *(int *)(v52 + 48));
    ((void (*)(uint64_t, char *, uint64_t))v69)(v43, v49, v51);
    v50(v54, v59, v53);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v43, 0, 1, v52);
  }
  return result;
}

uint64_t sub_2588ED6E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X3>, uint64_t a5@<X8>)
{
  return SliceIteratorZip2.next(in:)(a1, a2, a3, a4, a5);
}

uint64_t sub_2588ED6F8(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v5 = *(void *)(a3 + 24);
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  uint64_t v7 = *(void *)(v5 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v6) {
    unsigned int v10 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v10 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v11 = *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64) + v9;
  unsigned int v12 = a2 - v10;
  if (a2 <= v10) {
    goto LABEL_24;
  }
  uint64_t v13 = (v11 & ~v9) + *(void *)(*(void *)(v5 - 8) + 64);
  char v14 = 8 * v13;
  if (v13 <= 3)
  {
    unsigned int v16 = ((v12 + ~(-1 << v14)) >> v14) + 1;
    if (HIWORD(v16))
    {
      int v15 = *(_DWORD *)((char *)a1 + v13);
      if (!v15) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 > 0xFF)
    {
      int v15 = *(unsigned __int16 *)((char *)a1 + v13);
      if (!*(unsigned __int16 *)((char *)a1 + v13)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v16 < 2)
    {
LABEL_24:
      if (v10)
      {
        if (v6 >= v8) {
          return (*(uint64_t (**)(void))(v4 + 48))();
        }
        else {
          return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 48))(((unint64_t)a1 + v11) & ~v9, v8, v5);
        }
      }
      return 0;
    }
  }
  int v15 = *((unsigned __int8 *)a1 + v13);
  if (!*((unsigned char *)a1 + v13)) {
    goto LABEL_24;
  }
LABEL_14:
  int v17 = (v15 - 1) << v14;
  if (v13 > 3) {
    int v17 = 0;
  }
  if (v13)
  {
    if (v13 <= 3) {
      int v18 = v13;
    }
    else {
      int v18 = 4;
    }
    switch(v18)
    {
      case 2:
        int v19 = *a1;
        break;
      case 3:
        int v19 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v19 = *(_DWORD *)a1;
        break;
      default:
        int v19 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v19 = 0;
  }
  return v10 + (v19 | v17) + 1;
}

void sub_2588ED8F0(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v12 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v9 + 84);
  }
  uint64_t v13 = *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64) + v11;
  size_t v14 = (v13 & ~v11) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v15 = a3 >= v12;
  unsigned int v16 = a3 - v12;
  if (v16 != 0 && v15)
  {
    if (v14 <= 3)
    {
      unsigned int v20 = ((v16 + ~(-1 << (8 * v14))) >> (8 * v14)) + 1;
      if (HIWORD(v20))
      {
        int v17 = 4;
      }
      else if (v20 >= 0x100)
      {
        int v17 = 2;
      }
      else
      {
        int v17 = v20 > 1;
      }
    }
    else
    {
      int v17 = 1;
    }
  }
  else
  {
    int v17 = 0;
  }
  if (v12 < a2)
  {
    unsigned int v18 = ~v12 + a2;
    if (v14 < 4)
    {
      int v19 = (v18 >> (8 * v14)) + 1;
      if (v14)
      {
        int v21 = v18 & ~(-1 << (8 * v14));
        bzero(a1, v14);
        if (v14 == 3)
        {
          *(_WORD *)a1 = v21;
          a1[2] = BYTE2(v21);
        }
        else if (v14 == 2)
        {
          *(_WORD *)a1 = v21;
        }
        else
        {
          *a1 = v21;
        }
      }
    }
    else
    {
      bzero(a1, v14);
      *(_DWORD *)a1 = v18;
      int v19 = 1;
    }
    switch(v17)
    {
      case 1:
        a1[v14] = v19;
        return;
      case 2:
        *(_WORD *)&a1[v14] = v19;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v14] = v19;
        return;
      default:
        return;
    }
  }
  switch(v17)
  {
    case 1:
      a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v14] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x2588EDBBCLL);
    case 4:
      *(_DWORD *)&a1[v14] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if (v7 >= v10)
        {
          uint64_t v24 = *(void (**)(void))(v6 + 56);
          v24();
        }
        else
        {
          unint64_t v22 = (unint64_t)&a1[v13] & ~v11;
          uint64_t v23 = *(void (**)(unint64_t))(v9 + 56);
          v23(v22);
        }
      }
      return;
  }
}

uint64_t sub_2588EDBE4()
{
  return swift_getWitnessTable();
}

uint64_t static ParserBuilder.buildEither<A, B, C, D>(first:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
  type metadata accessor for EitherParser();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static ParserBuilder.buildEither<A, B, C, D>(second:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1);
  type metadata accessor for EitherParser();
  return swift_storeEnumTagMultiPayload();
}

uint64_t _s15ParsingInternal13ParserBuilderV17buildPartialBlock5firstQrq0__t6OutputQy0_Rsz7ContextQy0_Rs_AA010ContextfulC0R0_r1_lFZ_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 16))(a3, a1, a2);
}

uint64_t ParserDSL<A, B, C>(_:)(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t static ParserBuilder.buildPartialBlock<A, B, C, D, E>(accumulated:next:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X3>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  return ContextfulParser.concatenating<A, B>(_:)(a1, a3, a2, a4, a5);
}

uint64_t static ParserBuilder.buildPartialBlock<A, B, C, D>(accumulated:next:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X8>)
{
  return ContextfulParser<>.concatenating<A, B>(_:)(a1, a3, a2, a4, a5);
}

uint64_t static ParserBuilder.buildPartialBlock<A, B, C, D>(accumulated:next:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X4>, uint64_t a3@<X5>, uint64_t a4@<X6>, uint64_t a5@<X8>)
{
  return ContextfulParser.concatenating<A>(_:)(a1, a2, a3, a4, a5);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E>(_:)@<X0>(uint64_t a1@<X5>, uint64_t a2@<X8>)
{
  return sub_258742DB4(a1, a2);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F>(_:)@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  return sub_258742DB4(a1, a2);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G>(_:)@<X0>(uint64_t a1@<X7>, uint64_t a2@<X8>)
{
  return sub_258742DB4(a1, a2);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  return sub_258742DB4(a2, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3)
{
  return sub_258742DB4(a3, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_258742DB4(a4, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return sub_258742DB4(a5, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return sub_258742DB4(a6, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return sub_258742DB4(a7, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_258742DB4(a8, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  return sub_258742DB4(a9, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  return sub_258742DB4(a10, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  return sub_258742DB4(a11, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  return sub_258742DB4(a12, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  return sub_258742DB4(a13, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  return sub_258742DB4(a14, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  return sub_258742DB4(a15, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  return sub_258742DB4(a16, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17)
{
  return sub_258742DB4(a17, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  return sub_258742DB4(a18, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  return sub_258742DB4(a19, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  return sub_258742DB4(a20, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  return sub_258742DB4(a21, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  return sub_258742DB4(a22, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23)
{
  return sub_258742DB4(a23, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24)
{
  return sub_258742DB4(a24, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB, EB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  return sub_258742DB4(a25, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB, EB, FB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  return sub_258742DB4(a26, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB, EB, FB, GB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  return sub_258742DB4(a27, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB, EB, FB, GB, HB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28)
{
  return sub_258742DB4(a28, a1);
}

uint64_t static ParserBuilder.buildFinalResult<A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z, AB, BB, CB, DB, EB, FB, GB, HB, IB>(_:)@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  return sub_258897890(a29, a1);
}

ValueMetadata *type metadata accessor for ParserBuilder()
{
  return &type metadata for ParserBuilder;
}

uint64_t sub_2588EE7A4(uint64_t a1)
{
  return *(void *)(a1 + 24);
}

uint64_t sub_2588EE7AC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EE7FC(uint64_t a1)
{
  return get_witness_table_6OutputQy1_Rsz7ContextQy0_Rs_15ParsingInternal16ContextfulParserR0_AeFR1_ACQy1_ADRSytAARt0_r2_lAE09RightOnlyF0Vyq0_q1_GAeFHPyHCTm(a1, (void (*)(uint64_t, _OWORD *))type metadata accessor for RightOnlyParser);
}

uint64_t sub_2588EE828(uint64_t a1)
{
  return get_witness_table_6OutputQy1_Rsz7ContextQy0_Rs_15ParsingInternal16ContextfulParserR0_AeFR1_ACQy1_ADRSytAARt0_r2_lAE09RightOnlyF0Vyq0_q1_GAeFHPyHCTm(a1, (void (*)(uint64_t, _OWORD *))type metadata accessor for LeftOnlyParser);
}

uint64_t get_witness_table_6OutputQy1_Rsz7ContextQy0_Rs_15ParsingInternal16ContextfulParserR0_AeFR1_ACQy1_ADRSytAARt0_r2_lAE09RightOnlyF0Vyq0_q1_GAeFHPyHCTm(uint64_t a1, void (*a2)(uint64_t, _OWORD *))
{
  long long v2 = *(_OWORD *)(a1 + 32);
  v4[0] = *(_OWORD *)(a1 + 16);
  v4[1] = v2;
  a2(255, v4);
  return swift_getWitnessTable();
}

uint64_t sub_2588EE8A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EE900()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EE95C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EE9B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEA1C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEA80()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEAE8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEB4C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEBBC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEC28()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEC9C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EED08()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EED84()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEDF8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEE78()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEEEC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEF74()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EEFF0()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF080()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF104()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF19C()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF228()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF2C4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF354()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF3F8()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF498()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF548()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF5EC()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF6A4()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF750()
{
  return swift_getWitnessTable();
}

uint64_t sub_2588EF80C()
{
  return swift_getWitnessTable();
}

uint64_t ContextfulParser.discardingValue()@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v5 = v4;
  uint64_t v8 = *(void *)(a1 - 8);
  MEMORY[0x270FA5388](a1, v5, a2, a3);
  unsigned int v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v8 + 32))(a4, v10, a1);
}

uint64_t DiscardingValue.init(base:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a2 - 8) + 32))(a3, a1, a2);
}

uint64_t DiscardingValue.base.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t DiscardingValue.base.setter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*DiscardingValue.base.modify())()
{
  return nullsub_1;
}

uint64_t DiscardingValue.parse(_:context:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v9 = *(void *)(AssociatedTypeWitness - 8);
  double v13 = MEMORY[0x270FA5388](AssociatedTypeWitness, v10, v11, v12);
  BOOL v15 = (char *)&v17 - v14;
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, double))(v6 + 24))(a1, a2, v7, v6, v13);
  if (!v3) {
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v15, AssociatedTypeWitness);
  }
  return result;
}

uint64_t sub_2588EFB84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return DiscardingValue.parse(_:context:)(a1, a2, a3);
}

uint64_t sub_2588EFB9C(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  unsigned int v7 = a2 - v5;
  if (a2 <= v5) {
    goto LABEL_19;
  }
  char v8 = 8 * v6;
  if (v6 <= 3)
  {
    unsigned int v10 = ((v7 + ~(-1 << v8)) >> v8) + 1;
    if (HIWORD(v10))
    {
      int v9 = *(_DWORD *)((char *)a1 + v6);
      if (!v9) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 > 0xFF)
    {
      int v9 = *(unsigned __int16 *)((char *)a1 + v6);
      if (!*(unsigned __int16 *)((char *)a1 + v6)) {
        goto LABEL_19;
      }
      goto LABEL_11;
    }
    if (v10 < 2)
    {
LABEL_19:
      if (v5) {
        return (*(uint64_t (**)(void))(v4 + 48))();
      }
      return 0;
    }
  }
  int v9 = *((unsigned __int8 *)a1 + v6);
  if (!*((unsigned char *)a1 + v6)) {
    goto LABEL_19;
  }
LABEL_11:
  int v11 = (v9 - 1) << v8;
  if (v6 > 3) {
    int v11 = 0;
  }
  if (v6)
  {
    if (v6 > 3) {
      LODWORD(v6) = 4;
    }
    switch((int)v6)
    {
      case 2:
        LODWORD(v6) = *a1;
        break;
      case 3:
        LODWORD(v6) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v6) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v6) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v5 + (v6 | v11) + 1;
}

void sub_2588EFCF8(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  size_t v8 = *(void *)(v6 + 64);
  BOOL v9 = a3 >= v7;
  unsigned int v10 = a3 - v7;
  if (v10 != 0 && v9)
  {
    if (v8 <= 3)
    {
      unsigned int v14 = ((v10 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v14))
      {
        int v11 = 4;
      }
      else if (v14 >= 0x100)
      {
        int v11 = 2;
      }
      else
      {
        int v11 = v14 > 1;
      }
    }
    else
    {
      int v11 = 1;
    }
  }
  else
  {
    int v11 = 0;
  }
  if (v7 < a2)
  {
    unsigned int v12 = ~v7 + a2;
    if (v8 < 4)
    {
      int v13 = (v12 >> (8 * v8)) + 1;
      if (v8)
      {
        int v15 = v12 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if (v8 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v8 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v8] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v8] = v13;
        return;
      case 3:
        goto LABEL_34;
      case 4:
        *(_DWORD *)&a1[v8] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 2:
      *(_WORD *)&a1[v8] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_21;
    case 3:
LABEL_34:
      __break(1u);
      JUMPOUT(0x2588EFF10);
    case 4:
      *(_DWORD *)&a1[v8] = 0;
      goto LABEL_20;
    default:
LABEL_20:
      if (a2)
      {
LABEL_21:
        unsigned int v16 = *(void (**)(void))(v6 + 56);
        v16();
      }
      return;
  }
}

uint64_t type metadata accessor for DiscardingValue()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588EFF50()
{
  type metadata accessor for DiscardingValue();
  return swift_getWitnessTable();
}

uint64_t Placeholder.init()()
{
  return 0;
}

uint64_t Placeholder.parse(_:context:)(uint64_t *a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = *a1;
  if (a4) {
    uint64_t v5 = a3;
  }
  else {
    uint64_t v5 = 0x617373656D206F4ELL;
  }
  if (a4) {
    unint64_t v6 = a4;
  }
  else {
    unint64_t v6 = 0xEA00000000006567;
  }
  sub_2588BBC70();
  swift_allocError();
  *unsigned int v7 = 3;
  v7[1] = v4;
  v7[2] = v5;
  void v7[3] = v6;
  v7[4] = 0;
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t sub_2588F0044(uint64_t *a1, uint64_t a2)
{
  return Placeholder.parse(_:context:)(a1, a2, *(void *)v2, *(void *)(v2 + 8));
}

void *sub_2588F0060(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_2588F0090()
{
  return swift_bridgeObjectRelease();
}

void *sub_2588F0098(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *sub_2588F00DC(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_2588F0110(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t sub_2588F016C(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

uint64_t type metadata accessor for Placeholder()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_2588F01D8()
{
  return MEMORY[0x270F9D480]();
}

uint64_t sub_2588F01E8()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_2588F01F8()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_2588F0208()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_2588F0218()
{
  return MEMORY[0x270F9D6B0]();
}

uint64_t sub_2588F0228()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_2588F0238()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_2588F0248()
{
  return MEMORY[0x270F9D8A8]();
}

uint64_t sub_2588F0258()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_2588F0268()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_2588F0278()
{
  return MEMORY[0x270F9D9A8]();
}

uint64_t sub_2588F0288()
{
  return MEMORY[0x270F9DA78]();
}

uint64_t sub_2588F0298()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_2588F02A8()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_2588F02B8()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_2588F02C8()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_2588F02D8()
{
  return MEMORY[0x270F9DD08]();
}

uint64_t sub_2588F02E8()
{
  return MEMORY[0x270F9E028]();
}

uint64_t sub_2588F02F8()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_2588F0308()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_2588F0318()
{
  return MEMORY[0x270F9E1D8]();
}

uint64_t sub_2588F0328()
{
  return MEMORY[0x270F9E210]();
}

uint64_t sub_2588F0338()
{
  return MEMORY[0x270F9E218]();
}

uint64_t sub_2588F0348()
{
  return MEMORY[0x270F9E2F8]();
}

uint64_t sub_2588F0358()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_2588F0368()
{
  return MEMORY[0x270F9E5B8]();
}

uint64_t sub_2588F0378()
{
  return MEMORY[0x270F9E5C0]();
}

uint64_t sub_2588F0388()
{
  return MEMORY[0x270F9E5D0]();
}

uint64_t sub_2588F0398()
{
  return MEMORY[0x270F9E5E0]();
}

uint64_t sub_2588F03A8()
{
  return MEMORY[0x270F9E608]();
}

uint64_t sub_2588F03B8()
{
  return MEMORY[0x270F9E640]();
}

uint64_t sub_2588F03C8()
{
  return MEMORY[0x270F9E648]();
}

uint64_t sub_2588F03D8()
{
  return MEMORY[0x270F9E650]();
}

uint64_t sub_2588F03E8()
{
  return MEMORY[0x270F9E668]();
}

uint64_t sub_2588F03F8()
{
  return MEMORY[0x270F9E6D0]();
}

uint64_t sub_2588F0408()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_2588F0418()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_2588F0428()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_2588F0438()
{
  return MEMORY[0x270F9EE18]();
}

uint64_t sub_2588F0448()
{
  return MEMORY[0x270F9EE28]();
}

uint64_t sub_2588F0458()
{
  return MEMORY[0x270F9EE80]();
}

uint64_t sub_2588F0468()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_2588F0478()
{
  return MEMORY[0x270F9F770]();
}

uint64_t sub_2588F0488()
{
  return MEMORY[0x270F9F778]();
}

uint64_t sub_2588F0498()
{
  return MEMORY[0x270F9F7B0]();
}

uint64_t sub_2588F04A8()
{
  return MEMORY[0x270F9FA28]();
}

uint64_t sub_2588F04B8()
{
  return MEMORY[0x270F9FA80]();
}

uint64_t sub_2588F04C8()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_2588F04D8()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_2588F04E8()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_2588F04F8()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_2588F0508()
{
  return MEMORY[0x270F9FC00]();
}

uint64_t sub_2588F0518()
{
  return MEMORY[0x270F9FC28]();
}

uint64_t sub_2588F0528()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_2588F0538()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_2588F0548()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_2588F0558()
{
  return MEMORY[0x270F9FCB8]();
}

uint64_t sub_2588F0568()
{
  return MEMORY[0x270F9FCC8]();
}

uint64_t sub_2588F0578()
{
  return MEMORY[0x270F9FCE8]();
}

uint64_t sub_2588F0588()
{
  return MEMORY[0x270FA0128]();
}

void bzero(void *a1, size_t a2)
{
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return MEMORY[0x270EDA468](__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getTupleTypeMetadata()
{
  return MEMORY[0x270FA0420]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return MEMORY[0x270FA0440]();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return MEMORY[0x270FA0448]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return MEMORY[0x270FA0460]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}