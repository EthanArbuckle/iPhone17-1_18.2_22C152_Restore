uint64_t sub_250E88458()
{
  uint64_t v0;
  uint64_t vars8;

  sub_250E88498(*(id *)(v0 + 24));
  return swift_deallocClassInstance();
}

void sub_250E88498(id a1)
{
  if (a1 != (id)1) {
}
  }

uint64_t sub_250E884A8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay;
  uint64_t v2 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_250E88550()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  uint64_t v2 = sub_250F0C340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_250E885F8()
{
  sub_250E88650();
  return swift_deallocClassInstance();
}

uint64_t sub_250E88650()
{
  (*(void (**)(uint64_t))(*(void *)(*(void *)(*(void *)v0 + 80) - 8) + 8))(v0 + *(void *)(*(void *)v0 + 96));
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 104);
  uint64_t v2 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  swift_release();
  return v0;
}

uint64_t sub_250E88750(void *a1)
{
  id v1 = a1;
  char v2 = sub_250E88784();

  return v2 & 1;
}

uint64_t sub_250E88784()
{
  id v1 = objc_msgSend(v0, sel_configuration);
  unsigned int v2 = objc_msgSend(v1, sel_shouldDeactivateAfterInitialResults);

  return v2 ^ 1;
}

uint64_t sub_250E887D4()
{
  swift_getObjCClassMetadata();
  sub_250E8880C();
  return swift_getObjCClassFromMetadata();
}

uint64_t sub_250E8880C()
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  return MEMORY[0x270F31430](0, AssociatedTypeWitness, AssociatedConformanceWitness);
}

id sub_250E88894(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  sub_250F0C0C0();
  MEMORY[0x270FA5388]();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C0A0();
  id v11 = a4;
  id v12 = a5;
  swift_unknownObjectRetain();
  id v13 = sub_250E88978((uint64_t)v10, (uint64_t)a4, (uint64_t)v12, a6);

  swift_unknownObjectRelease();
  return v13;
}

id sub_250E88978(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5 = v4;
  ObjectType = (objc_class *)swift_getObjectType();
  id v11 = &v5[qword_26B20EA10];
  uint64_t v12 = type metadata accessor for SleepingSampleCacheRange();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v11, 1, 1, v12);
  id v13 = (void *)sub_250F0C080();
  v17.receiver = v5;
  v17.super_class = ObjectType;
  id v14 = objc_msgSendSuper2(&v17, sel_initWithUUID_configuration_client_delegate_, v13, a2, a3, a4);

  uint64_t v15 = sub_250F0C0C0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(a1, v15);
  return v14;
}

uint64_t sub_250E88A90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250E983A0);
}

void sub_250E88AA4(void *a1)
{
  id v1 = a1;
  sub_250E88AEC();
}

void sub_250E88AEC()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_250F0C0C0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  v48 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0CCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v8 = (char *)&v43 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  id v9 = v0;
  v10 = sub_250F0CCA0();
  os_log_type_t v11 = sub_250F0D1D0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v45 = v5;
    uint64_t v13 = v12;
    uint64_t v44 = swift_slowAlloc();
    uint64_t v50 = v44;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_250F0D7B0();
    uint64_t v47 = v2;
    uint64_t v49 = sub_250E8BE44(v14, v15, &v50);
    v46 = ObjectType;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    uint64_t v16 = sub_250E8C8C4();
    uint64_t v49 = sub_250E8BE44(v16, v17, &v50);
    ObjectType = v46;
    uint64_t v2 = v47;
    sub_250F0D300();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v10, v11, "[%{public}s:%{public}s] Query started", (uint8_t *)v13, 0x16u);
    uint64_t v18 = v44;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v18, -1, -1);
    MEMORY[0x25338EC30](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v45);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  v51.receiver = v9;
  v51.super_class = ObjectType;
  objc_msgSendSuper2(&v51, sel__queue_start);
  id v19 = sub_250E89590();
  if (v19)
  {
    v20 = v19;
    id v21 = objc_msgSend(v9, sel_profile);
    if (v21)
    {
      v22 = v21;
      if (!sub_250E89300())
      {
        id v34 = sub_250EFE128(127, 0xD000000000000021, 0x8000000250F10E60);
        v31 = (void *)sub_250F0BF90();

        id v35 = objc_msgSend(v9, sel_queryUUID);
        v36 = v48;
        sub_250F0C0A0();

        v26 = (void *)sub_250F0C080();
        (*(void (**)(char *, uint64_t))(v3 + 8))(v36, v2);
        objc_msgSend(v20, sel_client_deliverError_forQuery_, v31, v26);
        swift_unknownObjectRelease();

LABEL_15:
LABEL_16:

        return;
      }
      uint64_t v24 = v23;
      v25 = (void *)sub_250E89538();
      if (v25)
      {
        v26 = v25;
        if ((objc_msgSend(v25, sel_shouldDeactivateAfterInitialResults) & 1) == 0)
        {
          uint64_t v27 = swift_getObjectType();
          v28 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v27, v24);
          id v29 = objc_msgSend(v9, sel_queryQueue);
          sub_250E89510((uint64_t)v9, (uint64_t)v29, (uint64_t)v28);
        }
        sub_250E897A0((int *)v22, v20);
        swift_unknownObjectRelease();

        swift_unknownObjectRelease();
        goto LABEL_16;
      }
      sub_250F0CF80();
      uint64_t v37 = v3;
      id v38 = objc_allocWithZone(MEMORY[0x263F087E8]);
      v39 = (void *)sub_250F0CF50();
      swift_bridgeObjectRelease();
      id v40 = objc_msgSend(v38, sel_initWithDomain_code_userInfo_, v39, 100, 0);

      v31 = (void *)sub_250F0BF90();
      id v41 = objc_msgSend(v9, sel_queryUUID);
      v42 = v48;
      sub_250F0C0A0();

      v26 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v42, v2);
      objc_msgSend(v20, sel_client_deliverError_forQuery_, v31, v26);
      swift_unknownObjectRelease();
    }
    else
    {
      id v30 = sub_250EFE128(127, 0x20656C69666F7250, 0xEF676E697373696DLL);
      v31 = (void *)sub_250F0BF90();

      id v32 = objc_msgSend(v9, sel_queryUUID);
      v33 = v48;
      sub_250F0C0A0();

      v26 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v33, v2);
      objc_msgSend(v20, sel_client_deliverError_forQuery_, v31, v26);
    }
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  sub_250F0D590();
  __break(1u);
}

uint64_t sub_250E89188@<X0>(uint64_t a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_250F0C060();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = *v2;
  if (sub_250E89300())
  {
    uint64_t v11 = v10;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v13 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 8))(ObjectType, v11);
    swift_unknownObjectRelease();
    sub_250F0C040();
    sub_250E8EFA0(v9, v8, a2);

    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    a2[3] = a1;
    a2[4] = sub_250EA1B70();
    *a2 = (uint64_t)v9;
    return swift_retain();
  }
}

uint64_t sub_250E89300()
{
  sub_250F0C290();
  id v1 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v2 = objc_msgSend(v0, sel_profileExtensionWithIdentifier_, v1);

  if (v2)
  {
    sub_250F0D340();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v5, 0, sizeof(v5));
  }
  sub_250E893EC((uint64_t)v5, (uint64_t)v6);
  if (v7)
  {
    sub_250E894AC();
    if (swift_dynamicCast()) {
      return v4;
    }
    else {
      return 0;
    }
  }
  else
  {
    sub_250EA8EB8((uint64_t)v6);
    return 0;
  }
}

uint64_t sub_250E893EC(uint64_t a1, uint64_t a2)
{
  sub_250E89450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_250E89450()
{
  if (!qword_26B20F070)
  {
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F070);
    }
  }
}

unint64_t sub_250E894AC()
{
  unint64_t result = qword_26B20E540;
  if (!qword_26B20E540)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20E540);
  }
  return result;
}

id sub_250E89500()
{
  return *(id *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache);
}

id sub_250E89510(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(void *)(a3+ OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers)+ 16), sel_registerObserver_queue_, a1, a2);
}

uint64_t sub_250E89538()
{
  id v1 = objc_msgSend(v0, sel_configuration);
  sub_250F0CB40();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {

    return 0;
  }
  return result;
}

id sub_250E89590()
{
  id result = objc_msgSend(v0, sel_clientProxy);
  if (result)
  {
    id v2 = objc_msgSend(result, sel_remoteObjectProxy);
    swift_unknownObjectRelease();
    sub_250F0D340();
    swift_unknownObjectRelease();
    sub_250E8963C();
    if (swift_dynamicCast()) {
      return (id)v3;
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_250E8963C()
{
  unint64_t result = qword_26B20E498;
  if (!qword_26B20E498)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20E498);
  }
  return result;
}

void *sub_250E896F4()
{
  uint64_t v1 = sub_250F0CF80();
  uint64_t v3 = v2;
  if (v1 == sub_250F0CF80() && v3 == v4)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_8;
  }
  char v6 = sub_250F0D680();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
LABEL_8:
    uint64_t v7 = *(void **)(v0
                  + OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager);
    id v8 = v7;
    return v7;
  }
  return 0;
}

uint64_t sub_250E897A0(int *a1, void *a2)
{
  id v247 = a2;
  v264 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = *(void *)((*MEMORY[0x263F8EED0] & *v2) + 0x50);
  v260 = *(void (***)(void, void, void))((*MEMORY[0x263F8EED0] & *v2) + 0x58);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v254 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v5 = MEMORY[0x270FA5388](AssociatedTypeWitness);
  v258 = (char *)&v223 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  v262 = (char *)&v223 - v7;
  uint64_t v246 = sub_250F0C0C0();
  v257 = *(void (***)(char *, char *, uint64_t))(v246 - 8);
  MEMORY[0x270FA5388](v246);
  v245 = (char *)&v223 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v253 = sub_250F0CCB0();
  v256 = *(unsigned int (***)(uint64_t, uint64_t, id))(v253 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v253);
  v234 = (char *)&v223 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  v228 = (char *)&v223 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  v226 = (char *)&v223 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  v251 = (char *)&v223 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  v224 = (char *)&v223 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v223 = (char *)&v223 - v20;
  MEMORY[0x270FA5388](v19);
  v227 = (char *)&v223 - v21;
  unint64_t v225 = sub_250E92500();
  uint64_t v22 = sub_250F0D740();
  uint64_t v248 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  v259 = (char *)&v223 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  v250 = (char *)&v223 - v25;
  uint64_t v249 = v26;
  uint64_t v27 = sub_250F0D2D0();
  MEMORY[0x270FA5388](v27 - 8);
  v266 = (char *)&v223 - v28;
  sub_250E8C788(0);
  uint64_t v30 = MEMORY[0x270FA5388](v29 - 8);
  v238 = (char *)&v223 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  v263 = (char *)&v223 - v32;
  v255 = (void (**)(void, void, void))sub_250F0C060();
  v252 = (void (**)(char *, uint64_t))*(v255 - 1);
  MEMORY[0x270FA5388](v255);
  v265 = (char *)&v223 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E925B8(0);
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  v231 = (char *)&v223 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  v244 = (char *)&v223 - v37;
  id v38 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250E91FF0(0, &qword_26B20E4F0, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v39 - 8);
  id v41 = (char *)&v223 - v40;
  sub_250E91FF0(0, &qword_26B20EE68, (uint64_t (*)(uint64_t))sub_250E9374C, v38);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v44 = (char *)&v223 - v43;
  uint64_t v45 = sub_250F0C340();
  uint64_t v46 = MEMORY[0x270FA5388](v45 - 8);
  uint64_t v233 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v46);
  v241 = (char *)&v223 - v47;
  uint64_t v48 = sub_250F0CCF0();
  uint64_t v49 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  objc_super v51 = (char **)((char *)&v223 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  v243 = v2;
  *objc_super v51 = objc_msgSend(v2, sel_queryQueue);
  (*(void (**)(void *, void, uint64_t))(v49 + 104))(v51, *MEMORY[0x263F8F0E0], v48);
  char v52 = sub_250F0CD00();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v49 + 8))(v51, v48);
  if ((v52 & 1) == 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  v54 = v260;
  uint64_t AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  uint64_t v56 = *(void *)(AssociatedConformanceWitness + 24);
  uint64_t v237 = AssociatedConformanceWitness;
  long long v57 = *(_OWORD *)(AssociatedConformanceWitness + 8);
  uint64_t v270 = AssociatedTypeWitness;
  long long v271 = v57;
  uint64_t v272 = v56;
  v267 = (void (*)(char *, uint64_t))sub_250F0CD40();
  uint64_t v274 = sub_250F0D070();
  sub_250F0CB30();
  sub_250E9374C();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v58 - 8) + 48))(v44, 1, v58);
  if (result == 1)
  {
LABEL_63:
    __break(1u);
    goto LABEL_64;
  }
  uint64_t v261 = AssociatedTypeWitness;
  sub_250F0CB20();
  uint64_t v59 = sub_250F0C1B0();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v59 - 8) + 48))(v41, 1, v59);
  uint64_t v60 = v249;
  if (result == 1)
  {
LABEL_64:
    __break(1u);
    return result;
  }
  sub_250F0C2F0();
  v61 = (void (*)(void))v54[4];
  v62 = v264;
  v61();
  v63 = v54;
  ((void (*)(uint64_t, void (**)(void, void, void)))v63[6])(v3, v63);
  v64 = v252;
  uint64_t v65 = (uint64_t)v263;
  v66 = v255;
  ((void (*)(char *, uint64_t, uint64_t, void (**)(void, void, void)))v252[7])(v263, 1, 1, v255);
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  v67 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  id v68 = (id)HKRollingBaselineConfigurationForQuantityType();

  if (v68)
  {
    objc_msgSend(v68, sel_maximumWindowDuration);
    uint64_t v70 = v69;
  }
  else
  {
    uint64_t v70 = 0;
  }
  v71 = v243;
  v72 = v259;
  uint64_t v73 = (uint64_t)v244;
  ((void (*)(char *, char *, void))v64[4])(v244, v265, v66);
  v74 = (int *)type metadata accessor for SleepingSampleCacheRange();
  sub_250E8CE1C(v65, v73 + v74[5], (uint64_t (*)(void))sub_250E8C788);
  *(void *)(v73 + v74[6]) = v70;
  uint64_t v75 = *((void *)v74 - 1);
  v76 = *(void (**)(void, void, void, void))(v75 + 56);
  uint64_t v77 = v75 + 56;
  LODWORD(v263) = 1;
  v264 = v74;
  v230 = (void (*)(uint64_t, uint64_t, uint64_t, int *))v76;
  v76(v73, 0, 1, v74);
  uint64_t v78 = (uint64_t)v71 + qword_26B20EA10;
  swift_beginAccess();
  sub_250E92554(v73, v78);
  swift_endAccess();
  v79 = v63[5];
  uint64_t v232 = v3;
  ((void (*)(uint64_t *__return_ptr, int *, uint64_t, void (**)(void, void, void)))v79)(v269, v62, v3, v63);
  v80 = __swift_project_boxed_opaque_existential_1(v269, v269[3]);
  MEMORY[0x270FA5388](v80);
  (*(void (**)(char *))(v82 + 16))((char *)&v223 - ((v81 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v272 = swift_getAssociatedTypeWitness();
  uint64_t v273 = swift_getAssociatedConformanceWitness();
  __swift_allocate_boxed_opaque_existential_1(&v270);
  sub_250F0CFD0();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v269);
  v83 = (unsigned int (**)(char *, uint64_t, uint64_t))(v248 + 48);
  v84 = (void (**)(char *, char *, uint64_t))(v248 + 32);
  v252 = (void (**)(char *, uint64_t))(v256 + 1);
  v236 = v269;
  v244 = (char *)(v257 + 1);
  v260 = (void (**)(void, void, void))(v248 + 16);
  v257 = (void (**)(char *, char *, uint64_t))(v254 + 4);
  uint64_t v229 = v77;
  v256 = (unsigned int (**)(uint64_t, uint64_t, id))(v77 - 8);
  v255 = (void (**)(void, void, void))(v254 + 2);
  ++v254;
  v265 = (char *)(v248 + 8);
  *(void *)&long long v85 = 136446466;
  long long v239 = v85;
  uint64_t v235 = MEMORY[0x263F8EE58] + 8;
  uint64_t v242 = MEMORY[0x263F8EE50] + 8;
  v86 = v250;
  uint64_t v248 = v78;
  v87 = v243;
  while (1)
  {
    __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v270, v272);
    v88 = v266;
    sub_250F0D2E0();
    if ((*v83)(v88, 1, v60) == 1)
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
      v117 = v228;
LABEL_23:
      sub_250F0CC90();
      id v118 = v87;
      v119 = sub_250F0CCA0();
      os_log_type_t v120 = sub_250F0D1D0();
      if (os_log_type_enabled(v119, v120))
      {
        uint64_t v121 = swift_slowAlloc();
        uint64_t v122 = swift_slowAlloc();
        uint64_t v270 = v122;
        *(_DWORD *)uint64_t v121 = v239;
        uint64_t v123 = sub_250F0D7B0();
        v269[0] = sub_250E8BE44(v123, v124, &v270);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v121 + 12) = 2082;
        uint64_t v125 = sub_250E8C8C4();
        v269[0] = sub_250E8BE44(v125, v126, &v270);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v119, v120, "[%{public}s:%{public}s] Delivering samples", (uint8_t *)v121, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v122, -1, -1);
        MEMORY[0x25338EC30](v121, -1, -1);
      }
      else
      {
      }
      v154 = *v252;
      (*v252)(v117, v253);
      v155 = v234;
      char v156 = (char)v263;
      sub_250F0D550();
      swift_bridgeObjectRelease();
      v157 = (void *)sub_250F0D030();
      swift_bridgeObjectRelease();
      id v158 = objc_msgSend(v118, sel_queryUUID);
      v159 = v245;
      sub_250F0C0A0();

      v160 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))v244)(v159, v246);
      objc_msgSend(v247, sel_client_deliverSleepingSampleDaySummaries_clearPending_isFinalBatch_queryUUID_, v157, v156 & 1, 1, v160);

      v161 = 0;
      id v162 = 0;
      goto LABEL_58;
    }
    (*v84)(v86, v88, v60);
    if (objc_msgSend(v87, sel__shouldStopProcessingQuery))
    {
      v127 = v227;
      sub_250F0CC90();
      id v128 = v87;
      v129 = sub_250F0CCA0();
      os_log_type_t v130 = sub_250F0D1D0();
      if (os_log_type_enabled(v129, v130))
      {
        uint64_t v131 = swift_slowAlloc();
        uint64_t v132 = swift_slowAlloc();
        v269[0] = v132;
        *(_DWORD *)uint64_t v131 = v239;
        uint64_t v133 = sub_250F0D7B0();
        uint64_t v268 = sub_250E8BE44(v133, v134, v269);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v131 + 12) = 2082;
        uint64_t v135 = sub_250E8C8C4();
        uint64_t v268 = sub_250E8BE44(v135, v136, v269);
        v86 = v250;
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v129, v130, "[%{public}s:%{public}s] Query aborted", (uint8_t *)v131, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v132, -1, -1);
        MEMORY[0x25338EC30](v131, -1, -1);

        v137 = *v252;
        v138 = v227;
      }
      else
      {

        v137 = *v252;
        v138 = v127;
      }
      v267 = v137;
      v137(v138, v253);
      v155 = v234;
      uint64_t v163 = (uint64_t)v231;
      v161 = sub_250EFE128(128, 0x6261207972657551, 0xED0000646574726FLL);
      (*(void (**)(char *, uint64_t))v265)(v86, v60);
      id v162 = 0;
      uint64_t v164 = v248;
      v165 = v230;
LABEL_44:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
      swift_bridgeObjectRelease();
      v165(v163, 1, 1, v264);
      swift_beginAccess();
      sub_250E92554(v163, v164);
      swift_endAccess();
      v154 = v267;
      goto LABEL_58;
    }
    if (objc_msgSend(v87, sel__shouldSuspendQuery))
    {
      id v139 = objc_msgSend(v87, sel_configuration);
      unsigned int v140 = objc_msgSend(v139, sel_shouldDeactivateAfterInitialResults);

      if (v140)
      {
        v141 = v223;
        sub_250F0CC90();
        id v142 = v87;
        v143 = sub_250F0CCA0();
        os_log_type_t v144 = sub_250F0D1D0();
        if (os_log_type_enabled(v143, v144))
        {
          uint64_t v145 = swift_slowAlloc();
          uint64_t v146 = swift_slowAlloc();
          v269[0] = v146;
          *(_DWORD *)uint64_t v145 = v239;
          uint64_t v147 = sub_250F0D7B0();
          uint64_t v268 = sub_250E8BE44(v147, v148, v269);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          *(_WORD *)(v145 + 12) = 2082;
          uint64_t v149 = sub_250E8C8C4();
          uint64_t v268 = sub_250E8BE44(v149, v150, v269);
          v86 = v250;
          sub_250F0D300();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v143, v144, "[%{public}s:%{public}s] Query suspended and is deactivating", (uint8_t *)v145, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25338EC30](v146, -1, -1);
          MEMORY[0x25338EC30](v145, -1, -1);
        }
        else
        {
        }
        v267 = *v252;
        v267(v141, v253);
        v155 = v234;
        uint64_t v163 = (uint64_t)v231;
        v161 = sub_250EFE128(128, 0xD000000000000023, 0x8000000250F10DC0);
        id v162 = 0;
        uint64_t v176 = v249;
        uint64_t v164 = v248;
        v165 = v230;
      }
      else
      {
        v166 = v224;
        sub_250F0CC90();
        id v167 = v87;
        v168 = sub_250F0CCA0();
        os_log_type_t v169 = sub_250F0D1D0();
        if (os_log_type_enabled(v168, v169))
        {
          uint64_t v170 = swift_slowAlloc();
          uint64_t v171 = swift_slowAlloc();
          v269[0] = v171;
          *(_DWORD *)uint64_t v170 = v239;
          uint64_t v172 = sub_250F0D7B0();
          uint64_t v268 = sub_250E8BE44(v172, v173, v269);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          *(_WORD *)(v170 + 12) = 2082;
          uint64_t v174 = sub_250E8C8C4();
          uint64_t v268 = sub_250E8BE44(v174, v175, v269);
          v86 = v250;
          sub_250F0D300();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v168, v169, "[%{public}s:%{public}s] Query suspended and can be resumed", (uint8_t *)v170, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25338EC30](v171, -1, -1);
          MEMORY[0x25338EC30](v170, -1, -1);
        }
        else
        {
        }
        v267 = *v252;
        v267(v166, v253);
        v155 = v234;
        uint64_t v163 = (uint64_t)v231;
        uint64_t v176 = v249;
        v165 = v230;
        id v162 = sub_250EFE128(128, 0xD000000000000022, 0x8000000250F10D90);
        v161 = 0;
        uint64_t v164 = v248;
      }
      (*(void (**)(char *, uint64_t))v265)(v86, v176);
      goto LABEL_44;
    }
    uint64_t v89 = swift_bridgeObjectRetain();
    uint64_t v90 = MEMORY[0x25338DCA0](v89, v267);
    swift_bridgeObjectRelease();
    if (v90 >= 200)
    {
      v92 = v251;
      sub_250F0CC90();
      id v93 = v87;
      v94 = sub_250F0CCA0();
      os_log_type_t v95 = sub_250F0D1D0();
      if (os_log_type_enabled(v94, v95))
      {
        uint64_t v96 = swift_slowAlloc();
        uint64_t v97 = swift_slowAlloc();
        v269[0] = v97;
        *(_DWORD *)uint64_t v96 = v239;
        uint64_t v98 = sub_250F0D7B0();
        uint64_t v268 = sub_250E8BE44(v98, v99, v269);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v96 + 12) = 2082;
        uint64_t v100 = sub_250E8C8C4();
        uint64_t v268 = sub_250E8BE44(v100, v101, v269);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v94, v95, "[%{public}s:%{public}s] Delivering sample batch", (uint8_t *)v96, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v97, -1, -1);
        uint64_t v102 = v96;
        v87 = v243;
        MEMORY[0x25338EC30](v102, -1, -1);

        (*v252)(v251, v253);
      }
      else
      {

        (*v252)(v92, v253);
      }
      uint64_t v60 = v249;
      sub_250F0D550();
      swift_bridgeObjectRelease();
      v103 = (void *)sub_250F0D030();
      swift_bridgeObjectRelease();
      id v104 = objc_msgSend(v93, sel_queryUUID);
      v105 = v245;
      sub_250F0C0A0();

      v106 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))v244)(v105, v246);
      objc_msgSend(v247, sel_client_deliverSleepingSampleDaySummaries_clearPending_isFinalBatch_queryUUID_, v103, v263 & 1, 0, v106);

      uint64_t v107 = sub_250F0D070();
      LODWORD(v263) = 0;
      uint64_t v274 = v107;
      v86 = v250;
      uint64_t v78 = v248;
      uint64_t v91 = v261;
      v72 = v259;
    }
    else
    {
      uint64_t v91 = v261;
    }
    (*v260)(v72, v86, v60);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v109 = v262;
    if (EnumCaseMultiPayload == 1) {
      break;
    }
    (*v257)(v262, v72, v91);
    swift_beginAccess();
    if ((*v256)(v78, 1, v264))
    {
      swift_endAccess();
    }
    else
    {
      v110 = v86;
      uint64_t v111 = v60;
      v112 = v83;
      v113 = v84;
      v114 = v87;
      uint64_t v115 = (uint64_t)v238;
      sub_250F0C8E0();
      sub_250E8C164(v115);
      swift_endAccess();
      uint64_t v116 = v115;
      v87 = v114;
      v84 = v113;
      v83 = v112;
      uint64_t v60 = v111;
      v86 = v110;
      v72 = v259;
      sub_250E8BC3C(v116, (uint64_t (*)(void))sub_250E8C788);
    }
    (*v255)(v258, v109, v91);
    v269[0] = sub_250F0CD10();
    sub_250F0D0C0();
    sub_250F0D0B0();
    (*v254)(v109, v91);
    (*(void (**)(char *, uint64_t))v265)(v86, v60);
  }
  id v151 = *(id *)v72;
  unsigned int v152 = v72[8];
  v153 = v226;
  switch(v152 >> 6)
  {
    case 1u:
    case 2u:
      if (v152) {
        goto LABEL_48;
      }
      goto LABEL_49;
    case 3u:
      if (objc_msgSend(*(id *)v72, sel_hk_isDatabaseAccessibilityError)) {
        goto LABEL_48;
      }
      goto LABEL_49;
    default:
      if (v152 != 1) {
        goto LABEL_49;
      }
LABEL_48:
      id v177 = objc_msgSend(v87, sel_configuration);
      unsigned __int8 v178 = objc_msgSend(v177, sel_shouldDeactivateAfterInitialResults);

      v153 = v226;
      if (v178)
      {
LABEL_49:
        v161 = (void *)swift_allocError();
        v266 = 0;
      }
      else
      {
        v266 = (char *)swift_allocError();
        v161 = 0;
      }
      *(void *)uint64_t v179 = v151;
      *(unsigned char *)(v179 + 8) = v152;
      id v180 = v151;
      sub_250F0CC90();
      id v181 = v87;
      id v182 = v151;
      id v183 = v181;
      id v184 = v151;
      v185 = sub_250F0CCA0();
      os_log_type_t v186 = sub_250F0D1B0();
      int v187 = v186;
      if (os_log_type_enabled(v185, v186))
      {
        uint64_t v188 = swift_slowAlloc();
        v260 = (void (**)(void, void, void))swift_slowAlloc();
        v262 = (char *)swift_slowAlloc();
        v269[0] = (uint64_t)v262;
        *(_DWORD *)uint64_t v188 = 136446722;
        LODWORD(v261) = v187;
        uint64_t v189 = sub_250F0D7B0();
        uint64_t v268 = sub_250E8BE44(v189, v190, v269);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v188 + 12) = 2082;
        uint64_t v191 = sub_250E8C8C4();
        uint64_t v268 = sub_250E8BE44(v191, v192, v269);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        *(_WORD *)(v188 + 22) = 2112;
        swift_allocError();
        *(void *)uint64_t v193 = v151;
        *(unsigned char *)(v193 + 8) = v152;
        id v194 = v151;
        uint64_t v195 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v268 = v195;
        sub_250F0D300();
        v196 = v260;
        *v260 = (void (*)(void, void, void))v195;
        uint64_t v78 = v248;

        _os_log_impl(&dword_250E86000, v185, (os_log_type_t)v261, "[%{public}s:%{public}s] Enumeration error: %@", (uint8_t *)v188, 0x20u);
        sub_250E978C0();
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v196, -1, -1);
        v197 = v262;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v197, -1, -1);
        uint64_t v198 = v188;
        v87 = v243;
        MEMORY[0x25338EC30](v198, -1, -1);

        v154 = *v252;
        (*v252)(v153, v253);
        (*(void (**)(char *, uint64_t))v265)(v250, v249);
      }
      else
      {

        v154 = *v252;
        (*v252)(v153, v253);
        (*(void (**)(char *, uint64_t))v265)(v250, v60);
      }
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v270);
      v155 = v234;
      v117 = v228;
      if (v161)
      {
        id v199 = v161;
        swift_bridgeObjectRelease();
        uint64_t v200 = (uint64_t)v231;
        v230((uint64_t)v231, 1, 1, v264);
        swift_beginAccess();
        sub_250E92554(v200, v78);
        swift_endAccess();
        v201 = (void *)sub_250F0BF90();
        id v202 = objc_msgSend(v183, sel_queryUUID);
        v203 = v245;
        sub_250F0C0A0();

        v204 = (void *)sub_250F0C080();
        (*(void (**)(char *, uint64_t))v244)(v203, v246);
        objc_msgSend(v247, sel_client_deliverError_forQuery_, v201, v204);

        id v162 = v266;
        break;
      }
      v205 = v183;
      id v206 = v266;
      if (!v266) {
        goto LABEL_23;
      }
      v207 = v266;
      swift_bridgeObjectRelease();
      uint64_t v208 = (uint64_t)v231;
      v230((uint64_t)v231, 1, 1, v264);
      swift_beginAccess();
      sub_250E92554(v208, v78);
      swift_endAccess();
      v209 = (void *)sub_250F0BF90();
      id v210 = objc_msgSend(v205, sel_queryUUID);
      v211 = v245;
      sub_250F0C0A0();

      v212 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))v244)(v211, v246);
      objc_msgSend(v247, sel_client_logErrorAndKeepQueryActivatedWithError_queryUUID_, v209, v212);

      v161 = 0;
      v155 = v234;
      id v162 = v206;
      break;
  }
LABEL_58:
  sub_250F0CC90();
  id v213 = v87;
  v214 = sub_250F0CCA0();
  os_log_type_t v215 = sub_250F0D1D0();
  if (os_log_type_enabled(v214, v215))
  {
    uint64_t v216 = swift_slowAlloc();
    uint64_t v217 = swift_slowAlloc();
    v267 = v154;
    uint64_t v218 = v217;
    uint64_t v270 = v217;
    *(_DWORD *)uint64_t v216 = v239;
    uint64_t v219 = sub_250F0D7B0();
    v269[0] = sub_250E8BE44(v219, v220, &v270);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v216 + 12) = 2082;
    uint64_t v221 = sub_250E8C8C4();
    v269[0] = sub_250E8BE44(v221, v222, &v270);
    sub_250F0D300();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v214, v215, "[%{public}s:%{public}s] Query finished", (uint8_t *)v216, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v218, -1, -1);
    MEMORY[0x25338EC30](v216, -1, -1);

    v267(v234, v253);
  }
  else
  {

    v154(v155, v253);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v233 + 8))(v241, v232);
}

uint64_t sub_250E8BC3C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E8BC9C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E8BCFC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E8BD5C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E8BDBC(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_250E8BE44(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_250E8BF74(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    uint64_t ObjectType = swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_250E8BF18((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    uint64_t ObjectType = MEMORY[0x263F8DBE0];
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_250E8BF18((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v12);
  return v7;
}

uint64_t sub_250E8BF18(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_250E8BF74(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_250F0D310();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_250E8CEC8(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_250F0D4E0();
  if (!v8)
  {
    sub_250F0D580();
    __break(1u);
LABEL_17:
    uint64_t result = sub_250F0D600();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(uint64_t a1)
{
  return sub_250E8BDBC(a1, qword_26B20EA28);
}

uint64_t sub_250E8C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250E982A8);
}

uint64_t sub_250E8C164(uint64_t a1)
{
  sub_250E8C788(0);
  uint64_t v2 = ((uint64_t (*)(void))MEMORY[0x270FA5388])();
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v2);
  uint64_t v7 = (char *)v24 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)v24 - v8;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v24 - v15;
  sub_250E8C4CC(a1, (uint64_t)v9, (uint64_t (*)(void))sub_250E8C788);
  uint64_t v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  if (v17(v9, 1, v10) == 1) {
    return sub_250E8CC88((uint64_t)v9, (uint64_t (*)(void))sub_250E8C788);
  }
  v24[0] = v4;
  uint64_t v19 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v19(v16, v9, v10);
  uint64_t v20 = v24[1] + *(int *)(type metadata accessor for SleepingSampleCacheRange() + 20);
  sub_250E8C4CC(v20, (uint64_t)v7, (uint64_t (*)(void))sub_250E8C788);
  if (v17(v7, 1, v10) == 1)
  {
    sub_250E8CC88((uint64_t)v7, (uint64_t (*)(void))sub_250E8C788);
    sub_250E8CC88(v20, (uint64_t (*)(void))sub_250E8C788);
    v19((char *)v20, v16, v10);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v20, 0, 1, v10);
  }
  else
  {
    v19(v14, v7, v10);
    sub_250E8C86C();
    if (sub_250F0CEF0()) {
      uint64_t v21 = v16;
    }
    else {
      uint64_t v21 = v14;
    }
    uint64_t v22 = v24[0];
    (*(void (**)(void, char *, uint64_t))(v11 + 16))(v24[0], v21, v10);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v11 + 8);
    v23(v14, v10);
    v23(v16, v10);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v11 + 56))(v22, 0, 1, v10);
    return sub_250E8C808(v22, v20);
  }
}

uint64_t sub_250E8C4CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E8C534(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_250F06E5C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

void sub_250E8C5B4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_250E8C608(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250E8C66C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_250E8C6C0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250E8C724(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250E8C788(uint64_t a1)
{
}

uint64_t type metadata accessor for SleepingSampleCacheRange()
{
  uint64_t result = qword_26B20E1A8;
  if (!qword_26B20E1A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250E8C808(uint64_t a1, uint64_t a2)
{
  sub_250E8C788(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_250E8C86C()
{
  unint64_t result = qword_26B20E4E0;
  if (!qword_26B20E4E0)
  {
    sub_250F0C060();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E4E0);
  }
  return result;
}

uint64_t sub_250E8C8C4()
{
  uint64_t v1 = sub_250F0C0C0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_configuration);
  id v6 = objc_msgSend(v5, sel_debugIdentifier);

  if (v6)
  {
    uint64_t v7 = sub_250F0CF80();
    uint64_t v9 = v8;

    v14[2] = v7;
    v14[3] = v9;
    swift_bridgeObjectRetain();
    sub_250E8CA4C(v0, v14);
    swift_bridgeObjectRelease_n();
    return v14[0];
  }
  else
  {
    id v11 = objc_msgSend(v0, sel_queryUUID);
    sub_250F0C0A0();

    uint64_t v10 = sub_250F0C070();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return v10;
}

uint64_t sub_250E8CA4C@<X0>(void *a1@<X1>, uint64_t *a2@<X8>)
{
  uint64_t v4 = sub_250F0C0C0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = objc_msgSend(a1, sel_queryUUID, 0, 0xE000000000000000);
  sub_250F0C0A0();

  uint64_t v9 = (void *)sub_250F0C080();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  id v10 = (id)HKDiagnosticStringFromUUID();

  uint64_t v11 = sub_250F0CF80();
  uint64_t v13 = v12;

  swift_bridgeObjectRelease();
  uint64_t v16 = v11;
  uint64_t v17 = v13;
  sub_250F0CFB0();
  sub_250F0CFB0();
  uint64_t result = sub_250F0CFB0();
  uint64_t v15 = v17;
  *a2 = v16;
  a2[1] = v15;
  return result;
}

uint64_t sub_250E8CBD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + *(int *)(a2 + 28);
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_250E8CC88(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E8CCE8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_250E8C6C0(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_250E8CD58(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_250EF825C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_250E8CDB4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E8CE1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *__swift_project_boxed_opaque_existential_1(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_250E8CEC8(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = sub_250E8CF60(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_250EBC3AC(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_250EBC3AC(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

uint64_t sub_250E8CF60(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_250E8D0D8(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_250F0D490();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return (uint64_t)v4;
      }
      sub_250F0D580();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_250F0CFC0();
      if (!v2) {
        return MEMORY[0x263F8EE78];
      }
    }
    sub_250F0D600();
    __break(1u);
LABEL_14:
    uint64_t result = sub_250F0D580();
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE78];
  }
  return result;
}

void *sub_250E8D0D8(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return (void *)MEMORY[0x263F8EE78];
  }
  sub_250E8D13C();
  unint64_t v4 = (void *)swift_allocObject();
  size_t v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

void sub_250E8D13C()
{
  if (!qword_26B20E4A0[0])
  {
    unint64_t v0 = sub_250F0D660();
    if (!v1) {
      atomic_store(v0, qword_26B20E4A0);
    }
  }
}

uint64_t sub_250E8D194(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_250E8D1D0@<X0>(void *a1@<X0>, uint64_t a2@<X1>, char **a3@<X8>)
{
  uint64_t v6 = sub_250F0C060();
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (void (*)(char *, char *, uint64_t))((char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_250F0C340();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0C640();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  sub_250F0C600();
  sub_250F0C5C0();
  sub_250F0C040();
  uint64_t v16 = sub_250E8D3A4(a1, (uint64_t)v15, v8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  *a3 = v16;
  return result;
}

uint64_t sub_250E8D380@<X0>(uint64_t a1@<X8>)
{
  return sub_250E8E7B0(a1);
}

char *sub_250E8D3A4(void *a1, uint64_t a2, void (*a3)(char *, char *, uint64_t))
{
  v74 = a3;
  uint64_t v70 = sub_250F0C640();
  uint64_t v73 = *(void *)(v70 - 8);
  MEMORY[0x270FA5388](v70);
  v72 = (char *)&v59 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9374C();
  uint64_t v59 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v65 = (char *)&v59 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v63 = (char *)&v59 - v9;
  uint64_t v10 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v10 - 8);
  v76 = (char *)&v59 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_250F0C060();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v59 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_250F0CE70();
  uint64_t v62 = *(void *)(v16 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v16);
  uint64_t v60 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v64 = (char *)&v59 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v75 = (char *)&v59 - v21;
  uint64_t v22 = sub_250F0C340();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  v61 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v59 - v26;
  id v28 = a1;
  sub_250F0C5D0();
  type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(0);
  uint64_t v29 = swift_allocObject();
  id v66 = v28;
  uint64_t v67 = v29;
  *(void *)(v29 + 16) = v28;
  (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(v29 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange, v27, v22);
  uint64_t v68 = v13;
  uint64_t v69 = v12;
  uint64_t v30 = v13;
  uint64_t v31 = (char *)v16;
  (*(void (**)(char *, void, uint64_t))(v30 + 16))(v15, v74, v12);
  sub_250F0C5D0();
  sub_250F0C330();
  uint64_t v32 = *(void (**)(char *, uint64_t))(v23 + 8);
  uint64_t v33 = v27;
  uint64_t v34 = (uint64_t)v63;
  v32(v33, v22);
  uint64_t v35 = v75;
  sub_250F0CE10();
  uint64_t v36 = v61;
  uint64_t v71 = a2;
  sub_250F0C5D0();
  sub_250F0C300();
  v32(v36, v22);
  uint64_t v37 = v64;
  sub_250E92C80();
  LOBYTE(a2) = sub_250F0CEF0();
  uint64_t v38 = v62;
  uint64_t v39 = *(void (**)(char *, char *, char *))(v62 + 16);
  uint64_t v40 = (uint64_t)v65;
  v76 = v31;
  v39(v37, v35, v31);
  sub_250E8DBD8(v34, v40, (uint64_t (*)(void))sub_250E9374C);
  if (a2) {
    char v41 = sub_250F0CF00();
  }
  else {
    char v41 = 0;
  }
  sub_250E8BD5C(v40, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v42 = v38;
  v64 = *(char **)(v38 + 8);
  uint64_t v65 = (char *)(v38 + 8);
  ((void (*)(char *, char *))v64)(v37, v76);
  sub_250E8BD5C(v34, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v44 = v70;
  uint64_t v43 = v71;
  (*(void (**)(char *, uint64_t, uint64_t))(v73 + 16))(v72, v71, v70);
  type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider();
  uint64_t v45 = swift_allocObject();
  uint64_t v46 = 0;
  *(_OWORD *)(v45 + 24) = xmmword_250F0F8B0;
  uint64_t v47 = v66;
  *(void *)(v45 + 16) = v66;
  if (v41)
  {
    uint64_t v48 = v60;
    uint64_t v49 = v76;
    v39(v60, v75, v76);
    type metadata accessor for OutlierContextProvider();
    uint64_t v46 = swift_allocObject();
    *(void *)(v46 + 16) = v47;
    (*(void (**)(uint64_t, char *, char *))(v42 + 32))(v46 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay, v48, v49);
    id v50 = v47;
  }
  sub_250E8DC40(0, (unint64_t *)&qword_26B20E310, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_250EA1C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
  objc_super v51 = (char *)swift_allocObject();
  *((void *)v51 + 2) = v67;
  uint64_t v52 = v73;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v51[*(void *)(*(void *)v51 + 104)], v72, v44);
  v53 = (uint64_t *)&v51[*(void *)(*(void *)v51 + 112)];
  uint64_t *v53 = v45;
  v53[1] = (uint64_t)&off_2701F12D0;
  *(void *)&v51[*(void *)(*(void *)v51 + 120)] = v46;
  v54 = &v51[*(void *)(*(void *)v51 + 104)];
  swift_beginAccess();
  v55 = *(void (**)(char *, uint64_t, uint64_t))(v52 + 24);
  id v56 = v47;
  swift_retain();
  swift_retain();
  v55(v54, v43, v44);
  swift_endAccess();
  long long v57 = v74;
  sub_250E8DD04(v43, v74);
  swift_release();

  swift_release();
  (*(void (**)(void (*)(char *, char *, uint64_t), uint64_t))(v68 + 8))(v57, v69);
  (*(void (**)(uint64_t, uint64_t))(v52 + 8))(v43, v44);
  ((void (*)(char *, char *))v64)(v75, v76);
  return v51;
}

uint64_t sub_250E8DB70(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E8DBD8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_250E8DC40(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider()
{
  return self;
}

uint64_t type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(uint64_t a1)
{
  return sub_250E8BDBC(a1, qword_26B20E328);
}

uint64_t sub_250E8DD04(uint64_t a1, void (*a2)(char *, char *, uint64_t))
{
  os_log_type_t v95 = a2;
  uint64_t v96 = a1;
  sub_250E8E700();
  uint64_t v92 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  v80 = (char *)v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  v76 = (char *)v75 - v5;
  sub_250E9374C();
  uint64_t v93 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v83 = (char *)v75 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v82 = (uint64_t)v75 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v91 = (void (*)(char *, char *, uint64_t))((char *)v75 - v11);
  uint64_t v12 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v14 = (char *)v75 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_250F0C340();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v77 = (char *)v75 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  v86 = (char *)v75 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v75 - v21;
  uint64_t v23 = sub_250F0C060();
  uint64_t v24 = *(void *)(v23 - 8);
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)v75 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_250F0CE70();
  uint64_t v97 = *(void *)(v27 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v27);
  uint64_t v89 = (char *)v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v90 = (char *)v75 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  v88 = (char *)v75 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  long long v85 = (char *)v75 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  v94 = (char *)v75 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  v87 = (char *)v75 - v39;
  MEMORY[0x270FA5388](v38);
  char v41 = (char *)v75 - v40;
  (*(void (**)(char *, void, uint64_t))(v24 + 16))(v26, v95, v23);
  sub_250F0C5D0();
  sub_250F0C330();
  uint64_t v81 = v16;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v78 = v22;
  v42(v22, v15);
  v79 = v14;
  sub_250F0CE10();
  os_log_type_t v95 = *(void (**)(char *, char *, uint64_t))(v97 + 16);
  v95(v94, v41, v27);
  uint64_t v43 = v86;
  sub_250F0C5D0();
  uint64_t v44 = (uint64_t)v91;
  sub_250F0C300();
  v86 = (char *)v15;
  v75[1] = v16 + 8;
  v75[0] = v42;
  v42(v43, v15);
  uint64_t v45 = v85;
  uint64_t v46 = v95;
  v95(v85, (char *)(v44 + *(int *)(v93 + 36)), v27);
  sub_250E8BCFC(v44, (uint64_t (*)(void))sub_250E9374C);
  sub_250E8E768(&qword_26B20E340, MEMORY[0x263F090E8]);
  uint64_t v47 = v94;
  if (sub_250F0CEF0()) {
    uint64_t v48 = v45;
  }
  else {
    uint64_t v48 = v47;
  }
  uint64_t v49 = v87;
  v46(v87, v48, v27);
  uint64_t v50 = v97;
  objc_super v51 = *(void (**)(char *, uint64_t))(v97 + 8);
  v51(v45, v27);
  v51(v47, v27);
  v51(v41, v27);
  uint64_t v52 = *(void (**)(char *, char *, uint64_t))(v50 + 32);
  uint64_t v97 = v50 + 32;
  uint64_t v91 = v52;
  v52(v41, v49, v27);
  v53 = v88;
  sub_250F0C620();
  v54 = v89;
  sub_250F0C610();
  char v55 = sub_250F0CEE0();
  v94 = v41;
  if (v55) {
    id v56 = v54;
  }
  else {
    id v56 = v41;
  }
  long long v57 = v90;
  v95(v90, v56, v27);
  v51(v54, v27);
  uint64_t v58 = v57;
  uint64_t result = sub_250F0CF00();
  if (result)
  {
    uint64_t v89 = (char *)v51;
    uint64_t v60 = v91;
    uint64_t v61 = v92;
    uint64_t v62 = v76;
    v63 = &v76[*(int *)(v92 + 48)];
    v91(v76, v53, v27);
    v60(v63, v58, v27);
    v64 = v80;
    uint64_t v65 = &v80[*(int *)(v61 + 48)];
    id v66 = v95;
    v95(v80, v62, v27);
    v66(v65, v63, v27);
    uint64_t v67 = (uint64_t)v83;
    v60(v83, v64, v27);
    uint64_t v68 = (void (*)(char *, uint64_t))v89;
    ((void (*)(char *, uint64_t))v89)(v65, v27);
    uint64_t v69 = &v64[*(int *)(v92 + 48)];
    v60(v64, v62, v27);
    v60(v69, v63, v27);
    v60((char *)(v67 + *(int *)(v93 + 36)), v69, v27);
    v68(v64, v27);
    uint64_t v70 = v82;
    sub_250E8E698(v67, v82, (uint64_t (*)(void))sub_250E9374C);
    sub_250E8DB70(v70, v67, (uint64_t (*)(void))sub_250E9374C);
    uint64_t v71 = v77;
    sub_250F0C5D0();
    sub_250F0C330();
    v72 = v86;
    ((void (*)(char *, char *))v75[0])(v71, v86);
    uint64_t v73 = v78;
    sub_250F0C2F0();
    sub_250E8BCFC(v70, (uint64_t (*)(void))sub_250E9374C);
    v68(v94, v27);
    uint64_t v74 = v84 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, char *))(v81 + 40))(v74, v73, v72);
    return swift_endAccess();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_250E8E630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E8E698(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250E8E700()
{
  if (!qword_26B20EDE0)
  {
    sub_250F0CE70();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EDE0);
    }
  }
}

uint64_t sub_250E8E768(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250E8E7B0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v2 = sub_250F0C1B0();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_250F0C340();
  uint64_t v20 = *(void *)(v22 - 8);
  MEMORY[0x270FA5388](v22);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_250F0CE70();
  uint64_t v7 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  uint64_t v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_250F0BF30();
  uint64_t v10 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v12 = (char *)&v19 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0C640();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v1 + *(void *)(*(void *)v1 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v17, v13);
  sub_250F0C620();
  sub_250F0C5D0();
  sub_250F0C330();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v6, v22);
  sub_250F0CD90();
  (*(void (**)(char *, uint64_t))(v23 + 8))(v4, v24);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v21);
  sub_250F0BF00();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v19);
  return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v16, v13);
}

uint64_t sub_250E8EB50(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4))
  {
    uint64_t v5 = sub_250F0C640();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
    swift_bridgeObjectRelease();
    uint64_t v6 = a1 + *(int *)(v4 + 28);
    uint64_t v7 = sub_250F0C060();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  }
  uint64_t v8 = a1 + *(int *)(a2 + 20);
  uint64_t v9 = sub_250F0C0C0();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8);
  return v10(v8, v9);
}

uint64_t sub_250E8EC90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v22 = a2;
  uint64_t v3 = sub_250F0C640();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
  if (v9(a1, 1, v7)
    || ((*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3),
        char v10 = sub_250E92778(),
        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3),
        (v10 & 1) == 0))
  {
    uint64_t v16 = v22;
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v8 + 56))(v22, 1, 1, v7);
    uint64_t v17 = *(int *)(type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0) + 20);
    uint64_t v18 = a1 + v17;
    uint64_t v19 = v16 + v17;
    uint64_t v20 = sub_250F0C0C0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, v18, v20);
  }
  else
  {
    uint64_t result = v9(a1, 1, v7);
    if (result) {
      return sub_250E9361C(a1, v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    }
    uint64_t v12 = *(int *)(v7 + 24);
    uint64_t v13 = *(void *)(a1 + v12);
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (!v14)
    {
      *(void *)(a1 + v12) = v15;
      return sub_250E9361C(a1, v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    }
    __break(1u);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_250E8EF28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250EB06B8);
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_250E8EFA0@<X0>(unsigned int (**a1)(uint64_t, uint64_t, uint64_t)@<X0>, char *a2@<X1>, uint64_t *a3@<X8>)
{
  v308 = a2;
  v307 = a3;
  uint64_t ObjectType = swift_getObjectType();
  sub_250E926A4();
  uint64_t v287 = v4;
  uint64_t v286 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  v353 = (char *)&v281 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v284 = sub_250F0C110();
  uint64_t v283 = *(void *)(v284 - 8);
  MEMORY[0x270FA5388](v284);
  v282 = (char *)&v281 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E93E74(0);
  MEMORY[0x270FA5388](v7 - 8);
  v285 = (char *)&v281 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v348 = v9;
  uint64_t v320 = *(void *)(v9 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  v352 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)&v281 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v324 = (uint64_t)&v281 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v325 = (id *)((char *)&v281 - v15);
  MEMORY[0x270FA5388](v14);
  uint64_t v316 = (uint64_t)&v281 - v16;
  uint64_t v315 = sub_250F0C970();
  uint64_t v298 = *(void *)(v315 - 8);
  MEMORY[0x270FA5388](v315);
  v314 = (char *)&v281 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9241C(0);
  MEMORY[0x270FA5388](v18 - 8);
  v323 = (char *)&v281 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E922C0();
  MEMORY[0x270FA5388](v20 - 8);
  v331 = (char *)&v281 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E93070(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
  uint64_t v330 = v22;
  uint64_t v297 = *(void *)(v22 - 8);
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v322 = (uint64_t)&v281 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v23);
  uint64_t v321 = (uint64_t)&v281 - v25;
  uint64_t v349 = sub_250F0CE70();
  uint64_t v296 = *(void *)(v349 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v349);
  v341 = (char *)&v281 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  v340 = (char *)&v281 - v28;
  sub_250E93E40(0);
  MEMORY[0x270FA5388](v29 - 8);
  v344 = (char *)&v281 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v358 = sub_250F0C5A0();
  uint64_t v357 = *(void *)(v358 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v358 - 8);
  v351 = (char *)&v281 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  v339 = (char *)&v281 - v33;
  sub_250E92450();
  uint64_t v35 = MEMORY[0x270FA5388](v34 - 8);
  uint64_t v318 = (uint64_t)&v281 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v343 = (char *)&v281 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  v342 = (char *)&v281 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v354 = (uint64_t)&v281 - v41;
  sub_250E92334();
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v317 = (uint64_t)&v281 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v345 = sub_250F0C340();
  unint64_t v327 = *(void *)(v345 - 8);
  MEMORY[0x270FA5388](v345);
  v347 = (void (**)(char *, uint64_t))((char *)&v281 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_250E9374C();
  uint64_t v346 = v45;
  uint64_t v46 = MEMORY[0x270FA5388](v45);
  v338 = (char *)&v281 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v46);
  v295 = (char *)&v281 - v48;
  sub_250E9228C(0);
  MEMORY[0x270FA5388](v49 - 8);
  v333 = (void (**)(char *, uint64_t, uint64_t))((char *)&v281 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v51 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v332 = *(void *)(v51 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  uint64_t v326 = (uint64_t)&v281 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v52);
  uint64_t v336 = (uint64_t)&v281 - v54;
  uint64_t v55 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x270FA5388](v55 - 8);
  long long v57 = (char *)&v281 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v337 = sub_250F0CCB0();
  v350 = *(unint64_t **)(v337 - 8);
  uint64_t v58 = MEMORY[0x270FA5388](v337);
  uint64_t v302 = (uint64_t)&v281 - ((v59 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  v294 = (char *)&v281 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  v329 = (char *)&v281 - v63;
  MEMORY[0x270FA5388](v62);
  v289 = (char *)&v281 - v64;
  uint64_t v301 = sub_250F0C680();
  os_unfair_lock_t v300 = *(os_unfair_lock_t *)(v301 - 8);
  MEMORY[0x270FA5388](v301);
  uint64_t v299 = (uint64_t)&v281 - ((v65 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9263C();
  os_log_t v356 = v66;
  Class isa = v66[-1].isa;
  uint64_t v67 = MEMORY[0x270FA5388](v66);
  v288 = (char *)&v281 - ((v68 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v67);
  Class v355 = (Class)((char *)&v281 - v69);
  sub_250E92744(0);
  MEMORY[0x270FA5388](v70 - 8);
  v72 = (char *)&v281 - ((v71 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_250F0CA40();
  uint64_t v74 = *(void (***)(char *, char *, uint64_t))(v73 - 8);
  MEMORY[0x270FA5388](v73);
  v312 = (char *)&v281 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = sub_250F0C640();
  uint64_t v77 = *(void *)(v76 - 8);
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v293 = (char *)&v281 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = MEMORY[0x270FA5388](v78);
  v292 = (char *)&v281 - v81;
  uint64_t v82 = MEMORY[0x270FA5388](v80);
  v290 = (char *)&v281 - v83;
  uint64_t v84 = MEMORY[0x270FA5388](v82);
  uint64_t v305 = (uint64_t)&v281 - v85;
  uint64_t v86 = MEMORY[0x270FA5388](v84);
  v319 = (void (**)(char *, uint64_t, uint64_t, uint64_t))((char *)&v281 - v87);
  MEMORY[0x270FA5388](v86);
  uint64_t v89 = (char *)&v281 - v88;
  uint64_t v90 = (char *)a1 + *((void *)*a1 + 13);
  swift_beginAccess();
  uint64_t v309 = v77;
  uint64_t v91 = *(void (**)(char *, char *, uint64_t))(v77 + 16);
  v291 = v90;
  uint64_t v311 = v76;
  v334 = v91;
  v91(v89, v90, v76);
  sub_250F0CBD0();
  sub_250F0CBC0();
  sub_250F0CA90();
  swift_allocObject();
  uint64_t v306 = sub_250F0CA80();
  uint64_t v92 = sub_250F0CA60();
  v310 = v89;
  v328 = a1;
  if (v92)
  {
    uint64_t v281 = v51;
    uint64_t v93 = v57;
    uint64_t v94 = (uint64_t)a1[2];
    os_log_type_t v95 = *(void **)(v94 + 16);
    swift_retain();
    id v96 = v95;
    sub_250EFC0FC(v96, (uint64_t)v72);

    if (((unsigned int (*)(char *, uint64_t, uint64_t))v74[6])(v72, 1, v73) == 1)
    {
      swift_release();
      uint64_t v92 = sub_250E8BC3C((uint64_t)v72, (uint64_t (*)(void))sub_250E92744);
    }
    else
    {
      uint64_t v97 = v312;
      v74[4](v312, v72, v73);
      uint64_t v98 = v299;
      sub_250EFCB28(v299);
      Class v99 = v355;
      sub_250F0CA70();
      (*(void (**)(uint64_t, uint64_t))&v300[2]._os_unfair_lock_opaque)(v98, v301);
      swift_getOpaqueTypeConformance2();
      os_log_t v100 = v356;
      if ((sub_250F0D140() & 1) == 0)
      {
        uint64_t v354 = v94;
        v347 = (void (**)(char *, uint64_t))v74;
        uint64_t v349 = v73;
        v238 = v289;
        sub_250F0CC90();
        Class v239 = isa;
        v240 = v288;
        (*((void (**)(char *, Class, os_log_t))isa + 2))(v288, v99, v100);
        v241 = sub_250F0CCA0();
        os_log_type_t v242 = sub_250F0D1B0();
        if (os_log_type_enabled(v241, v242))
        {
          v243 = v240;
          uint64_t v244 = swift_slowAlloc();
          uint64_t v345 = swift_slowAlloc();
          uint64_t v359 = v345;
          *(_DWORD *)uint64_t v244 = 136446722;
          nullsub_1(ObjectType);
          uint64_t v245 = sub_250F0D7B0();
          uint64_t v361 = sub_250E8BE44(v245, v246, &v359);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          *(_WORD *)(v244 + 12) = 2050;
          uint64_t v247 = sub_250F0D130();
          uint64_t v346 = *((void *)v239 + 1);
          ((void (*)(char *, os_log_t))v346)(v243, v100);
          uint64_t v361 = v247;
          sub_250F0D300();
          *(_WORD *)(v244 + 22) = 2080;
          uint64_t v248 = v282;
          sub_250F0C100();
          uint64_t v249 = (uint64_t)v285;
          sub_250F0C0F0();
          (*(void (**)(char *, uint64_t))(v283 + 8))(v248, v284);
          uint64_t v250 = sub_250F0C0E0();
          uint64_t v251 = *(void *)(v250 - 8);
          if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v251 + 48))(v249, 1, v250) == 1)
          {
            sub_250E8BC3C(v249, (uint64_t (*)(void))sub_250E93E74);
            unint64_t v252 = 0xE300000000000000;
            uint64_t v253 = 7104878;
          }
          else
          {
            uint64_t v253 = sub_250F0C0D0();
            unint64_t v252 = v261;
            (*(void (**)(uint64_t, uint64_t))(v251 + 8))(v249, v250);
          }
          uint64_t v361 = sub_250E8BE44(v253, v252, &v359);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v241, v242, "[%{public}s] Intercepting query with demo dataset, returning %{public}ld summaries. Locale: %s", (uint8_t *)v244, 0x20u);
          uint64_t v262 = v345;
          swift_arrayDestroy();
          MEMORY[0x25338EC30](v262, -1, -1);
          MEMORY[0x25338EC30](v244, -1, -1);

          ((void (*)(char *, uint64_t))v350[1])(v289, v337);
          Class v99 = v355;
          os_log_t v100 = v356;
        }
        else
        {
          uint64_t v346 = *((void *)v239 + 1);
          ((void (*)(char *, os_log_t))v346)(v240, v100);

          ((void (*)(char *, uint64_t))v350[1])(v238, v337);
        }
        uint64_t v263 = sub_250F0D130();
        uint64_t v264 = MEMORY[0x263F8EE78];
        if (v263)
        {
          uint64_t v265 = v263;
          uint64_t v361 = MEMORY[0x263F8EE78];
          sub_250E93894(0, v263 & ~(v263 >> 63), 0);
          sub_250F0D120();
          if (v265 < 0)
          {
LABEL_76:
            __break(1u);
LABEL_77:
            uint64_t result = sub_250F0D600();
            __break(1u);
            return result;
          }
          v266 = (void (**)(char *))(v357 + 16);
          v267 = (void (**)(char *, uint64_t))(v357 + 8);
          uint64_t v268 = (uint64_t)v352;
          do
          {
            v269 = (void (*)(uint64_t *, void))sub_250F0D170();
            uint64_t v270 = *v266;
            long long v271 = v351;
            uint64_t v272 = v358;
            (*v266)(v351);
            v269(&v359, 0);
            ((void (*)(uint64_t, char *, uint64_t))v270)(v268, v271, v272);
            swift_storeEnumTagMultiPayload();
            (*v267)(v271, v272);
            uint64_t v273 = v361;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_250E93894(0, *(void *)(v273 + 16) + 1, 1);
              uint64_t v273 = v361;
            }
            unint64_t v275 = *(void *)(v273 + 16);
            unint64_t v274 = *(void *)(v273 + 24);
            uint64_t v268 = (uint64_t)v352;
            Class v99 = v355;
            if (v275 >= v274 >> 1)
            {
              sub_250E93894(v274 > 1, v275 + 1, 1);
              uint64_t v268 = (uint64_t)v352;
              uint64_t v273 = v361;
            }
            *(void *)(v273 + 16) = v275 + 1;
            sub_250E92F90(v268, v273+ ((*(unsigned __int8 *)(v320 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v320 + 80))+ *(void *)(v320 + 72) * v275, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
            v276 = v353;
            os_log_t v100 = v356;
            sub_250F0D160();
            --v265;
          }
          while (v265);
          (*(void (**)(char *, uint64_t))(v286 + 8))(v276, v287);
          uint64_t v264 = v361;
        }
        sub_250E923A8();
        v277 = v307;
        v307[3] = v278;
        v277[4] = sub_250E92074(&qword_26B20EE88, (void (*)(uint64_t))sub_250E923A8);
        swift_release();
        swift_release();
        uint64_t *v277 = v264;
        ((void (*)(Class, os_log_t))v346)(v99, v100);
        v347[1](v312, v349);
        return (*(uint64_t (**)(char *, uint64_t))(v309 + 8))(v310, v311);
      }
      swift_release();
      (*((void (**)(Class, os_log_t))isa + 1))(v99, v100);
      uint64_t v92 = ((uint64_t (*)(char *, uint64_t))v74[1])(v97, v73);
    }
    uint64_t v89 = v310;
    long long v57 = v93;
    uint64_t v51 = v281;
  }
  MEMORY[0x270FA5388](v92);
  v280 = v89;
  uint64_t v102 = v101 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v101 + 16);
  v103 = (os_unfair_lock_s *)(v101 + ((*(unsigned int *)(*(void *)v101 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v103);
  sub_250E924E4(v102, (uint64_t)v57);
  os_unfair_lock_unlock(v103);
  id v104 = v333;
  sub_250E920BC((uint64_t)v57, (uint64_t)v333, (uint64_t (*)(void))sub_250E9228C);
  int v105 = (*(uint64_t (**)(void, uint64_t, uint64_t))(v332 + 48))(v104, 1, v51);
  v304 = v57;
  if (v105 == 1)
  {
    sub_250E8BC3C((uint64_t)v104, (uint64_t (*)(void))sub_250E9228C);
    uint64_t v106 = v305;
    sub_250EABE20(v308, v305);
    if (sub_250E92778())
    {
      uint64_t v299 = v102;
      uint64_t v107 = v294;
      sub_250F0CC90();
      v108 = sub_250F0CCA0();
      os_log_type_t v109 = sub_250F0D1D0();
      BOOL v110 = os_log_type_enabled(v108, v109);
      uint64_t v301 = 0;
      os_unfair_lock_t v300 = v103;
      if (v110)
      {
        uint64_t v111 = (uint8_t *)swift_slowAlloc();
        uint64_t v112 = swift_slowAlloc();
        uint64_t v359 = v112;
        *(_DWORD *)uint64_t v111 = 136446210;
        nullsub_1(ObjectType);
        uint64_t v113 = sub_250F0D7B0();
        uint64_t v361 = sub_250E8BE44(v113, v114, &v359);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v108, v109, "[%{public}s] Cache miss", v111, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v112, -1, -1);
        MEMORY[0x25338EC30](v111, -1, -1);
      }

      ((void (*)(char *, uint64_t))v350[1])(v107, v337);
      uint64_t v115 = (uint64_t)v343;
      uint64_t v116 = v291;
      swift_beginAccess();
      uint64_t v117 = v311;
      (*(void (**)(char *, uint64_t, uint64_t))(v309 + 24))(v116, v106, v311);
      swift_endAccess();
      id v118 = v328;
      sub_250E8DD04(v106, (void (*)(char *, char *, uint64_t))v308);
      swift_retain();
      uint64_t v119 = sub_250EB7B5C();
      swift_release();
      uint64_t v120 = (uint64_t)v293;
      v334(v293, v116, v117);
      uint64_t v121 = (uint64_t *)((char *)v118 + *((void *)*v118 + 14));
      uint64_t v122 = *v121;
      uint64_t v123 = v121[1];
      uint64_t v124 = *(uint64_t *)((char *)v118 + *((void *)*v118 + 15));
      swift_retain();
      swift_unknownObjectRetain();
      uint64_t v125 = sub_250EA2F78(v119, v120, v122, v123, v124);
      v329 = v126;
      int v128 = v127;
      swift_release();
      v129 = (unint64_t *)(v125
                                + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
      uint64_t v326 = v125;
      uint64_t v337 = v125
           + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
      v352 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v320 + 56);
      v353 = (char *)(v320 + 56);
      os_log_t v356 = (os_log_t)(v320 + 48);
      uint64_t v336 = v357 + 16;
      v351 = (char *)(v357 + 56);
      v335 = (void (**)(char *, uint64_t, uint64_t))(v357 + 32);
      v334 = (void (*)(char *, char *, uint64_t))(v327 + 8);
      v333 = (void (**)(char *, uint64_t, uint64_t))(v296 + 16);
      uint64_t v332 = v296 + 8;
      v328 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v297 + 48);
      Class isa = (Class)(v298 + 32);
      v312 = (char *)(v298 + 8);
      v319 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v296 + 56);
      unint64_t v327 = MEMORY[0x263F8EE78];
      uint64_t v302 = 1;
      os_log_type_t v130 = (unint64_t *)&unk_26B20F050;
      uint64_t v131 = v348;
      uint64_t v132 = v358;
      uint64_t v133 = (uint64_t)v344;
      uint64_t v134 = (uint64_t)v342;
      v350 = v129;
      while (1)
      {
        uint64_t v135 = v354;
        v352(v354, 2, 2, v131);
        swift_beginAccess();
        sub_250E920BC(v135, v134, (uint64_t (*)(void))sub_250E92450);
        Class v355 = v356->isa;
        for (int i = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v355)(v134, 2, v131);
              i == 2;
              int i = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v355)(v134, 2, v131))
        {
          sub_250E8BC3C(v134, (uint64_t (*)(void))sub_250E92450);
          if (*(void *)(*v129 + 16))
          {
            swift_beginAccess();
            unint64_t v151 = *v129;
            int64_t v152 = *(void *)(*v129 + 16);
            if (!v152)
            {
              __break(1u);
              goto LABEL_76;
            }
            uint64_t v153 = v132;
            unint64_t v154 = (*(unsigned __int8 *)(v357 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v357 + 80);
            (*(void (**)(uint64_t, unint64_t, uint64_t))(v357 + 16))(v133, v151 + v154, v153);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            unint64_t *v129 = v151;
            if (!isUniquelyReferenced_nonNull_native || (unint64_t)(v152 - 1) > *(void *)(v151 + 24) >> 1)
            {
              unint64_t v151 = sub_250EA1F1C(isUniquelyReferenced_nonNull_native, v152, 1, v151, (unint64_t *)&unk_26B20EFC0, MEMORY[0x263F42D70], MEMORY[0x263F42D70], MEMORY[0x263F42D70]);
              unint64_t *v129 = v151;
            }
            unint64_t v156 = v151 + v154;
            uint64_t v157 = v358;
            swift_arrayDestroy();
            uint64_t v158 = *(void *)(v151 + 16);
            if (!v158) {
              goto LABEL_77;
            }
            uint64_t v159 = v158 - 1;
            uint64_t v160 = *(void *)(v357 + 72);
            if (v160 > 0 || v156 >= v156 + v160 + v160 * v159)
            {
              int v137 = v128;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              int v137 = v128;
              if (v160) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            --*(void *)(v151 + 16);
            unint64_t *v129 = v151;
            swift_endAccess();
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))v351)(v133, 0, 1, v157);
            v138 = *v335;
            id v139 = v339;
            (*v335)(v339, v133, v157);
            unsigned int v140 = v340;
            sub_250F0C4B0();
            v141 = v347;
            sub_250F0C5D0();
            uint64_t v142 = (uint64_t)v338;
            sub_250F0C300();
            (*(void (**)(void, uint64_t))v334)(v141, v345);
            v143 = v341;
            uint64_t v144 = v349;
            (*v333)(v341, v142 + *(int *)(v346 + 36), v349);
            sub_250E8BC3C(v142, (uint64_t (*)(void))sub_250E9374C);
            sub_250E92074((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
            sub_250F0D330();
            BOOL v145 = v361 == 0;
            uint64_t v146 = *(void (**)(char *, uint64_t))v332;
            uint64_t v147 = v143;
            uint64_t v133 = (uint64_t)v344;
            (*(void (**)(char *, uint64_t))v332)(v147, v144);
            uint64_t v148 = v144;
            v129 = v350;
            v146(v140, v148);
            uint64_t v132 = v358;
            int v128 = v145 | v137;
            uint64_t v115 = (uint64_t)v343;
            v138(v343, (uint64_t)v139, v358);
            uint64_t v131 = v348;
            swift_storeEnumTagMultiPayload();
            uint64_t v149 = 0;
            uint64_t v134 = (uint64_t)v342;
            os_log_type_t v130 = (unint64_t *)&unk_26B20F050;
          }
          else
          {
            uint64_t v149 = 1;
            (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))v351)(v133, 1, 1, v132);
            sub_250E8BC3C(v133, (uint64_t (*)(void))sub_250E93E40);
            if (v128)
            {
              int v128 = 1;
            }
            else
            {
              uint64_t v161 = (uint64_t)v331;
              sub_250F0D610();
              if ((*v328)(v161, 1, v330) == 1)
              {
                sub_250E8BC3C(v161, (uint64_t (*)(void))sub_250E922C0);
                int v128 = 1;
                uint64_t v162 = (uint64_t)v323;
                (*v319)(v323, 1, 1, v349);
                sub_250ECC2B8(v162);
                sub_250E8BC3C(v162, (uint64_t (*)(void))sub_250E9241C);
                uint64_t v149 = 2;
                v129 = v350;
              }
              else
              {
                uint64_t v163 = (void (*)(uint64_t))MEMORY[0x263F42EB8];
                uint64_t v164 = v161;
                v165 = v130;
                uint64_t v166 = v321;
                sub_250E92F90(v164, v321, v165, MEMORY[0x263F42EB8]);
                id v167 = v163;
                uint64_t v168 = v322;
                sub_250E930E0(v166, v322, v165, v167);
                if (swift_getEnumCaseMultiPayload() == 1)
                {
                  sub_250E93B9C(v166, v165, MEMORY[0x263F42EB8]);
                  char v169 = *(unsigned char *)(v168 + 8);
                  *(void *)uint64_t v115 = *(void *)v168;
                  *(unsigned char *)(v115 + 8) = v169;
                  int v128 = 1;
                  swift_storeEnumTagMultiPayload();
                  uint64_t v149 = 0;
                }
                else
                {
                  uint64_t v170 = (uint64_t)v314;
                  uint64_t v171 = v315;
                  (*(void (**)(char *, uint64_t, uint64_t))isa)(v314, v168, v315);
                  sub_250ECB82C(v170);
                  (*(void (**)(uint64_t, uint64_t))v312)(v170, v171);
                  sub_250E93B9C(v166, v165, MEMORY[0x263F42EB8]);
                  int v128 = 0;
                  uint64_t v149 = 2;
                }
                os_log_type_t v130 = v165;
                v129 = v350;
              }
            }
          }
          v352(v115, v149, 2, v131);
          uint64_t v150 = v354;
          sub_250E8BC3C(v354, (uint64_t (*)(void))sub_250E92450);
          sub_250E8CE1C(v115, v150, (uint64_t (*)(void))sub_250E92450);
          sub_250E920BC(v150, v134, (uint64_t (*)(void))sub_250E92450);
        }
        sub_250E8BC3C(v134, (uint64_t (*)(void))sub_250E92450);
        uint64_t v172 = v318;
        sub_250E8CE1C(v354, v318, (uint64_t (*)(void))sub_250E92450);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v355)(v172, 2, v131))
        {
          uint64_t v173 = 1;
          uint64_t v174 = v317;
        }
        else
        {
          uint64_t v174 = v317;
          sub_250E92F90(v172, v317, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
          uint64_t v173 = 0;
        }
        v352(v174, v173, 1, v131);
        if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v355)(v174, 1, v131) == 1) {
          break;
        }
        unint64_t v175 = (void (*)(uint64_t))MEMORY[0x263F42D70];
        uint64_t v176 = v316;
        sub_250E92F90(v174, v316, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
        sub_250E930E0(v176, (uint64_t)v325, (unint64_t *)&qword_26B20F030, v175);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_250E93B9C(v176, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);

          uint64_t v302 = 0;
          os_log_type_t v130 = (unint64_t *)&unk_26B20F050;
          v129 = v350;
        }
        else
        {
          sub_250E930E0(v176, v324, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            unint64_t v177 = v327;
          }
          else {
            unint64_t v177 = sub_250EA23F4(0, *(void *)(v327 + 16) + 1, 1, v327);
          }
          unint64_t v179 = *(void *)(v177 + 16);
          unint64_t v178 = *(void *)(v177 + 24);
          if (v179 >= v178 >> 1) {
            unint64_t v177 = sub_250EA23F4(v178 > 1, v179 + 1, 1, v177);
          }
          *(void *)(v177 + 16) = v179 + 1;
          unint64_t v180 = (*(unsigned __int8 *)(v320 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v320 + 80);
          unint64_t v327 = v177;
          id v181 = (void (*)(uint64_t))MEMORY[0x263F42D70];
          sub_250E92F90(v324, v177 + v180 + *(void *)(v320 + 72) * v179, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
          sub_250E93B9C(v176, (unint64_t *)&qword_26B20F030, v181);
          sub_250E93B9C((uint64_t)v325, (unint64_t *)&qword_26B20F030, v181);
          uint64_t v132 = v358;
          os_log_type_t v130 = (unint64_t *)&unk_26B20F050;
          v129 = v350;
        }
      }
      swift_release();
      uint64_t v231 = swift_release();
      if (v302)
      {
        MEMORY[0x270FA5388](v231);
        uint64_t v232 = (uint64_t)v304;
        uint64_t v233 = v305;
        *(&v281 - 6) = (uint64_t)v304;
        *(&v281 - 5) = v233;
        uint64_t v234 = v327;
        v279[0] = v327;
        v279[1] = v308;
        v280 = (char *)ObjectType;
        swift_bridgeObjectRetain();
        uint64_t v235 = v300;
        os_unfair_lock_lock(v300);
        sub_250EA3184(v299);
        os_unfair_lock_unlock(v235);
        uint64_t v231 = swift_bridgeObjectRelease();
        uint64_t v236 = v311;
        uint64_t v237 = v310;
      }
      else
      {
        uint64_t v236 = v311;
        uint64_t v237 = v310;
        uint64_t v232 = (uint64_t)v304;
        uint64_t v233 = v305;
        uint64_t v234 = v327;
      }
      MEMORY[0x270FA5388](v231);
      v280 = v237;
      swift_bridgeObjectRetain();
      uint64_t v257 = sub_250E92CB4((uint64_t (*)(char *))sub_250E9314C, (uint64_t)v279, v234);
      swift_bridgeObjectRelease();
      sub_250E923A8();
      v258 = v307;
      v307[3] = v259;
      v258[4] = sub_250E92074(&qword_26B20EE88, (void (*)(uint64_t))sub_250E923A8);
      swift_release();
      uint64_t *v258 = v257;
      v260 = *(void (**)(uint64_t, uint64_t))(v309 + 8);
      v260(v233, v236);
      sub_250E8BC3C(v232, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
      return ((uint64_t (*)(char *, uint64_t))v260)(v237, v236);
    }
    else
    {
      uint64_t v207 = v302;
      sub_250F0CC90();
      uint64_t v208 = v290;
      uint64_t v209 = v311;
      id v210 = (void (*)(char *, uint64_t, uint64_t))v334;
      v334(v290, v89, v311);
      v211 = v292;
      v210(v292, v106, v209);
      v212 = sub_250F0CCA0();
      os_log_type_t v213 = sub_250F0D1D0();
      int v214 = v213;
      if (os_log_type_enabled(v212, v213))
      {
        uint64_t v215 = swift_slowAlloc();
        uint64_t v358 = swift_slowAlloc();
        uint64_t v359 = v358;
        *(_DWORD *)uint64_t v215 = 136446722;
        LODWORD(v357) = v214;
        nullsub_1(ObjectType);
        uint64_t v216 = sub_250F0D7B0();
        uint64_t v361 = sub_250E8BE44(v216, v217, &v359);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v215 + 12) = 2080;
        sub_250E92074(&qword_269B10A88, MEMORY[0x263F42D90]);
        uint64_t v218 = sub_250F0D650();
        uint64_t v361 = sub_250E8BE44(v218, v219, &v359);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        unint64_t v220 = *(void (**)(char *, uint64_t))(v309 + 8);
        v220(v208, v311);
        *(_WORD *)(v215 + 22) = 2080;
        uint64_t v106 = v305;
        uint64_t v221 = sub_250F0D650();
        uint64_t v361 = sub_250E8BE44(v221, v222, &v359);
        uint64_t v209 = v311;
        sub_250F0D300();
        swift_bridgeObjectRelease();
        v220(v211, v209);
        _os_log_impl(&dword_250E86000, v212, (os_log_type_t)v357, "[%{public}s] Ignoring cache key: %s ⊈ %s", (uint8_t *)v215, 0x20u);
        uint64_t v223 = v358;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v223, -1, -1);
        MEMORY[0x25338EC30](v215, -1, -1);

        ((void (*)(uint64_t, uint64_t))v350[1])(v302, v337);
      }
      else
      {
        unint64_t v220 = *(void (**)(char *, uint64_t))(v309 + 8);
        v220(v208, v209);
        v220(v211, v209);

        ((void (*)(uint64_t, uint64_t))v350[1])(v207, v337);
      }
      sub_250EA2690(0, (unint64_t *)&qword_26B20E310, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_250EA1C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
      v254 = v307;
      v307[3] = v255;
      v254[4] = sub_250EA1B70();
      v256 = v328;
      swift_retain();
      swift_release();
      uint64_t *v254 = (uint64_t)v256;
      v220((char *)v106, v209);
      sub_250E8BC3C((uint64_t)v304, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
      return ((uint64_t (*)(char *, uint64_t))v220)(v310, v209);
    }
  }
  else
  {
    uint64_t v182 = (uint64_t)v104;
    uint64_t v183 = v51;
    uint64_t v301 = 0;
    uint64_t v184 = v336;
    sub_250E8CE1C(v182, v336, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    v185 = v329;
    sub_250F0CC90();
    uint64_t v186 = v326;
    sub_250E920BC(v184, v326, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    int v187 = v319;
    uint64_t v188 = v311;
    v334((char *)v319, v89, v311);
    uint64_t v189 = sub_250F0CCA0();
    os_log_type_t v190 = sub_250F0D1D0();
    int v191 = v190;
    BOOL v192 = os_log_type_enabled(v189, v190);
    uint64_t v193 = v347;
    if (v192)
    {
      uint64_t v194 = swift_slowAlloc();
      uint64_t v358 = swift_slowAlloc();
      uint64_t v361 = v358;
      *(_DWORD *)uint64_t v194 = 136446722;
      LODWORD(v357) = v191;
      nullsub_1(ObjectType);
      uint64_t v195 = sub_250F0D7B0();
      uint64_t v359 = sub_250E8BE44(v195, v196, &v361);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v194 + 12) = 2048;
      uint64_t v197 = v183;
      uint64_t v198 = *(int *)(v183 + 24);
      os_log_t v356 = v189;
      uint64_t v199 = *(void *)(v186 + v198);
      sub_250E8BC3C(v186, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      uint64_t v359 = v199;
      sub_250F0D300();
      *(_WORD *)(v194 + 22) = 2080;
      sub_250F0C5D0();
      uint64_t v200 = (uint64_t)v295;
      sub_250F0C300();
      (*(void (**)(void, uint64_t))(v327 + 8))(v193, v345);
      uint64_t v359 = 0;
      unint64_t v360 = 0xE000000000000000;
      sub_250F0D560();
      sub_250F0CFB0();
      sub_250F0D560();
      uint64_t v201 = v359;
      unint64_t v202 = v360;
      sub_250E8BC3C(v200, (uint64_t (*)(void))sub_250E9374C);
      uint64_t v359 = sub_250E8BE44(v201, v202, &v361);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      v203 = *(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v309 + 8);
      v203(v187, v311);
      os_log_t v204 = v356;
      _os_log_impl(&dword_250E86000, v356, (os_log_type_t)v357, "[%{public}s] Cache hit: %ld - %s", (uint8_t *)v194, 0x20u);
      uint64_t v205 = v358;
      swift_arrayDestroy();
      uint64_t v188 = v311;
      MEMORY[0x25338EC30](v205, -1, -1);
      MEMORY[0x25338EC30](v194, -1, -1);

      uint64_t v206 = ((uint64_t (*)(char *, uint64_t))v350[1])(v329, v337);
    }
    else
    {
      sub_250E8BC3C(v186, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      v203 = *(void (**)(void (**)(char *, uint64_t, uint64_t, uint64_t), uint64_t))(v309 + 8);
      v203(v187, v188);

      uint64_t v206 = ((uint64_t (*)(char *, uint64_t))v350[1])(v185, v337);
      uint64_t v197 = v183;
    }
    uint64_t v224 = v336;
    uint64_t v225 = *(void *)(v336 + *(int *)(v197 + 20));
    MEMORY[0x270FA5388](v206);
    v226 = v310;
    v280 = v310;
    swift_bridgeObjectRetain();
    uint64_t v227 = sub_250E92CB4((uint64_t (*)(char *))sub_250E9314C, (uint64_t)v279, v225);
    sub_250E923A8();
    v228 = v307;
    v307[3] = v229;
    v228[4] = sub_250E92074(&qword_26B20EE88, (void (*)(uint64_t))sub_250E923A8);
    swift_release();
    uint64_t *v228 = v227;
    sub_250E8BC3C(v224, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_250E8BC3C((uint64_t)v304, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
    return ((uint64_t (*)(char *, uint64_t))v203)(v226, v188);
  }
}

void sub_250E91FF0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(uint64_t a1)
{
  return sub_250E8BDBC(a1, qword_26B20E258);
}

uint64_t sub_250E92074(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250E920BC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E92124(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_250EB1070(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_250E921A4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_250F0C060();
  uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16);
  swift_bridgeObjectRetain();
  v12(v9, v10, v11);
  return a1;
}

void sub_250E9228C(uint64_t a1)
{
}

void sub_250E922C0()
{
  if (!qword_26B20F060)
  {
    sub_250E93070(255, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F060);
    }
  }
}

void sub_250E92334()
{
  if (!qword_26B20F040)
  {
    sub_250E93070(255, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F040);
    }
  }
}

void sub_250E923A8()
{
  if (!qword_26B20EE80)
  {
    sub_250E93070(255, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    unint64_t v0 = sub_250F0D0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EE80);
    }
  }
}

void sub_250E9241C(uint64_t a1)
{
}

void sub_250E92450()
{
  if (!qword_26B20EB60[0])
  {
    type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(255);
    sub_250E9FE18((unint64_t *)&unk_26B20EBF0, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
    unint64_t v0 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult();
    if (!v1) {
      atomic_store(v0, qword_26B20EB60);
    }
  }
}

uint64_t sub_250E924E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_250E8EC90(a1, a2);
}

unint64_t sub_250E92500()
{
  unint64_t result = qword_26B20EA20;
  if (!qword_26B20EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EA20);
  }
  return result;
}

uint64_t sub_250E92554(uint64_t a1, uint64_t a2)
{
  sub_250E925B8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_250E925B8(uint64_t a1)
{
}

uint64_t type metadata accessor for OutlierContextProvider()
{
  uint64_t result = qword_26B20E5E8;
  if (!qword_26B20E5E8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_250E9263C()
{
  if (!qword_26B20E4C8)
  {
    OpaqueTypeMetadata2 = swift_getOpaqueTypeMetadata2();
    if (!v1) {
      atomic_store(OpaqueTypeMetadata2, (unint64_t *)&qword_26B20E4C8);
    }
  }
}

void sub_250E926A4()
{
  if (!qword_26B20E490)
  {
    swift_getOpaqueTypeConformance2();
    swift_getOpaqueTypeMetadata2();
    unint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    if (!v1) {
      atomic_store(AssociatedTypeWitness, (unint64_t *)&qword_26B20E490);
    }
  }
}

void sub_250E92744(uint64_t a1)
{
}

uint64_t sub_250E92778()
{
  sub_250E9374C();
  uint64_t v46 = v0;
  uint64_t v1 = MEMORY[0x270FA5388](v0);
  uint64_t v50 = (uint64_t)&v43 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v49 = (uint64_t)&v43 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v48 = (char *)&v43 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v47 = (char *)&v43 - v7;
  uint64_t v8 = sub_250F0C1B0();
  uint64_t v51 = *(void *)(v8 - 8);
  uint64_t v52 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v43 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v43 - v12;
  uint64_t v14 = sub_250F0C340();
  uint64_t v53 = *(void *)(v14 - 8);
  uint64_t v54 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v43 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  uint64_t v20 = (char *)&v43 - v19;
  uint64_t v21 = MEMORY[0x270FA5388](v18);
  uint64_t v23 = (char *)&v43 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v25 = (char *)&v43 - v24;
  uint64_t v26 = sub_250F0C5F0();
  if (v26 != sub_250F0C5F0()) {
    goto LABEL_5;
  }
  uint64_t v44 = v20;
  uint64_t v45 = v17;
  sub_250F0C5D0();
  sub_250F0C330();
  uint64_t v27 = *(void (**)(char *, uint64_t))(v53 + 8);
  uint64_t v28 = v25;
  uint64_t v29 = v54;
  v27(v28, v54);
  sub_250F0C5D0();
  sub_250F0C330();
  v27(v23, v29);
  char v30 = MEMORY[0x25338CD70](v13, v11);
  uint64_t v31 = v52;
  uint64_t v32 = *(void (**)(char *, uint64_t))(v51 + 8);
  v32(v11, v52);
  v32(v13, v31);
  if (v30)
  {
    uint64_t v33 = v44;
    sub_250F0C5D0();
    uint64_t v34 = (uint64_t)v47;
    sub_250F0C300();
    uint64_t v35 = v33;
    uint64_t v36 = v54;
    v27(v35, v54);
    uint64_t v37 = v45;
    sub_250F0C5D0();
    uint64_t v38 = (uint64_t)v48;
    sub_250F0C300();
    v27(v37, v36);
    sub_250F0CE70();
    sub_250E92C80();
    LOBYTE(v36) = sub_250F0CF00();
    uint64_t v39 = v49;
    sub_250E92C1C(v34, v49);
    uint64_t v40 = v50;
    sub_250E92C1C(v38, v50);
    if (v36) {
      char v41 = sub_250F0CEF0();
    }
    else {
      char v41 = 0;
    }
    sub_250E92BC0(v40);
    sub_250E92BC0(v39);
    sub_250E92BC0(v38);
    sub_250E92BC0(v34);
  }
  else
  {
LABEL_5:
    char v41 = 0;
  }
  return v41 & 1;
}

uint64_t sub_250E92BC0(uint64_t a1)
{
  sub_250E9374C();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_250E92C1C(uint64_t a1, uint64_t a2)
{
  sub_250E9374C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250E92C80()
{
  return sub_250E92074(&qword_26B20E340, MEMORY[0x263F090E8]);
}

uint64_t sub_250E92CB4(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v24 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v23 = (uint64_t)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t v25 = MEMORY[0x263F8EE78];
  uint64_t v22 = *(void *)(a3 + 16);
  if (v22)
  {
    unint64_t v14 = 0;
    uint64_t v15 = MEMORY[0x263F8EE78];
    v20[1] = a2;
    uint64_t v21 = a3;
    v20[0] = a1;
    while (v14 < *(void *)(a3 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80);
      uint64_t v13 = *(void *)(v24 + 72);
      sub_250E930E0(a3 + v16 + v13 * v14, (uint64_t)v12, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      char v17 = a1(v12);
      if (v3)
      {
        sub_250E93B9C((uint64_t)v12, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
        swift_release();
        swift_bridgeObjectRelease();
        return v13;
      }
      if (v17)
      {
        sub_250E92F90((uint64_t)v12, v23, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_250E93894(0, *(void *)(v15 + 16) + 1, 1);
        }
        uint64_t v15 = v25;
        unint64_t v19 = *(void *)(v25 + 16);
        unint64_t v18 = *(void *)(v25 + 24);
        if (v19 >= v18 >> 1)
        {
          sub_250E93894(v18 > 1, v19 + 1, 1);
          uint64_t v15 = v25;
        }
        *(void *)(v15 + 16) = v19 + 1;
        uint64_t result = sub_250E92F90(v23, v15 + v16 + v19 * v13, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
        a3 = v21;
        a1 = (uint64_t (*)(char *))v20[0];
      }
      else
      {
        uint64_t result = sub_250E93B9C((uint64_t)v12, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      }
      if (v22 == ++v14)
      {
        uint64_t v13 = v25;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v13;
  }
  return result;
}

uint64_t sub_250E92F90(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_250E93070(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_250E92FFC(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t), void (*a5)(void))
{
  sub_250EA7158(0, a3, a4, a5);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

void sub_250E93070(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    sub_250E92500();
    unint64_t v4 = sub_250F0D740();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_250E930E0(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_250E93070(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a2, a1, v6);
  return a2;
}

uint64_t sub_250E9314C(uint64_t a1)
{
  return sub_250E9316C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_250E9316C(uint64_t a1, uint64_t a2)
{
  return sub_250E93188(a1, a2) & 1;
}

uint64_t sub_250E93188(uint64_t a1, uint64_t a2)
{
  uint64_t v34 = a2;
  uint64_t v40 = a1;
  uint64_t v37 = sub_250F0CE70();
  uint64_t v39 = *(void *)(v37 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v37);
  uint64_t v38 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v36 = (char *)&v31 - v4;
  sub_250E9374C();
  uint64_t v33 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  uint64_t v35 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_250F0C340();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_250F0C5A0();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  char v17 = (char *)&v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E937E0();
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (id *)((char *)&v31 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_250E9361C(v40, (uint64_t)v20, (uint64_t (*)(void))sub_250E937E0);
  if (swift_getEnumCaseMultiPayload() == 1)
  {

    char v21 = 0;
  }
  else
  {
    uint64_t v32 = v15;
    uint64_t v22 = *(void (**)(char *, id *, uint64_t))(v15 + 32);
    uint64_t v40 = v14;
    v22(v17, v20, v14);
    sub_250F0C5D0();
    sub_250F0C300();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v23 = v36;
    sub_250F0C4B0();
    sub_250E9384C(&qword_26B20E340, MEMORY[0x263F090E8]);
    uint64_t v24 = v37;
    char v25 = sub_250F0CEF0();
    uint64_t v27 = v38;
    uint64_t v26 = v39;
    (*(void (**)(char *, char *, uint64_t))(v39 + 16))(v38, v23, v24);
    uint64_t v28 = v35;
    sub_250E9361C((uint64_t)v9, v35, (uint64_t (*)(void))sub_250E9374C);
    if (v25) {
      char v21 = sub_250F0CF00();
    }
    else {
      char v21 = 0;
    }
    sub_250E936EC(v28, (uint64_t (*)(void))sub_250E9374C);
    uint64_t v29 = *(void (**)(char *, uint64_t))(v26 + 8);
    v29(v27, v24);
    v29(v23, v24);
    sub_250E936EC((uint64_t)v9, (uint64_t (*)(void))sub_250E9374C);
    (*(void (**)(char *, uint64_t))(v32 + 8))(v17, v40);
  }
  return v21 & 1;
}

uint64_t sub_250E9361C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E93684(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250E936EC(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_250E9374C()
{
  if (!qword_26B20DED0)
  {
    sub_250F0CE70();
    sub_250E9FE18(&qword_26B20E340, MEMORY[0x263F090E8]);
    unint64_t v0 = sub_250F0CF20();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20DED0);
    }
  }
}

void sub_250E937E0()
{
  if (!qword_26B20F030)
  {
    sub_250F0C5A0();
    sub_250E92500();
    unint64_t v0 = sub_250F0D740();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F030);
    }
  }
}

uint64_t sub_250E9384C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250E93894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_250E938B4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_250E938B4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_250E93B28();
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v14 - v12 == 0x8000000000000000 && v11 == -1) {
    goto LABEL_34;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = (char *)v13 + v18;
  uint64_t v20 = (char *)a4 + v18;
  if (a1)
  {
    if (v13 < a4 || v19 >= &v20[*(void *)(v17 + 72) * v8])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v21 = *(void *)(v17 + 72) * v8;
  uint64_t v22 = &v19[v21];
  unint64_t v23 = (unint64_t)&v20[v21];
  if (v20 >= v22 || (unint64_t)v19 >= v23)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_36:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

void sub_250E93B28()
{
  if (!qword_26B20EFF8)
  {
    sub_250E93070(255, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    unint64_t v0 = sub_250F0D660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EFF8);
    }
  }
}

uint64_t sub_250E93B9C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_250E93070(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

char *sub_250E93BF8(char *a1, char *a2, uint64_t a3)
{
  unint64_t v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_250F0C640();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v10 = v6[7];
    uint64_t v19 = &a1[v10];
    uint64_t v11 = &a2[v10];
    uint64_t v12 = sub_250F0C060();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v19, v11, v12);
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_250F0C0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

uint64_t sub_250E93E2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250EB07E4);
}

void sub_250E93E40(uint64_t a1)
{
}

void sub_250E93E74(uint64_t a1)
{
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_2(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_3(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_6(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_7(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_copy_helper_11(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t block_destroy_helper_0()
{
  return swift_release();
}

uint64_t block_destroy_helper_1()
{
  return swift_release();
}

uint64_t block_destroy_helper_2()
{
  return swift_release();
}

uint64_t block_destroy_helper_3()
{
  return swift_release();
}

uint64_t block_destroy_helper_4()
{
  return swift_release();
}

uint64_t block_destroy_helper_5()
{
  return swift_release();
}

uint64_t block_destroy_helper_6()
{
  return swift_release();
}

uint64_t block_destroy_helper_7()
{
  return swift_release();
}

uint64_t block_destroy_helper_8()
{
  return swift_release();
}

uint64_t block_destroy_helper_9()
{
  return swift_release();
}

uint64_t block_destroy_helper_10()
{
  return swift_release();
}

uint64_t block_destroy_helper_11()
{
  return swift_release();
}

id sub_250E93FF8(uint64_t a1, id a2, uint64_t a3, char a4, uint64_t a5)
{
  id v10 = objc_msgSend(a2, sel_dataCount);
  if (!v10) {
    goto LABEL_12;
  }
  if ((uint64_t)v10 >= a5)
  {
    if ((a4 & 1) == 0)
    {
      id v13 = objc_msgSend(a2, sel_percentileQuantity);
LABEL_16:
      id v15 = v13;
      goto LABEL_17;
    }
    if (!a3)
    {
      id v13 = objc_msgSend(a2, sel_averageQuantity);
      goto LABEL_16;
    }
    if (a3 != 1)
    {
      id v13 = objc_msgSend(a2, sel_maximumQuantity);
      goto LABEL_16;
    }
    id v14 = objc_msgSend(a2, sel_averageQuantity);
    if (v14)
    {
      id v15 = v14;
      id v16 = objc_msgSend(v14, sel__unit);
      objc_msgSend(v15, sel__baselineRelativeDoubleValueForUnit_, v16);
      double v18 = v17;

      if (v18 == -1.79769313e308)
      {

        uint64_t v11 = (unsigned int *)MEMORY[0x263F42D10];
        goto LABEL_4;
      }
      if (v18 == 1.79769313e308)
      {

        uint64_t v11 = (unsigned int *)MEMORY[0x263F42D08];
        goto LABEL_4;
      }
LABEL_17:
      uint64_t v20 = *MEMORY[0x263F42D20];
      uint64_t v21 = sub_250F0C400();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 104))(a1, v20, v21);
      return v15;
    }
LABEL_12:
    uint64_t v12 = *MEMORY[0x263F42D18];
    goto LABEL_13;
  }
  uint64_t v11 = (unsigned int *)MEMORY[0x263F42D00];
LABEL_4:
  uint64_t v12 = *v11;
LABEL_13:
  uint64_t v19 = sub_250F0C400();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 104))(a1, v12, v19);
  return 0;
}

uint64_t sub_250E941F8@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v99 = a4;
  uint64_t v100 = a6;
  uint64_t v98 = a3;
  uint64_t v96 = a2;
  uint64_t v92 = a7;
  sub_250E8C5B4(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v91 = (char *)&v81 - v10;
  sub_250E8C5B4(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v84 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v89 = (char *)&v81 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v85 = (char *)&v81 - v16;
  uint64_t v97 = sub_250F0C1B0();
  uint64_t v95 = *(void *)(v97 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v97);
  uint64_t v83 = (char *)&v81 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v88 = (char *)&v81 - v20;
  MEMORY[0x270FA5388](v19);
  uint64_t v86 = (char *)&v81 - v21;
  uint64_t v22 = sub_250F0CE70();
  uint64_t v93 = *(void *)(v22 - 8);
  uint64_t v94 = v22;
  uint64_t v23 = MEMORY[0x270FA5388](v22);
  uint64_t v82 = (char *)&v81 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v87 = (char *)&v81 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v28 = (char *)&v81 - v27;
  sub_250E95BB0();
  uint64_t v30 = v29 - 8;
  MEMORY[0x270FA5388](v29);
  uint64_t v32 = (uint64_t *)((char *)&v81 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v33 = sub_250F0C400();
  uint64_t v34 = *(void *)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v37 = (char *)&v81 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = MEMORY[0x270FA5388](v35);
  uint64_t v90 = (char *)&v81 - v39;
  MEMORY[0x270FA5388](v38);
  char v41 = (char *)&v81 - v40;
  char v42 = a5 & 1;
  uint64_t v43 = a1;
  uint64_t v44 = (char *)sub_250E93FF8((uint64_t)&v81 - v40, a1, v99, v42, v100);
  uint64_t v45 = (char *)v32 + *(int *)(v30 + 56);
  *uint64_t v32 = v44;
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
  v46(v45, v41, v33);
  uint64_t v99 = v34;
  uint64_t v100 = v33;
  uint64_t v47 = (*(uint64_t (**)(char *, uint64_t))(v34 + 88))(v45, v33);
  if (v47 == *MEMORY[0x263F42D08])
  {
    uint64_t v48 = v47;
    uint64_t v49 = v89;

    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v87, v96, v94);
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v88, v98, v97);
    id v50 = objc_msgSend(v43, sel_mostRecentQuantityDateInterval);
    if (v50)
    {
      uint64_t v51 = v50;
      sub_250F0BED0();

      uint64_t v52 = sub_250F0BF30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v52 - 8) + 56))(v49, 0, 1, v52);
    }
    else
    {
      uint64_t v69 = sub_250F0BF30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v69 - 8) + 56))(v49, 1, 1, v69);
    }
    uint64_t v70 = v91;
    uint64_t v72 = v99;
    uint64_t v71 = v100;
    uint64_t v73 = v90;
    uint64_t v74 = sub_250F0C060();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v70, 1, 1, v74);
    (*(void (**)(char *, uint64_t, uint64_t))(v72 + 104))(v73, v48, v71);
  }
  else
  {
    uint64_t v53 = v93;
    uint64_t v54 = v94;
    uint64_t v88 = v37;
    uint64_t v89 = v44;
    uint64_t v56 = v95;
    uint64_t v55 = v96;
    long long v57 = v86;
    if (v47 != *MEMORY[0x263F42D20])
    {

      uint64_t v63 = v90;
      uint64_t v64 = v100;
      v46(v90, v45, v100);
      (*(void (**)(char *, uint64_t, uint64_t))(v53 + 16))(v82, v55, v54);
      (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v83, v98, v97);
      uint64_t v65 = sub_250F0BF30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v65 - 8) + 56))(v84, 1, 1, v65);
      uint64_t v66 = sub_250F0C060();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v91, 1, 1, v66);
      uint64_t v67 = v99;
      (*(void (**)(char *, char *, uint64_t))(v99 + 16))(v88, v63, v64);
      sub_250F0C430();
      return (*(uint64_t (**)(char *, uint64_t))(v67 + 8))(v63, v64);
    }
    uint64_t v58 = v47;
    (*(void (**)(char *, uint64_t, uint64_t))(v93 + 16))(v28, v96, v94);
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v57, v98, v97);
    id v59 = objc_msgSend(v43, sel_mostRecentQuantityDateInterval);
    if (v59)
    {
      uint64_t v60 = v59;
      uint64_t v61 = v85;
      sub_250F0BED0();

      uint64_t v62 = sub_250F0BF30();
      (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v62 - 8) + 56))(v61, 0, 1, v62);
    }
    else
    {
      uint64_t v75 = sub_250F0BF30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v85, 1, 1, v75);
    }
    uint64_t v77 = v90;
    uint64_t v76 = v91;
    uint64_t v79 = v99;
    uint64_t v78 = v100;
    uint64_t v80 = sub_250F0C060();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v80 - 8) + 56))(v76, 1, 1, v80);
    (*(void (**)(char *, uint64_t, uint64_t))(v79 + 104))(v77, v58, v78);
  }
  return sub_250F0C430();
}

uint64_t sub_250E94AB8(uint64_t a1, uint64_t a2)
{
  return sub_250E95F10(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

id sub_250E94AD4(void *a1, uint64_t a2, char a3)
{
  if (a3)
  {
    if (a2)
    {
      if (a2 == 1)
      {
        id v12 = a1;
        uint64_t v13 = _HKStatisticsOptionBaselineRelativeQuantities() | 0x22;
        id v6 = objc_msgSend(self, sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v12, 0, v13, 0, 1);

        return v6;
      }
      id v14 = objc_msgSend(self, sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, a1, 0, 8, 0, 1);
    }
    else
    {
      id v14 = objc_msgSend(self, sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, a1, 0, 34, 0, 1);
    }
    return v14;
  }
  id v4 = a1;
  uint64_t v5 = _HKStatisticsOptionPercentile() | 0x20;
  id v6 = objc_msgSend(self, sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v4, 0, v5, 0, 7);

  if (v6)
  {
    double v7 = *(double *)&a2;
    id v8 = objc_allocWithZone(NSNumber);
    id v9 = v6;
    id v10 = objc_msgSend(v8, sel_initWithDouble_, v7);
    id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F433B0]), sel_initWithPercentile_, v10);

    objc_msgSend(v9, sel_setStatisticsConfiguration_, v11);
  }
  return v6;
}

void sub_250E94CA4(uint64_t a1@<X8>)
{
  uint64_t v42 = a1;
  v44[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_250F0C400();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v39 = v2;
  uint64_t v40 = v3;
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C5B4(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v6 - 8);
  id v8 = (char *)&v36 - v7;
  sub_250E8C5B4(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v9 - 8);
  id v11 = (char *)&v36 - v10;
  uint64_t v12 = sub_250F0C1B0();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v36 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_250F0CE70();
  uint64_t v17 = *(void *)(v16 - 8);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_calculator);
  char v41 = v19;
  if (v20)
  {
    uint64_t v37 = v15;
    uint64_t v38 = v8;
    v44[0] = 0;
    id v21 = v20;
    if (objc_msgSend(v21, sel_queryForInitialStatisticsWithError_, v44))
    {
      id v22 = v44[0];
      id v23 = objc_msgSend(v21, sel_currentStatistics);
      if (v23)
      {
        uint64_t v24 = v23;
        sub_250E941F8(v23, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder), *(unsigned char *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder + 8), *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder + 16), v42);
      }
      else
      {
        (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v41, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v16);
        (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v37, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, v12);
        uint64_t v33 = sub_250F0BF30();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v11, 1, 1, v33);
        uint64_t v34 = sub_250F0C060();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v38, 1, 1, v34);
        (*(void (**)(char *, void, uint64_t))(v40 + 104))(v5, *MEMORY[0x263F42D18], v39);
        sub_250F0C430();
      }
    }
    else
    {
      id v27 = v44[0];
      uint64_t v28 = (void *)sub_250F0BFA0();

      swift_willThrow();
      v44[0] = v28;
      id v29 = v28;
      sub_250E95B04();
      sub_250E8D194(0, (unint64_t *)&unk_269B10AC0);
      if (swift_dynamicCast())
      {

        id v30 = v43;
        unsigned int v31 = objc_msgSend(v43, sel_hk_isDatabaseAccessibilityError);
        sub_250E95B5C();
        swift_allocError();
        *(void *)uint64_t v32 = v30;
        if (v31) {
          *(unsigned char *)(v32 + 8) = 1;
        }
        else {
          *(unsigned char *)(v32 + 8) = 0;
        }
        id v35 = v30;
        swift_willThrow();
      }
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v19, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex, v16);
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, v1 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar, v12);
    uint64_t v25 = sub_250F0BF30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 56))(v11, 1, 1, v25);
    uint64_t v26 = sub_250F0C060();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v8, 1, 1, v26);
    (*(void (**)(char *, void, uint64_t))(v40 + 104))(v5, *MEMORY[0x263F42D18], v39);
    sub_250F0C430();
  }
}

uint64_t sub_250E952E8()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex;
  uint64_t v2 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar;
  uint64_t v4 = sub_250F0C1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);

  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_250E953FC()
{
  return type metadata accessor for SleepingSampleAggregator();
}

uint64_t type metadata accessor for SleepingSampleAggregator()
{
  uint64_t result = qword_26B20E6A8;
  if (!qword_26B20E6A8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250E95450()
{
  uint64_t result = sub_250F0CE70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C1B0();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void type metadata accessor for HKWorkoutActivityType(uint64_t a1)
{
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregateBuilder(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregateBuilder(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregateBuilder()
{
  return &type metadata for SleepingSampleAggregateBuilder;
}

void *sub_250E955BC@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

BOOL sub_250E955D0(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_250E95600(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_250E95614(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_250E95628(uint64_t a1, uint64_t a2)
{
  return sub_250E958DC(a1, a2, MEMORY[0x263F07B58]);
}

uint64_t sub_250E95654(uint64_t a1, id *a2)
{
  uint64_t result = sub_250F0CF60();
  *a2 = 0;
  return result;
}

uint64_t sub_250E956CC(uint64_t a1, id *a2)
{
  char v3 = sub_250F0CF70();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_250E9574C@<X0>(uint64_t *a1@<X8>)
{
  sub_250F0CF80();
  uint64_t v2 = sub_250F0CF50();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_250E95790(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_250E957A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_250F0CF80();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_250E957CC(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_250E957D4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_250E957E8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_250E957FC@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_250E95828@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_250E9584C(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_250E95860@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_250E95874(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_250E95888()
{
  return *v0 == 0;
}

uint64_t sub_250E95898(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return MEMORY[0x270F9E7D8](a1, a4, a2, a5, a3);
}

void *sub_250E958B0(void *result)
{
  *v1 &= ~*result;
  return result;
}

uint64_t sub_250E958C4(uint64_t a1, uint64_t a2)
{
  return sub_250E958DC(a1, a2, MEMORY[0x263F8D308]);
}

uint64_t sub_250E958DC(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_250F0CF80();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_250E95920()
{
  sub_250F0CF80();
  sub_250F0CFA0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_250E95974()
{
  sub_250F0CF80();
  sub_250F0D710();
  sub_250F0CFA0();
  uint64_t v0 = sub_250F0D730();
  swift_bridgeObjectRelease();
  return v0;
}

BOOL sub_250E959E8(void *a1, void *a2)
{
  return *a1 == *a2;
}

BOOL sub_250E959FC(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_250E95A10(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

uint64_t sub_250E95A28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_250E96BD4(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_250E95A68@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

uint64_t sub_250E95A78()
{
  uint64_t v0 = sub_250F0CF80();
  uint64_t v2 = v1;
  if (v0 == sub_250F0CF80() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_250F0D680();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_250E95B04()
{
  unint64_t result = qword_26B20F1A0;
  if (!qword_26B20F1A0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20F1A0);
  }
  return result;
}

unint64_t sub_250E95B5C()
{
  unint64_t result = qword_269B10670;
  if (!qword_269B10670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10670);
  }
  return result;
}

void sub_250E95BB0()
{
  if (!qword_26B20EED8)
  {
    sub_250E95C20();
    sub_250F0C400();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EED8);
    }
  }
}

void sub_250E95C20()
{
  if (!qword_26B20EED0)
  {
    sub_250E8D194(255, &qword_26B20EEC8);
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EED0);
    }
  }
}

void *sub_250E95C88@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_250E95C94(uint64_t a1)
{
  uint64_t v2 = sub_250E96874(&qword_269B107E8, type metadata accessor for HKFeatureIdentifier);
  uint64_t v3 = sub_250E96874((unint64_t *)&unk_269B107F0, type metadata accessor for HKFeatureIdentifier);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_250E95D50(uint64_t a1)
{
  uint64_t v2 = sub_250E96874((unint64_t *)&qword_26B20E3B0, type metadata accessor for HKFeatureAvailabilityContext);
  uint64_t v3 = sub_250E96874((unint64_t *)&unk_269B107D0, type metadata accessor for HKFeatureAvailabilityContext);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_250E95E0C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_250F0CF50();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_250E95E54(uint64_t a1)
{
  uint64_t v2 = sub_250E96874((unint64_t *)&unk_269B10D80, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_250E96874(&qword_269B107E0, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v4 = MEMORY[0x263F8D320];
  return MEMORY[0x270F9F1A8](a1, v2, v3, v4);
}

uint64_t sub_250E95F10(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if ((a4 & 1) == 0) {
      goto LABEL_3;
    }
LABEL_5:
    sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
    id v7 = a1;
    id v8 = a3;
    char v6 = sub_250F0D2A0();

    return v6 & 1;
  }
  if ((a4 & 1) == 0) {
    goto LABEL_5;
  }
LABEL_3:
  char v6 = 0;
  return v6 & 1;
}

uint64_t sub_250E95F9C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_morningIndex;
  uint64_t v15 = sub_250F0CE70();
  uint64_t v16 = *(void *)(v15 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v14, a1, v15);
  uint64_t v17 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_gregorianCalendar;
  uint64_t v18 = sub_250F0C1B0();
  uint64_t v19 = *(void *)(v18 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16))(v17, a2, v18);
  uint64_t v20 = v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_builder;
  *(void *)uint64_t v20 = a3;
  *(unsigned char *)(v20 + 8) = a4 & 1;
  *(void *)(v20 + 16) = a5;
  *(void *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_calculator) = a6;
  *(void *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_dataSource) = a7;
  *(void *)(v8 + OBJC_IVAR____TtC19HealthBalanceDaemon24SleepingSampleAggregator_sourceOrderProvider) = a8;
  swift_unknownObjectRetain();
  id v21 = a6;
  swift_unknownObjectRetain();
  objc_msgSend(v21, sel_setSourceOrderProvider_, a8);
  objc_msgSend(v21, sel_setDataSource_, a7);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(a2, v18);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(a1, v15);
  return v8;
}

uint64_t sub_250E961A4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, void *a6, void *a7, uint64_t a8)
{
  id v37 = a7;
  uint64_t v38 = a3;
  uint64_t v39 = a1;
  uint64_t v40 = a2;
  int v11 = a4 & 1;
  uint64_t v36 = sub_250F0C1B0();
  uint64_t v12 = *(void *)(v36 - 8);
  MEMORY[0x270FA5388](v36);
  uint64_t v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_250F0CE70();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v31 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a5) {
    goto LABEL_5;
  }
  uint64_t v19 = a5;
  swift_unknownObjectRetain();
  id v20 = sub_250E94AD4(a6, v38, v11);
  if (!v20)
  {
    swift_unknownObjectRelease();
LABEL_5:
    uint64_t v28 = a6;
    char v29 = v11 != 0;
    (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v39, v15);
    uint64_t v23 = v36;
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v40, v36);
    type metadata accessor for SleepingSampleAggregator();
    swift_allocObject();
    uint64_t v26 = sub_250E95F9C((uint64_t)v18, (uint64_t)v14, v38, v29, a8, 0, 0, 0);
    swift_unknownObjectRelease();

    goto LABEL_6;
  }
  id v21 = v20;
  BOOL v34 = v11 != 0;
  id v22 = objc_allocWithZone(MEMORY[0x263F43398]);
  id v35 = a6;
  id v33 = objc_msgSend(v22, sel_initWithProfile_quantityType_, v37, a6);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v18, v39, v15);
  uint64_t v23 = v36;
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v40, v36);
  type metadata accessor for SleepingSampleAggregator();
  swift_allocObject();
  id v32 = v21;
  swift_unknownObjectRetain();
  uint64_t v24 = a8;
  id v25 = v33;
  uint64_t v26 = sub_250E95F9C((uint64_t)v18, (uint64_t)v14, v38, v34, v24, v21, v19, (uint64_t)v33);

  id v27 = v32;
  swift_unknownObjectRelease_n();
LABEL_6:
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v40, v23);
  (*(void (**)(uint64_t, uint64_t))(v16 + 8))(v39, v15);
  return v26;
}

void type metadata accessor for HKFeatureAvailabilityContext(uint64_t a1)
{
}

void type metadata accessor for os_unfair_lock_s(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for HDPeriodicActivityResult(uint64_t a1)
{
}

void type metadata accessor for HKWorkoutTrainingLoadOptions(uint64_t a1)
{
}

void type metadata accessor for HKFeatureIdentifier(uint64_t a1)
{
}

void sub_250E96580(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t initializeBufferWithCopyOfBuffer for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v5 = v3;
  return a1;
}

void destroy for SleepingSampleAggregator.Error(id *a1)
{
}

uint64_t assignWithCopy for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v4;
  id v6 = v3;

  return a1;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for SleepingSampleAggregator.Error(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregator.Error(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregator.Error(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_250E96724(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_250E9672C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregator.Error()
{
  return &type metadata for SleepingSampleAggregator.Error;
}

uint64_t getEnumTagSinglePayload for SleepingSampleAggregateBuilder.CalculationMethod(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SleepingSampleAggregateBuilder.CalculationMethod(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)uint64_t result = 0;
    *(unsigned char *)(result + 8) = 0;
    *(_DWORD *)uint64_t result = a2 - 1;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 9) = v3;
  return result;
}

uint64_t sub_250E96798(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 8)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_250E967B4(uint64_t result, int a2)
{
  if (a2)
  {
    *(void *)uint64_t result = (a2 - 1);
    *(unsigned char *)(result + 8) = 1;
  }
  else
  {
    *(unsigned char *)(result + 8) = 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleAggregateBuilder.CalculationMethod()
{
  return &type metadata for SleepingSampleAggregateBuilder.CalculationMethod;
}

uint64_t sub_250E967E4()
{
  return sub_250E96874(&qword_269B10760, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_250E9682C()
{
  return sub_250E96874(&qword_269B10768, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_250E96874(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250E968BC()
{
  return sub_250E96874(&qword_269B10770, type metadata accessor for HKWorkoutTrainingLoadOptions);
}

uint64_t sub_250E96904()
{
  return sub_250E96874(&qword_269B10778, type metadata accessor for HKWorkoutTrainingLoadOptions);
}

uint64_t sub_250E9694C()
{
  return sub_250E96874(&qword_269B10780, type metadata accessor for HKWorkoutTrainingLoadOptions);
}

uint64_t sub_250E96994()
{
  return sub_250E96874(&qword_269B10788, type metadata accessor for HKWorkoutTrainingLoadOptions);
}

uint64_t sub_250E969DC()
{
  return sub_250E96874(&qword_269B10790, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_250E96A24()
{
  return sub_250E96874(&qword_269B10798, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_250E96A6C()
{
  return sub_250E96874(&qword_269B107A0, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_250E96AB4()
{
  return sub_250E96874((unint64_t *)&unk_269B107A8, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_250E96AFC()
{
  return sub_250E96874((unint64_t *)&unk_26B20E3C0, type metadata accessor for HKFeatureAvailabilityContext);
}

uint64_t sub_250E96B44()
{
  return sub_250E96874(&qword_269B107B8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_250E96B8C()
{
  return sub_250E96874((unint64_t *)&unk_269B107C0, type metadata accessor for HKFeatureIdentifier);
}

uint64_t sub_250E96BD4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  int v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

void sub_250E96C3C(char *a1)
{
  v67[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_250F0C8D0();
  uint64_t v65 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  long long v57 = (char *)&v56 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  id v59 = (char *)&v56 - v5;
  uint64_t v6 = sub_250F0CCB0();
  uint64_t v62 = *(void *)(v6 - 8);
  uint64_t v63 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v60 = (char *)&v56 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v64 = (char *)&v56 - v9;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v56 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_250F0C220();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C210();
  sub_250F0C1F0();
  uint64_t v19 = v18;
  (*(void (**)(char *, uint64_t))(v15 + 8))(v17, v14);
  if (v19)
  {
    uint64_t v64 = a1;
    uint64_t v20 = v65;
    uint64_t v56 = v2;
    sub_250F0C010();
    id v21 = objc_allocWithZone(MEMORY[0x263F0A560]);
    id v22 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    uint64_t v23 = (void *)sub_250F0BFC0();
    id v24 = objc_msgSend(v21, sel_initWithAction_categoryIdentifier_expirationDate_, 3, v22, v23);

    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    v67[0] = 0;
    if (objc_msgSend(v61, sel_sendNotificationInstruction_criteria_error_, v24, 0, v67))
    {
      id v25 = v67[0];
    }
    else
    {
      id v37 = v67[0];
      uint64_t v38 = (void *)sub_250F0BFA0();

      swift_willThrow();
      uint64_t v39 = v60;
      sub_250F0CC90();
      uint64_t v40 = v20;
      uint64_t v42 = v56;
      char v41 = v57;
      (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v57, v64, v56);
      id v43 = v38;
      id v44 = v38;
      uint64_t v45 = sub_250F0CCA0();
      os_log_type_t v46 = sub_250F0D1B0();
      if (os_log_type_enabled(v45, v46))
      {
        uint64_t v47 = swift_slowAlloc();
        uint64_t v48 = (void *)swift_slowAlloc();
        uint64_t v64 = (char *)swift_slowAlloc();
        v67[0] = v64;
        *(_DWORD *)uint64_t v47 = 136446722;
        uint64_t v49 = sub_250F0D7B0();
        uint64_t v66 = sub_250E8BE44(v49, v50, (uint64_t *)v67);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v47 + 12) = 2080;
        uint64_t v51 = sub_250F0C860();
        uint64_t v66 = sub_250E8BE44(v51, v52, (uint64_t *)v67);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v40 + 8))(v41, v56);
        *(_WORD *)(v47 + 22) = 2114;
        id v53 = v38;
        uint64_t v54 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v66 = v54;
        sub_250F0D300();
        void *v48 = v54;

        _os_log_impl(&dword_250E86000, v45, v46, "[%{public}s] Error sending notification instruction (%s): %{public}@", (uint8_t *)v47, 0x20u);
        sub_250E978C0();
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v48, -1, -1);
        uint64_t v55 = v64;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v55, -1, -1);
        MEMORY[0x25338EC30](v47, -1, -1);

        (*(void (**)(char *, uint64_t))(v62 + 8))(v60, v63);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v20 + 8))(v41, v42);
        (*(void (**)(char *, uint64_t))(v62 + 8))(v39, v63);
      }
    }
  }
  else
  {
    sub_250F0CC90();
    uint64_t v26 = v65;
    id v27 = v59;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v59, a1, v2);
    uint64_t v28 = sub_250F0CCA0();
    uint64_t v29 = sub_250F0D1B0();
    uint64_t v30 = v26;
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      uint64_t v31 = swift_slowAlloc();
      id v32 = (void *)swift_slowAlloc();
      v67[0] = v32;
      *(_DWORD *)uint64_t v31 = 136446466;
      uint64_t v33 = sub_250F0D7B0();
      uint64_t v66 = sub_250E8BE44(v33, v34, (uint64_t *)v67);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      uint64_t v35 = sub_250F0C860();
      uint64_t v66 = sub_250E8BE44(v35, v36, (uint64_t *)v67);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v27, v2);
      _os_log_impl(&dword_250E86000, v28, (os_log_type_t)v29, "[%{public}s] Failed to encode notification: %{public}s", (uint8_t *)v31, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v32, -1, -1);
      MEMORY[0x25338EC30](v31, -1, -1);
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v26 + 8))(v27, v2);
    }

    (*(void (**)(char *, uint64_t))(v62 + 8))(v64, v63);
  }
}

uint64_t sub_250E97444@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v49 = a1;
  uint64_t v48 = sub_250F0CE70();
  uint64_t v40 = *(void *)(v48 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v48);
  uint64_t v47 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  os_log_type_t v46 = (char *)&v38 - v5;
  uint64_t v6 = sub_250F0C8D0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v38 - v11;
  uint64_t v13 = sub_250F0C220();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v38 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C210();
  id v17 = objc_msgSend(v2, sel_categoryIdentifiers);
  uint64_t v18 = sub_250F0D0E0();

  uint64_t v51 = v16;
  uint64_t v19 = sub_250EC8EF0((void (*)(void *))sub_250E97958, (uint64_t)v50, v18);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  uint64_t v20 = *(void *)(v19 + 16);
  if (!v20)
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56))(v49, 1, 1, v6);
    return swift_bridgeObjectRelease();
  }
  id v21 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
  unint64_t v43 = v19 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  id v44 = v21;
  uint64_t v45 = v7 + 16;
  ((void (*)(char *))v21)(v12);
  uint64_t result = swift_bridgeObjectRetain();
  uint64_t v23 = v49;
  if (v20 == 1)
  {
LABEL_3:
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(v23, v12, v6);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(v23, 0, 1, v6);
    return swift_bridgeObjectRelease();
  }
  id v24 = (void (**)(char *, uint64_t))(v40 + 8);
  uint64_t v39 = (uint64_t (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t v40 = v7 + 8;
  unint64_t v25 = 1;
  uint64_t v41 = v20;
  uint64_t v42 = v19;
  while (v25 < *(void *)(v19 + 16))
  {
    v44(v10, v43 + *(void *)(v7 + 72) * v25, v6);
    uint64_t v26 = v10;
    id v27 = v46;
    uint64_t v28 = v12;
    sub_250F0C870();
    uint64_t v29 = v47;
    sub_250F0C870();
    char v30 = sub_250F0CDB0();
    uint64_t v31 = *v24;
    id v32 = v29;
    uint64_t v33 = v6;
    uint64_t v34 = v7;
    uint64_t v35 = v48;
    (*v24)(v32, v48);
    uint64_t v36 = v35;
    uint64_t v7 = v34;
    v31(v27, v36);
    id v37 = *(void (**)(char *, uint64_t))(v34 + 8);
    if (v30)
    {
      v37(v28, v33);
      uint64_t result = (*v39)(v28, v26, v33);
    }
    else
    {
      uint64_t result = ((uint64_t (*)(char *, uint64_t))v37)(v26, v33);
    }
    uint64_t v23 = v49;
    uint64_t v6 = v33;
    uint64_t v12 = v28;
    uint64_t v10 = v26;
    uint64_t v19 = v42;
    if (v41 == ++v25) {
      goto LABEL_3;
    }
  }
  __break(1u);
  return result;
}

void sub_250E978C0()
{
  if (!qword_26B20E430)
  {
    sub_250E97918();
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E430);
    }
  }
}

unint64_t sub_250E97918()
{
  unint64_t result = qword_26B20E420;
  if (!qword_26B20E420)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20E420);
  }
  return result;
}

uint64_t sub_250E97958()
{
  return sub_250F0C200();
}

uint64_t sub_250E9798C()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthBalanceDaemon()
{
  return self;
}

char *sub_250E979C0(char *a1, char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_250F0C060();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    uint64_t v10 = *(int *)(a3 + 20);
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v10], 1, v7))
    {
      sub_250E8C788(0);
      memcpy(v11, v12, *(void *)(*(void *)(v13 - 8) + 64));
    }
    else
    {
      v9(v11, v12, v7);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    }
    *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  }
  return a1;
}

uint64_t sub_250E97B68(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_250F0C060();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v8(a1, v4);
  uint64_t v6 = a1 + *(int *)(a2 + 20);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4);
  if (!result)
  {
    return ((uint64_t (*)(uint64_t, uint64_t))v8)(v6, v4);
  }
  return result;
}

char *sub_250E97C68(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_250E8C788(0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_250E97DC0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  uint64_t v17 = a3;
  uint64_t v18 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_250E8C788(0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&v18[*(int *)(v17 + 24)];
  return a1;
}

char *sub_250E97F88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v9], 1, v6))
  {
    sub_250E8C788(0);
    memcpy(v10, v11, *(void *)(*(void *)(v12 - 8) + 64));
  }
  else
  {
    v8(v10, v11, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
  }
  *(void *)&a1[*(int *)(a3 + 24)] = *(void *)&a2[*(int *)(a3 + 24)];
  return a1;
}

char *sub_250E980E0(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  uint64_t v17 = a3;
  uint64_t v18 = a2;
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *(uint64_t (**)(const void *, uint64_t, uint64_t))(v7 + 48);
  int v13 = v12(&a1[v9], 1, v6);
  int v14 = v12(v11, 1, v6);
  if (!v13)
  {
    if (!v14)
    {
      v8(v10, v11, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    sub_250E8C788(0);
    memcpy(v10, v11, *(void *)(*(void *)(v15 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v10, v11, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(v10, 0, 1, v6);
LABEL_7:
  *(void *)&a1[*(int *)(v17 + 24)] = *(void *)&v18[*(int *)(v17 + 24)];
  return a1;
}

uint64_t sub_250E982A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_250E8C788(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_250E983A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_250F0C060();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_250E8C788(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_250E984A4()
{
  sub_250F0C060();
  if (v0 <= 0x3F)
  {
    sub_250E8C788(319);
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

BOOL sub_250E98578(void (**a1)(char *, uint64_t, uint64_t))
{
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v56 = (uint64_t)&v51 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_250F0BF30();
  uint64_t v57 = *(void *)(v4 - 8);
  uint64_t v58 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v54 = (char *)&v51 - v8;
  sub_250E8C788(0);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v60 = (uint64_t)&v51 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v51 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v51 - v15;
  uint64_t v17 = sub_250F0C060();
  uint64_t v18 = *(void *)(v17 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  id v53 = (char *)&v51 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v52 = (char *)&v51 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  id v59 = (char *)&v51 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  id v27 = (char *)&v51 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  char v30 = (char *)&v51 - v29;
  MEMORY[0x270FA5388](v28);
  id v32 = (char *)&v51 - v31;
  uint64_t v62 = a1;
  sub_250E98BF8((uint64_t)a1, MEMORY[0x263F42CA8], (uint64_t)v16);
  uint64_t v33 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v18 + 48);
  int v34 = v33(v16, 1, v17);
  uint64_t v55 = v7;
  if (v34 == 1)
  {
    uint64_t v35 = v61;
    sub_250E8CC88((uint64_t)v16, (uint64_t (*)(void))sub_250E8C788);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v32, v16, v17);
    sub_250E8C86C();
    uint64_t v35 = v61;
    char v36 = sub_250F0CEE0();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v32, v17);
    if ((v36 & 1) == 0) {
      return 1;
    }
  }
  sub_250E98BF8((uint64_t)v62, MEMORY[0x263F42CC0], (uint64_t)v14);
  if (v33(v14, 1, v17) == 1)
  {
    sub_250E8CC88((uint64_t)v14, (uint64_t (*)(void))sub_250E8C788);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v30, v14, v17);
    type metadata accessor for SleepingSampleCacheRange();
    sub_250F0C000();
    char v37 = sub_250F0BFD0();
    uint64_t v38 = *(void (**)(char *, uint64_t))(v18 + 8);
    v38(v27, v17);
    v38(v30, v17);
    if (v37) {
      return 1;
    }
  }
  uint64_t v39 = type metadata accessor for SleepingSampleCacheRange();
  uint64_t v40 = v60;
  sub_250E8C4CC(v35 + *(int *)(v39 + 20), v60, (uint64_t (*)(void))sub_250E8C788);
  if (v33((char *)v40, 1, v17) == 1)
  {
    uint64_t v41 = sub_250E8C788;
LABEL_11:
    sub_250E8CC88(v40, (uint64_t (*)(void))v41);
    return 0;
  }
  uint64_t v42 = v59;
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 32))(v59, v40, v17);
  uint64_t v40 = v56;
  sub_250E98F60(v62, v56);
  uint64_t v44 = v57;
  uint64_t v43 = v58;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v57 + 48))(v40, 1, v58) == 1)
  {
    (*(void (**)(char *, uint64_t))(v18 + 8))(v42, v17);
    uint64_t v41 = sub_250E98BC4;
    goto LABEL_11;
  }
  os_log_type_t v46 = v54;
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 32))(v54, v40, v43);
  uint64_t v47 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v47(v52, v35, v17);
  v47(v53, (uint64_t)v42, v17);
  uint64_t v48 = v55;
  sub_250F0BEF0();
  char v49 = sub_250F0BE90();
  unint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
  v50(v48, v43);
  v50(v46, v43);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v59, v17);
  return (v49 & 1) != 0;
}

void sub_250E98BC4(uint64_t a1)
{
}

uint64_t sub_250E98BF8@<X0>(uint64_t a1@<X0>, unsigned int *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_250F0C3D0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v7 + 104))(v9, *a2, v6);
  uint64_t v13 = (void *)sub_250F0C3B0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  if (*(void *)(a1 + 16) && (unint64_t v14 = sub_250EFCF1C((uint64_t)v13), (v15 & 1) != 0))
  {
    unint64_t v16 = v14;
    uint64_t v17 = *(void *)(a1 + 56);
    uint64_t v18 = sub_250F0BF30();
    uint64_t v19 = *(void *)(v18 - 8);
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(v12, v17 + *(void *)(v19 + 72) * v16, v18);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v19 + 56))(v12, 0, 1, v18);
  }
  else
  {
    uint64_t v18 = sub_250F0BF30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v12, 1, 1, v18);
  }

  sub_250F0BF30();
  uint64_t v20 = *(void *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v12, 1, v18) == 1)
  {
    sub_250E8CC88((uint64_t)v12, (uint64_t (*)(void))sub_250E98BC4);
    uint64_t v21 = sub_250F0C060();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(a3, 1, 1, v21);
  }
  else
  {
    sub_250F0BEE0();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v18);
    uint64_t v23 = sub_250F0C060();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(a3, 0, 1, v23);
  }
}

uint64_t sub_250E98F60@<X0>(void (**a1)(char *, uint64_t, uint64_t)@<X0>, uint64_t a2@<X8>)
{
  v129 = a1;
  uint64_t v111 = a2;
  uint64_t v2 = sub_250F0BF30();
  uint64_t v128 = *(void *)(v2 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  id v118 = (char *)&v106 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v106 - v6;
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  int v127 = (char *)&v106 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v120 = (char *)&v106 - v10;
  sub_250E98BC4(0);
  uint64_t v110 = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v117 = (uint64_t)&v106 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v116 = (char *)&v106 - v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v115 = (char *)&v106 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v121 = (void (*)(char *, uint64_t, uint64_t))((char *)&v106 - v20);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v126 = (void (**)(uint64_t, uint64_t))((char *)&v106 - v22);
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v119 = (char *)&v106 - v24;
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v122 = (uint64_t)&v106 - v26;
  MEMORY[0x270FA5388](v25);
  uint64_t v113 = (uint64_t)&v106 - v27;
  uint64_t v28 = sub_250F0C3D0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  v108 = (char *)&v106 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v123 = (char *)&v106 - v33;
  MEMORY[0x270FA5388](v32);
  uint64_t v35 = (char *)&v106 - v34;
  sub_250E8C608(0, &qword_26B20EFB8, (uint64_t (*)(uint64_t))sub_250E98BC4, MEMORY[0x263F8E0F8]);
  unint64_t v36 = *(void *)(v12 + 72);
  unint64_t v37 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  unint64_t v130 = v36;
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = xmmword_250F0ECE0;
  unint64_t v39 = v38 + v37;
  uint64_t v40 = *MEMORY[0x263F42CC8];
  uint64_t v112 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 104);
  v112(v35, v40, v28);
  uint64_t v41 = (void *)sub_250F0C3B0();
  uint64_t v43 = *(void (**)(char *, char *))(v29 + 8);
  uint64_t v42 = v29 + 8;
  uint64_t v44 = v129;
  uint64_t v125 = (char *)v28;
  uint64_t v107 = v43;
  v43(v35, (char *)v28);
  uint64_t v45 = v44[2];
  uint64_t v109 = v38;
  if (v45)
  {
    unint64_t v46 = sub_250EFCF1C((uint64_t)v41);
    if (v47)
    {
      uint64_t v48 = v44[7];
      uint64_t v49 = v128;
      (*(void (**)(unint64_t, unint64_t, uint64_t))(v128 + 16))(v39, (unint64_t)v48 + *(void *)(v128 + 72) * v46, v2);
      unint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
      unint64_t v51 = v39;
      uint64_t v52 = 0;
      goto LABEL_7;
    }
    uint64_t v53 = v128;
  }
  else
  {
    uint64_t v53 = v128;
  }
  unint64_t v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 56);
  unint64_t v51 = v39;
  uint64_t v52 = 1;
LABEL_7:
  uint64_t v124 = v50;
  v50(v51, v52, 1, v2);
  uint64_t v54 = (uint64_t)v121;

  unint64_t v114 = (char *)v39;
  uint64_t v55 = v39 + v130;
  uint64_t v56 = v123;
  uint64_t v57 = v125;
  v112(v123, *MEMORY[0x263F42CB0], (uint64_t)v125);
  uint64_t v58 = (void *)sub_250F0C3B0();
  id v59 = v107;
  v107(v56, v57);
  uint64_t v60 = v129;
  uint64_t v61 = (char *)v129[2];
  uint64_t v106 = v42;
  if (v61 && (unint64_t v62 = sub_250EFCF1C((uint64_t)v58), (v63 & 1) != 0))
  {
    uint64_t v64 = v128;
    uint64_t v65 = v55;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v128 + 16))(v55, (unint64_t)v60[7] + *(void *)(v128 + 72) * v62, v2);
    uint64_t v66 = 0;
  }
  else
  {
    uint64_t v66 = 1;
    uint64_t v64 = v128;
    uint64_t v65 = v55;
  }
  uint64_t v67 = 1;
  uint64_t v123 = (char *)(v64 + 56);
  v124(v65, v66, 1, v2);

  uint64_t v68 = &v114[2 * v130];
  uint64_t v69 = v108;
  uint64_t v70 = v125;
  v112(v108, *MEMORY[0x263F42CB8], (uint64_t)v125);
  uint64_t v71 = (void *)sub_250F0C3B0();
  v59(v69, v70);
  if (v60[2] && (unint64_t v72 = sub_250EFCF1C((uint64_t)v71), (v73 & 1) != 0))
  {
    uint64_t v74 = v128;
    (*(void (**)(char *, unint64_t, uint64_t))(v128 + 16))(v68, (unint64_t)v60[7] + *(void *)(v128 + 72) * v72, v2);
    uint64_t v67 = 0;
  }
  else
  {
    uint64_t v74 = v128;
  }
  unint64_t v75 = v130;
  v124((uint64_t)v68, v67, 1, v2);

  uint64_t v76 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v74 + 48);
  v129 = (void (**)(char *, uint64_t, uint64_t))(v74 + 32);
  unint64_t v130 = MEMORY[0x263F8EE78];
  uint64_t v77 = 3;
  uint64_t v78 = (uint64_t)v114;
  uint64_t v125 = v7;
  uint64_t v79 = v129;
  do
  {
    uint64_t v80 = v126;
    sub_250E8C4CC(v78, (uint64_t)v126, (uint64_t (*)(void))sub_250E98BC4);
    sub_250E99B30((uint64_t)v80, v54);
    uint64_t v81 = *v76;
    if ((*v76)(v54, 1, v2) == 1)
    {
      sub_250E8CC88(v54, (uint64_t (*)(void))sub_250E98BC4);
    }
    else
    {
      uint64_t v82 = *v79;
      uint64_t v83 = v120;
      (*v79)(v120, v54, v2);
      v82(v127, (uint64_t)v83, v2);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        unint64_t v84 = v130;
      }
      else {
        unint64_t v84 = sub_250EA23AC(0, *(void *)(v130 + 16) + 1, 1, v130);
      }
      unint64_t v86 = *(void *)(v84 + 16);
      unint64_t v85 = *(void *)(v84 + 24);
      if (v86 >= v85 >> 1) {
        unint64_t v84 = sub_250EA23AC(v85 > 1, v86 + 1, 1, v84);
      }
      *(void *)(v84 + 16) = v86 + 1;
      unint64_t v87 = (*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80);
      unint64_t v130 = v84;
      v82((char *)(v84 + v87 + *(void *)(v128 + 72) * v86), (uint64_t)v127, v2);
      uint64_t v7 = v125;
      uint64_t v54 = (uint64_t)v121;
    }
    v78 += v75;
    --v77;
  }
  while (v77);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v88 = v113;
  v124(v113, 1, 1, v2);
  sub_250E8C4CC(v88, v122, (uint64_t (*)(void))sub_250E98BC4);
  uint64_t v89 = *(void *)(v130 + 16);
  if (v89)
  {
    uint64_t v90 = v7;
    uint64_t v92 = *(char **)(v128 + 16);
    uint64_t v91 = v128 + 16;
    uint64_t v93 = v130 + ((*(unsigned __int8 *)(v128 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v128 + 80));
    uint64_t v120 = *(char **)(v128 + 72);
    unint64_t v126 = (void (**)(uint64_t, uint64_t))(v128 + 8);
    int v127 = v92;
    swift_bridgeObjectRetain();
    uint64_t v128 = v91;
    uint64_t v94 = v124;
    unint64_t v114 = (char *)v76;
    uint64_t v95 = v119;
    while (1)
    {
      ((void (*)(char *, uint64_t, uint64_t))v127)(v95, v93, v2);
      v94((uint64_t)v95, 0, 1, v2);
      if (v81((uint64_t)v95, 1, v2) == 1) {
        break;
      }
      uint64_t v121 = *v129;
      v121(v90, (uint64_t)v95, v2);
      uint64_t v99 = v117;
      sub_250E8C4CC(v122, v117, (uint64_t (*)(void))sub_250E98BC4);
      if (v81(v99, 1, v2) == 1)
      {
        sub_250E8CC88(v99, (uint64_t (*)(void))sub_250E98BC4);
        uint64_t v100 = 1;
        uint64_t v101 = v90;
        uint64_t v102 = (uint64_t)v116;
      }
      else
      {
        uint64_t v102 = (uint64_t)v116;
        sub_250F0BF20();
        (*v126)(v99, v2);
        uint64_t v100 = 0;
        uint64_t v101 = v90;
      }
      v103 = (void (*)(char *, char *, uint64_t))v127;
      v124(v102, v100, 1, v2);
      id v104 = v118;
      v103(v118, v101, v2);
      if (v81(v102, 1, v2) == 1)
      {
        uint64_t v96 = (uint64_t)v115;
        v103(v115, v104, v2);
        sub_250E8CC88(v102, (uint64_t (*)(void))sub_250E98BC4);
      }
      else
      {
        uint64_t v96 = (uint64_t)v115;
        v121(v115, v102, v2);
      }
      uint64_t v97 = (void (*)(void))*v126;
      (*v126)((uint64_t)v104, v2);
      uint64_t v94 = v124;
      v124(v96, 0, 1, v2);
      uint64_t v90 = v125;
      v97();
      uint64_t v98 = v122;
      sub_250E8CC88(v122, (uint64_t (*)(void))sub_250E98BC4);
      sub_250E99B30(v96, v98);
      uint64_t v95 = v119;
      v93 += (uint64_t)v120;
      if (!--v89) {
        goto LABEL_36;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v94 = v124;
    uint64_t v95 = v119;
LABEL_36:
    v94((uint64_t)v95, 1, 1, v2);
  }
  swift_bridgeObjectRelease();
  sub_250E99B30(v122, v111);
  sub_250E8CC88(v113, (uint64_t (*)(void))sub_250E98BC4);
  return swift_bridgeObjectRelease();
}

uint64_t sub_250E99B30(uint64_t a1, uint64_t a2)
{
  sub_250E98BC4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

BOOL sub_250E99B94(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_250E99BA8()
{
  return sub_250F0D730();
}

uint64_t sub_250E99BF0()
{
  return sub_250F0D720();
}

uint64_t sub_250E99C1C()
{
  return sub_250F0D730();
}

uint64_t sub_250E99CA8(void *a1)
{
  uint64_t v253 = *MEMORY[0x263EF8340];
  uint64_t v2 = sub_250F0C640();
  MEMORY[0x270FA5388](v2 - 8);
  unint64_t v179 = (char *)&v145 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8E700();
  uint64_t v181 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  unint64_t v175 = (char *)&v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v184 = (char *)&v145 - v7;
  sub_250E9374C();
  uint64_t v171 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v172 = (char *)&v145 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v174 = (uint64_t)&v145 - v11;
  uint64_t v12 = sub_250F0C340();
  uint64_t v177 = *(void *)(v12 - 8);
  uint64_t v178 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v173 = (char *)&v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v176 = (char *)&v145 - v15;
  sub_250E8C66C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v145 - v17;
  uint64_t v19 = sub_250F0C060();
  uint64_t v185 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v189 = (char *)&v145 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_250F0CE70();
  uint64_t v187 = *(void *)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  unint64_t v180 = (char *)&v145 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v183 = (char *)&v145 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v182 = (char *)&v145 - v27;
  MEMORY[0x270FA5388](v26);
  os_log_type_t v190 = (char *)&v145 - v28;
  uint64_t v29 = sub_250F0C1B0();
  uint64_t v30 = *(void *)(v29 - 8);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v188 = (char *)&v145 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v145 - v33;
  uint64_t v35 = &off_26535C000;
  id v36 = objc_msgSend(a1, sel_healthDataSource);
  if (!v36)
  {
    uint64_t v61 = sub_250F0C230();
    sub_250E9FE18((unint64_t *)&unk_269B10A68, MEMORY[0x263F42B80]);
    swift_allocError();
    (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v61 - 8) + 104))(v62, *MEMORY[0x263F42B78], v61);
    swift_willThrow();
    return (uint64_t)v35;
  }
  id v192 = v36;
  uint64_t v169 = v29;
  uint64_t v170 = v34;
  uint64_t v168 = v21;
  id v37 = objc_msgSend(a1, sel_healthDataSource);
  if (!v37
    || (id v38 = objc_msgSend(v37, sel_featureStatusProviderForIdentifier_, *MEMORY[0x263F097F8]),
        swift_unknownObjectRelease(),
        !v38))
  {
    sub_250E9CFF0();
    swift_allocError();
    *uint64_t v60 = 4;
LABEL_12:
    swift_willThrow();
    swift_unknownObjectRelease();
    return (uint64_t)v35;
  }
  uint64_t v166 = v30;
  v206[0] = 0;
  id v39 = objc_msgSend(v38, sel_featureStatusWithError_, v206);
  swift_unknownObjectRelease();
  if (!v39)
  {
    uint64_t v35 = (_UNKNOWN **)v206[0];
    sub_250F0BFA0();

    goto LABEL_12;
  }
  id v167 = v39;
  id v40 = v206[0];
  id v41 = objc_msgSend(a1, sel_healthDataSource);
  if (!v41
    || (id v42 = objc_msgSend(v41, sel_featureStatusProviderForIdentifier_, *MEMORY[0x263F097C8]),
        swift_unknownObjectRelease(),
        !v42))
  {
    sub_250E9CFF0();
    swift_allocError();
    unsigned char *v63 = 3;
LABEL_15:
    swift_willThrow();
    swift_unknownObjectRelease();

    return (uint64_t)v35;
  }
  v206[0] = 0;
  id v43 = objc_msgSend(v42, sel_featureStatusWithError_, v206);
  swift_unknownObjectRelease();
  id v44 = v206[0];
  if (!v43)
  {
    uint64_t v35 = (_UNKNOWN **)v206[0];
    sub_250F0BFA0();

    goto LABEL_15;
  }
  uint64_t v35 = *(_UNKNOWN ***)(v191 + 24);
  if (!v35)
  {
    sub_250E9CFF0();
    swift_allocError();
    *uint64_t v65 = 1;
    id v66 = v44;
    swift_willThrow();
    swift_unknownObjectRelease();

    return (uint64_t)v35;
  }
  v165 = v43;
  id v45 = v206[0];
  uint64_t v164 = v35;
  id v46 = objc_msgSend(a1, sel_environmentDataSource);
  id v47 = objc_msgSend(v46, sel_calendarCache);

  id v48 = objc_msgSend(v47, sel_currentCalendar);
  uint64_t v49 = v170;
  sub_250F0C180();

  id v50 = objc_msgSend(a1, sel_environmentDataSource);
  id v51 = objc_msgSend(v50, sel_currentDate);

  uint64_t v35 = (_UNKNOWN **)v189;
  sub_250F0C030();

  uint64_t v52 = v166 + 16;
  uint64_t v53 = v49;
  uint64_t v54 = v169;
  uint64_t v163 = *(void (**)(char *, char *, uint64_t))(v166 + 16);
  v163(v188, v53, v169);
  sub_250F0CE10();
  uint64_t v55 = v186;
  int v56 = sub_250E9B170();
  if (v55)
  {
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v187 + 8))(v190, v168);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v170, v54);
    return (uint64_t)v35;
  }
  uint64_t v155 = v52;
  int v152 = v56;
  uint64_t v160 = v57;
  uint64_t v161 = v59;
  uint64_t v186 = v58;
  id v67 = objc_msgSend(a1, sel_environmentDataSource);
  id v68 = objc_msgSend(v67, sel_activePairedDeviceProductType);

  if (v68)
  {
    id v157 = (id)sub_250F0CF80();
    uint64_t v162 = v69;
  }
  else
  {
    id v157 = 0;
    uint64_t v162 = 0;
  }
  uint64_t v70 = v191;
  uint64_t v71 = v189;
  id v72 = objc_msgSend(a1, sel_environmentDataSource);
  id v73 = objc_msgSend(v72, sel_currentDate);

  sub_250F0C030();
  uint64_t v74 = (void *)sub_250F0BFC0();
  uint64_t v75 = v185 + 8;
  uint64_t v153 = *(void (**)(char *, uint64_t))(v185 + 8);
  v153(v71, v19);
  v206[0] = 0;
  uint64_t v76 = (void (*)(char *, uint64_t))objc_msgSend(v192, sel_ageWithCurrentDate_error_, v74, v206);

  id v77 = v206[0];
  uint64_t v158 = v76;
  uint64_t v154 = v75;
  if (v76)
  {
    id v156 = objc_msgSend(v76, sel_integerValue);
  }
  else
  {
    uint64_t v78 = v77;
    uint64_t v79 = (void *)sub_250F0BFA0();

    swift_willThrow();
    id v156 = 0;
  }
  uint64_t v80 = v166;
  v206[0] = 0;
  id v81 = objc_msgSend(v192, sel_biologicalSexWithError_, v206);
  if (!v81)
  {
    id v87 = v206[0];
    swift_bridgeObjectRelease();
    sub_250F0BFA0();

    swift_willThrow();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v187 + 8))(v190, v168);
    uint64_t v88 = *(void (**)(char *, uint64_t))(v80 + 8);
    uint64_t v35 = (_UNKNOWN **)(v80 + 8);
    v88(v170, v169);
    return (uint64_t)v35;
  }
  uint64_t v82 = v81;
  id v83 = v206[0];
  id v84 = (id)HKAnalyticsPropertyValueForBiologicalSex();

  uint64_t v151 = sub_250F0CF80();
  uint64_t v159 = v85;

  id v86 = objc_msgSend(a1, sel_environmentDataSource);
  unsigned int v150 = objc_msgSend(v86, sel_isImproveHealthAndActivityEnabled);

  if (v186) {
    unsigned int v149 = objc_msgSend(v186, sel_sleepTracking);
  }
  else {
    unsigned int v149 = 2;
  }
  uint64_t v89 = *(void **)(v70 + 16);
  id v147 = sub_250E9B2A8((uint64_t)v89);
  id v148 = v89;
  id v90 = objc_msgSend(a1, sel_environmentDataSource);
  uint64_t v91 = *(void **)(v70 + 48);
  sub_250F0CB60();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v185 + 48))(v18, 1, v19) == 1)
  {
    uint64_t v92 = 0;
  }
  else
  {
    uint64_t v92 = (void *)sub_250F0BFC0();
    v153(v18, v19);
  }
  id v93 = objc_msgSend(v90, sel_bucketedNumberOfWeeksSinceDate_, v92);

  uint64_t v146 = v91;
  if (v93)
  {
    id v94 = objc_msgSend(v93, sel_integerValue);
  }
  else
  {
    id v94 = 0;
  }
  BOOL v95 = v93 == 0;
  v207[0] = (uint64_t)v157;
  uint64_t v96 = v162;
  v207[1] = v162;
  BOOL v97 = v158 == 0;
  id v98 = v156;
  v207[2] = (uint64_t)v156;
  BOOL v208 = v158 == 0;
  uint64_t v99 = v151;
  uint64_t v209 = v151;
  uint64_t v100 = v159;
  uint64_t v210 = v159;
  char v211 = v150;
  char v212 = v149;
  id v101 = v147;
  id v213 = v147;
  id v214 = v94;
  BOOL v215 = v93 == 0;
  unint64_t v102 = v150 | ((unint64_t)v149 << 8);
  uint64_t v103 = *(void *)(v70 + 64);
  uint64_t v104 = *(void *)(v70 + 72);
  uint64_t v105 = *(void *)(v70 + 80);
  uint64_t v106 = *(void *)(v70 + 88);
  uint64_t v185 = *(void *)(v70 + 96);
  uint64_t v158 = *(void (**)(char *, uint64_t))(v70 + 104);
  uint64_t v154 = *(void *)(v70 + 112);
  uint64_t v153 = *(void (**)(char *, uint64_t))(v70 + 120);
  *(void *)(v70 + 64) = v157;
  *(void *)(v70 + 72) = v96;
  *(void *)(v70 + 80) = v98;
  *(void *)(v70 + 88) = v97;
  *(void *)(v70 + 96) = v99;
  *(void *)(v70 + 104) = v100;
  *(void *)(v70 + 112) = v102;
  *(void *)(v70 + 120) = v101;
  *(void *)(v70 + 128) = v94;
  *(unsigned char *)(v70 + 136) = v95;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_250E9D09C(v103, v104, v105, v106, v185, (uint64_t)v158);
  id v157 = v148;
  uint64_t v107 = v183;
  sub_250F0CDA0();
  sub_250F0CDE0();
  uint64_t v109 = v187 + 8;
  v108 = *(void (**)(char *, uint64_t))(v187 + 8);
  uint64_t v110 = v168;
  v108(v107, v168);
  uint64_t v111 = v180;
  sub_250F0CDA0();
  sub_250F0CDE0();
  uint64_t v185 = v109;
  uint64_t v158 = v108;
  v108(v111, v110);
  sub_250E9FE18(&qword_26B20E340, MEMORY[0x263F090E8]);
  uint64_t result = sub_250F0CF00();
  if (result)
  {
    uint64_t v112 = v181;
    unint64_t v180 = &v184[*(int *)(v181 + 48)];
    uint64_t v113 = v180;
    uint64_t v114 = v187;
    uint64_t v115 = *(void (**)(void))(v187 + 32);
    v115();
    ((void (*)(char *, char *, uint64_t))v115)(v113, v183, v110);
    uint64_t v116 = *(int *)(v112 + 48);
    uint64_t v117 = v175;
    id v118 = &v175[v116];
    uint64_t v119 = v110;
    uint64_t v120 = *(void (**)(char *, char *, uint64_t))(v114 + 16);
    v120(v175, v184, v119);
    v120(v118, v180, v119);
    uint64_t v121 = (uint64_t)v172;
    ((void (*)(char *, char *, uint64_t))v115)(v172, v117, v119);
    uint64_t v122 = v118;
    uint64_t v123 = v158;
    v158(v122, v119);
    uint64_t v124 = v123;
    uint64_t v125 = &v117[*(int *)(v181 + 48)];
    ((void (*)(char *, char *, uint64_t))v115)(v117, v184, v119);
    ((void (*)(char *, char *, uint64_t))v115)(v125, v180, v119);
    ((void (*)(uint64_t, char *, uint64_t))v115)(v121 + *(int *)(v171 + 36), v125, v119);
    v124(v117, v119);
    sub_250E8CDB4(v121, v174, (uint64_t (*)(void))sub_250E9374C);
    v163(v188, v170, v169);
    unint64_t v126 = v176;
    sub_250F0C2F0();
    uint64_t v127 = v177;
    uint64_t v128 = v178;
    (*(void (**)(char *, char *, uint64_t))(v177 + 16))(v173, v126, v178);
    sub_250F0C600();
    uint64_t v129 = (uint64_t)v179;
    sub_250F0C5C0();
    unint64_t v130 = (void (*)(char *, char *, uint64_t))v189;
    sub_250F0C040();
    uint64_t v131 = sub_250E8D3A4(v157, v129, v130);
    uint64_t v132 = *(void (**)(char *, uint64_t))(v127 + 8);
    uint64_t v189 = v245;
    v132(v126, v128);
    char v197 = 1;
    char v196 = 1;
    char v195 = 1;
    char v194 = 1;
    char v193 = 1;
    memset(v216, 0, 48);
    v216[48] = 1;
    *(_DWORD *)unint64_t v217 = *(_DWORD *)v203;
    *(_DWORD *)&v217[3] = *(_DWORD *)&v203[3];
    uint64_t v218 = 2;
    long long v219 = 0u;
    long long v220 = 0u;
    long long v221 = 0u;
    long long v222 = 0u;
    char v223 = 1;
    *(_DWORD *)uint64_t v224 = *(_DWORD *)v202;
    *(_DWORD *)&v224[3] = *(_DWORD *)&v202[3];
    uint64_t v225 = 2;
    long long v226 = 0u;
    long long v227 = 0u;
    long long v228 = 0u;
    long long v229 = 0u;
    char v230 = 1;
    *(_DWORD *)uint64_t v231 = *(_DWORD *)v201;
    *(_DWORD *)&v231[3] = *(_DWORD *)&v201[3];
    uint64_t v232 = 2;
    long long v235 = 0u;
    long long v236 = 0u;
    long long v233 = 0u;
    long long v234 = 0u;
    char v237 = 1;
    *(_DWORD *)v238 = *(_DWORD *)v200;
    *(_DWORD *)&v238[3] = *(_DWORD *)&v200[3];
    uint64_t v239 = 2;
    long long v242 = 0u;
    long long v243 = 0u;
    long long v240 = 0u;
    long long v241 = 0u;
    char v244 = 1;
    *(_DWORD *)uint64_t v189 = *(_DWORD *)v199;
    *(_DWORD *)&v245[3] = *(_DWORD *)&v199[3];
    uint64_t v246 = 2;
    char v249 = 0;
    long long v247 = 0u;
    long long v248 = 0u;
    *(_DWORD *)uint64_t v250 = *(_DWORD *)v198;
    *(_DWORD *)&v250[3] = *(_DWORD *)&v198[3];
    uint64_t v252 = 0;
    uint64_t v251 = 0;
    uint64_t v133 = v191;
    swift_retain();
    uint64_t v189 = v131;
    sub_250E9B5F0(v216, (uint64_t)v131, v133, v206);
    memcpy(__src, v206, sizeof(__src));
    memcpy(v205, v206, sizeof(v205));
    nullsub_1(v205);
    sub_250E9FAC8((uint64_t)v205, v133 + 144, (uint64_t)&qword_26B20F390, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
    uint64_t v134 = *(void **)(v133 + 40);
    LODWORD(v130) = HKIsFitnessTrackingEnabled();
    LOBYTE(v119) = objc_msgSend(self, sel_isWristDetectEnabled);
    uint64_t v135 = *(void **)(v133 + 32);
    id v136 = v164;
    char v137 = objc_msgSend(v164, sel_areHealthNotificationsAuthorized);
    uint64_t v144 = v135;
    v138 = v167;
    id v139 = v165;
    char v143 = v119;
    unsigned int v140 = v160;
    v141 = v186;
    unint64_t v142 = sub_250E9D6A0(v207, v146, v134, v152 & 1, v160, v186, v161, (int)v130, v143, v165, v167, v144, v137, __src);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v35 = (_UNKNOWN **)sub_250ED9654(v142);
    swift_unknownObjectRelease();

    swift_release();
    swift_bridgeObjectRelease();

    v158(v190, v168);
    (*(void (**)(char *, uint64_t))(v166 + 8))(v170, v169);
    return (uint64_t)v35;
  }
  __break(1u);
  return result;
}

uint64_t sub_250E9B170()
{
  v5[1] = *(id *)MEMORY[0x263EF8340];
  v5[0] = 0;
  id v1 = objc_msgSend(v0, sel_sleepScheduleModelWithError_, v5);
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = v5[0];
    LOBYTE(v0) = objc_msgSend(v0, sel_hasSleepFocusMode);
    objc_msgSend(v2, sel_sleepEventRecord);
    objc_msgSend(v2, sel_sleepSettings);
    objc_msgSend(v2, sel_sleepSchedule);
  }
  else
  {
    id v0 = v5[0];
    sub_250F0BFA0();

    swift_willThrow();
  }
  return v0 & 1;
}

id sub_250E9B2A8(uint64_t a1)
{
  v25[2] = a1;
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t v26 = sub_250F0C1B0();
  uint64_t v2 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v4 = (char *)v25 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0C060();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v9 = objc_msgSend(v1, sel_environmentDataSource);
  id v10 = objc_msgSend(v9, sel_currentDate);

  sub_250F0C030();
  id v11 = objc_msgSend(v1, sel_environmentDataSource);
  id v12 = objc_msgSend(v11, sel_calendarCache);

  id v13 = objc_msgSend(v12, sel_currentCalendar);
  sub_250F0C180();

  uint64_t v14 = (void *)sub_250F0BFC0();
  uint64_t v15 = (void *)sub_250F0C160();
  id v27 = 0;
  id v16 = (id)HDAnalyticsCountOfSleepDaysWithStandHoursPriorToDate();

  id v17 = v27;
  if (v16)
  {
    id v18 = v27;
    id v19 = objc_msgSend(v16, sel_integerValue);

    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v26);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  else
  {
    uint64_t v20 = v5;
    uint64_t v21 = v26;
    if (v27) {
      id v22 = v27;
    }
    else {
      id v23 = objc_msgSend(self, sel_hk_error_userInfo_, 0, 0);
    }
    id v19 = v17;
    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v20);
  }
  return v19;
}

void *sub_250E9B5F0@<X0>(const void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, void *a4@<X8>)
{
  uint64_t v109 = a4;
  uint64_t v120 = a3;
  uint64_t v6 = (void (*)(uint64_t))MEMORY[0x263F42D70];
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v145 = v7;
  uint64_t v152 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v116 = (uint64_t)&v108 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v117 = (uint64_t)&v108 - v10;
  sub_250E9374C();
  uint64_t v141 = v11;
  MEMORY[0x270FA5388](v11);
  unsigned int v140 = (char *)&v108 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v139 = sub_250F0C340();
  uint64_t v155 = *(void (**)(char *, uint64_t, uint64_t))(v139 - 8);
  MEMORY[0x270FA5388](v139);
  v138 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v146 = sub_250F0CE70();
  uint64_t v153 = *(char **)(v146 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v146);
  char v137 = (char *)&v108 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  id v136 = (char *)&v108 - v16;
  uint64_t v113 = sub_250F0C970();
  uint64_t v149 = *(void *)(v113 - 8);
  MEMORY[0x270FA5388](v113);
  uint64_t v112 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C66C(0, &qword_26B20EE20, MEMORY[0x263F090E8]);
  MEMORY[0x270FA5388](v18 - 8);
  uint64_t v123 = (char *)&v108 - v19;
  uint64_t v20 = (void (*)(uint64_t))MEMORY[0x263F42EB8];
  sub_250E9FEA8(0, (unint64_t *)&qword_26B20F060, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v127 = (char *)&v108 - v22;
  sub_250E93070(0, (unint64_t *)&unk_26B20F050, v20);
  uint64_t v126 = v23;
  uint64_t v134 = *(char **)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v122 = (uint64_t)&v108 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v147 = (uint64_t)&v108 - v26;
  sub_250E8C66C(0, &qword_26B20E530, MEMORY[0x263F42D70]);
  MEMORY[0x270FA5388](v27 - 8);
  id v157 = (char *)&v108 - v28;
  uint64_t v29 = sub_250F0C5A0();
  uint64_t v142 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v115 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v135 = (char *)&v108 - v32;
  sub_250E92450();
  uint64_t v34 = MEMORY[0x270FA5388](v33 - 8);
  uint64_t v119 = (uint64_t)&v108 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  id v38 = (char *)&v108 - v37;
  uint64_t v39 = MEMORY[0x270FA5388](v36);
  uint64_t v144 = (uint64_t)&v108 - v40;
  MEMORY[0x270FA5388](v39);
  uint64_t v151 = (uint64_t)&v108 - v41;
  sub_250E9FEA8(0, (unint64_t *)&qword_26B20F040, (unint64_t *)&qword_26B20F030, v6);
  MEMORY[0x270FA5388](v42 - 8);
  uint64_t v118 = (uint64_t)&v108 - v43;
  uint64_t v44 = sub_250F0C640();
  uint64_t v45 = *(void *)(v44 - 8);
  MEMORY[0x270FA5388](v44);
  id v47 = (char *)&v108 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v160, a1, sizeof(v160));
  swift_retain();
  swift_retain();
  uint64_t v48 = sub_250EB7B5C();
  swift_release();
  uint64_t v49 = a2 + *(void *)(*(void *)a2 + 104);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v45 + 16))(v47, v49, v44);
  id v50 = (uint64_t *)(a2 + *(void *)(*(void *)a2 + 112));
  uint64_t v51 = *v50;
  uint64_t v52 = v50[1];
  uint64_t v53 = *(void *)(a2 + *(void *)(*(void *)a2 + 120));
  swift_retain();
  swift_unknownObjectRetain();
  uint64_t v54 = v53;
  uint64_t v55 = (uint64_t)v38;
  uint64_t v56 = sub_250EA2F78(v48, (uint64_t)v47, v51, v52, v54);
  uint64_t v128 = v57;
  int v161 = v58;
  swift_release();
  swift_release();
  id v59 = (unint64_t *)(v56
                           + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
  uint64_t v124 = v56;
  uint64_t v133 = v56
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
  unsigned int v150 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v152 + 56);
  v152 += 56;
  uint64_t v154 = (char **)(v152 - 8);
  id v148 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v142 + 56);
  char v143 = (void (**)(char *, uint64_t, uint64_t))(v142 + 32);
  uint64_t v131 = (void (**)(char *, uint64_t))((char *)v155 + 8);
  uint64_t v132 = v142 + 16;
  uint64_t v129 = (void (**)(char *, uint64_t))(v153 + 8);
  unint64_t v130 = (void (**)(char *, uint64_t, uint64_t))(v153 + 16);
  uint64_t v125 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48);
  uint64_t v111 = (void (**)(char *, uint64_t, uint64_t))(v149 + 32);
  uint64_t v110 = (void (**)(uint64_t, uint64_t))(v149 + 8);
  uint64_t v121 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v153 + 56);
  uint64_t v114 = (void (**)(uint64_t, uint64_t))(v142 + 8);
  uint64_t v60 = v147;
  uint64_t v134 = v38;
  uint64_t v149 = v56
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries;
  uint64_t v156 = v29;
  while (1)
  {
    uint64_t v61 = v151;
    uint64_t v62 = v145;
    v150(v151, 2, 2, v145);
    swift_beginAccess();
    uint64_t v63 = v144;
    sub_250E9FF00(v61, v144);
    uint64_t v153 = *v154;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v153)(v63, 2, v62) == 2) {
      break;
    }
LABEL_25:
    sub_250E9FF64(v63, (uint64_t (*)(void))sub_250E92450);
    uint64_t v96 = v119;
    sub_250E8CDB4(v151, v119, (uint64_t (*)(void))sub_250E92450);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v153)(v96, 2, v62))
    {
      uint64_t v97 = 1;
      uint64_t v98 = v118;
    }
    else
    {
      uint64_t v98 = v118;
      sub_250E9FAC8(v96, v118, (uint64_t)&qword_26B20F030, MEMORY[0x263F42D70], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E93070);
      uint64_t v97 = 0;
    }
    v150(v98, v97, 1, v62);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v153)(v98, 1, v62) == 1)
    {
      swift_release();
      swift_release();
      swift_release();
      return memcpy(v109, v160, 0x1B8uLL);
    }
    uint64_t v99 = (void (*)(uint64_t))MEMORY[0x263F42D70];
    uint64_t v100 = v117;
    sub_250E9FAC8(v98, v117, (uint64_t)&qword_26B20F030, MEMORY[0x263F42D70], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E93070);
    id v101 = v99;
    uint64_t v102 = v116;
    sub_250E930E0(v100, v116, (unint64_t *)&qword_26B20F030, v101);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v106 = *(unsigned char *)(v102 + 8);
      uint64_t v158 = *(void *)v102;
      uint64_t v105 = v158;
      char v159 = v106;
      sub_250E92500();
      swift_willThrowTypedImpl();
      swift_allocError();
      *(void *)uint64_t v107 = v105;
      *(unsigned char *)(v107 + 8) = v106;
      sub_250E9FFC4(v100, (uint64_t)&qword_26B20F030, MEMORY[0x263F42D70], (uint64_t (*)(void))sub_250E93070);
      swift_release();
      swift_release();
      return (void *)swift_release();
    }
    uint64_t v103 = (uint64_t)v115;
    (*v143)(v115, v102, v29);
    sub_250EDF210(v103);
    (*v114)(v103, v29);
    sub_250E9FFC4(v100, (uint64_t)&qword_26B20F030, MEMORY[0x263F42D70], (uint64_t (*)(void))sub_250E93070);
  }
  uint64_t v64 = (unint64_t *)&unk_26B20F050;
  while (1)
  {
    sub_250E9FF64(v63, (uint64_t (*)(void))sub_250E92450);
    if (*(void *)(*v59 + 16)) {
      break;
    }
    uint64_t v75 = 1;
    uint64_t v85 = (uint64_t)v157;
    (*v148)(v157, 1, 1, v29);
    sub_250EA0024(v85, &qword_26B20E530, MEMORY[0x263F42D70]);
    if (v161)
    {
      int v161 = 1;
      id v59 = (unint64_t *)v149;
    }
    else
    {
      id v86 = v64;
      uint64_t v87 = (uint64_t)v127;
      sub_250F0D610();
      if ((*v125)(v87, 1, v126) == 1)
      {
        sub_250EA0080(v87);
        uint64_t v88 = *v121;
        int v161 = 1;
        uint64_t v89 = (uint64_t)v123;
        v88(v123, 1, 1, v146);
        sub_250ECC2B8(v89);
        sub_250EA0024(v89, &qword_26B20EE20, MEMORY[0x263F090E8]);
        uint64_t v75 = 2;
      }
      else
      {
        id v90 = (void (*)(uint64_t))MEMORY[0x263F42EB8];
        sub_250E9FAC8(v87, v60, (uint64_t)v86, MEMORY[0x263F42EB8], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E93070);
        uint64_t v91 = v90;
        uint64_t v92 = v122;
        sub_250E930E0(v60, v122, v86, v91);
        if (swift_getEnumCaseMultiPayload() != 1)
        {
          uint64_t v94 = (uint64_t)v112;
          uint64_t v95 = v113;
          (*v111)(v112, v92, v113);
          sub_250ECB82C(v94);
          (*v110)(v94, v95);
          uint64_t v60 = v147;
          uint64_t v64 = (unint64_t *)&unk_26B20F050;
          sub_250E9FFC4(v147, (uint64_t)&unk_26B20F050, MEMORY[0x263F42EB8], (uint64_t (*)(void))sub_250E93070);
          int v161 = 0;
          uint64_t v75 = 2;
          id v59 = (unint64_t *)v149;
          goto LABEL_6;
        }
        uint64_t v60 = v147;
        sub_250E9FFC4(v147, (uint64_t)v86, MEMORY[0x263F42EB8], (uint64_t (*)(void))sub_250E93070);
        char v93 = *(unsigned char *)(v92 + 8);
        *(void *)uint64_t v55 = *(void *)v92;
        *(unsigned char *)(v55 + 8) = v93;
        int v161 = 1;
        swift_storeEnumTagMultiPayload();
        uint64_t v75 = 0;
      }
      uint64_t v64 = v86;
      id v59 = (unint64_t *)v149;
    }
LABEL_6:
    v150(v55, v75, 2, v62);
    uint64_t v76 = v151;
    sub_250E9FF64(v151, (uint64_t (*)(void))sub_250E92450);
    sub_250E8CDB4(v55, v76, (uint64_t (*)(void))sub_250E92450);
    sub_250E9FF00(v76, v63);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v153)(v63, 2, v62) != 2) {
      goto LABEL_25;
    }
  }
  swift_beginAccess();
  unint64_t v77 = *v59;
  int64_t v78 = *(void *)(*v59 + 16);
  if (v78)
  {
    uint64_t v79 = v142;
    unint64_t v80 = (*(unsigned __int8 *)(v79 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v79 + 80);
    (*(void (**)(char *, unint64_t, uint64_t))(v142 + 16))(v157, v77 + v80, v29);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *id v59 = v77;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0 || (unint64_t)(v78 - 1) > *(void *)(v77 + 24) >> 1)
    {
      unint64_t v77 = sub_250EA1E8C(isUniquelyReferenced_nonNull_native, v78, 1, v77);
      *id v59 = v77;
    }
    swift_arrayDestroy();
    uint64_t v82 = *(void *)(v77 + 16);
    if (!v82) {
      goto LABEL_34;
    }
    uint64_t v83 = v82 - 1;
    uint64_t v84 = *(void *)(v79 + 72);
    if (v84 > 0 || v77 + v80 >= v77 + v80 + v84 + v84 * v83)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v84)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    --*(void *)(v77 + 16);
    *id v59 = v77;
    swift_endAccess();
    uint64_t v65 = v157;
    (*v148)(v157, 0, 1, v29);
    uint64_t v155 = *v143;
    id v66 = v135;
    v155(v135, (uint64_t)v65, v156);
    id v67 = v136;
    sub_250F0C4B0();
    id v68 = v138;
    sub_250F0C5D0();
    uint64_t v69 = (uint64_t)v140;
    sub_250F0C300();
    (*v131)(v68, v139);
    uint64_t v70 = v137;
    uint64_t v71 = v146;
    (*v130)(v137, v69 + *(int *)(v141 + 36), v146);
    sub_250E9FF64(v69, (uint64_t (*)(void))sub_250E9374C);
    sub_250E9FE18((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
    sub_250F0D330();
    LODWORD(v65) = v158 == 0;
    id v72 = *v129;
    (*v129)(v70, v71);
    id v73 = v67;
    id v59 = (unint64_t *)v149;
    v72(v73, v71);
    v161 |= v65;
    uint64_t v55 = (uint64_t)v134;
    uint64_t v74 = v66;
    uint64_t v29 = v156;
    v155(v134, (uint64_t)v74, v156);
    uint64_t v62 = v145;
    swift_storeEnumTagMultiPayload();
    uint64_t v75 = 0;
    uint64_t v64 = (unint64_t *)&unk_26B20F050;
    uint64_t v60 = v147;
    uint64_t v63 = v144;
    goto LABEL_6;
  }
  __break(1u);
LABEL_34:
  swift_release();
  uint64_t result = (void *)sub_250F0D600();
  __break(1u);
  return result;
}

char *sub_250E9C86C(void *a1)
{
  uint64_t v2 = v1;
  id v45 = a1;
  uint64_t v3 = sub_250F0D230();
  uint64_t v46 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v34 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C66C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)v34 - v7;
  uint64_t v9 = *(void **)(v1 + 16);
  id v10 = objc_msgSend(v9, sel_profileExtensionsConformingToProtocol_, &unk_2701FAD40);
  uint64_t v11 = MEMORY[0x263F8EE58];
  uint64_t v12 = sub_250F0D040();

  if (!*(void *)(v12 + 16))
  {
    long long v48 = 0u;
    long long v49 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  sub_250E8BF18(v12 + 32, (uint64_t)&v48);
  swift_bridgeObjectRelease();
  if (!*((void *)&v49 + 1))
  {
LABEL_8:
    sub_250E9FFC4((uint64_t)&v48, (uint64_t)&qword_26B20F070, v11 + 8, (uint64_t (*)(void))sub_250E9FE60);
    goto LABEL_9;
  }
  sub_250E9D044();
  if ((swift_dynamicCast() & 1) == 0)
  {
LABEL_9:
    sub_250E9CFF0();
    swift_allocError();
    unsigned char *v28 = 2;
    swift_willThrow();
    return v8;
  }
  uint64_t v13 = *(void *)(v2 + 104);
  if (v13)
  {
    id v44 = (id)v47[0];
    uint64_t v15 = *(void *)(v2 + 64);
    uint64_t v14 = *(void *)(v2 + 72);
    uint64_t v17 = *(void *)(v2 + 80);
    uint64_t v16 = *(void *)(v2 + 88);
    uint64_t v18 = *(void *)(v2 + 96);
    uint64_t v19 = *(void *)(v2 + 112);
    uint64_t v20 = *(void *)(v2 + 120);
    int v21 = *(unsigned __int8 *)(v2 + 136);
    uint64_t v35 = *(void *)(v2 + 128);
    uint64_t v36 = v15;
    v50[0] = v15;
    v50[1] = v14;
    uint64_t v38 = v17;
    uint64_t v39 = v18;
    v50[2] = v17;
    uint64_t v40 = v16;
    uint64_t v41 = v20;
    char v51 = v16 & 1;
    uint64_t v52 = v18;
    uint64_t v53 = v13;
    uint64_t v42 = v19;
    __int16 v54 = v19 & 0xFF01;
    uint64_t v55 = v20;
    uint64_t v56 = v35;
    v34[1] = v21;
    char v57 = v21 & 1;
    uint64_t v37 = v14;
    swift_bridgeObjectRetain();
    uint64_t v43 = v13;
    swift_bridgeObjectRetain();
    id v45 = objc_msgSend(v45, sel_environmentDataSource);
    sub_250E8D194(0, &qword_26B20EEF0);
    sub_250F0D210();
    id v22 = objc_allocWithZone(MEMORY[0x263F43218]);
    id v23 = v9;
    uint64_t v24 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    id v25 = objc_msgSend(v22, sel_initWithCategory_domainName_profile_, 105, v24, v23);

    uint64_t v26 = v46;
    (*(void (**)(char *, void, uint64_t))(v46 + 104))(v5, *MEMORY[0x263F42F70], v3);
    sub_250F0D220();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v5, v3);
    uint64_t v27 = v58;
    sub_250F0D1F0();
    if (!v27)
    {

      swift_bridgeObjectRelease();
      id v31 = objc_msgSend(objc_msgSend(v44, sel_getPregnancyModelProvider), sel_getCurrentPregnancyModel);
      swift_unknownObjectRelease();
      sub_250E9FAC8(v2 + 144, (uint64_t)&v48, (uint64_t)&qword_26B20F390, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
      sub_250E9FAC8((uint64_t)&v48, (uint64_t)v47, (uint64_t)&qword_26B20F390, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
      uint64_t v32 = v45;
      uint64_t v33 = sub_250E9F258((uint64_t)v50, v45, (uint64_t)v8, v31, (uint64_t)v47);

      sub_250E9D09C(v36, v37, v38, v40, v39, v43);
      sub_250EA0024((uint64_t)v8, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      uint64_t v8 = (char *)sub_250ED9654(v33);
      swift_unknownObjectRelease();
      swift_bridgeObjectRelease();
      return v8;
    }

    swift_bridgeObjectRelease();
    sub_250E9D09C(v36, v37, v38, v40, v39, v43);
  }
  else
  {
    sub_250E9CFF0();
    swift_allocError();
    *uint64_t v30 = 0;
    swift_willThrow();
  }
  swift_unknownObjectRelease();
  return v8;
}

id sub_250E9CE2C(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, void (*a5)(id))
{
  id v6 = a3;
  swift_retain();
  a5(v6);
  swift_release();

  uint64_t v7 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_250E9CF24()
{
  swift_release();
  sub_250E9D09C(*(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), *(void *)(v0 + 96), *(void *)(v0 + 104));
  return v0;
}

uint64_t sub_250E9CF98()
{
  sub_250E9CF24();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for HealthBalanceDailyAnalyticsEvent()
{
  return self;
}

unint64_t sub_250E9CFF0()
{
  unint64_t result = qword_269B10A48;
  if (!qword_269B10A48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10A48);
  }
  return result;
}

unint64_t sub_250E9D044()
{
  unint64_t result = qword_269B10A50;
  if (!qword_269B10A50)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_269B10A50);
  }
  return result;
}

uint64_t sub_250E9D09C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_250E9D0E0@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v3 = a1[1];
  sub_250E9FCC0((uint64_t)(a1 + 2), (uint64_t)(a2 + 2));
  *a2 = v4;
  a2[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_250E9D134(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v51 = a1;
  uint64_t v52 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v53 = v8;
  uint64_t v54 = 0;
  uint64_t v55 = v11 & v9;
  uint64_t v56 = a2;
  uint64_t v57 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_250E9D498((uint64_t)&v48);
  uint64_t v12 = v49;
  if (!v49) {
    goto LABEL_27;
  }
  uint64_t v13 = v48;
  sub_250E9FB90(v50, (uint64_t)v47);
  uint64_t v14 = *(void **)a5;
  unint64_t v16 = sub_250EFCF60(v13, v12);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_28:
    __break(1u);
    goto LABEL_29;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_250EDA544();
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    uint64_t v24 = *(void **)a5;
    *(void *)(*(void *)a5 + 8 * (v16 >> 6) + 64) |= 1 << v16;
    id v25 = (uint64_t *)(v24[6] + 16 * v16);
    uint64_t *v25 = v13;
    v25[1] = v12;
    sub_250E9FB90(v47, v24[7] + 40 * v16);
    uint64_t v26 = v24[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    void v24[2] = v28;
LABEL_16:
    sub_250E9D498((uint64_t)&v48);
    for (uint64_t i = v49; v49; uint64_t i = v49)
    {
      uint64_t v31 = v48;
      sub_250E9FB90(v50, (uint64_t)v47);
      uint64_t v32 = *(void **)a5;
      unint64_t v34 = sub_250EFCF60(v31, i);
      uint64_t v35 = v32[2];
      BOOL v36 = (v33 & 1) == 0;
      uint64_t v37 = v35 + v36;
      if (__OFADD__(v35, v36)) {
        goto LABEL_28;
      }
      char v38 = v33;
      if (v32[3] < v37)
      {
        sub_250ED9E70(v37, 1);
        unint64_t v39 = sub_250EFCF60(v31, i);
        if ((v38 & 1) != (v40 & 1)) {
          goto LABEL_30;
        }
        unint64_t v34 = v39;
      }
      if (v38)
      {
        sub_250E9FCC0((uint64_t)v47, (uint64_t)v46);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
        swift_bridgeObjectRelease();
        uint64_t v30 = *(void *)(*(void *)a5 + 56) + 40 * v34;
        __swift_destroy_boxed_opaque_existential_1(v30);
        sub_250E9FB90(v46, v30);
      }
      else
      {
        uint64_t v41 = *(void **)a5;
        *(void *)(*(void *)a5 + 8 * (v34 >> 6) + 64) |= 1 << v34;
        uint64_t v42 = (uint64_t *)(v41[6] + 16 * v34);
        uint64_t *v42 = v31;
        v42[1] = i;
        sub_250E9FB90(v47, v41[7] + 40 * v34);
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_29;
        }
        v41[2] = v44;
      }
      sub_250E9D498((uint64_t)&v48);
    }
LABEL_27:
    swift_release();
    swift_bridgeObjectRelease();
    sub_250E9FD24();
    return swift_release();
  }
  sub_250ED9E70(v19, a4 & 1);
  unint64_t v21 = sub_250EFCF60(v13, v12);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    sub_250E9FCC0((uint64_t)v47, (uint64_t)v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v47);
    swift_bridgeObjectRelease();
    uint64_t v23 = *(void *)(*(void *)a5 + 56) + 40 * v16;
    __swift_destroy_boxed_opaque_existential_1(v23);
    sub_250E9FB90(v46, v23);
    goto LABEL_16;
  }
LABEL_30:
  uint64_t result = sub_250F0D6C0();
  __break(1u);
  return result;
}

uint64_t sub_250E9D498@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = v1[2];
  int64_t v5 = v1[3];
  int64_t v7 = v5;
  unint64_t v8 = v1[4];
  if (v8)
  {
    uint64_t v9 = (v8 - 1) & v8;
    unint64_t v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    uint64_t v11 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = *v11;
    uint64_t v12 = v11[1];
    sub_250E9FCC0(*(void *)(v3 + 56) + 40 * v10, (uint64_t)v26);
    *(void *)&long long v25 = v13;
    *((void *)&v25 + 1) = v12;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return result;
  }
  int64_t v15 = (unint64_t)(v6 + 64) >> 6;
  if (v14 < v15)
  {
    unint64_t v16 = *(void *)(v4 + 8 * v14);
    if (v16)
    {
LABEL_7:
      uint64_t v9 = (v16 - 1) & v16;
      unint64_t v10 = __clz(__rbit64(v16)) + (v14 << 6);
      int64_t v7 = v14;
      goto LABEL_3;
    }
    int64_t v17 = v5 + 2;
    int64_t v7 = v5 + 1;
    if (v5 + 2 < v15)
    {
      unint64_t v16 = *(void *)(v4 + 8 * v17);
      if (v16)
      {
LABEL_10:
        int64_t v14 = v17;
        goto LABEL_7;
      }
      int64_t v7 = v5 + 2;
      if (v5 + 3 < v15)
      {
        unint64_t v16 = *(void *)(v4 + 8 * (v5 + 3));
        if (v16)
        {
          int64_t v14 = v5 + 3;
          goto LABEL_7;
        }
        int64_t v17 = v5 + 4;
        int64_t v7 = v5 + 3;
        if (v5 + 4 < v15)
        {
          unint64_t v16 = *(void *)(v4 + 8 * v17);
          if (v16) {
            goto LABEL_10;
          }
          int64_t v14 = v5 + 5;
          int64_t v7 = v5 + 4;
          if (v5 + 5 < v15)
          {
            unint64_t v16 = *(void *)(v4 + 8 * v14);
            if (v16) {
              goto LABEL_7;
            }
            int64_t v7 = v15 - 1;
            int64_t v18 = v5 + 6;
            while (v15 != v18)
            {
              unint64_t v16 = *(void *)(v4 + 8 * v18++);
              if (v16)
              {
                int64_t v14 = v18 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  uint64_t v9 = 0;
  uint64_t v27 = 0;
  memset(v26, 0, sizeof(v26));
  long long v25 = 0u;
LABEL_23:
  *uint64_t v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  uint64_t v19 = (void (*)(_OWORD *))v1[5];
  uint64_t result = sub_250E9FD2C((uint64_t)&v25, (uint64_t)v23);
  if (*((void *)&v23[0] + 1))
  {
    v21[0] = v23[0];
    v21[1] = v23[1];
    v21[2] = v23[2];
    uint64_t v22 = v24;
    v19(v21);
    return sub_250E9FF64((uint64_t)v21, (uint64_t (*)(void))sub_250E9FDAC);
  }
  else
  {
    *(void *)(a1 + 48) = 0;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)a1 = 0u;
  }
  return result;
}

unint64_t sub_250E9D6A0(uint64_t *a1, void *a2, void *a3, int a4, void *a5, void *a6, void *a7, int a8, unsigned __int8 a9, void *a10, void *a11, void *a12, char a13, void *__src)
{
  int v155 = a8;
  id v156 = a7;
  id v157 = a6;
  id v158 = a5;
  int v159 = a4;
  id v154 = a3;
  id v152 = a2;
  uint64_t v173 = *MEMORY[0x263EF8340];
  memcpy(v172, __src, sizeof(v172));
  unint64_t v163 = MEMORY[0x263F8EE80];
  uint64_t v15 = a1[1];
  if (v15)
  {
    uint64_t v16 = *a1;
    uint64_t v17 = MEMORY[0x263F8D338];
    *(void *)&v166[24] = MEMORY[0x263F8D310];
    *(void *)&v166[32] = MEMORY[0x263F8D338];
    *(void *)uint64_t v166 = v16;
    *(void *)&v166[8] = v15;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v170 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v19);
    unint64_t v21 = (char *)&v150 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v22 + 16))(v21);
    sub_250EDB364((uint64_t)v21, 0xD000000000000016, 0x8000000250F10970, isUniquelyReferenced_nonNull_native, &v170, MEMORY[0x263F8D310], v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v170;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_250ED9D64(0xD000000000000016, 0x8000000250F10970, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  id v153 = a12;
  uint64_t v23 = MEMORY[0x263F8D4F8];
  uint64_t v24 = MEMORY[0x263F8D510];
  *(void *)&v166[24] = MEMORY[0x263F8D4F8];
  *(void *)&v166[32] = MEMORY[0x263F8D510];
  v166[0] = a13 & 1;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v25 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v170 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v26 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v26);
  uint64_t v28 = (char *)&v150 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v29 + 16))(v28);
  sub_250EDAD90(*v28, 0xD000000000000020, 0x8000000250F10990, v25, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v170;
  swift_bridgeObjectRelease();
  int v161 = a1;
  char v30 = *((unsigned char *)a1 + 48);
  *(void *)&v166[24] = v23;
  *(void *)&v166[32] = v24;
  v166[0] = v30;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v31 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v170 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v32 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v32);
  unint64_t v34 = (char *)&v150 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v35 + 16))(v34);
  sub_250EDAD90(*v34, 0xD000000000000021, 0x8000000250F109C0, v31, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v170;
  swift_bridgeObjectRelease();
  char v36 = sub_250F0CB50();
  char v37 = v36;
  if (v36 == 2)
  {
    sub_250ED9D64(0xD000000000000014, 0x8000000250F109F0, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
    uint64_t v38 = MEMORY[0x263F8D510];
  }
  else
  {
    *(void *)&v166[24] = v23;
    uint64_t v38 = MEMORY[0x263F8D510];
    *(void *)&v166[32] = MEMORY[0x263F8D510];
    v166[0] = v36 & 1;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v39 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v170 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v40);
    uint64_t v42 = (char *)&v150 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v43 + 16))(v42);
    sub_250EDB364((uint64_t)v42, 0xD000000000000014, 0x8000000250F109F0, v39, &v170, v23, v38);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v170;
    swift_bridgeObjectRelease();
  }
  *(void *)&v166[24] = v23;
  *(void *)&v166[32] = v38;
  v166[0] = v37 != 2;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v44 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v170 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v45 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v45);
  id v47 = (char *)&v150 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v48 + 16))(v47);
  sub_250EDAD90(*v47, 0x72616F626E4F7369, 0xEB00000000646564, v44, &v170);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v170;
  swift_bridgeObjectRelease();
  uint64_t v49 = MEMORY[0x263F8D6C8];
  sub_250E9FAC8((uint64_t)(v161 + 8), (uint64_t)v169, (uint64_t)&unk_26B20F4E8, MEMORY[0x263F8D6C8], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  sub_250E9FAC8((uint64_t)v169, (uint64_t)&v170, (uint64_t)&unk_26B20F4E8, v49, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  uint64_t v50 = MEMORY[0x263F8D6E8];
  if (v171)
  {
    sub_250ED9D64(0xD000000000000013, 0x8000000250F10A10, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  else
  {
    *(void *)&v166[24] = v49;
    *(void *)&v166[32] = MEMORY[0x263F8D6E8];
    *(void *)uint64_t v166 = v170;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v52);
    uint64_t v54 = (char *)&v150 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v55 + 16))(v54);
    sub_250EDB364((uint64_t)v54, 0xD000000000000013, 0x8000000250F10A10, v51, &v162, v49, v50);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  id v151 = a11;
  id v152 = a10;
  uint64_t v56 = *MEMORY[0x263F0ADD8];
  *(void *)uint64_t v166 = 0;
  id v57 = objc_msgSend(v153, sel_hk_safeNumberIfExistsForKeyPath_error_, v56, v166);
  if (v57)
  {
    uint64_t v58 = v57;
    id v59 = *(id *)v166;
    unsigned __int8 v60 = objc_msgSend(v58, sel_BOOLValue);

    uint64_t v61 = MEMORY[0x263F8D4F8];
    *(void *)&v166[24] = MEMORY[0x263F8D4F8];
    uint64_t v62 = MEMORY[0x263F8D510];
    *(void *)&v166[32] = MEMORY[0x263F8D510];
    v166[0] = v60;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    LOBYTE(v58) = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v63 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v63);
    uint64_t v65 = (char *)&v150 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v66 + 16))(v65);
    sub_250EDB364((uint64_t)v65, 0xD000000000000012, 0x8000000250F10A30, (char)v58, &v162, v61, v62);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v67 = *(id *)v166;
    id v68 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250ED9D64(0xD000000000000012, 0x8000000250F10A30, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
    uint64_t v160 = 0;
    uint64_t v61 = MEMORY[0x263F8D4F8];
  }
  uint64_t v69 = *MEMORY[0x263F09F78];
  *(void *)uint64_t v166 = 0;
  id v70 = objc_msgSend(v154, sel_hk_safeNumberIfExistsForKeyPath_error_, v69, v166);
  if (v70)
  {
    uint64_t v71 = v70;
    id v72 = *(id *)v166;
    unsigned __int8 v73 = objc_msgSend(v71, (SEL)&selRef__countPerMinuteUnit);

    *(void *)&v166[24] = v61;
    uint64_t v74 = MEMORY[0x263F8D510];
    *(void *)&v166[32] = MEMORY[0x263F8D510];
    v166[0] = v73;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    LOBYTE(v71) = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v75 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v75);
    unint64_t v77 = (char *)&v150 - ((v76 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v78 + 16))(v77);
    sub_250EDB364((uint64_t)v77, 0xD000000000000014, 0x8000000250F10A50, (char)v71, &v162, v61, v74);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    id v79 = *(id *)v166;
    unint64_t v80 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250ED9D64(0xD000000000000014, 0x8000000250F10A50, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
    uint64_t v160 = 0;
    uint64_t v74 = MEMORY[0x263F8D510];
  }
  uint64_t v81 = *MEMORY[0x263F09600];
  id v82 = objc_msgSend(v151, sel_objectForKeyedSubscript_, *MEMORY[0x263F09600]);
  uint64_t v83 = *MEMORY[0x263F09678];
  unsigned __int8 v84 = objc_msgSend(v82, sel_isRequirementSatisfiedWithIdentifier_, *MEMORY[0x263F09678]);

  *(void *)&v166[24] = v61;
  *(void *)&v166[32] = v74;
  v166[0] = v84;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  LOBYTE(v82) = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v85 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v85);
  uint64_t v87 = (char *)&v150 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v88 + 16))(v87);
  sub_250EDAD90(*v87, 0xD000000000000012, 0x8000000250F10A70, (char)v82, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  uint64_t v89 = MEMORY[0x263F8D510];
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  id v90 = objc_msgSend(v152, sel_objectForKeyedSubscript_, v81);
  LOBYTE(v83) = objc_msgSend(v90, sel_isRequirementSatisfiedWithIdentifier_, v83);

  *(void *)&v166[24] = v61;
  *(void *)&v166[32] = v89;
  v166[0] = v83;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  LOBYTE(v83) = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v91 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v91);
  char v93 = (char *)&v150 - ((v92 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v94 + 16))(v93);
  sub_250EDAD90(*v93, 0xD000000000000018, 0x8000000250F10A90, v83, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  *(void *)&v166[24] = v61;
  *(void *)&v166[32] = v89;
  v166[0] = v155 & 1;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  LOBYTE(v83) = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v95 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v95);
  uint64_t v97 = (char *)&v150 - ((v96 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v98 + 16))(v97);
  sub_250EDAD90(*v97, 0xD000000000000018, 0x8000000250F10AB0, v83, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  if (v156)
  {
    unsigned __int8 v99 = objc_msgSend(v156, sel_isEnabled);
    *(void *)&v166[24] = v61;
    *(void *)&v166[32] = v89;
    v166[0] = v99;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v100 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v101 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v101);
    uint64_t v103 = (char *)&v150 - ((v102 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v104 + 16))(v103);
    sub_250EDB364((uint64_t)v103, 0xD000000000000016, 0x8000000250F10AD0, v100, &v162, v61, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_250ED9D64(0xD000000000000016, 0x8000000250F10AD0, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  uint64_t v105 = v157;
  uint64_t v106 = MEMORY[0x263F8D4F8];
  sub_250E9FAC8((uint64_t)v161 + 49, (uint64_t)&v164, (uint64_t)&unk_26B20F4E0, MEMORY[0x263F8D4F8], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  sub_250E9FAC8((uint64_t)&v164, (uint64_t)&v165, (uint64_t)&unk_26B20F4E0, v106, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  if (v165 == 2)
  {
    sub_250ED9D64(0xD00000000000001BLL, 0x8000000250F10AF0, (uint64_t)v166);
    sub_250EA0024((uint64_t)v166, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  else
  {
    *(void *)&v166[24] = v106;
    *(void *)&v166[32] = v89;
    v166[0] = v165;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v107 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v108 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v108);
    uint64_t v110 = (char *)&v150 - ((v109 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v111 + 16))(v110);
    sub_250EDB364((uint64_t)v110, 0xD00000000000001BLL, 0x8000000250F10AF0, v107, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  LODWORD(v157) = a9;
  if (v105)
  {
    unsigned __int16 v112 = (unsigned __int16)objc_msgSend(v105, sel_sleepModeOptions);
    *(void *)&v166[24] = v106;
    *(void *)&v166[32] = v89;
    v166[0] = (v112 & 0x4000) != 0;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v113 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v114 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v114);
    uint64_t v116 = (char *)&v150 - ((v115 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v117 + 16))(v116);
    sub_250EDB364((uint64_t)v116, 0xD000000000000014, 0x8000000250F10B10, v113, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
    unsigned __int8 v118 = objc_msgSend(v105, sel_scheduledSleepMode);
    *(void *)&v166[24] = v106;
    *(void *)&v166[32] = v89;
    v166[0] = v118;
    sub_250E9FB90((long long *)v166, (uint64_t)v167);
    char v119 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v163;
    unint64_t v163 = 0x8000000000000000;
    uint64_t v120 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
    MEMORY[0x270FA5388](v120);
    uint64_t v122 = (char *)&v150 - ((v121 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v123 + 16))(v122);
    sub_250EDB364((uint64_t)v122, 0xD00000000000001CLL, 0x8000000250F10B30, v119, &v162, v106, v89);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
    unint64_t v163 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_250ED9D64(0xD000000000000014, 0x8000000250F10B10, (uint64_t)v167);
    sub_250EA0024((uint64_t)v167, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
    sub_250ED9D64(0xD00000000000001CLL, 0x8000000250F10B30, (uint64_t)v167);
    sub_250EA0024((uint64_t)v167, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  unsigned __int8 v124 = objc_msgSend(v158, sel_isAnySleepTrackingOnboardingCompleted);
  *(void *)&v166[24] = v106;
  *(void *)&v166[32] = v89;
  v166[0] = v124;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v125 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v126 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v126);
  uint64_t v128 = (char *)&v150 - ((v127 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v129 + 16))(v128);
  sub_250EDAD90(*v128, 0xD000000000000017, 0x8000000250F10B50, v125, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  *(void *)&v166[24] = v106;
  *(void *)&v166[32] = v89;
  v166[0] = v159 & 1;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v130 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v131 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v131);
  uint64_t v133 = (char *)&v150 - ((v132 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v134 + 16))(v133);
  sub_250EDAD90(*v133, 0xD000000000000011, 0x8000000250F10B70, v130, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  *(void *)&v166[24] = v106;
  *(void *)&v166[32] = v89;
  v166[0] = v157 & 1;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v135 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v136 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v136);
  v138 = (char *)&v150 - ((v137 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v139 + 16))(v138);
  sub_250EDAD90(*v138, 0xD000000000000017, 0x8000000250F10B90, v135, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  uint64_t v140 = v161[7];
  *(void *)&v166[32] = MEMORY[0x263F8D6E8];
  *(void *)&v166[24] = MEMORY[0x263F8D6C8];
  *(void *)uint64_t v166 = v140;
  sub_250E9FB90((long long *)v166, (uint64_t)v167);
  char v141 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v142 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v167, v168);
  MEMORY[0x270FA5388](v142);
  uint64_t v144 = (uint64_t *)((char *)&v150 - ((v143 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v145 + 16))(v144);
  sub_250EDAF80(*v144, 0xD00000000000001ALL, 0x8000000250F10BB0, v141, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v167);
  unint64_t v163 = v162;
  swift_bridgeObjectRelease();
  memcpy(v166, v172, sizeof(v166));
  unint64_t v146 = sub_250EDF514();
  char v147 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v166 = v163;
  unint64_t v163 = 0x8000000000000000;
  uint64_t v148 = v160;
  sub_250E9D134(v146, (uint64_t)sub_250E9D0E0, 0, v147, (uint64_t)v166);
  unint64_t v163 = *(void *)v166;
  if (v148)
  {
    unint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return v163;
  }
  return result;
}

uint64_t sub_250E9F258(uint64_t a1, void *a2, uint64_t a3, void *a4, uint64_t a5)
{
  uint64_t v56 = a4;
  id v55 = a2;
  sub_250E8C66C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v8 - 8);
  unint64_t v10 = (char *)&v55 - v9;
  sub_250E9FAC8(a5, (uint64_t)v66, (uint64_t)&qword_26B20F390, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  uint64_t v11 = MEMORY[0x263F8EE80];
  unint64_t v67 = MEMORY[0x263F8EE80];
  uint64_t v12 = MEMORY[0x263F8D6C8];
  sub_250E9FAC8(a1 + 16, (uint64_t)v63, (uint64_t)&unk_26B20F4E8, MEMORY[0x263F8D6C8], (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  sub_250E9FAC8((uint64_t)v63, (uint64_t)&v64, (uint64_t)&unk_26B20F4E8, v12, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  if (v65)
  {
    sub_250ED9D64(6645601, 0xE300000000000000, (uint64_t)v59);
    sub_250EA0024((uint64_t)v59, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
  }
  else
  {
    *(void *)&v59[24] = v12;
    *(void *)&v59[32] = MEMORY[0x263F8D6E8];
    *(void *)id v59 = v64;
    sub_250E9FB90((long long *)v59, (uint64_t)v58);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v60 = v11;
    uint64_t v14 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
    MEMORY[0x270FA5388](v14);
    uint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v17 + 16))(v16);
    sub_250EDB364((uint64_t)v16, 6645601, 0xE300000000000000, isUniquelyReferenced_nonNull_native, &v60, v12, MEMORY[0x263F8D6E8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    unint64_t v67 = v60;
    swift_bridgeObjectRelease();
  }
  uint64_t v18 = *(void *)(a1 + 32);
  uint64_t v19 = *(void *)(a1 + 40);
  *(void *)&v59[24] = MEMORY[0x263F8D310];
  *(void *)&v59[32] = MEMORY[0x263F8D338];
  *(void *)id v59 = v18;
  *(void *)&v59[8] = v19;
  sub_250E9FB90((long long *)v59, (uint64_t)v58);
  swift_bridgeObjectRetain();
  unint64_t v20 = v67;
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)&long long v60 = v20;
  uint64_t v22 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (uint64_t *)((char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  sub_250EDB174(*v24, v24[1], 0x6369676F6C6F6962, 0xED00007865536C61, v21, &v60);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
  unint64_t v67 = v60;
  swift_bridgeObjectRelease();
  sub_250E9FBA8(a3, (uint64_t)v10);
  uint64_t v26 = sub_250F0C060();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v27 + 48))(v10, 1, v26) != 1)
  {
    uint64_t v28 = (void *)sub_250F0BFC0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v10, v26);
  }
  id v29 = objc_msgSend(v55, sel_bucketedNumberOfDaysSinceDate_, v28, v55);

  if (v29)
  {
    uint64_t v30 = sub_250E8D194(0, &qword_26B20EF10);
    *(void *)&v59[24] = v30;
    unint64_t v31 = sub_250E9FC58();
    *(void *)&v59[32] = v31;
    *(void *)id v59 = v29;
    sub_250E9FB90((long long *)v59, (uint64_t)v58);
    unint64_t v32 = v67;
    char v33 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)&long long v60 = v32;
    unint64_t v67 = 0x8000000000000000;
    uint64_t v34 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v58, v58[3]);
    MEMORY[0x270FA5388](v34);
    char v36 = (char *)&v55 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v36);
    sub_250EDB364((uint64_t)v36, 0xD000000000000019, 0x8000000250F10920, v33, &v60, v30, v31);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v58);
    unint64_t v67 = v60;
    swift_bridgeObjectRelease();
    uint64_t v38 = v56;
    if (v56)
    {
LABEL_8:
      char v39 = (char *)objc_msgSend(v38, sel_state);
      uint64_t v40 = MEMORY[0x263F8D4F8];
      uint64_t v41 = MEMORY[0x263F8D510];
      uint64_t v61 = MEMORY[0x263F8D4F8];
      uint64_t v62 = MEMORY[0x263F8D510];
      LOBYTE(v60) = (unint64_t)(v39 - 1) < 2;
      sub_250E9FB90(&v60, (uint64_t)v59);
      unint64_t v42 = v67;
      char v43 = swift_isUniquelyReferenced_nonNull_native();
      v58[0] = v42;
      uint64_t v44 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v59, *(uint64_t *)&v59[24]);
      MEMORY[0x270FA5388](v44);
      uint64_t v46 = (char *)&v55 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v47 + 16))(v46);
      sub_250EDB364((uint64_t)v46, 0xD000000000000016, 0x8000000250F10940, v43, v58, v40, v41);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v59);
      unint64_t v67 = v58[0];
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
  }
  else
  {
    sub_250ED9D64(0xD000000000000019, 0x8000000250F10920, (uint64_t)v59);
    sub_250EA0024((uint64_t)v59, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
    uint64_t v38 = v56;
    if (v56) {
      goto LABEL_8;
    }
  }
  sub_250ED9D64(0xD000000000000016, 0x8000000250F10940, (uint64_t)v59);
  sub_250EA0024((uint64_t)v59, (unint64_t *)&qword_26B20F4C0, (void (*)(uint64_t))sub_250E9FB38);
LABEL_11:
  sub_250E9FAC8((uint64_t)v66, (uint64_t)v59, (uint64_t)&qword_26B20F390, (uint64_t)&type metadata for SleepingSampleDaySummaryCollectionAnalytics, (uint64_t (*)(void, uint64_t, uint64_t))sub_250E9FE60);
  if (sub_250E9FC28((uint64_t)v59) == 1)
  {
    unint64_t v48 = sub_250EFB8EC(MEMORY[0x263F8EE78]);
  }
  else
  {
    memcpy(v58, v59, sizeof(v58));
    unint64_t v48 = sub_250EDF68C();
  }
  uint64_t v49 = v48;
  unint64_t v50 = v67;
  char v51 = swift_isUniquelyReferenced_nonNull_native();
  v58[0] = v50;
  uint64_t v52 = v57;
  sub_250E9D134(v49, (uint64_t)sub_250E9D0E0, 0, v51, (uint64_t)v58);
  if (v52)
  {
    uint64_t result = swift_bridgeObjectRelease();
    __break(1u);
  }
  else
  {
    uint64_t v53 = v58[0];
    swift_bridgeObjectRelease();
    return v53;
  }
  return result;
}

uint64_t sub_250E9FAC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void, uint64_t, uint64_t))
{
  uint64_t v7 = a5(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 32))(a2, a1, v7);
  return a2;
}

unint64_t sub_250E9FB38()
{
  unint64_t result = qword_26B20F4B8;
  if (!qword_26B20F4B8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20F4B8);
  }
  return result;
}

uint64_t sub_250E9FB90(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_250E9FBA8(uint64_t a1, uint64_t a2)
{
  sub_250E8C66C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250E9FC28(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 56);
  if (v1 >= 2) {
    int v2 = ((v1 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v2 = -2;
  }
  if (v2 < 0) {
    int v2 = -1;
  }
  return (v2 + 1);
}

unint64_t sub_250E9FC58()
{
  unint64_t result = qword_269B10A58;
  if (!qword_269B10A58)
  {
    sub_250E8D194(255, &qword_26B20EF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10A58);
  }
  return result;
}

uint64_t sub_250E9FCC0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_250E9FD24()
{
  return swift_release();
}

uint64_t sub_250E9FD2C(uint64_t a1, uint64_t a2)
{
  sub_250E8C66C(0, &qword_26B20F4D0, (void (*)(uint64_t))sub_250E9FDAC);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_250E9FDAC()
{
  if (!qword_26B20F4C8)
  {
    sub_250E9FB38();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20F4C8);
    }
  }
}

uint64_t sub_250E9FE18(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250E9FE60(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_250F0D2D0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_250E9FEA8(uint64_t a1, unint64_t *a2, unint64_t *a3, void (*a4)(uint64_t))
{
  if (!*a2)
  {
    sub_250E93070(255, a3, a4);
    unint64_t v5 = sub_250F0D2D0();
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_250E9FF00(uint64_t a1, uint64_t a2)
{
  sub_250E92450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250E9FF64(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250E9FFC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_250EA0024(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_250E8C66C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_250EA0080(uint64_t a1)
{
  sub_250E9FEA8(0, (unint64_t *)&qword_26B20F060, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *__swift_memcpy1_1(unsigned char *result, unsigned char *a2)
{
  *uint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for HealthBalanceDailyAnalyticsEvent.Error(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for HealthBalanceDailyAnalyticsEvent.Error(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *uint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250EA0268);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

uint64_t sub_250EA0290(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_250EA0298(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for HealthBalanceDailyAnalyticsEvent.Error()
{
  return &type metadata for HealthBalanceDailyAnalyticsEvent.Error;
}

unint64_t sub_250EA02B4()
{
  unint64_t result = qword_269B10A78;
  if (!qword_269B10A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10A78);
  }
  return result;
}

void sub_250EA030C()
{
  sub_250E925B8(319);
  if (v0 <= 0x3F) {
    swift_initClassMetadata2();
  }
}

id sub_250EA03AC()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  id v6 = v0;
  BOOL v7 = sub_250F0CCA0();
  os_log_type_t v8 = sub_250F0D1D0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = swift_slowAlloc();
    uint64_t v28 = v10;
    *(_DWORD *)uint64_t v9 = 136446466;
    uint64_t v11 = sub_250F0D7B0();
    uint64_t v26 = ObjectType;
    uint64_t v27 = sub_250E8BE44(v11, v12, &v28);
    uint64_t v25 = v2;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v9 + 12) = 2082;
    uint64_t v13 = sub_250E8C8C4();
    uint64_t v27 = sub_250E8BE44(v13, v14, &v28);
    uint64_t ObjectType = v26;
    sub_250F0D300();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v7, v8, "[%{public}s:%{public}s] Query stopped", (uint8_t *)v9, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  id v15 = objc_msgSend(v6, sel_profile);
  if (v15)
  {
    uint64_t v16 = v15;
    uint64_t v17 = sub_250E89300();
    uint64_t v19 = v18;

    if (v17)
    {
      id v20 = objc_msgSend(v6, sel_configuration);
      unsigned __int8 v21 = objc_msgSend(v20, sel_shouldDeactivateAfterInitialResults);

      if (v21)
      {
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v22 = swift_getObjectType();
        uint64_t v23 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v19 + 8))(v22, v19);
        sub_250EAEF70((uint64_t)v6, (uint64_t)v23);
        swift_unknownObjectRelease();
      }
    }
  }
  v29.receiver = v6;
  v29.super_class = ObjectType;
  return objc_msgSendSuper2(&v29, sel__queue_stop);
}

void sub_250EA06DC(void *a1)
{
  id v1 = a1;
  sub_250EA03AC();
}

void sub_250EA0724()
{
  swift_getObjectType();
  uint64_t v1 = sub_250F0CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(v0, sel_profile);
  if (!v5) {
    goto LABEL_9;
  }
  id v6 = v5;
  id v7 = sub_250E89590();
  if (!v7)
  {

    goto LABEL_9;
  }
  os_log_type_t v8 = v7;
  uint64_t v9 = sub_250E89538();
  if (!v9)
  {

    swift_unknownObjectRelease();
LABEL_9:
    sub_250F0CC90();
    id v11 = v0;
    unint64_t v12 = sub_250F0CCA0();
    os_log_type_t v13 = sub_250F0D1B0();
    if (os_log_type_enabled(v12, v13))
    {
      uint64_t v14 = swift_slowAlloc();
      uint64_t v22 = (void *)v1;
      uint64_t v15 = v14;
      uint64_t v16 = swift_slowAlloc();
      uint64_t v24 = v16;
      *(_DWORD *)uint64_t v15 = 136446466;
      uint64_t v17 = sub_250F0D7B0();
      uint64_t v23 = sub_250E8BE44(v17, v18, &v24);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v15 + 12) = 2082;
      uint64_t v19 = sub_250E8C8C4();
      uint64_t v23 = sub_250E8BE44(v19, v20, &v24);
      sub_250F0D300();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v12, v13, "[%{public}s:%{public}s] Unable to requery data due to unexpected configuration", (uint8_t *)v15, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v16, -1, -1);
      MEMORY[0x25338EC30](v15, -1, -1);

      (*(void (**)(char *, void *))(v2 + 8))(v4, v22);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    return;
  }
  uint64_t v22 = (void *)v9;
  sub_250E897A0((int *)v6, v8);

  swift_unknownObjectRelease();
  uint64_t v10 = v22;
}

void sub_250EA0A14(void (**a1)(char *, uint64_t, uint64_t))
{
  uint64_t v2 = v1;
  uint64_t v57 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_250F0CCB0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v59 = v3;
  uint64_t v60 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  id v7 = (char *)&v54 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v5);
  uint64_t v56 = (char *)&v54 - v9;
  MEMORY[0x270FA5388](v8);
  id v55 = (char *)&v54 - v10;
  sub_250E925B8(0);
  MEMORY[0x270FA5388](v11 - 8);
  os_log_type_t v13 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = type metadata accessor for SleepingSampleCacheRange();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v54 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_250F0CCF0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (uint64_t *)((char *)&v54 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *uint64_t v21 = objc_msgSend(v2, sel_queryQueue);
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  char v22 = sub_250F0CD00();
  (*(void (**)(void *, uint64_t))(v19 + 8))(v21, v18);
  if (v22)
  {
    uint64_t v23 = (uint64_t)v2 + qword_26B20EA10;
    swift_beginAccess();
    sub_250E920BC(v23, (uint64_t)v13, (uint64_t (*)(void))sub_250E925B8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
    {
      sub_250E8BC3C((uint64_t)v13, (uint64_t (*)(void))sub_250E925B8);
      sub_250F0CC90();
      id v24 = v2;
      uint64_t v25 = sub_250F0CCA0();
      os_log_type_t v26 = sub_250F0D1D0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        uint64_t v28 = swift_slowAlloc();
        uint64_t v62 = v28;
        *(_DWORD *)uint64_t v27 = 136446466;
        uint64_t v29 = sub_250F0D7B0();
        uint64_t v61 = sub_250E8BE44(v29, v30, &v62);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2082;
        uint64_t v31 = sub_250E8C8C4();
        uint64_t v61 = sub_250E8BE44(v31, v32, &v62);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v25, v26, "[%{public}s:%{public}s] Requerying data for client for samples added (no cache range)", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v28, -1, -1);
        MEMORY[0x25338EC30](v27, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v60 + 8))(v7, v59);
      sub_250EA0724();
    }
    else
    {
      uint64_t v33 = (uint64_t)v17;
      sub_250E8CE1C((uint64_t)v13, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange);
      if (sub_250E98578(v57))
      {
        uint64_t v34 = v55;
        sub_250F0CC90();
        id v35 = v2;
        char v36 = sub_250F0CCA0();
        os_log_type_t v37 = sub_250F0D1D0();
        if (os_log_type_enabled(v36, v37))
        {
          uint64_t v38 = swift_slowAlloc();
          uint64_t v39 = swift_slowAlloc();
          uint64_t v62 = v39;
          *(_DWORD *)uint64_t v38 = 136446466;
          uint64_t v40 = sub_250F0D7B0();
          uint64_t v61 = sub_250E8BE44(v40, v41, &v62);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          *(_WORD *)(v38 + 12) = 2082;
          uint64_t v42 = sub_250E8C8C4();
          uint64_t v61 = sub_250E8BE44(v42, v43, &v62);
          sub_250F0D300();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v36, v37, "[%{public}s:%{public}s] Requerying data for client for samples added (cache range impacted)", (uint8_t *)v38, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25338EC30](v39, -1, -1);
          MEMORY[0x25338EC30](v38, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v34, v59);
        sub_250EA0724();
      }
      else
      {
        uint64_t v44 = v56;
        sub_250F0CC90();
        id v45 = v2;
        uint64_t v46 = sub_250F0CCA0();
        os_log_type_t v47 = sub_250F0D1A0();
        if (os_log_type_enabled(v46, v47))
        {
          uint64_t v48 = swift_slowAlloc();
          uint64_t v49 = swift_slowAlloc();
          uint64_t v62 = v49;
          *(_DWORD *)uint64_t v48 = 136446466;
          uint64_t v50 = sub_250F0D7B0();
          uint64_t v61 = sub_250E8BE44(v50, v51, &v62);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          *(_WORD *)(v48 + 12) = 2082;
          uint64_t v52 = sub_250E8C8C4();
          uint64_t v61 = sub_250E8BE44(v52, v53, &v62);
          sub_250F0D300();

          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v46, v47, "[%{public}s:%{public}s] Ignoring samples added (not in cache range)", (uint8_t *)v48, 0x16u);
          swift_arrayDestroy();
          MEMORY[0x25338EC30](v49, -1, -1);
          MEMORY[0x25338EC30](v48, -1, -1);
        }
        else
        {
        }
        (*(void (**)(char *, uint64_t))(v60 + 8))(v44, v59);
      }
      sub_250E8BC3C(v33, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange);
    }
  }
  else
  {
    __break(1u);
  }
}

void sub_250EA1230()
{
  swift_getObjectType();
  uint64_t v1 = sub_250F0CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0CCF0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (uint64_t *)((char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v8 = objc_msgSend(v0, sel_queryQueue);
  (*(void (**)(void *, void, uint64_t))(v6 + 104))(v8, *MEMORY[0x263F8F0E0], v5);
  char v9 = sub_250F0CD00();
  (*(void (**)(void *, uint64_t))(v6 + 8))(v8, v5);
  if (v9)
  {
    sub_250F0CC90();
    id v10 = v0;
    uint64_t v11 = sub_250F0CCA0();
    os_log_type_t v12 = sub_250F0D1D0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = swift_slowAlloc();
      uint64_t v14 = swift_slowAlloc();
      uint64_t v21 = v1;
      uint64_t v15 = v14;
      uint64_t v23 = v14;
      *(_DWORD *)uint64_t v13 = 136446466;
      uint64_t v16 = sub_250F0D7B0();
      uint64_t v22 = sub_250E8BE44(v16, v17, &v23);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v13 + 12) = 2082;
      uint64_t v18 = sub_250E8C8C4();
      uint64_t v22 = sub_250E8BE44(v18, v19, &v23);
      sub_250F0D300();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v11, v12, "[%{public}s:%{public}s] Requerying data for client for samples removed", (uint8_t *)v13, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v15, -1, -1);
      MEMORY[0x25338EC30](v13, -1, -1);

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v21);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
    sub_250EA0724();
  }
  else
  {
    __break(1u);
  }
}

void sub_250EA1574(void *a1, uint64_t a2, uint64_t a3, char a4)
{
  swift_unknownObjectRetain();
  id v6 = a1;
  sub_250EA338C(a4);
  swift_unknownObjectRelease();
}

id sub_250EA15E8()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_250EA1620(uint64_t a1)
{
  return sub_250E8BC3C(a1 + qword_26B20EA10, (uint64_t (*)(void))sub_250E925B8);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryQueryServer()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_250EA1678()
{
  return sub_250E92074(&qword_26B20E100, MEMORY[0x263F42D70]);
}

uint64_t sub_250EA16C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v40 = a1;
  uint64_t v3 = sub_250F0C1B0();
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  MEMORY[0x270FA5388](v3);
  os_log_type_t v37 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_250F0CE70();
  uint64_t v31 = *(void *)(v36 - 8);
  uint64_t v5 = v31;
  MEMORY[0x270FA5388](v36);
  uint64_t v33 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9374C();
  MEMORY[0x270FA5388](v7 - 8);
  char v9 = (char *)&v30 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C340();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v30 - v15;
  uint64_t v17 = sub_250F0BF30();
  uint64_t v34 = *(void *)(v17 - 8);
  uint64_t v35 = v17;
  MEMORY[0x270FA5388](v17);
  unint64_t v32 = (char *)&v30 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  swift_beginAccess();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
  v20(v16, v19, v10);
  sub_250F0C300();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v11 + 8);
  v21(v16, v10);
  uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  uint64_t v23 = v33;
  uint64_t v24 = (uint64_t)v9;
  uint64_t v25 = v9;
  uint64_t v26 = v36;
  v22(v33, v25, v36);
  sub_250E8BC3C(v24, (uint64_t (*)(void))sub_250E9374C);
  v20(v14, v19, v10);
  uint64_t v27 = v37;
  sub_250F0C330();
  v21(v14, v10);
  uint64_t v28 = v32;
  sub_250F0CD90();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v27, v39);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v23, v26);
  sub_250F0BF00();
  return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v28, v35);
}

uint64_t sub_250EA1AAC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  uint64_t v4 = *v2;
  a2[3] = a1;
  a2[4] = sub_250E92074(&qword_26B20E318, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
  *a2 = v4;
  return swift_retain();
}

uint64_t sub_250EA1B24@<X0>(uint64_t a1@<X8>)
{
  return sub_250EA16C0(a1);
}

unint64_t sub_250EA1B48(uint64_t a1)
{
  unint64_t result = sub_250EA1B70();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_250EA1B70()
{
  unint64_t result = qword_26B20E300;
  if (!qword_26B20E300)
  {
    sub_250EA2690(255, (unint64_t *)&qword_26B20E310, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_250EA1C0C, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleBaselineComparisonEnumerator);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E300);
  }
  return result;
}

uint64_t sub_250EA1C0C()
{
  return sub_250E92074((unint64_t *)&unk_26B20EBF0, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
}

uint64_t sub_250EA1C40()
{
  return sub_250E92074(&qword_26B20E108, MEMORY[0x263F42EB8]);
}

uint64_t sub_250EA1C88(uint64_t a1)
{
  uint64_t result = sub_250E92074(&qword_26B20E318, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_250EA1CE0(uint64_t (*a1)(id *), uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3;
  uint64_t v19 = MEMORY[0x263F8EE78];
  if (a3 >> 62) {
    goto LABEL_18;
  }
  uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v7)
  {
    while (1)
    {
      unint64_t v8 = 0;
      uint64_t v16 = v4 & 0xFFFFFFFFFFFFFF8;
      unint64_t v17 = v4 & 0xC000000000000001;
      unint64_t v15 = v4;
      while (v17)
      {
        id v9 = (id)MEMORY[0x25338E0A0](v8, v4);
LABEL_9:
        uint64_t v10 = v9;
        unint64_t v11 = v8 + 1;
        if (__OFADD__(v8, 1)) {
          goto LABEL_17;
        }
        id v18 = v9;
        uint64_t v12 = a2;
        char v13 = a1(&v18);
        if (v3)
        {
          swift_bridgeObjectRelease();

          swift_release();
          return v12;
        }
        if (v13)
        {
          sub_250F0D4F0();
          sub_250F0D520();
          unint64_t v4 = v15;
          sub_250F0D530();
          sub_250F0D500();
        }
        else
        {
        }
        ++v8;
        if (v11 == v7)
        {
          uint64_t v12 = v19;
          goto LABEL_20;
        }
      }
      if (v8 < *(void *)(v16 + 16)) {
        break;
      }
      __break(1u);
LABEL_17:
      __break(1u);
LABEL_18:
      uint64_t v7 = sub_250F0D5B0();
      if (!v7) {
        goto LABEL_19;
      }
    }
    id v9 = *(id *)(v4 + 8 * v8 + 32);
    goto LABEL_9;
  }
LABEL_19:
  uint64_t v12 = MEMORY[0x263F8EE78];
LABEL_20:
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_250EA1E8C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, (unint64_t *)&unk_26B20EFC0, MEMORY[0x263F42D70], MEMORY[0x263F42D70], MEMORY[0x263F42D70]);
}

uint64_t sub_250EA1ED4(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, &qword_269B10A90, type metadata accessor for BloodOxygenMetadataStatistics, type metadata accessor for BloodOxygenMetadataStatistics, type metadata accessor for BloodOxygenMetadataStatistics);
}

uint64_t sub_250EA1F1C(char a1, int64_t a2, char a3, unint64_t a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void), uint64_t (*a8)(void))
{
  if (a3)
  {
    unint64_t v12 = *(void *)(a4 + 24);
    uint64_t v13 = v12 >> 1;
    if ((uint64_t)(v12 >> 1) < a2)
    {
      if (v13 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v13 = v12 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v12 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v13 = a2;
      }
    }
  }
  else
  {
    uint64_t v13 = a2;
  }
  uint64_t v14 = *(void *)(a4 + 16);
  if (v13 <= v14) {
    uint64_t v15 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v15 = v13;
  }
  if (!v15)
  {
    uint64_t v19 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_250E91FF0(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v16 = *(void *)(a7(0) - 8);
  uint64_t v17 = *(void *)(v16 + 72);
  unint64_t v18 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  uint64_t v19 = (void *)swift_allocObject();
  size_t v20 = _swift_stdlib_malloc_size(v19);
  if (!v17 || (v20 - v18 == 0x8000000000000000 ? (BOOL v21 = v17 == -1) : (BOOL v21 = 0), v21))
  {
LABEL_29:
    uint64_t result = sub_250F0D580();
    __break(1u);
    return result;
  }
  v19[2] = v14;
  v19[3] = 2 * ((uint64_t)(v20 - v18) / v17);
LABEL_19:
  uint64_t v22 = *(void *)(a7(0) - 8);
  unint64_t v23 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  unint64_t v24 = (unint64_t)v19 + v23;
  if (a1)
  {
    if ((unint64_t)v19 < a4 || v24 >= a4 + v23 + *(void *)(v22 + 72) * v14)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v19 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_250EA2D30(0, v14, v24, a4, a8);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v19;
}

uint64_t sub_250EA21B8(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, (unint64_t *)&unk_26B20EFD0, MEMORY[0x263F42EB8], MEMORY[0x263F42EB8], MEMORY[0x263F42EB8]);
}

void *sub_250EA2200(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_250EA36FC(0, &qword_26B20EFE8);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = _swift_stdlib_malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = (void *)MEMORY[0x263F8EE78];
      uint64_t v13 = (void *)(MEMORY[0x263F8EE78] + 32);
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_250EA2E8C(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EA231C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, &qword_26B20EFE0, (uint64_t (*)(uint64_t))sub_250EA31AC, (uint64_t (*)(void))sub_250EA31AC, (uint64_t (*)(void))sub_250EA31AC);
}

uint64_t sub_250EA2364(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, (unint64_t *)&unk_269B10A98, MEMORY[0x263F42E88], MEMORY[0x263F42E88], MEMORY[0x263F42E88]);
}

uint64_t sub_250EA23AC(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_250EA1F1C(a1, a2, a3, a4, &qword_26B20EFB0, MEMORY[0x263F062D0], MEMORY[0x263F062D0], MEMORY[0x263F062D0]);
}

uint64_t sub_250EA23F4(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_250E93B28();
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v11 = *(void *)(*(void *)(v10 - 8) + 72);
  unint64_t v12 = (*(unsigned __int8 *)(*(void *)(v10 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v10 - 8) + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = _swift_stdlib_malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_250F0D580();
    __break(1u);
    return result;
  }
  v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v17 = *(void *)(v16 - 8);
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  unint64_t v19 = (unint64_t)v13 + v18;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v19 >= a4 + v18 + *(void *)(v17 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_250EA3214(0, v8, v19, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void sub_250EA2690(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_250EA2710(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_250EA27D4(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_250EA2730(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_250EA2954(a1, a2, a3, (void *)*v3, &qword_26B20EFE0, (uint64_t (*)(uint64_t))sub_250EA31AC, (uint64_t (*)(void))sub_250EA31AC);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_250EA2780(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_250EA2BB8(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_250EA27A0(char a1, int64_t a2, char a3, void *a4)
{
  return sub_250EA2954(a1, a2, a3, a4, &qword_269B10A90, type metadata accessor for BloodOxygenMetadataStatistics, type metadata accessor for BloodOxygenMetadataStatistics);
}

uint64_t sub_250EA27D4(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_250EA36FC(0, (unint64_t *)&unk_26B20F008);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250EA2954(char a1, int64_t a2, char a3, void *a4, unint64_t *a5, uint64_t (*a6)(uint64_t), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v10 = a4[3];
    int64_t v11 = v10 >> 1;
    if ((uint64_t)(v10 >> 1) < a2)
    {
      if (v11 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v11 = v10 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v10 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v11 = a2;
      }
    }
  }
  else
  {
    int64_t v11 = a2;
  }
  uint64_t v12 = a4[2];
  if (v11 <= v12) {
    uint64_t v13 = a4[2];
  }
  else {
    uint64_t v13 = v11;
  }
  if (!v13)
  {
    uint64_t v17 = (void *)MEMORY[0x263F8EE78];
    goto LABEL_19;
  }
  sub_250E91FF0(0, a5, a6, MEMORY[0x263F8E0F8]);
  uint64_t v14 = *(void *)(a7(0) - 8);
  uint64_t v15 = *(void *)(v14 + 72);
  unint64_t v16 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  uint64_t v17 = (void *)swift_allocObject();
  size_t v18 = _swift_stdlib_malloc_size(v17);
  if (!v15)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v18 - v16 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_34;
  }
  v17[2] = v12;
  v17[3] = 2 * ((uint64_t)(v18 - v16) / v15);
LABEL_19:
  uint64_t v20 = *(void *)(a7(0) - 8);
  unint64_t v21 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
  uint64_t v22 = (char *)v17 + v21;
  unint64_t v23 = (char *)a4 + v21;
  if (a1)
  {
    if (v17 < a4 || v22 >= &v23[*(void *)(v20 + 72) * v12])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v17 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v24 = *(void *)(v20 + 72) * v12;
  uint64_t v25 = &v22[v24];
  unint64_t v26 = (unint64_t)&v23[v24];
  if (v23 >= v25 || (unint64_t)v22 >= v26)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v17;
  }
LABEL_36:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250EA2BB8(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_250EA36FC(0, &qword_26B20E460);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250EA2D30(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

char *sub_250EA2E8C(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    int64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250EA2F78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v18 = a5;
  uint64_t v8 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_250F0C640();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unint64_t v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, a2, v9);
  type metadata accessor for SleepingSampleBaselineAccumulator();
  uint64_t v13 = swift_allocObject();
  uint64_t v14 = MEMORY[0x263F8EE78];
  *(void *)(v13
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates) = MEMORY[0x263F8EE78];
  *(void *)(v13
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries) = v14;
  *(void *)(v13
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete) = v14;
  swift_retain();
  sub_250F0CC90();
  sub_250F0CC10();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v13+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange, v12, v9);
  uint64_t v15 = (void *)(v13
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider);
  *uint64_t v15 = a3;
  v15[1] = a4;
  *(void *)(v13
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider) = v18;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(a2, v9);
  return v13;
}

uint64_t sub_250EA3184(uint64_t a1)
{
  return sub_250EAC4A4(a1, v1[2], v1[3], v1[4], v1[5], v1[6]);
}

void sub_250EA31AC()
{
  if (!qword_26B20EE28)
  {
    sub_250F0CE70();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EE28);
    }
  }
}

uint64_t sub_250EA3214(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    uint64_t v9 = *(void *)(*(void *)(v8 - 8) + 72);
    unint64_t v10 = a4
        + ((*(unsigned __int8 *)(*(void *)(v8 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v8 - 8) + 80))
        + v9 * a1;
    unint64_t v11 = a3 + v9 * v4;
    if (v10 >= v11 || v10 + v9 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v11;
    }
  }
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

void sub_250EA338C(char a1)
{
  swift_getObjectType();
  uint64_t v3 = sub_250F0CCB0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  size_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CCF0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (uint64_t *)((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  void *v10 = objc_msgSend(v1, sel_queryQueue);
  (*(void (**)(void *, void, uint64_t))(v8 + 104))(v10, *MEMORY[0x263F8F0E0], v7);
  char v11 = sub_250F0CD00();
  (*(void (**)(void *, uint64_t))(v8 + 8))(v10, v7);
  if (v11)
  {
    if (a1)
    {
      sub_250F0CC90();
      id v12 = v1;
      uint64_t v13 = sub_250F0CCA0();
      os_log_type_t v14 = sub_250F0D1D0();
      if (os_log_type_enabled(v13, v14))
      {
        uint64_t v15 = swift_slowAlloc();
        uint64_t v22 = swift_slowAlloc();
        uint64_t v24 = v22;
        *(_DWORD *)uint64_t v15 = 136446466;
        uint64_t v16 = sub_250F0D7B0();
        uint64_t v23 = sub_250E8BE44(v16, v17, &v24);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v15 + 12) = 2082;
        uint64_t v18 = sub_250E8C8C4();
        uint64_t v23 = sub_250E8BE44(v18, v19, &v24);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v13, v14, "[%{public}s:%{public}s] Requerying data for client for protected data availability", (uint8_t *)v15, 0x16u);
        uint64_t v20 = v22;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v20, -1, -1);
        MEMORY[0x25338EC30](v15, -1, -1);
      }
      else
      {
      }
      (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
      sub_250EA0724();
    }
  }
  else
  {
    __break(1u);
  }
}

uint64_t __swift_instantiateGenericMetadata()
{
  return swift_getGenericMetadata();
}

void sub_250EA36FC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_250F0D660();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_250EA3748(uint64_t a1, void *a2)
{
  uint64_t v3 = v2;
  id v72 = a2;
  uint64_t v73 = a1;
  sub_250EA67A4(0, &qword_26B20E4F8, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v4 - 8);
  char v65 = (char *)&v58 - v5;
  sub_250EA67A4(0, &qword_26B20E4F0, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v63 = (char *)&v58 - v7;
  uint64_t v8 = sub_250F0BF80();
  uint64_t v68 = *(void *)(v8 - 8);
  uint64_t v69 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v64 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C1B0();
  uint64_t v61 = *(void *)(v10 - 8);
  uint64_t v62 = v10;
  MEMORY[0x270FA5388](v10);
  id v12 = (char *)&v58 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0CE70();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9374C();
  MEMORY[0x270FA5388](v17 - 8);
  unint64_t v19 = (char *)&v58 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_250F0BF30();
  uint64_t v59 = *(void *)(v20 - 8);
  uint64_t v60 = v20;
  MEMORY[0x270FA5388](v20);
  uint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_250F0C060();
  uint64_t v70 = *(void *)(v23 - 8);
  uint64_t v71 = v23;
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  uint64_t v58 = (char *)&v58 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v58 - v26;
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  *(void *)(v2 + 16) = MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  uint64_t v28 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_gregorianDayRange;
  uint64_t v29 = sub_250F0C340();
  uint64_t v66 = *(void *)(v29 - 8);
  uint64_t v67 = v29;
  (*(void (**)(uint64_t, uint64_t))(v66 + 16))(v28, v73);
  sub_250F0C300();
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v16, v19, v13);
  sub_250E8BC9C((uint64_t)v19, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v30 = v12;
  uint64_t v31 = v3;
  sub_250F0C330();
  sub_250F0CD90();
  uint64_t v32 = v61;
  uint64_t v33 = v30;
  uint64_t v34 = v62;
  (*(void (**)(char *, uint64_t))(v61 + 8))(v33, v62);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  sub_250F0BF00();
  uint64_t v35 = v58;
  (*(void (**)(char *, uint64_t))(v59 + 8))(v22, v60);
  uint64_t v36 = v63;
  sub_250F0C330();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v36, 0, 1, v34);
  os_log_type_t v37 = v27;
  uint64_t v38 = sub_250F0C1C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v38 - 8) + 56))(v65, 1, 1, v38);
  uint64_t v39 = v64;
  sub_250F0BF70();
  id v40 = objc_allocWithZone(MEMORY[0x263F0A9A0]);
  unint64_t v41 = (void *)sub_250F0BFC0();
  uint64_t v42 = (void *)sub_250F0BF40();
  id v43 = objc_msgSend(v40, sel_initWithAnchorDate_intervalComponents_, v41, v42);

  (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v69);
  *(void *)(v31 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection) = v43;
  id v44 = *(id *)(v31 + 16);
  id v45 = v43;
  uint64_t v46 = _HKStatisticsOptionBaselineRelativeQuantities() | 0x22;
  id v47 = objc_msgSend(self, sel_calculatorForQuantityType_intervalCollection_options_mergeStrategy_computationMethod_, v44, v45, v46, 0, 1);

  uint64_t v48 = OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator;
  *(void *)(v31 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator) = v47;
  uint64_t v49 = v73;
  sub_250F0C040();
  id v50 = *(id *)(v31 + 16);
  unint64_t v51 = v72;
  id v52 = sub_250EA8A80(v49, v50, v72);

  *(void *)(v31 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_dataSource) = v52;
  unint64_t v53 = *(void **)(v31 + v48);
  objc_msgSend(v53, sel_setDataSource_, v52);
  id v54 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F43398]), sel_initWithProfile_quantityType_, v51, *(void *)(v31 + 16));
  *(void *)(v31
            + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_sourceOrderProvider) = v54;
  if (v53) {
    objc_msgSend(v53, sel_setSourceOrderProvider_);
  }

  (*(void (**)(uint64_t, uint64_t))(v66 + 8))(v49, v67);
  uint64_t v55 = v71;
  uint64_t v56 = *(void (**)(char *, uint64_t))(v70 + 8);
  v56(v35, v71);
  v56(v37, v55);
  return v31;
}

uint64_t sub_250EA3F50()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_gregorianDayRange;
  uint64_t v2 = sub_250F0C340();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection));
  swift_unknownObjectRelease();
  objc_release(*(id *)(v0
                     + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_sourceOrderProvider));
  return swift_deallocClassInstance();
}

uint64_t sub_250EA4038()
{
  return type metadata accessor for SleepingWristTemperatureAggregateEnumerator();
}

uint64_t type metadata accessor for SleepingWristTemperatureAggregateEnumerator()
{
  uint64_t result = qword_26B20EC08;
  if (!qword_26B20EC08) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250EA408C()
{
  uint64_t result = sub_250F0C340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_250EA413C()
{
  return sub_250EA668C(&qword_269B10AA8, (unint64_t *)&unk_269B10AB0, MEMORY[0x263F8DB80]);
}

unint64_t sub_250EA418C()
{
  unint64_t result = qword_26B20EC00;
  if (!qword_26B20EC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EC00);
  }
  return result;
}

uint64_t sub_250EA41E0()
{
  aBlock[8] = *(id *)MEMORY[0x263EF8340];
  sub_250EA630C();
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v92 = (char *)&v84 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA63F4();
  uint64_t v90 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v91 = (uint64_t)&v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9374C();
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v89 = (char *)&v84 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_250F0CC40();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)&v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_250F0CC00();
  uint64_t v100 = *(void *)(v96 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v96);
  unsigned __int8 v99 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v95 = (char *)&v84 - v11;
  MEMORY[0x270FA5388](v10);
  char v93 = (char *)&v84 - v12;
  uint64_t v13 = sub_250F0BF80();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v84 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_250F0C060();
  uint64_t v18 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)&v84 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v22 = sub_250F0CC30();
  uint64_t v97 = *(void *)(v22 - 8);
  uint64_t v98 = v22;
  MEMORY[0x270FA5388](v22);
  uint64_t v24 = (char *)&v84 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v101 = v24;
  sub_250F0CC10();
  uint64_t v25 = *(void **)(v0
                 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_intervalCollection);
  uint64_t v26 = v0;
  id v27 = objc_msgSend(v25, sel_anchorDate);
  sub_250F0C030();

  id v28 = objc_msgSend(v25, sel_intervalComponents);
  sub_250F0BF50();

  id v29 = objc_allocWithZone(MEMORY[0x263F0A7D8]);
  uint64_t v30 = (void *)sub_250F0BFC0();
  uint64_t v31 = (void *)sub_250F0BF40();
  id v32 = objc_msgSend(v29, sel_initWithAnchorDate_statisticsInterval_, v30, v31);

  (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  uint64_t v88 = v26;
  uint64_t v33 = *(void **)(v26 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingWristTemperatureAggregateEnumerator_calculator);
  if (v33)
  {
    uint64_t v34 = (void *)swift_allocObject();
    _DWORD v34[2] = v32;
    aBlock[4] = sub_250EA6710;
    aBlock[5] = v34;
    aBlock[0] = (id)MEMORY[0x263EF8330];
    aBlock[1] = (id)1107296256;
    aBlock[2] = sub_250EA4D7C;
    aBlock[3] = &block_descriptor;
    uint64_t v35 = _Block_copy(aBlock);
    id v36 = v32;
    swift_release();
    objc_msgSend(v33, sel_setStatisticsHandler_, v35);
    _Block_release(v35);
  }
  id v94 = v32;
  os_log_type_t v37 = v93;
  sub_250F0CBF0();
  uint64_t v38 = sub_250F0CC20();
  os_signpost_type_t v39 = sub_250F0D260();
  if (sub_250F0D2B0())
  {
    uint64_t v40 = v100;
    unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    uint64_t v42 = v95;
    uint64_t v43 = v96;
    v41(v95, v37, v96);
    id v44 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)id v44 = 0;
    os_signpost_id_t v45 = sub_250F0CBE0();
    _os_signpost_emit_with_name_impl(&dword_250E86000, v38, v39, v45, "SleepingWristTemperatureAggregateEnumerator", "", v44, 2u);
    uint64_t v46 = v44;
    uint64_t v47 = v43;
    MEMORY[0x25338EC30](v46, -1, -1);

    uint64_t v48 = v40;
    uint64_t v49 = v42;
    (*(void (**)(char *, uint64_t))(v48 + 8))(v42, v43);
  }
  else
  {

    uint64_t v48 = v100;
    unint64_t v41 = *(void (**)(char *, char *, uint64_t))(v100 + 16);
    uint64_t v49 = v95;
    uint64_t v47 = v96;
  }
  v41(v49, v37, v47);
  sub_250F0CC70();
  swift_allocObject();
  sub_250F0CC60();
  id v50 = *(void (**)(char *, uint64_t))(v48 + 8);
  uint64_t v100 = v48 + 8;
  v50(v37, v47);
  if (v33)
  {
    aBlock[0] = 0;
    if (!objc_msgSend(v33, sel_queryForInitialStatisticsWithError_, aBlock))
    {
      id v59 = aBlock[0];
      uint64_t v60 = (void *)sub_250F0BFA0();

      swift_willThrow();
      swift_release();
      aBlock[0] = v60;
      sub_250E95B04();
      sub_250E8D194(0, (unint64_t *)&unk_269B10AC0);
      swift_dynamicCast();

      id v61 = aBlock[6];
      uint64_t v62 = swift_allocObject();
      *(void *)(v62 + 16) = v61;
      sub_250EA6540();
      uint64_t v63 = swift_allocObject();
      *(void *)(v63 + 16) = sub_250EA6708;
      *(void *)(v63 + 24) = v62;
      (*(void (**)(char *, uint64_t))(v97 + 8))(v101, v98);

      return v63;
    }
    id v51 = aBlock[0];
  }
  id v52 = sub_250F0CC20();
  unint64_t v53 = v99;
  sub_250F0CC50();
  int v54 = sub_250F0D250();
  if (sub_250F0D2B0())
  {
    LODWORD(v96) = v54;
    swift_retain();
    uint64_t v55 = v85;
    sub_250F0CC80();
    swift_release();
    uint64_t v56 = v86;
    uint64_t v57 = v87;
    if ((*(unsigned int (**)(char *, uint64_t))(v86 + 88))(v55, v87) == *MEMORY[0x263F90238])
    {
      uint64_t v58 = "[Error] Interval already ended";
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v55, v57);
      uint64_t v58 = "";
    }
    uint64_t v64 = v49;
    char v65 = v49;
    uint64_t v66 = v99;
    v41(v64, v99, v47);
    uint64_t v67 = v47;
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    os_signpost_id_t v69 = sub_250F0CBE0();
    _os_signpost_emit_with_name_impl(&dword_250E86000, v52, (os_signpost_type_t)v96, v69, "SleepingWristTemperatureAggregateEnumerator", v58, v68, 2u);
    MEMORY[0x25338EC30](v68, -1, -1);

    v50(v66, v67);
    swift_release();
    v50(v65, v67);
  }
  else
  {

    v50(v53, v47);
    swift_release();
  }
  uint64_t v70 = v90;
  uint64_t v71 = swift_allocBox();
  uint64_t v73 = v72;
  uint64_t v74 = v88;
  uint64_t v75 = (uint64_t)v89;
  sub_250F0C300();
  uint64_t v76 = v91;
  sub_250E8DB70(v75, v91, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v77 = sub_250F0CE70();
  uint64_t v78 = *(void *)(v77 - 8);
  uint64_t v79 = (uint64_t)v92;
  (*(void (**)(char *, uint64_t, uint64_t))(v78 + 16))(v92, v75, v77);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v78 + 56))(v79, 0, 1, v77);
  sub_250E8BC9C(v75, (uint64_t (*)(void))sub_250E9374C);
  sub_250E8E630(v79, v76 + *(int *)(v70 + 36), (uint64_t (*)(void))sub_250EA630C);
  sub_250E8E630(v76, v73, (uint64_t (*)(void))sub_250EA63F4);
  unint64_t v80 = (void *)swift_allocObject();
  id v81 = v94;
  v80[2] = v71;
  v80[3] = v81;
  v80[4] = v74;
  sub_250EA6540();
  uint64_t v63 = swift_allocObject();
  *(void *)(v63 + 16) = sub_250EA6534;
  *(void *)(v63 + 24) = v80;
  id v82 = *(void (**)(char *, uint64_t))(v97 + 8);
  swift_retain();
  v82(v101, v98);
  return v63;
}

void sub_250EA4D7C(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(id, id))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(v7, v6);
  swift_release();
}

id sub_250EA4E00@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v13 = a1;
  sub_250EA65F4(0, (unint64_t *)&qword_26B20F028, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v12 - v4;
  unsigned __int8 v6 = objc_msgSend(v13, sel_hk_isDatabaseAccessibilityError);
  *(void *)uint64_t v5 = v13;
  v5[8] = v6;
  id v7 = (void (*)(uint64_t))MEMORY[0x263F42D38];
  sub_250EA7158(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  uint64_t v9 = v8;
  swift_storeEnumTagMultiPayload();
  sub_250EA7158(0, (unint64_t *)&unk_26B20F018, v7, (void (*)(void))sub_250EA418C);
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v5, 0, 1, v9);
  sub_250EA6724((uint64_t)v5, a2);
  id v10 = v13;
  return v10;
}

uint64_t sub_250EA4F90@<X0>(void *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  id v89 = a1;
  uint64_t v96 = a3;
  uint64_t v82 = sub_250F0C400();
  uint64_t v80 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  id v81 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA67A4(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v79 = (char *)&v76 - v6;
  sub_250EA67A4(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v78 = (char *)&v76 - v8;
  uint64_t v87 = sub_250F0C060();
  uint64_t v86 = *(void *)(v87 - 8);
  MEMORY[0x270FA5388](v87);
  uint64_t v85 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_250F0C1B0();
  uint64_t v101 = *(void **)(v94 - 8);
  MEMORY[0x270FA5388](v94);
  uint64_t v88 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_250F0BF30();
  uint64_t v98 = *(void *)(v102 - 8);
  MEMORY[0x270FA5388](v102);
  uint64_t v84 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA67F8();
  uint64_t v13 = v12 - 8;
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA630C();
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v92 = (uint64_t)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v93 = (uint64_t)&v76 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v99 = (uint64_t)&v76 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v76 - v23;
  sub_250EA67A4(0, &qword_26B20EE20, MEMORY[0x263F090E8]);
  MEMORY[0x270FA5388](v25 - 8);
  uint64_t v100 = (char *)&v76 - v26;
  uint64_t v27 = sub_250F0CE70();
  uint64_t v28 = *(void *)(v27 - 8);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v91 = (char *)&v76 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v33 = (char *)&v76 - v32;
  uint64_t v34 = MEMORY[0x270FA5388](v31);
  uint64_t v95 = (char *)&v76 - v35;
  MEMORY[0x270FA5388](v34);
  uint64_t v103 = (uint64_t)&v76 - v36;
  sub_250EA63F4();
  uint64_t v38 = v37;
  uint64_t v39 = swift_projectBox();
  swift_beginAccess();
  uint64_t v40 = *(int *)(v38 + 36);
  uint64_t v90 = v39;
  uint64_t v41 = v39 + v40;
  uint64_t v97 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v28 + 56);
  v97(v24, 1, 1, v27);
  uint64_t v42 = (uint64_t)&v15[*(int *)(v13 + 56)];
  sub_250E8DB70(v41, (uint64_t)v15, (uint64_t (*)(void))sub_250EA630C);
  sub_250E8DB70((uint64_t)v24, v42, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v104 = v28;
  uint64_t v43 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 48);
  if (v43((uint64_t)v15, 1, v27) == 1)
  {
    int v44 = v43(v42, 1, v27);
    os_signpost_id_t v45 = v43;
    if (v44 == 1)
    {
      sub_250E8BC9C((uint64_t)v15, (uint64_t (*)(void))sub_250EA630C);
      sub_250E8BC9C((uint64_t)v24, (uint64_t (*)(void))sub_250EA630C);
      uint64_t v46 = 1;
      uint64_t v48 = (uint64_t)v100;
      uint64_t v47 = v101;
      goto LABEL_9;
    }
    goto LABEL_6;
  }
  sub_250E8DB70((uint64_t)v15, v99, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v77 = v43;
  if (v43(v42, 1, v27) == 1)
  {
    (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v99, v27);
    os_signpost_id_t v45 = v77;
LABEL_6:
    uint64_t v83 = a2;
    sub_250E8BC9C((uint64_t)v15, (uint64_t (*)(void))sub_250EA67F8);
    sub_250E8BC9C((uint64_t)v24, (uint64_t (*)(void))sub_250EA630C);
    goto LABEL_7;
  }
  uint64_t v83 = a2;
  os_signpost_id_t v69 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 32);
  v69(v95, v99, v27);
  uint64_t v99 = v28 + 56;
  uint64_t v70 = v33;
  v69(v33, v42, v27);
  sub_250EA7114((unint64_t *)&unk_26B20EDF0);
  uint64_t v71 = v95;
  LOBYTE(v69) = sub_250F0CF40();
  uint64_t v72 = *(void (**)(char *, uint64_t))(v104 + 8);
  v72(v70, v27);
  v72(v71, v27);
  sub_250E8BC9C((uint64_t)v15, (uint64_t (*)(void))sub_250EA630C);
  sub_250E8BC9C((uint64_t)v24, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v47 = v101;
  os_signpost_id_t v45 = v77;
  if (v69)
  {
    uint64_t v46 = 1;
    uint64_t v48 = (uint64_t)v100;
    goto LABEL_9;
  }
LABEL_7:
  uint64_t v49 = v93;
  sub_250E8DB70(v41, v93, (uint64_t (*)(void))sub_250EA630C);
  id v50 = v45;
  uint64_t result = v45(v49, 1, v27);
  uint64_t v48 = (uint64_t)v100;
  if (result == 1)
  {
    __break(1u);
    return result;
  }
  id v52 = *(void (**)(char *, uint64_t, uint64_t))(v104 + 32);
  unint64_t v53 = v91;
  v52(v91, v49, v27);
  v52((char *)v48, (uint64_t)v53, v27);
  uint64_t v54 = v92;
  sub_250EBAF14(v41, v92);
  sub_250E8BC9C(v41, (uint64_t (*)(void))sub_250EA630C);
  sub_250E8E630(v54, v41, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v46 = 0;
  os_signpost_id_t v45 = v50;
  uint64_t v47 = v101;
LABEL_9:
  v97((char *)v48, v46, 1, v27);
  swift_endAccess();
  int v55 = v45(v48, 1, v27);
  uint64_t v56 = v102;
  uint64_t v57 = v98;
  if (v55 == 1)
  {
    sub_250EA71D8(v48, (uint64_t)&qword_26B20EE20, MEMORY[0x263F090E8], (uint64_t (*)(void))sub_250EA67A4);
    sub_250EA7158(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v96, 1, 1, v58);
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v104 + 32))(v103, v48, v27);
    uint64_t v59 = (uint64_t)v88;
    sub_250F0C330();
    uint64_t v60 = v84;
    sub_250F0CD90();
    uint64_t v101 = (void *)v47[1];
    ((void (*)(uint64_t, uint64_t))v101)(v59, v94);
    id v61 = v85;
    sub_250F0BF00();
    (*(void (**)(char *, uint64_t))(v57 + 8))(v60, v56);
    uint64_t v62 = (void *)sub_250F0BFC0();
    uint64_t v63 = v57;
    uint64_t v64 = v86;
    uint64_t v65 = v87;
    (*(void (**)(char *, uint64_t))(v86 + 8))(v61, v87);
    id v66 = objc_msgSend(v89, sel_statisticsForDate_, v62);

    if (v66)
    {
      sub_250F0C330();
      uint64_t v67 = v96;
      uint64_t v68 = v103;
      sub_250E941F8(v66, v103, v59, 1, 1, 1, v96);

      ((void (*)(uint64_t, uint64_t))v101)(v59, v94);
      (*(void (**)(uint64_t, uint64_t))(v104 + 8))(v68, v27);
    }
    else
    {
      uint64_t v73 = v104;
      (*(void (**)(char *, uint64_t, uint64_t))(v104 + 16))(v95, v103, v27);
      sub_250F0C330();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v63 + 56))(v78, 1, 1, v102);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v79, 1, 1, v65);
      (*(void (**)(char *, void, uint64_t))(v80 + 104))(v81, *MEMORY[0x263F42D18], v82);
      uint64_t v67 = v96;
      sub_250F0C430();
      (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v103, v27);
    }
    sub_250EA7158(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
    uint64_t v75 = v74;
    swift_storeEnumTagMultiPayload();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56))(v67, 0, 1, v75);
  }
}

uint64_t sub_250EA5C9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_250EA41E0();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

uint64_t sub_250EA5CDC()
{
  return 0;
}

uint64_t sub_250EA5CE4()
{
  return 2;
}

size_t sub_250EA5CEC()
{
  size_t v0 = sub_250EA685C();
  swift_release();
  return v0;
}

uint64_t sub_250EA5D24(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_250EA5D48(a1, a2, a3);
}

uint64_t sub_250EA5D48(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_250EA65F4(0, (unint64_t *)&qword_26B20F028, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  sub_250EA7158(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = sub_250EA41E0();
  uint64_t result = swift_release();
  uint64_t v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v13;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = a1;
    sub_250F0D610();
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v22 = v10 + 48;
    if (v16(v8, 1, v23) == 1)
    {
      uint64_t v15 = 0;
LABEL_9:
      sub_250EA71D8((uint64_t)v8, (uint64_t)&qword_26B20F028, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_250EA65F4);
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v19 = a3;
      uint64_t v21 = a3 - 1;
      while (1)
      {
        uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F42D38];
        sub_250E92FFC((uint64_t)v8, (uint64_t)v12, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
        sub_250E92FFC((uint64_t)v12, a2, (unint64_t *)&unk_26B20F018, v17, (void (*)(void))sub_250EA418C);
        if (v21 == v15) {
          break;
        }
        a2 += *(void *)(v10 + 72);
        sub_250F0D610();
        ++v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v23) == 1) {
          goto LABEL_9;
        }
      }
      uint64_t v15 = v19;
    }
    a1 = v20;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EA6018(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_250EA7238(0, (unint64_t *)&qword_26B20F060, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v18 - v7;
  sub_250EA7158(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
  uint64_t v23 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v18 - v11;
  uint64_t v13 = sub_250EB7B5C();
  uint64_t result = swift_release();
  uint64_t v15 = 0;
  if (!a2 || !a3)
  {
LABEL_12:
    *a1 = v13;
    return v15;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    uint64_t v20 = a1;
    sub_250F0D610();
    uint64_t v16 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
    uint64_t v22 = v10 + 48;
    if (v16(v8, 1, v23) == 1)
    {
      uint64_t v15 = 0;
LABEL_9:
      sub_250EA71D8((uint64_t)v8, (uint64_t)&qword_26B20F060, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_250EA7238);
    }
    else
    {
      uint64_t v15 = 0;
      uint64_t v19 = a3;
      uint64_t v21 = a3 - 1;
      while (1)
      {
        uint64_t v17 = (void (*)(uint64_t))MEMORY[0x263F42EB8];
        sub_250E92FFC((uint64_t)v8, (uint64_t)v12, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
        sub_250E92FFC((uint64_t)v12, a2, (unint64_t *)&unk_26B20F050, v17, (void (*)(void))sub_250E92500);
        if (v21 == v15) {
          break;
        }
        a2 += *(void *)(v10 + 72);
        sub_250F0D610();
        ++v15;
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v23) == 1) {
          goto LABEL_9;
        }
      }
      uint64_t v15 = v19;
    }
    a1 = v20;
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EA62E8()
{
  return sub_250F0CFF0();
}

void sub_250EA630C()
{
  if (!qword_26B20EE48)
  {
    sub_250F0CE70();
    sub_250EA7114((unint64_t *)&unk_26B20EE00);
    sub_250EA63A0();
    unint64_t v0 = sub_250F0CF30();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EE48);
    }
  }
}

unint64_t sub_250EA63A0()
{
  unint64_t result = qword_26B20EE40;
  if (!qword_26B20EE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EE40);
  }
  return result;
}

void sub_250EA63F4()
{
  if (!qword_26B20EF80)
  {
    sub_250E9374C();
    sub_250EA6458();
    unint64_t v0 = sub_250F0D570();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF80);
    }
  }
}

unint64_t sub_250EA6458()
{
  unint64_t result = qword_26B20EE58;
  if (!qword_26B20EE58)
  {
    sub_250E9374C();
    sub_250EA7114((unint64_t *)&unk_26B20EE00);
    sub_250EA63A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EE58);
  }
  return result;
}

uint64_t sub_250EA64EC()
{
  swift_release();

  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_250EA6534@<X0>(uint64_t a1@<X8>)
{
  return sub_250EA4F90(*(void **)(v1 + 24), *(void *)(v1 + 32), a1);
}

void sub_250EA6540()
{
  if (!qword_26B20EF40)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E008];
    sub_250EA65F4(255, &qword_26B20EF98, MEMORY[0x263F8E008]);
    sub_250EA668C(&qword_26B20EF90, &qword_26B20EF98, v0);
    unint64_t v1 = sub_250F0D4C0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B20EF40);
    }
  }
}

void sub_250EA65F4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_250EA7158(255, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_250EA668C(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250EA65F4(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EA66D0()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

id sub_250EA6708@<X0>(uint64_t a1@<X8>)
{
  return sub_250EA4E00(*(void **)(v1 + 16), a1);
}

id sub_250EA6710(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(v2 + 16), sel__insertStatistics_, a2);
}

uint64_t sub_250EA6724(uint64_t a1, uint64_t a2)
{
  sub_250EA65F4(0, (unint64_t *)&qword_26B20F028, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_250EA67A4(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_250EA67F8()
{
  if (!qword_26B20EE50)
  {
    sub_250EA630C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EE50);
    }
  }
}

size_t sub_250EA685C()
{
  sub_250EA65F4(0, (unint64_t *)&qword_26B20F028, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v39 - v1;
  sub_250EA7158(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v39 - v6;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  swift_retain();
  uint64_t v9 = sub_250EA41E0();
  swift_release();
  sub_250F0D610();
  uint64_t v46 = v5;
  int v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v45 = v5 + 48;
  int v10 = v44(v2, 1, v4);
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  if (v10 != 1)
  {
    uint64_t v12 = 0;
    uint64_t v43 = (v8 + 32) & ~v8;
    uint64_t v13 = MEMORY[0x263F8EE78] + v43;
    uint64_t v14 = &type metadata for SleepingWristTemperatureAggregateEnumerator.Error;
    uint64_t v41 = v7;
    uint64_t v42 = v8 | 7;
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v16 = v14;
      size_t result = sub_250E92FFC((uint64_t)v2, (uint64_t)v7, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
      if (v12)
      {
        uint64_t v11 = v15;
        BOOL v18 = __OFSUB__(v12--, 1);
        if (v18) {
          goto LABEL_34;
        }
        goto LABEL_29;
      }
      unint64_t v19 = v15[3];
      if ((uint64_t)((v19 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_35;
      }
      uint64_t v20 = v2;
      uint64_t v21 = v9;
      uint64_t v22 = v4;
      int64_t v23 = v19 & 0xFFFFFFFFFFFFFFFELL;
      if (v23 <= 1) {
        uint64_t v24 = 1;
      }
      else {
        uint64_t v24 = v23;
      }
      sub_250EA65F4(0, (unint64_t *)&unk_269B10AD0, MEMORY[0x263F8E0F8]);
      uint64_t v25 = *(void *)(v46 + 72);
      uint64_t v26 = v43;
      uint64_t v11 = (void *)swift_allocObject();
      size_t result = _swift_stdlib_malloc_size(v11);
      if (!v25) {
        goto LABEL_36;
      }
      int64_t v27 = result - v26;
      if (result - v26 == 0x8000000000000000 && v25 == -1) {
        goto LABEL_37;
      }
      uint64_t v29 = v27 / v25;
      v11[2] = v24;
      v11[3] = 2 * (v27 / v25);
      uint64_t v30 = (char *)v11 + v26;
      uint64_t v31 = v15[3] >> 1;
      uint64_t v32 = v31 * v25;
      uint64_t v4 = v22;
      uint64_t v9 = v21;
      uint64_t v2 = v20;
      if (v15[2]) {
        break;
      }
LABEL_28:
      uint64_t v13 = (uint64_t)&v30[v32];
      uint64_t v34 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
      size_t result = swift_release();
      unint64_t v7 = v41;
      BOOL v18 = __OFSUB__(v34, 1);
      uint64_t v12 = v34 - 1;
      if (v18)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      }
LABEL_29:
      sub_250E92FFC((uint64_t)v7, v13, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
      v13 += *(void *)(v46 + 72);
      sub_250F0D610();
      int v35 = v44(v2, 1, v4);
      uint64_t v14 = v16;
      uint64_t v15 = v11;
      if (v35 == 1) {
        goto LABEL_30;
      }
    }
    if (v11 < v15 || v30 >= (char *)v15 + v43 + v32)
    {
      uint64_t v40 = v29;
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      if (v11 == v15)
      {
LABEL_27:
        v15[2] = 0;
        goto LABEL_28;
      }
      uint64_t v40 = v29;
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v29 = v40;
    goto LABEL_27;
  }
  uint64_t v12 = 0;
LABEL_30:
  swift_release();
  size_t result = sub_250EA71D8((uint64_t)v2, (uint64_t)&qword_26B20F028, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_250EA65F4);
  unint64_t v36 = v11[3];
  if (v36 >= 2)
  {
    unint64_t v37 = v36 >> 1;
    BOOL v18 = __OFSUB__(v37, v12);
    uint64_t v38 = v37 - v12;
    if (v18) {
      goto LABEL_38;
    }
    v11[2] = v38;
  }
  return (size_t)v11;
}

size_t sub_250EA6CB8()
{
  sub_250EA7238(0, (unint64_t *)&qword_26B20F060, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v0 - 8);
  uint64_t v2 = (char *)&v39 - v1;
  sub_250EA7158(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  unint64_t v7 = (char *)&v39 - v6;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  swift_retain();
  uint64_t v9 = sub_250EB7B5C();
  swift_release();
  sub_250F0D610();
  uint64_t v46 = v5;
  int v44 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48);
  uint64_t v45 = v5 + 48;
  int v10 = v44(v2, 1, v4);
  uint64_t v11 = (void *)MEMORY[0x263F8EE78];
  if (v10 != 1)
  {
    uint64_t v12 = 0;
    uint64_t v43 = (v8 + 32) & ~v8;
    uint64_t v13 = MEMORY[0x263F8EE78] + v43;
    uint64_t v14 = &type metadata for SleepingSampleDaySummarySequenceError;
    uint64_t v41 = v7;
    uint64_t v42 = v8 | 7;
    uint64_t v15 = (void *)MEMORY[0x263F8EE78];
    while (1)
    {
      uint64_t v16 = v14;
      size_t result = sub_250E92FFC((uint64_t)v2, (uint64_t)v7, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
      if (v12)
      {
        uint64_t v11 = v15;
        BOOL v18 = __OFSUB__(v12--, 1);
        if (v18) {
          goto LABEL_34;
        }
        goto LABEL_29;
      }
      unint64_t v19 = v15[3];
      if ((uint64_t)((v19 >> 1) + 0x4000000000000000) < 0) {
        goto LABEL_35;
      }
      uint64_t v20 = v2;
      uint64_t v21 = v9;
      uint64_t v22 = v4;
      int64_t v23 = v19 & 0xFFFFFFFFFFFFFFFELL;
      if (v23 <= 1) {
        uint64_t v24 = 1;
      }
      else {
        uint64_t v24 = v23;
      }
      sub_250EA7238(0, &qword_269B10AE0, MEMORY[0x263F8E0F8]);
      uint64_t v25 = *(void *)(v46 + 72);
      uint64_t v26 = v43;
      uint64_t v11 = (void *)swift_allocObject();
      size_t result = _swift_stdlib_malloc_size(v11);
      if (!v25) {
        goto LABEL_36;
      }
      int64_t v27 = result - v26;
      if (result - v26 == 0x8000000000000000 && v25 == -1) {
        goto LABEL_37;
      }
      uint64_t v29 = v27 / v25;
      v11[2] = v24;
      v11[3] = 2 * (v27 / v25);
      uint64_t v30 = (char *)v11 + v26;
      uint64_t v31 = v15[3] >> 1;
      uint64_t v32 = v31 * v25;
      uint64_t v4 = v22;
      uint64_t v9 = v21;
      uint64_t v2 = v20;
      if (v15[2]) {
        break;
      }
LABEL_28:
      uint64_t v13 = (uint64_t)&v30[v32];
      uint64_t v34 = (v29 & 0x7FFFFFFFFFFFFFFFLL) - v31;
      size_t result = swift_release();
      unint64_t v7 = v41;
      BOOL v18 = __OFSUB__(v34, 1);
      uint64_t v12 = v34 - 1;
      if (v18)
      {
LABEL_34:
        __break(1u);
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        return result;
      }
LABEL_29:
      sub_250E92FFC((uint64_t)v7, v13, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
      v13 += *(void *)(v46 + 72);
      sub_250F0D610();
      int v35 = v44(v2, 1, v4);
      uint64_t v14 = v16;
      uint64_t v15 = v11;
      if (v35 == 1) {
        goto LABEL_30;
      }
    }
    if (v11 < v15 || v30 >= (char *)v15 + v43 + v32)
    {
      uint64_t v40 = v29;
      swift_arrayInitWithTakeFrontToBack();
    }
    else
    {
      if (v11 == v15)
      {
LABEL_27:
        v15[2] = 0;
        goto LABEL_28;
      }
      uint64_t v40 = v29;
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v29 = v40;
    goto LABEL_27;
  }
  uint64_t v12 = 0;
LABEL_30:
  swift_release();
  size_t result = sub_250EA71D8((uint64_t)v2, (uint64_t)&qword_26B20F060, MEMORY[0x263F8D8F0], (uint64_t (*)(void))sub_250EA7238);
  unint64_t v36 = v11[3];
  if (v36 >= 2)
  {
    unint64_t v37 = v36 >> 1;
    BOOL v18 = __OFSUB__(v37, v12);
    uint64_t v38 = v37 - v12;
    if (v18) {
      goto LABEL_38;
    }
    v11[2] = v38;
  }
  return (size_t)v11;
}

uint64_t sub_250EA7114(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250F0CE70();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250EA7158(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_250F0D740();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_250EA71D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v5 = a4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

void sub_250EA7238(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_250EA7158(255, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureAggregateEnumerator.Error()
{
  return &type metadata for SleepingWristTemperatureAggregateEnumerator.Error;
}

uint64_t sub_250EA72E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v2 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v3 = MEMORY[0x263F8EE78];
  if (!v2) {
    return v3;
  }
  uint64_t v13 = MEMORY[0x263F8EE78];
  uint64_t result = sub_250EA2710(0, v2 & ~(v2 >> 63), 0);
  if ((v2 & 0x8000000000000000) == 0)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v2; ++i)
      {
        MEMORY[0x25338E0A0](i, a1);
        sub_250E8D194(0, &qword_26B20EEF8);
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_250EA2710(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v7 = *(void *)(v3 + 16);
        unint64_t v6 = *(void *)(v3 + 24);
        if (v7 >= v6 >> 1)
        {
          sub_250EA2710(v6 > 1, v7 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v7 + 1;
        sub_250EA8550(v12, (_OWORD *)(v3 + 32 * v7 + 32));
      }
    }
    else
    {
      uint64_t v8 = (id *)(a1 + 32);
      sub_250E8D194(0, &qword_26B20EEF8);
      do
      {
        id v9 = *v8;
        swift_dynamicCast();
        uint64_t v3 = v13;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_250EA2710(0, *(void *)(v3 + 16) + 1, 1);
          uint64_t v3 = v13;
        }
        unint64_t v11 = *(void *)(v3 + 16);
        unint64_t v10 = *(void *)(v3 + 24);
        if (v11 >= v10 >> 1)
        {
          sub_250EA2710(v10 > 1, v11 + 1, 1);
          uint64_t v3 = v13;
        }
        *(void *)(v3 + 16) = v11 + 1;
        sub_250EA8550(v12, (_OWORD *)(v3 + 32 * v11 + 32));
        ++v8;
        --v2;
      }
      while (v2);
    }
    return v3;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EA7548(uint64_t a1)
{
  uint64_t v1 = a1;
  unint64_t v2 = a1 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (sub_250F0D3D0()) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v3 = MEMORY[0x263F8EE88];
    if (v2) {
      goto LABEL_4;
    }
LABEL_7:
    uint64_t v8 = -1 << *(unsigned char *)(v1 + 32);
    uint64_t v30 = v1 + 56;
    uint64_t v5 = ~v8;
    uint64_t v9 = -v8;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v7 = v10 & *(void *)(v1 + 56);
    swift_bridgeObjectRetain();
    uint64_t result = swift_retain();
    uint64_t v6 = 0;
    goto LABEL_11;
  }
  if (!*(void *)(a1 + 16)) {
    goto LABEL_6;
  }
LABEL_3:
  sub_250EA8A20();
  uint64_t v3 = sub_250F0D460();
  if (!v2) {
    goto LABEL_7;
  }
LABEL_4:
  swift_bridgeObjectRetain();
  swift_retain();
  sub_250F0D3C0();
  sub_250E8D194(0, &qword_26B20EF10);
  sub_250EA892C();
  uint64_t result = sub_250F0D110();
  uint64_t v1 = v34;
  uint64_t v30 = v35;
  uint64_t v5 = v36;
  uint64_t v6 = v37;
  unint64_t v7 = v38;
LABEL_11:
  int64_t v29 = (unint64_t)(v5 + 64) >> 6;
  uint64_t v11 = v3 + 56;
  while (v1 < 0)
  {
    uint64_t v16 = sub_250F0D3F0();
    if (!v16) {
      goto LABEL_45;
    }
    *(void *)&long long v31 = v16;
    sub_250E8D194(0, &qword_26B20EF10);
    swift_dynamicCast();
LABEL_36:
    sub_250E8D194(0, &qword_26B20EF10);
    swift_dynamicCast();
    uint64_t result = sub_250F0D400();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_46;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = *(void *)(v3 + 48) + 40 * v12;
    *(_OWORD *)uint64_t v13 = v31;
    *(_OWORD *)(v13 + 16) = v32;
    *(void *)(v13 + 32) = v33;
    ++*(void *)(v3 + 16);
  }
  if (v7)
  {
    unint64_t v14 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v15 = v14 | (v6 << 6);
LABEL_35:
    id v21 = *(id *)(*(void *)(v1 + 48) + 8 * v15);
    goto LABEL_36;
  }
  int64_t v17 = v6 + 1;
  if (!__OFADD__(v6, 1))
  {
    if (v17 >= v29) {
      goto LABEL_45;
    }
    unint64_t v18 = *(void *)(v30 + 8 * v17);
    uint64_t v19 = v6 + 1;
    if (!v18)
    {
      uint64_t v19 = v6 + 2;
      if (v6 + 2 >= v29) {
        goto LABEL_45;
      }
      unint64_t v18 = *(void *)(v30 + 8 * v19);
      if (!v18)
      {
        uint64_t v19 = v6 + 3;
        if (v6 + 3 >= v29) {
          goto LABEL_45;
        }
        unint64_t v18 = *(void *)(v30 + 8 * v19);
        if (!v18)
        {
          uint64_t v19 = v6 + 4;
          if (v6 + 4 >= v29) {
            goto LABEL_45;
          }
          unint64_t v18 = *(void *)(v30 + 8 * v19);
          if (!v18)
          {
            uint64_t v19 = v6 + 5;
            if (v6 + 5 >= v29) {
              goto LABEL_45;
            }
            unint64_t v18 = *(void *)(v30 + 8 * v19);
            if (!v18)
            {
              uint64_t v20 = v6 + 6;
              while (v29 != v20)
              {
                unint64_t v18 = *(void *)(v30 + 8 * v20++);
                if (v18)
                {
                  uint64_t v19 = v20 - 1;
                  goto LABEL_34;
                }
              }
LABEL_45:
              swift_release();
              sub_250E9FD24();
              return v3;
            }
          }
        }
      }
    }
LABEL_34:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v19 << 6);
    uint64_t v6 = v19;
    goto LABEL_35;
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_250EA796C(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v4 + v3;
    if (!__OFADD__(v4, v3)) {
      goto LABEL_5;
    }
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_25;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  uint64_t v4 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v8 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v4 = 1;
  }
  if (v6 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v9 <= v5) {
      uint64_t v9 = v5;
    }
    swift_bridgeObjectRetain();
    *uint64_t v1 = MEMORY[0x25338E0B0](v4, v9, 1, v6);
    swift_bridgeObjectRelease();
    uint64_t v8 = *v1 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    uint64_t result = sub_250EA7D58(v8 + 8 * *(void *)(v8 + 16) + 32, (*(void *)(v8 + 24) >> 1) - *(void *)(v8 + 16), a1);
    if (v11 >= v3) {
      break;
    }
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    unint64_t v6 = *v1;
  }
  if (v11 >= 1)
  {
    uint64_t v12 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v13 = __OFADD__(v12, v11);
    uint64_t v14 = v12 + v11;
    if (v13)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v14;
  }
  swift_bridgeObjectRelease();
  return sub_250F0D050();
}

uint64_t sub_250EA7B40(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if ((unint64_t)*v1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    uint64_t v5 = v20 + v3;
    if (!__OFADD__(v20, v3)) {
      goto LABEL_5;
    }
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  uint64_t v4 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t v5 = v4 + v3;
  if (__OFADD__(v4, v3)) {
    goto LABEL_26;
  }
LABEL_5:
  unint64_t v6 = *v1;
  int isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *uint64_t v1 = v6;
  uint64_t v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    uint64_t v9 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v5 <= *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      goto LABEL_15;
    }
    uint64_t v8 = 1;
  }
  if (v6 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = *(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  if (v10 <= v5) {
    uint64_t v10 = v5;
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = MEMORY[0x25338E0B0](v8, v10, 1, v6);
  swift_bridgeObjectRelease();
  *uint64_t v1 = v11;
  uint64_t v9 = v11 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
  uint64_t v12 = *(void *)(v9 + 16);
  uint64_t v13 = (*(void *)(v9 + 24) >> 1) - v12;
  uint64_t result = sub_250EA7F98(v9 + 8 * v12 + 32, v13, a1);
  if (v15 < v3)
  {
LABEL_27:
    __break(1u);
LABEL_28:
    sub_250EA88C8(0, &qword_269B10AF8, (uint64_t (*)(uint64_t))sub_250EA8CE0, MEMORY[0x263F8D488]);
    goto LABEL_20;
  }
  uint64_t v16 = v15;
  if (v15 >= 1)
  {
    uint64_t v17 = *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    BOOL v18 = __OFADD__(v17, v15);
    uint64_t v19 = v17 + v15;
    if (v18)
    {
      __break(1u);
      return result;
    }
    *(void *)((*v1 & 0xFFFFFFFFFFFFFF8) + 0x10) = v19;
  }
  swift_bridgeObjectRelease();
  if (v16 == v13) {
    goto LABEL_28;
  }
LABEL_20:
  return sub_250F0D050();
}

uint64_t sub_250EA7D58(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_250EA8560();
        sub_250EA8DE4(&qword_269B10AF0, (void (*)(uint64_t))sub_250EA8560);
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_250EA81C8(v16, i, a3);
          id v14 = *v13;
          ((void (*)(uint64_t (**)(), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_250E8D194(0, &qword_26B20EEF8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250EA7F98(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    if (!v7) {
      return a3;
    }
  }
  else
  {
    uint64_t v7 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v7) {
      return a3;
    }
  }
  if (!a1) {
    goto LABEL_19;
  }
  uint64_t v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v10 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_250EA88C8(0, &qword_269B10AF8, (uint64_t (*)(uint64_t))sub_250EA8CE0, MEMORY[0x263F8D488]);
        sub_250EA8E2C();
        swift_bridgeObjectRetain();
        for (unint64_t i = 0; i != v7; ++i)
        {
          uint64_t v12 = sub_250EA8234(v16, i, a3);
          id v14 = *v13;
          ((void (*)(void (**)(id *), void))v12)(v16, 0);
          *(void *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v9 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_250EA8CE0();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t (*sub_250EA81C8(uint64_t (**a1)(), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (uint64_t (*)())malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_250EA82E4(v6, a2, a3);
  return sub_250EA8230;
}

uint64_t (*sub_250EA8234(void (**a1)(id *a1), unint64_t a2, uint64_t a3))()
{
  unint64_t v6 = (void (*)(id *))malloc(0x28uLL);
  *a1 = v6;
  *((void *)v6 + 4) = sub_250EA8364(v6, a2, a3);
  return sub_250EA8230;
}

void sub_250EA829C(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void))(*a1 + 32))(*a1);
  free(v1);
}

uint64_t (*sub_250EA82E4(uint64_t (*result)(), unint64_t a2, uint64_t a3))()
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25338E0A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return j__s19HealthBalanceDaemon24SleepingSampleAggregatorC5ErrorOwxx;
  }
  __break(1u);
  return result;
}

void (*sub_250EA8364(void (*result)(id *a1), unint64_t a2, uint64_t a3))(id *a1)
{
  uint64_t v3 = result;
  if ((a3 & 0xC000000000000001) != 0)
  {
    id v4 = (id)MEMORY[0x25338E0A0](a2, a3);
    goto LABEL_5;
  }
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10) > a2)
  {
    id v4 = *(id *)(a3 + 8 * a2 + 32);
LABEL_5:
    *(void *)uint64_t v3 = v4;
    return destroy for SleepingSampleAggregator.Error;
  }
  __break(1u);
  return result;
}

id sub_250EA83E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_250EA36FC(0, (unint64_t *)&qword_26B20E480);
  unint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F060;
  *(void *)(inited + 32) = (id)HDSampleEntityPredicateForDataType();
  unint64_t v6 = (void *)sub_250F0BEC0();
  id v7 = (id)HDSampleEntityPredicateForDateInterval();

  *(void *)(inited + 40) = v7;
  sub_250F0D050();
  unint64_t v8 = swift_bridgeObjectRetain();
  sub_250EA796C(v8);
  sub_250EA72E4(inited);
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(self, sel_predicateMatchingAllPredicates_, v9);

  id v11 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F43390]), sel_initForProfile_quantityType_predicate_restrictedSourceEntities_, a3, a2, v10, 0);
  return v11;
}

_OWORD *sub_250EA8550(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

void sub_250EA8560()
{
  if (!qword_269B10AE8)
  {
    sub_250E8D194(255, &qword_26B20EEF8);
    unint64_t v0 = sub_250F0D0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B10AE8);
    }
  }
}

id sub_250EA85C8(uint64_t a1, uint64_t a2, void *a3)
{
  v20[0] = a2;
  v20[1] = a1;
  sub_250EA88C8(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v4 - 8);
  unint64_t v6 = (char *)v20 - v5;
  uint64_t v7 = sub_250F0BF30();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA36FC(0, (unint64_t *)&qword_26B20E480);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F070;
  id v12 = objc_msgSend(a3, sel_metadataManager);
  id v13 = (id)*MEMORY[0x263F0AB20];
  id v14 = (id)_HKBackgroundAndSedentaryPrivateHeartRateContexts();
  sub_250E8D194(0, &qword_26B20EF10);
  sub_250EA892C();
  uint64_t v15 = sub_250F0D0E0();

  sub_250EA7548(v15);
  swift_bridgeObjectRelease();
  uint64_t v16 = (void *)sub_250F0D0D0();
  swift_bridgeObjectRelease();
  id v17 = objc_msgSend(v12, sel_predicateWithMetadataKey_allowedValues_, v13, v16);

  *(void *)(inited + 32) = v17;
  void v20[2] = inited;
  sub_250F0D050();
  sub_250EF6F98((uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_250EA8994((uint64_t)v6);
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    id v18 = sub_250EA83E4((uint64_t)v10, v20[0], (uint64_t)a3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
  }
  return v18;
}

void sub_250EA88C8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

unint64_t sub_250EA892C()
{
  unint64_t result = qword_26B20EF18;
  if (!qword_26B20EF18)
  {
    sub_250E8D194(255, &qword_26B20EF10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EF18);
  }
  return result;
}

uint64_t sub_250EA8994(uint64_t a1)
{
  sub_250EA88C8(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_250EA8A20()
{
  if (!qword_26B20EF38)
  {
    unint64_t v0 = sub_250F0D470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF38);
    }
  }
}

id sub_250EA8A80(uint64_t a1, void *a2, void *a3)
{
  uint64_t v24 = sub_250F0BF30();
  uint64_t v5 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v7 = (char *)&v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C2E0();
  sub_250EA36FC(0, (unint64_t *)&unk_26B20F008);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_250F0F080;
  id v9 = (id)HDSampleEntityPredicateForDataType();
  uint64_t v10 = sub_250E8D194(0, &qword_26B20EEF8);
  *(void *)(v8 + 56) = v10;
  *(void *)(v8 + 32) = v9;
  id v11 = (void *)sub_250F0BEC0();
  id v12 = (id)HDSampleEntityPredicateForDateInterval();

  *(void *)(v8 + 88) = v10;
  *(void *)(v8 + 64) = v12;
  id v13 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v14 = objc_msgSend(self, sel_predicateMatchingAllPredicates_, v13);

  id v15 = v14;
  id v16 = (id)HKRollingBaselineConfigurationForQuantityType();
  id v17 = objc_allocWithZone(MEMORY[0x263F433A0]);
  id v18 = a2;
  id v19 = a3;
  uint64_t v20 = (void *)sub_250F0BFC0();
  id v21 = objc_msgSend(v17, sel_initForProfile_quantityType_predicate_restrictedSourceEntities_configuration_currentDate_, v19, v18, v15, 0, v16, v20);

  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v24);
  return v21;
}

void sub_250EA8CE0()
{
  if (!qword_26B20F238)
  {
    sub_250F0C6F0();
    unint64_t v0 = (void (*)(uint64_t))MEMORY[0x263F42DE0];
    sub_250EA8DE4((unint64_t *)&unk_26B20F1F0, MEMORY[0x263F42DE0]);
    sub_250EA8DE4(&qword_26B20F1E0, v0);
    sub_250EA8DE4(&qword_26B20F1E8, v0);
    unint64_t v1 = sub_250F0CD40();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B20F238);
    }
  }
}

uint64_t sub_250EA8DE4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_250EA8E2C()
{
  unint64_t result = qword_269B10B00;
  if (!qword_269B10B00)
  {
    sub_250EA88C8(255, &qword_269B10AF8, (uint64_t (*)(uint64_t))sub_250EA8CE0, MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10B00);
  }
  return result;
}

uint64_t sub_250EA8EB8(uint64_t a1)
{
  sub_250E89450();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_250EA8F14()
{
}

void sub_250EA8F20()
{
}

void sub_250EA8F2C(SEL *a1)
{
  id v3 = objc_msgSend(v1, sel_daemon);
  if (v3)
  {
    uint64_t v4 = v3;
    id v5 = objc_msgSend(v3, sel_behavior);
    id v6 = objc_msgSend(v5, sel_features);

    if (v6)
    {
      unsigned int v7 = objc_msgSend(v6, sel_harmonia);

      if (v7)
      {
        id v8 = objc_msgSend(v4, sel_behavior);
        [v8 *a1];
      }
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_250EA9014@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  BOOL v27 = (char **)a2;
  uint64_t v3 = sub_250F0C060();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (void (*)(char *, char *, uint64_t))((char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_250F0C640();
  MEMORY[0x270FA5388](v7 - 8);
  id v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C340();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v14 = (char *)v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v16 = (char *)v26 - v15;
  sub_250F0C320();
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
  id v17 = v26[1];
  sub_250F0C600();
  sub_250F0C5C0();
  (*(void (**)(void, char *, uint64_t))(v4 + 16))(v6, a1, v3);
  id v18 = sub_250E8D3A4(v17, (uint64_t)v9, v6);
  if (sub_250E89300())
  {
    uint64_t v20 = v19;
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v20 + 8))(ObjectType, v20);
    swift_unknownObjectRelease();
    sub_250E8EFA0((unsigned int (**)(uint64_t, uint64_t, uint64_t))v18, a1, (uint64_t *)v28);
    swift_release();

    (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
    return sub_250E9FB90(v28, (uint64_t)v27);
  }
  else
  {
    sub_250EA9318();
    uint64_t v24 = v27;
    v27[3] = v25;
    v24[4] = (char *)sub_250EA93AC((unint64_t *)&qword_26B20E300, (void (*)(uint64_t))sub_250EA9318);
    *uint64_t v24 = v18;
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
}

void sub_250EA9318()
{
  if (!qword_26B20E310)
  {
    type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(255);
    sub_250EA93AC((unint64_t *)&unk_26B20EBF0, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
    unint64_t v0 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E310);
    }
  }
}

uint64_t sub_250EA93AC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

id sub_250EA93F4(void *a1, void *a2, void *a3, void *a4, char a5)
{
  id v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v13 = OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_unitTest_didProcessNotificationSyncInstruction;
  sub_250EABA34();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = 0;
  *(void *)(v14 + 24) = 0;
  *(_DWORD *)(v14 + 32) = 0;
  *(void *)&v6[v13] = v14;
  *(void *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager] = a1;
  *(void *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationStateKeyValueDomain] = a2;
  *(void *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationSyncClient] = a3;
  *(void *)&v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_analyticsEventSubmissionManager] = a4;
  v6[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_shouldPostForwardedChangeNotifications] = a5;
  v21.receiver = v6;
  v21.super_class = ObjectType;
  id v15 = a1;
  id v16 = a2;
  id v17 = a3;
  id v18 = a4;
  id v19 = objc_msgSendSuper2(&v21, sel_init);
  objc_msgSend(v17, sel_setDelegate_, v19, v21.receiver, v21.super_class);

  return v19;
}

uint64_t sub_250EA9524(char *a1)
{
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_250F0C8D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  id v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CCB0();
  uint64_t v25 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  id v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t v10 = sub_250F0CCA0();
  os_log_type_t v11 = sub_250F0D1D0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = swift_slowAlloc();
    uint64_t v22 = v7;
    uint64_t v13 = v12;
    uint64_t v21 = swift_slowAlloc();
    uint64_t v27 = v21;
    *(_DWORD *)uint64_t v13 = 136446466;
    uint64_t v14 = sub_250F0D7B0();
    uint64_t v23 = a1;
    uint64_t v26 = sub_250E8BE44(v14, v15, &v27);
    uint64_t ObjectType = v1;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2080;
    uint64_t v16 = sub_250F0C860();
    uint64_t v26 = sub_250E8BE44(v16, v17, &v27);
    a1 = v23;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    _os_log_impl(&dword_250E86000, v10, v11, "[%{public}s] Posting notification (%s) and syncing a send instruction", (uint8_t *)v13, 0x16u);
    uint64_t v18 = v21;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v18, -1, -1);
    MEMORY[0x25338EC30](v13, -1, -1);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v22);
  }
  else
  {
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);

    (*(void (**)(char *, uint64_t))(v25 + 8))(v9, v7);
  }
  sub_250EA9870((uint64_t)a1);
  sub_250E96C3C(a1);
  return sub_250EAA124((uint64_t)a1);
}

uint64_t sub_250EA9870(uint64_t a1)
{
  uint64_t v68 = sub_250F0C8D0();
  uint64_t v67 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v65 = v2;
  id v66 = (char *)&v49 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v64 = sub_250F0C8B0();
  uint64_t v63 = *(void *)(v64 - 8);
  MEMORY[0x270FA5388](v64);
  uint64_t v62 = (char *)&v49 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_250F0C060();
  uint64_t v60 = *(void *)(v61 - 8);
  MEMORY[0x270FA5388](v61);
  unint64_t v53 = (char *)&v49 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_250F0CE70();
  uint64_t v57 = *(void *)(v58 - 8);
  MEMORY[0x270FA5388](v58);
  int v55 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_250F0C1E0();
  uint64_t v6 = *(void *)(v52 - 8);
  MEMORY[0x270FA5388](v52);
  uint64_t v8 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0C830();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v49 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C890();
  uint64_t v13 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  sub_250F0C880();
  if (v14)
  {
    unint64_t v15 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v15 = 0;
  }
  uint64_t v16 = self;
  sub_250F0C840();
  sub_250F0C820();
  uint64_t v51 = a1;
  unint64_t v17 = *(uint64_t (**)(char *, uint64_t))(v10 + 8);
  uint64_t v54 = v10 + 8;
  uint64_t v59 = v17;
  v17(v12, v9);
  uint64_t v18 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v19 = objc_msgSend(v16, sel_createNotificationContentWithTitle_body_categoryIdentifier_, v13, v15, v18);

  sub_250E8C6C0(0, &qword_269B10BB0, (uint64_t (*)(uint64_t))sub_250EAAB44, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F080;
  uint64_t aBlock = sub_250F0CF80();
  uint64_t v71 = v21;
  uint64_t v56 = v9;
  sub_250F0D420();
  id v50 = v12;
  *(void *)(inited + 96) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 72) = 15;
  uint64_t v22 = v6;
  uint64_t v23 = *(void (**)(char *, void, uint64_t))(v6 + 104);
  uint64_t v24 = v52;
  v23(v8, *MEMORY[0x263F42B10], v52);
  uint64_t v25 = sub_250F0C1D0();
  uint64_t v27 = v26;
  (*(void (**)(char *, uint64_t))(v22 + 8))(v8, v24);
  uint64_t aBlock = v25;
  uint64_t v71 = v27;
  sub_250F0D420();
  uint64_t v28 = v55;
  uint64_t v29 = v51;
  sub_250F0C870();
  uint64_t v30 = sub_250F0CE30();
  (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v58);
  *(void *)(inited + 168) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 144) = v30;
  sub_250EFBC94(inited);
  long long v31 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  objc_msgSend(v19, sel_setUserInfo_, v31);

  long long v32 = v53;
  sub_250F0C010();
  uint64_t v33 = (void *)sub_250F0BFC0();
  (*(void (**)(char *, uint64_t))(v60 + 8))(v32, v61);
  objc_msgSend(v19, sel_setExpirationDate_, v33);

  uint64_t v34 = v62;
  sub_250F0C8C0();
  uint64_t v35 = v50;
  sub_250F0C8A0();
  (*(void (**)(char *, uint64_t))(v63 + 8))(v34, v64);
  uint64_t v36 = v67;
  uint64_t v37 = v66;
  uint64_t v38 = v68;
  (*(void (**)(char *, uint64_t, uint64_t))(v67 + 16))(v66, v29, v68);
  unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
  unint64_t v40 = (v65 + v39 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v41 = swift_allocObject();
  uint64_t v42 = v69;
  *(void *)(v41 + 16) = v69;
  (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v39, v37, v38);
  *(void *)(v41 + v40) = v19;
  uint64_t v43 = *(void **)&v42[OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager];
  int v44 = v42;
  id v45 = v19;
  sub_250F0C820();
  uint64_t v46 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t v74 = sub_250EAAC98;
  uint64_t v75 = v41;
  uint64_t aBlock = MEMORY[0x263EF8330];
  uint64_t v71 = 1107296256;
  uint64_t v72 = sub_250EE29A8;
  uint64_t v73 = &block_descriptor_0;
  uint64_t v47 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v43, sel_removeDeliveredNotificationsWithCategoryIdentifier_completionHandler_, v46, v47);
  _Block_release(v47);

  swift_release();
  return v59(v35, v56);
}

uint64_t sub_250EAA124(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v39 = a1;
  v46[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_250F0CCB0();
  uint64_t v43 = *(void *)(v3 - 8);
  uint64_t v44 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v42 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0C240();
  uint64_t v37 = *(void *)(v5 - 8);
  uint64_t v38 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_250F0C8B0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_250F0D230();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C6C0(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v14 = MEMORY[0x270FA5388](v13 - 8);
  uint64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v37 - v17;
  uint64_t v40 = v2;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F42F70], v9);
  sub_250F0D220();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_250F0D1F0();
  swift_bridgeObjectRelease();
  sub_250F0C8C0();
  (*(void (**)(char *, void, uint64_t))(v37 + 104))(v7, *MEMORY[0x263F42BB8], v38);
  sub_250E9FBA8((uint64_t)v18, (uint64_t)v16);
  sub_250F0C260();
  swift_allocObject();
  uint64_t v19 = sub_250F0C250();
  uint64_t v20 = *(void **)(v40
                 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_analyticsEventSubmissionManager);
  v46[0] = 0;
  if (objc_msgSend(v20, sel_submitEvent_error_, v19, v46))
  {
    id v21 = v46[0];
    sub_250E8CCE8((uint64_t)v18, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    return swift_release();
  }
  else
  {
    id v23 = v46[0];
    uint64_t v24 = (void *)sub_250F0BFA0();

    swift_willThrow();
    swift_release();
    sub_250E8CCE8((uint64_t)v18, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    uint64_t v25 = v42;
    sub_250F0CC90();
    id v26 = v24;
    id v27 = v24;
    uint64_t v28 = sub_250F0CCA0();
    os_log_type_t v29 = sub_250F0D1B0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = swift_slowAlloc();
      long long v31 = (void *)swift_slowAlloc();
      long long v32 = (void *)swift_slowAlloc();
      v46[0] = v32;
      *(_DWORD *)uint64_t v30 = 136446466;
      uint64_t v33 = sub_250F0D7B0();
      uint64_t v45 = sub_250E8BE44(v33, v34, (uint64_t *)v46);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2114;
      id v35 = v24;
      uint64_t v36 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v45 = v36;
      sub_250F0D300();
      void *v31 = v36;

      _os_log_impl(&dword_250E86000, v28, v29, "[%{public}s] Error submitting notification analytic: %{public}@)", (uint8_t *)v30, 0x16u);
      sub_250E8C6C0(0, (unint64_t *)&qword_26B20E430, (uint64_t (*)(uint64_t))sub_250E97918, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v31, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v32, -1, -1);
      MEMORY[0x25338EC30](v30, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v43 + 8))(v25, v44);
  }
}

void sub_250EAA794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void **)(a1 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager);
  sub_250F0C860();
  id v5 = (id)sub_250F0CF50();
  swift_bridgeObjectRelease();
  objc_msgSend(v4, sel_postNotificationWithIdentifier_content_trigger_completion_, v5, a3, 0, 0);
}

uint64_t (*sub_250EAA820(uint64_t a1, uint64_t a2))()
{
  if (a1)
  {
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = a1;
    *(void *)(v4 + 24) = a2;
    id v5 = sub_250EABB20;
  }
  else
  {
    id v5 = 0;
  }
  sub_250EAB9EC(a1);
  swift_getAtKeyPath();
  sub_250EAB9CC((uint64_t)v5);
  if (!v8) {
    return 0;
  }
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = v8;
  *(void *)(v6 + 24) = v9;
  return sub_250EABB10;
}

uint64_t sub_250EAA914@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(uint64_t (*)(), uint64_t)@<X1>, uint64_t (**a3)()@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  if (*a1)
  {
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = v5;
    *(void *)(v7 + 24) = v6;
    uint64_t v8 = sub_250EAB9E4;
  }
  else
  {
    uint64_t v8 = 0;
    uint64_t v7 = 0;
  }
  sub_250EAB9EC(v5);
  uint64_t v9 = a2(v8, v7);
  uint64_t v11 = v10;
  sub_250EAB9CC((uint64_t)v8);
  if (v9)
  {
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v9;
    *(void *)(result + 24) = v11;
    uint64_t v13 = sub_250EAB9DC;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t result = 0;
  }
  *a3 = v13;
  a3[1] = (uint64_t (*)())result;
  return result;
}

uint64_t type metadata accessor for ImbalanceUserNotificationCoordinator()
{
  return self;
}

void sub_250EAAB44()
{
  if (!qword_269B10BB8)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B10BB8);
    }
  }
}

uint64_t sub_250EAABB0()
{
  uint64_t v1 = sub_250F0C8D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v6 + 8, v5);
}

void sub_250EAAC98()
{
  uint64_t v1 = *(void *)(sub_250F0C8D0() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + ((*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8));
  sub_250EAA794(v3, v0 + v2, v4);
}

id sub_250EAAD28(void *a1, void *a2, void *a3)
{
  uint64_t v4 = v3;
  id v8 = objc_msgSend(a1, sel_notificationManager);
  if (v8)
  {
    uint64_t v9 = v8;
    swift_getMetatypeMetadata();
    id v10 = a1;
    sub_250F0D670();
    id v11 = (id)HKCreateSerialDispatchQueue();
    swift_unknownObjectRelease();
    id v12 = objc_allocWithZone(MEMORY[0x263F432A0]);
    uint64_t v13 = (void *)sub_250F0CF50();
    id v14 = objc_msgSend(v12, sel_initWithProfile_clientIdentifier_queue_, v10, v13, v11);

    sub_250EA8F14();
    LOBYTE(v10) = v15;
    id v16 = objc_allocWithZone(v4);
    return sub_250EA93F4(v9, a2, v14, a3, v10 & 1);
  }
  else
  {

    return 0;
  }
}

uint64_t sub_250EAAE70(void *a1)
{
  uint64_t v2 = v1;
  v94[2] = *(uint64_t (**)())MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v91 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v90 = (char *)&v79 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v79 - v8;
  MEMORY[0x270FA5388](v7);
  id v11 = (char *)&v79 - v10;
  sub_250E8C6C0(0, (unint64_t *)&unk_269B10BC0, MEMORY[0x263F42E88], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v12 - 8);
  id v14 = (char *)&v79 - v13;
  uint64_t v15 = sub_250F0C8D0();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v79 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  id v21 = (char *)&v79 - v20;
  v94[0] = 0;
  id v87 = a1;
  id v89 = objc_msgSend(a1, sel_pendingNotificationSendInstructionsWithError_, v94);
  if (!v89)
  {
    uint64_t v38 = v94[0];
    uint64_t v39 = (void *)sub_250F0BFA0();

    swift_willThrow();
    goto LABEL_18;
  }
  uint64_t v86 = v2;
  int v22 = *(unsigned __int8 *)(v2
                           + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_shouldPostForwardedChangeNotifications);
  id v23 = v94[0];
  BOOL v24 = v22 == 1;
  uint64_t v25 = v89;
  if (!v24) {
    goto LABEL_6;
  }
  sub_250E97444((uint64_t)v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) == 1)
  {
    sub_250E8CCE8((uint64_t)v14, (unint64_t *)&unk_269B10BC0, MEMORY[0x263F42E88]);
LABEL_6:
    sub_250F0CC90();
    id v26 = v25;
    id v27 = sub_250F0CCA0();
    os_log_type_t v28 = sub_250F0D1D0();
    int v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      uint64_t v30 = swift_slowAlloc();
      uint64_t v85 = (uint64_t (*)())swift_slowAlloc();
      v94[0] = v85;
      *(_DWORD *)uint64_t v30 = 136446466;
      LODWORD(v84) = v29;
      uint64_t v31 = sub_250F0D7B0();
      uint64_t v92 = sub_250E8BE44(v31, v32, (uint64_t *)v94);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2082;
      os_log_t v83 = (os_log_t)(v30 + 14);
      id v33 = objc_msgSend(v26, sel_messageIdentifiers);
      sub_250F0D0E0();

      uint64_t v34 = sub_250F0D0F0();
      unint64_t v36 = v35;
      swift_bridgeObjectRelease();
      uint64_t v92 = sub_250E8BE44(v34, v36, (uint64_t *)v94);
      sub_250F0D300();

      uint64_t v25 = v89;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v27, (os_log_type_t)v84, "[%{public}s] Ignoring send instructions %{public}s", (uint8_t *)v30, 0x16u);
      uint64_t v37 = v85;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v37, -1, -1);
      MEMORY[0x25338EC30](v30, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v91 + 8))(v9, v4);
    goto LABEL_15;
  }
  uint64_t v85 = (uint64_t (*)())v4;
  (*(void (**)(char *, char *, uint64_t))(v16 + 32))(v21, v14, v15);
  sub_250F0CC90();
  (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
  id v40 = v25;
  uint64_t v41 = sub_250F0CCA0();
  os_log_type_t v42 = sub_250F0D1D0();
  int v43 = v42;
  if (os_log_type_enabled(v41, v42))
  {
    uint64_t v44 = swift_slowAlloc();
    uint64_t v84 = (uint64_t (*)())swift_slowAlloc();
    v94[0] = v84;
    *(_DWORD *)uint64_t v44 = 136446722;
    os_log_t v83 = v41;
    uint64_t v45 = sub_250F0D7B0();
    id v80 = v40;
    uint64_t v92 = sub_250E8BE44(v45, v46, (uint64_t *)v94);
    id v81 = &v93;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v44 + 12) = 2082;
    uint64_t v47 = sub_250F0C860();
    uint64_t v92 = sub_250E8BE44(v47, v48, (uint64_t *)v94);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    int v82 = v43;
    uint64_t v49 = *(void (**)(char *, uint64_t))(v16 + 8);
    v49(v19, v15);
    *(_WORD *)(v44 + 22) = 2082;
    id v50 = v80;
    id v51 = objc_msgSend(v80, sel_messageIdentifiers, v44 + 24);
    sub_250F0D0E0();

    uint64_t v52 = sub_250F0D0F0();
    unint64_t v54 = v53;
    swift_bridgeObjectRelease();
    uint64_t v92 = sub_250E8BE44(v52, v54, (uint64_t *)v94);
    sub_250F0D300();

    swift_bridgeObjectRelease();
    os_log_t v55 = v83;
    _os_log_impl(&dword_250E86000, v83, (os_log_type_t)v82, "[%{public}s] Posting notification (%{public}s) from send instructions %{public}s", (uint8_t *)v44, 0x20u);
    uint64_t v56 = v84;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v56, -1, -1);
    MEMORY[0x25338EC30](v44, -1, -1);
  }
  else
  {
    uint64_t v49 = *(void (**)(char *, uint64_t))(v16 + 8);
    v49(v19, v15);
  }
  (*(void (**)(char *, uint64_t (*)()))(v91 + 8))(v11, v85);
  sub_250EA9870((uint64_t)v21);
  v49(v21, v15);
  uint64_t v4 = (uint64_t)v85;
  uint64_t v25 = v89;
LABEL_15:
  v94[0] = 0;
  if (!objc_msgSend(v87, sel_markPendingNotificationInstructionsAsProcessed_error_, v25, v94))
  {
    uint64_t v58 = v94[0];
    uint64_t v39 = (void *)sub_250F0BFA0();

    swift_willThrow();
    uint64_t v2 = v86;
LABEL_18:
    uint64_t v59 = v90;
    sub_250F0CC90();
    id v60 = v39;
    id v61 = v39;
    uint64_t v62 = sub_250F0CCA0();
    os_log_type_t v63 = sub_250F0D1B0();
    if (os_log_type_enabled(v62, v63))
    {
      uint64_t v64 = swift_slowAlloc();
      uint64_t v65 = (void *)swift_slowAlloc();
      id v66 = (uint64_t (*)())swift_slowAlloc();
      uint64_t v85 = (uint64_t (*)())v4;
      uint64_t v67 = v66;
      v94[0] = v66;
      *(_DWORD *)uint64_t v64 = 136446466;
      uint64_t v68 = sub_250F0D7B0();
      id v89 = 0;
      uint64_t v69 = v2;
      uint64_t v92 = sub_250E8BE44(v68, v70, (uint64_t *)v94);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v64 + 12) = 2114;
      id v71 = v39;
      uint64_t v72 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v92 = v72;
      sub_250F0D300();
      *uint64_t v65 = v72;
      uint64_t v2 = v69;

      _os_log_impl(&dword_250E86000, v62, v63, "[%{public}s] Error processing pending send instructions: %{public}@", (uint8_t *)v64, 0x16u);
      sub_250E8C6C0(0, (unint64_t *)&qword_26B20E430, (uint64_t (*)(uint64_t))sub_250E97918, MEMORY[0x263F8D8F0]);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v65, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v67, -1, -1);
      MEMORY[0x25338EC30](v64, -1, -1);

      (*(void (**)(char *, uint64_t (*)()))(v91 + 8))(v90, v85);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v91 + 8))(v59, v4);
    }
    goto LABEL_21;
  }
  uint64_t v57 = v94[0];

  uint64_t v2 = v86;
LABEL_21:
  uint64_t v73 = *(os_unfair_lock_s **)(v2
                             + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_unitTest_didProcessNotificationSyncInstruction);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v75 = MEMORY[0x270FA5388](KeyPath);
  *(&v79 - 2) = (uint64_t)sub_250EAB9A8;
  *(&v79 - 1) = v75;
  uint64_t v76 = (uint64_t *)&v73[4];
  v73 += 8;
  swift_retain();
  os_unfair_lock_lock(v73);
  sub_250EAB9B0(v76, v94);
  os_unfair_lock_unlock(v73);
  uint64_t v77 = v94[0];
  uint64_t result = swift_release_n();
  if (v77)
  {
    ((void (*)(uint64_t))v77)(result);
    return sub_250EAB9CC((uint64_t)v77);
  }
  return result;
}

uint64_t (*sub_250EAB9A8(uint64_t a1, uint64_t a2))()
{
  return sub_250EAA820(a1, a2);
}

uint64_t sub_250EAB9B0@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)()@<X8>)
{
  return sub_250EAA914(a1, *(uint64_t (**)(uint64_t (*)(), uint64_t))(v2 + 16), a2);
}

uint64_t sub_250EAB9CC(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_250EAB9DC()
{
  return sub_250EFE8D8(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_250EAB9E4()
{
  return sub_250EFE900(*(uint64_t (**)(void))(v0 + 16));
}

uint64_t sub_250EAB9EC(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_250EAB9FC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_250EABA34()
{
  if (!qword_26B20EF60)
  {
    sub_250E8C6C0(255, &qword_26B20F090, (uint64_t (*)(uint64_t))sub_250EABACC, MEMORY[0x263F8D8F0]);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_250F0D4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF60);
    }
  }
}

unint64_t sub_250EABACC()
{
  unint64_t result = qword_26B20F080;
  if (!qword_26B20F080)
  {
    unint64_t result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_26B20F080);
  }
  return result;
}

id SleepingSampleDaySummaryCurrentValueCache.registerObserver(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_250E89510(a1, a3, v3);
}

id SleepingSampleDaySummaryCurrentValueCache.unregisterObserver(_:)(uint64_t a1)
{
  swift_getObjectType();
  return sub_250EAEF70(a1, v1);
}

uint64_t sub_250EABBCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if ((MEMORY[0x25338D230]() & 1) == 0
    || (sub_250EAED68(*(void *)(a1 + *(int *)(a3 + 20)), *(void *)(a2 + *(int *)(a3 + 20))) & 1) == 0
    || *(void *)(a1 + *(int *)(a3 + 24)) != *(void *)(a2 + *(int *)(a3 + 24)))
  {
    return 0;
  }
  return sub_250F0C020();
}

uint64_t sub_250EABC60()
{
  uint64_t v0 = sub_250F0C120();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F07740], v0);
  sub_250F0C130();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

id SleepingSampleDaySummaryCurrentValueCache.__allocating_init(changeDetector:gregorianCalendarProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_250EAEF90(a1, a3, a4, v4, ObjectType, a2);
}

id SleepingSampleDaySummaryCurrentValueCache.init(changeDetector:gregorianCalendarProvider:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t ObjectType = swift_getObjectType();
  return sub_250EAF000(a1, a3, a4, v4, ObjectType, a2);
}

uint64_t sub_250EABE20@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v70 = a2;
  id v71 = a1;
  sub_250E8E700();
  uint64_t v64 = v3;
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  id v60 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v59 = (char *)&v56 - v6;
  uint64_t v7 = sub_250F0CE70();
  uint64_t v8 = *(void **)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v61 = (char *)&v56 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  os_log_type_t v63 = (char *)&v56 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v62 = (char *)&v56 - v13;
  sub_250E9374C();
  uint64_t v66 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v65 = (char *)&v56 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v19 = (char *)&v56 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v58 = (uint64_t)&v56 - v20;
  uint64_t v21 = sub_250F0C1B0();
  uint64_t v22 = *(void *)(v21 - 8);
  MEMORY[0x270FA5388](v21);
  BOOL v24 = (char *)&v56 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_250F0C340();
  uint64_t v68 = *(void *)(v25 - 8);
  uint64_t v69 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  uint64_t v67 = (char *)&v56 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v56 - v29;
  (*(void (**)(uint64_t))(v2
                                  + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider))(v28);
  uint64_t v31 = v30;
  sub_250F0C320();
  (*(void (**)(char *, uint64_t))(v22 + 8))(v24, v21);
  uint64_t result = (uint64_t)objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    id v33 = (void *)result;
    unsigned __int8 v34 = objc_msgSend((id)result, sel_isAppleWatch);

    unint64_t v35 = v30;
    if (v34)
    {
LABEL_5:
      uint64_t v54 = v68;
      uint64_t v55 = v69;
      (*(void (**)(char *, char *, uint64_t))(v68 + 16))(v67, v35, v69);
      sub_250F0C600();
      sub_250F0C5C0();
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v35, v55);
    }
    sub_250F0C300();
    unint64_t v36 = (void (*)(char *, char *, uint64_t))v8[2];
    uint64_t v37 = v62;
    v36(v62, v19, v7);
    sub_250E936EC((uint64_t)v19, (uint64_t (*)(void))sub_250E9374C);
    uint64_t v38 = (uint64_t)v65;
    id v71 = v31;
    sub_250F0C300();
    uint64_t v39 = v38 + *(int *)(v66 + 36);
    id v40 = v61;
    uint64_t v57 = v36;
    v36(v61, (char *)v39, v7);
    sub_250E936EC(v38, (uint64_t (*)(void))sub_250E9374C);
    uint64_t v41 = v63;
    sub_250F0CE40();
    os_log_type_t v42 = (void (*)(char *, uint64_t))v8[1];
    v42(v40, v7);
    sub_250E9384C(&qword_26B20E340, MEMORY[0x263F090E8]);
    uint64_t result = sub_250F0CF00();
    if (result)
    {
      uint64_t v43 = v64;
      uint64_t v44 = v37;
      uint64_t v45 = v59;
      unint64_t v46 = &v59[*(int *)(v64 + 48)];
      id v61 = (char *)(v8 + 1);
      uint64_t v47 = (void (*)(char *, char *, uint64_t))v8[4];
      v47(v59, v44, v7);
      v47(v46, v41, v7);
      unint64_t v48 = v60;
      uint64_t v49 = &v60[*(int *)(v43 + 48)];
      id v50 = v42;
      id v51 = v57;
      v57(v60, v45, v7);
      v51(v49, v46, v7);
      uint64_t v52 = (uint64_t)v65;
      v47(v65, v48, v7);
      v50(v49, v7);
      unint64_t v53 = &v48[*(int *)(v64 + 48)];
      v47(v48, v45, v7);
      v47(v53, v46, v7);
      v47((char *)(v52 + *(int *)(v66 + 36)), v53, v7);
      v50(v48, v7);
      sub_250EB1008(v52, v58, (uint64_t (*)(void))sub_250E9374C);
      unint64_t v35 = v71;
      sub_250F0C310();
      goto LABEL_5;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_250EAC4A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v25[2] = a6;
  uint64_t v10 = sub_250F0CCB0();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  if (sub_250F0C090())
  {
    sub_250EB1168(a1, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    uint64_t v14 = sub_250F0C640();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a3, v14);
    uint64_t v15 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
    uint64_t v16 = a1 + v15[7];
    uint64_t v17 = sub_250F0C060();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v16, a5, v17);
    *(void *)(a1 + v15[5]) = a4;
    *(void *)(a1 + v15[6]) = 0;
    (*(void (**)(uint64_t, void, uint64_t, int *))(*((void *)v15 - 1) + 56))(a1, 0, 1, v15);
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_250F0CC90();
    uint64_t v19 = sub_250F0CCA0();
    os_log_type_t v20 = sub_250F0D1D0();
    if (os_log_type_enabled(v19, v20))
    {
      uint64_t v21 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v26 = v22;
      *(_DWORD *)uint64_t v21 = 136446210;
      v25[0] = v21 + 4;
      uint64_t v23 = sub_250F0D7B0();
      void v25[3] = sub_250E8BE44(v23, v24, &v26);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v19, v20, "[%{public}s] Ignoring invalidated population attempt", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v22, -1, -1);
      MEMORY[0x25338EC30](v21, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
}

Swift::Void __swiftcall SleepingSampleDaySummaryCurrentValueCache.sleepingSampleDataTypesAddedInDateInterval(_:)(Swift::OpaquePointer a1)
{
  swift_getObjectType();
  uint64_t v3 = *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  uint64_t v4 = v3 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v3 + 16);
  uint64_t v5 = (os_unfair_lock_s *)(v3 + ((*(unsigned int *)(*(void *)v3 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v5);
  sub_250EAF3A4(v4, (char *)aBlock);
  os_unfair_lock_unlock(v5);
  LOBYTE(v4) = aBlock[0];
  uint64_t v6 = *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers);
  uint64_t v7 = swift_allocObject();
  *(Swift::OpaquePointer *)(v7 + 16) = a1;
  *(unsigned char *)(v7 + 24) = v4;
  uint64_t v8 = *(void **)(v6 + 16);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_250EAF3F8;
  *(void *)(v9 + 24) = v7;
  aBlock[4] = sub_250EAF43C;
  aBlock[5] = v9;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_250EAED08;
  aBlock[3] = &block_descriptor_1;
  uint64_t v10 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  objc_msgSend(v8, sel_notifyObservers_, v10);
  _Block_release(v10);
  swift_release();
}

uint64_t sub_250EAC988@<X0>(uint64_t a1@<X0>, void (**a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, char *a4@<X8>)
{
  id v50 = a4;
  v42[1] = a3;
  uint64_t v43 = a2;
  sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v7 = (char *)v42 - v6;
  uint64_t v8 = sub_250F0C0C0();
  uint64_t v48 = *(void *)(v8 - 8);
  uint64_t v49 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v47 = (char *)v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0CCB0();
  uint64_t v45 = *(void *)(v10 - 8);
  uint64_t v46 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)v42 - v14;
  uint64_t v16 = type metadata accessor for SleepingSampleCacheRange();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)v42 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v20 = *(void *)(v19 - 8);
  MEMORY[0x270FA5388](v19);
  uint64_t v22 = (char *)v42 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = v20;
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v20 + 48);
  if (v23((char *)a1, 1, v19)
    || (sub_250E9361C(a1, (uint64_t)v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry), sub_250EACFD8((uint64_t)v18), sub_250E936EC((uint64_t)v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry), BOOL v24 = sub_250E98578(v43), sub_250E936EC((uint64_t)v18, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange), !v24))
  {
    sub_250E92124(a1, (uint64_t)v7, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    int v31 = v23(v7, 1, v19);
    uint64_t result = sub_250EB1168((uint64_t)v7, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    if (v31 != 1)
    {
      char v39 = 0;
      goto LABEL_12;
    }
    sub_250F0CC90();
    id v33 = sub_250F0CCA0();
    os_log_type_t v34 = sub_250F0D1D0();
    if (os_log_type_enabled(v33, v34))
    {
      uint64_t v35 = swift_slowAlloc();
      uint64_t v36 = swift_slowAlloc();
      uint64_t v52 = v36;
      *(_DWORD *)uint64_t v35 = 136446210;
      uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v35 + 4);
      uint64_t v37 = sub_250F0D7B0();
      uint64_t v51 = sub_250E8BE44(v37, v38, &v52);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v33, v34, "[%{public}s] Resetting cache token for samples added while cache is empty", (uint8_t *)v35, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v36, -1, -1);
      MEMORY[0x25338EC30](v35, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v13, v46);
  }
  else
  {
    sub_250F0CC90();
    uint64_t v25 = sub_250F0CCA0();
    os_log_type_t v26 = sub_250F0D1D0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      uint64_t v52 = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v43 = (void (**)(char *, uint64_t, uint64_t))(v27 + 4);
      uint64_t v29 = sub_250F0D7B0();
      uint64_t v51 = sub_250E8BE44(v29, v30, &v52);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v25, v26, "[%{public}s] Evicting cache for samples added in the cached range", (uint8_t *)v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v28, -1, -1);
      MEMORY[0x25338EC30](v27, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v45 + 8))(v15, v46);
  }
  sub_250EB1168(a1, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  char v39 = 1;
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v44 + 56))(a1, 1, 1, v19);
  id v40 = v47;
  sub_250F0C0B0();
  uint64_t v41 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, char *, uint64_t))(v48 + 40))(a1 + *(int *)(v41 + 20), v40, v49);
LABEL_12:
  *id v50 = v39;
  return result;
}

uint64_t sub_250EACFD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v35 = a1;
  sub_250EB1070(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  int v31 = (char *)&v26 - v2;
  uint64_t v32 = sub_250F0C1B0();
  uint64_t v30 = *(void *)(v32 - 8);
  MEMORY[0x270FA5388](v32);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_250F0C340();
  uint64_t v5 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_250F0CE70();
  uint64_t v8 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_250F0BF30();
  uint64_t v11 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_250F0C060();
  uint64_t v33 = *(void *)(v14 - 8);
  uint64_t v34 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C620();
  sub_250F0C5D0();
  sub_250F0C330();
  uint64_t v17 = v7;
  uint64_t v18 = v31;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v17, v29);
  sub_250F0CD90();
  (*(void (**)(char *, uint64_t))(v30 + 8))(v4, v32);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
  sub_250F0BF00();
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v27);
  sub_250EAE250(v18);
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  uint64_t v19 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  id v20 = (id)HKRollingBaselineConfigurationForQuantityType();

  if (v20)
  {
    objc_msgSend(v20, sel_maximumWindowDuration);
    uint64_t v22 = v21;
  }
  else
  {
    uint64_t v22 = 0;
  }
  uint64_t v23 = v35;
  (*(void (**)(uint64_t, char *, uint64_t))(v33 + 32))(v35, v16, v34);
  uint64_t v24 = type metadata accessor for SleepingSampleCacheRange();
  uint64_t result = sub_250EB10D4((uint64_t)v18, v23 + *(int *)(v24 + 20));
  *(void *)(v23 + *(int *)(v24 + 24)) = v22;
  return result;
}

uint64_t sub_250EAD450(uint64_t *a1, uint64_t a2, char a3)
{
  uint64_t v5 = *a1;
  uint64_t v6 = a1[1];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 8))(a2, ObjectType, v6);
  if (a3)
  {
    swift_getObjectType();
    uint64_t result = swift_conformsToProtocol2();
    uint64_t v9 = result ? result : 0;
    if (result ? v5 : 0)
    {
      uint64_t v11 = swift_getObjectType();
      uint64_t v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      swift_unknownObjectRetain();
      v12(a2, v11, v9);
      return swift_unknownObjectRelease();
    }
  }
  return result;
}

Swift::Void __swiftcall SleepingSampleDaySummaryCurrentValueCache.sleepingSampleDataTypesRemoved()()
{
  swift_getObjectType();
  uint64_t v1 = *(void *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  uint64_t v2 = v1 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v1 + 16);
  uint64_t v3 = (os_unfair_lock_s *)(v1 + ((*(unsigned int *)(*(void *)v1 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v3);
  sub_250EAF444(v2);
  os_unfair_lock_unlock(v3);
  uint64_t v4 = *(void **)(*(void *)(v0
                            + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers)
                + 16);
  aBlock[4] = sub_250EFDD68;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_250EAED08;
  aBlock[3] = &block_descriptor_6;
  uint64_t v5 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v4, sel_notifyObservers_, v5);
  _Block_release(v5);
}

uint64_t sub_250EAD69C(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = a2;
  uint64_t v29 = sub_250F0C0C0();
  uint64_t v4 = *(void *)(v29 - 8);
  MEMORY[0x270FA5388](v29);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v11 = sub_250F0CCA0();
  os_log_type_t v12 = sub_250F0D1D0();
  if (os_log_type_enabled(v11, v12))
  {
    uint64_t v26 = v4;
    uint64_t v13 = swift_slowAlloc();
    uint64_t v27 = v2;
    uint64_t v14 = (uint8_t *)v13;
    uint64_t v15 = swift_slowAlloc();
    uint64_t v25 = v6;
    uint64_t v16 = v15;
    uint64_t v31 = v15;
    uint64_t v24 = v7;
    *(_DWORD *)uint64_t v14 = 136446210;
    uint64_t v23 = v14 + 4;
    uint64_t v17 = sub_250F0D7B0();
    uint64_t v30 = sub_250E8BE44(v17, v18, &v31);
    sub_250F0D300();
    uint64_t v4 = v26;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v11, v12, "[%{public}s] Evicting cache for samples removed", v14, 0xCu);
    swift_arrayDestroy();
    uint64_t v19 = v16;
    uint64_t v6 = v25;
    MEMORY[0x25338EC30](v19, -1, -1);
    MEMORY[0x25338EC30](v14, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v24);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_250EB1168(a1, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  uint64_t v20 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
  sub_250F0C0B0();
  uint64_t v21 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v4 + 40))(a1 + *(int *)(v21 + 20), v6, v29);
}

Swift::String __swiftcall SleepingSampleDaySummaryCurrentValueCache.diagnosticDescription()()
{
  uint64_t v25 = sub_250F0C060();
  uint64_t v22 = *(void *)(v25 - 8);
  MEMORY[0x270FA5388](v25);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_250F0C640();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  os_log_type_t v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state);
  uint64_t v14 = v13 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v13 + 16);
  uint64_t v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_250EADFB4(v14, (uint64_t)v8);
  os_unfair_lock_unlock(v15);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_250EB1168((uint64_t)v8, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_250F0D480();
    swift_bridgeObjectRelease();
    unint64_t v27 = 0xD000000000000014;
    unint64_t v28 = 0x8000000250F110F0;
    sub_250F0C040();
    sub_250EABE20(v2, (uint64_t)v5);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v2, v25);
    sub_250E9384C(&qword_269B10A88, MEMORY[0x263F42D90]);
    uint64_t v16 = v24;
    sub_250F0D650();
    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v5, v16);
    unint64_t v17 = v27;
    unint64_t v18 = (void *)v28;
  }
  else
  {
    sub_250EB1008((uint64_t)v8, (uint64_t)v12, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    unint64_t v27 = 0;
    unint64_t v28 = 0xE000000000000000;
    sub_250F0D480();
    sub_250F0CFB0();
    sub_250E9384C(&qword_269B10A88, MEMORY[0x263F42D90]);
    sub_250F0D650();
    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    sub_250F0CFB0();
    uint64_t v26 = *(void *)(*(void *)&v12[*(int *)(v9 + 20)] + 16);
    sub_250F0D650();
    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    sub_250F0CFB0();
    uint64_t v26 = *(void *)&v12[*(int *)(v9 + 24)];
    sub_250F0D650();
    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    sub_250F0CFB0();
    sub_250E9384C(&qword_269B10BE0, MEMORY[0x263F07490]);
    sub_250F0D650();
    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    sub_250F0CFB0();
    unint64_t v17 = v27;
    unint64_t v18 = (void *)v28;
    sub_250E936EC((uint64_t)v12, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  result._object = v20;
  result._countAndFlagsBits = v19;
  return result;
}

uint64_t sub_250EADFB4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_250E92124(a1, a2, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
}

id SleepingSampleDaySummaryCurrentValueCache.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

void SleepingSampleDaySummaryCurrentValueCache.init()()
{
}

id SleepingSampleDaySummaryCurrentValueCache.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

id sub_250EAE1A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_250E89510(a1, a3, v3);
}

id sub_250EAE1F8(uint64_t a1)
{
  swift_getObjectType();
  return sub_250EAEF70(a1, v1);
}

uint64_t sub_250EAE250@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v85 = a1;
  uint64_t v96 = sub_250F0C060();
  uint64_t v3 = *(void *)(v96 - 8);
  MEMORY[0x270FA5388](v96);
  uint64_t v5 = (char *)&v75 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_250F0C5A0();
  uint64_t v98 = *(uint64_t (***)(char *, uint64_t, uint64_t))(v94 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v94);
  uint64_t v8 = (char *)&v75 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v86 = (char *)&v75 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v88 = (char *)&v75 - v11;
  sub_250E937E0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v80 = (uint64_t)&v75 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v83 = (uint64_t)&v75 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v90 = (uint64_t)&v75 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v97 = (uint64_t)&v75 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v24 = (char *)&v75 - v23;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v75 - v25;
  sub_250EB1070(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  int v82 = (char *)&v75 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v79 = (char *)&v75 - v31;
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  id v81 = (char *)&v75 - v33;
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  id v89 = (char *)&v75 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  unint64_t v38 = (char *)&v75 - v37;
  MEMORY[0x270FA5388](v36);
  id v40 = (char *)&v75 - v39;
  uint64_t v41 = *(void *)(v2
                  + *(int *)(type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0)
                           + 20));
  uint64_t v42 = *(void *)(v41 + 16);
  uint64_t v99 = v41;
  uint64_t v84 = v3;
  if (v42)
  {
    uint64_t v75 = v8;
    uint64_t v76 = v5;
    unint64_t v77 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
    uint64_t v43 = v41 + v77;
    uint64_t v95 = *(void *)(v13 + 72);
    uint64_t v91 = (void (**)(char *, char *, uint64_t))(v98 + 4);
    uint64_t v92 = (void (**)(char *, uint64_t))(v98 + 1);
    uint64_t v93 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
    uint64_t v98 = (uint64_t (**)(char *, uint64_t, uint64_t))(v3 + 48);
    swift_bridgeObjectRetain();
    uint64_t v78 = v42;
    id v87 = v38;
    while (1)
    {
      sub_250E9361C(v43, (uint64_t)v26, (uint64_t (*)(void))sub_250E937E0);
      sub_250E9361C((uint64_t)v26, (uint64_t)v24, (uint64_t (*)(void))sub_250E937E0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v100 = *(void **)v24;
        uint64_t v44 = v100;
        char v101 = v24[8];
        sub_250E92500();
        swift_bridgeObjectRetain();
        unint64_t v38 = v87;
        swift_willThrowTypedImpl();

        uint64_t v45 = v96;
        (*v93)(v40, 1, 1, v96);
      }
      else
      {
        uint64_t v46 = v88;
        uint64_t v47 = v94;
        (*v91)(v88, v24, v94);
        swift_bridgeObjectRetain();
        sub_250F0C480();
        (*v92)(v46, v47);
        uint64_t v45 = v96;
      }
      sub_250E936EC((uint64_t)v26, (uint64_t (*)(void))sub_250E937E0);
      sub_250EB10D4((uint64_t)v40, (uint64_t)v38);
      swift_bridgeObjectRelease();
      uint64_t v48 = *v98;
      int v49 = (*v98)(v38, 1, v45);
      uint64_t result = sub_250EB1168((uint64_t)v38, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      if (v49 != 1) {
        break;
      }
      v43 += v95;
      if (!--v42) {
        goto LABEL_18;
      }
    }
    unint64_t v51 = v78 + 1;
    uint64_t v52 = v96;
    uint64_t v53 = v99 + v77 + v95 * (v78 - 1);
    uint64_t v54 = -v95;
    uint64_t v55 = v94;
    while (1)
    {
      if (v51 - 2 >= *(void *)(v99 + 16))
      {
        __break(1u);
        goto LABEL_26;
      }
      uint64_t v56 = v97;
      sub_250E9361C(v53, v97, (uint64_t (*)(void))sub_250E937E0);
      uint64_t v57 = v56;
      uint64_t v58 = v90;
      sub_250E9361C(v57, v90, (uint64_t (*)(void))sub_250E937E0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v100 = *(void **)v58;
        uint64_t v59 = v100;
        char v101 = *(unsigned char *)(v58 + 8);
        sub_250E92500();
        swift_willThrowTypedImpl();

        uint64_t v60 = (uint64_t)v89;
        (*v93)(v89, 1, 1, v52);
      }
      else
      {
        id v61 = v86;
        (*v91)(v86, (char *)v58, v55);
        uint64_t v60 = (uint64_t)v89;
        sub_250F0C480();
        (*v92)(v61, v55);
      }
      sub_250E936EC(v97, (uint64_t (*)(void))sub_250E937E0);
      int v62 = v48((char *)v60, 1, v52);
      uint64_t result = sub_250EB1168(v60, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      if (v62 != 1) {
        break;
      }
      --v51;
      v53 += v54;
      if (v51 < 2)
      {
        __break(1u);
        goto LABEL_18;
      }
    }
    uint64_t v63 = v83;
    sub_250E9361C(v53, v83, (uint64_t (*)(void))sub_250E937E0);
    uint64_t v64 = v80;
    sub_250E9361C(v63, v80, (uint64_t (*)(void))sub_250E937E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v100 = *(void **)v64;
      uint64_t v65 = v100;
      char v101 = *(unsigned char *)(v64 + 8);
      sub_250E92500();
      swift_willThrowTypedImpl();

      uint64_t v66 = (uint64_t)v79;
      (*v93)(v79, 1, 1, v52);
    }
    else
    {
      uint64_t v67 = v75;
      uint64_t v68 = v94;
      (*v91)(v75, (char *)v64, v94);
      uint64_t v66 = (uint64_t)v79;
      sub_250F0C480();
      (*v92)(v67, v68);
    }
    uint64_t v70 = (uint64_t)v81;
    uint64_t v69 = (uint64_t)v82;
    sub_250E936EC(v63, (uint64_t (*)(void))sub_250E937E0);
    sub_250EB10D4(v66, v70);
    sub_250E92124(v70, v69, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    uint64_t result = v48((char *)v69, 1, v52);
    if (result != 1)
    {
      uint64_t v72 = v84 + 32;
      id v71 = *(void (**)(char *, uint64_t, uint64_t))(v84 + 32);
      uint64_t v73 = v76;
      v71(v76, v69, v52);
      sub_250EB1168(v70, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      uint64_t v74 = v85;
      v71(v85, (uint64_t)v73, v52);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v72 + 24))(v74, 0, 1, v52);
      return swift_bridgeObjectRelease();
    }
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
LABEL_18:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v84 + 56))(v85, 1, 1, v96);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_250EAEC7C(uint64_t a1, void (*a2)(void *))
{
  swift_unknownObjectRetain();
  swift_getObjectType();
  uint64_t v4 = swift_conformsToProtocol2();
  if (v4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (v4) {
    uint64_t v6 = a1;
  }
  else {
    uint64_t v6 = 0;
  }
  if (v6)
  {
    v8[0] = v6;
    v8[1] = v5;
    a2(v8);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_250EAED08(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  swift_retain();
  uint64_t v2 = swift_unknownObjectRetain();
  v1(v2);
  swift_release();
  return swift_unknownObjectRelease();
}

uint64_t sub_250EAED68(uint64_t a1, uint64_t a2)
{
  sub_250E937E0();
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  uint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v10 = (char *)&v19 - v9;
  uint64_t v11 = *(void *)(a1 + 16);
  if (v11 == *(void *)(a2 + 16))
  {
    if (!v11 || a1 == a2)
    {
      char v15 = 1;
    }
    else
    {
      unint64_t v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
      uint64_t v13 = *(void *)(v8 + 72);
      uint64_t v14 = v11 - 1;
      do
      {
        sub_250E9361C(a1 + v12, (uint64_t)v10, (uint64_t (*)(void))sub_250E937E0);
        sub_250E9361C(a2 + v12, (uint64_t)v7, (uint64_t (*)(void))sub_250E937E0);
        sub_250F0C5A0();
        sub_250E9384C(&qword_269B10C70, MEMORY[0x263F42D70]);
        sub_250EB0FB4();
        sub_250E92500();
        char v15 = sub_250F0D750();
        sub_250E936EC((uint64_t)v7, (uint64_t (*)(void))sub_250E937E0);
        sub_250E936EC((uint64_t)v10, (uint64_t (*)(void))sub_250E937E0);
        BOOL v17 = v14-- != 0;
        if ((v15 & 1) == 0) {
          break;
        }
        v12 += v13;
      }
      while (v17);
    }
  }
  else
  {
    char v15 = 0;
  }
  return v15 & 1;
}

id sub_250EAEF70(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(*(void *)(a2+ OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers)+ 16), sel_unregisterObserver_, a1);
}

id sub_250EAEF90(uint64_t a1, uint64_t a2, uint64_t a3, Class a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11 = (char *)objc_allocWithZone(a4);
  return sub_250EAF000(a1, a2, a3, v11, a5, a6);
}

id sub_250EAF000(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6)
{
  v33[1] = a5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v12 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x270FA5388](v12);
  uint64_t v14 = (char *)v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state;
  uint64_t v16 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  BOOL v17 = a4;
  sub_250F0C0B0();
  sub_250EB11D8();
  uint64_t v18 = swift_allocObject();
  *(_DWORD *)(v18 + ((*(unsigned int *)(*(void *)v18 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_250E9361C((uint64_t)v14, v18 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v18 + 16), type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  sub_250E936EC((uint64_t)v14, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  *(void *)&a4[v15] = v18;
  uint64_t v19 = &v17[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_changeDetector];
  *(void *)uint64_t v19 = a1;
  *((void *)v19 + 1) = a6;
  uint64_t v20 = &v17[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider];
  *(void *)uint64_t v20 = a2;
  *((void *)v20 + 1) = a3;
  swift_unknownObjectRetain();
  swift_retain();
  sub_250F0D7B0();
  sub_250E8D194(0, &qword_26B20E440);
  uint64_t v21 = (void *)sub_250F0D2C0();
  sub_250EB1070(0, &qword_26B20E1A0, (uint64_t (*)(uint64_t))sub_250EB1240, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  uint64_t v22 = swift_allocObject();
  id v23 = objc_allocWithZone(MEMORY[0x263F0A5A8]);
  uint64_t v24 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v25 = objc_msgSend(v23, sel_initWithName_loggingCategory_, v24, v21);

  *(void *)(v22 + 16) = v25;
  *(void *)&v17[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers] = v22;

  v34.receiver = v17;
  v34.super_class = ObjectType;
  id v26 = objc_msgSendSuper2(&v34, sel_init);
  uint64_t v27 = self;
  id v28 = v26;
  id v29 = objc_msgSend(v27, sel_sharedDiagnosticManager);
  objc_msgSend(v29, sel_addObject_, v28);

  uint64_t v30 = *(void (**)(void))(a6 + 8);
  id v31 = v28;
  v30();

  swift_unknownObjectRelease();
  swift_release();
  return v31;
}

uint64_t sub_250EAF3A4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return sub_250EAC988(a1, *(void (***)(char *, uint64_t, uint64_t))(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_250EAF3C0()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 25, 7);
}

uint64_t sub_250EAF3F8(uint64_t *a1)
{
  return sub_250EAD450(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

uint64_t sub_250EAF404()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EAF43C(uint64_t a1)
{
  return sub_250EAEC7C(a1, *(void (**)(void *))(v1 + 16));
}

uint64_t sub_250EAF444(uint64_t a1)
{
  return sub_250EAD69C(a1, *(void *)(v1 + 16));
}

uint64_t dispatch thunk of SleepingSampleDaySummaryCurrentValueCacheObserver.sleepingSampleDaySummaryCurrentValueCacheDidEvictCanonicalCacheEntryForSamplesAddedInDateInterval(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t type metadata accessor for SleepingSampleDaySummaryCurrentValueCache()
{
  return self;
}

uint64_t method lookup function for SleepingSampleDaySummaryCurrentValueCache(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for SleepingSampleDaySummaryCurrentValueCache);
}

uint64_t dispatch thunk of SleepingSampleDaySummaryCurrentValueCache.__allocating_init(changeDetector:gregorianCalendarProvider:)()
{
  return (*(uint64_t (**)(void))(v0 + 112))();
}

uint64_t *sub_250EAF4C4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
    uint64_t v8 = *((void *)v7 - 1);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, int *))(v8 + 48))(a2, 1, v7))
    {
      sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      uint64_t v11 = sub_250F0C640();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      *(uint64_t *)((char *)a1 + v7[5]) = *(uint64_t *)((char *)a2 + v7[5]);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      uint64_t v12 = v7[7];
      uint64_t v21 = (char *)a1 + v12;
      uint64_t v13 = (char *)a2 + v12;
      uint64_t v14 = sub_250F0C060();
      uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v21, v13, v14);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v16 = *(int *)(a3 + 20);
    BOOL v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_250F0C0C0();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

char *sub_250EAF748(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v22 = sub_250F0C640();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 24))(a1, a2, v22);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v23 = v6[7];
      uint64_t v24 = &a1[v23];
      id v25 = &a2[v23];
      uint64_t v26 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 24))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_250E936EC((uint64_t)a1, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_250F0C640();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
  *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v12 = v6[7];
  uint64_t v27 = &a1[v12];
  uint64_t v13 = &a2[v12];
  uint64_t v14 = sub_250F0C060();
  uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
  swift_bridgeObjectRetain();
  v15(v27, v13, v14);
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_250F0C0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

char *sub_250EAFA74(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v7 = *((void *)v6 - 1);
  if ((*(unsigned int (**)(char *, uint64_t, int *))(v7 + 48))(a2, 1, v6))
  {
    sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    uint64_t v9 = sub_250F0C640();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
    *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    uint64_t v10 = v6[7];
    uint64_t v11 = &a1[v10];
    uint64_t v12 = &a2[v10];
    uint64_t v13 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
    (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = *(int *)(a3 + 20);
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  uint64_t v17 = sub_250F0C0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

char *sub_250EAFC88(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      uint64_t v22 = sub_250F0C640();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v22 - 8) + 40))(a1, a2, v22);
      *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
      swift_bridgeObjectRelease();
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      uint64_t v23 = v6[7];
      uint64_t v24 = &a1[v23];
      id v25 = &a2[v23];
      uint64_t v26 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 40))(v24, v25, v26);
      goto LABEL_7;
    }
    sub_250E936EC((uint64_t)a1, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v11 = sub_250F0C640();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
  *(void *)&a1[v6[5]] = *(void *)&a2[v6[5]];
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  uint64_t v12 = v6[7];
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v15 = sub_250F0C060();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
  (*(void (**)(char *, void, uint64_t, int *))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  uint64_t v20 = sub_250F0C0C0();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_250EAFF84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250EAFF98);
}

uint64_t sub_250EAFF98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_250F0C0C0();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_250EB00C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250EB00D4);
}

uint64_t sub_250EB00D4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_250F0C0C0();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_250EB0208()
{
  sub_250EB1070(319, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F)
  {
    sub_250F0C0C0();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_250EB0300(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_250F0C640();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    uint64_t v9 = a3[7];
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    uint64_t v12 = sub_250F0C060();
    uint64_t v13 = *(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t sub_250EB0438(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v7 = a3[7];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_250EB0518(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[7];
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  uint64_t v11 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_250EB05E4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_250EB06B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C640();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_250F0C060();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 28);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_250EB07E4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_250F0C640();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_250F0C060();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 28);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t sub_250EB0910()
{
  uint64_t result = sub_250F0C640();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C060();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_250EB09F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v28 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EB0F20();
  uint64_t v8 = v7 - 8;
  MEMORY[0x270FA5388](v7);
  unint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EB1070(0, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v29 = (uint64_t)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)v27 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)v27 - v17;
  v27[0] = a1;
  sub_250E92124(a1, (uint64_t)v27 - v17, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  v27[1] = a2;
  sub_250E92124(a2, (uint64_t)v16, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  uint64_t v19 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_250E92124((uint64_t)v18, (uint64_t)v10, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  sub_250E92124((uint64_t)v16, v19, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  uint64_t v20 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v20((uint64_t)v10, 1, v4) != 1)
  {
    uint64_t v22 = (uint64_t)v28;
    uint64_t v23 = v29;
    sub_250E92124((uint64_t)v10, v29, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    if (v20(v19, 1, v4) != 1)
    {
      uint64_t v24 = v22;
      sub_250EB1008(v19, v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      if ((MEMORY[0x25338D230](v23, v22) & 1) != 0
        && (sub_250EAED68(*(void *)(v23 + *(int *)(v4 + 20)), *(void *)(v22 + *(int *)(v4 + 20))) & 1) != 0
        && *(void *)(v23 + *(int *)(v4 + 24)) == *(void *)(v22 + *(int *)(v4 + 24)))
      {
        char v25 = sub_250F0C020();
        sub_250E936EC(v24, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v16, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v18, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250E936EC(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v10, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        if (v25) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_250E936EC(v22, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v16, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v18, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250E936EC(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
        sub_250EB1168((uint64_t)v10, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
      }
LABEL_14:
      char v21 = 0;
      return v21 & 1;
    }
    sub_250EB1168((uint64_t)v16, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_250EB1168((uint64_t)v18, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
    sub_250E936EC(v23, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
LABEL_7:
    sub_250E936EC((uint64_t)v10, (uint64_t (*)(void))sub_250EB0F20);
    goto LABEL_14;
  }
  sub_250EB1168((uint64_t)v16, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  sub_250EB1168((uint64_t)v18, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
  if (v20(v19, 1, v4) != 1) {
    goto LABEL_7;
  }
  sub_250EB1168((uint64_t)v10, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry);
LABEL_4:
  type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  char v21 = sub_250F0C090();
  return v21 & 1;
}

void sub_250EB0F20()
{
  if (!qword_269B10C68)
  {
    sub_250EB1070(255, qword_26B20EA70, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B10C68);
    }
  }
}

unint64_t sub_250EB0FB4()
{
  unint64_t result = qword_269B10C78;
  if (!qword_269B10C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10C78);
  }
  return result;
}

uint64_t sub_250EB1008(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250EB1070(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EB10D4(uint64_t a1, uint64_t a2)
{
  sub_250EB1070(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EB1168(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_250EB1070(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_250EB11D8()
{
  if (!qword_26B20EF58)
  {
    type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(255);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v0 = sub_250F0D4D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF58);
    }
  }
}

unint64_t sub_250EB1240()
{
  unint64_t result = qword_26B20DEC0;
  if (!qword_26B20DEC0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20DEC0);
  }
  return result;
}

uint64_t type metadata accessor for TrainingLoadBaselineCalculatorFactory()
{
  return self;
}

uint64_t sub_250EB12C0()
{
  id v0 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v1 = (void *)sub_250F0CF50();
  id v2 = objc_msgSend(v0, sel_initWithSuiteName_, v1);

  if (v2)
  {
    uint64_t v3 = (void *)sub_250F0CF50();
    id v4 = objc_msgSend(v2, sel_stringForKey_, v3);

    if (v4)
    {
      uint64_t v5 = sub_250F0CF80();
      uint64_t v7 = v6;

      BOOL v8 = v5 == 1095587653 && v7 == 0xE400000000000000;
      if (v8 || (sub_250F0D680() & 1) != 0)
      {
        swift_bridgeObjectRelease();

        return type metadata accessor for EWMABaselineCalculator();
      }
      if (v5 != 0x6942746E65636552 || v7 != 0xEA00000000007361) {
        sub_250F0D680();
      }
      swift_bridgeObjectRelease();
    }
  }
  return type metadata accessor for RecentBiasBaselineCalculator();
}

void sub_250EB1464(uint64_t a1)
{
  sub_250EB26D4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_250F0F240;
  id v3 = objc_msgSend(self, sel_sharedBehavior);
  if (v3)
  {
    id v4 = v3;
    id v5 = objc_msgSend(v3, sel_features);

    if (v5)
    {
      uint64_t v6 = self;
      id v7 = objc_msgSend(v5, sel_harmonia);

      *(void *)(v2 + 32) = objc_msgSend(v6, sel_featureFlagIsEnabled_, v7);
      *(void *)(v2 + 40) = objc_msgSend(v6, sel_activeRemoteDeviceIsPresentWhenRequiredForRegionAvailabilityOrDeviceCapabilityForFeatureWithIdentifier_, a1);
      *(void *)(v2 + 48) = objc_msgSend(v6, sel_capabilityIsSupportedOnActiveRemoteDeviceForFeatureWithIdentifier_, a1);
      sub_250F0C270();
      BOOL v8 = (void *)sub_250F0CF50();
      swift_bridgeObjectRelease();
      id v9 = objc_msgSend(v6, sel_watchAppIsInstalledForBundleIdentifier_, v8);

      *(void *)(v2 + 56) = v9;
      *(void *)(v2 + 64) = objc_msgSend(v6, sel_notAgeGatedForUserDefaultsKey_, *MEMORY[0x263F098B8]);
      sub_250F0D050();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_250EB1610()
{
  if (HDIsUnitTesting()) {
    return MEMORY[0x263F8EE78];
  }
  sub_250EB26D4();
  uint64_t v1 = swift_allocObject();
  *(_OWORD *)(v1 + 16) = xmmword_250F0F250;
  uint64_t v2 = self;
  sub_250EB2598(0, &qword_26B20E468, (uint64_t (*)(uint64_t))type metadata accessor for HKFeatureIdentifier, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_250F0F260;
  id v4 = (void *)*MEMORY[0x263F097E8];
  *(void *)(v3 + 32) = *MEMORY[0x263F097E8];
  type metadata accessor for HKFeatureIdentifier(0);
  id v5 = v4;
  uint64_t v6 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v2, sel_onboardingRecordsArePresentForPrerequisiteFeaturesWithIdentifiers_, v6);

  *(void *)(v1 + 32) = v7;
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_250F0F070;
  *(void *)(v8 + 32) = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A390]), sel_initWithFeatureIdentifier_isOnWhenSettingIsAbsent_, v5, 0);
  sub_250F0D050();
  sub_250E8D194(0, qword_26B20E400);
  id v9 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v2, sel_prerequisiteFeaturesAreOnWithFeatureSettings_, v9);

  *(void *)(v1 + 40) = v10;
  *(void *)(v1 + 48) = objc_msgSend(v2, sel_wristDetectionIsEnabledForActiveWatch);
  sub_250F0D050();
  return v1;
}

id sub_250EB1820()
{
  uint64_t v0 = *MEMORY[0x263F097F0];
  sub_250EB2598(0, (unint64_t *)&unk_26B20E470, (uint64_t (*)(uint64_t))sub_250EB25FC, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F270;
  uint64_t v2 = (void *)*MEMORY[0x263F09610];
  *(void *)(inited + 32) = *MEMORY[0x263F09610];
  sub_250EB26D4();
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_250F0F070;
  id v4 = v2;
  sub_250EB1464(v0);
  sub_250EB2730(0, (unint64_t *)&unk_26B20E3E8);
  uint64_t v5 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v3 + 32) = v5;
  sub_250F0D050();
  uint64_t v6 = (void *)*MEMORY[0x263F09590];
  *(void *)(inited + 40) = v3;
  *(void *)(inited + 48) = v6;
  uint64_t v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_250F0F250;
  id v8 = v6;
  sub_250EB1464(v0);
  uint64_t v9 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 32) = v9;
  sub_250EB1610();
  uint64_t v10 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v7 + 40) = v10;
  uint64_t v11 = self;
  sub_250F0CF80();
  uint64_t v12 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v13 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v12);

  *(void *)(v7 + 48) = v13;
  sub_250F0D050();
  uint64_t v14 = (void *)*MEMORY[0x263F095A8];
  *(void *)(inited + 56) = v7;
  *(void *)(inited + 64) = v14;
  uint64_t v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_250F0F250;
  id v16 = v14;
  uint64_t v17 = v0;
  uint64_t v58 = v0;
  sub_250EB1464(v0);
  uint64_t v18 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v15 + 32) = v18;
  uint64_t v19 = *MEMORY[0x263F098B8];
  *(void *)(v15 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, *MEMORY[0x263F098B8]);
  sub_250F0CF80();
  uint64_t v20 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v21 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsNotPresent_, v20);

  *(void *)(v15 + 48) = v21;
  sub_250F0D050();
  uint64_t v22 = (void *)*MEMORY[0x263F095B0];
  *(void *)(inited + 72) = v15;
  *(void *)(inited + 80) = v22;
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_250F0F250;
  id v24 = v22;
  sub_250EB1464(v17);
  uint64_t v25 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v23 + 32) = v25;
  *(void *)(v23 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, v19);
  sub_250F0CF80();
  uint64_t v26 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v27 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsNotPresent_, v26);

  *(void *)(v23 + 48) = v27;
  sub_250F0D050();
  id v28 = (void *)*MEMORY[0x263F095C8];
  *(void *)(inited + 88) = v23;
  *(void *)(inited + 96) = v28;
  uint64_t v29 = swift_allocObject();
  *(_OWORD *)(v29 + 16) = xmmword_250F0F070;
  uint64_t v30 = *MEMORY[0x263F0AD08];
  id v31 = v28;
  *(void *)(v29 + 32) = objc_msgSend(v11, sel_notificationAuthorizedWithBundleIdentifier_, v30);
  sub_250F0D050();
  uint64_t v32 = (void *)*MEMORY[0x263F095D0];
  *(void *)(inited + 104) = v29;
  *(void *)(inited + 112) = v32;
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_250F0F250;
  id v34 = v32;
  sub_250EB1464(v58);
  uint64_t v35 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v33 + 32) = v35;
  *(void *)(v33 + 40) = objc_msgSend(v11, sel_notAgeGatedForUserDefaultsKey_, v19);
  sub_250F0CF80();
  uint64_t v36 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v37 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v36);

  *(void *)(v33 + 48) = v37;
  sub_250F0D050();
  unint64_t v38 = (void *)*MEMORY[0x263F09600];
  *(void *)(inited + 120) = v33;
  *(void *)(inited + 128) = v38;
  uint64_t v39 = swift_allocObject();
  *(_OWORD *)(v39 + 16) = xmmword_250F0F240;
  id v40 = v38;
  sub_250EB1464(v58);
  uint64_t v41 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 32) = v41;
  sub_250EB1610();
  uint64_t v42 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v39 + 40) = v42;
  *(void *)(v39 + 48) = objc_msgSend(v11, sel_notificationAuthorizedWithBundleIdentifier_, v30);
  sub_250F0CF80();
  uint64_t v43 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v44 = objc_msgSend(v11, sel_onboardingUserDefaultsKeyIsPresent_, v43);

  *(void *)(v39 + 56) = v44;
  sub_250F0CF80();
  uint64_t v45 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v46 = objc_msgSend(v11, sel_notificationsOnForUserDefaultsKey_, v45);

  *(void *)(v39 + 64) = v46;
  sub_250F0D050();
  uint64_t v47 = (void *)*MEMORY[0x263F09608];
  *(void *)(inited + 136) = v39;
  *(void *)(inited + 144) = v47;
  uint64_t v48 = swift_allocObject();
  *(_OWORD *)(v48 + 16) = xmmword_250F0F060;
  id v49 = v47;
  sub_250EB1464(v58);
  uint64_t v50 = sub_250F0D030();
  swift_bridgeObjectRelease();
  *(void *)(v48 + 32) = v50;
  sub_250F0CF80();
  unint64_t v51 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v52 = objc_msgSend(v11, sel_notificationsOnForUserDefaultsKey_, v51);

  *(void *)(v48 + 40) = v52;
  sub_250F0D050();
  *(void *)(inited + 152) = v48;
  *(void *)(inited + 160) = sub_250F0D270();
  uint64_t v53 = swift_allocObject();
  *(_OWORD *)(v53 + 16) = xmmword_250F0F070;
  *(void *)(v53 + 32) = objc_msgSend(v11, sel_heartRateIsEnabledInPrivacy);
  sub_250F0D050();
  *(void *)(inited + 168) = v53;
  sub_250EFBDF8(inited);
  id v54 = objc_allocWithZone(MEMORY[0x263F0A3A0]);
  type metadata accessor for HKFeatureAvailabilityContext(0);
  sub_250EB266C();
  sub_250EB2784();
  uint64_t v55 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  id v56 = objc_msgSend(v54, sel_initWithRequirementsByContext_, v55);

  return v56;
}

id sub_250EB1FD8(void *a1)
{
  sub_250EB2598(0, (unint64_t *)&unk_26B20E0F0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  uint64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v3);
  id v8 = (char *)&v33 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v33 - v10;
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)&v33 - v12;
  id result = objc_msgSend(self, sel_sharedBehavior);
  if (result)
  {
    uint64_t v15 = result;
    unsigned int v16 = objc_msgSend(result, sel_isAppleWatch);

    if (v16)
    {
      uint64_t v17 = sub_250F0C0C0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v11, 1, 1, v17);
    }
    else
    {
      id v18 = HKNRCAPABILITY_HARMONIA();
      if (v18)
      {
        uint64_t v19 = v18;
        sub_250F0C0A0();

        uint64_t v20 = sub_250F0C0C0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v8, 0, 1, v20);
      }
      else
      {
        uint64_t v21 = sub_250F0C0C0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v8, 1, 1, v21);
      }
      sub_250EB23E4((uint64_t)v8, (uint64_t)v11);
    }
    sub_250EB23E4((uint64_t)v11, (uint64_t)v13);
    uint64_t v22 = (void *)*MEMORY[0x263F097F0];
    id v23 = a1;
    id v24 = v22;
    id v25 = sub_250EB1820();
    id v34 = v13;
    sub_250EB2478((uint64_t)v13, (uint64_t)v5);
    id v26 = objc_msgSend(self, sel_uncheckedAvailability);
    id v27 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F431F0]), sel_init);
    sub_250E8D194(0, &qword_26B20E440);
    id v28 = (void *)sub_250F0D2C0();
    uint64_t v29 = sub_250F0C0C0();
    uint64_t v30 = *(void *)(v29 - 8);
    id v31 = 0;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v5, 1, v29) != 1)
    {
      id v31 = (void *)sub_250F0C080();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v5, v29);
    }
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F431E8]), sel_initWithProfile_featureIdentifier_availabilityRequirements_currentOnboardingVersion_pairedDeviceCapability_regionAvailabilityProvider_disableAndExpiryProvider_loggingCategory_, v23, v24, v25, 1, v31, v26, v27, v28);

    sub_250EB250C((uint64_t)v34);
    return v32;
  }
  else
  {
    __break(1u);
  }
  return result;
}

id HKNRCAPABILITY_HARMONIA()
{
  uint64_t v0 = (void *)[objc_alloc(MEMORY[0x263F08C38]) initWithUUIDString:@"210C1233-537B-4A1E-8EE0-253962851B43"];
  return v0;
}

uint64_t sub_250EB23E4(uint64_t a1, uint64_t a2)
{
  sub_250EB2598(0, (unint64_t *)&unk_26B20E0F0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EB2478(uint64_t a1, uint64_t a2)
{
  sub_250EB2598(0, (unint64_t *)&unk_26B20E0F0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EB250C(uint64_t a1)
{
  sub_250EB2598(0, (unint64_t *)&unk_26B20E0F0, MEMORY[0x263F07508], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_250EB2598(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250EB25FC()
{
  if (!qword_26B20E3D8)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    sub_250EB266C();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20E3D8);
    }
  }
}

void sub_250EB266C()
{
  if (!qword_26B20E360)
  {
    sub_250EB2730(255, (unint64_t *)&qword_26B20E3F8);
    unint64_t v0 = sub_250F0D0C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E360);
    }
  }
}

void sub_250EB26D4()
{
  if (!qword_26B20E480)
  {
    unint64_t v0 = sub_250F0D660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E480);
    }
  }
}

uint64_t sub_250EB2730(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    uint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

unint64_t sub_250EB2784()
{
  unint64_t result = qword_26B20E3B0;
  if (!qword_26B20E3B0)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E3B0);
  }
  return result;
}

uint64_t dispatch thunk of SleepingSampleChangeProvider.registerObserver(_:queue:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of SleepingSampleChangeProvider.unregisterObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of SleepingSampleChangeObserver.sleepingSampleDataTypesAddedInDateInterval(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SleepingSampleChangeObserver.sleepingSampleDataTypesRemoved()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

char *sub_250EB282C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, double a5)
{
  uint64_t v43 = a4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v11 = sub_250F0CB80();
  uint64_t v40 = *(void *)(v11 - 8);
  uint64_t v41 = v11;
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&v5[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue_removalOperation] = 0;
  uint64_t v14 = v5;
  uint64_t v15 = (void *)sub_250F0CF50();
  id v16 = (id)HKCreateSerialDispatchQueue();

  *(void *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue] = v16;
  id v42 = a1;
  id v17 = objc_msgSend(a1, sel_dataManager);
  *(void *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager] = v17;
  sub_250E8D194(0, &qword_26B20E440);
  id v18 = (void *)sub_250F0D2C0();
  sub_250EB65D4(0, &qword_26B20E1A0, (uint64_t (*)(uint64_t))sub_250EB1240, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  uint64_t v19 = swift_allocObject();
  id v20 = objc_allocWithZone(MEMORY[0x263F0A5A8]);
  uint64_t v21 = (void *)sub_250F0CF50();
  id v22 = objc_msgSend(v20, sel_initWithName_loggingCategory_, v21, v18);

  *(void *)(v19 + 16) = v22;
  *(void *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] = v19;
  id v23 = (uint64_t *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_unitTest_didBeginObservingSleepingSampleDataTypes];
  *id v23 = a2;
  v23[1] = a3;
  id v24 = self;
  sub_250EAB9EC(a2);
  unint64_t result = (char *)objc_msgSend(v24, sel_sharedBehavior);
  if (result)
  {
    id v26 = result;
    unsigned int v27 = objc_msgSend(result, sel_isAppleInternalInstall);

    if (v27) {
      uint64_t v28 = swift_retain();
    }
    else {
      uint64_t v28 = 0;
    }
    *(void *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider] = v28;

    v45.receiver = v14;
    v45.super_class = ObjectType;
    uint64_t v29 = (char *)objc_msgSendSuper2(&v45, sel_init);
    uint64_t v30 = *(void *)&v29[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue];
    uint64_t v31 = swift_allocObject();
    swift_unknownObjectWeakInit();
    id v32 = objc_allocWithZone(MEMORY[0x263F0A9B0]);
    aBlock[4] = sub_250EB6670;
    aBlock[5] = v31;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_250EE29A8;
    aBlock[3] = &block_descriptor_20;
    uint64_t v33 = _Block_copy(aBlock);
    id v34 = v29;
    swift_retain();
    id v35 = objc_msgSend(v32, sel_initWithMode_clock_queue_delay_block_, 1, 1, v30, v33, a5);
    _Block_release(v33);
    swift_release();
    swift_release();
    uint64_t v36 = *(void **)&v34[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue_removalOperation];
    *(void *)&v34[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue_removalOperation] = v35;

    id v37 = v42;
    objc_msgSend(v42, sel_registerProfileReadyObserver_queue_, v34, 0);
    if (*(void *)&v34[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider])
    {
      uint64_t v39 = v40;
      uint64_t v38 = v41;
      (*(void (**)(char *, void, uint64_t))(v40 + 104))(v13, *MEMORY[0x263F42F60], v41);
      sub_250F0CB90();
      (*(void (**)(char *, uint64_t))(v39 + 8))(v13, v38);
    }
    swift_release();
    sub_250EAB9CC(a2);

    return v34;
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_250EB2CAC(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25338ECE0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_250EB2D00();
  }
}

void sub_250EB2D00()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v16[0] = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    aBlock[0] = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    v16[1] = sub_250E8BE44(v11, v12, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] sleeping samples removed, notifying observers", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    id v13 = v9;
    uint64_t v1 = v16[0];
    MEMORY[0x25338EC30](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  uint64_t v14 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers) + 16);
  aBlock[4] = (uint64_t)sub_250EFDD68;
  aBlock[5] = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_250EAED08;
  aBlock[3] = (uint64_t)&block_descriptor_23;
  uint64_t v15 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v14, sel_notifyObservers_, v15);
  _Block_release(v15);
}

id sub_250EB2F84()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_250F0CB80();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v11 = sub_250F0CCA0();
  os_log_type_t v12 = sub_250F0D1D0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  unsigned int v27 = (objc_class *)ObjectType;
  if (v13)
  {
    uint64_t v25 = v4;
    uint64_t v14 = swift_slowAlloc();
    uint64_t v26 = v3;
    uint64_t v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v23 = v7;
    uint64_t v17 = v16;
    uint64_t v29 = v16;
    id v24 = v6;
    *(_DWORD *)uint64_t v15 = 136446210;
    uint64_t v18 = sub_250F0D7B0();
    uint64_t v28 = sub_250E8BE44(v18, v19, &v29);
    uint64_t v6 = v24;
    uint64_t v4 = v25;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v11, v12, "[%{public}s] deinit", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v17, -1, -1);
    id v20 = v15;
    uint64_t v3 = v26;
    MEMORY[0x25338EC30](v20, -1, -1);

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  sub_250EB328C();
  if (*(void *)&v1[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_settingsProvider])
  {
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F42F60], v3);
    sub_250F0CBA0();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  v30.receiver = v1;
  v30.super_class = v27;
  return objc_msgSendSuper2(&v30, sel_dealloc);
}

uint64_t sub_250EB328C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v22 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v24 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    uint64_t v23 = sub_250E8BE44(v11, v12, &v24);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] stop observing sleeping sample data types", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v22);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  unint64_t v13 = sub_250EB54C4();
  unint64_t v14 = v13;
  if (!(v13 >> 62))
  {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v15) {
      goto LABEL_6;
    }
    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_250F0D5B0();
  uint64_t v15 = result;
  if (!result) {
    return swift_bridgeObjectRelease_n();
  }
LABEL_6:
  if (v15 >= 1)
  {
    uint64_t v17 = 0;
    uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager);
    do
    {
      if ((v14 & 0xC000000000000001) != 0) {
        id v19 = (id)MEMORY[0x25338E0A0](v17, v14);
      }
      else {
        id v19 = *(id *)(v14 + 8 * v17 + 32);
      }
      id v20 = v19;
      ++v17;
      objc_msgSend(v18, sel_removeObserver_forDataType_, v1, v19);
    }
    while (v15 != v17);
    return swift_bridgeObjectRelease_n();
  }
  __break(1u);
  return result;
}

uint64_t sub_250EB3604()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v23 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v25 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    uint64_t v24 = sub_250E8BE44(v11, v12, &v25);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] start observing sleeping sample data types", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  unint64_t v13 = sub_250EB54C4();
  unint64_t v14 = v13;
  if (v13 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_250F0D5B0();
    uint64_t v15 = result;
    if (!result) {
      goto LABEL_13;
    }
  }
  else
  {
    uint64_t v15 = *(void *)((v13 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v15) {
      goto LABEL_13;
    }
  }
  if (v15 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v17 = 0;
  uint64_t v18 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_dataManager);
  do
  {
    if ((v14 & 0xC000000000000001) != 0) {
      id v19 = (id)MEMORY[0x25338E0A0](v17, v14);
    }
    else {
      id v19 = *(id *)(v14 + 8 * v17 + 32);
    }
    id v20 = v19;
    ++v17;
    objc_msgSend(v18, sel_addObserver_forDataType_, v1, v19);
  }
  while (v15 != v17);
LABEL_13:
  uint64_t result = swift_bridgeObjectRelease_n();
  uint64_t v21 = *(uint64_t (**)(uint64_t))(v1
                                          + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_unitTest_didBeginObservingSleepingSampleDataTypes);
  if (v21) {
    return v21(v1);
  }
  return result;
}

uint64_t sub_250EB3948(unint64_t a1)
{
  sub_250EB65D4(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0], MEMORY[0x263F8D8F0]);
  uint64_t v3 = MEMORY[0x270FA5388](v2 - 8);
  id v54 = (char *)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v64 = (char *)&v52 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v60 = (char *)&v52 - v7;
  uint64_t v8 = sub_250F0C060();
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v63 = (char *)&v52 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  int v62 = (char *)&v52 - v11;
  uint64_t v12 = sub_250F0BF30();
  uint64_t v55 = *(void *)(v12 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  id v61 = (char *)&v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v53 = (char *)&v52 - v16;
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v52 - v17;
  id v19 = (void *)sub_250EFBF00(MEMORY[0x263F8EE78]);
  if (!(a1 >> 62))
  {
    uint64_t v65 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (v65) {
      goto LABEL_3;
    }
LABEL_25:
    swift_bridgeObjectRelease();
    return (uint64_t)v19;
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_250F0D5B0();
  uint64_t v65 = result;
  if (!result) {
    goto LABEL_25;
  }
LABEL_3:
  if (v65 >= 1)
  {
    uint64_t v21 = 0;
    unint64_t v58 = a1 & 0xC000000000000001;
    unint64_t v59 = a1;
    id v71 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v55 + 56);
    uint64_t v66 = (void (**)(char *, uint64_t, uint64_t))(v55 + 32);
    uint64_t v67 = (void (**)(uint64_t, char *, uint64_t))(v55 + 16);
    uint64_t v68 = (void (**)(char *, uint64_t))(v55 + 8);
    uint64_t v69 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v55 + 48);
    do
    {
      if (v58) {
        id v24 = (id)MEMORY[0x25338E0A0](v21, a1);
      }
      else {
        id v24 = *(id *)(a1 + 8 * v21 + 32);
      }
      uint64_t v25 = v24;
      id v70 = v24;
      id v26 = objc_msgSend(v24, sel_startDate);
      sub_250F0C030();

      id v27 = objc_msgSend(v25, sel_endDate);
      sub_250F0C030();

      sub_250F0BEF0();
      id v28 = objc_msgSend(v25, sel_sampleType);
      uint64_t v29 = v28;
      if (v19[2] && (unint64_t v30 = sub_250EFCF1C((uint64_t)v28), (v31 & 1) != 0))
      {
        uint64_t v32 = v55;
        uint64_t v33 = (uint64_t)v60;
        (*(void (**)(char *, unint64_t, uint64_t))(v55 + 16))(v60, v19[7] + *(void *)(v55 + 72) * v30, v12);
        id v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56);
        v34((char *)v33, 0, 1, v12);
      }
      else
      {
        id v34 = *v71;
        uint64_t v33 = (uint64_t)v60;
        (*v71)(v60, 1, 1, v12);
      }

      id v35 = *v69;
      if ((*v69)(v33, 1, v12) == 1)
      {
        sub_250EA8994(v33);
      }
      else
      {
        uint64_t v36 = *v66;
        uint64_t v56 = v21;
        id v37 = v18;
        uint64_t v38 = v53;
        v36(v53, v33, v12);
        uint64_t v57 = v19;
        uint64_t v39 = v61;
        sub_250F0BF20();
        uint64_t v40 = *v68;
        uint64_t v41 = v38;
        uint64_t v18 = v37;
        uint64_t v21 = v56;
        (*v68)(v41, v12);
        v40(v18, v12);
        id v42 = v39;
        id v19 = v57;
        v36(v18, (uint64_t)v42, v12);
      }
      uint64_t v43 = (uint64_t)v64;
      id v44 = v70;
      id v45 = objc_msgSend(v70, sel_sampleType);
      (*v67)(v43, v18, v12);
      v34((char *)v43, 0, 1, v12);
      if (v35(v43, 1, v12) == 1)
      {
        sub_250EA8994(v43);
        swift_bridgeObjectRetain();
        unint64_t v46 = sub_250EFCF1C((uint64_t)v45);
        char v48 = v47;
        swift_bridgeObjectRelease();
        if (v48)
        {
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v72 = v19;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_250EDA72C();
            id v19 = v72;
          }

          uint64_t v50 = (uint64_t)v54;
          (*(void (**)(char *, unint64_t, uint64_t))(v55 + 32))(v54, v19[7] + *(void *)(v55 + 72) * v46, v12);
          sub_250EDABA4(v46, (uint64_t)v19);
          swift_bridgeObjectRelease();
          uint64_t v51 = 0;
        }
        else
        {
          uint64_t v51 = 1;
          uint64_t v50 = (uint64_t)v54;
        }
        v34((char *)v50, v51, 1, v12);

        sub_250EA8994(v50);
      }
      else
      {
        uint64_t v22 = (uint64_t)v61;
        (*v66)(v61, v43, v12);
        char v23 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v72 = v19;
        sub_250EB4A6C(v22, v45, v23);
        id v19 = v72;

        swift_bridgeObjectRelease();
      }
      a1 = v59;
      ++v21;
      (*v68)(v18, v12);
    }
    while (v65 != v21);
    goto LABEL_25;
  }
  __break(1u);
  return result;
}

id sub_250EB4048(uint64_t a1)
{
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1A0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v16 = a1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v18 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    uint64_t v17 = sub_250E8BE44(v11, v12, &v18);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] sleeping samples removed, enqueuing observer notification", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    uint64_t v13 = v9;
    a1 = v16;
    MEMORY[0x25338EC30](v13, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  id result = *(id *)(a1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_debounceQueue_removalOperation);
  if (result) {
    return objc_msgSend(result, sel_execute);
  }
  return result;
}

uint64_t sub_250EB4270(void *a1, uint64_t a2, uint64_t a3, void *a4, unint64_t *a5, uint64_t a6, void (*a7)(uint64_t))
{
  sub_250E8D194(0, a5);
  uint64_t v10 = sub_250F0D040();
  id v11 = a4;
  id v12 = a1;
  a7(v10);

  return swift_bridgeObjectRelease();
}

void sub_250EB4304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v37 = a4;
  uint64_t v38 = a5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v8 = sub_250F0CCB0();
  uint64_t v36 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v10 = (char *)&v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_250F0CB80();
  uint64_t v12 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *MEMORY[0x263F42F60], v11);
  uint64_t v15 = sub_250F0CB70();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if (!a2)
  {
    swift_bridgeObjectRelease();
    id v20 = 0;
LABEL_9:
    sub_250EB5460(a3, (uint64_t)aBlock);
    uint64_t v21 = v43;
    if (v43)
    {
      uint64_t v22 = __swift_project_boxed_opaque_existential_1(aBlock, (uint64_t)v43);
      uint64_t v23 = *(v21 - 1);
      MEMORY[0x270FA5388](v22);
      uint64_t v25 = (char *)&v36 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v23 + 16))(v25);
      uint64_t v26 = sub_250F0D670();
      (*(void (**)(char *, void *))(v23 + 8))(v25, v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
      if (v37)
      {
LABEL_11:
        type metadata accessor for NSKeyValueChangeKey(0);
        sub_250EB6364((unint64_t *)&unk_269B10D80, type metadata accessor for NSKeyValueChangeKey);
        id v27 = (void *)sub_250F0CE80();
LABEL_18:
        v46.receiver = v40;
        v46.super_class = ObjectType;
        objc_msgSendSuper2(&v46, sel_observeValueForKeyPath_ofObject_change_context_, v20, v26, v27, v38, v36);

        swift_unknownObjectRelease();
        return;
      }
    }
    else
    {
      uint64_t v26 = 0;
      if (v37) {
        goto LABEL_11;
      }
    }
    id v27 = 0;
    goto LABEL_18;
  }
  if (v15 == a1 && v17 == a2)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v19 = sub_250F0D680();
    swift_bridgeObjectRelease();
    if ((v19 & 1) == 0)
    {
      id v20 = (void *)sub_250F0CF50();
      goto LABEL_9;
    }
  }
  sub_250F0CC90();
  id v28 = sub_250F0CCA0();
  os_log_type_t v29 = sub_250F0D1D0();
  if (os_log_type_enabled(v28, v29))
  {
    unint64_t v30 = (uint8_t *)swift_slowAlloc();
    uint64_t v31 = swift_slowAlloc();
    aBlock[0] = v31;
    *(_DWORD *)unint64_t v30 = 136446210;
    uint64_t v32 = sub_250F0D7B0();
    uint64_t v41 = sub_250E8BE44(v32, v33, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v28, v29, "[%{public}s] Demo mode changed, notifying observers", v30, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v31, -1, -1);
    MEMORY[0x25338EC30](v30, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v36 + 8))(v10, v8);
  id v34 = *(void **)(*(void *)&v40[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] + 16);
  id v44 = sub_250EFDD68;
  uint64_t v45 = 0;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_250EAED08;
  uint64_t v43 = &block_descriptor_2;
  id v35 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v34, sel_notifyObservers_, v35);
  _Block_release(v35);
}

uint64_t type metadata accessor for SleepingSampleChangeManager()
{
  return self;
}

id sub_250EB49F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  swift_getObjectType();
  return sub_250EB5438(a1, a3, v3);
}

id sub_250EB4A4C(uint64_t a1)
{
  return objc_msgSend(*(id *)(*(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers) + 16), sel_unregisterObserver_, a1);
}

id sub_250EB4A6C(uint64_t a1, void *a2, char a3)
{
  uint64_t v4 = (void **)v3;
  os_log_type_t v7 = (void *)*v3;
  unint64_t v9 = sub_250EFCF1C((uint64_t)a2);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v13 = v8;
  uint64_t v14 = v7[3];
  if (v14 < v12 || (a3 & 1) == 0)
  {
    if (v14 >= v12 && (a3 & 1) == 0)
    {
      sub_250EDA72C();
      goto LABEL_7;
    }
    sub_250EDA194(v12, a3 & 1);
    unint64_t v23 = sub_250EFCF1C((uint64_t)a2);
    if ((v13 & 1) == (v24 & 1))
    {
      unint64_t v9 = v23;
      uint64_t v15 = *v4;
      if (v13) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
    id result = (id)sub_250F0D6C0();
    __break(1u);
    return result;
  }
LABEL_7:
  uint64_t v15 = *v4;
  if (v13)
  {
LABEL_8:
    uint64_t v16 = v15[7];
    uint64_t v17 = sub_250F0BF30();
    uint64_t v18 = *(void *)(v17 - 8);
    char v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v18 + 40);
    uint64_t v20 = v17;
    uint64_t v21 = v16 + *(void *)(v18 + 72) * v9;
    return (id)v19(v21, a1, v20);
  }
LABEL_13:
  sub_250EB4BEC(v9, (uint64_t)a2, a1, v15);
  return a2;
}

uint64_t sub_250EB4BEC(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t v7 = a4[7];
  uint64_t v8 = sub_250F0BF30();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7 + *(void *)(*(void *)(v8 - 8) + 72) * a1, a3, v8);
  uint64_t v10 = a4[2];
  BOOL v11 = __OFADD__(v10, 1);
  uint64_t v12 = v10 + 1;
  if (v11) {
    __break(1u);
  }
  else {
    a4[2] = v12;
  }
  return result;
}

uint64_t sub_250EB4C98(uint64_t isStackAllocationSafe, uint64_t a2)
{
  unint64_t v3 = isStackAllocationSafe;
  v10[1] = *MEMORY[0x263EF8340];
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    MEMORY[0x270FA5388](isStackAllocationSafe);
    bzero((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_250EB4E20((void *)((char *)v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_250EB4E20((unint64_t *)v8, v5, v3, a2);
    swift_release();
    MEMORY[0x25338EC30](v8, -1, -1);
  }
  return v7;
}

uint64_t sub_250EB4E20(unint64_t *a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a3;
  if (a3 >> 62) {
    goto LABEL_38;
  }
  uint64_t v5 = *(void *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  uint64_t v45 = v4;
  if (v5)
  {
    while (1)
    {
      uint64_t v46 = a4 + 56;
      if ((v4 & 0xC000000000000001) != 0) {
        break;
      }
      uint64_t v23 = 0;
      uint64_t v41 = v4 + 32;
      uint64_t v42 = *(void *)((v4 & 0xFFFFFFFFFFFFFF8) + 0x10);
      uint64_t v43 = 0;
      while (v23 != v42)
      {
        id v25 = *(id *)(v41 + 8 * v23);
        uint64_t v4 = (uint64_t)v25;
        uint64_t v26 = sub_250F0D290();
        uint64_t v27 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v28 = v26 & ~v27;
        unint64_t v29 = v28 >> 6;
        uint64_t v30 = 1 << v28;
        if (((1 << v28) & *(void *)(v46 + 8 * (v28 >> 6))) != 0)
        {
          uint64_t v4 = sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
          id v31 = *(id *)(*(void *)(a4 + 48) + 8 * v28);
          char v32 = sub_250F0D2A0();

          if (v32)
          {
          }
          else
          {
            uint64_t v33 = ~v27;
            for (unint64_t i = v28 + 1; ; unint64_t i = v35 + 1)
            {
              unint64_t v35 = i & v33;
              if (((*(void *)(v46 + (((i & v33) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v33)) & 1) == 0) {
                goto LABEL_20;
              }
              id v36 = *(id *)(*(void *)(a4 + 48) + 8 * v35);
              char v37 = sub_250F0D2A0();

              if (v37) {
                break;
              }
            }

            unint64_t v29 = v35 >> 6;
            uint64_t v30 = 1 << v35;
          }
          unint64_t v38 = a1[v29];
          a1[v29] = v30 | v38;
          uint64_t v24 = v5;
          if ((v30 & v38) == 0)
          {
            BOOL v9 = __OFADD__(v43++, 1);
            if (v9)
            {
              __break(1u);
LABEL_35:
              __break(1u);
              break;
            }
          }
        }
        else
        {
LABEL_20:

          uint64_t v24 = v5;
        }
        if (++v23 == v24) {
          goto LABEL_40;
        }
      }
      __break(1u);
LABEL_37:
      __break(1u);
LABEL_38:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_250F0D5B0();
      uint64_t v45 = v4;
      if (!v5) {
        goto LABEL_39;
      }
    }
    uint64_t v43 = 0;
    uint64_t v6 = 0;
    while (1)
    {
      uint64_t v8 = MEMORY[0x25338E0A0](v6, v45);
      BOOL v9 = __OFADD__(v6++, 1);
      if (v9) {
        goto LABEL_35;
      }
      uint64_t v4 = v8;
      uint64_t v10 = sub_250F0D290();
      uint64_t v11 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v12 = v10 & ~v11;
      unint64_t v13 = v12 >> 6;
      uint64_t v14 = 1 << v12;
      if (((1 << v12) & *(void *)(v46 + 8 * (v12 >> 6))) == 0) {
        goto LABEL_5;
      }
      uint64_t v4 = sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
      id v15 = *(id *)(*(void *)(a4 + 48) + 8 * v12);
      char v16 = sub_250F0D2A0();

      if ((v16 & 1) == 0) {
        break;
      }
      swift_unknownObjectRelease();
LABEL_16:
      unint64_t v22 = a1[v13];
      a1[v13] = v14 | v22;
      uint64_t v7 = v5;
      if ((v14 & v22) == 0)
      {
        if (__OFADD__(v43, 1)) {
          goto LABEL_37;
        }
        ++v43;
      }
LABEL_6:
      if (v6 == v7) {
        goto LABEL_40;
      }
    }
    uint64_t v17 = ~v11;
    for (unint64_t j = v12 + 1; ; unint64_t j = v19 + 1)
    {
      unint64_t v19 = j & v17;
      if (((*(void *)(v46 + (((j & v17) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (j & v17)) & 1) == 0) {
        break;
      }
      id v20 = *(id *)(*(void *)(a4 + 48) + 8 * v19);
      char v21 = sub_250F0D2A0();

      if (v21)
      {
        swift_unknownObjectRelease();
        unint64_t v13 = v19 >> 6;
        uint64_t v14 = 1 << v19;
        goto LABEL_16;
      }
    }
LABEL_5:
    swift_unknownObjectRelease();
    uint64_t v7 = v5;
    goto LABEL_6;
  }
LABEL_39:
  uint64_t v43 = 0;
LABEL_40:
  swift_bridgeObjectRelease();
  swift_retain();
  return sub_250EB51DC(a1, a2, v43, a4);
}

uint64_t sub_250EB51DC(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = MEMORY[0x263F8EE88];
LABEL_36:
    swift_release();
    return v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_250EB6434();
  uint64_t result = sub_250F0D460();
  uint64_t v9 = result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = v28[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = v28[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    id v18 = *(id *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_250F0D290();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = v28[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = v28[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

id sub_250EB5438(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return objc_msgSend(*(id *)(*(void *)(a3 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers) + 16), sel_registerObserver_queue_, a1, a2);
}

uint64_t sub_250EB5460(uint64_t a1, uint64_t a2)
{
  sub_250E89450();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EB54C4()
{
  uint64_t v0 = sub_250F0C3D0();
  uint64_t v1 = *(void *)(v0 - 8);
  MEMORY[0x270FA5388](v0);
  unint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_250F0C3C0();
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v15 = MEMORY[0x263F8EE78];
    sub_250F0D510();
    uint64_t v7 = v1 + 16;
    uint64_t v6 = *(void (**)(char *, unint64_t, uint64_t))(v1 + 16);
    v13[1] = v4;
    unint64_t v14 = v6;
    unint64_t v8 = v4 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));
    uint64_t v9 = *(void *)(v1 + 72);
    unint64_t v10 = (void (**)(char *, uint64_t))(v7 - 8);
    do
    {
      v14(v3, v8, v0);
      sub_250F0C3B0();
      (*v10)(v3, v0);
      sub_250F0D4F0();
      sub_250F0D520();
      sub_250F0D530();
      sub_250F0D500();
      v8 += v9;
      --v5;
    }
    while (v5);
    uint64_t v11 = v15;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return MEMORY[0x263F8EE78];
  }
  return v11;
}

uint64_t sub_250EB5668()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v14[1] = v1;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v15 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    v14[2] = sub_250E8BE44(v11, v12, &v15);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] profile ready", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);
  }

  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return sub_250EB3604();
}

uint64_t sub_250EB585C(unint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  os_log_type_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_250EB3948(v8);
  swift_bridgeObjectRelease();
  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_250F0CCA0();
  int v11 = sub_250F0D1A0();
  if (os_log_type_enabled(v10, (os_log_type_t)v11))
  {
    int v28 = v11;
    uint64_t v30 = v2;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v27 = swift_slowAlloc();
    aBlock[0] = v27;
    *(_DWORD *)uint64_t v12 = 136446722;
    uint64_t v13 = sub_250F0D7B0();
    uint64_t v31 = sub_250E8BE44(v13, v14, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2050;
    uint64_t v29 = v4;
    if (a1 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_250F0D5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v15 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    uint64_t v31 = v15;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 22) = 2080;
    sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
    sub_250F0BF30();
    sub_250EB64A8();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_250F0CEA0();
    unint64_t v18 = v17;
    swift_bridgeObjectRelease();
    uint64_t v31 = sub_250E8BE44(v16, v18, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v10, (os_log_type_t)v28, "[%{public}s] sleeping samples added %{public}ld - %s, notifying observers", (uint8_t *)v12, 0x20u);
    uint64_t v19 = v27;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v19, -1, -1);
    MEMORY[0x25338EC30](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v29);
    uint64_t v2 = v30;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  uint64_t v20 = *(void *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v9;
  unint64_t v22 = *(void **)(v20 + 16);
  uint64_t v23 = swift_allocObject();
  *(void *)(v23 + 16) = sub_250EB6548;
  *(void *)(v23 + 24) = v21;
  aBlock[4] = (uint64_t)sub_250EAF43C;
  aBlock[5] = v23;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_250EAED08;
  uint64_t aBlock[3] = (uint64_t)&block_descriptor_14;
  unint64_t v24 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  objc_msgSend(v22, sel_notifyObservers_, v24);
  _Block_release(v24);
  return swift_release();
}

uint64_t sub_250EB5CC0(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
  sub_250EB64A8();
  uint64_t result = sub_250F0D100();
  uint64_t v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_250F0D5B0();
    uint64_t result = swift_bridgeObjectRelease();
    if (!v4) {
      return v10;
    }
  }
  else
  {
    uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (!v4) {
      return v10;
    }
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (uint64_t i = 0; i != v4; ++i)
      {
        uint64_t v6 = (void *)MEMORY[0x25338E0A0](i, a1);
        sub_250EC6AF0(&v9, v6);
      }
    }
    else
    {
      os_log_type_t v7 = (void **)(a1 + 32);
      do
      {
        unint64_t v8 = *v7++;
        sub_250EC6AF0(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EB5E14()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v32 = *(void *)(v2 - 8);
  uint64_t v33 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0CCC0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = sub_250F0CCE0();
  uint64_t v9 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  int v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v12 = swift_bridgeObjectRetain();
  uint64_t v13 = sub_250EB5CC0(v12);
  swift_bridgeObjectRelease();
  uint64_t v14 = sub_250EB54C4();
  if ((v13 & 0xC000000000000001) != 0)
  {
    if (v13 < 0) {
      uint64_t v15 = v13;
    }
    else {
      uint64_t v15 = v13 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_250F0D3D0();
    uint64_t v17 = sub_250EC6E24(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v13 = v17;
  }
  uint64_t v18 = sub_250EB4C98(v14, v13);
  swift_bridgeObjectRelease();
  if ((v18 & 0xC000000000000001) != 0) {
    uint64_t v19 = sub_250F0D3D0();
  }
  else {
    uint64_t v19 = *(void *)(v18 + 16);
  }
  swift_release();
  if (v19 < 1)
  {
    sub_250F0CC90();
    BOOL v25 = sub_250F0CCA0();
    os_log_type_t v26 = sub_250F0D1A0();
    if (os_log_type_enabled(v25, v26))
    {
      uint64_t v27 = (uint8_t *)swift_slowAlloc();
      uint64_t v28 = swift_slowAlloc();
      aBlock[0] = v28;
      *(_DWORD *)uint64_t v27 = 136446210;
      uint64_t v29 = sub_250F0D7B0();
      uint64_t v37 = sub_250E8BE44(v29, v30, aBlock);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v25, v26, "[%{public}s] Ignoring sample removal observation for unregistered samples", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v28, -1, -1);
      MEMORY[0x25338EC30](v27, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v4, v33);
  }
  else
  {
    uint64_t v20 = swift_allocObject();
    uint64_t v21 = ObjectType;
    *(void *)(v20 + 16) = v1;
    *(void *)(v20 + 24) = v21;
    aBlock[4] = (uint64_t)sub_250EB635C;
    aBlock[5] = v20;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_250EE29A8;
    uint64_t aBlock[3] = (uint64_t)&block_descriptor_5;
    unint64_t v22 = _Block_copy(aBlock);
    id v23 = v1;
    sub_250F0CCD0();
    uint64_t v37 = MEMORY[0x263F8EE78];
    sub_250EB6364(&qword_269B10D90, MEMORY[0x263F8F030]);
    sub_250EB65D4(0, &qword_269B10D98, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    sub_250EB63AC();
    sub_250F0D390();
    MEMORY[0x25338DE40](0, v11, v8, v22);
    _Block_release(v22);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v34);
    return swift_release();
  }
}

uint64_t sub_250EB6324()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_250EB635C()
{
  return sub_250EB4048(*(void *)(v0 + 16));
}

uint64_t sub_250EB6364(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_250EB63AC()
{
  unint64_t result = qword_269B10DA0;
  if (!qword_269B10DA0)
  {
    sub_250EB65D4(255, &qword_269B10D98, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10DA0);
  }
  return result;
}

void sub_250EB6434()
{
  if (!qword_269B10DA8)
  {
    sub_250E8D194(255, (unint64_t *)&qword_26B20E378);
    sub_250EB64A8();
    unint64_t v0 = sub_250F0D470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B10DA8);
    }
  }
}

unint64_t sub_250EB64A8()
{
  unint64_t result = qword_26B20E380;
  if (!qword_26B20E380)
  {
    sub_250E8D194(255, (unint64_t *)&qword_26B20E378);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E380);
  }
  return result;
}

uint64_t sub_250EB6510()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250EB6548(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t ObjectType = swift_getObjectType();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 8))(v2, ObjectType, v3);
}

uint64_t sub_250EB659C()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_250EB65D4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EB6638()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_250EB6670()
{
  sub_250EB2CAC(v0);
}

uint64_t sub_250EB6698(uint64_t a1, uint64_t a2)
{
  return sub_250EB7948(*(void **)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

id sub_250EB66B0(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v79 = *MEMORY[0x263EF8340];
  uint64_t v6 = sub_250F0C1B0();
  uint64_t v69 = *(void *)(v6 - 8);
  uint64_t v7 = *(void *)(v69 + 64);
  MEMORY[0x270FA5388](v6);
  uint64_t v66 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EB72C8(0, &qword_26B20E4F8, MEMORY[0x263F079C8]);
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v58 - v9;
  sub_250EB72C8(0, &qword_26B20E4F0, MEMORY[0x263F07920]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v13 = (char *)&v58 - v12;
  uint64_t v14 = sub_250F0BF80();
  MEMORY[0x270FA5388](v14 - 8);
  uint64_t v65 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_250F0C060();
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_250F0BF30();
  uint64_t v74 = *(void *)(v19 - 8);
  uint64_t v75 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v22 = (char *)&v58 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  unint64_t v24 = (char *)&v58 - v23;
  uint64_t v67 = sub_250F0CE30();
  uint64_t v68 = a2;
  uint64_t v73 = v24;
  uint64_t v70 = a3;
  sub_250F0CD90();
  id v76 = a1;
  id v25 = objc_msgSend(a1, sel_sourceManager);
  id v77 = 0;
  id v26 = objc_msgSend(v25, sel_localDeviceSourceWithError_, &v77);

  id v27 = v77;
  id v71 = v26;
  if (v26)
  {
    uint64_t v28 = v26;
  }
  else
  {
    uint64_t v29 = v27;
    unint64_t v30 = (void *)sub_250F0BFA0();

    swift_willThrow();
    uint64_t v28 = 0;
  }
  id v31 = objc_msgSend(v76, sel_daemon);
  id v32 = v31;
  if (v31)
  {
    id v33 = objc_msgSend(v31, sel_behavior);

    unsigned int v34 = objc_msgSend(v33, sel_supportsCachedSleepDaySummaryQueries);
    id v32 = 0;
    if (v34)
    {
      if (v28)
      {
        ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
        id v63 = v71;
        id v59 = ObjCClassFromMetadata;
        id v64 = objc_msgSend(ObjCClassFromMetadata, sel_sleepAnalysisQueryDescriptorForDateInterval_options_, 0, 34);
        uint64_t v62 = sub_250E8D194(0, &qword_269B10DB0);
        (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v22, v73, v75);
        id v61 = v18;
        sub_250F0BF00();
        uint64_t v36 = v69;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v69 + 56))(v13, 1, 1, v6);
        uint64_t v37 = sub_250F0C1C0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v37 - 8) + 56))(v10, 1, 1, v37);
        uint64_t v60 = v28;
        uint64_t v38 = (uint64_t)v65;
        sub_250F0BF70();
        uint64_t v39 = v66;
        (*(void (**)(char *, uint64_t, uint64_t))(v36 + 16))(v66, v70, v6);
        unint64_t v40 = (*(unsigned __int8 *)(v36 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        uint64_t v41 = swift_allocObject();
        (*(void (**)(unint64_t, char *, uint64_t))(v36 + 32))(v41 + v40, v39, v6);
        id v42 = objc_allocWithZone(MEMORY[0x263F43310]);
        id v43 = v63;
        id v44 = v76;
        id v45 = sub_250EB731C(v44, 0xD000000000000018, 0x8000000250F11460, v60, v64, v62, (uint64_t)v22, (uint64_t)v61, v38, (uint64_t)sub_250EB7724, v41);
        if (v45)
        {
          id v32 = v45;
          id v46 = objc_msgSend(v59, sel_sleepTypesQueryDescriptorsForDateInterval_options_, 0, 34);
          if (!v46)
          {
            sub_250E8D194(0, &qword_269B10DB8);
            sub_250F0D040();
            id v46 = (id)sub_250F0D030();
            swift_bridgeObjectRelease();
          }
          objc_msgSend(v32, sel_setInvalidationQueryDescriptors_, v46);
        }
        else
        {
          id v32 = 0;
        }
      }
    }
  }
  id v47 = objc_allocWithZone((Class)swift_getObjCClassFromMetadata());
  id v48 = v32;
  uint64_t v72 = v6;
  uint64_t v50 = v69;
  uint64_t v49 = v70;
  uint64_t v51 = (void *)sub_250F0C160();
  id v77 = 0;
  unint64_t v78 = 0xE000000000000000;
  sub_250F0D480();
  swift_bridgeObjectRelease();
  id v77 = (id)0xD000000000000019;
  unint64_t v78 = 0x8000000250F11440;
  uint64_t v52 = sub_250F0CE70();
  sub_250EB763C();
  uint64_t v53 = v68;
  sub_250F0D650();
  sub_250F0CFB0();
  swift_bridgeObjectRelease();
  id v54 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v55 = v76;
  id v56 = objc_msgSend(v47, sel_initWithProfile_cachingSession_gregorianCalendar_morningIndexRange_ascending_options_debugIdentifier_, v76, v48, v51, v67, 1, 1, 34, v54);

  (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v72);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v53, v52);
  (*(void (**)(char *, uint64_t))(v74 + 8))(v73, v75);

  return v56;
}

id sub_250EB6EF4(double a1)
{
  id v1 = objc_msgSend(objc_allocWithZone(MEMORY[0x263EFF910]), sel_initWithTimeIntervalSinceReferenceDate_, a1);
  uint64_t v2 = (void *)sub_250F0C160();
  id v3 = objc_msgSend(v1, sel_hk_morningIndexWithCalendar_, v2);

  return v3;
}

void *sub_250EB6F74()
{
  v16[1] = *MEMORY[0x263EF8340];
  v16[0] = 0;
  uint64_t v1 = swift_allocObject();
  *(void *)(v1 + 16) = v16;
  uint64_t v2 = (void *)swift_allocObject();
  v2[2] = sub_250EB77B4;
  v2[3] = v1;
  aBlock[4] = sub_250EB7800;
  aBlock[5] = v2;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_250EB7248;
  uint64_t aBlock[3] = &block_descriptor_9;
  id v3 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned int v4 = objc_msgSend(v0, sel_enumerateWithError_handler_, aBlock, v3);
  _Block_release(v3);
  id v5 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (!v4)
  {
    uint64_t v8 = (void *)sub_250F0BFA0();

    swift_willThrow();
    aBlock[0] = v8;
    id v9 = v8;
    sub_250E95B04();
    sub_250E8D194(0, (unint64_t *)&unk_269B10AC0);
    if (swift_dynamicCast())
    {

      unsigned int v10 = objc_msgSend(v14, sel_hk_isDatabaseAccessibilityError);
      sub_250EB7828();
      swift_allocError();
      *(void *)uint64_t v11 = v14;
      if (v10) {
        *(unsigned char *)(v11 + 8) = 1;
      }
      else {
        *(unsigned char *)(v11 + 8) = 0;
      }
      swift_willThrow();
    }

    goto LABEL_12;
  }
  uint64_t v7 = (void *)v16[0];
  if (!v16[0])
  {
    sub_250EB7828();
    swift_allocError();
    *(void *)uint64_t v12 = 0;
    *(unsigned char *)(v12 + 8) = 2;
    swift_willThrow();
LABEL_12:
    uint64_t v7 = (void *)v16[0];
    swift_release();

    return v7;
  }
  swift_release();
  return v7;
}

void sub_250EB7248(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void (**)(void))(a1 + 32);
  id v3 = a2;
  v2();
}

void *sub_250EB72A4()
{
  return sub_250EB6F74();
}

void sub_250EB72C8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_250EB731C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v13 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v14 = (void *)sub_250F0BEC0();
  uint64_t v15 = (void *)sub_250F0BFC0();
  uint64_t v16 = (void *)sub_250F0BF40();
  aBlock[4] = a10;
  aBlock[5] = a11;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_250EB7530;
  uint64_t aBlock[3] = &block_descriptor_3;
  uint64_t v17 = _Block_copy(aBlock);
  id v18 = objc_msgSend(v24, sel_initWithProfile_cachingIdentifier_sourceEntity_queryDescriptor_cachedClass_queryInterval_anchorDate_intervalComponents_timeIntervalToBucketIndex_, a1, v13, a4, a5, ObjCClassFromMetadata, v14, v15, v16, v17);
  _Block_release(v17);

  uint64_t v19 = sub_250F0BF80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v19 - 8) + 8))(a9, v19);
  uint64_t v20 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(a8, v20);
  uint64_t v21 = sub_250F0BF30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a7, v21);
  swift_release();
  return v18;
}

uint64_t sub_250EB7530(uint64_t a1, double a2)
{
  uint64_t v4 = sub_250F0C060();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(uint64_t (**)(char *, double))(a1 + 32);
  sub_250F0C030();
  swift_retain();
  uint64_t v9 = v8(v7, a2);
  swift_release();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

unint64_t sub_250EB763C()
{
  unint64_t result = qword_26B20EE10;
  if (!qword_26B20EE10)
  {
    sub_250F0CE70();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EE10);
  }
  return result;
}

uint64_t sub_250EB7694()
{
  uint64_t v1 = sub_250F0C1B0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 16) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  return MEMORY[0x270FA0238](v0, v5, v6);
}

id sub_250EB7724(double a1)
{
  sub_250F0C1B0();
  return sub_250EB6EF4(a1);
}

uint64_t sub_250EB77A4()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_250EB77B4(void *a1, unsigned char *a2)
{
  uint64_t v4 = *(void ***)(v2 + 16);
  uint64_t v5 = *v4;
  char *v4 = a1;
  id v6 = a1;

  *a2 = 1;
}

uint64_t sub_250EB77F0()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EB7800()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

unint64_t sub_250EB7828()
{
  unint64_t result = qword_269B10DC0;
  if (!qword_269B10DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B10DC0);
  }
  return result;
}

uint64_t _s5ErrorOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 2) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s5ErrorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_250EB7908(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 1u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 2);
  }
}

uint64_t sub_250EB7920(uint64_t result, unsigned int a2)
{
  if (a2 >= 2)
  {
    *(void *)unint64_t result = a2 - 2;
    LOBYTE(a2) = 2;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *_s5ErrorOMa()
{
  return &_s5ErrorON;
}

uint64_t sub_250EB7948(void *a1, char a2, void *a3, char a4)
{
  if (a2)
  {
    if (a2 == 1)
    {
      if (a4 != 1) {
        return 0;
      }
LABEL_6:
      sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
      id v6 = a1;
      id v7 = a3;
      char v8 = sub_250F0D2A0();

      return v8 & 1;
    }
    if (a4 == 2 && !a3) {
      return 1;
    }
  }
  else if (!a4)
  {
    goto LABEL_6;
  }
  return 0;
}

uint64_t sub_250EB7A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = swift_allocObject();
  *(void *)(v6 + 16) = a1;
  uint64_t v7 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  uint64_t v8 = sub_250F0C340();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(v7, a2, v8);
  *a3 = v6;
  return result;
}

BOOL sub_250EB7A9C(uint64_t a1, uint64_t a2)
{
  return sub_250EBB360(*(id *)a1, *(unsigned char *)(a1 + 8), *(void **)a2, *(unsigned char *)(a2 + 8));
}

uint64_t sub_250EB7AB4()
{
  return type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator(0);
}

uint64_t sub_250EB7ABC()
{
  uint64_t result = sub_250F0C340();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_250EB7B5C()
{
  uint64_t v1 = v0;
  sub_250EA630C();
  MEMORY[0x270FA5388](v2 - 8);
  int v4 = &v28[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_250EA63F4();
  uint64_t v6 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = &v28[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_250E9374C();
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = &v28[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_250F0C340();
  uint64_t v13 = *(void *)(v12 - 8);
  MEMORY[0x270FA5388](v12);
  uint64_t v15 = &v28[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v16 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon43SleepingSampleAggregateDaySummaryEnumerator_gregorianDayRange;
  swift_beginAccess();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(v13 + 16))(v15, v16, v12);
  uint64_t v17 = *(void **)(v1 + 16);
  type metadata accessor for SleepingWristTemperatureAggregateEnumerator();
  swift_allocObject();
  sub_250EA3748((uint64_t)v15, v17);
  uint64_t v18 = swift_allocBox();
  uint64_t v20 = v19;
  swift_beginAccess();
  sub_250F0C300();
  swift_endAccess();
  sub_250E8DB70((uint64_t)v11, (uint64_t)v8, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v21 = sub_250F0CE70();
  uint64_t v22 = *(void *)(v21 - 8);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v22 + 16))(v4, v11, v21);
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v22 + 56))(v4, 0, 1, v21);
  sub_250E8BCFC((uint64_t)v11, (uint64_t (*)(void))sub_250E9374C);
  sub_250E8E698((uint64_t)v4, (uint64_t)&v8[*(int *)(v6 + 36)], (uint64_t (*)(void))sub_250EA630C);
  sub_250E8E698((uint64_t)v8, v20, (uint64_t (*)(void))sub_250EA63F4);
  uint64_t v23 = sub_250EA41E0();
  swift_release();
  uint64_t v24 = swift_allocObject();
  *(unsigned char *)(v24 + 16) = 0;
  id v25 = (void *)swift_allocObject();
  v25[2] = v24;
  void v25[3] = v18;
  void v25[4] = v23;
  v25[5] = v1;
  sub_250EBAC74();
  uint64_t v26 = swift_allocObject();
  *(void *)(v26 + 16) = sub_250EBAC68;
  *(void *)(v26 + 24) = v25;
  swift_retain();
  return v26;
}

uint64_t sub_250EB7F14@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(char *, uint64_t, uint64_t)@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v124 = a4;
  uint64_t v136 = a3;
  char v147 = a2;
  uint64_t v148 = a5;
  uint64_t v128 = sub_250F0C1B0();
  uint64_t v127 = *(void *)(v128 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v128);
  char v125 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v126 = (char *)&v117 - v8;
  uint64_t v133 = sub_250F0C470();
  uint64_t v144 = *(void *)(v133 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v133);
  uint64_t v129 = (char *)&v117 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v146 = (char *)&v117 - v11;
  sub_250EBAE04();
  MEMORY[0x270FA5388](v12 - 8);
  uint64_t v143 = (char *)&v117 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EBAE94(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  uint64_t v135 = v14;
  uint64_t v134 = *(void *)(v14 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  uint64_t v130 = (uint64_t)&v117 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v131 = (uint64_t)&v117 - v17;
  sub_250EA67F8();
  uint64_t v19 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v21 = (char *)&v117 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA630C();
  uint64_t v23 = MEMORY[0x270FA5388](v22 - 8);
  uint64_t v139 = (uint64_t *)((char *)&v117 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  uint64_t v140 = (char *)&v117 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v137 = (char *)&v117 - v28;
  MEMORY[0x270FA5388](v27);
  unint64_t v30 = (char *)&v117 - v29;
  sub_250E9241C(0);
  MEMORY[0x270FA5388](v31 - 8);
  uint64_t v142 = (char *)&v117 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_250F0CE70();
  unsigned int v34 = *(void **)(v33 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v123 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  v138 = (char *)&v117 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v117 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  char v141 = (char *)&v117 - v43;
  MEMORY[0x270FA5388](v42);
  uint64_t v145 = (char *)&v117 - v44;
  sub_250EA63F4();
  uint64_t v46 = v45;
  uint64_t v47 = swift_projectBox();
  uint64_t v122 = a1 + 16;
  swift_beginAccess();
  if (*(unsigned char *)(a1 + 16)) {
    goto LABEL_15;
  }
  swift_beginAccess();
  uint64_t v48 = *(int *)(v46 + 36);
  uint64_t v119 = v47;
  uint64_t v49 = v47 + v48;
  uint64_t v50 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v34[7];
  uint64_t v121 = v34 + 7;
  uint64_t v120 = v50;
  v50(v30, 1, 1, v33);
  uint64_t v51 = (uint64_t)&v21[*(int *)(v19 + 48)];
  sub_250E8DB70(v49, (uint64_t)v21, (uint64_t (*)(void))sub_250EA630C);
  sub_250E8DB70((uint64_t)v30, v51, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v52 = (uint64_t (*)(char *, uint64_t, uint64_t))v34[6];
  int v53 = v52(v21, 1, v33);
  char v147 = v52;
  uint64_t v132 = v34;
  if (v53 == 1)
  {
    int v54 = v52((char *)v51, 1, v33);
    uint64_t v55 = (uint64_t)v143;
    if (v54 == 1)
    {
      sub_250E8BCFC((uint64_t)v21, (uint64_t (*)(void))sub_250EA630C);
      sub_250E8BCFC((uint64_t)v30, (uint64_t (*)(void))sub_250EA630C);
      uint64_t v56 = 1;
      uint64_t v57 = v145;
      uint64_t v58 = v142;
      goto LABEL_10;
    }
  }
  else
  {
    id v59 = v137;
    sub_250E8DB70((uint64_t)v21, (uint64_t)v137, (uint64_t (*)(void))sub_250EA630C);
    if (v52((char *)v51, 1, v33) != 1)
    {
      uint64_t v118 = v49;
      uint64_t v80 = (void (*)(char *, char *, uint64_t))v34[4];
      v80(v141, v59, v33);
      v80(v41, (char *)v51, v33);
      sub_250E8E768((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
      id v81 = v141;
      char v82 = sub_250F0CF40();
      uint64_t v83 = (void (*)(char *, uint64_t))v34[1];
      v83(v41, v33);
      v83(v81, v33);
      sub_250E8BCFC((uint64_t)v21, (uint64_t (*)(void))sub_250EA630C);
      sub_250E8BCFC((uint64_t)v30, (uint64_t (*)(void))sub_250EA630C);
      uint64_t v55 = (uint64_t)v143;
      uint64_t v58 = v142;
      if (v82)
      {
        uint64_t v56 = 1;
        uint64_t v57 = v145;
        goto LABEL_10;
      }
      goto LABEL_8;
    }
    ((void (*)(char *, uint64_t))v34[1])(v59, v33);
    uint64_t v55 = (uint64_t)v143;
  }
  uint64_t v118 = v49;
  sub_250E8BCFC((uint64_t)v21, (uint64_t (*)(void))sub_250EA67F8);
  sub_250E8BCFC((uint64_t)v30, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v58 = v142;
LABEL_8:
  uint64_t v60 = v118;
  id v61 = v140;
  sub_250E8DB70(v118, (uint64_t)v140, (uint64_t (*)(void))sub_250EA630C);
  uint64_t result = v147(v61, 1, v33);
  id v63 = v145;
  if (result == 1) {
    goto LABEL_25;
  }
  id v64 = (void (*)(char *, void, uint64_t))v132[4];
  uint64_t v65 = v138;
  v64(v138, v61, v33);
  v64(v58, v65, v33);
  uint64_t v66 = (uint64_t)v139;
  sub_250EBAF14(v60, (uint64_t)v139);
  sub_250E8BCFC(v60, (uint64_t (*)(void))sub_250EA630C);
  sub_250E8E698(v66, v60, (uint64_t (*)(void))sub_250EA630C);
  uint64_t v56 = 0;
  uint64_t v57 = v63;
LABEL_10:
  v120(v58, v56, 1, v33);
  swift_endAccess();
  int v67 = v147(v58, 1, v33);
  uint64_t v68 = (uint64_t (*)(char *, uint64_t, uint64_t))v33;
  uint64_t v69 = v144;
  uint64_t v70 = v146;
  if (v67 == 1)
  {
    id v71 = (uint64_t (*)(void))sub_250E9241C;
    uint64_t v72 = (uint64_t)v58;
LABEL_14:
    sub_250E8BCFC(v72, v71);
LABEL_15:
    sub_250EBAE94(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
    uint64_t v76 = v75;
    id v77 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v75 - 8) + 56);
    unint64_t v78 = v148;
    uint64_t v79 = 1;
    return v77(v78, v79, 1, v76);
  }
  uint64_t v73 = v132;
  uint64_t v74 = (void *)v132[4];
  ((void (*)(char *, char *, uint64_t (*)(char *, uint64_t, uint64_t)))v74)(v57, v58, v68);
  sub_250F0D610();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v134 + 48))(v55, 1, v135) == 1)
  {
    ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))v73[1])(v57, v68);
    id v71 = (uint64_t (*)(void))sub_250EBAE04;
    uint64_t v72 = v55;
    goto LABEL_14;
  }
  uint64_t v84 = v57;
  char v147 = v68;
  uint64_t v85 = v131;
  sub_250EBB194(v55, v131);
  uint64_t v86 = v130;
  sub_250EBB230(v85, v130);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_250EBB2CC(v85);
    ((void (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))v132[1])(v57, v147);
    char v87 = *(unsigned char *)(v86 + 8) | 0x80;
    uint64_t v88 = v148;
    *uint64_t v148 = *(void *)v86;
    *((unsigned char *)v88 + 8) = v87;
    sub_250EBAE94(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
    uint64_t v116 = v115;
    swift_storeEnumTagMultiPayload();
    id v77 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56);
    unint64_t v78 = v88;
LABEL_23:
    uint64_t v79 = 0;
    uint64_t v76 = v116;
    return v77(v78, v79, 1, v76);
  }
  uint64_t v140 = (char *)v74;
  id v89 = *(char **)(v69 + 32);
  uint64_t v143 = (char *)(v69 + 32);
  uint64_t v142 = v89;
  ((void (*)(char *, uint64_t, uint64_t))v89)(v70, v86, v133);
  uint64_t v90 = v141;
  sub_250F0C420();
  sub_250E8E768((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
  uint64_t v91 = v147;
  sub_250F0D330();
  uint64_t v92 = v149;
  uint64_t v93 = v132;
  uint64_t v94 = (char *)v132[1];
  uint64_t v139 = v132 + 1;
  v138 = v94;
  uint64_t result = ((uint64_t (*)(char *, uint64_t (*)(char *, uint64_t, uint64_t)))v94)(v90, v91);
  if (!v92)
  {
    uint64_t v95 = *(void **)(v124 + 16);
    uint64_t v96 = (void (*)(char *, char *, uint64_t (*)(void, void, void)))v93[2];
    uint64_t v97 = v123;
    v96(v123, v84, (uint64_t (*)(void, void, void))v91);
    swift_beginAccess();
    uint64_t v137 = v95;
    uint64_t v98 = v126;
    sub_250F0C330();
    swift_endAccess();
    (*(void (**)(char *, char *, uint64_t))(v69 + 16))(v129, v146, v133);
    uint64_t v99 = sub_250E8D194(0, &qword_26B20EF08);
    v96(v90, v97, (uint64_t (*)(void, void, void))v91);
    uint64_t v100 = v127;
    uint64_t v101 = (uint64_t)v125;
    uint64_t v102 = v91;
    uint64_t v103 = (uint64_t)v90;
    uint64_t v104 = v128;
    (*(void (**)(char *, char *, uint64_t))(v127 + 16))(v125, v98, v128);
    uint64_t v105 = v137;
    uint64_t v106 = v103;
    char v107 = (uint64_t (*)(void, void, void))v102;
    id v108 = sub_250EB66B0(v105, v106, v101);
    (*(void (**)(char *, uint64_t))(v100 + 8))(v98, v104);
    uint64_t v150 = v99;
    id v151 = &off_2701F0328;
    *(void *)&long long v149 = v108;
    type metadata accessor for SleepingSampleDaySummaryAggregator(0);
    uint64_t v109 = swift_allocObject();
    *(void *)(v109 + 16) = v105;
    sub_250E9FB90(&v149, v109 + 24);
    uint64_t v110 = v133;
    ((void (*)(uint64_t, char *, uint64_t (*)(char *, uint64_t, uint64_t)))v140)(v109+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex, v97, (uint64_t (*)(char *, uint64_t, uint64_t))v107);
    ((void (*)(uint64_t, char *, uint64_t))v142)(v109+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v129, v110);
    uint64_t v111 = v148;
    sub_250EB9184((uint64_t)v148);

    swift_setDeallocating();
    __swift_destroy_boxed_opaque_existential_1(v109 + 24);
    unsigned __int16 v112 = (void (*)(void, void))v138;
    ((void (*)(uint64_t, uint64_t (*)(char *, uint64_t, uint64_t)))v138)(v109+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex, (uint64_t (*)(char *, uint64_t, uint64_t))v107);
    char v113 = *(void (**)(uint64_t, uint64_t))(v144 + 8);
    v113(v109+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v110);
    swift_deallocClassInstance();
    v113((uint64_t)v146, v110);
    sub_250EBB2CC(v131);
    v112(v145, (uint64_t (*)(char *, uint64_t, uint64_t))v107);
    sub_250EBAE94(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
    uint64_t v116 = v114;
    swift_storeEnumTagMultiPayload();
    id v77 = *(uint64_t (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 56);
    unint64_t v78 = v111;
    goto LABEL_23;
  }
  __break(1u);
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_250EB9184@<X0>(uint64_t a1@<X8>)
{
  uint64_t v177 = a1;
  uint64_t v189 = sub_250F0C470();
  uint64_t v188 = *(void *)(v189 - 8);
  uint64_t v1 = MEMORY[0x270FA5388](v189);
  uint64_t v176 = (char *)&v174 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v182 = (char *)&v174 - v4;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v181 = (char *)&v174 - v6;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  unint64_t v180 = (char *)&v174 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unint64_t v179 = (char *)&v174 - v10;
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v183 = (uint64_t)&v174 - v12;
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v186 = (uint64_t)&v174 - v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v198 = (char *)&v174 - v16;
  MEMORY[0x270FA5388](v15);
  char v197 = (char *)&v174 - v17;
  uint64_t v18 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v18 - 8);
  char v196 = (char *)&v174 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_250F0CE70();
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v178 = (char *)&v174 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  char v195 = (char *)&v174 - v23;
  uint64_t v24 = sub_250F0CC40();
  uint64_t v25 = *(void *)(v24 - 8);
  uint64_t v200 = v24;
  uint64_t v201 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  uint64_t v184 = (char *)&v174 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  unint64_t v30 = (char *)&v174 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v187 = (char *)&v174 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v203 = (char *)&v174 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  uint64_t v174 = (char *)&v174 - v36;
  MEMORY[0x270FA5388](v35);
  id v192 = (char *)&v174 - v37;
  uint64_t v216 = sub_250F0CC00();
  uint64_t v38 = *(void *)(v216 - 8);
  uint64_t v39 = MEMORY[0x270FA5388](v216);
  os_log_type_t v190 = (char *)&v174 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v191 = (char *)&v174 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  char v193 = (char *)&v174 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  os_log_t v204 = (char *)&v174 - v46;
  uint64_t v47 = MEMORY[0x270FA5388](v45);
  unint64_t v175 = (char *)&v174 - v48;
  uint64_t v49 = MEMORY[0x270FA5388](v47);
  char v194 = (char *)&v174 - v50;
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  uint64_t v207 = (char *)&v174 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  uint64_t v55 = (char *)&v174 - v54;
  MEMORY[0x270FA5388](v53);
  uint64_t v57 = (char *)&v174 - v56;
  uint64_t v58 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v58 - 8);
  uint64_t v206 = sub_250F0CC30();
  uint64_t v59 = *(void *)(v206 - 8);
  MEMORY[0x270FA5388](v206);
  id v61 = (char *)&v174 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  sub_250F0CC10();
  sub_250F0CBF0();
  BOOL v215 = v61;
  uint64_t v62 = sub_250F0CC20();
  os_signpost_type_t v63 = sub_250F0D260();
  char v64 = sub_250F0D2B0();
  uint64_t v205 = v59;
  uint64_t v185 = v30;
  if (v64)
  {
    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    unint64_t v66 = (v38 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v65(v55, v57, v216);
    uint64_t v67 = v38;
    uint64_t v68 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v68 = 0;
    os_signpost_id_t v69 = sub_250F0CBE0();
    _os_signpost_emit_with_name_impl(&dword_250E86000, v62, v63, v69, "SleepingSampleDaySummaryAggregator.aggregate", "", v68, 2u);
    uint64_t v70 = v68;
    uint64_t v38 = v67;
    MEMORY[0x25338EC30](v70, -1, -1);

    (*(void (**)(char *, uint64_t))(v67 + 8))(v55, v216);
  }
  else
  {

    uint64_t v65 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
    unint64_t v66 = (v38 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  }
  id v214 = v65;
  uint64_t v71 = v216;
  v65(v55, v57, v216);
  sub_250F0CC70();
  swift_allocObject();
  unint64_t v72 = v66;
  uint64_t v212 = sub_250F0CC60();
  uint64_t v73 = v55;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v38 + 8);
  uint64_t v75 = v38 + 8;
  uint64_t v74 = v76;
  v76(v57, v71);
  id v77 = v207;
  sub_250F0CBF0();
  unint64_t v78 = sub_250F0CC20();
  os_signpost_type_t v79 = sub_250F0D260();
  char v80 = sub_250F0D2B0();
  char v211 = v76;
  if (v80)
  {
    v214(v73, v77, v216);
    id v81 = (uint8_t *)swift_slowAlloc();
    uint64_t v202 = v75;
    char v82 = v81;
    *(_WORD *)id v81 = 0;
    os_signpost_id_t v83 = sub_250F0CBE0();
    _os_signpost_emit_with_name_impl(&dword_250E86000, v78, v79, v83, "SleepingSampleDaySummaryAggregator.sleepDaySummaryProvider.sleepDaySummary", "", v82, 2u);
    uint64_t v84 = v82;
    uint64_t v75 = v202;
    uint64_t v74 = v211;
    MEMORY[0x25338EC30](v84, -1, -1);

    v74(v73, v216);
  }
  else
  {
  }
  uint64_t v85 = v216;
  unint64_t v199 = v72;
  v214(v73, v77, v216);
  swift_allocObject();
  uint64_t v210 = sub_250F0CC60();
  uint64_t v86 = v77;
  uint64_t v87 = v75;
  v74(v86, v85);
  uint64_t v88 = v209;
  uint64_t v89 = v209[6];
  uint64_t v90 = v209[7];
  __swift_project_boxed_opaque_existential_1(v209 + 3, v89);
  id v91 = v208;
  uint64_t v92 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v90 + 8))(v89, v90);
  id v213 = v73;
  if (!v91)
  {
    uint64_t v95 = v74;
    id v208 = v92;
    uint64_t v96 = sub_250F0CC20();
    uint64_t v97 = v194;
    sub_250F0CC50();
    int v98 = sub_250F0D250();
    char v99 = sub_250F0D2B0();
    uint64_t v202 = v87;
    if (v99)
    {
      LODWORD(v207) = v98;
      swift_retain();
      uint64_t v100 = v192;
      sub_250F0CC80();
      swift_release();
      uint64_t v102 = v200;
      uint64_t v101 = v201;
      if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v100, v200) == *MEMORY[0x263F90238])
      {
        uint64_t v103 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v101 + 8))(v100, v102);
        uint64_t v103 = "";
      }
      uint64_t v105 = v213;
      uint64_t v104 = (uint64_t)v197;
      uint64_t v106 = v103;
      uint64_t v107 = v216;
      v214(v213, v97, v216);
      id v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)id v108 = 0;
      os_signpost_id_t v109 = sub_250F0CBE0();
      _os_signpost_emit_with_name_impl(&dword_250E86000, v96, (os_signpost_type_t)v207, v109, "SleepingSampleDaySummaryAggregator.sleepDaySummaryProvider.sleepDaySummary", v106, v108, 2u);
      MEMORY[0x25338EC30](v108, -1, -1);

      v95(v97, v107);
      uint64_t v97 = v105;
      uint64_t v88 = v209;
    }
    else
    {

      uint64_t v104 = (uint64_t)v197;
    }
    v95(v97, v216);
    uint64_t v110 = (void *)v88[2];
    sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
    uint64_t v111 = (void *)*MEMORY[0x263F09E38];
    id v112 = v208;
    char v113 = (void *)MEMORY[0x25338DDE0](v111);
    id v114 = v110;
    objc_msgSend(v112, sel_morningIndex);
    uint64_t v115 = (uint64_t)v195;
    sub_250F0CE20();
    id v116 = objc_msgSend(v112, sel_calendar);
    uint64_t v117 = (uint64_t)v196;
    sub_250F0C180();

    id v118 = sub_250EA85C8((uint64_t)v112, (uint64_t)v113, v114);
    sub_250E961A4(v115, v117, 0x3FB999999999999ALL, 0, (uint64_t)v118, v113, v114, 16);

    sub_250E94CA4(v104);
    uint64_t v119 = (uint64_t)v198;
    uint64_t v120 = v104;
    sub_250EC1D64(v114, v112);
    sub_250E94CA4(v119);
    id v208 = (id)sub_250EC2090(v114, v112);
    sub_250E94CA4(v186);
    sub_250EF7C98(v183);
    objc_msgSend(v112, sel_morningIndex);
    sub_250F0CE20();
    uint64_t v165 = v188;
    uint64_t v166 = *(void (**)(char *, uint64_t, uint64_t))(v188 + 16);
    uint64_t v167 = v120;
    uint64_t v168 = v119;
    uint64_t v169 = v189;
    v166(v179, v167, v189);
    v166(v180, v168, v169);
    v166(v181, v186, v169);
    v166(v182, (uint64_t)v209+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature, v169);
    v166(v176, v183, v169);
    sub_250F0C930();
    swift_release();

    swift_release();
    swift_release();
    swift_release();
    unint64_t v170 = *(void (**)(uint64_t, uint64_t))(v165 + 8);
    v170(v183, v169);
    v170(v186, v169);
    v170((uint64_t)v198, v169);
    v170((uint64_t)v197, v169);
    char v125 = sub_250F0CC20();
    uint64_t v94 = v175;
    sub_250F0CC50();
    os_signpost_type_t v126 = sub_250F0D250();
    if (sub_250F0D2B0())
    {
      swift_retain();
      char v171 = v174;
      sub_250F0CC80();
      swift_release();
      uint64_t v173 = v200;
      uint64_t v172 = v201;
      if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v171, v200) == *MEMORY[0x263F90238]) {
        goto LABEL_19;
      }
      (*(void (**)(char *, uint64_t))(v172 + 8))(v171, v173);
      goto LABEL_30;
    }
    goto LABEL_24;
  }
  swift_release();
  uint64_t v93 = v203;
  uint64_t v94 = v204;
  id v219 = v91;
  id v121 = v91;
  sub_250E95B04();
  if (!swift_dynamicCast())
  {

    id v219 = v91;
    id v130 = v91;
    if (swift_dynamicCast())
    {

      id v131 = v217;
      char v132 = v218 | 0x40;
      sub_250E92500();
      swift_allocError();
      *(void *)uint64_t v133 = v131;
      *(unsigned char *)(v133 + 8) = v132;
      swift_willThrow();

      char v125 = sub_250F0CC20();
      uint64_t v134 = v193;
      sub_250F0CC50();
      os_signpost_type_t v126 = sub_250F0D250();
      if (sub_250F0D2B0())
      {
        swift_retain();
        uint64_t v135 = v187;
        sub_250F0CC80();
        swift_release();
        uint64_t v137 = v200;
        uint64_t v136 = v201;
        if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v135, v200) == *MEMORY[0x263F90238])
        {
          uint64_t v129 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v136 + 8))(v135, v137);
          uint64_t v129 = "";
        }
        uint64_t v94 = v193;
        unint64_t v146 = v213;
        char v147 = v193;
        uint64_t v148 = v216;
        uint64_t v149 = v216;
        goto LABEL_39;
      }
      goto LABEL_35;
    }

    id v217 = v91;
    id v138 = v91;
    sub_250E8D194(0, (unint64_t *)&unk_269B10AC0);
    if (swift_dynamicCast())
    {

      id v139 = v219;
      sub_250E92500();
      swift_allocError();
      *(void *)uint64_t v140 = v139;
      *(unsigned char *)(v140 + 8) = -64;
      swift_willThrow();

      char v125 = sub_250F0CC20();
      uint64_t v134 = v191;
      sub_250F0CC50();
      os_signpost_type_t v141 = sub_250F0D250();
      if (sub_250F0D2B0())
      {
        swift_retain();
        uint64_t v142 = v185;
        sub_250F0CC80();
        swift_release();
        uint64_t v144 = v200;
        uint64_t v143 = v201;
        if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v142, v200) == *MEMORY[0x263F90238])
        {
          uint64_t v145 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v143 + 8))(v142, v144);
          uint64_t v145 = "";
        }
        id v158 = v214;
        int v159 = &v221;
LABEL_44:
        uint64_t v160 = (char *)*(v159 - 32);
        uint64_t v148 = v216;
        v158(v213, v160, v216);
        int v161 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)int v161 = 0;
        os_signpost_id_t v162 = sub_250F0CBE0();
        _os_signpost_emit_with_name_impl(&dword_250E86000, v125, v141, v162, "SleepingSampleDaySummaryAggregator.aggregate", v145, v161, 2u);
        MEMORY[0x25338EC30](v161, -1, -1);

        id v157 = v160;
        goto LABEL_45;
      }
    }
    else
    {

      char v125 = sub_250F0CC20();
      uint64_t v134 = v190;
      sub_250F0CC50();
      os_signpost_type_t v141 = sub_250F0D250();
      if (sub_250F0D2B0())
      {
        swift_retain();
        uint64_t v150 = v184;
        sub_250F0CC80();
        swift_release();
        uint64_t v152 = v200;
        uint64_t v151 = v201;
        if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v150, v200) == *MEMORY[0x263F90238])
        {
          uint64_t v145 = "[Error] Interval already ended";
        }
        else
        {
          (*(void (**)(char *, uint64_t))(v151 + 8))(v150, v152);
          uint64_t v145 = "";
        }
        id v158 = v214;
        int v159 = &v220;
        goto LABEL_44;
      }
    }
LABEL_35:

    id v213 = v134;
    goto LABEL_36;
  }

  id v122 = v217;
  char v123 = v218;
  sub_250E92500();
  swift_allocError();
  *(void *)uint64_t v124 = v122;
  *(unsigned char *)(v124 + 8) = v123;
  swift_willThrow();

  char v125 = sub_250F0CC20();
  sub_250F0CC50();
  os_signpost_type_t v126 = sub_250F0D250();
  if (sub_250F0D2B0())
  {
    swift_retain();
    sub_250F0CC80();
    swift_release();
    uint64_t v128 = v200;
    uint64_t v127 = v201;
    if ((*(unsigned int (**)(char *, uint64_t))(v201 + 88))(v93, v200) == *MEMORY[0x263F90238])
    {
LABEL_19:
      uint64_t v129 = "[Error] Interval already ended";
LABEL_31:
      unint64_t v146 = v213;
      char v147 = v94;
      uint64_t v148 = v216;
      uint64_t v149 = v216;
LABEL_39:
      v214(v146, v147, v149);
      int v155 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)int v155 = 0;
      os_signpost_id_t v156 = sub_250F0CBE0();
      _os_signpost_emit_with_name_impl(&dword_250E86000, v125, v126, v156, "SleepingSampleDaySummaryAggregator.aggregate", v129, v155, 2u);
      MEMORY[0x25338EC30](v155, -1, -1);

      id v157 = v94;
LABEL_45:
      unint64_t v163 = v211;
      v211(v157, v148);
      uint64_t v154 = v205;
      uint64_t v153 = v206;
      v163(v213, v216);
      goto LABEL_46;
    }
    (*(void (**)(char *, uint64_t))(v127 + 8))(v93, v128);
LABEL_30:
    uint64_t v129 = "";
    goto LABEL_31;
  }
LABEL_24:

  id v213 = v94;
LABEL_36:
  uint64_t v154 = v205;
  uint64_t v153 = v206;
  v211(v213, v216);
LABEL_46:
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v154 + 8))(v215, v153);
}

uint64_t sub_250EBA6F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = sub_250EB7B5C();
  uint64_t result = swift_release();
  *a1 = v2;
  return result;
}

size_t sub_250EBA734()
{
  size_t v0 = sub_250EA6CB8();
  swift_release();
  return v0;
}

uint64_t sub_250EBA76C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  return sub_250EA6018(a1, a2, a3);
}

uint64_t sub_250EBA790()
{
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  uint64_t v1 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_morningIndex;
  uint64_t v2 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_162AF38C750857D76C80011061F645FA34SleepingSampleDaySummaryAggregator_wristTemperature;
  uint64_t v4 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  return swift_deallocClassInstance();
}

uint64_t sub_250EBA884()
{
  return type metadata accessor for SleepingSampleDaySummaryAggregator(0);
}

uint64_t type metadata accessor for SleepingSampleDaySummaryAggregator(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_26B20E940);
}

uint64_t sub_250EBA8AC()
{
  uint64_t result = sub_250F0CE70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C470();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

void destroy for SleepingSampleDaySummarySequenceError(id *a1)
{
}

uint64_t assignWithCopy for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  id v3 = *(id *)a2;
  char v4 = *(unsigned char *)(a2 + 8);
  id v5 = *(id *)a2;
  uint64_t v6 = *(void **)a1;
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;

  return a1;
}

uint64_t assignWithTake for SleepingSampleDaySummarySequenceError(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  char v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;

  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummarySequenceError(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x3D && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 61);
  }
  unsigned int v3 = (*(unsigned char *)(a1 + 8) & 0x3C | (*(unsigned __int8 *)(a1 + 8) >> 6)) ^ 0x3F;
  if (v3 >= 0x3C) {
    unsigned int v3 = -1;
  }
  return v3 + 1;
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummarySequenceError(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3C)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 61;
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0x3D) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2)
    {
      *(void *)uint64_t result = 0;
      *(unsigned char *)(result + 8) = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
    }
  }
  return result;
}

uint64_t sub_250EBAB20(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_250EBAB2C(uint64_t result)
{
  *(unsigned char *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_250EBAB3C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = *(unsigned char *)(result + 8) & 3 | (a2 << 6);
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummarySequenceError()
{
  return &type metadata for SleepingSampleDaySummarySequenceError;
}

uint64_t sub_250EBAB60()
{
  return sub_250EBADC0(&qword_269B10DC8, (unint64_t *)&unk_269B10DD0, MEMORY[0x263F8DB80]);
}

uint64_t sub_250EBABB0(uint64_t a1)
{
  uint64_t result = sub_250E8E768(&qword_26B20E318, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_250EBAC08()
{
  return MEMORY[0x270FA0238](v0, 17, 7);
}

uint64_t sub_250EBAC18()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return MEMORY[0x270FA0238](v0, 48, 7);
}

uint64_t sub_250EBAC68@<X0>(void *a1@<X8>)
{
  return sub_250EB7F14(*(void *)(v1 + 16), *(uint64_t (**)(char *, uint64_t, uint64_t))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), a1);
}

void sub_250EBAC74()
{
  if (!qword_26B20EF48)
  {
    uint64_t v0 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8E008];
    sub_250EBAD28(255, &qword_26B20EFA8, MEMORY[0x263F8E008]);
    sub_250EBADC0(&qword_26B20EFA0, &qword_26B20EFA8, v0);
    unint64_t v1 = sub_250F0D4C0();
    if (!v2) {
      atomic_store(v1, (unint64_t *)&qword_26B20EF48);
    }
  }
}

void sub_250EBAD28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    sub_250EBAE94(255, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8], (void (*)(void))sub_250E92500);
    unint64_t v7 = a3(a1, v6);
    if (!v8) {
      atomic_store(v7, a2);
    }
  }
}

uint64_t sub_250EBADC0(unint64_t *a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250EBAD28(255, a2, a3);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250EBAE04()
{
  if (!qword_26B20F028)
  {
    sub_250EBAE94(255, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F028);
    }
  }
}

void sub_250EBAE94(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t), void (*a4)(void))
{
  if (!*a2)
  {
    a3(255);
    a4();
    unint64_t v6 = sub_250F0D740();
    if (!v7) {
      atomic_store(v6, a2);
    }
  }
}

uint64_t sub_250EBAF14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_250F0CE70();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA630C();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8DB70(a1, (uint64_t)v10, (uint64_t (*)(void))sub_250EA630C);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_250E9374C();
    sub_250E8E768((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
    if (sub_250F0CF40())
    {
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v12 = 1;
    }
    else
    {
      v13[1] = 1;
      sub_250E8E768((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
      sub_250F0D320();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      uint64_t v12 = 0;
    }
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a2, v12, 1, v4);
  }
  return result;
}

uint64_t sub_250EBB194(uint64_t a1, uint64_t a2)
{
  sub_250EBAE94(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EBB230(uint64_t a1, uint64_t a2)
{
  sub_250EBAE94(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EBB2CC(uint64_t a1)
{
  sub_250EBAE94(0, (unint64_t *)&unk_26B20F018, MEMORY[0x263F42D38], (void (*)(void))sub_250EA418C);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

BOOL sub_250EBB360(id a1, unsigned __int8 a2, void *a3, unsigned __int8 a4)
{
  switch(a2 >> 6)
  {
    case 1:
      if ((a4 & 0xC0) != 0x40) {
        return 0;
      }
      if ((a2 & 1) == 0) {
        goto LABEL_10;
      }
      goto LABEL_14;
    case 2:
      if ((a4 & 0xC0) != 0x80) {
        return 0;
      }
      if (a2)
      {
LABEL_14:
        if ((a4 & 1) == 0) {
          return 0;
        }
      }
      else
      {
LABEL_10:
        if (a4) {
          return 0;
        }
      }
      sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
      id v10 = a3;
      id v11 = a1;
      char v12 = sub_250F0D2A0();

      return (v12 & 1) != 0;
    case 3:
      if (a4 <= 0xBFu) {
        return 0;
      }
      sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
      id v13 = a3;
      id v14 = a1;
      char v15 = sub_250F0D2A0();

      return v15 & 1;
    default:
      if (a4 > 0x3Fu) {
        return 0;
      }
      if (a2)
      {
        if (a2 == 1)
        {
          if (a4 == 1)
          {
            sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
            uint64_t v6 = 1;
            id v7 = a3;
            id v8 = a1;
            char v9 = sub_250F0D2A0();

            if (v9) {
              return v6;
            }
          }
          return 0;
        }
        if (a4 == 2 && !a3) {
          return 1;
        }
      }
      else if (!a4)
      {
        sub_250E8D194(0, (unint64_t *)&qword_26B20E420);
        id v17 = a3;
        id v18 = a1;
        char v19 = sub_250F0D2A0();

        if (v19) {
          return 1;
        }
      }
      return 0;
  }
}

uint64_t sub_250EBB678()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  uint64_t v2 = *v1;
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_250EBB73C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  void *v5 = a1;
  v5[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_250EBB79C(uint64_t *a1, void *a2)
{
  uint64_t v3 = *a1;
  uint64_t v2 = a1[1];
  uint64_t v4 = (void *)(*a2 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  void *v4 = v3;
  v4[1] = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_250EBB808())()
{
  return j__swift_endAccess;
}

uint64_t sub_250EBB868(uint64_t a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  id v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  id v8 = sub_250F0CCA0();
  os_log_type_t v9 = sub_250F0D1D0();
  if (os_log_type_enabled(v8, v9))
  {
    uint64_t v17 = a1;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v16 = v4;
    id v11 = (uint8_t *)v10;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v19 = v12;
    *(_DWORD *)id v11 = 136446210;
    uint64_t v13 = sub_250F0D7B0();
    uint64_t v18 = sub_250E8BE44(v13, v14, &v19);
    a1 = v17;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v8, v9, "[%{public}s] returning extension for healthd", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v12, -1, -1);
    MEMORY[0x25338EC30](v11, -1, -1);

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v16);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return (*(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v2) + 0x80))(a1);
}

uint64_t sub_250EBBB14(void *a1)
{
  uint64_t v2 = v1;
  id v43 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  id v8 = (char *)v41 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v41 - v9;
  sub_250F0CC90();
  id v11 = sub_250F0CCA0();
  os_log_type_t v12 = sub_250F0D1D0();
  BOOL v13 = os_log_type_enabled(v11, v12);
  v41[1] = ObjectType;
  if (v13)
  {
    uint64_t v14 = swift_slowAlloc();
    uint64_t v42 = v4;
    char v15 = (uint8_t *)v14;
    uint64_t v16 = swift_slowAlloc();
    v41[0] = v2;
    uint64_t v17 = v5;
    uint64_t v18 = v16;
    uint64_t v45 = v16;
    *(_DWORD *)char v15 = 136446210;
    uint64_t v19 = sub_250F0D7B0();
    uint64_t v44 = sub_250E8BE44(v19, v20, &v45);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v11, v12, "[%{public}s] returning extension for profile", v15, 0xCu);
    swift_arrayDestroy();
    uint64_t v21 = v18;
    uint64_t v5 = v17;
    uint64_t v2 = (void *)v41[0];
    MEMORY[0x25338EC30](v21, -1, -1);
    uint64_t v22 = v15;
    uint64_t v4 = v42;
    MEMORY[0x25338EC30](v22, -1, -1);
  }

  uint64_t v23 = *(void (**)(char *, uint64_t))(v5 + 8);
  v23(v10, v4);
  id v24 = v43;
  id v25 = objc_msgSend(v43, sel_profileIdentifier);
  id v26 = objc_msgSend(v25, sel_type);

  if (v26 == (id)1 && (self, (uint64_t v27 = swift_dynamicCastObjCClass()) != 0))
  {
    uint64_t v28 = v27;
    uint64_t v29 = *(uint64_t (**)(uint64_t))((*MEMORY[0x263F8EED0] & *v2) + 0x88);
    id v30 = v24;
    uint64_t v31 = v29(v28);
  }
  else
  {
    sub_250F0CC90();
    uint64_t v32 = sub_250F0CCA0();
    os_log_type_t v33 = sub_250F0D1D0();
    if (os_log_type_enabled(v32, v33))
    {
      uint64_t v42 = v4;
      uint64_t v34 = (uint8_t *)swift_slowAlloc();
      uint64_t v35 = swift_slowAlloc();
      uint64_t v45 = v35;
      *(_DWORD *)uint64_t v34 = 136446210;
      uint64_t v36 = sub_250F0D7B0();
      uint64_t v44 = sub_250E8BE44(v36, v37, &v45);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v32, v33, "[%{public}s] profile extension not supported for non-primary profile", v34, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v35, -1, -1);
      MEMORY[0x25338EC30](v34, -1, -1);

      uint64_t v38 = v8;
      uint64_t v39 = v42;
    }
    else
    {

      uint64_t v38 = v8;
      uint64_t v39 = v4;
    }
    v23(v38, v39);
    return 0;
  }
  return v31;
}

id sub_250EBBF88(void *a1)
{
  id v2 = objc_allocWithZone((Class)type metadata accessor for ProductionProfileExtension());
  return sub_250ED30A4(a1);
}

uint64_t static HealthBalanceDaemonPlugin.shouldLoad(for:)(void *a1)
{
  id v1 = objc_msgSend(a1, sel_behavior);
  unsigned int v2 = objc_msgSend(v1, sel_isRealityDevice);

  return v2 ^ 1;
}

id HealthBalanceDaemonPlugin.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);
  return objc_msgSend(v1, sel_init);
}

id HealthBalanceDaemonPlugin.init()()
{
  id v1 = (uint64_t *)&v0[OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier];
  unsigned int v2 = v0;
  *id v1 = sub_250F0C290();
  v1[1] = v3;

  v5.receiver = v2;
  v5.super_class = (Class)type metadata accessor for HealthBalanceDaemonPlugin();
  return objc_msgSendSuper2(&v5, sel_init);
}

id HealthBalanceDaemonPlugin.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for HealthBalanceDaemonPlugin();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t HealthBalanceDaemonPlugin.taskServerClasses()()
{
  sub_250EBC51C();
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_250F0ECE0;
  sub_250EBC5E8(0, (unint64_t *)&unk_26B20E248, type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator, sub_250EBC5B4, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleDaySummaryQueryServer);
  *(void *)(v0 + 32) = v1;
  sub_250EBC5E8(0, (unint64_t *)&unk_26B20E238, (uint64_t (*)(uint64_t))sub_250EA9318, sub_250EBC668, (uint64_t (*)(uint64_t, uint64_t, uint64_t))type metadata accessor for SleepingSampleDaySummaryQueryServer);
  *(void *)(v0 + 40) = v2;
  *(void *)(v0 + 48) = type metadata accessor for TrainingLoadSummaryQueryServer();
  return v0;
}

uint64_t sub_250EBC3AC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_250E8D13C();
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = _swift_stdlib_malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  os_log_type_t v12 = v10 + 32;
  BOOL v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for HealthBalanceDaemonPlugin()
{
  return self;
}

void sub_250EBC51C()
{
  if (!qword_26B20E488)
  {
    sub_250EBC574();
    unint64_t v0 = sub_250F0D660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E488);
    }
  }
}

unint64_t sub_250EBC574()
{
  unint64_t result = qword_26B20DEE0;
  if (!qword_26B20DEE0)
  {
    unint64_t result = swift_getExistentialMetatypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20DEE0);
  }
  return result;
}

uint64_t sub_250EBC5B4()
{
  return sub_250EBC69C(&qword_26B20E320, (void (*)(uint64_t))type metadata accessor for SleepingSampleAggregateDaySummaryEnumerator);
}

void sub_250EBC5E8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

uint64_t sub_250EBC668()
{
  return sub_250EBC69C((unint64_t *)&unk_26B20E2F0, (void (*)(uint64_t))sub_250EA9318);
}

uint64_t sub_250EBC69C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EBC6E4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(*a1 + OBJC_IVAR____TtC19HealthBalanceDaemon25HealthBalanceDaemonPlugin_pluginIdentifier);
  swift_beginAccess();
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t method lookup function for HealthBalanceDaemonPlugin(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for HealthBalanceDaemonPlugin);
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.getter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x58))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.setter()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x60))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.pluginIdentifier.modify()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x68))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.extension(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x70))();
}

{
  void *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x78))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.createBalanceDaemonExtension(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x80))();
}

uint64_t dispatch thunk of HealthBalanceDaemonPlugin.createBalanceProfileExtension(for:)()
{
  return (*(uint64_t (**)(void))((*MEMORY[0x263F8EED0] & *v0) + 0x88))();
}

uint64_t initializeBufferWithCopyOfBuffer for HealthBalanceAnalyticsEnvironment(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t destroy for HealthBalanceAnalyticsEnvironment()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(void *)(a1 + 64) = v5;
  return a1;
}

__n128 __swift_memcpy73_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for HealthBalanceAnalyticsEnvironment(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for HealthBalanceAnalyticsEnvironment(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 40);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HealthBalanceAnalyticsEnvironment(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 40) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HealthBalanceAnalyticsEnvironment()
{
  return &type metadata for HealthBalanceAnalyticsEnvironment;
}

BOOL sub_250EBCB8C(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  v7[2] = a1[2];
  v8[0] = v2;
  *(_OWORD *)((char *)v8 + 9) = *(_OWORD *)((char *)a1 + 57);
  long long v3 = a1[1];
  v7[0] = *a1;
  v7[1] = v3;
  long long v4 = a2[3];
  v9[2] = a2[2];
  v10[0] = v4;
  *(_OWORD *)((char *)v10 + 9) = *(_OWORD *)((char *)a2 + 57);
  long long v5 = a2[1];
  v9[0] = *a2;
  v9[1] = v5;
  return sub_250EBCBE8((uint64_t)v7, (uint64_t)v9);
}

BOOL sub_250EBCBE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a2 + 8);
  if (!v4)
  {
    if (v5) {
      return 0;
    }
    goto LABEL_10;
  }
  if (!v5) {
    return 0;
  }
  BOOL v6 = *(void *)a1 == *(void *)a2 && v4 == v5;
  if (v6 || (char v7 = sub_250F0D680(), result = 0, (v7 & 1) != 0))
  {
LABEL_10:
    char v9 = *(unsigned char *)(a2 + 24);
    if (*(unsigned char *)(a1 + 24))
    {
      if (!*(unsigned char *)(a2 + 24)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
        char v9 = 1;
      }
      if (v9) {
        return 0;
      }
    }
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32) || *(void *)(a1 + 40) != *(void *)(a2 + 40))
    {
      char v10 = sub_250F0D680();
      BOOL result = 0;
      if ((v10 & 1) == 0) {
        return result;
      }
    }
    if (((*(unsigned __int8 *)(a1 + 48) ^ *(unsigned __int8 *)(a2 + 48)) & 1) == 0)
    {
      int v11 = *(unsigned __int8 *)(a1 + 49);
      int v12 = *(unsigned __int8 *)(a2 + 49);
      if (v11 == 2)
      {
        if (v12 != 2) {
          return 0;
        }
      }
      else
      {
        BOOL result = 0;
        BOOL v13 = (v11 & 1) == 0;
        if (v12 == 2 || ((v13 ^ v12) & 1) == 0) {
          return result;
        }
      }
      if (*(void *)(a1 + 56) == *(void *)(a2 + 56))
      {
        char v14 = *(unsigned char *)(a2 + 72);
        if ((*(unsigned char *)(a1 + 72) & 1) == 0)
        {
          if (*(void *)(a1 + 64) != *(void *)(a2 + 64)) {
            char v14 = 1;
          }
          return (v14 & 1) == 0;
        }
        if (*(unsigned char *)(a2 + 72)) {
          return 1;
        }
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_250EBCD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v31 = a6;
  char v7 = v6;
  uint64_t v33 = a1;
  uint64_t v40 = *MEMORY[0x263EF8340];
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v12 - 8);
  char v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v32 = *(id *)&v7[OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_dataSource];
  sub_250EBD568(a2, (uint64_t)v14);
  uint64_t v15 = sub_250F0BF30();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
  {
    uint64_t v17 = (void *)sub_250F0BEC0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v14, v15);
  }
  uint64_t v18 = (void *)swift_allocObject();
  v18[2] = v7;
  v18[3] = a3;
  v18[4] = a4;
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = sub_250EBD604;
  *(void *)(v19 + 24) = v18;
  uint64_t v38 = sub_250EBD620;
  uint64_t v39 = v19;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_250EBD1DC;
  unint64_t v37 = &block_descriptor_4;
  unint64_t v20 = _Block_copy(&aBlock);
  uint64_t v21 = v7;
  swift_retain();
  swift_release();
  uint64_t v22 = swift_allocObject();
  uint64_t v23 = v31;
  *(void *)(v22 + 16) = a5;
  *(void *)(v22 + 24) = v23;
  uint64_t v38 = sub_250EBD65C;
  uint64_t v39 = v22;
  id aBlock = (id)MEMORY[0x263EF8330];
  uint64_t v35 = 1107296256;
  uint64_t v36 = sub_250EBD214;
  unint64_t v37 = &block_descriptor_11;
  id v24 = _Block_copy(&aBlock);
  swift_retain();
  swift_release();
  id aBlock = 0;
  unsigned __int8 v25 = objc_msgSend(v32, sel_collectionCalculator_queryForInterval_error_sampleHandler_mergeHandler_, v33, v17, &aBlock, v20, v24);
  _Block_release(v24);
  _Block_release(v20);

  id v26 = aBlock;
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation)
  {
    __break(1u);
LABEL_9:
    __break(1u);
  }
  char v28 = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v28) {
    goto LABEL_9;
  }
  if ((v25 & 1) == 0)
  {
    sub_250F0BFA0();

    swift_willThrow();
  }
  return swift_release();
}

uint64_t sub_250EBD0D8(uint64_t a1, char a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, void, uint64_t, double, double, double), double a6, double a7, double a8)
{
  if (objc_msgSend(*(id *)(a4+ OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_includedDateIntervals), sel_hasOverlapWithStartTime_endTime_, a7, a8))return a5(a1, a2 & 1, a3, a6, a7, a8) & 1; {
  uint64_t v17 = *(void (**)(uint64_t, void, uint64_t, double, double, double))(a4
  }
                                                                                + OBJC_IVAR____TtC19HealthBalanceDaemon58StatisticsCollectionCalculatorDateIntervalFilterDataSource_unitTest_excludedSampleHandler);
  if (v17)
  {
    swift_retain();
    v17(a1, a2 & 1, a3, a6, a7, a8);
    sub_250EAB9CC((uint64_t)v17);
  }
  return 1;
}

uint64_t sub_250EBD1DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(a1 + 32))(a2, a3, a4) & 1;
}

uint64_t sub_250EBD214(uint64_t a1)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t type metadata accessor for StatisticsCollectionCalculatorDateIntervalFilterDataSource()
{
  return self;
}

uint64_t sub_250EBD524()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_250EBD558()
{
  return (*(uint64_t (**)(void))(*(void *)(v0 + 16) + 16))();
}

uint64_t sub_250EBD568(uint64_t a1, uint64_t a2)
{
  sub_250E98BC4(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EBD5CC()
{
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_250EBD604(uint64_t a1, char a2, uint64_t a3, double a4, double a5, double a6)
{
  return sub_250EBD0D8(a1, a2, a3, *(void *)(v6 + 16), *(uint64_t (**)(uint64_t, void, uint64_t, double, double, double))(v6 + 24), a4, a5, a6);
}

uint64_t sub_250EBD610()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EBD620()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_250EBD64C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EBD65C()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_250EBD68C@<X0>(uint64_t a1@<X8>)
{
  sub_250EC1920(0);
  sub_250EC1B9C();
  sub_250F0D120();
  sub_250F0D150();
  if (v7[4] == v7[0])
  {
    sub_250EC18D8(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  }
  else
  {
    uint64_t v4 = (void (*)(void *, void))sub_250F0D170();
    sub_250EC1A50(v5, a1, (uint64_t (*)(void))sub_250EC18D8);
    v4(v7, 0);
    sub_250EC18D8(0);
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
}

uint64_t sub_250EBD7CC()
{
  if (*(void *)(v0 + 16))
  {
    uint64_t v1 = *(void *)(v0 + 16);
  }
  else
  {
    uint64_t v1 = sub_250EC1C7C(7);
    *(void *)(v0 + 16) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_250EBD82C()
{
  if (*(void *)(v0 + 24))
  {
    uint64_t v1 = *(void *)(v0 + 24);
  }
  else
  {
    uint64_t v1 = sub_250EC1C7C(28);
    *(void *)(v0 + 24) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

double sub_250EBD88C()
{
  if (*(unsigned char *)(v0 + 40))
  {
    uint64_t v1 = sub_250EBD7CC();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        uint64_t v3 = 0;
        double v4 = 0.0;
      }
      else
      {
        uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v5 = (double *)(v1 + 40);
        double v4 = 0.0;
        uint64_t v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v4 = v4 + *(v5 - 1) + *v5;
          v5 += 2;
          v6 -= 2;
        }
        while (v6);
        if (v2 == v3) {
          goto LABEL_12;
        }
      }
      uint64_t v7 = v2 - v3;
      int64_t v8 = (double *)(v1 + 8 * v3 + 32);
      do
      {
        double v9 = *v8++;
        double v4 = v4 + v9;
        --v7;
      }
      while (v7);
    }
    else
    {
      double v4 = 0.0;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    *(double *)(v0 + 32) = v4;
    *(unsigned char *)(v0 + 40) = 0;
    return v4;
  }
  return *(double *)(v0 + 32);
}

double sub_250EBD93C()
{
  if (*(unsigned char *)(v0 + 56))
  {
    uint64_t v1 = sub_250EBD82C();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      if (v2 == 1)
      {
        uint64_t v3 = 0;
        double v4 = 0.0;
      }
      else
      {
        uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
        uint64_t v5 = (double *)(v1 + 40);
        double v4 = 0.0;
        uint64_t v6 = v2 & 0x7FFFFFFFFFFFFFFELL;
        do
        {
          double v4 = v4 + *(v5 - 1) + *v5;
          v5 += 2;
          v6 -= 2;
        }
        while (v6);
        if (v2 == v3) {
          goto LABEL_12;
        }
      }
      uint64_t v7 = v2 - v3;
      int64_t v8 = (double *)(v1 + 8 * v3 + 32);
      do
      {
        double v9 = *v8++;
        double v4 = v4 + v9;
        --v7;
      }
      while (v7);
    }
    else
    {
      double v4 = 0.0;
    }
LABEL_12:
    swift_bridgeObjectRelease();
    *(double *)(v0 + 48) = v4;
    *(unsigned char *)(v0 + 56) = 0;
    return v4;
  }
  return *(double *)(v0 + 48);
}

uint64_t sub_250EBD9EC(NSObject *a1, uint64_t a2, int a3)
{
  uint64_t v4 = v3;
  int v113 = a3;
  uint64_t v114 = a2;
  uint64_t v120 = a1;
  sub_250E8E700();
  uint64_t v111 = v5;
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  id v108 = (char *)&v102 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v106 = (char *)&v102 - v8;
  sub_250EC18D8(0);
  uint64_t v109 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v107 = (char *)&v102 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v110 = (uint64_t)&v102 - v12;
  uint64_t v119 = sub_250F0CCB0();
  uint64_t v118 = *(void *)(v119 - 8);
  MEMORY[0x270FA5388](v119);
  char v14 = (char *)&v102 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_250F0CE70();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  id v112 = (char *)&v102 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v115 = (char *)&v102 - v19;
  sub_250E9241C(0);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  uint64_t v23 = (char *)&v102 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  id v26 = (char *)&v102 - v25;
  MEMORY[0x270FA5388](v24);
  char v28 = (char *)&v102 - v27;
  uint64_t v29 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  swift_beginAccess();
  sub_250EC1A50(v29, (uint64_t)v28, (uint64_t (*)(void))sub_250E9241C);
  uint64_t v116 = v16;
  uint64_t v30 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
  int v31 = v30(v28, 1, v15);
  uint64_t v32 = (uint64_t)v28;
  uint64_t v33 = v15;
  sub_250EC1968(v32, (uint64_t (*)(void))sub_250E9241C);
  if (v31 == 1)
  {
    uint64_t v34 = v116;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 16))(v26, v114, v15);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v34 + 56))(v26, 0, 1, v15);
    swift_beginAccess();
    sub_250EC1C18((uint64_t)v26, v29);
    swift_endAccess();
  }
  sub_250EC1A50(v29, (uint64_t)v23, (uint64_t (*)(void))sub_250E9241C);
  if (v30(v23, 1, v15) == 1) {
    return sub_250EC1968((uint64_t)v23, (uint64_t (*)(void))sub_250E9241C);
  }
  uint64_t v36 = *(void (**)(char *, char *, uint64_t))(v116 + 32);
  uint64_t v104 = v116 + 32;
  uint64_t v103 = v36;
  v36(v115, v23, v15);
  uint64_t v37 = OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit;
  uint64_t v38 = *(void **)(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit);
  if (v38)
  {
    id v39 = v38;
    uint64_t v40 = v120;
    id v41 = [v120 _unit];
    sub_250E8D194(0, &qword_26B20F270);
    char v42 = sub_250F0D2A0();

    if ((v42 & 1) == 0)
    {
      sub_250F0CC90();
      id v58 = v39;
      uint64_t v59 = v40;
      id v60 = v58;
      id v61 = v59;
      uint64_t v62 = sub_250F0CCA0();
      os_log_type_t v63 = sub_250F0D1B0();
      uint64_t v120 = v62;
      if (os_log_type_enabled(v62, v63))
      {
        uint64_t v64 = swift_slowAlloc();
        uint64_t v65 = swift_slowAlloc();
        uint64_t v105 = v15;
        unint64_t v66 = (void *)v65;
        *(_DWORD *)uint64_t v64 = 138412546;
        id v67 = objc_msgSend(v61, (SEL)&selRef_startDate + 3);
        v121[0] = v67;
        sub_250F0D300();
        *unint64_t v66 = v67;

        *(_WORD *)(v64 + 12) = 2112;
        v121[0] = v60;
        id v68 = v60;
        sub_250F0D300();
        v66[1] = v38;

        _os_log_impl(&dword_250E86000, v120, v63, "Received invalid different unit %@ when previously had %@", (uint8_t *)v64, 0x16u);
        sub_250E978C0();
        swift_arrayDestroy();
        os_signpost_id_t v69 = v66;
        uint64_t v33 = v105;
        MEMORY[0x25338EC30](v69, -1, -1);
        MEMORY[0x25338EC30](v64, -1, -1);
      }
      else
      {
      }
      uint64_t v83 = v119;
      uint64_t v84 = v118;

      (*(void (**)(char *, uint64_t))(v84 + 8))(v14, v83);
      return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v115, v33);
    }
    uint64_t v105 = v15;
  }
  else
  {
    uint64_t v105 = v15;
    uint64_t v40 = v120;
    id v43 = [v120 _unit];
    id v39 = *(id *)(v4 + v37);
    *(void *)(v4 + v37) = v43;
  }

  unint64_t v44 = sub_250F0CE50();
  uint64_t result = sub_250EBD7CC();
  uint64_t v45 = result;
  uint64_t v46 = *(void *)(result + 16);
  uint64_t v119 = v44;
  if (v46)
  {
    unint64_t v47 = 0;
    uint64_t v48 = v4 + 64;
    uint64_t v117 = result + 32;
    uint64_t v118 = v44 ^ 0x7FFFFFFFFFFFFFFFLL;
    while (v47 < *(void *)(v45 + 16))
    {
      if (v47 == v118) {
        goto LABEL_55;
      }
      double v49 = *(double *)(v117 + 8 * v47);
      swift_beginAccess();
      if (*(void *)(*(void *)v48 + 16) < (int64_t)(v44 + 1))
      {
        do
        {
          swift_beginAccess();
          uint64_t v50 = *(void **)v48;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v48 = v50;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            uint64_t v50 = sub_250EA2200(0, v50[2] + 1, 1, v50);
            *(void *)uint64_t v48 = v50;
          }
          unint64_t v53 = v50[2];
          unint64_t v52 = v50[3];
          if (v53 >= v52 >> 1)
          {
            uint64_t v50 = sub_250EA2200((void *)(v52 > 1), v53 + 1, 1, v50);
            *(void *)uint64_t v48 = v50;
          }
          long long v50[2] = v53 + 1;
          v50[v53 + 4] = 0;
          swift_endAccess();
        }
        while (*(void *)(*(void *)v48 + 16) < v44 + 1);
      }
      [v120 _value];
      double v55 = v54;
      double v56 = sub_250EBD88C();
      swift_beginAccess();
      uint64_t v57 = *(void **)(v4 + 64);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v4 + 64) = v57;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_250ECFB1C(v57);
        uint64_t v57 = (void *)result;
        *(void *)uint64_t v48 = result;
      }
      if (v119 < 0) {
        goto LABEL_56;
      }
      if (v44 >= v57[2]) {
        goto LABEL_57;
      }
      ++v47;
      *(double *)&v57[v44 + 4] = v49 * v55 / v56 + *(double *)&v57[v44 + 4];
      uint64_t result = swift_endAccess();
      ++v44;
      if (v47 == v46)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v120;
        unint64_t v44 = v119;
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
    goto LABEL_58;
  }
  swift_bridgeObjectRelease();
LABEL_28:
  if (v113) {
    return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v115, v105);
  }
  uint64_t result = sub_250EBD82C();
  uint64_t v70 = result;
  uint64_t v71 = *(void *)(result + 16);
  if (v71)
  {
    unint64_t v72 = 0;
    uint64_t v73 = v4 + 72;
    uint64_t v117 = result + 32;
    uint64_t v118 = v44 ^ 0x7FFFFFFFFFFFFFFFLL;
    while (v72 < *(void *)(v70 + 16))
    {
      if (v72 == v118) {
        goto LABEL_59;
      }
      double v74 = *(double *)(v117 + 8 * v72);
      swift_beginAccess();
      if (*(void *)(*(void *)v73 + 16) < (int64_t)(v44 + 1))
      {
        do
        {
          swift_beginAccess();
          uint64_t v75 = *(void **)v73;
          char v76 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)uint64_t v73 = v75;
          if ((v76 & 1) == 0)
          {
            uint64_t v75 = sub_250EA2200(0, v75[2] + 1, 1, v75);
            *(void *)uint64_t v73 = v75;
          }
          unint64_t v78 = v75[2];
          unint64_t v77 = v75[3];
          if (v78 >= v77 >> 1)
          {
            uint64_t v75 = sub_250EA2200((void *)(v77 > 1), v78 + 1, 1, v75);
            *(void *)uint64_t v73 = v75;
          }
          void v75[2] = v78 + 1;
          v75[v78 + 4] = 0;
          swift_endAccess();
        }
        while (*(void *)(*(void *)v73 + 16) < v44 + 1);
      }
      [v120 _value];
      double v80 = v79;
      double v81 = sub_250EBD93C();
      swift_beginAccess();
      char v82 = *(void **)(v4 + 72);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v4 + 72) = v82;
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_250ECFB1C(v82);
        char v82 = (void *)result;
        *(void *)uint64_t v73 = result;
      }
      if (v119 < 0) {
        goto LABEL_60;
      }
      if (v44 >= v82[2]) {
        goto LABEL_61;
      }
      ++v72;
      *(double *)&v82[v44 + 4] = v74 * v80 / v81 + *(double *)&v82[v44 + 4];
      uint64_t result = swift_endAccess();
      ++v44;
      if (v72 == v71)
      {
        swift_bridgeObjectRelease();
        uint64_t v40 = v120;
        goto LABEL_48;
      }
    }
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    __break(1u);
    goto LABEL_62;
  }
  swift_bridgeObjectRelease();
LABEL_48:
  [v40 _value];
  uint64_t v85 = v105;
  uint64_t v86 = v112;
  uint64_t v87 = v114;
  if (v88 <= 0.0) {
    return (*(uint64_t (**)(char *, uint64_t))(v116 + 8))(v115, v105);
  }
  sub_250EBD82C();
  swift_bridgeObjectRelease();
  sub_250F0CE40();
  sub_250E92C80();
  uint64_t result = sub_250F0CF00();
  if ((result & 1) == 0)
  {
LABEL_62:
    __break(1u);
    return result;
  }
  uint64_t v89 = v111;
  uint64_t v90 = v106;
  id v91 = &v106[*(int *)(v111 + 48)];
  uint64_t v92 = v116;
  uint64_t v93 = *(void (**)(char *, uint64_t, uint64_t))(v116 + 16);
  v93(v106, v87, v85);
  uint64_t v120 = v91;
  v93((char *)v91, (uint64_t)v86, v85);
  uint64_t v94 = v108;
  uint64_t v95 = &v108[*(int *)(v89 + 48)];
  v93(v108, (uint64_t)v90, v85);
  v93(v95, (uint64_t)v91, v85);
  uint64_t v96 = (uint64_t)v107;
  uint64_t v97 = v103;
  v103(v107, v94, v85);
  int v98 = *(void (**)(char *, uint64_t))(v92 + 8);
  v98(v95, v85);
  char v99 = &v94[*(int *)(v111 + 48)];
  v97(v94, v90, v85);
  v97(v99, (char *)v120, v85);
  v97((char *)(v96 + *(int *)(v109 + 36)), v99, v85);
  v98(v94, v85);
  uint64_t v100 = v110;
  sub_250EC19C8(v96, v110, (uint64_t (*)(void))sub_250EC18D8);
  swift_beginAccess();
  sub_250EC1BD0((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
  if ((sub_250F0CF40() & 1) == 0)
  {
    sub_250EC17E4(0, qword_26B20F2F8, MEMORY[0x263F090E8], sub_250E92C80, MEMORY[0x263F8EDA0]);
    uint64_t v101 = (void (*)(id *, void))sub_250F0D780();
    sub_250EC1920(0);
    sub_250F0D760();
    v101(v121, 0);
  }
  swift_endAccess();
  sub_250EC1968(v100, (uint64_t (*)(void))sub_250EC18D8);
  v98(v112, v85);
  return ((uint64_t (*)(char *, uint64_t))v98)(v115, v85);
}

uint64_t sub_250EBE8F4(uint64_t a1, uint64_t a2)
{
  uint64_t v234 = a2;
  uint64_t v233 = a1;
  uint64_t v231 = sub_250F0CCB0();
  uint64_t v230 = *(void *)(v231 - 8);
  MEMORY[0x270FA5388](v231);
  uint64_t v232 = (char *)&v226 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v271 = sub_250F0C6F0();
  uint64_t v246 = *(void (***)(char *, uint64_t))(v271 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v271);
  uint64_t v270 = (char *)&v226 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  v269 = (char *)&v226 - v6;
  uint64_t v268 = sub_250F0C720();
  uint64_t v245 = *(void (***)(char *, uint64_t))(v268 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v268);
  v267 = (char *)&v226 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  v266 = (char *)&v226 - v9;
  uint64_t v265 = sub_250F0C6C0();
  char v244 = *(void (***)(char *, uint64_t))(v265 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v265);
  uint64_t v264 = (char *)&v226 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v298 = (char *)&v226 - v12;
  uint64_t v297 = sub_250F0C6A0();
  long long v243 = *(void (***)(os_log_t, uint64_t))(v297 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v297);
  uint64_t v263 = (char *)&v226 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  os_log_t v306 = (os_log_t)((char *)&v226 - v15);
  sub_250EA67F8();
  uint64_t v280 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v279 = (uint64_t)&v226 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA630C();
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v277 = (uint64_t)&v226 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v242 = (uint64_t)&v226 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v299 = (uint64_t)&v226 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v281 = (uint64_t)&v226 - v25;
  sub_250E8E700();
  uint64_t v283 = v26;
  uint64_t v27 = MEMORY[0x270FA5388](v26);
  v308 = (char *)&v226 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v27);
  v290 = (char *)&v226 - v29;
  sub_250E9374C();
  uint64_t v250 = v30;
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  v293 = (char *)&v226 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t i = (uint64_t)&v226 - v33;
  sub_250EA63F4();
  uint64_t v292 = v34;
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v251 = (uint64_t)&v226 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v282 = (uint64_t)&v226 - v37;
  sub_250EC1864(0);
  uint64_t v39 = MEMORY[0x270FA5388](v38 - 8);
  uint64_t v278 = (char *)&v226 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v39);
  v307 = (void (*)(char *, uint64_t))((char *)&v226 - v41);
  sub_250EC1920(0);
  uint64_t v284 = v42;
  uint64_t v286 = *(void *)(v42 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v42);
  v276 = (char *)&v226 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v43);
  uint64_t v46 = (char *)&v226 - v45;
  sub_250EC17E4(0, qword_26B20F2F8, MEMORY[0x263F090E8], sub_250E92C80, MEMORY[0x263F8EDA0]);
  uint64_t v48 = v47;
  uint64_t v49 = *(void *)(v47 - 8);
  uint64_t v50 = MEMORY[0x270FA5388](v47);
  long long v227 = (char *)&v226 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  unint64_t v275 = (char *)&v226 - v53;
  MEMORY[0x270FA5388](v52);
  double v55 = (char *)&v226 - v54;
  sub_250EC18D8(0);
  uint64_t v301 = v56;
  uint64_t v285 = *(void *)(v56 - 8);
  uint64_t v57 = MEMORY[0x270FA5388](v56);
  uint64_t v262 = (char *)&v226 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  uint64_t v241 = (uint64_t)&v226 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  uint64_t v296 = (uint64_t)&v226 - v62;
  MEMORY[0x270FA5388](v61);
  uint64_t v235 = (uint64_t)&v226 - v63;
  sub_250E9241C(0);
  uint64_t v65 = MEMORY[0x270FA5388](v64 - 8);
  uint64_t v272 = (char *)&v226 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v65);
  id v68 = (char *)&v226 - v67;
  uint64_t v69 = sub_250F0CE70();
  uint64_t v70 = *(void *)(v69 - 8);
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  long long v229 = (char *)&v226 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  long long v228 = (char *)&v226 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  long long v240 = (char *)&v226 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v305 = (char *)&v226 - v78;
  uint64_t v79 = MEMORY[0x270FA5388](v77);
  unint64_t v274 = (char *)&v226 - v80;
  uint64_t v81 = MEMORY[0x270FA5388](v79);
  uint64_t v287 = (char *)&v226 - v82;
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v302 = (char *)&v226 - v84;
  uint64_t v85 = MEMORY[0x270FA5388](v83);
  uint64_t v273 = (char *)&v226 - v86;
  MEMORY[0x270FA5388](v85);
  double v88 = (char *)&v226 - v87;
  uint64_t v89 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  swift_beginAccess();
  sub_250EC1A50(v89, (uint64_t)v68, (uint64_t (*)(void))sub_250E9241C);
  uint64_t v90 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48);
  uint64_t v289 = v70 + 48;
  v288 = v90;
  if (v90((uint64_t)v68, 1, v69) == 1)
  {
    sub_250EC1968((uint64_t)v68, (uint64_t (*)(void))sub_250E9241C);
    return MEMORY[0x263F8EE78];
  }
  id v91 = *(void (**)(char *, char *, uint64_t))(v70 + 32);
  uint64_t v300 = v70 + 32;
  v303 = v91;
  v91(v88, v68, v69);
  uint64_t v92 = v2;
  uint64_t v93 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_validDataDayRanges;
  swift_beginAccess();
  uint64_t v94 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
  uint64_t v261 = v93;
  uint64_t v259 = v49 + 16;
  v258 = v94;
  v94(v55, v93, v48);
  sub_250F0D770();
  uint64_t v96 = *(uint64_t (**)(char *, uint64_t))(v49 + 8);
  uint64_t v95 = v49 + 8;
  v260 = v96;
  v96(v55, v48);
  uint64_t v97 = v307;
  sub_250EBD68C((uint64_t)v307);
  uint64_t v98 = v286 + 8;
  uint64_t v257 = *(void (**)(char *, uint64_t))(v286 + 8);
  v257(v46, v284);
  uint64_t v99 = v285 + 48;
  v256 = *(uint64_t (**)(void (*)(void, void), uint64_t, uint64_t))(v285 + 48);
  int v100 = v256((void (*)(void, void))v97, 1, v301);
  uint64_t v101 = v48;
  uint64_t v102 = v88;
  if (v100 == 1)
  {
    (*(void (**)(char *, uint64_t))(v70 + 8))(v88, v69);
    sub_250EC1968((uint64_t)v97, (uint64_t (*)(void))sub_250EC1864);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v103 = v92;
  uint64_t v104 = v99;
  uint64_t v105 = v101;
  uint64_t v295 = v70;
  uint64_t v106 = v235;
  sub_250EC19C8((uint64_t)v97, v235, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v107 = *(void **)(v103 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit);
  if (!v107)
  {
LABEL_8:
    sub_250EC1968(v106, (uint64_t (*)(void))sub_250EC18D8);
    (*(void (**)(char *, uint64_t))(v295 + 8))(v102, v69);
    return MEMORY[0x263F8EE78];
  }
  uint64_t v285 = v104;
  uint64_t v286 = v98;
  uint64_t v108 = sub_250E92C80();
  id v109 = v107;
  uint64_t v110 = v234;
  if (sub_250F0CEE0())
  {

    goto LABEL_8;
  }
  id v238 = v109;
  uint64_t v239 = v102;
  uint64_t v253 = v95;
  uint64_t v254 = v105;
  uint64_t v226 = v103;
  uint64_t v311 = MEMORY[0x263F8EE78];
  uint64_t v112 = v233;
  uint64_t v252 = v108;
  uint64_t result = sub_250F0CF00();
  if ((result & 1) == 0)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
    return result;
  }
  uint64_t v113 = v283;
  uint64_t v114 = v290;
  uint64_t v115 = &v290[*(int *)(v283 + 48)];
  uint64_t v116 = v295;
  uint64_t v118 = v295 + 16;
  uint64_t v117 = *(void (**)(uint64_t, uint64_t, uint64_t))(v295 + 16);
  v294 = v117;
  v117((uint64_t)v290, v112, v69);
  uint64_t v119 = v115;
  char v249 = (void (**)(char *, char *, uint64_t))v115;
  v117((uint64_t)v115, v110, v69);
  uint64_t v120 = v308;
  id v121 = &v308[*(int *)(v113 + 48)];
  v117((uint64_t)v308, (uint64_t)v114, v69);
  v117((uint64_t)v121, (uint64_t)v119, v69);
  uint64_t v122 = (uint64_t)v293;
  char v123 = v303;
  v303(v293, v120, v69);
  uint64_t v124 = v116 + 8;
  char v125 = *(void (**)(char *, uint64_t))(v116 + 8);
  v125(v121, v69);
  os_signpost_type_t v126 = &v120[*(int *)(v283 + 48)];
  v123(v120, v114, v69);
  v123(v126, (char *)v249, v69);
  v123((char *)(v122 + *((int *)v250 + 9)), v126, v69);
  uint64_t v304 = v124;
  v307 = v125;
  v125(v120, v69);
  uint64_t v127 = i;
  sub_250EC19C8(v122, i, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v128 = v251;
  sub_250EC1A50(v127, v251, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v129 = v281;
  v294(v281, v127, v69);
  uint64_t v130 = v295 + 56;
  v293 = *(char **)(v295 + 56);
  ((void (*)(uint64_t, void, uint64_t, uint64_t))v293)(v129, 0, 1, v69);
  sub_250EC1968(v127, (uint64_t (*)(void))sub_250E9374C);
  uint64_t v131 = v292;
  sub_250EC19C8(v129, v128 + *(int *)(v292 + 36), (uint64_t (*)(void))sub_250EA630C);
  uint64_t v132 = v282;
  sub_250EC19C8(v128, v282, (uint64_t (*)(void))sub_250EA63F4);
  uint64_t v133 = v132 + *(int *)(v131 + 36);
  uint64_t v134 = v226 + 72;
  uint64_t v251 = v226 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_activityType;
  uint64_t v237 = v226 + 64;
  swift_beginAccess();
  uint64_t v236 = v134;
  swift_beginAccess();
  uint64_t v292 = 0;
  uint64_t v250 = (void (**)(char *, os_log_t, uint64_t))(v243 + 2);
  char v249 = (void (**)(char *, char *, uint64_t))(v244 + 2);
  long long v248 = (void (**)(char *, char *, uint64_t))(v245 + 2);
  long long v247 = (void (**)(char *, char *, uint64_t))(v246 + 2);
  ++v246;
  ++v245;
  ++v244;
  ++v243;
  uint64_t v295 = v130;
  uint64_t v255 = v118;
  for (i = v133; ; uint64_t v133 = i)
  {
    uint64_t v135 = v299;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v293)(v299, 1, 1, v69);
    uint64_t v136 = v279;
    uint64_t v137 = v279 + *(int *)(v280 + 48);
    sub_250EC1A50(v133, v279, (uint64_t (*)(void))sub_250EA630C);
    sub_250EC1A50(v135, v137, (uint64_t (*)(void))sub_250EA630C);
    id v138 = v288;
    unsigned int v139 = v288(v136, 1, v69);
    uint64_t v140 = (uint64_t)v278;
    os_signpost_type_t v141 = (void (*)(char *, uint64_t, uint64_t))v303;
    if (v139 == 1) {
      break;
    }
    uint64_t v143 = v242;
    sub_250EC1A50(v136, v242, (uint64_t (*)(void))sub_250EA630C);
    if (v138(v137, 1, v69) == 1)
    {
      uint64_t v142 = v69;
      v307((char *)v143, v69);
      goto LABEL_17;
    }
    uint64_t v144 = v302;
    v141(v302, v143, v69);
    uint64_t v145 = v287;
    v141(v287, v137, v69);
    sub_250EC1BD0((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
    char v146 = sub_250F0CF40();
    char v147 = v145;
    id v138 = v288;
    uint64_t v148 = v307;
    v307(v147, v69);
    uint64_t v142 = v69;
    v148(v144, v69);
    os_signpost_type_t v141 = (void (*)(char *, uint64_t, uint64_t))v303;
    sub_250EC1968(v136, (uint64_t (*)(void))sub_250EA630C);
    sub_250EC1968(v299, (uint64_t (*)(void))sub_250EA630C);
    if (v146) {
      goto LABEL_31;
    }
LABEL_19:
    uint64_t v149 = i;
    uint64_t v150 = v277;
    sub_250EC1A50(i, v277, (uint64_t (*)(void))sub_250EA630C);
    uint64_t v69 = v142;
    uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v138)(v150, 1, v142);
    if (result == 1) {
      goto LABEL_39;
    }
    uint64_t v151 = v274;
    v141(v274, v150, v142);
    uint64_t v152 = v273;
    v141(v273, (uint64_t)v151, v142);
    uint64_t v153 = v281;
    sub_250EBAF14(v149, v281);
    sub_250EC1968(v149, (uint64_t (*)(void))sub_250EA630C);
    sub_250EC19C8(v153, v149, (uint64_t (*)(void))sub_250EA630C);
    uint64_t v154 = v305;
    v141(v305, (uint64_t)v152, v142);
    int v155 = v275;
    uint64_t v156 = v254;
    v258(v275, v261, v254);
    id v157 = v276;
    sub_250F0D770();
    uint64_t v158 = v260(v155, v156);
    MEMORY[0x270FA5388](v158);
    *(&v226 - 2) = (uint64_t)v154;
    uint64_t v159 = v292;
    sub_250EC0F00((uint64_t (*)(char *))sub_250EC1A30, (uint64_t)(&v226 - 4), v140);
    v257(v157, v284);
    int v160 = v256((void (*)(void, void))v140, 1, v301);
    uint64_t v292 = v159;
    if (v160 == 1)
    {
      sub_250EC1968(v140, (uint64_t (*)(void))sub_250EC1864);
      sub_250F0C690();
      int v161 = v302;
      os_signpost_id_t v162 = (void (*)(char *, char *, uint64_t))v294;
      v294((uint64_t)v302, (uint64_t)v154, v142);
      ((void (*)(char *, uint64_t, uint64_t, uint64_t))v293)(v272, 1, 1, v142);
      sub_250F0C6B0();
      unint64_t v163 = v287;
      sub_250F0CDA0();
      sub_250F0CDC0();
      char v164 = v307;
      v307(v163, v142);
      uint64_t result = sub_250F0CF00();
      if ((result & 1) == 0)
      {
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
        goto LABEL_38;
      }
      uint64_t v165 = v283;
      uint64_t v166 = v290;
      uint64_t v167 = &v290[*(int *)(v283 + 48)];
      v162(v290, v154, v142);
      v303(v167, v161, v142);
      uint64_t v168 = &v308[*(int *)(v165 + 48)];
      v162(v308, v166, v142);
      v162(v168, v167, v142);
      uint64_t v169 = (uint64_t)v262;
      unint64_t v170 = v303;
      v303(v262, v308, v69);
      v164(v168, v69);
      char v171 = v302;
      uint64_t v172 = *(int *)(v165 + 48);
      uint64_t v173 = v308;
      uint64_t v174 = &v308[v172];
      v170(v308, v290, v69);
      unint64_t v175 = v174;
      uint64_t v176 = v167;
    }
    else
    {
      uint64_t v177 = v140;
      uint64_t v178 = v241;
      sub_250EC19C8(v177, v241, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t result = sub_250F0CE50();
      double v179 = 0.0;
      unint64_t v180 = v287;
      uint64_t v181 = (void (*)(char *, char *, uint64_t))v294;
      if (result < *(void *)(*(void *)v237 + 16))
      {
        if (result < 0) {
          goto LABEL_37;
        }
        double v179 = *(double *)(*(void *)v237 + 8 * result + 32);
      }
      id v182 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v238, v179);
      sub_250F0C690();
      uint64_t v183 = v302;
      v181(v302, v154, v69);
      uint64_t v184 = v272;
      v181(v272, (char *)v178, v69);
      ((void (*)(char *, void, uint64_t, uint64_t))v293)(v184, 0, 1, v69);
      sub_250F0C6B0();
      v181(v183, (char *)v178, v69);
      uint64_t v185 = v240;
      sub_250F0CDA0();
      sub_250F0CDC0();
      v307(v185, v69);
      uint64_t v186 = v183;
      LOBYTE(v185) = sub_250F0CF00();
      uint64_t result = sub_250EC1968(v178, (uint64_t (*)(void))sub_250EC18D8);
      if ((v185 & 1) == 0) {
        goto LABEL_36;
      }
      uint64_t v187 = v180;
      uint64_t v188 = v283;
      uint64_t v189 = v290;
      os_log_type_t v190 = &v290[*(int *)(v283 + 48)];
      unint64_t v170 = v303;
      v303(v290, v186, v69);
      v170(v190, v187, v69);
      uint64_t v191 = &v308[*(int *)(v188 + 48)];
      v181(v308, v189, v69);
      v181(v191, v190, v69);
      uint64_t v169 = (uint64_t)v262;
      v170(v262, v308, v69);
      v307(v191, v69);
      uint64_t v192 = *(int *)(v188 + 48);
      uint64_t v173 = v308;
      uint64_t v174 = &v308[v192];
      v170(v308, v189, v69);
      unint64_t v175 = v174;
      uint64_t v176 = v190;
      char v171 = v302;
    }
    v170(v175, v176, v69);
    v170((char *)(v169 + *(int *)(v301 + 36)), v174, v69);
    v307(v173, v69);
    uint64_t v193 = v296;
    sub_250EC19C8(v169, v296, (uint64_t (*)(void))sub_250EC18D8);
    (*v250)(v263, v306, v297);
    char v194 = v298;
    uint64_t v195 = v265;
    (*v249)(v264, v298, v265);
    char v196 = v266;
    sub_250F0C710();
    v294((uint64_t)v171, (uint64_t)v305, v69);
    sub_250EC1A50(v193, v169, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t v197 = v268;
    (*v248)(v267, v196, v268);
    uint64_t v198 = v269;
    sub_250F0C6E0();
    uint64_t v199 = v271;
    (*v247)(v270, v198, v271);
    sub_250EA8CE0();
    id v201 = objc_allocWithZone(v200);
    sub_250F0CD20();
    MEMORY[0x25338DC20]();
    if (*(void *)((v311 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((v311 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
      sub_250F0D060();
    }
    sub_250F0D090();
    sub_250F0D050();
    (*v246)(v198, v199);
    (*v245)(v196, v197);
    sub_250EC1968(v296, (uint64_t (*)(void))sub_250EC18D8);
    (*v244)(v194, v195);
    (*v243)(v306, v297);
    v307(v305, v69);
  }
  uint64_t v142 = v69;
  if (v138(v137, 1, v69) != 1)
  {
LABEL_17:
    sub_250EC1968(v136, (uint64_t (*)(void))sub_250EA67F8);
    sub_250EC1968(v299, (uint64_t (*)(void))sub_250EA630C);
    goto LABEL_19;
  }
  sub_250EC1968(v136, (uint64_t (*)(void))sub_250EA630C);
  sub_250EC1968(v299, (uint64_t (*)(void))sub_250EA630C);
LABEL_31:
  sub_250EC1968(v282, (uint64_t (*)(void))sub_250EA63F4);
  uint64_t v202 = v232;
  sub_250F0CC90();
  v203 = v228;
  uint64_t v204 = v142;
  uint64_t v205 = (void (*)(char *, uint64_t, uint64_t))v294;
  v294((uint64_t)v228, v233, v142);
  uint64_t v206 = v229;
  v205(v229, v234, v142);
  swift_retain_n();
  uint64_t v207 = sub_250F0CCA0();
  os_log_type_t v208 = sub_250F0D1D0();
  int v209 = v208;
  if (os_log_type_enabled(v207, v208))
  {
    uint64_t v210 = swift_slowAlloc();
    os_log_t v306 = v207;
    uint64_t v211 = v210;
    v308 = (char *)swift_slowAlloc();
    v310 = v308;
    *(_DWORD *)uint64_t v211 = 136315650;
    sub_250EC1BD0((unint64_t *)&qword_26B20EE10, MEMORY[0x263F090E8]);
    uint64_t v212 = sub_250F0D650();
    uint64_t v309 = sub_250E8BE44(v212, v213, (uint64_t *)&v310);
    LODWORD(v305) = v209;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    id v214 = v307;
    v307(v203, v142);
    BOOL v215 = v214;
    *(_WORD *)(v211 + 12) = 2080;
    uint64_t v216 = sub_250F0D650();
    uint64_t v309 = sub_250E8BE44(v216, v217, (uint64_t *)&v310);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    v214(v206, v142);
    *(_WORD *)(v211 + 22) = 2080;
    char v218 = v227;
    uint64_t v219 = v254;
    v258(v227, v261, v254);
    sub_250EC1AB8();
    uint64_t v220 = sub_250F0D650();
    unint64_t v222 = v221;
    v260(v218, v219);
    uint64_t v309 = sub_250E8BE44(v220, v222, (uint64_t *)&v310);
    sub_250F0D300();
    swift_release_n();
    swift_bridgeObjectRelease();
    os_log_t v223 = v306;
    _os_log_impl(&dword_250E86000, v306, (os_log_type_t)v305, "Getting results [%s: %s], valid dates %s", (uint8_t *)v211, 0x20u);
    uint64_t v224 = v308;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v224, -1, -1);
    MEMORY[0x25338EC30](v211, -1, -1);

    (*(void (**)(char *, uint64_t))(v230 + 8))(v232, v231);
    sub_250EC1968(v235, (uint64_t (*)(void))sub_250EC18D8);
    v215(v239, v204);
  }
  else
  {
    swift_release_n();

    uint64_t v225 = v307;
    v307(v206, v142);
    v225(v203, v142);
    (*(void (**)(char *, uint64_t))(v230 + 8))(v202, v231);
    sub_250EC1968(v235, (uint64_t (*)(void))sub_250EC18D8);
    v225(v239, v142);
  }
  return v311;
}

uint64_t sub_250EC0D2C(uint64_t a1, uint64_t a2)
{
  sub_250EC18D8(0);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CE70();
  uint64_t v8 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E92C80();
  char v11 = sub_250F0CF00();
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a2, v7);
  sub_250EC1A50(a1, (uint64_t)v6, (uint64_t (*)(void))sub_250EC18D8);
  if (v11) {
    char v12 = sub_250F0CEE0();
  }
  else {
    char v12 = 0;
  }
  sub_250EC1968((uint64_t)v6, (uint64_t (*)(void))sub_250EC18D8);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  return v12 & 1;
}

uint64_t sub_250EC0F00@<X0>(uint64_t (*a1)(char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = v4;
  v40[5] = a2;
  uint64_t v39 = a1;
  uint64_t v34 = a3;
  sub_250EC18D8(0);
  uint64_t v32 = *(void *)(v6 - 8);
  uint64_t v33 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v32 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v38 = (uint64_t)&v32 - v10;
  sub_250EC1920(0);
  uint64_t v12 = v11;
  uint64_t v13 = *(void *)(v11 - 8);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC1B54(0);
  uint64_t v17 = v16 - 8;
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v32 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = (void (**)(char *, uint64_t))v13;
  uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t))(v13 + 16);
  uint64_t v37 = v13 + 16;
  v36(v15, v3, v12);
  sub_250EC1BD0(&qword_26B20F2D8, sub_250EC1920);
  sub_250F0CFD0();
  uint64_t v20 = &v19[*(int *)(v17 + 44)];
  sub_250EC1B9C();
  uint64_t v21 = *(void *)v20;
  sub_250F0D150();
  if (v21 == v40[0])
  {
LABEL_7:
    sub_250EC1968((uint64_t)v19, (uint64_t (*)(void))sub_250EC1B54);
    uint64_t v29 = 1;
    uint64_t v30 = v34;
  }
  else
  {
    ++v35;
    while (1)
    {
      uint64_t v22 = (void (*)(void *, void))sub_250F0D170();
      uint64_t v23 = v38;
      sub_250EC1A50(v24, v38, (uint64_t (*)(void))sub_250EC18D8);
      v22(v40, 0);
      v36(v15, (uint64_t)v19, v12);
      sub_250F0D160();
      (*v35)(v15, v12);
      sub_250EC19C8(v23, (uint64_t)v9, (uint64_t (*)(void))sub_250EC18D8);
      char v25 = v39(v9);
      if (v5)
      {
        sub_250EC1968((uint64_t)v9, (uint64_t (*)(void))sub_250EC18D8);
        return sub_250EC1968((uint64_t)v19, (uint64_t (*)(void))sub_250EC1B54);
      }
      if (v25) {
        break;
      }
      sub_250EC1968((uint64_t)v9, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v26 = v9;
      uint64_t v27 = *(void *)v20;
      sub_250F0D150();
      BOOL v28 = v27 == v40[0];
      uint64_t v9 = v26;
      uint64_t v5 = 0;
      if (v28) {
        goto LABEL_7;
      }
    }
    sub_250EC1968((uint64_t)v19, (uint64_t (*)(void))sub_250EC1B54);
    uint64_t v30 = v34;
    sub_250EC19C8((uint64_t)v9, v34, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t v29 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56))(v30, v29, 1, v33);
}

uint64_t sub_250EC1358(uint64_t a1, char a2)
{
  *(void *)(v2 + 16) = 0;
  *(void *)(v2 + 24) = 0;
  *(void *)(v2 + 32) = 0;
  *(unsigned char *)(v2 + 40) = 1;
  *(void *)(v2 + 48) = 0;
  *(unsigned char *)(v2 + 56) = 1;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 64) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 72) = v5;
  *(void *)(v2 + 80) = v5;
  uint64_t v6 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex;
  uint64_t v7 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_250E92C80();
  sub_250F0D790();
  *(void *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_quantityUnit) = 0;
  uint64_t v8 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_activityType;
  *(void *)uint64_t v8 = a1;
  *(unsigned char *)(v8 + 8) = a2 & 1;
  return v2;
}

uint64_t sub_250EC144C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250EC1968(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_firstDayIndex, (uint64_t (*)(void))sub_250E9241C);
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon28RecentBiasBaselineCalculator_validDataDayRanges;
  sub_250EC17E4(0, qword_26B20F2F8, MEMORY[0x263F090E8], sub_250E92C80, MEMORY[0x263F8EDA0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return v0;
}

uint64_t sub_250EC1550()
{
  sub_250EC144C();
  return swift_deallocClassInstance();
}

uint64_t sub_250EC15A8()
{
  return type metadata accessor for RecentBiasBaselineCalculator();
}

uint64_t type metadata accessor for RecentBiasBaselineCalculator()
{
  uint64_t result = qword_26B20F228;
  if (!qword_26B20F228) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_250EC15FC()
{
  sub_250E9241C(319);
  if (v0 <= 0x3F)
  {
    sub_250EC17E4(319, qword_26B20F2F8, MEMORY[0x263F090E8], sub_250E92C80, MEMORY[0x263F8EDA0]);
    if (v1 <= 0x3F) {
      swift_updateClassMetadata2();
    }
  }
}

uint64_t sub_250EC1740@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = swift_allocObject();
  uint64_t result = sub_250EC1358(a1, v5);
  *a3 = v6;
  return result;
}

uint64_t sub_250EC1794(NSObject *a1, uint64_t a2, int a3)
{
  return sub_250EBD9EC(a1, a2, a3);
}

uint64_t sub_250EC17B8(uint64_t a1, uint64_t a2)
{
  return sub_250EBE8F4(a1, a2);
}

uint64_t sub_250EC17DC()
{
  return 57;
}

void sub_250EC17E4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

void sub_250EC1864(uint64_t a1)
{
}

void sub_250EC1884(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

void sub_250EC18D8(uint64_t a1)
{
}

void sub_250EC1920(uint64_t a1)
{
}

uint64_t sub_250EC1968(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250EC19C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250EC1A30(uint64_t a1)
{
  return sub_250EC0D2C(a1, *(void *)(v1 + 16)) & 1;
}

uint64_t sub_250EC1A50(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

unint64_t sub_250EC1AB8()
{
  unint64_t result = qword_26B20F2F0;
  if (!qword_26B20F2F0)
  {
    sub_250EC17E4(255, qword_26B20F2F8, MEMORY[0x263F090E8], sub_250E92C80, MEMORY[0x263F8EDA0]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20F2F0);
  }
  return result;
}

void sub_250EC1B54(uint64_t a1)
{
}

uint64_t sub_250EC1B9C()
{
  return sub_250EC1BD0(&qword_26B20F2E0, sub_250EC1920);
}

uint64_t sub_250EC1BD0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EC1C18(uint64_t a1, uint64_t a2)
{
  sub_250E9241C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EC1C7C(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v1 = result;
    if (!result) {
      return MEMORY[0x263F8EE78];
    }
    double v2 = 1.0 / (double)result * 1.57079633;
    uint64_t v3 = sub_250EA2200(0, 1, 1, MEMORY[0x263F8EE78]);
    unint64_t v4 = v3[2];
    double v5 = 0.0;
    do
    {
      long double v6 = cos(v5);
      unint64_t v7 = v3[3];
      if (v4 >= v7 >> 1) {
        uint64_t v3 = sub_250EA2200((void *)(v7 > 1), v4 + 1, 1, v3);
      }
      v3[2] = v4 + 1;
      *(long double *)&v3[v4 + 4] = v6;
      double v5 = v2 + v5;
      ++v4;
      --v1;
    }
    while (v1);
    return (uint64_t)v3;
  }
  return result;
}

uint64_t sub_250EC1D64(void *a1, void *a2)
{
  id v26 = a1;
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v3 - 8);
  double v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0BF30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0CE70();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC23BC();
  uint64_t v16 = (void *)*MEMORY[0x263F09E88];
  id v17 = a2;
  uint64_t v27 = (void *)MEMORY[0x25338DDE0](v16);
  id v18 = v26;
  objc_msgSend(v17, sel_morningIndex);
  sub_250F0CE20();
  id v19 = objc_msgSend(v17, sel_calendar);
  sub_250F0C180();

  sub_250EB26D4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F070;
  *(void *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  uint64_t v28 = inited;
  sub_250F0D050();
  sub_250EF6F98((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_250EA8994((uint64_t)v5);
    swift_bridgeObjectRelease();
    id v21 = 0;
    uint64_t v22 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v23 = (uint64_t)v27;
    id v21 = sub_250EA83E4((uint64_t)v9, (uint64_t)v27, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)v23;
  }
  uint64_t v24 = sub_250E961A4((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v21, v22, v18, 4);

  return v24;
}

uint64_t sub_250EC2090(void *a1, void *a2)
{
  id v26 = a1;
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v3 - 8);
  double v5 = (char *)&v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0BF30();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0CE70();
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC23BC();
  uint64_t v16 = (void *)*MEMORY[0x263F09EA8];
  id v17 = a2;
  uint64_t v27 = (void *)MEMORY[0x25338DDE0](v16);
  id v18 = v26;
  objc_msgSend(v17, sel_morningIndex);
  sub_250F0CE20();
  id v19 = objc_msgSend(v17, sel_calendar);
  sub_250F0C180();

  sub_250EB26D4();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F070;
  *(void *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  uint64_t v28 = inited;
  sub_250F0D050();
  sub_250EF6F98((uint64_t)v5);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_250EA8994((uint64_t)v5);
    swift_bridgeObjectRelease();
    id v21 = 0;
    uint64_t v22 = v27;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
    uint64_t v23 = (uint64_t)v27;
    id v21 = sub_250EA83E4((uint64_t)v9, (uint64_t)v27, (uint64_t)v18);
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    swift_bridgeObjectRelease();
    uint64_t v22 = (void *)v23;
  }
  uint64_t v24 = sub_250E961A4((uint64_t)v15, (uint64_t)v12, 0, 1, (uint64_t)v21, v22, v18, 16);

  return v24;
}

unint64_t sub_250EC23BC()
{
  unint64_t result = qword_26B20EEE0;
  if (!qword_26B20EEE0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20EEE0);
  }
  return result;
}

void sub_250EC23FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v20 = a3;
  uint64_t v23 = a6;
  uint64_t v8 = sub_250F0C470();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel_percentUnit);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 0.025);

  id v16 = objc_msgSend(v12, sel_percentUnit);
  id v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 0.045);

  sub_250EC23BC();
  id v18 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09E88]);
  id v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(void *)&long long v24 = a1;
    *((void *)&v24 + 1) = a2;
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = sub_250EC37C0;
    uint64_t v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_250F0C910();
    sub_250EC9910(&v24, (uint64_t)v10, v15, v17, 1, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_250EC25FC(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v20 = a3;
  uint64_t v23 = a6;
  uint64_t v8 = sub_250F0C470();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel__countPerMinuteUnit);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 6.4);

  id v16 = objc_msgSend(v12, sel__countPerMinuteUnit);
  id v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 18.0);

  sub_250EC23BC();
  id v18 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09E38]);
  id v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(void *)&long long v24 = a1;
    *((void *)&v24 + 1) = a2;
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = sub_250EC37C0;
    uint64_t v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_250F0C960();
    sub_250EC9910(&v24, (uint64_t)v10, v15, v17, 0, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

void sub_250EC27F8(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v21 = a4;
  uint64_t v22 = a5;
  uint64_t v20 = a3;
  uint64_t v23 = a6;
  uint64_t v8 = sub_250F0C470();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v12 = self;
  id v13 = objc_msgSend(v12, sel__countPerMinuteUnit);
  uint64_t v14 = self;
  id v15 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v13, 1.0);

  id v16 = objc_msgSend(v12, sel__countPerMinuteUnit);
  id v17 = objc_msgSend(v14, sel_quantityWithUnit_doubleValue_, v16, 3.0);

  sub_250EC23BC();
  id v18 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09EA8]);
  id v19 = objc_msgSend(v18, sel_canonicalUnit);

  if (v19)
  {
    *(void *)&long long v24 = a1;
    *((void *)&v24 + 1) = a2;
    uint64_t v25 = v20;
    uint64_t v26 = v21;
    uint64_t v27 = sub_250EC3770;
    uint64_t v28 = KeyPath;
    swift_unknownObjectRetain();
    swift_retain();
    sub_250F0C940();
    sub_250EC9910(&v24, (uint64_t)v10, v15, v17, 0, 0, v19, v23);
    swift_release();
  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_250EC29F0()
{
  return sub_250F0C950();
}

void sub_250EC2A18(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v75 = a4;
  uint64_t v89 = a2;
  uint64_t v90 = a3;
  uint64_t v5 = sub_250F0C970();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v87 = v5;
  uint64_t v88 = v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v86 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC32E8();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v70 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C400();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v84 = (char *)&v65 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  id v15 = (char *)&v65 - v14;
  sub_250EC348C(0, &qword_26B20E510, MEMORY[0x263F42D38], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v69 = (char *)&v65 - v17;
  uint64_t v18 = sub_250F0C470();
  uint64_t v74 = *(void *)(v18 - 8);
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v85 = (char *)&v65 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  id v91 = (char *)&v65 - v22;
  MEMORY[0x270FA5388](v21);
  long long v24 = (char *)&v65 - v23;
  uint64_t v71 = a1;
  swift_unknownObjectRetain();
  sub_250F0C950();
  uint64_t v25 = self;
  id v26 = objc_msgSend(v25, sel__changeInDegreeCelsiusUnit);
  uint64_t v27 = self;
  id v68 = objc_msgSend(v27, sel_quantityWithUnit_doubleValue_, v26, 0.55);

  id v28 = objc_msgSend(v25, sel__changeInDegreeCelsiusUnit);
  id v72 = objc_msgSend(v27, sel_quantityWithUnit_doubleValue_, v28, 1.1);

  sub_250EC34F0();
  uint64_t v29 = swift_allocObject();
  uint64_t v30 = *(void *)(*(void *)v29 + 104);
  uint64_t v73 = v29;
  uint64_t v31 = (void *)(v29 + v30);
  sub_250EC23BC();
  void *v31 = 0;
  v31[1] = 0;
  uint64_t v32 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  id v33 = objc_msgSend(v32, sel__unitForChangeInCanonicalUnit);

  if (v33)
  {
    uint64_t v67 = v33;
    sub_250F0C410();
    uint64_t v34 = v84;
    (*(void (**)(char *, void, uint64_t))(v11 + 104))(v84, *MEMORY[0x263F42D18], v10);
    sub_250EC3444(&qword_26B20E508, MEMORY[0x263F42D28]);
    char v35 = sub_250F0CF40();
    uint64_t v37 = *(void (**)(char *, uint64_t))(v11 + 8);
    uint64_t v36 = v11 + 8;
    v37(v34, v10);
    uint64_t v84 = (char *)v37;
    v37(v15, v10);
    if (v35)
    {
      uint64_t v79 = v15;
      uint64_t v80 = v36;
      uint64_t v81 = v10;
      uint64_t v66 = v24;
      uint64_t v83 = v18;
      uint64_t v38 = v90;
      int64_t v82 = v75 >> 1;
      if (v75 >> 1 != v90)
      {
        uint64_t v76 = v88 + 16;
        uint64_t v77 = v88 + 8;
        uint64_t v78 = (void (**)(char *, char *, uint64_t))(v74 + 32);
        uint64_t v39 = (void (**)(char *, uint64_t))(v74 + 8);
        uint64_t v40 = v82;
        uint64_t v41 = v85;
        uint64_t v42 = v79;
        while (!__OFSUB__(v40--, 1))
        {
          if (v40 < v38 || v40 >= v82) {
            goto LABEL_16;
          }
          uint64_t v44 = v88;
          uint64_t v45 = v89 + *(void *)(v88 + 72) * v40;
          uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t))(v88 + 16);
          uint64_t v47 = v86;
          uint64_t v48 = v87;
          v46(v86, v45, v87);
          uint64_t v49 = v91;
          sub_250F0C950();
          uint64_t v50 = *(void (**)(char *, uint64_t))(v44 + 8);
          v50(v47, v48);
          uint64_t v51 = *v78;
          uint64_t v52 = v49;
          uint64_t v53 = v83;
          (*v78)(v41, v52, v83);
          sub_250F0C410();
          LOBYTE(v47) = sub_250F0C3E0();
          ((void (*)(char *, uint64_t))v84)(v42, v81);
          (*v39)(v41, v53);
          if (v47)
          {
            uint64_t v60 = v86;
            uint64_t v59 = v87;
            v46(v86, v45, v87);
            uint64_t v61 = v91;
            sub_250F0C950();
            v50(v60, v59);
            uint64_t v55 = (uint64_t)v69;
            uint64_t v18 = v83;
            v51(v69, v61, v83);
            uint64_t v54 = v74;
            (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v74 + 56))(v55, 0, 1, v18);
            uint64_t v56 = v71;
            uint64_t v57 = (uint64_t)v70;
            unint64_t v58 = v75;
            uint64_t v38 = v90;
            goto LABEL_13;
          }
          uint64_t v38 = v90;
          if (v40 == v90) {
            goto LABEL_10;
          }
        }
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
LABEL_10:
      uint64_t v54 = v74;
      uint64_t v55 = (uint64_t)v69;
      uint64_t v18 = v83;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v74 + 56))(v69, 1, 1, v83);
      uint64_t v56 = v71;
      uint64_t v57 = (uint64_t)v70;
      unint64_t v58 = v75;
LABEL_13:
      long long v24 = v66;
    }
    else
    {
      uint64_t v54 = v74;
      uint64_t v55 = (uint64_t)v69;
      (*(void (**)(char *, char *, uint64_t))(v74 + 16))(v69, v24, v18);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v54 + 56))(v55, 0, 1, v18);
      uint64_t v38 = v90;
      uint64_t v57 = (uint64_t)v70;
      unint64_t v58 = v75;
      uint64_t v56 = v71;
    }
    uint64_t v62 = v68;
    *(void *)&long long v92 = v56;
    *((void *)&v92 + 1) = v89;
    uint64_t v93 = v38;
    unint64_t v94 = v58;
    uint64_t v95 = sub_250EC29F0;
    uint64_t v96 = 0;
    uint64_t v63 = v73;
    sub_250EC3654(v55, v73 + *(void *)(*(void *)v73 + 112));
    uint64_t v64 = (uint64_t)v91;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v91, v24, v18);
    swift_unknownObjectRetain();
    sub_250EC9910(&v92, v64, v62, v72, 0, 1, v67, v57);
    (*(void (**)(char *, uint64_t))(v54 + 8))(v24, v18);
    swift_unknownObjectRelease();
    sub_250EC36E8(v57, v63 + *(void *)(*(void *)v63 + 96));
    return;
  }
LABEL_17:
  __break(1u);
}

void sub_250EC32E8()
{
  if (!qword_26B20E810)
  {
    sub_250EC337C();
    sub_250EC3444(&qword_26B20EF70, (void (*)(uint64_t))sub_250EC337C);
    unint64_t v0 = type metadata accessor for SleepingSampleBaselineCalculator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E810);
    }
  }
}

void sub_250EC337C()
{
  if (!qword_26B20EF78)
  {
    sub_250EC348C(255, &qword_26B20EF30, MEMORY[0x263F42EB8], MEMORY[0x263F8DAC8]);
    sub_250F0C470();
    sub_250EC35E0(&qword_26B20EF28);
    unint64_t v0 = sub_250F0D540();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF78);
    }
  }
}

uint64_t sub_250EC3444(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250EC348C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250EC34F0()
{
  if (!qword_26B20EBE8)
  {
    sub_250EC337C();
    sub_250EC3554();
    unint64_t v0 = type metadata accessor for SleepingWristTemperatureBaselineCalculator();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EBE8);
    }
  }
}

unint64_t sub_250EC3554()
{
  unint64_t result = qword_26B20EF68;
  if (!qword_26B20EF68)
  {
    sub_250EC337C();
    sub_250EC35E0(&qword_26B20EF20);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EF68);
  }
  return result;
}

uint64_t sub_250EC35E0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250EC348C(255, &qword_26B20EF30, MEMORY[0x263F42EB8], MEMORY[0x263F8DAC8]);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EC3654(uint64_t a1, uint64_t a2)
{
  sub_250EC348C(0, &qword_26B20E510, MEMORY[0x263F42D38], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EC36E8(uint64_t a1, uint64_t a2)
{
  sub_250EC32E8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EC374C()
{
  return sub_250F0C940();
}

uint64_t sub_250EC3770()
{
  return swift_getAtKeyPath();
}

uint64_t sub_250EC3778()
{
  return sub_250F0C910();
}

uint64_t sub_250EC379C()
{
  return sub_250F0C960();
}

uint64_t sub_250EC37C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 48);
}

uint64_t sub_250EC37CC()
{
  uint64_t result = sub_250F0C470();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0CA10();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

void *sub_250EC38BC(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v24 = *a2;
    *a1 = *a2;
    a1 = (void *)(v24 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_250F0C470();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[9];
    uint64_t v9 = a3[10];
    uint64_t v10 = *(void **)((char *)a2 + v8);
    *(void *)((char *)a1 + v8) = v10;
    uint64_t v11 = *(void **)((char *)a2 + v9);
    *(void *)((char *)a1 + v9) = v11;
    uint64_t v12 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *((unsigned char *)a1 + v12) = *((unsigned char *)a2 + v12);
    uint64_t v13 = a3[13];
    uint64_t v14 = a3[14];
    id v15 = *(void **)((char *)a2 + v13);
    *(void *)((char *)a1 + v13) = v15;
    *(void *)((char *)a1 + v14) = *(void *)((char *)a2 + v14);
    uint64_t v16 = a3[15];
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    uint64_t v19 = sub_250F0CA10();
    uint64_t v20 = *(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16);
    id v21 = v10;
    id v22 = v11;
    id v23 = v15;
    swift_bridgeObjectRetain();
    v20(v17, v18, v19);
  }
  return a1;
}

uint64_t sub_250EC3A30(uint64_t a1, int *a2)
{
  uint64_t v4 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);

  swift_bridgeObjectRelease();
  uint64_t v5 = a1 + a2[15];
  uint64_t v6 = sub_250F0CA10();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_250EC3B08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = a3[10];
  uint64_t v9 = *(void **)(a2 + v7);
  *(void *)(a1 + v7) = v9;
  uint64_t v10 = *(void **)(a2 + v8);
  *(void *)(a1 + v8) = v10;
  uint64_t v11 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[13];
  uint64_t v13 = a3[14];
  uint64_t v14 = *(void **)(a2 + v12);
  *(void *)(a1 + v12) = v14;
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  uint64_t v15 = a3[15];
  uint64_t v16 = a1 + v15;
  uint64_t v17 = a2 + v15;
  uint64_t v18 = sub_250F0CA10();
  uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 16);
  id v20 = v9;
  id v21 = v10;
  id v22 = v14;
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  return a1;
}

uint64_t sub_250EC3C2C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = *(void **)(a2 + v7);
  uint64_t v9 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = v8;
  id v10 = v8;

  uint64_t v11 = a3[10];
  uint64_t v12 = *(void **)(a2 + v11);
  uint64_t v13 = *(void **)(a1 + v11);
  *(void *)(a1 + v11) = v12;
  id v14 = v12;

  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + a3[12]) = *(unsigned char *)(a2 + a3[12]);
  uint64_t v15 = a3[13];
  uint64_t v16 = *(void **)(a2 + v15);
  uint64_t v17 = *(void **)(a1 + v15);
  *(void *)(a1 + v15) = v16;
  id v18 = v16;

  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[15];
  uint64_t v20 = a1 + v19;
  uint64_t v21 = a2 + v19;
  uint64_t v22 = sub_250F0CA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 24))(v20, v21, v22);
  return a1;
}

uint64_t sub_250EC3D60(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[10];
  *(void *)(a1 + a3[9]) = *(void *)(a2 + a3[9]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  uint64_t v8 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[15];
  uint64_t v11 = a1 + v10;
  uint64_t v12 = a2 + v10;
  uint64_t v13 = sub_250F0CA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 32))(v11, v12, v13);
  return a1;
}

uint64_t sub_250EC3E54(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0C470();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[9];
  uint64_t v8 = *(void **)(a1 + v7);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);

  uint64_t v9 = a3[10];
  uint64_t v10 = *(void **)(a1 + v9);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);

  uint64_t v11 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(unsigned char *)(a1 + v11) = *(unsigned char *)(a2 + v11);
  uint64_t v12 = a3[13];
  uint64_t v13 = *(void **)(a1 + v12);
  *(void *)(a1 + v12) = *(void *)(a2 + v12);

  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  swift_bridgeObjectRelease();
  uint64_t v14 = a3[15];
  uint64_t v15 = a1 + v14;
  uint64_t v16 = a2 + v14;
  uint64_t v17 = sub_250F0CA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 40))(v15, v16, v17);
  return a1;
}

uint64_t sub_250EC3F70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250EC3F84);
}

uint64_t sub_250EC3F84(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0C470();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 36));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
  else
  {
    uint64_t v11 = sub_250F0CA10();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 48);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a3 + 60);
    return v12(v14, a2, v13);
  }
}

uint64_t sub_250EC40B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250EC40C4);
}

uint64_t sub_250EC40C4(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_250F0C470();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 36)) = (a2 - 1);
  }
  else
  {
    uint64_t v11 = sub_250F0CA10();
    uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56);
    uint64_t v13 = v11;
    uint64_t v14 = a1 + *(int *)(a4 + 60);
    return v12(v14, a2, a2, v13);
  }
  return result;
}

uint64_t type metadata accessor for SleepingSampleBaselineCalculator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_250EC4208(uint64_t *a1, char *a2, uint64_t a3)
{
  uint64_t v188 = a2;
  uint64_t v189 = a3;
  sub_250E9241C(0);
  uint64_t v5 = MEMORY[0x270FA5388](v4 - 8);
  char v171 = (char *)&v157 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v172 = (char *)&v157 - v7;
  sub_250E8E700();
  uint64_t v186 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  id v182 = (char *)&v157 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  unint64_t v180 = (char *)&v157 - v11;
  sub_250EC18D8(0);
  uint64_t v181 = v12;
  uint64_t v13 = MEMORY[0x270FA5388](v12);
  uint64_t v15 = (char *)&v157 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v13);
  uint64_t v177 = (uint64_t)&v157 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  double v179 = (char *)&v157 - v19;
  MEMORY[0x270FA5388](v18);
  uint64_t v187 = (uint64_t)&v157 - v20;
  sub_250EA31AC();
  uint64_t v193 = *(void **)(v21 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v21 - 8);
  uint64_t v24 = (char *)&v157 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  uint64_t v165 = (uint64_t)&v157 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v192 = (uint64_t)&v157 - v28;
  MEMORY[0x270FA5388](v27);
  os_log_type_t v190 = (void (*)(char *, uint64_t))((char *)&v157 - v29);
  uint64_t v30 = sub_250F0CE70();
  uint64_t v31 = *(void *)(v30 - 8);
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v34 = (char *)&v157 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = MEMORY[0x270FA5388](v32);
  uint64_t v169 = (char *)&v157 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  unint64_t v170 = (char *)&v157 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v41 = (char *)&v157 - v40;
  uint64_t v42 = MEMORY[0x270FA5388](v39);
  uint64_t v173 = (char *)&v157 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v176 = (char *)&v157 - v45;
  uint64_t v46 = MEMORY[0x270FA5388](v44);
  uint64_t v178 = (char *)&v157 - v47;
  uint64_t v48 = MEMORY[0x270FA5388](v46);
  uint64_t v183 = (char *)&v157 - v49;
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v191 = (char *)&v157 - v51;
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v54 = (char *)&v157 - v53;
  uint64_t v55 = MEMORY[0x270FA5388](v52);
  uint64_t v57 = (char *)&v157 - v56;
  MEMORY[0x270FA5388](v55);
  uint64_t v59 = (char *)&v157 - v58;
  uint64_t v60 = sub_250F0C9D0();
  uint64_t v61 = *(void *)(v189 + 16);
  if (!v61)
  {
    *a1 = v60;
    uint64_t v86 = *MEMORY[0x263F42EC8];
    uint64_t v87 = sub_250F0CA10();
    (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v87 - 8) + 104))(a1, v86, v87);
    return 0;
  }
  uint64_t v168 = v60;
  unint64_t v163 = v41;
  uint64_t v159 = v24;
  int v161 = v34;
  int v160 = v15;
  uint64_t v166 = a1;
  uint64_t v162 = v31;
  uint64_t v62 = v31;
  uint64_t v175 = v31;
  uint64_t v63 = v61;
  uint64_t v64 = v193;
  unint64_t v65 = (*((unsigned __int8 *)v64 + 80) + 32) & ~(unint64_t)*((unsigned __int8 *)v64 + 80);
  uint64_t v184 = v54;
  unint64_t v164 = v65;
  unint64_t v66 = v189 + v65;
  uint64_t v67 = v190;
  sub_250EC5228(v189 + v65, (uint64_t)v190, (uint64_t (*)(void))sub_250EA31AC);
  id v68 = *(void **)(v62 + 32);
  ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v68)(v57, v67, v30);
  uint64_t v185 = v59;
  ((void (*)(char *, char *, uint64_t))v68)(v59, v57, v30);
  uint64_t v167 = v63;
  uint64_t v158 = v64[9];
  uint64_t v69 = v66 + v158 * (v63 - 1);
  uint64_t v70 = v184;
  uint64_t v71 = v192;
  sub_250EC5228(v69, v192, (uint64_t (*)(void))sub_250EA31AC);
  uint64_t v192 = v62 + 32;
  uint64_t v193 = v68;
  ((void (*)(char *, uint64_t, uint64_t))v68)(v70, v71, v30);
  id v72 = v178;
  sub_250F0CDA0();
  uint64_t v73 = v183;
  sub_250F0CDC0();
  uint64_t v74 = v175;
  uint64_t v75 = v175 + 8;
  uint64_t v76 = *(void (**)(char *, uint64_t))(v175 + 8);
  v76(v72, v30);
  uint64_t v77 = sub_250E92C80();
  uint64_t v78 = v188;
  char v79 = sub_250F0CEF0();
  int64_t v82 = *(char **)(v74 + 16);
  uint64_t v81 = (char *)(v74 + 16);
  uint64_t v80 = v82;
  if (v79)
  {
    uint64_t v83 = v191;
    uint64_t v84 = v191;
    uint64_t v85 = v73;
  }
  else
  {
    uint64_t v85 = v78;
    uint64_t v83 = v191;
    uint64_t v84 = v191;
  }
  ((void (*)(char *, char *, uint64_t))v80)(v84, v85, v30);
  v76(v73, v30);
  uint64_t v88 = v185;
  uint64_t result = sub_250F0CF00();
  if ((result & 1) == 0)
  {
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  uint64_t v90 = v186;
  uint64_t v91 = *(int *)(v186 + 48);
  uint64_t v178 = (char *)v77;
  long long v92 = v180;
  uint64_t v93 = &v180[v91];
  ((void (*)(char *, char *, uint64_t))v80)(v180, v88, v30);
  uint64_t v174 = v93;
  ((void (*)(char *, char *, uint64_t))v80)(v93, v83, v30);
  unint64_t v94 = v182;
  uint64_t v95 = &v182[*(int *)(v90 + 48)];
  ((void (*)(char *, char *, uint64_t))v80)(v182, v92, v30);
  ((void (*)(char *, char *, uint64_t))v80)(v95, v93, v30);
  uint64_t v96 = (uint64_t)v179;
  os_log_type_t v190 = v76;
  uint64_t v183 = v81;
  uint64_t v97 = (void (*)(char *, char *, uint64_t))v193;
  ((void (*)(char *, char *, uint64_t))v193)(v179, v94, v30);
  v190(v95, v30);
  uint64_t v98 = &v94[*(int *)(v90 + 48)];
  v97(v94, v92, v30);
  v97(v98, v174, v30);
  v97((char *)(v96 + *(int *)(v181 + 36)), v98, v30);
  uint64_t v99 = (uint64_t (*)(char *, uint64_t))v190;
  v190(v94, v30);
  uint64_t v101 = v187;
  uint64_t v100 = (uint64_t)v188;
  sub_250EC58C0(v96, v187, (uint64_t (*)(void))sub_250EC18D8);
  LOBYTE(v98) = sub_250F0CF00();
  uint64_t v102 = v176;
  uint64_t v174 = v80;
  ((void (*)(char *, uint64_t, uint64_t))v80)(v176, v100, v30);
  uint64_t v103 = v101;
  uint64_t v104 = v177;
  sub_250EC5228(v103, v177, (uint64_t (*)(void))sub_250EC18D8);
  if (v98) {
    uint64_t v105 = sub_250F0CEE0() << 63 >> 63;
  }
  else {
    uint64_t v105 = 0;
  }
  uint64_t v106 = v184;
  sub_250EC5860(v104, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v107 = v99(v102, v30);
  uint64_t v108 = v105 + v167;
  id v109 = v185;
  if (v108 < v168)
  {
    uint64_t v110 = v168;
    v99(v191, v30);
    v99(v106, v30);
    v99(v109, v30);
    sub_250EC57F0();
    uint64_t v112 = *(int *)(v111 + 48);
    uint64_t v113 = *(int *)(v111 + 64);
    uint64_t v114 = (uint64_t)v166;
    sub_250EC58C0(v187, (uint64_t)v166, (uint64_t (*)(void))sub_250EC18D8);
    *(void *)(v114 + v112) = v108;
    *(void *)(v114 + v113) = v110;
    uint64_t v115 = *MEMORY[0x263F42EC0];
    uint64_t v116 = sub_250F0CA10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v116 - 8) + 104))(v114, v115, v116);
    return 0;
  }
  uint64_t v194 = 0;
  MEMORY[0x270FA5388](v107);
  *(&v157 - 4) = v100;
  *(&v157 - 3) = (uint64_t)&v194;
  *(&v157 - 2) = v117;
  uint64_t v118 = swift_bridgeObjectRetain();
  uint64_t v119 = sub_250EC5528(v118, (uint64_t (*)(char *, double))sub_250EC54D8);
  swift_bridgeObjectRelease();
  unint64_t v120 = *(void *)(v119 + 16);
  uint64_t v189 = v119;
  uint64_t v157 = v75;
  if (v120)
  {
    uint64_t v121 = v119 + v164;
    uint64_t v122 = v165;
    sub_250EC5228(v121, v165, (uint64_t (*)(void))sub_250EA31AC);
    uint64_t v123 = (uint64_t)v172;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v172, v122, v30);
    uint64_t v124 = v175;
    char v125 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56);
    v125(v123, 0, 1, v30);
  }
  else
  {
    uint64_t v124 = v175;
    char v125 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v175 + 56);
    uint64_t v123 = (uint64_t)v172;
    v125((uint64_t)v172, 1, 1, v30);
  }
  os_signpost_type_t v126 = v163;
  ((void (*)(char *, char *, uint64_t))v174)(v163, v109, v30);
  uint64_t v127 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v124 + 48);
  if (v127(v123, 1, v30) != 1)
  {
    v99(v126, v30);
    uint64_t v128 = v173;
    uint64_t result = ((uint64_t (*)(char *, uint64_t, uint64_t))v193)(v173, v123, v30);
    uint64_t v129 = v189;
    if (v120) {
      goto LABEL_18;
    }
LABEL_21:
    uint64_t v133 = 1;
    uint64_t v132 = (uint64_t)v171;
    goto LABEL_22;
  }
  uint64_t v128 = v173;
  ((void (*)(char *, char *, uint64_t))v193)(v173, v126, v30);
  uint64_t result = sub_250EC5860(v123, (uint64_t (*)(void))sub_250E9241C);
  uint64_t v129 = v189;
  if (!v120) {
    goto LABEL_21;
  }
LABEL_18:
  if (v120 > *(void *)(v129 + 16))
  {
LABEL_30:
    __break(1u);
    return result;
  }
  uint64_t v130 = v129 + v164 + (v120 - 1) * v158;
  uint64_t v131 = (uint64_t)v159;
  sub_250EC5228(v130, (uint64_t)v159, (uint64_t (*)(void))sub_250EA31AC);
  uint64_t v132 = (uint64_t)v171;
  ((void (*)(char *, uint64_t, uint64_t))v193)(v171, v131, v30);
  uint64_t v133 = 0;
LABEL_22:
  v125(v132, v133, 1, v30);
  uint64_t v134 = v161;
  ((void (*)(char *, char *, uint64_t))v174)(v161, v191, v30);
  unsigned int v135 = v127(v132, 1, v30);
  uint64_t v136 = v170;
  if (v135 == 1)
  {
    uint64_t v137 = v169;
    ((void (*)(char *, char *, uint64_t))v193)(v169, v134, v30);
    sub_250EC5860(v132, (uint64_t (*)(void))sub_250E9241C);
    id v138 = v190;
  }
  else
  {
    id v138 = v190;
    v190(v134, v30);
    uint64_t v137 = v169;
    ((void (*)(char *, uint64_t, uint64_t))v193)(v169, v132, v30);
  }
  sub_250F0CDD0();
  v138(v137, v30);
  char v139 = sub_250F0CF00();
  sub_250EC5860(v187, (uint64_t (*)(void))sub_250EC18D8);
  v138(v191, v30);
  v138(v184, v30);
  uint64_t result = ((uint64_t (*)(char *, uint64_t))v138)(v185, v30);
  if ((v139 & 1) == 0) {
    goto LABEL_29;
  }
  uint64_t v140 = v186;
  os_signpost_type_t v141 = v180;
  uint64_t v142 = &v180[*(int *)(v186 + 48)];
  uint64_t v143 = (void (*)(char *, char *, uint64_t))v193;
  ((void (*)(char *, char *, uint64_t))v193)(v180, v128, v30);
  v143(v142, v136, v30);
  uint64_t v144 = v182;
  uint64_t v145 = &v182[*(int *)(v140 + 48)];
  char v146 = v174;
  ((void (*)(char *, char *, uint64_t))v174)(v182, v141, v30);
  ((void (*)(char *, char *, uint64_t))v146)(v145, v142, v30);
  uint64_t v147 = (uint64_t)v179;
  v143(v179, v144, v30);
  uint64_t v148 = v190;
  v190(v145, v30);
  uint64_t v149 = &v144[*(int *)(v186 + 48)];
  v143(v144, v141, v30);
  v143(v149, v142, v30);
  v143((char *)(v147 + *(int *)(v181 + 36)), v149, v30);
  v148(v144, v30);
  uint64_t v150 = (uint64_t)v160;
  sub_250EC58C0(v147, (uint64_t)v160, (uint64_t (*)(void))sub_250EC18D8);
  sub_250EC5784();
  uint64_t v152 = *(int *)(v151 + 48);
  uint64_t v153 = v150;
  uint64_t v154 = (uint64_t)v166;
  sub_250EC58C0(v153, (uint64_t)v166, (uint64_t (*)(void))sub_250EC18D8);
  *(void *)(v154 + v152) = v194;
  uint64_t v155 = *MEMORY[0x263F42ED0];
  uint64_t v156 = sub_250F0CA10();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v156 - 8) + 104))(v154, v155, v156);
  return v189;
}

uint64_t sub_250EC5228(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_250EC5290(uint64_t *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v23 = a2;
  uint64_t v5 = sub_250F0CE70();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v23 - v10;
  sub_250F0C420();
  sub_250F0C9B0();
  sub_250F0CDF0();
  sub_250E92C80();
  char v12 = sub_250F0CEE0();
  uint64_t v13 = *(void (**)(char *, uint64_t))(v6 + 8);
  v13(v9, v5);
  v13(v11, v5);
  if ((v12 & 1) != 0 || (v14 = *a1, v14 >= sub_250F0C9C0()) || (uint64_t v15 = (void *)sub_250F0C460()) == 0)
  {
    sub_250EA31AC();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a3, 1, 1, v22);
  }
  else
  {
    uint64_t v16 = v15;
    objc_msgSend(v15, sel_doubleValueForUnit_, v23);
    uint64_t v18 = v17;

    if (__OFADD__(*a1, 1))
    {
      __break(1u);
    }
    else
    {
      ++*a1;
      sub_250EA31AC();
      uint64_t v20 = v19;
      uint64_t v21 = *(int *)(v19 + 48);
      sub_250F0C420();
      *(void *)(a3 + v21) = v18;
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a3, 0, 1, v20);
    }
  }
}

uint64_t sub_250EC54D8()
{
  unint64_t v1 = *(uint64_t **)(v0 + 24);
  uint64_t v2 = *(void *)(v0 + 32);
  uint64_t result = sub_250F0CDB0();
  uint64_t v4 = *v1;
  char v5 = result | (*v1 < v2);
  if (!(result & 1 | (*v1 < v2))) {
    return v5 & 1;
  }
  BOOL v6 = __OFADD__(v4, 1);
  uint64_t v7 = v4 + 1;
  if (!v6)
  {
    *unint64_t v1 = v7;
    return v5 & 1;
  }
  __break(1u);
  return result;
}

uint64_t sub_250EC5528(uint64_t a1, uint64_t (*a2)(char *, double))
{
  sub_250EA31AC();
  uint64_t v6 = v5;
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v23 = (uint64_t)v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)v19 - v10;
  uint64_t result = MEMORY[0x263F8EE78];
  uint64_t v24 = MEMORY[0x263F8EE78];
  uint64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    v19[1] = v2;
    uint64_t v14 = *(void *)(v9 + 72);
    unint64_t v21 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
    uint64_t v15 = a1 + v21;
    uint64_t v16 = MEMORY[0x263F8EE78];
    uint64_t v22 = v6;
    uint64_t v20 = v14;
    do
    {
      sub_250EC5228(v15, (uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
      if (a2(v11, *(double *)&v11[*(int *)(v6 + 48)]))
      {
        sub_250EC58C0((uint64_t)v11, v23, (uint64_t (*)(void))sub_250EA31AC);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_250EA2730(0, *(void *)(v16 + 16) + 1, 1);
        }
        uint64_t v16 = v24;
        unint64_t v18 = *(void *)(v24 + 16);
        unint64_t v17 = *(void *)(v24 + 24);
        if (v18 >= v17 >> 1)
        {
          sub_250EA2730(v17 > 1, v18 + 1, 1);
          uint64_t v16 = v24;
        }
        *(void *)(v16 + 16) = v18 + 1;
        uint64_t v14 = v20;
        sub_250EC58C0(v23, v16 + v21 + v18 * v20, (uint64_t (*)(void))sub_250EA31AC);
        uint64_t v6 = v22;
      }
      else
      {
        sub_250EC5860((uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
      }
      v15 += v14;
      --v13;
    }
    while (v13);
    return v24;
  }
  return result;
}

void sub_250EC5784()
{
  if (!qword_26B20EEB0)
  {
    sub_250EC18D8(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EEB0);
    }
  }
}

void sub_250EC57F0()
{
  if (!qword_26B20EEA8)
  {
    sub_250EC18D8(255);
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    if (!v1) {
      atomic_store(TupleTypeMetadata3, (unint64_t *)&qword_26B20EEA8);
    }
  }
}

uint64_t sub_250EC5860(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250EC58C0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250EC5928(uint64_t a1)
{
  uint64_t v1 = a1 + 16;
  swift_beginAccess();
  uint64_t v2 = MEMORY[0x25338ECE0](v1);
  if (v2)
  {
    uint64_t v3 = (void *)v2;
    sub_250EC597C();
  }
}

uint64_t sub_250EC597C()
{
  uint64_t v1 = v0;
  swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0CCF0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (uint64_t *)((char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v10 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  *uint64_t v9 = v10;
  (*(void (**)(void *, void, uint64_t))(v7 + 104))(v9, *MEMORY[0x263F8F0E0], v6);
  id v11 = v10;
  LOBYTE(v10) = sub_250F0CD00();
  uint64_t result = (*(uint64_t (**)(void *, uint64_t))(v7 + 8))(v9, v6);
  if (v10)
  {
    sub_250F0CC90();
    uint64_t v13 = sub_250F0CCA0();
    os_log_type_t v14 = sub_250F0D1D0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v16 = swift_slowAlloc();
      v27[0] = v16;
      uint64_t v25 = v2;
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v17 = sub_250F0D7B0();
      uint64_t v26 = sub_250E8BE44(v17, v18, v27);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v13, v14, "[%{public}s] requesting widgets reload", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v16, -1, -1);
      MEMORY[0x25338EC30](v15, -1, -1);

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v25);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    }
    uint64_t v19 = *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader + 24);
    uint64_t v20 = *(void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader + 32);
    __swift_project_boxed_opaque_existential_1((void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader), v19);
    unint64_t v21 = (void *)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadReasons);
    swift_beginAccess();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t, uint64_t))(v20 + 8);
    uint64_t v23 = swift_bridgeObjectRetain();
    v22(v23, v19, v20);
    swift_bridgeObjectRelease();
    *unint64_t v21 = MEMORY[0x263F8EE88];
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_250EC5CD8()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = *(void *)&v0[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider + 8];
  swift_getObjectType();
  uint64_t v3 = *(void (**)(void))(v2 + 16);
  swift_unknownObjectRetain();
  uint64_t v4 = v0;
  v3();
  swift_unknownObjectRelease();

  v6.receiver = v4;
  v6.super_class = ObjectType;
  return objc_msgSendSuper2(&v6, sel_dealloc);
}

id sub_250EC5EE4(unsigned __int8 *a1)
{
  uint64_t v2 = v1;
  swift_getObjectType();
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_250F0CCF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (uint64_t *)((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *a1;
  uint64_t v13 = *(void **)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  *id v11 = v13;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v14 = v13;
  LOBYTE(v13) = sub_250F0CD00();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v13)
  {
    sub_250F0CC90();
    uint64_t v16 = sub_250F0CCA0();
    os_log_type_t v17 = sub_250F0D1D0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v26 = v5;
      uint64_t v27 = v4;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      v29[0] = v19;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v20 = sub_250F0D7B0();
      uint64_t v28 = sub_250E8BE44(v20, v21, v29);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2082;
      unint64_t v22 = 0xD000000000000018;
      unint64_t v23 = 0x8000000250F11C80;
      if (v12 != 1)
      {
        unint64_t v22 = 0xD00000000000001ALL;
        unint64_t v23 = 0x8000000250F11C60;
      }
      if (v12) {
        uint64_t v24 = v22;
      }
      else {
        uint64_t v24 = 0xD000000000000010;
      }
      if (v12) {
        unint64_t v25 = v23;
      }
      else {
        unint64_t v25 = 0x8000000250F11CA0;
      }
      uint64_t v28 = sub_250E8BE44(v24, v25, v29);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v16, v17, "[%{public}s] running reload operation with reason: %{public}s", (uint8_t *)v18, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v19, -1, -1);
      MEMORY[0x25338EC30](v18, -1, -1);

      (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v27);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
    swift_beginAccess();
    sub_250EC69D0(&v28, v12);
    swift_endAccess();
    id result = *(id *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation);
    if (result) {
      return objc_msgSend(result, sel_execute);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_250EC62B8(void *a1)
{
  uint64_t v2 = v1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_250F0CCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v9 = sub_250F0CCA0();
  os_log_type_t v10 = sub_250F0D1D0();
  if (os_log_type_enabled(v9, v10))
  {
    uint64_t v26 = v5;
    uint64_t v11 = swift_slowAlloc();
    uint64_t v27 = a1;
    uint64_t v12 = (uint8_t *)v11;
    uint64_t v13 = swift_slowAlloc();
    aBlock[0] = v13;
    *(_DWORD *)uint64_t v12 = 136446210;
    unint64_t v25 = v12 + 4;
    uint64_t v14 = sub_250F0D7B0();
    uint64_t v28 = sub_250E8BE44(v14, v15, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v9, v10, "[%{public}s] profileDidBecomeReady", v12, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v13, -1, -1);
    uint64_t v16 = v12;
    a1 = v27;
    MEMORY[0x25338EC30](v16, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v26);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  uint64_t v17 = *(void *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider + 8);
  uint64_t v18 = swift_getObjectType();
  uint64_t v19 = *(void *)(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  (*(void (**)(uint64_t, _UNKNOWN **, uint64_t, uint64_t, uint64_t))(v17 + 8))(v2, &off_2701F0768, v19, v18, v17);
  id v20 = objc_msgSend(a1, sel_database);
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = ObjectType;
  aBlock[4] = (uint64_t)sub_250EC84F4;
  aBlock[5] = v22;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_250EE29A8;
  uint64_t aBlock[3] = (uint64_t)&block_descriptor_5;
  unint64_t v23 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v20, sel_performWhenDataProtectedByFirstUnlockIsAvailableOnQueue_block_, v19, v23);
  _Block_release(v23);

  uint64_t v24 = *(void (**)(void))(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_didBecomeReady);
  if (v24) {
    v24();
  }
}

void sub_250EC661C(uint64_t a1)
{
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = a1 + 16;
  sub_250F0CC90();
  uint64_t v7 = sub_250F0CCA0();
  os_log_type_t v8 = sub_250F0D1D0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v17 = v2;
    os_log_type_t v10 = (uint8_t *)v9;
    uint64_t v11 = swift_slowAlloc();
    v19[0] = v11;
    *(_DWORD *)os_log_type_t v10 = 136446210;
    uint64_t v12 = sub_250F0D7B0();
    uint64_t v18 = sub_250E8BE44(v12, v13, v19);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v7, v8, "[%{public}s] first unlock occurred", v10, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v11, -1, -1);
    MEMORY[0x25338EC30](v10, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v17);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  swift_beginAccess();
  uint64_t v14 = MEMORY[0x25338ECE0](v6);
  if (v14)
  {
    unint64_t v15 = (void *)v14;
    LOBYTE(v18) = 0;
    sub_250EC5EE4((unsigned __int8 *)&v18);
  }
}

uint64_t type metadata accessor for BalanceWidgetSchedulingManager()
{
  return self;
}

id sub_250EC6904()
{
  return sub_250EC80F4("[%{public}s] sleeping sample cache evicted from samples added", 1);
}

id sub_250EC6928()
{
  return sub_250EC80F4("[%{public}s] sleeping samples removed", 2);
}

unint64_t sub_250EC694C(uint64_t a1, uint64_t a2)
{
  sub_250F0D290();
  unint64_t result = sub_250F0D3B0();
  *(void *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(void *)(*(void *)(a2 + 48) + 8 * result) = a1;
  ++*(void *)(a2 + 16);
  return result;
}

uint64_t sub_250EC69D0(unsigned char *a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_250F0D710();
  sub_250F0D720();
  uint64_t v6 = sub_250F0D730();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v13 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_250EC75B4(a2, v8, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v13;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  if (*(unsigned __int8 *)(v9 + v8) != a2)
  {
    uint64_t v10 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v9 + v8) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v8);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_250EC6AF0(void *a1, void *a2)
{
  return sub_250EC6B38(a1, a2, (unint64_t *)&qword_26B20E378, 0x263F0A6E8, (unint64_t *)&qword_269B10DA8, (unint64_t *)&qword_26B20E380);
}

uint64_t sub_250EC6B14(void *a1, void *a2)
{
  return sub_250EC6B38(a1, a2, &qword_26B20F250, 0x263F0A598, (unint64_t *)&unk_26B20F298, (unint64_t *)&unk_26B20F258);
}

uint64_t sub_250EC6B38(void *a1, void *a2, unint64_t *a3, uint64_t a4, unint64_t *a5, unint64_t *a6)
{
  uint64_t v11 = v6;
  uint64_t v14 = *v6;
  if ((*v6 & 0xC000000000000001) != 0)
  {
    if (v14 < 0) {
      uint64_t v15 = *v6;
    }
    else {
      uint64_t v15 = v14 & 0xFFFFFFFFFFFFFF8;
    }
    swift_bridgeObjectRetain();
    id v16 = a2;
    uint64_t v17 = sub_250F0D3E0();

    if (v17)
    {
      swift_bridgeObjectRelease();

      sub_250E8D194(0, a3);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v42;
      swift_unknownObjectRelease();
      return 0;
    }
    uint64_t result = sub_250F0D3D0();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    uint64_t v29 = sub_250EC6E48(v15, result + 1, a5, a3, a4, a6);
    uint64_t v43 = v29;
    unint64_t v30 = *(void *)(v29 + 16);
    if (*(void *)(v29 + 24) <= v30)
    {
      uint64_t v35 = a5;
      uint64_t v36 = v30 + 1;
      id v37 = v16;
      sub_250EC7318(v36, v35, a3, a4, a6);
      uint64_t v31 = v43;
    }
    else
    {
      uint64_t v31 = v29;
      id v32 = v16;
    }
    sub_250EC694C((uint64_t)v16, v31);
    *uint64_t v11 = v31;
    swift_bridgeObjectRelease();
    *a1 = v16;
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_250F0D290();
    uint64_t v20 = -1 << *(unsigned char *)(v14 + 32);
    unint64_t v21 = v19 & ~v20;
    uint64_t v40 = a4;
    if ((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
    {
      sub_250E8D194(0, a3);
      id v22 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
      char v23 = sub_250F0D2A0();

      if (v23)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        uint64_t v27 = *(void **)(*(void *)(*v6 + 48) + 8 * v21);
        *a1 = v27;
        id v28 = v27;
        return 0;
      }
      uint64_t v24 = ~v20;
      while (1)
      {
        unint64_t v21 = (v21 + 1) & v24;
        if (((*(void *)(v14 + 56 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          break;
        }
        id v25 = *(id *)(*(void *)(v14 + 48) + 8 * v21);
        char v26 = sub_250F0D2A0();

        if (v26) {
          goto LABEL_12;
        }
      }
    }
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = *v6;
    *uint64_t v6 = 0x8000000000000000;
    id v34 = a2;
    sub_250EC7704((uint64_t)v34, v21, isUniquelyReferenced_nonNull_native, a5, a3, v40, a6);
    *uint64_t v6 = v44;
    swift_bridgeObjectRelease();
    *a1 = v34;
  }
  return 1;
}

uint64_t sub_250EC6E24(uint64_t a1, uint64_t a2)
{
  return sub_250EC6E48(a1, a2, (unint64_t *)&qword_269B10DA8, (unint64_t *)&qword_26B20E378, 0x263F0A6E8, (unint64_t *)&qword_26B20E380);
}

uint64_t sub_250EC6E48(uint64_t a1, uint64_t a2, unint64_t *a3, unint64_t *a4, uint64_t a5, unint64_t *a6)
{
  if (a2)
  {
    sub_250EC84FC(0, a3, a4, a5, a6);
    uint64_t v10 = sub_250F0D450();
    uint64_t v23 = v10;
    sub_250F0D3C0();
    if (sub_250F0D3F0())
    {
      sub_250E8D194(0, a4);
      do
      {
        swift_dynamicCast();
        uint64_t v10 = v23;
        unint64_t v17 = *(void *)(v23 + 16);
        if (*(void *)(v23 + 24) <= v17)
        {
          sub_250EC7318(v17 + 1, a3, a4, a5, a6);
          uint64_t v10 = v23;
        }
        uint64_t result = sub_250F0D290();
        uint64_t v12 = v10 + 56;
        uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
        unint64_t v14 = result & ~v13;
        unint64_t v15 = v14 >> 6;
        if (((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6))) != 0)
        {
          unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 56 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          char v18 = 0;
          unint64_t v19 = (unint64_t)(63 - v13) >> 6;
          do
          {
            if (++v15 == v19 && (v18 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            BOOL v20 = v15 == v19;
            if (v15 == v19) {
              unint64_t v15 = 0;
            }
            v18 |= v20;
            uint64_t v21 = *(void *)(v12 + 8 * v15);
          }
          while (v21 == -1);
          unint64_t v16 = __clz(__rbit64(~v21)) + (v15 << 6);
        }
        *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
        *(void *)(*(void *)(v10 + 48) + 8 * v16) = v22;
        ++*(void *)(v10 + 16);
      }
      while (sub_250F0D3F0());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x263F8EE88];
  }
  return v10;
}

uint64_t sub_250EC7070()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_250EC83D4();
  uint64_t result = sub_250F0D440();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (void *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                uint64_t v26 = 1 << *(unsigned char *)(v2 + 32);
                if (v26 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v26 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v6 = -1 << v26;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
      sub_250F0D710();
      sub_250F0D720();
      uint64_t result = sub_250F0D730();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v1 = v4;
  return result;
}

uint64_t sub_250EC7318(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_250EC84FC(0, a2, a3, a4, a5);
  uint64_t v8 = sub_250F0D440();
  uint64_t v9 = v8;
  if (*(void *)(v7 + 16))
  {
    uint64_t v33 = v5;
    uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
    uint64_t v11 = (void *)(v7 + 56);
    if (v10 < 64) {
      uint64_t v12 = ~(-1 << v10);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v7 + 56);
    int64_t v14 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v15 = v8 + 56;
    uint64_t result = swift_retain();
    int64_t v17 = 0;
    while (1)
    {
      if (v13)
      {
        unint64_t v19 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v20 = v19 | (v17 << 6);
      }
      else
      {
        int64_t v21 = v17 + 1;
        if (__OFADD__(v17, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v21 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = v11[v21];
        ++v17;
        if (!v22)
        {
          int64_t v17 = v21 + 1;
          if (v21 + 1 >= v14) {
            goto LABEL_33;
          }
          unint64_t v22 = v11[v17];
          if (!v22)
          {
            int64_t v17 = v21 + 2;
            if (v21 + 2 >= v14) {
              goto LABEL_33;
            }
            unint64_t v22 = v11[v17];
            if (!v22)
            {
              int64_t v23 = v21 + 3;
              if (v23 >= v14)
              {
LABEL_33:
                swift_release();
                uint64_t v6 = v33;
                uint64_t v32 = 1 << *(unsigned char *)(v7 + 32);
                if (v32 > 63) {
                  bzero((void *)(v7 + 56), ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v11 = -1 << v32;
                }
                *(void *)(v7 + 16) = 0;
                break;
              }
              unint64_t v22 = v11[v23];
              if (!v22)
              {
                while (1)
                {
                  int64_t v17 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    goto LABEL_39;
                  }
                  if (v17 >= v14) {
                    goto LABEL_33;
                  }
                  unint64_t v22 = v11[v17];
                  ++v23;
                  if (v22) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v23;
            }
          }
        }
LABEL_23:
        unint64_t v13 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v7 + 48) + 8 * v20);
      uint64_t result = sub_250F0D290();
      uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v15 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
      ++*(void *)(v9 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v6 = v9;
  return result;
}

uint64_t sub_250EC75B4(uint64_t result, unint64_t a2, char a3)
{
  int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_250EC7070();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_250EC78BC();
      goto LABEL_14;
    }
    sub_250EC7C04();
  }
  uint64_t v8 = *v3;
  sub_250F0D710();
  sub_250F0D720();
  uint64_t result = sub_250F0D730();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(unsigned __int8 *)(v10 + a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_250F0D6B0();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v10 + a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v12 + 48) + a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void sub_250EC7704(uint64_t a1, unint64_t a2, char a3, unint64_t *a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  unint64_t v11 = *(void *)(*v7 + 16);
  unint64_t v12 = *(void *)(*v7 + 24);
  if (v12 > v11 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v13 = v11 + 1;
  if (a3)
  {
    sub_250EC7318(v13, a4, a5, a6, a7);
  }
  else
  {
    if (v12 > v11)
    {
      sub_250EC7A4C(a4, a5, a6, a7);
      goto LABEL_14;
    }
    sub_250EC7E7C(v13, a4, a5, a6, a7);
  }
  uint64_t v14 = *v7;
  uint64_t v15 = sub_250F0D290();
  uint64_t v16 = -1 << *(unsigned char *)(v14 + 32);
  a2 = v15 & ~v16;
  if ((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_250E8D194(0, a5);
    id v17 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
    char v18 = sub_250F0D2A0();

    if (v18)
    {
LABEL_13:
      sub_250F0D6B0();
      __break(1u);
    }
    else
    {
      uint64_t v19 = ~v16;
      while (1)
      {
        a2 = (a2 + 1) & v19;
        if (((*(void *)(v14 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        id v20 = *(id *)(*(void *)(v14 + 48) + 8 * a2);
        char v21 = sub_250F0D2A0();

        if (v21) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v22 = *v7;
  *(void *)(*v7 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v22 + 48) + 8 * a2) = a1;
  uint64_t v23 = *(void *)(v22 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v25;
  }
}

void *sub_250EC78BC()
{
  uint64_t v1 = v0;
  sub_250EC83D4();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_250F0D430();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_250EC7A4C(unint64_t *a1, unint64_t *a2, uint64_t a3, unint64_t *a4)
{
  int v5 = v4;
  sub_250EC84FC(0, a1, a2, a3, a4);
  uint64_t v6 = *v4;
  uint64_t v7 = sub_250F0D430();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
LABEL_28:
    id result = (id)swift_release();
    uint64_t *v5 = v8;
    return result;
  }
  id result = (id)(v7 + 56);
  uint64_t v10 = v6 + 56;
  unint64_t v11 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v11) {
    id result = memmove(result, (const void *)(v6 + 56), 8 * v11);
  }
  int64_t v13 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v14 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & *(void *)(v6 + 56);
  int64_t v17 = (unint64_t)(v14 + 63) >> 6;
  while (1)
  {
    if (v16)
    {
      unint64_t v18 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v22);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v22 + 1;
      if (v22 + 1 >= v17) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v10 + 8 * v13);
      if (!v23)
      {
        int64_t v13 = v22 + 2;
        if (v22 + 2 >= v17) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v10 + 8 * v13);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v16 = (v23 - 1) & v23;
    unint64_t v19 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_12:
    uint64_t v20 = 8 * v19;
    char v21 = *(void **)(*(void *)(v6 + 48) + v20);
    *(void *)(*(void *)(v8 + 48) + v20) = v21;
    id result = v21;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v17) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v10 + 8 * v24);
  if (v23)
  {
    int64_t v13 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v13 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v13 >= v17) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v10 + 8 * v13);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_250EC7C04()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_250EC83D4();
  uint64_t result = sub_250F0D440();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    char v18 = *(unsigned char *)(*(void *)(v2 + 48) + v14);
    sub_250F0D710();
    sub_250F0D720();
    uint64_t result = sub_250F0D730();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(*(void *)(v4 + 48) + v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_250EC7E7C(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  uint64_t v6 = v5;
  uint64_t v7 = *v5;
  sub_250EC84FC(0, a2, a3, a4, a5);
  uint64_t v8 = sub_250F0D440();
  uint64_t v9 = v8;
  if (!*(void *)(v7 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v6 = v9;
    return result;
  }
  uint64_t v32 = v5;
  uint64_t v10 = 1 << *(unsigned char *)(v7 + 32);
  uint64_t v11 = v7 + 56;
  if (v10 < 64) {
    uint64_t v12 = ~(-1 << v10);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v7 + 56);
  int64_t v14 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v15 = v8 + 56;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v19 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v20 = v19 | (v17 << 6);
      goto LABEL_24;
    }
    int64_t v21 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v21 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v21);
    ++v17;
    if (!v22)
    {
      int64_t v17 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v11 + 8 * v17);
      if (!v22)
      {
        int64_t v17 = v21 + 2;
        if (v21 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v22 = *(void *)(v11 + 8 * v17);
        if (!v22) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v20 = __clz(__rbit64(v22)) + (v17 << 6);
LABEL_24:
    id v24 = *(id *)(*(void *)(v7 + 48) + 8 * v20);
    uint64_t result = sub_250F0D290();
    uint64_t v25 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v26) & ~*(void *)(v15 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v15 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v18 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    *(void *)(*(void *)(v9 + 48) + 8 * v18) = v24;
    ++*(void *)(v9 + 16);
  }
  int64_t v23 = v21 + 3;
  if (v23 >= v14)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v6 = v32;
    goto LABEL_35;
  }
  unint64_t v22 = *(void *)(v11 + 8 * v23);
  if (v22)
  {
    int64_t v17 = v23;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v17 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v22 = *(void *)(v11 + 8 * v17);
    ++v23;
    if (v22) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

id sub_250EC80F4(const char *a1, int a2)
{
  LODWORD(v3) = a2;
  uint64_t v25 = a1;
  uint64_t v4 = v2;
  swift_getObjectType();
  uint64_t v26 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v7 = &v23[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_250F0CCF0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = *(void **)(v4 + OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue);
  *uint64_t v11 = v12;
  (*(void (**)(void *, void, uint64_t))(v9 + 104))(v11, *MEMORY[0x263F8F0E0], v8);
  id v13 = v12;
  char v14 = sub_250F0CD00();
  id result = (id)(*(uint64_t (**)(void *, uint64_t))(v9 + 8))(v11, v8);
  if (v14)
  {
    sub_250F0CC90();
    unint64_t v16 = sub_250F0CCA0();
    os_log_type_t v17 = sub_250F0D1D0();
    if (os_log_type_enabled(v16, v17))
    {
      unint64_t v18 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      int v24 = v3;
      uint64_t v3 = v19;
      uint64_t v28 = v19;
      *(_DWORD *)unint64_t v18 = 136446210;
      uint64_t v20 = sub_250F0D7B0();
      uint64_t v27 = sub_250E8BE44(v20, v21, &v28);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v16, v17, v25, v18, 0xCu);
      swift_arrayDestroy();
      uint64_t v22 = v3;
      LOBYTE(v3) = v24;
      MEMORY[0x25338EC30](v22, -1, -1);
      MEMORY[0x25338EC30](v18, -1, -1);
    }

    (*(void (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v26);
    LOBYTE(v28) = v3;
    return sub_250EC5EE4((unsigned __int8 *)&v28);
  }
  else
  {
    __break(1u);
  }
  return result;
}

void sub_250EC83D4()
{
  if (!qword_26B20DEE8)
  {
    sub_250EC8430();
    unint64_t v0 = sub_250F0D470();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20DEE8);
    }
  }
}

unint64_t sub_250EC8430()
{
  unint64_t result = qword_26B20E110;
  if (!qword_26B20E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E110);
  }
  return result;
}

uint64_t sub_250EC8484()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250EC84BC()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_250EC84F4()
{
  sub_250EC661C(*(void *)(v0 + 16));
}

void sub_250EC84FC(uint64_t a1, unint64_t *a2, unint64_t *a3, uint64_t a4, unint64_t *a5)
{
  if (!*a2)
  {
    sub_250E8D194(255, a3);
    sub_250EC8588(a5, a3);
    unint64_t v8 = sub_250F0D470();
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EC8588(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250E8D194(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EC85D8()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C640();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_initClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

void *sub_250EC86BC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return (void *)MEMORY[0x263F8EE78];
  }
  unint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 40);
  uint64_t v3 = (void *)MEMORY[0x263F8EE78];
  do
  {
    if ((*v2 & 1) == 0)
    {
      uint64_t v4 = *((void *)v2 - 1);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v3 = sub_250EA2200(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        uint64_t v3 = sub_250EA2200((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      v3[v6 + 4] = v4;
    }
    v2 += 16;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_250EC87B8(void (*a1)(char *), uint64_t a2)
{
  uint64_t v4 = v2;
  uint64_t v63 = a1;
  uint64_t v64 = a2;
  sub_250ED113C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v62 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EA31AC();
  uint64_t v59 = v7;
  uint64_t v47 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v46 = (uint64_t)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v45 = (uint64_t)&v44 - v10;
  uint64_t v11 = sub_250F0C470();
  uint64_t v61 = *(void (***)(char *, uint64_t))(v11 - 8);
  MEMORY[0x270FA5388](v11);
  id v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_250F0C970();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v55 = (char *)&v44 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ECFAD4(0);
  uint64_t v18 = MEMORY[0x270FA5388](v17 - 8);
  uint64_t v71 = (uint64_t)&v44 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  unint64_t v21 = (char *)&v44 - v20;
  sub_250ED0FC4(0);
  MEMORY[0x270FA5388](v22 - 8);
  int v24 = (char *)&v44 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v25 = v2[1];
  v70[0] = *v2;
  v70[1] = v25;
  uint64_t v26 = v25;
  uint64_t v50 = *((void *)&v70[0] + 1);
  uint64_t v27 = (void (*)(char *))*((void *)v4 + 4);
  uint64_t v28 = *((void *)v4 + 5);
  uint64_t v54 = v27;
  uint64_t v69 = *((void *)&v25 + 1) >> 1;
  sub_250ED1170((uint64_t)v70);
  uint64_t v49 = v15 + 16;
  uint64_t v67 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  id v68 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v15 + 56);
  uint64_t v53 = (void (**)(char *, uint64_t, uint64_t))(v15 + 32);
  uint64_t v51 = v15;
  uint64_t v52 = (void (**)(char *, uint64_t))(v15 + 8);
  unint64_t v65 = (unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 6);
  unint64_t v66 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v61 + 7);
  uint64_t v60 = (void (**)(char *, char *, uint64_t))(v61 + 4);
  ++v61;
  uint64_t v57 = v28;
  uint64_t v58 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v47 + 48);
  uint64_t result = swift_retain();
  unint64_t v48 = MEMORY[0x263F8EE78];
  uint64_t v56 = v26;
  uint64_t v30 = v26;
  while (1)
  {
    if (v30 == v69)
    {
      uint64_t v31 = 1;
      uint64_t v30 = v69;
      goto LABEL_7;
    }
    if (v30 < v56 || v30 >= v69) {
      break;
    }
    (*(void (**)(char *, uint64_t, uint64_t))(v51 + 16))(v21, v50 + *(void *)(v51 + 72) * v30, v14);
    uint64_t v31 = 0;
    ++v30;
LABEL_7:
    uint64_t v32 = 1;
    (*v68)(v21, v31, 1, v14);
    uint64_t v33 = v71;
    sub_250ED119C((uint64_t)v21, v71, (uint64_t (*)(void))sub_250ECFAD4);
    if ((*v67)(v33, 1, v14) != 1)
    {
      id v34 = v55;
      (*v53)(v55, v71, v14);
      v54(v34);
      (*v52)(v34, v14);
      uint64_t v32 = 0;
    }
    (*v66)(v24, v32, 1, v11);
    if ((*v65)(v24, 1, v11) == 1)
    {
      sub_250ED1110((uint64_t)v70);
      swift_release();
      return v48;
    }
    (*v60)(v13, v24, v11);
    uint64_t v35 = (uint64_t)v62;
    v63(v13);
    if (v3)
    {
      (*v61)(v13, v11);
      sub_250ED1110((uint64_t)v70);
      unint64_t v43 = v48;
      swift_bridgeObjectRelease();
      swift_release();
      return v43;
    }
    (*v61)(v13, v11);
    if ((*v58)(v35, 1, v59) == 1)
    {
      uint64_t result = sub_250E8BD5C(v35, (uint64_t (*)(void))sub_250ED113C);
    }
    else
    {
      uint64_t v36 = v35;
      uint64_t v37 = v45;
      sub_250ED119C(v36, v45, (uint64_t (*)(void))sub_250EA31AC);
      sub_250ED119C(v37, v46, (uint64_t (*)(void))sub_250EA31AC);
      unint64_t v38 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unint64_t v38 = sub_250EA231C(0, *(void *)(v38 + 16) + 1, 1, v38);
      }
      unint64_t v39 = v38;
      unint64_t v40 = *(void *)(v38 + 16);
      unint64_t v48 = v39;
      unint64_t v41 = *(void *)(v39 + 24);
      if (v40 >= v41 >> 1) {
        unint64_t v48 = sub_250EA231C(v41 > 1, v40 + 1, 1, v48);
      }
      unint64_t v42 = v48;
      *(void *)(v48 + 16) = v40 + 1;
      uint64_t result = sub_250ED119C(v46, v42+ ((*(unsigned __int8 *)(v47 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v47 + 80))+ *(void *)(v47 + 72) * v40, (uint64_t (*)(void))sub_250EA31AC);
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_250EC8EF0(void (*a1)(void *), uint64_t a2, uint64_t a3)
{
  uint64_t v44 = a2;
  sub_250ED1300(0);
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_250F0C8D0();
  uint64_t v9 = MEMORY[0x270FA5388](v45 - 8);
  unint64_t v43 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v37 = (char *)&v36 - v12;
  uint64_t v38 = v11;
  uint64_t v13 = *(void *)(a3 + 56);
  uint64_t v40 = a3 + 56;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
  int64_t v41 = (unint64_t)(v14 + 63) >> 6;
  unint64_t v42 = (void (**)(char *, char *, uint64_t))(v11 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  unint64_t v47 = MEMORY[0x263F8EE78];
  uint64_t v39 = a3;
  uint64_t v36 = v17;
  if (v16) {
    goto LABEL_6;
  }
LABEL_7:
  if (__OFADD__(v19++, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v19 >= v41) {
    goto LABEL_34;
  }
  unint64_t v23 = *(void *)(v40 + 8 * v19);
  if (v23) {
    goto LABEL_19;
  }
  int64_t v24 = v19 + 1;
  if (v19 + 1 >= v41) {
    goto LABEL_34;
  }
  unint64_t v23 = *(void *)(v40 + 8 * v24);
  if (v23)
  {
LABEL_18:
    int64_t v19 = v24;
LABEL_19:
    unint64_t v16 = (v23 - 1) & v23;
    for (unint64_t i = __clz(__rbit64(v23)) + (v19 << 6); ; unint64_t i = v20 | (v19 << 6))
    {
      long long v25 = (void *)(*(void *)(a3 + 48) + 16 * i);
      uint64_t v26 = v25[1];
      v46[0] = *v25;
      v46[1] = v26;
      swift_bridgeObjectRetain();
      a1(v46);
      if (v3) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = v45;
      if ((*v17)(v8, 1, v45) == 1)
      {
        uint64_t result = sub_250E8BD5C((uint64_t)v8, (uint64_t (*)(void))sub_250ED1300);
        if (!v16) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t v28 = a1;
        unint64_t v29 = *v42;
        uint64_t v30 = v37;
        (*v42)(v37, v8, v27);
        v29(v43, v30, v27);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v31 = v47;
        }
        else {
          unint64_t v31 = sub_250EA2364(0, *(void *)(v47 + 16) + 1, 1, v47);
        }
        unint64_t v33 = *(void *)(v31 + 16);
        unint64_t v32 = *(void *)(v31 + 24);
        if (v33 >= v32 >> 1) {
          unint64_t v31 = sub_250EA2364(v32 > 1, v33 + 1, 1, v31);
        }
        *(void *)(v31 + 16) = v33 + 1;
        unint64_t v34 = (*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80);
        unint64_t v47 = v31;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(v31 + v34 + *(void *)(v38 + 72) * v33, v43, v45);
        a3 = v39;
        a1 = v28;
        uint64_t v17 = v36;
        if (!v16) {
          goto LABEL_7;
        }
      }
LABEL_6:
      unint64_t v20 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
    }
    unint64_t v35 = v47;
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    return v35;
  }
  int64_t v24 = v19 + 2;
  if (v19 + 2 >= v41)
  {
LABEL_34:
    swift_release();
    return v47;
  }
  unint64_t v23 = *(void *)(v40 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v19 + 3;
  if (v19 + 3 >= v41) {
    goto LABEL_34;
  }
  unint64_t v23 = *(void *)(v40 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  int64_t v24 = v19 + 4;
  if (v19 + 4 >= v41) {
    goto LABEL_34;
  }
  unint64_t v23 = *(void *)(v40 + 8 * v24);
  if (v23) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v19 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v19 >= v41) {
      goto LABEL_34;
    }
    unint64_t v23 = *(void *)(v40 + 8 * v19);
    ++v24;
    if (v23) {
      goto LABEL_19;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_250EC9320@<X0>(uint64_t *a1@<X8>)
{
  unint64_t v2 = v1;
  unint64_t v23 = a1;
  uint64_t v3 = *(void *)v1;
  uint64_t v22 = sub_250F0C640();
  uint64_t v4 = *(void *)(v22 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v22);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v3 + 80);
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v11 = (char *)&v21 - v10;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  MEMORY[0x270FA5388](AssociatedTypeWitness - 8);
  uint64_t v14 = (char *)&v21 - v13;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v11, &v2[*(void *)(v3 + 96)], v8);
  sub_250F0CFD0();
  uint64_t v15 = &v2[*(void *)(*(void *)v2 + 104)];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v15, v22);
  unint64_t v16 = (uint64_t *)&v2[*(void *)(*(void *)v2 + 112)];
  uint64_t v17 = *v16;
  uint64_t v18 = v16[1];
  uint64_t v19 = *(void *)&v2[*(void *)(*(void *)v2 + 120)];
  swift_retain();
  swift_unknownObjectRetain();
  return sub_250ECAA04((uint64_t)v14, (uint64_t)v7, v17, v18, v19, v23);
}

uint64_t sub_250EC95CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v32 = a2;
  uint64_t v34 = a1;
  uint64_t v2 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  unint64_t v31 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v28 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v28 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v28 - v12;
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v15 = v14;
  uint64_t v16 = *(void *)(v14 - 8);
  unint64_t v29 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56);
  uint64_t v30 = v16 + 56;
  v29(v13, 2, 2, v14);
  uint64_t v17 = *(void (**)(char *, char *, uint64_t))(v3 + 16);
  v17(v11, v13, v2);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v36 = v16 + 48;
  uint64_t v37 = v15;
  unint64_t v35 = v18;
  unsigned int v19 = v18(v11, 2, v15);
  uint64_t v33 = v3;
  unint64_t v20 = *(void (**)(char *, uint64_t))(v3 + 8);
  if (v19 == 2)
  {
    uint64_t v21 = (void (**)(char *, char *, uint64_t))(v33 + 32);
    do
    {
      v20(v11, v2);
      sub_250ECACBC(v34, v8);
      v20(v13, v2);
      (*v21)(v13, v8, v2);
      v17(v11, v13, v2);
    }
    while (v35(v11, 2, v37) == 2);
  }
  v20(v11, v2);
  uint64_t v22 = v31;
  (*(void (**)(char *, char *, uint64_t))(v33 + 32))(v31, v13, v2);
  uint64_t v23 = v37;
  if (v35(v22, 2, v37))
  {
    uint64_t v24 = 1;
    uint64_t v25 = v32;
  }
  else
  {
    uint64_t v26 = (uint64_t)v22;
    uint64_t v25 = v32;
    sub_250E92F90(v26, v32, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    uint64_t v24 = 0;
  }
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v29)(v25, v24, 1, v23);
}

uint64_t sub_250EC9910@<X0>(_OWORD *a1@<X0>, uint64_t a2@<X1>, void *a3@<X2>, void *a4@<X3>, int a5@<W4>, int a6@<W5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  LODWORD(v36) = a6;
  LODWORD(v35) = a5;
  uint64_t v14 = sub_250F0CA10();
  uint64_t v40 = *(void *)(v14 - 8);
  uint64_t v41 = v14;
  MEMORY[0x270FA5388](v14);
  uint64_t v39 = (uint64_t *)((char *)&v32 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v37 = sub_250F0CE70();
  uint64_t v16 = *(void *)(v37 - 8);
  MEMORY[0x270FA5388](v37);
  uint64_t v18 = (char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_250F0C470();
  uint64_t v19 = *(void *)(v38 - 8);
  unint64_t v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(v19 + 16);
  uint64_t v33 = a2;
  v20(a8, a2, v38);
  sub_250EC32E8();
  uint64_t v22 = v21;
  *(void *)(a8 + v21[9]) = a3;
  *(void *)(a8 + v21[10]) = a4;
  *(unsigned char *)(a8 + v21[11]) = (_BYTE)v35;
  *(unsigned char *)(a8 + v21[12]) = (_BYTE)v36;
  *(void *)(a8 + v21[13]) = a7;
  id v36 = a3;
  id v35 = a4;
  id v23 = a7;
  sub_250F0C420();
  *(void *)&v46[0] = 0;
  unint64_t v43 = v18;
  uint64_t v44 = v46;
  id v45 = v23;
  uint64_t v24 = sub_250EC87B8((void (*)(char *))sub_250ED10F0, (uint64_t)v42);
  uint64_t v25 = v16 + 8;
  uint64_t v26 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v34 = v25;
  uint64_t v27 = v37;
  v26(v18, v37);
  long long v28 = a1[1];
  v46[0] = *a1;
  v46[1] = v28;
  sub_250ED1110((uint64_t)v46);
  swift_release();
  uint64_t v29 = v33;
  sub_250F0C420();
  uint64_t v30 = v39;
  uint64_t v32 = sub_250EC4208(v39, v18, v24);

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v29, v38);
  v26(v18, v27);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(v40 + 32))(a8 + v22[15], v30, v41);
  *(void *)(a8 + v22[14]) = v32;
  return result;
}

uint64_t sub_250EC9C30@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  sub_250EA31AC();
  uint64_t v101 = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v98 = (uint64_t)&v95 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v6);
  uint64_t v97 = (uint64_t)&v95 - v8;
  sub_250ECFA70(0, &qword_26B20E500, MEMORY[0x263F42CA0], MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v99 = (char *)&v95 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v95 - v12;
  uint64_t v14 = sub_250F0CA10();
  uint64_t v15 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v95 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_250F0C470();
  MEMORY[0x270FA5388](v18);
  (*(void (**)(char *, uint64_t))(v20 + 16))((char *)&v95 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0), v2);
  sub_250EC32E8();
  uint64_t v22 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, v2 + v21[15], v14);
  uint64_t v23 = sub_250F0C3A0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v13, 1, 1, v23);
  uint64_t v100 = a1;
  uint64_t result = sub_250F0C7F0();
  unint64_t v25 = *(void *)(v2 + v22[14]);
  if (v25)
  {
    uint64_t v26 = swift_bridgeObjectRetain();
    uint64_t v27 = sub_250ECA574(v26, 0.05);
    if (v28) {
      return swift_bridgeObjectRelease();
    }
    double v29 = *(double *)&v27;
    unint64_t v102 = v25;
    uint64_t result = sub_250ECA940(&v102);
    unint64_t v30 = v102;
    unint64_t v31 = *(void *)(v102 + 16);
    if ((unsigned __int128)((uint64_t)v31 * (__int128)3) >> 64 == (uint64_t)(3 * v31) >> 63)
    {
      unint64_t v32 = v31 >> 2;
      if (v31 >> 2 < v31)
      {
        unint64_t v33 = (3 * v31) >> 2;
        if (v33 < v31)
        {
          unint64_t v96 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
          uint64_t v34 = v102 + v96;
          uint64_t v35 = *(void *)(v5 + 72);
          uint64_t v36 = v101;
          uint64_t v37 = *(int *)(v101 + 48);
          double v38 = *(double *)(v102 + v96 + v33 * v35 + v37);
          double v39 = *(double *)(v102 + v96 + v35 * v32 + v37);
          double v40 = v38 - v39;
          double v41 = (v38 - v39) * 1.5;
          if ((sub_250F0C9A0() & 1) == 0)
          {
LABEL_10:
            double v48 = v39 - v41;
            if (*(unsigned char *)(v2 + v22[12]) == 1)
            {
              sub_250ECFA70(0, &qword_26B20EFF0, (uint64_t (*)(uint64_t))sub_250ED0FF8, MEMORY[0x263F8E0F8]);
              uint64_t inited = swift_initStackObject();
              uint64_t v50 = inited;
              *(_OWORD *)(inited + 16) = xmmword_250F0F080;
              if (*(void *)(v30 + 16))
              {
                uint64_t v51 = v97;
                sub_250E8DBD8(v34, v97, (uint64_t (*)(void))sub_250EA31AC);
                *(void *)(v50 + 32) = *(void *)(v51 + *(int *)(v36 + 48));
                *(unsigned char *)(v50 + 40) = 0;
                uint64_t v52 = sub_250F0CE70();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v52 - 8) + 8))(v51, v52);
              }
              else
              {
                *(void *)(inited + 32) = 0;
                *(unsigned char *)(inited + 40) = 1;
              }
              uint64_t v53 = &off_26535C000;
              uint64_t v54 = (void *)sub_250F0C460();
              uint64_t v55 = v54;
              if (v54)
              {
                objc_msgSend(v54, sel_doubleValueForUnit_, *(void *)(v2 + v22[13]));
                uint64_t v57 = v56;
              }
              else
              {
                uint64_t v57 = 0;
              }
              *(void *)(v50 + 48) = v57;
              *(unsigned char *)(v50 + 56) = v55 == 0;
              uint64_t v58 = (double *)sub_250EC86BC(v50);
              swift_bridgeObjectRelease();
              uint64_t v59 = *((void *)v58 + 2);
              if (v59)
              {
                double v60 = v58[4];
                uint64_t v61 = v59 - 1;
                if (v61)
                {
                  uint64_t v62 = v58 + 5;
                  do
                  {
                    double v63 = *v62++;
                    double v64 = v63;
                    if (v63 < v60) {
                      double v60 = v64;
                    }
                    --v61;
                  }
                  while (v61);
                }
                swift_bridgeObjectRelease();
                if (v48 > v60) {
                  double v48 = v60;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            else
            {
              uint64_t v53 = &off_26535C000;
            }
            double v65 = v38 + v41;
            if (*(unsigned char *)(v2 + v22[11]) == 1)
            {
              sub_250ECFA70(0, &qword_26B20EFF0, (uint64_t (*)(uint64_t))sub_250ED0FF8, MEMORY[0x263F8E0F8]);
              uint64_t v66 = swift_initStackObject();
              uint64_t v67 = v66;
              *(_OWORD *)(v66 + 16) = xmmword_250F0F080;
              uint64_t v68 = *(void *)(v102 + 16);
              if (v68)
              {
                uint64_t v69 = v98;
                sub_250E8DBD8(v102 + v96 + (v68 - 1) * v35, v98, (uint64_t (*)(void))sub_250EA31AC);
                *(void *)(v67 + 32) = *(void *)(v69 + *(int *)(v36 + 48));
                *(unsigned char *)(v67 + 40) = 0;
                uint64_t v70 = sub_250F0CE70();
                (*(void (**)(uint64_t, uint64_t))(*(void *)(v70 - 8) + 8))(v69, v70);
              }
              else
              {
                *(void *)(v66 + 32) = 0;
                *(unsigned char *)(v66 + 40) = 1;
              }
              uint64_t v71 = (void *)sub_250F0C460();
              id v72 = v71;
              if (v71)
              {
                objc_msgSend(v71, (SEL)v53[486], *(void *)(v2 + v22[13]));
                uint64_t v74 = v73;
              }
              else
              {
                uint64_t v74 = 0;
              }
              *(void *)(v67 + 48) = v74;
              *(unsigned char *)(v67 + 56) = v72 == 0;
              uint64_t v75 = (double *)sub_250EC86BC(v67);
              swift_bridgeObjectRelease();
              uint64_t v76 = *((void *)v75 + 2);
              if (v76)
              {
                double v77 = v75[4];
                uint64_t v78 = v76 - 1;
                if (v78)
                {
                  char v79 = v75 + 5;
                  do
                  {
                    double v80 = *v79++;
                    double v81 = v80;
                    if (v77 < v80) {
                      double v77 = v81;
                    }
                    --v78;
                  }
                  while (v78);
                }
                swift_bridgeObjectRelease();
                if (v65 <= v77) {
                  double v65 = v77;
                }
              }
              else
              {
                swift_bridgeObjectRelease();
              }
            }
            uint64_t v82 = *(void *)(v2 + v22[13]);
            objc_msgSend(*(id *)(v2 + v22[9]), (SEL)v53[486], v82);
            double v84 = v29 - v83;
            double v85 = v83 + v29;
            uint64_t v86 = self;
            id v87 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v29);
            if (v84 >= v48) {
              double v88 = v48;
            }
            else {
              double v88 = v84;
            }
            id v89 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v88);
            if (v65 > v85) {
              double v90 = v65;
            }
            else {
              double v90 = v85;
            }
            id v91 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v90);
            objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v89, v91, 1, 1);

            id v92 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v40);
            id v93 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v48);
            id v94 = objc_msgSend(v86, sel_quantityWithUnit_doubleValue_, v82, v65);
            objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A640]), sel_initWithMinimum_maximum_isMinimumInclusive_isMaximumInclusive_, v93, v94, 1, 1);

            sub_250F0C390();
            sub_250F0C7E0();
            return swift_bridgeObjectRelease();
          }
          uint64_t v42 = sub_250F0C9F0();
          uint64_t result = sub_250F0C9D0();
          BOOL v43 = __OFSUB__(v42, result);
          uint64_t v44 = v42 - result;
          if (!v43)
          {
            uint64_t result = sub_250F0C9E0();
            if (!__OFSUB__(v45, result))
            {
              double v46 = (double)v44 / (double)(v45 - result);
              objc_msgSend(*(id *)(v2 + v22[10]), sel_doubleValueForUnit_, *(void *)(v2 + v22[13]));
              double v41 = v41 * v46 + (1.0 - v46) * v47;
              goto LABEL_10;
            }
LABEL_58:
            __break(1u);
            return result;
          }
LABEL_57:
          __break(1u);
          goto LABEL_58;
        }
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_57;
  }
  return result;
}

uint64_t sub_250ECA574(uint64_t a1, double a2)
{
  sub_250EA31AC();
  uint64_t v34 = v4;
  uint64_t v38 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ED1050();
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v37 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ED10BC(0);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (uint64_t *)((char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (uint64_t *)((char *)&v33 - v15);
  double v17 = 1.0 - a2;
  uint64_t v18 = *(void *)(a1 + 16);
  uint64_t v35 = (unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48);
  uint64_t v36 = (void (**)(void *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  uint64_t v40 = a1;
  *(double *)&uint64_t result = COERCE_DOUBLE(swift_bridgeObjectRetain());
  uint64_t v20 = 0;
  double v21 = 0.0;
  double v22 = 0.0;
  uint64_t v39 = v18;
  if (!v18) {
    goto LABEL_7;
  }
LABEL_2:
  if (--v18 >= v39)
  {
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v23 = (uint64_t)&v37[*(int *)(v8 + 48)];
  *(double *)&uint64_t result = COERCE_DOUBLE(sub_250E8DBD8(v40+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(void *)(v38 + 72) * v18, v23, (uint64_t (*)(void))sub_250EA31AC));
  if (__OFADD__(v20, 1))
  {
LABEL_12:
    __break(1u);
    return result;
  }
  uint64_t v24 = (uint64_t)v14 + *(int *)(v8 + 48);
  *uint64_t v14 = v20;
  sub_250ED119C(v23, v24, (uint64_t (*)(void))sub_250EA31AC);
  uint64_t v25 = 0;
  ++v20;
  while (1)
  {
    (*v36)(v14, v25, 1, v8);
    sub_250ED119C((uint64_t)v14, (uint64_t)v16, (uint64_t (*)(void))sub_250ED10BC);
    if ((*v35)(v16, 1, v8) == 1) {
      break;
    }
    uint64_t v26 = (char *)v16 + *(int *)(v8 + 48);
    uint64_t v27 = *(int *)(v34 + 48);
    double v28 = *(double *)&v26[v27];
    uint64_t v29 = *v16;
    uint64_t v30 = sub_250F0CE70();
    uint64_t v31 = *(void *)(v30 - 8);
    (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v6, v26, v30);
    *(double *)&v6[v27] = v28;
    long double v32 = pow(v17, (double)v29);
    double v22 = v22 + v28 * v32;
    double v21 = v21 + v32;
    *(double *)&uint64_t result = COERCE_DOUBLE((*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v6, v30));
    if (v18) {
      goto LABEL_2;
    }
LABEL_7:
    uint64_t v25 = 1;
  }
  swift_bridgeObjectRelease();
  if (v21 > 0.0) {
    *(double *)&uint64_t result = v22 / v21;
  }
  else {
    *(double *)&uint64_t result = 0.0;
  }
  return result;
}

uint64_t sub_250ECA940(unint64_t *a1)
{
  sub_250EA31AC();
  uint64_t v3 = *(void *)(v2 - 8);
  unint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v4 = sub_250ECFB08(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  v7[1] = v5;
  uint64_t result = sub_250ECFB30(v7);
  *a1 = v4;
  return result;
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_250ECAA04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a5;
  uint64_t v25 = a2;
  uint64_t v26 = a3;
  uint64_t v24 = a1;
  uint64_t v8 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_250F0C640();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator();
  *((unsigned char *)a6 + *(int *)(v13 + 40)) = 0;
  uint64_t v14 = (char *)a6 + *(int *)(v13 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v16 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v14, a1, AssociatedTypeWitness);
  uint64_t v17 = v25;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v25, v9);
  type metadata accessor for SleepingSampleBaselineAccumulator();
  uint64_t v18 = swift_allocObject();
  uint64_t v19 = MEMORY[0x263F8EE78];
  *(void *)(v18
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates) = MEMORY[0x263F8EE78];
  *(void *)(v18
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries) = v19;
  *(void *)(v18
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete) = v19;
  sub_250F0CC90();
  sub_250F0CC10();
  (*(void (**)(uint64_t, char *, uint64_t))(v10 + 32))(v18+ OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange, v12, v9);
  uint64_t v20 = (void *)(v18
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider);
  uint64_t v21 = v27;
  void *v20 = v26;
  v20[1] = v21;
  *(void *)(v18
            + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider) = v28;
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v17, v9);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v24, AssociatedTypeWitness);
  *a6 = v18;
  return result;
}

uint64_t sub_250ECACBC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t v75 = a1;
  uint64_t v76 = a2;
  sub_250E9241C(0);
  MEMORY[0x270FA5388](v3 - 8);
  double v64 = (char *)&v60 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v62 = sub_250F0C970();
  uint64_t v60 = *(void *)(v62 - 8);
  MEMORY[0x270FA5388](v62);
  uint64_t v61 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E922C0();
  MEMORY[0x270FA5388](v6 - 8);
  id v72 = (void (*)(char *, char *, uint64_t))((char *)&v60 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_250E93070(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
  uint64_t v69 = v8;
  uint64_t v67 = *(void *)(v8 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v65 = (uint64_t)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v63 = (uint64_t)&v60 - v11;
  sub_250E9374C();
  uint64_t v73 = v12;
  MEMORY[0x270FA5388](v12);
  uint64_t v74 = (char *)&v60 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_250F0C340();
  uint64_t v66 = *(void *)(v68 - 8);
  MEMORY[0x270FA5388](v68);
  uint64_t v15 = (char *)&v60 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_250F0CE70();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v71 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v18);
  uint64_t v70 = (char *)&v60 - v20;
  sub_250E93E40(0);
  MEMORY[0x270FA5388](v21 - 8);
  uint64_t v23 = (char *)&v60 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_250F0C5A0();
  uint64_t v25 = *(void *)(v24 - 8);
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)&v60 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ECB68C((uint64_t)v23);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v23, 1, v24) == 1)
  {
    uint64_t v28 = v67;
    uint64_t v29 = v69;
    uint64_t v30 = (uint64_t)v72;
    uint64_t v73 = v17;
    uint64_t v74 = (char *)v16;
    sub_250E8BD5C((uint64_t)v23, (uint64_t (*)(void))sub_250E93E40);
    uint64_t v31 = *(int *)(v75 + 40);
    if (*(unsigned char *)(v2 + v31))
    {
      sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      return (*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v76, 1, 2, v32);
    }
    swift_getAssociatedTypeWitness();
    swift_getAssociatedConformanceWitness();
    sub_250F0D2E0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v28 + 48))(v30, 1, v29) == 1)
    {
      sub_250E8BD5C(v30, (uint64_t (*)(void))sub_250E922C0);
      uint64_t v46 = (uint64_t)v64;
      (*(void (**)(char *, uint64_t, uint64_t, char *))(v73 + 56))(v64, 1, 1, v74);
      sub_250ECC2B8(v46);
      sub_250E8BD5C(v46, (uint64_t (*)(void))sub_250E9241C);
      *(unsigned char *)(v2 + v31) = 1;
      sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      uint64_t v45 = v47;
      uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56);
      BOOL v43 = v76;
LABEL_13:
      uint64_t v44 = 2;
      return v42((uint64_t)v43, v44, 2, v45);
    }
    uint64_t v48 = v63;
    sub_250E92F90(v30, v63, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
    uint64_t v49 = v65;
    sub_250ED121C(v48, v65);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v51 = v76;
    if (EnumCaseMultiPayload != 1)
    {
      uint64_t v55 = v60;
      uint64_t v56 = (uint64_t)v61;
      uint64_t v57 = v49;
      uint64_t v58 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v60 + 32))(v61, v57, v62);
      sub_250ECB82C(v56);
      (*(void (**)(uint64_t, uint64_t))(v55 + 8))(v56, v58);
      sub_250E93B9C(v48, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
      sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      uint64_t v45 = v59;
      uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56);
      BOOL v43 = v51;
      goto LABEL_13;
    }
    sub_250E93B9C(v48, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
    uint64_t v52 = *(void *)v49;
    char v53 = *(unsigned char *)(v49 + 8);
    *(unsigned char *)(v2 + v31) = 1;
    *(void *)uint64_t v51 = v52;
    v51[8] = v53;
    sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    uint64_t v41 = v54;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    BOOL v43 = v51;
  }
  else
  {
    uint64_t v69 = v2;
    id v72 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
    v72(v27, v23, v24);
    uint64_t v34 = v70;
    sub_250F0C4B0();
    sub_250F0C5D0();
    uint64_t v35 = (uint64_t)v74;
    sub_250F0C300();
    (*(void (**)(char *, uint64_t))(v66 + 8))(v15, v68);
    uint64_t v36 = v71;
    (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v71, v35 + *(int *)(v73 + 36), v16);
    sub_250E8BD5C(v35, (uint64_t (*)(void))sub_250E9374C);
    sub_250ED129C((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
    sub_250F0D330();
    uint64_t v37 = v77;
    uint64_t v38 = *(void (**)(char *, uint64_t))(v17 + 8);
    v38(v36, v16);
    v38(v34, v16);
    if (!v37) {
      *(unsigned char *)(v69 + *(int *)(v75 + 40)) = 1;
    }
    uint64_t v39 = v76;
    v72(v76, v27, v24);
    sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    uint64_t v41 = v40;
    swift_storeEnumTagMultiPayload();
    uint64_t v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56);
    BOOL v43 = v39;
  }
  uint64_t v44 = 0;
  uint64_t v45 = v41;
  return v42((uint64_t)v43, v44, 2, v45);
}

uint64_t sub_250ECB68C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = (uint64_t *)(v1
                 + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
  swift_beginAccess();
  if (*(void *)(*v3 + 16))
  {
    uint64_t result = swift_beginAccess();
    uint64_t v5 = *v3;
    if (*(void *)(*v3 + 16))
    {
      uint64_t v6 = sub_250F0C5A0();
      uint64_t v7 = *(void *)(v6 - 8);
      (*(void (**)(uint64_t, unint64_t, uint64_t))(v7 + 16))(a1, v5 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80)), v6);
      sub_250ED0DCC(0, 1, (uint64_t (*)(void))sub_250EA1E8C, MEMORY[0x263F42D70]);
      swift_endAccess();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    uint64_t v8 = sub_250F0C5A0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
  return result;
}

uint64_t sub_250ECB82C(uint64_t a1)
{
  uint64_t v99 = a1;
  sub_250E9241C(0);
  MEMORY[0x270FA5388](v2 - 8);
  id v94 = (char *)&v73 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9374C();
  uint64_t v85 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v91 = (uint64_t)&v73 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  id v92 = (char *)&v73 - v7;
  uint64_t v8 = sub_250F0C340();
  uint64_t v87 = *(void *)(v8 - 8);
  uint64_t v88 = v8;
  MEMORY[0x270FA5388](v8);
  uint64_t v86 = (char *)&v73 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v96 = sub_250F0CE70();
  uint64_t v98 = *(void *)(v96 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v96);
  id v89 = (char *)&v73 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  double v90 = (char *)&v73 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v73 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v73 - v17;
  uint64_t v19 = sub_250F0C970();
  uint64_t v20 = *(void *)(v19 - 8);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v73 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  id v93 = (char *)&v73 - v25;
  uint64_t v26 = MEMORY[0x270FA5388](v24);
  double v84 = (char *)&v73 - v27;
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v30 = (char *)&v73 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v97 = (char *)&v73 - v31;
  uint64_t v32 = (unint64_t *)(v1
                           + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates);
  swift_beginAccess();
  uint64_t v33 = *(void *)(*v32 + 16);
  uint64_t v95 = v1;
  if (v33 >= sub_250F0C5F0())
  {
    unint64_t v34 = *v32;
    uint64_t v35 = *(void *)(*v32 + 16);
    if (v35)
    {
      uint64_t v76 = v32;
      unint64_t v82 = (*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80);
      uint64_t v81 = *(void *)(v20 + 72);
      uint64_t v36 = v20;
      uint64_t v37 = v20 + 16;
      uint64_t v38 = *(void (**)(char *, unint64_t, uint64_t))(v20 + 16);
      uint64_t v39 = v19;
      v38(v97, v34 + v82 + v81 * (v35 - 1), v19);
      uint64_t v79 = v37;
      uint64_t v78 = (void (*)(char *, uint64_t, uint64_t))v38;
      v38(v30, v99, v19);
      uint64_t v40 = v36;
      sub_250F0C920();
      sub_250F0C920();
      uint64_t v41 = sub_250E92C80();
      uint64_t v42 = v96;
      uint64_t v83 = v41;
      LOBYTE(v37) = sub_250F0CEE0();
      uint64_t v44 = v98 + 8;
      BOOL v43 = *(unint64_t **)(v98 + 8);
      ((void (*)(char *, uint64_t))v43)(v16, v42);
      ((void (*)(char *, uint64_t))v43)(v18, v42);
      uint64_t v77 = v40;
      uint64_t v46 = (char *)(v40 + 8);
      unint64_t v45 = *(void *)(v40 + 8);
      uint64_t v80 = v39;
      ((void (*)(char *, uint64_t))v45)(v30, v39);
      if (v37)
      {
        uint64_t v74 = v43;
        uint64_t v75 = (void (*)(char *, uint64_t))v45;
        uint64_t v47 = v86;
        sub_250F0C5D0();
        uint64_t v48 = (uint64_t)v92;
        sub_250F0C300();
        (*(void (**)(char *, uint64_t))(v87 + 8))(v47, v88);
        uint64_t v49 = v90;
        sub_250F0C920();
        LOBYTE(v47) = sub_250F0CEF0();
        uint64_t v50 = v98;
        uint64_t v51 = v89;
        (*(void (**)(char *, char *, uint64_t))(v98 + 16))(v89, v49, v42);
        uint64_t v52 = v91;
        sub_250E8DBD8(v48, v91, (uint64_t (*)(void))sub_250E9374C);
        if (v47)
        {
          LODWORD(v88) = sub_250F0CF00();
          sub_250E8BD5C(v52, (uint64_t (*)(void))sub_250E9374C);
          char v53 = v74;
          ((void (*)(char *, uint64_t))v74)(v51, v42);
          ((void (*)(char *, uint64_t))v53)(v49, v42);
          sub_250E8BD5C(v48, (uint64_t (*)(void))sub_250E9374C);
          uint64_t v54 = v95;
          BOOL v43 = v76;
          if (v88)
          {
            uint64_t v55 = v84;
            uint64_t v56 = v80;
            v78(v84, v99, v80);
            uint64_t v57 = (unint64_t *)(v54
                                     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete);
            swift_beginAccess();
            unint64_t v58 = *v57;
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *uint64_t v57 = v58;
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              unint64_t v58 = sub_250EA21B8(0, *(void *)(v58 + 16) + 1, 1, v58);
              *uint64_t v57 = v58;
            }
            unint64_t v61 = *(void *)(v58 + 16);
            unint64_t v60 = *(void *)(v58 + 24);
            if (v61 >= v60 >> 1)
            {
              unint64_t v58 = sub_250EA21B8(v60 > 1, v61 + 1, 1, v58);
              *uint64_t v57 = v58;
            }
            *(void *)(v58 + 16) = v61 + 1;
            (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v58 + v82 + v61 * v81, v55, v56);
            swift_endAccess();
            uint64_t v42 = v96;
            uint64_t v50 = v98;
          }
        }
        else
        {
          sub_250E8BD5C(v52, (uint64_t (*)(void))sub_250E9374C);
          uint64_t v66 = v74;
          ((void (*)(char *, uint64_t))v74)(v51, v42);
          ((void (*)(char *, uint64_t))v66)(v49, v42);
          sub_250E8BD5C(v48, (uint64_t (*)(void))sub_250E9374C);
          BOOL v43 = v76;
        }
        uint64_t v67 = (uint64_t)v94;
        uint64_t v68 = v99;
        sub_250F0C920();
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v50 + 56))(v67, 0, 1, v42);
        sub_250ECC2B8(v67);
        sub_250E8BD5C(v67, (uint64_t (*)(void))sub_250E9241C);
        uint64_t v44 = v80;
        v75(v97, v80);
        uint64_t v46 = v93;
        v78(v93, v68, v44);
        swift_beginAccess();
        unint64_t v45 = *v43;
        char v69 = swift_isUniquelyReferenced_nonNull_native();
        *BOOL v43 = v45;
        if (v69) {
          goto LABEL_18;
        }
      }
      else
      {
        __break(1u);
      }
      unint64_t v45 = sub_250EA21B8(0, *(void *)(v45 + 16) + 1, 1, v45);
      *BOOL v43 = v45;
LABEL_18:
      unint64_t v71 = *(void *)(v45 + 16);
      unint64_t v70 = *(void *)(v45 + 24);
      if (v71 >= v70 >> 1)
      {
        unint64_t v45 = sub_250EA21B8(v70 > 1, v71 + 1, 1, v45);
        *BOOL v43 = v45;
      }
      *(void *)(v45 + 16) = v71 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v77 + 32))(v45 + v82 + v71 * v81, v46, v44);
      return swift_endAccess();
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v23, v99, v19);
  swift_beginAccess();
  unint64_t v62 = *v32;
  char v63 = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v32 = v62;
  if ((v63 & 1) == 0)
  {
    unint64_t v62 = sub_250EA21B8(0, *(void *)(v62 + 16) + 1, 1, v62);
    *uint64_t v32 = v62;
  }
  unint64_t v65 = *(void *)(v62 + 16);
  unint64_t v64 = *(void *)(v62 + 24);
  if (v65 >= v64 >> 1)
  {
    unint64_t v62 = sub_250EA21B8(v64 > 1, v65 + 1, 1, v62);
    *uint64_t v32 = v62;
  }
  *(void *)(v62 + 16) = v65 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v20 + 32))(v62+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(void *)(v20 + 72) * v65, v23, v19);
  return swift_endAccess();
}

uint64_t sub_250ECC240@<X0>(uint64_t *a1@<X8>)
{
  sub_250EC9320(a1);
  return swift_release();
}

uint64_t sub_250ECC278()
{
  uint64_t v0 = sub_250ED12E4();
  swift_release();
  return v0;
}

uint64_t sub_250ECC2B8(uint64_t a1)
{
  uint64_t v278 = a1;
  uint64_t v233 = sub_250F0CC40();
  uint64_t v232 = *(void *)(v233 - 8);
  MEMORY[0x270FA5388](v233);
  uint64_t v237 = (char *)&v226 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ECFA70(0, (unint64_t *)&unk_26B20E520, MEMORY[0x263F42D40], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v268 = (uint64_t)&v226 - v4;
  uint64_t v5 = sub_250F0C810();
  uint64_t v6 = MEMORY[0x270FA5388](v5 - 8);
  uint64_t v267 = (uint64_t)&v226 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v266 = (uint64_t)&v226 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v265 = (uint64_t)&v226 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v264 = (uint64_t)&v226 - v13;
  MEMORY[0x270FA5388](v12);
  uint64_t v263 = (uint64_t)&v226 - v14;
  sub_250E8C788(0);
  uint64_t v16 = MEMORY[0x270FA5388](v15 - 8);
  uint64_t v309 = (char *)&v226 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  v293 = (char *)&v226 - v18;
  sub_250E8E700();
  uint64_t v292 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  uint64_t v262 = (char *)&v226 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  v291 = (char *)&v226 - v22;
  uint64_t v23 = sub_250F0C5A0();
  uint64_t v280 = *(void *)(v23 - 8);
  uint64_t v24 = MEMORY[0x270FA5388](v23);
  v290 = (char *)&v226 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v24);
  uint64_t v261 = (char *)&v226 - v26;
  sub_250ECFAD4(0);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v260 = (uint64_t)&v226 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  uint64_t v300 = (uint64_t)&v226 - v30;
  uint64_t v31 = sub_250F0C470();
  MEMORY[0x270FA5388](v31 - 8);
  v276 = (char *)&v226 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC32E8();
  uint64_t v275 = v33;
  uint64_t v34 = MEMORY[0x270FA5388](v33);
  uint64_t v277 = (uint64_t)&v226 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v274 = (uint64_t)&v226 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v273 = (uint64_t)&v226 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v305 = (uint64_t)&v226 - v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v304 = (uint64_t)&v226 - v43;
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v303 = (uint64_t)&v226 - v45;
  MEMORY[0x270FA5388](v44);
  uint64_t v302 = (uint64_t)&v226 - v46;
  sub_250E9241C(0);
  uint64_t v48 = MEMORY[0x270FA5388](v47 - 8);
  uint64_t v243 = (uint64_t)&v226 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v48);
  uint64_t v281 = (char *)&v226 - v50;
  uint64_t v51 = sub_250F0CE70();
  uint64_t v322 = *(char **)(v51 - 8);
  uint64_t v52 = MEMORY[0x270FA5388](v51);
  uint64_t v271 = (char *)&v226 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v270 = (char *)&v226 - v55;
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v272 = (char *)&v226 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  v294 = (char *)&v226 - v59;
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v316 = (char *)&v226 - v61;
  uint64_t v62 = MEMORY[0x270FA5388](v60);
  unint64_t v64 = (char *)&v226 - v63;
  uint64_t v65 = MEMORY[0x270FA5388](v62);
  uint64_t v242 = (char *)&v226 - v66;
  MEMORY[0x270FA5388](v65);
  uint64_t v295 = (char *)&v226 - v67;
  sub_250EC18D8(0);
  uint64_t v314 = v68;
  uint64_t v69 = MEMORY[0x270FA5388](v68);
  uint64_t v259 = (char *)&v226 - ((v70 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v71 = MEMORY[0x270FA5388](v69);
  uint64_t v289 = (uint64_t)&v226 - v72;
  uint64_t v73 = MEMORY[0x270FA5388](v71);
  uint64_t v315 = (uint64_t)&v226 - v74;
  uint64_t v75 = MEMORY[0x270FA5388](v73);
  uint64_t v241 = (uint64_t)&v226 - v76;
  uint64_t v77 = MEMORY[0x270FA5388](v75);
  uint64_t v282 = (uint64_t)&v226 - v78;
  MEMORY[0x270FA5388](v77);
  uint64_t v320 = (uint64_t)&v226 - v79;
  uint64_t v240 = sub_250F0CC00();
  uint64_t v80 = *(void *)(v240 - 8);
  uint64_t v81 = MEMORY[0x270FA5388](v240);
  uint64_t v236 = (char *)&v226 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = MEMORY[0x270FA5388](v81);
  uint64_t v239 = (char *)&v226 - v84;
  MEMORY[0x270FA5388](v83);
  uint64_t v86 = (char *)&v226 - v85;
  uint64_t v87 = sub_250F0C970();
  uint64_t v88 = *(void *)(v87 - 8);
  uint64_t v89 = MEMORY[0x270FA5388](v87);
  v308 = (char *)&v226 - ((v90 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = MEMORY[0x270FA5388](v89);
  v269 = (char *)&v226 - v92;
  uint64_t v93 = MEMORY[0x270FA5388](v91);
  uint64_t v306 = (uint64_t)&v226 - v94;
  MEMORY[0x270FA5388](v93);
  uint64_t v96 = (char *)&v226 - v95;
  uint64_t v97 = (uint64_t *)(v1
                  + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_baselineAggregates);
  uint64_t result = swift_beginAccess();
  uint64_t v301 = v97;
  uint64_t v99 = *v97;
  uint64_t v100 = *(void *)(*v97 + 16);
  if (!v100) {
    return result;
  }
  uint64_t v238 = v88;
  unint64_t v102 = *(void (**)(uint64_t, unint64_t, uint64_t))(v88 + 16);
  uint64_t v101 = v88 + 16;
  unint64_t v298 = (*(unsigned __int8 *)(v101 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 64);
  uint64_t v317 = *(void *)(v101 + 56);
  uint64_t v279 = v96;
  uint64_t v313 = v87;
  uint64_t v311 = v101;
  v310 = v102;
  v102((uint64_t)v96, v99 + v298 + v317 * (v100 - 1), v87);
  uint64_t v103 = v1;
  uint64_t v104 = v1
       + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_signposter;
  sub_250F0CBF0();
  uint64_t v228 = v104;
  uint64_t v105 = sub_250F0CC20();
  int v106 = sub_250F0D260();
  char v107 = sub_250F0D2B0();
  uint64_t v258 = v23;
  if (v107)
  {
    uint64_t v235 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    unint64_t v234 = (v80 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v108 = v239;
    LODWORD(v321) = v106;
    uint64_t v109 = v240;
    v235(v239, v86, v240);
    uint64_t v110 = v103;
    uint64_t v111 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v111 = 0;
    os_signpost_id_t v112 = sub_250F0CBE0();
    _os_signpost_emit_with_name_impl(&dword_250E86000, v105, (os_signpost_type_t)v321, v112, "SleepingSampleBaselineAccumulator.completeDaySummariesIfPossible", "", v111, 2u);
    uint64_t v113 = v111;
    uint64_t v103 = v110;
    MEMORY[0x25338EC30](v113, -1, -1);

    (*(void (**)(char *, uint64_t))(v80 + 8))(v108, v109);
    unint64_t v114 = v234;
    uint64_t v115 = v235;
  }
  else
  {

    uint64_t v115 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    unint64_t v114 = (v80 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    uint64_t v109 = v240;
    uint64_t v108 = v239;
  }
  uint64_t v235 = v115;
  unint64_t v234 = v114;
  v115(v108, v86, v109);
  sub_250F0CC70();
  swift_allocObject();
  uint64_t v231 = sub_250F0CC60();
  uint64_t v116 = *(void (**)(char *, uint64_t))(v80 + 8);
  uint64_t v229 = v80 + 8;
  long long v227 = v116;
  v116(v86, v109);
  uint64_t v117 = (uint64_t *)(v103
                   + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_aggregatesToComplete);
  swift_beginAccess();
  uint64_t v230 = v117;
  uint64_t v118 = *v117;
  uint64_t v119 = &unk_26B20E000;
  uint64_t v120 = v313;
  uint64_t v121 = (uint64_t)v281;
  uint64_t v257 = *(void *)(*v117 + 16);
  if (v257)
  {
    uint64_t v256 = v103
         + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
    uint64_t v253 = OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_warmupProgressProvider;
    uint64_t v250 = (unint64_t *)(v103
                              + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_completedDaySummaries);
    uint64_t v255 = v118 + v298;
    uint64_t v122 = (char **)(v322 + 8);
    uint64_t v254 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v322 + 48);
    uint64_t v249 = OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_outlierContextProvider;
    v319 = (void (**)(char *, uint64_t, uint64_t))(v322 + 16);
    v312 = (void (**)(uint64_t, uint64_t))(v238 + 8);
    uint64_t v251 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v238 + 56);
    long long v248 = (void (**)(char *, char *, uint64_t))(v322 + 32);
    long long v247 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v238 + 48);
    uint64_t v246 = (void (**)(char *, uint64_t, uint64_t))(v280 + 16);
    uint64_t v245 = v280 + 32;
    char v244 = (void (**)(uint64_t, uint64_t))(v280 + 8);
    uint64_t v123 = swift_bridgeObjectRetain();
    unint64_t v124 = 0;
    uint64_t v307 = -v317;
    uint64_t v321 = v122;
    uint64_t v288 = v103;
    uint64_t v252 = v123;
    while (1)
    {
      if (v124 >= *(void *)(v123 + 16)) {
        goto LABEL_67;
      }
      unint64_t v125 = v124;
      v310(v306, v255 + v124 * v317, v313);
      os_signpost_type_t v126 = v295;
      sub_250F0C920();
      uint64_t v127 = v320;
      sub_250F0C5E0();
      uint64_t v322 = *v122;
      ((void (*)(char *, uint64_t))v322)(v126, v51);
      uint64_t v128 = *v254;
      uint64_t v129 = v278;
      unsigned int v130 = (*v254)(v278, 1, v51);
      uint64_t v131 = v127;
      uint64_t v132 = v282;
      sub_250E8DBD8(v131, v282, (uint64_t (*)(void))sub_250EC18D8);
      sub_250E8DBD8(v129, v121, (uint64_t (*)(void))sub_250E9241C);
      if (v130 == 1)
      {
        sub_250E8BD5C(v121, (uint64_t (*)(void))sub_250E9241C);
        sub_250E8BD5C(v132, (uint64_t (*)(void))sub_250EC18D8);
        int v133 = 1;
      }
      else
      {
        uint64_t v134 = v243;
        sub_250E8DBD8(v121, v243, (uint64_t (*)(void))sub_250E9241C);
        if (v128(v134, 1, v51) == 1) {
          goto LABEL_73;
        }
        sub_250E92C80();
        char v135 = sub_250F0CF00();
        uint64_t v136 = v242;
        (*v319)(v242, v134, v51);
        uint64_t v137 = v132;
        uint64_t v138 = v241;
        sub_250E8DBD8(v137, v241, (uint64_t (*)(void))sub_250EC18D8);
        if (v135) {
          int v139 = sub_250F0CEE0();
        }
        else {
          int v139 = 0;
        }
        sub_250E8BD5C(v138, (uint64_t (*)(void))sub_250EC18D8);
        uint64_t v140 = (void (*)(uint64_t, uint64_t))v322;
        ((void (*)(char *, uint64_t))v322)(v136, v51);
        sub_250E8BD5C(v121, (uint64_t (*)(void))sub_250E9241C);
        sub_250E8BD5C(v282, (uint64_t (*)(void))sub_250EC18D8);
        v140(v134, v51);
        int v133 = v139 ^ 1;
      }
      LODWORD(v296) = v133;
      uint64_t v141 = *(void *)(*v301 + 16);
      if (!v141) {
        goto LABEL_75;
      }
      unint64_t v283 = v125 + 1;
      swift_bridgeObjectRetain();
      unint64_t v142 = 0;
      unint64_t v143 = v298;
      while (1)
      {
        sub_250F0C920();
        sub_250E92C80();
        uint64_t v145 = v320;
        char v146 = sub_250F0CF00();
        uint64_t v147 = v64;
        uint64_t v148 = v316;
        uint64_t v318 = *v319;
        v318(v316, (uint64_t)v147, v51);
        uint64_t v149 = v145;
        uint64_t v150 = v315;
        sub_250E8DBD8(v149, v315, (uint64_t (*)(void))sub_250EC18D8);
        if (v146) {
          break;
        }
        sub_250E8BD5C(v150, (uint64_t (*)(void))sub_250EC18D8);
        uint64_t v144 = (void (*)(char *, uint64_t))v322;
        ((void (*)(char *, uint64_t))v322)(v148, v51);
        v144(v147, v51);
        unint64_t v64 = v147;
LABEL_18:
        ++v142;
        v143 += v317;
        if (v141 == v142) {
          goto LABEL_74;
        }
      }
      char v151 = sub_250F0CEE0();
      sub_250E8BD5C(v150, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v152 = (void (*)(char *, uint64_t))v322;
      ((void (*)(char *, uint64_t))v322)(v148, v51);
      v152(v147, v51);
      unint64_t v64 = v147;
      if ((v151 & 1) == 0) {
        goto LABEL_18;
      }
      swift_bridgeObjectRelease();
      uint64_t v153 = *v301;
      unint64_t v154 = *(void *)(*v301 + 16);
      if (v154 < v142) {
        goto LABEL_68;
      }
      uint64_t v155 = v153 + v298;
      uint64_t v297 = v153 + v298;
      uint64_t v287 = (2 * v154) | 1;
      uint64_t v156 = swift_bridgeObjectRetain();
      uint64_t v157 = v306;
      sub_250EC25FC(v156, v155, v142, (2 * v154) | 1, v306, v302);
      sub_250EC23FC(v153, v155, v142, (2 * v154) | 1, v157, v303);
      sub_250EC27F8(v153, v155, v142, (2 * v154) | 1, v157, v304);
      sub_250EC2A18(v153, v155, v142, (2 * v154) | 1);
      uint64_t v159 = *(void *)(*(void *)v158 + 104);
      long long v160 = *(_OWORD *)(v288 + v253);
      uint64_t v299 = v158;
      *(_OWORD *)(v158 + v159) = v160;
      swift_unknownObjectRetain();
      swift_unknownObjectRelease();
      uint64_t KeyPath = swift_getKeyPath();
      int v161 = self;
      id v162 = objc_msgSend(v161, sel_hourUnit);
      unint64_t v163 = self;
      id v285 = objc_msgSend(v163, sel_quantityWithUnit_doubleValue_, v162, 1.0);

      id v164 = objc_msgSend(v161, sel_hourUnit);
      id v284 = objc_msgSend(v163, sel_quantityWithUnit_doubleValue_, v164, 3.8);

      id v165 = objc_msgSend(v161, sel_secondUnit);
      *(void *)&long long v327 = v153;
      *((void *)&v327 + 1) = v297;
      unint64_t v328 = v142;
      uint64_t v329 = v287;
      uint64_t v330 = sub_250ED0DC4;
      uint64_t v331 = KeyPath;
      uint64_t v297 = v153;
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t v166 = (uint64_t)v276;
      sub_250F0C900();
      sub_250EC9910(&v327, v166, v285, v284, 0, 0, v165, v305);
      swift_release();
      LOBYTE(v164) = sub_250F0C980();
      uint64_t v167 = v273;
      sub_250E8DBD8(v303, v273, (uint64_t (*)(void))sub_250EC32E8);
      if ((v164 & 1) == 0)
      {
        sub_250E8BD5C(v167, (uint64_t (*)(void))sub_250EC32E8);
        uint64_t v169 = v274;
        sub_250E8DBD8(v304, v274, (uint64_t (*)(void))sub_250EC32E8);
        uint64_t v120 = v313;
LABEL_29:
        sub_250E8BD5C(v169, (uint64_t (*)(void))sub_250EC32E8);
LABEL_30:
        uint64_t v172 = v277;
        sub_250E8DBD8(v305, v277, (uint64_t (*)(void))sub_250EC32E8);
LABEL_31:
        sub_250E8BD5C(v172, (uint64_t (*)(void))sub_250EC32E8);
        if ((v296 & 1) == 0) {
          goto LABEL_54;
        }
        goto LABEL_32;
      }
      char v168 = sub_250F0C980();
      sub_250E8BD5C(v167, (uint64_t (*)(void))sub_250EC32E8);
      uint64_t v169 = v274;
      sub_250E8DBD8(v304, v274, (uint64_t (*)(void))sub_250EC32E8);
      uint64_t v120 = v313;
      if ((v168 & 1) == 0) {
        goto LABEL_29;
      }
      char v170 = sub_250F0C980();
      sub_250E8BD5C(v169, (uint64_t (*)(void))sub_250EC32E8);
      if ((v170 & 1) == 0) {
        goto LABEL_30;
      }
      char v171 = sub_250F0C980();
      uint64_t v172 = v277;
      sub_250E8DBD8(v305, v277, (uint64_t (*)(void))sub_250EC32E8);
      if ((v171 & 1) == 0) {
        goto LABEL_31;
      }
      int v173 = sub_250F0C980();
      sub_250E8BD5C(v172, (uint64_t (*)(void))sub_250EC32E8);
      if (((v296 | v173) & 1) == 0)
      {
LABEL_54:
        swift_release();
        swift_bridgeObjectRelease();
        sub_250E8BD5C(v305, (uint64_t (*)(void))sub_250EC32E8);
        sub_250E8BD5C(v304, (uint64_t (*)(void))sub_250EC32E8);
        sub_250E8BD5C(v303, (uint64_t (*)(void))sub_250EC32E8);
        sub_250E8BD5C(v302, (uint64_t (*)(void))sub_250EC32E8);
        (*v312)(v306, v120);
        swift_bridgeObjectRelease();
        sub_250E8BD5C(v320, (uint64_t (*)(void))sub_250EC18D8);
        uint64_t v103 = v288;
        uint64_t v119 = (void *)&unk_26B20E000;
        break;
      }
LABEL_32:
      if (v154 != v142)
      {
        uint64_t v174 = v297 + v298 + v317 * (v154 - 1);
        while ((uint64_t)v154 > (uint64_t)v142)
        {
          uint64_t v175 = v308;
          v310((uint64_t)v308, v174, v120);
          uint64_t v176 = v309;
          sub_250F0C8F0();
          uint64_t v177 = sub_250F0C060();
          int v178 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v177 - 8) + 48))(v176, 1, v177);
          uint64_t v179 = (uint64_t)v176;
          uint64_t v120 = v313;
          sub_250E8BD5C(v179, (uint64_t (*)(void))sub_250E8C788);
          (*v312)((uint64_t)v175, v120);
          if (v178 != 1)
          {
            v310(v300, v174, v120);
            uint64_t v180 = 0;
            goto LABEL_39;
          }
          --v154;
          v174 += v307;
          if (v142 == v154) {
            goto LABEL_37;
          }
        }
        __break(1u);
LABEL_67:
        __break(1u);
LABEL_68:
        __break(1u);
LABEL_69:
        __break(1u);
        goto LABEL_70;
      }
LABEL_37:
      uint64_t v180 = 1;
LABEL_39:
      (*v251)(v300, v180, 1, v120);
      sub_250F0C920();
      uint64_t v181 = v272;
      if (v142 >= *(void *)(*v301 + 16)) {
        goto LABEL_69;
      }
      id v182 = v269;
      v310((uint64_t)v269, *v301 + v143, v120);
      uint64_t v183 = v295;
      sub_250F0C920();
      uint64_t v296 = *v312;
      v296((uint64_t)v182, v120);
      uint64_t v184 = v270;
      sub_250F0C920();
      uint64_t v185 = v271;
      sub_250F0CDA0();
      sub_250F0CDC0();
      uint64_t v186 = (void (*)(char *, uint64_t))v322;
      ((void (*)(char *, uint64_t))v322)(v185, v51);
      v186(v184, v51);
      if ((sub_250F0CF00() & 1) == 0)
      {
LABEL_70:
        __break(1u);
LABEL_71:
        __break(1u);
        goto LABEL_72;
      }
      uint64_t v187 = v292;
      uint64_t v188 = v291;
      uint64_t v189 = &v291[*(int *)(v292 + 48)];
      os_log_type_t v190 = v181;
      uint64_t v191 = *v248;
      (*v248)(v291, v183, v51);
      uint64_t v287 = (uint64_t)v189;
      v191(v189, v190, v51);
      uint64_t v192 = v262;
      uint64_t v193 = &v262[*(int *)(v187 + 48)];
      uint64_t v194 = v318;
      v318(v262, (uint64_t)v188, v51);
      v194(v193, (uint64_t)v189, v51);
      uint64_t v195 = (uint64_t)v259;
      v191(v259, v192, v51);
      ((void (*)(char *, uint64_t))v322)(v193, v51);
      char v196 = &v192[*(int *)(v292 + 48)];
      v191(v192, v291, v51);
      v191(v196, (char *)v287, v51);
      v191((char *)(v195 + *(int *)(v314 + 36)), v196, v51);
      ((void (*)(char *, uint64_t))v322)(v192, v51);
      uint64_t v197 = v313;
      sub_250ED119C(v195, v289, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v198 = v260;
      sub_250E8DBD8(v300, v260, (uint64_t (*)(void))sub_250ECFAD4);
      if ((*v247)(v198, 1, v197) == 1)
      {
        sub_250E8BD5C(v198, (uint64_t (*)(void))sub_250ECFAD4);
        uint64_t v199 = sub_250F0C060();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v199 - 8) + 56))(v293, 1, 1, v199);
      }
      else
      {
        sub_250F0C8F0();
        v296(v198, v197);
      }
      sub_250EC9C30(v263);
      sub_250EC9C30(v264);
      sub_250EC9C30(v265);
      sub_250ECEA84(v266);
      sub_250EC9C30(v267);
      uint64_t v200 = (uint64_t)v261;
      sub_250F0C4C0();
      uint64_t v103 = v288;
      if (*(void *)(v288 + v249))
      {
        sub_250ED6E10(v200, v268);
      }
      else
      {
        uint64_t v201 = sub_250F0C500();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v201 - 8) + 56))(v268, 1, 1, v201);
      }
      uint64_t v202 = v258;
      v203 = v290;
      sub_250F0C510();
      (*v246)(v203, v200, v202);
      uint64_t v204 = v250;
      swift_beginAccess();
      unint64_t v205 = *v204;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v204 = v205;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v205 = sub_250EA1E8C(0, *(void *)(v205 + 16) + 1, 1, v205);
        unint64_t *v250 = v205;
      }
      unint64_t v208 = *(void *)(v205 + 16);
      unint64_t v207 = *(void *)(v205 + 24);
      if (v208 >= v207 >> 1)
      {
        unint64_t v205 = sub_250EA1E8C(v207 > 1, v208 + 1, 1, v205);
        unint64_t *v250 = v205;
      }
      *(void *)(v205 + 16) = v208 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v280 + 32))(v205+ ((*(unsigned __int8 *)(v280 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v280 + 80))+ *(void *)(v280 + 72) * v208, v290, v202);
      swift_endAccess();
      int v209 = v301;
      swift_beginAccess();
      if (*(void *)(*v209 + 16) <= v142) {
        goto LABEL_71;
      }
      sub_250ED0DCC(0, v142 + 1, (uint64_t (*)(void))sub_250EA21B8, MEMORY[0x263F42EB8]);
      swift_endAccess();
      swift_release();
      swift_bridgeObjectRelease();
      (*v244)(v200, v202);
      sub_250E8BD5C(v300, (uint64_t (*)(void))sub_250ECFAD4);
      sub_250E8BD5C(v305, (uint64_t (*)(void))sub_250EC32E8);
      sub_250E8BD5C(v304, (uint64_t (*)(void))sub_250EC32E8);
      sub_250E8BD5C(v303, (uint64_t (*)(void))sub_250EC32E8);
      sub_250E8BD5C(v302, (uint64_t (*)(void))sub_250EC32E8);
      v296(v306, v313);
      sub_250E8BD5C(v320, (uint64_t (*)(void))sub_250EC18D8);
      unint64_t v124 = v283;
      uint64_t v121 = (uint64_t)v281;
      uint64_t v123 = v252;
      uint64_t v122 = v321;
      if (v283 == v257)
      {
        swift_bridgeObjectRelease();
        uint64_t v119 = &unk_26B20E000;
        uint64_t v120 = v313;
        break;
      }
    }
  }
  uint64_t v210 = v103 + v119[263];
  swift_beginAccess();
  unint64_t v211 = *(void *)(*(void *)v210 + 16);
  uint64_t v212 = v230;
  swift_beginAccess();
  unint64_t v213 = v237;
  uint64_t v214 = v240;
  BOOL v215 = v236;
  uint64_t v216 = v239;
  uint64_t v217 = v238;
  if (!v211) {
    goto LABEL_58;
  }
  if (*(void *)(*v212 + 16) >= v211)
  {
    sub_250ED0DCC(0, v211, (uint64_t (*)(void))sub_250EA21B8, MEMORY[0x263F42EB8]);
LABEL_58:
    swift_endAccess();
    char v218 = sub_250F0CC20();
    sub_250F0CC50();
    os_signpost_type_t v219 = sub_250F0D250();
    if (sub_250F0D2B0())
    {
      swift_retain();
      sub_250F0CC80();
      swift_release();
      uint64_t v220 = v232;
      uint64_t v221 = v233;
      if ((*(unsigned int (**)(char *, uint64_t))(v232 + 88))(v213, v233) == *MEMORY[0x263F90238])
      {
        unint64_t v222 = "[Error] Interval already ended";
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v220 + 8))(v213, v221);
        unint64_t v222 = "";
      }
      v235(v216, v215, v214);
      os_log_t v223 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)os_log_t v223 = 0;
      os_signpost_id_t v224 = sub_250F0CBE0();
      _os_signpost_emit_with_name_impl(&dword_250E86000, v218, v219, v224, "SleepingSampleBaselineAccumulator.completeDaySummariesIfPossible", v222, v223, 2u);
      MEMORY[0x25338EC30](v223, -1, -1);

      uint64_t v225 = v227;
      v227(v215, v214);
      uint64_t v120 = v313;
      v225(v216, v214);
    }
    else
    {

      v227(v215, v214);
    }
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v217 + 8))(v279, v120);
  }
LABEL_72:
  __break(1u);
LABEL_73:
  __break(1u);
LABEL_74:
  swift_bridgeObjectRelease();
LABEL_75:
  unint64_t v325 = 0;
  unint64_t v326 = 0xE000000000000000;
  sub_250F0D480();
  swift_bridgeObjectRelease();
  unint64_t v325 = 0xD000000000000027;
  unint64_t v326 = 0x8000000250F11E90;
  uint64_t v323 = 0;
  unint64_t v324 = 0xE000000000000000;
  sub_250F0D560();
  sub_250F0CFB0();
  sub_250F0D560();
  sub_250F0CFB0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_250F0D590();
  __break(1u);
  return result;
}

uint64_t sub_250ECE7F0()
{
  uint64_t v1 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_queryRange;
  uint64_t v2 = sub_250F0C640();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v3 = v0
     + OBJC_IVAR____TtC19HealthBalanceDaemonP33_F8CD1DC1556DB85D27156507F24B2A6E33SleepingSampleBaselineAccumulator_signposter;
  uint64_t v4 = sub_250F0CC30();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_250ECE924()
{
  return type metadata accessor for SleepingSampleBaselineAccumulator();
}

uint64_t type metadata accessor for SleepingSampleBaselineAccumulator()
{
  uint64_t result = qword_26B20E850;
  if (!qword_26B20E850) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250ECE978()
{
  uint64_t result = sub_250F0C640();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0CC30();
    if (v2 <= 0x3F)
    {
      uint64_t result = swift_updateClassMetadata2();
      if (!result) {
        return 0;
      }
    }
  }
  return result;
}

uint64_t sub_250ECEA68()
{
  return swift_getWitnessTable();
}

void sub_250ECEA84(uint64_t a1@<X8>)
{
  uint64_t v154 = a1;
  sub_250E8E700();
  uint64_t v134 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v128 = (char *)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v127 = (char *)&v117 - v5;
  uint64_t v132 = sub_250F0CE70();
  uint64_t v137 = *(void *)(v132 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v132);
  unsigned int v130 = (char *)&v117 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v129 = (char *)&v117 - v9;
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v136 = (char *)&v117 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v131 = (char *)&v117 - v12;
  sub_250EC1864(0);
  MEMORY[0x270FA5388](v13 - 8);
  uint64_t v142 = (uint64_t)&v117 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_250F0CA10();
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v143 = v15;
  uint64_t v144 = v16;
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v125 = (char *)&v117 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  int v133 = (char *)&v117 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v138 = (char *)&v117 - v22;
  MEMORY[0x270FA5388](v21);
  int v139 = (char *)&v117 - v23;
  sub_250EC18D8(0);
  uint64_t v140 = *(void (**)(char *, uint64_t))(v24 - 8);
  uint64_t v141 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  os_signpost_type_t v126 = (char *)&v117 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  uint64_t v145 = (uint64_t)&v117 - v27;
  uint64_t v147 = sub_250F0C400();
  uint64_t v151 = *(void *)(v147 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v147);
  uint64_t v30 = (char *)&v117 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v28);
  char v146 = (char *)&v117 - v31;
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v32 - 8);
  uint64_t v34 = (char *)&v117 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v35 = sub_250F0BF30();
  uint64_t v149 = *(void *)(v35 - 8);
  uint64_t v150 = v35;
  MEMORY[0x270FA5388](v35);
  uint64_t v37 = (char *)&v117 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250ED0FC4(0);
  MEMORY[0x270FA5388](v38 - 8);
  uint64_t v40 = (char *)&v117 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v41 = sub_250F0C470();
  uint64_t v42 = *(void *)(v41 - 8);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  char v135 = (char *)&v117 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v47 = (char *)&v117 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v148 = (char *)&v117 - v48;
  uint64_t v49 = sub_250F0C810();
  uint64_t v152 = *(void *)(v49 - 8);
  uint64_t v153 = v49;
  MEMORY[0x270FA5388](v49);
  uint64_t v155 = (uint64_t)&v117 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EC9C30(v155);
  uint64_t v51 = *(void *)(v1 + *(void *)(*(void *)v1 + 104));
  if (!v51) {
    goto LABEL_25;
  }
  sub_250E8DBD8(v1 + *(void *)(*(void *)v1 + 112), (uint64_t)v40, (uint64_t (*)(void))sub_250ED0FC4);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48))(v40, 1, v41) == 1)
  {
    sub_250E8BD5C((uint64_t)v40, (uint64_t (*)(void))sub_250ED0FC4);
LABEL_25:
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v152 + 32))(v154, v155, v153);
    return;
  }
  uint64_t v52 = v148;
  (*(void (**)(char *, char *, uint64_t))(v42 + 32))(v148, v40, v41);
  swift_unknownObjectRetain();
  sub_250F0C450();
  uint64_t v54 = v149;
  uint64_t v53 = v150;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v149 + 48))(v34, 1, v150) == 1)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v52, v41);
    swift_unknownObjectRelease();
    sub_250E8BD5C((uint64_t)v34, (uint64_t (*)(void))sub_250E98BC4);
    goto LABEL_25;
  }
  uint64_t v121 = (char *)v42;
  uint64_t v122 = v51;
  uint64_t v123 = v41;
  uint64_t v55 = *(void (**)(char *, char *, uint64_t))(v54 + 32);
  unint64_t v124 = v37;
  v55(v37, v34, v53);
  uint64_t v56 = v146;
  sub_250F0C410();
  uint64_t v57 = v151;
  uint64_t v58 = v147;
  (*(void (**)(char *, void, uint64_t))(v151 + 104))(v30, *MEMORY[0x263F42D08], v147);
  char v59 = sub_250F0C3F0();
  uint64_t v60 = *(void (**)(char *, uint64_t))(v57 + 8);
  v60(v30, v58);
  uint64_t v151 = v57 + 8;
  uint64_t v120 = v60;
  v60(v56, v58);
  if ((v59 & 1) == 0)
  {
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v54 + 8))(v124, v53);
    (*((void (**)(char *, uint64_t))v121 + 1))(v52, v123);
    goto LABEL_25;
  }
  uint64_t v61 = (uint64_t)v124;
  uint64_t v62 = sub_250EFA5F8((uint64_t)v124);
  uint64_t v63 = v121;
  if (v64)
  {
    swift_unknownObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v54 + 8))(v61, v53);
    (*((void (**)(char *, uint64_t))v63 + 1))(v52, v123);
    goto LABEL_25;
  }
  uint64_t v119 = v62;
  uint64_t v65 = v139;
  sub_250F0C740();
  uint64_t v66 = v142;
  sub_250F0C990();
  uint64_t v67 = v143;
  uint64_t v68 = *(void (**)(char *, uint64_t))(v144 + 8);
  int v139 = (char *)(v144 + 8);
  uint64_t v118 = v68;
  v68(v65, v143);
  uint64_t v69 = v123;
  (*((void (**)(char *, char *, uint64_t))v63 + 2))(v47, v52, v123);
  if ((*((unsigned int (**)(uint64_t, uint64_t, uint64_t))v140 + 6))(v66, 1, v141) == 1)
  {
    uint64_t v70 = v131;
    sub_250F0C420();
    uint64_t v71 = v129;
    sub_250F0C420();
    uint64_t v72 = v130;
    sub_250F0CDA0();
    sub_250F0CDC0();
    uint64_t v74 = (char *)(v137 + 8);
    uint64_t v73 = *(void (**)(char *, uint64_t))(v137 + 8);
    uint64_t v75 = v132;
    v73(v72, v132);
    unsigned int v130 = v74;
    uint64_t v129 = (char *)v73;
    v73(v71, v75);
    uint64_t v76 = v70;
    sub_250E92C80();
    LOBYTE(v72) = sub_250F0CF00();
    uint64_t v140 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
    v140(v47, v69);
    if ((v72 & 1) == 0)
    {
LABEL_27:
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    uint64_t v77 = v134;
    uint64_t v78 = v127;
    uint64_t v79 = &v127[*(int *)(v134 + 48)];
    uint64_t v80 = v137;
    uint64_t v81 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
    v81(v127, v76, v75);
    uint64_t v121 = v79;
    v81(v79, v136, v75);
    uint64_t v82 = *(int *)(v77 + 48);
    uint64_t v83 = v128;
    uint64_t v84 = &v128[v82];
    uint64_t v85 = *(void (**)(char *, char *, uint64_t))(v80 + 16);
    v85(v128, v78, v75);
    v85(v84, v79, v75);
    uint64_t v86 = (uint64_t)v126;
    v81(v126, v83, v75);
    uint64_t v87 = v84;
    uint64_t v88 = (void (*)(char *, uint64_t))v129;
    ((void (*)(char *, uint64_t))v129)(v87, v75);
    uint64_t v89 = &v83[*(int *)(v134 + 48)];
    v81(v83, v78, v75);
    v81(v89, v121, v75);
    v81((char *)(v86 + *(int *)(v141 + 36)), v89, v75);
    v88(v83, v75);
    sub_250ED119C(v86, v145, (uint64_t (*)(void))sub_250EC18D8);
    sub_250E8BD5C(v142, (uint64_t (*)(void))sub_250EC1864);
    uint64_t v67 = v143;
    uint64_t v69 = v123;
    uint64_t v90 = v140;
  }
  else
  {
    uint64_t v91 = (void (*)(char *, uint64_t))*((void *)v63 + 1);
    v91(v47, v69);
    uint64_t v90 = v91;
    sub_250ED119C(v66, v145, (uint64_t (*)(void))sub_250EC18D8);
  }
  uint64_t v92 = v135;
  sub_250F0C800();
  uint64_t v93 = v146;
  sub_250F0C410();
  v90(v92, v69);
  LOBYTE(v92) = sub_250F0C3E0();
  v120(v93, v147);
  uint64_t v94 = v119 + (v92 & 1);
  uint64_t v95 = (uint64_t)v138;
  uint64_t v96 = (uint64_t)v124;
  if (__OFADD__(v119, v92 & 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (sub_250F0C7C0() > 3)
  {
    uint64_t v151 = v94;
    uint64_t v140 = v90;
    sub_250EC57F0();
    uint64_t v105 = *(int *)(v104 + 48);
    uint64_t v147 = *(int *)(v104 + 64);
    sub_250E8DBD8(v145, v95, (uint64_t (*)(void))sub_250EC18D8);
    int v106 = v133;
    sub_250F0C740();
    uint64_t v107 = sub_250F0C9F0();
    uint64_t v108 = v118;
    v118(v106, v67);
    uint64_t v109 = v125;
    sub_250F0C740();
    uint64_t v110 = sub_250F0CA00();
    v108(v109, v67);
    uint64_t v111 = v110 - 1;
    if (!__OFSUB__(v110, 1))
    {
      BOOL v112 = __OFSUB__(v111, v151);
      uint64_t v113 = v111 - v151;
      if (!v112)
      {
        BOOL v112 = __OFADD__(v107, v113);
        uint64_t v114 = v107 + v113;
        if (!v112)
        {
          *(void *)(v95 + v105) = v114;
          uint64_t v115 = v133;
          sub_250F0C740();
          uint64_t v116 = sub_250F0CA00();
          v118(v115, v67);
          *(void *)(v95 + v147) = v116;
          uint64_t v103 = v123;
          uint64_t v90 = v140;
          uint64_t v96 = (uint64_t)v124;
          goto LABEL_24;
        }
        goto LABEL_32;
      }
LABEL_31:
      __break(1u);
LABEL_32:
      __break(1u);
      goto LABEL_33;
    }
    goto LABEL_29;
  }
  sub_250EC23BC();
  uint64_t v97 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  id v98 = objc_msgSend(v97, sel__rollingBaselineConfiguration);

  if (v98)
  {
    uint64_t v99 = (char *)objc_msgSend(v98, sel_minimumSampleCount);

    sub_250EC57F0();
    uint64_t v101 = *(int *)(v100 + 48);
    uint64_t v102 = *(int *)(v100 + 64);
    sub_250E8DBD8(v145, v95, (uint64_t (*)(void))sub_250EC18D8);
    if (!__OFSUB__(v99, v94))
    {
      *(void *)(v95 + v101) = &v99[-v94];
      if (!__OFSUB__(v99, 1))
      {
        *(void *)(v95 + v102) = v99 - 1;
        uint64_t v103 = v123;
LABEL_24:
        (*(void (**)(uint64_t, void, uint64_t))(v144 + 104))(v95, *MEMORY[0x263F42EC0], v67);
        sub_250F0C750();
        swift_unknownObjectRelease();
        sub_250E8BD5C(v145, (uint64_t (*)(void))sub_250EC18D8);
        (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v96, v150);
        v90(v148, v103);
        goto LABEL_25;
      }
      goto LABEL_30;
    }
    goto LABEL_28;
  }
LABEL_33:
  __break(1u);
}

void sub_250ECFA70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250ECFAD4(uint64_t a1)
{
}

uint64_t sub_250ECFB08(unint64_t a1)
{
  return sub_250EA231C(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_250ECFB1C(void *a1)
{
  return sub_250EA2200(0, a1[2], 0, a1);
}

uint64_t sub_250ECFB30(void *a1)
{
  uint64_t v2 = v1;
  sub_250EA31AC();
  uint64_t v141 = v4;
  uint64_t v135 = *(void *)(v4 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  uint64_t v132 = (uint64_t)&v127 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = MEMORY[0x270FA5388](v5);
  uint64_t v142 = (uint64_t)&v127 - v8;
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v138 = (uint64_t)&v127 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v137 = (uint64_t)&v127 - v11;
  uint64_t v12 = a1[1];
  uint64_t result = sub_250F0D640();
  if (result >= v12)
  {
    if (v12 < 0) {
      goto LABEL_138;
    }
    if (v12) {
      return sub_250ED05F4(0, v12, 1, a1);
    }
    return result;
  }
  if (v12 >= 0) {
    uint64_t v14 = v12;
  }
  else {
    uint64_t v14 = v12 + 1;
  }
  if (v12 < -1) {
    goto LABEL_146;
  }
  uint64_t v129 = result;
  if (v12 < 2)
  {
    uint64_t v18 = (char *)MEMORY[0x263F8EE78];
    unint64_t v134 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v135 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v135 + 80));
    uint64_t v128 = MEMORY[0x263F8EE78];
    if (v12 != 1)
    {
      unint64_t v20 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      uint64_t v120 = v18;
      if (v20 >= 2)
      {
        uint64_t v121 = *a1;
        do
        {
          unint64_t v122 = v20 - 2;
          if (v20 < 2) {
            goto LABEL_133;
          }
          if (!v121) {
            goto LABEL_145;
          }
          uint64_t v123 = *(void *)&v120[16 * v122 + 32];
          uint64_t v124 = *(void *)&v120[16 * v20 + 24];
          sub_250ED08BC(v121 + *(void *)(v135 + 72) * v123, v121 + *(void *)(v135 + 72) * *(void *)&v120[16 * v20 + 16], v121 + *(void *)(v135 + 72) * v124, v134);
          if (v2) {
            break;
          }
          if (v124 < v123) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v120 = sub_250EF48D0((uint64_t)v120);
          }
          if (v122 >= *((void *)v120 + 2)) {
            goto LABEL_135;
          }
          unint64_t v125 = &v120[16 * v122 + 32];
          *(void *)unint64_t v125 = v123;
          *((void *)v125 + 1) = v124;
          unint64_t v126 = *((void *)v120 + 2);
          if (v20 > v126) {
            goto LABEL_136;
          }
          memmove(&v120[16 * v20 + 16], &v120[16 * v20 + 32], 16 * (v126 - v20));
          *((void *)v120 + 2) = v126 - 1;
          unint64_t v20 = v126 - 1;
        }
        while (v126 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v128 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v15 = v14 >> 1;
    uint64_t v16 = sub_250F0D080();
    *(void *)(v16 + 16) = v15;
    uint64_t v17 = *(unsigned __int8 *)(v135 + 80);
    uint64_t v128 = v16;
    unint64_t v134 = v16 + ((v17 + 32) & ~v17);
  }
  uint64_t v19 = 0;
  uint64_t v18 = (char *)MEMORY[0x263F8EE78];
  int v139 = a1;
  while (1)
  {
    uint64_t v21 = v19;
    uint64_t v22 = v19 + 1;
    uint64_t v133 = v19;
    if (v19 + 1 >= v12)
    {
      uint64_t v32 = v19 + 1;
      goto LABEL_24;
    }
    uint64_t v136 = *a1;
    uint64_t v143 = *(void *)(v135 + 72);
    uint64_t v23 = v143;
    uint64_t v24 = v137;
    sub_250E8DBD8(v136 + v143 * v22, v137, (uint64_t (*)(void))sub_250EA31AC);
    uint64_t v25 = v136 + v23 * v21;
    uint64_t v26 = v138;
    sub_250E8DBD8(v25, v138, (uint64_t (*)(void))sub_250EA31AC);
    uint64_t v27 = *(int *)(v141 + 48);
    double v28 = *(double *)(v24 + v27);
    double v29 = *(double *)(v26 + v27);
    uint64_t v30 = v26;
    uint64_t v31 = v136;
    sub_250E8BD5C(v30, (uint64_t (*)(void))sub_250EA31AC);
    sub_250E8BD5C(v24, (uint64_t (*)(void))sub_250EA31AC);
    uint64_t v32 = v21 + 2;
    if (v21 + 2 >= v12)
    {
LABEL_21:
      if (v28 >= v29) {
        goto LABEL_24;
      }
LABEL_42:
      if (v32 < v21) {
        goto LABEL_139;
      }
      if (v21 < v32)
      {
        unsigned int v130 = v18;
        uint64_t v131 = v12;
        uint64_t v56 = 0;
        uint64_t v57 = v21;
        uint64_t v58 = v143;
        uint64_t v59 = v143 * (v32 - 1);
        uint64_t v60 = v32 * v143;
        uint64_t v61 = v57;
        uint64_t v62 = v57 * v143;
        do
        {
          if (v61 != v32 + v56 - 1)
          {
            uint64_t v64 = v32;
            uint64_t v65 = v136;
            if (!v136) {
              goto LABEL_144;
            }
            unint64_t v66 = v136 + v62;
            uint64_t v140 = v136 + v59;
            sub_250ED119C(v136 + v62, v132, (uint64_t (*)(void))sub_250EA31AC);
            if (v62 < v59 || v66 >= v65 + v60)
            {
              uint64_t v63 = v140;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v63 = v140;
              if (v62 != v59) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_250ED119C(v132, v63, (uint64_t (*)(void))sub_250EA31AC);
            uint64_t v32 = v64;
            uint64_t v58 = v143;
          }
          ++v61;
          --v56;
          v59 -= v58;
          v60 -= v58;
          v62 += v58;
        }
        while (v61 < v32 + v56);
        a1 = v139;
        uint64_t v18 = v130;
        uint64_t v12 = v131;
        uint64_t v21 = v133;
      }
      goto LABEL_24;
    }
    uint64_t v127 = v2;
    unsigned int v130 = v18;
    uint64_t v140 = v143 * v22;
    uint64_t v33 = v143 * v32;
    while (1)
    {
      uint64_t v34 = v12;
      uint64_t v35 = v32;
      uint64_t v36 = v137;
      sub_250E8DBD8(v31 + v33, v137, (uint64_t (*)(void))sub_250EA31AC);
      uint64_t v37 = v138;
      sub_250E8DBD8(v31 + v140, v138, (uint64_t (*)(void))sub_250EA31AC);
      BOOL v38 = *(double *)(v36 + *(int *)(v141 + 48)) >= *(double *)(v37 + *(int *)(v141 + 48));
      sub_250E8BD5C(v37, (uint64_t (*)(void))sub_250EA31AC);
      sub_250E8BD5C(v36, (uint64_t (*)(void))sub_250EA31AC);
      if (v28 < v29 == v38) {
        break;
      }
      ++v32;
      v31 += v143;
      uint64_t v12 = v34;
      if (v34 == v35 + 1)
      {
        uint64_t v32 = v34;
        a1 = v139;
        uint64_t v18 = v130;
        uint64_t v2 = v127;
        uint64_t v21 = v133;
        goto LABEL_21;
      }
    }
    a1 = v139;
    uint64_t v18 = v130;
    uint64_t v2 = v127;
    uint64_t v21 = v133;
    uint64_t v12 = v34;
    if (v28 < v29) {
      goto LABEL_42;
    }
LABEL_24:
    if (v32 >= v12) {
      goto LABEL_56;
    }
    if (__OFSUB__(v32, v21)) {
      goto LABEL_137;
    }
    if (v32 - v21 >= v129) {
      goto LABEL_56;
    }
    if (__OFADD__(v21, v129)) {
      goto LABEL_140;
    }
    uint64_t v39 = v21 + v129 >= v12 ? v12 : v21 + v129;
    if (v39 < v21) {
      break;
    }
    if (v32 != v39)
    {
      unsigned int v130 = v18;
      uint64_t v131 = v39;
      uint64_t v127 = v2;
      uint64_t v40 = *(void *)(v135 + 72);
      uint64_t v143 = v40 * (v32 - 1);
      uint64_t v136 = v40;
      uint64_t v41 = v32 * v40;
      do
      {
        uint64_t v43 = 0;
        uint64_t v44 = v21;
        uint64_t v140 = v32;
        while (1)
        {
          uint64_t v45 = *a1;
          uint64_t v46 = v41;
          uint64_t v47 = v41 + v43 + *a1;
          uint64_t v48 = v137;
          sub_250E8DBD8(v47, v137, (uint64_t (*)(void))sub_250EA31AC);
          uint64_t v49 = v143 + v43 + v45;
          uint64_t v50 = v138;
          sub_250E8DBD8(v49, v138, (uint64_t (*)(void))sub_250EA31AC);
          uint64_t v51 = *(int *)(v141 + 48);
          double v52 = *(double *)(v48 + v51);
          double v53 = *(double *)(v50 + v51);
          sub_250E8BD5C(v50, (uint64_t (*)(void))sub_250EA31AC);
          sub_250E8BD5C(v48, (uint64_t (*)(void))sub_250EA31AC);
          if (v52 >= v53) {
            break;
          }
          uint64_t v54 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v41 = v46;
          uint64_t v55 = v54 + v143 + v43;
          sub_250ED119C(v54 + v46 + v43, v142, (uint64_t (*)(void))sub_250EA31AC);
          swift_arrayInitWithTakeFrontToBack();
          sub_250ED119C(v142, v55, (uint64_t (*)(void))sub_250EA31AC);
          v43 -= v136;
          ++v44;
          a1 = v139;
          uint64_t v42 = v140;
          if (v140 == v44) {
            goto LABEL_35;
          }
        }
        uint64_t v42 = v140;
        uint64_t v41 = v46;
LABEL_35:
        uint64_t v32 = v42 + 1;
        v143 += v136;
        v41 += v136;
        uint64_t v21 = v133;
      }
      while (v32 != v131);
      uint64_t v32 = v131;
      uint64_t v2 = v127;
      uint64_t v18 = v130;
    }
LABEL_56:
    if (v32 < v21) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v140 = v32;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v18 = sub_250EF4590(0, *((void *)v18 + 2) + 1, 1, v18);
    }
    unint64_t v69 = *((void *)v18 + 2);
    unint64_t v68 = *((void *)v18 + 3);
    unint64_t v20 = v69 + 1;
    if (v69 >= v68 >> 1) {
      uint64_t v18 = sub_250EF4590((char *)(v68 > 1), v69 + 1, 1, v18);
    }
    *((void *)v18 + 2) = v20;
    uint64_t v70 = v18 + 32;
    uint64_t v71 = &v18[16 * v69 + 32];
    uint64_t v72 = v140;
    *(void *)uint64_t v71 = v21;
    *((void *)v71 + 1) = v72;
    if (v69)
    {
      while (1)
      {
        unint64_t v73 = v20 - 1;
        if (v20 >= 4)
        {
          uint64_t v78 = &v70[16 * v20];
          uint64_t v79 = *((void *)v78 - 8);
          uint64_t v80 = *((void *)v78 - 7);
          BOOL v84 = __OFSUB__(v80, v79);
          uint64_t v81 = v80 - v79;
          if (v84) {
            goto LABEL_121;
          }
          uint64_t v83 = *((void *)v78 - 6);
          uint64_t v82 = *((void *)v78 - 5);
          BOOL v84 = __OFSUB__(v82, v83);
          uint64_t v76 = v82 - v83;
          char v77 = v84;
          if (v84) {
            goto LABEL_122;
          }
          unint64_t v85 = v20 - 2;
          uint64_t v86 = &v70[16 * v20 - 32];
          uint64_t v88 = *(void *)v86;
          uint64_t v87 = *((void *)v86 + 1);
          BOOL v84 = __OFSUB__(v87, v88);
          uint64_t v89 = v87 - v88;
          if (v84) {
            goto LABEL_124;
          }
          BOOL v84 = __OFADD__(v76, v89);
          uint64_t v90 = v76 + v89;
          if (v84) {
            goto LABEL_127;
          }
          if (v90 >= v81)
          {
            uint64_t v108 = &v70[16 * v73];
            uint64_t v110 = *(void *)v108;
            uint64_t v109 = *((void *)v108 + 1);
            BOOL v84 = __OFSUB__(v109, v110);
            uint64_t v111 = v109 - v110;
            if (v84) {
              goto LABEL_131;
            }
            BOOL v101 = v76 < v111;
            goto LABEL_93;
          }
        }
        else
        {
          if (v20 != 3)
          {
            uint64_t v102 = *((void *)v18 + 4);
            uint64_t v103 = *((void *)v18 + 5);
            BOOL v84 = __OFSUB__(v103, v102);
            uint64_t v95 = v103 - v102;
            char v96 = v84;
            goto LABEL_87;
          }
          uint64_t v75 = *((void *)v18 + 4);
          uint64_t v74 = *((void *)v18 + 5);
          BOOL v84 = __OFSUB__(v74, v75);
          uint64_t v76 = v74 - v75;
          char v77 = v84;
        }
        if (v77) {
          goto LABEL_123;
        }
        unint64_t v85 = v20 - 2;
        uint64_t v91 = &v70[16 * v20 - 32];
        uint64_t v93 = *(void *)v91;
        uint64_t v92 = *((void *)v91 + 1);
        BOOL v94 = __OFSUB__(v92, v93);
        uint64_t v95 = v92 - v93;
        char v96 = v94;
        if (v94) {
          goto LABEL_126;
        }
        uint64_t v97 = &v70[16 * v73];
        uint64_t v99 = *(void *)v97;
        uint64_t v98 = *((void *)v97 + 1);
        BOOL v84 = __OFSUB__(v98, v99);
        uint64_t v100 = v98 - v99;
        if (v84) {
          goto LABEL_129;
        }
        if (__OFADD__(v95, v100)) {
          goto LABEL_130;
        }
        if (v95 + v100 >= v76)
        {
          BOOL v101 = v76 < v100;
LABEL_93:
          if (v101) {
            unint64_t v73 = v85;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v96) {
          goto LABEL_125;
        }
        uint64_t v104 = &v70[16 * v73];
        uint64_t v106 = *(void *)v104;
        uint64_t v105 = *((void *)v104 + 1);
        BOOL v84 = __OFSUB__(v105, v106);
        uint64_t v107 = v105 - v106;
        if (v84) {
          goto LABEL_128;
        }
        if (v107 < v95) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v112 = v73 - 1;
        if (v73 - 1 >= v20)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v113 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        uint64_t v114 = v18;
        uint64_t v115 = &v70[16 * v112];
        uint64_t v116 = *(void *)v115;
        uint64_t v117 = &v70[16 * v73];
        uint64_t v118 = *((void *)v117 + 1);
        sub_250ED08BC(v113 + *(void *)(v135 + 72) * *(void *)v115, v113 + *(void *)(v135 + 72) * *(void *)v117, v113 + *(void *)(v135 + 72) * v118, v134);
        if (v2) {
          goto LABEL_115;
        }
        if (v118 < v116) {
          goto LABEL_118;
        }
        if (v73 > *((void *)v114 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v115 = v116;
        *(void *)&v70[16 * v112 + 8] = v118;
        unint64_t v119 = *((void *)v114 + 2);
        if (v73 >= v119) {
          goto LABEL_120;
        }
        uint64_t v18 = v114;
        unint64_t v20 = v119 - 1;
        memmove(&v70[16 * v73], v117 + 16, 16 * (v119 - 1 - v73));
        *((void *)v114 + 2) = v119 - 1;
        a1 = v139;
        if (v119 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v20 = 1;
LABEL_14:
    uint64_t v12 = a1[1];
    uint64_t v19 = v140;
    if (v140 >= v12) {
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_250F0D580();
  __break(1u);
  return result;
}

uint64_t sub_250ED05F4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v29 = a1;
  sub_250EA31AC();
  uint64_t v32 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v33 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v27 - v11;
  uint64_t result = MEMORY[0x270FA5388](v10);
  uint64_t v16 = (char *)&v27 - v15;
  uint64_t v31 = a3;
  uint64_t v28 = a2;
  if (a3 != a2)
  {
    uint64_t v17 = *(void *)(v14 + 72);
    uint64_t v35 = v17 * (v31 - 1);
    uint64_t v30 = v17;
    uint64_t v34 = v17 * v31;
LABEL_5:
    uint64_t v18 = 0;
    uint64_t v19 = v29;
    while (1)
    {
      uint64_t v20 = *a4;
      uint64_t v21 = a4;
      sub_250E8DBD8(v34 + v18 + *a4, (uint64_t)v16, (uint64_t (*)(void))sub_250EA31AC);
      sub_250E8DBD8(v35 + v18 + v20, (uint64_t)v12, (uint64_t (*)(void))sub_250EA31AC);
      uint64_t v22 = *(int *)(v32 + 48);
      double v23 = *(double *)&v16[v22];
      double v24 = *(double *)&v12[v22];
      sub_250E8BD5C((uint64_t)v12, (uint64_t (*)(void))sub_250EA31AC);
      uint64_t result = sub_250E8BD5C((uint64_t)v16, (uint64_t (*)(void))sub_250EA31AC);
      if (v23 >= v24)
      {
LABEL_4:
        v35 += v30;
        v34 += v30;
        if (++v31 == v28) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v25 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v26 = v25 + v35 + v18;
      sub_250ED119C(v25 + v34 + v18, v33, (uint64_t (*)(void))sub_250EA31AC);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_250ED119C(v33, v26, (uint64_t (*)(void))sub_250EA31AC);
      v18 -= v30;
      ++v19;
      a4 = v21;
      if (v31 == v19) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_250ED08BC(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  sub_250EA31AC();
  uint64_t v43 = v8;
  uint64_t v9 = MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v41 - v12;
  uint64_t v15 = *(void *)(v14 + 72);
  if (!v15)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_69;
  }
  int64_t v16 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v15 == -1) {
    goto LABEL_70;
  }
  uint64_t v17 = (uint64_t)(a2 - a1) / v15;
  unint64_t v46 = a1;
  unint64_t v45 = a4;
  uint64_t v18 = v16 / v15;
  if (v17 >= v16 / v15)
  {
    if ((v18 & 0x8000000000000000) == 0)
    {
      uint64_t v20 = v18 * v15;
      if (a4 < a2 || a2 + v20 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v31 = a4 + v20;
      unint64_t v44 = a4 + v20;
      unint64_t v46 = a2;
      unint64_t v42 = a1;
      if (v20 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v33 = a3 - v15;
          sub_250E8DBD8(v31 - v15, (uint64_t)v13, (uint64_t (*)(void))sub_250EA31AC);
          unint64_t v34 = a2 - v15;
          sub_250E8DBD8(a2 - v15, (uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
          uint64_t v35 = *(int *)(v43 + 48);
          double v36 = *(double *)&v13[v35];
          double v37 = *(double *)&v11[v35];
          sub_250E8BD5C((uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
          sub_250E8BD5C((uint64_t)v13, (uint64_t (*)(void))sub_250EA31AC);
          if (v36 >= v37)
          {
            unint64_t v38 = v44;
            v44 -= v15;
            if (a3 < v38 || v33 >= v38)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v38)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v34 = a2;
          }
          else
          {
            if (a3 < a2 || v33 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v46 -= v15;
          }
          unint64_t v31 = v44;
          if (v44 <= a4) {
            break;
          }
          a2 = v34;
          a3 -= v15;
        }
        while (v34 > v42);
      }
      goto LABEL_67;
    }
  }
  else if ((v17 & 0x8000000000000000) == 0)
  {
    uint64_t v19 = v17 * v15;
    if (a4 < a1 || a1 + v19 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v21 = a4 + v19;
    unint64_t v44 = a4 + v19;
    if (v19 >= 1 && a2 < a3)
    {
      do
      {
        sub_250E8DBD8(a2, (uint64_t)v13, (uint64_t (*)(void))sub_250EA31AC);
        sub_250E8DBD8(a4, (uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
        uint64_t v23 = *(int *)(v43 + 48);
        double v24 = *(double *)&v13[v23];
        double v25 = *(double *)&v11[v23];
        sub_250E8BD5C((uint64_t)v11, (uint64_t (*)(void))sub_250EA31AC);
        sub_250E8BD5C((uint64_t)v13, (uint64_t (*)(void))sub_250EA31AC);
        unint64_t v26 = v46;
        if (v24 >= v25)
        {
          unint64_t v29 = v45 + v15;
          if (v46 < v45 || v46 >= v29)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 != v45)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v45 = v29;
          unint64_t v27 = a2;
        }
        else
        {
          unint64_t v27 = a2 + v15;
          if (v46 < a2 || v46 >= v27)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v46 == a2)
          {
            unint64_t v26 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v46 = v26 + v15;
        a4 = v45;
        if (v45 >= v21) {
          break;
        }
        a2 = v27;
      }
      while (v27 < a3);
    }
LABEL_67:
    sub_250EF46B8(&v46, &v45, (uint64_t *)&v44);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250ED0DA0()
{
  return sub_250F0C900();
}

uint64_t sub_250ED0DC4(uint64_t a1)
{
  return j__swift_getAtKeyPath(a1, v1);
}

uint64_t sub_250ED0DCC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), uint64_t (*a4)(void))
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v6 = *v4;
  uint64_t v7 = *(void *)(*v4 + 16);
  if (v7 < a2)
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  uint64_t v9 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v10 = a1 - a2;
  if (__OFSUB__(0, v9))
  {
LABEL_26:
    __break(1u);
    goto LABEL_27;
  }
  if (__OFADD__(v7, v10))
  {
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  if (!swift_isUniquelyReferenced_nonNull_native() || v7 - v9 > *(void *)(v6 + 24) >> 1) {
    uint64_t v6 = a3();
  }
  uint64_t v13 = *(void *)(a4(0) - 8);
  unint64_t v14 = v6 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  uint64_t v15 = *(void *)(v13 + 72);
  uint64_t v16 = v15 * a1;
  unint64_t v17 = v14 + v15 * a1;
  uint64_t result = swift_arrayDestroy();
  if (!v9) {
    goto LABEL_22;
  }
  uint64_t v19 = *(void *)(v6 + 16);
  uint64_t v20 = v19 - a2;
  if (__OFSUB__(v19, a2)) {
    goto LABEL_28;
  }
  if ((v20 & 0x8000000000000000) == 0)
  {
    if (v16 < v15 * a2 || v17 >= v14 + v15 * a2 + v20 * v15)
    {
      uint64_t result = swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != v15 * a2)
    {
      uint64_t result = swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v22 = *(void *)(v6 + 16);
    BOOL v23 = __OFADD__(v22, v10);
    uint64_t v24 = v22 - v9;
    if (!v23)
    {
      *(void *)(v6 + 16) = v24;
LABEL_22:
      uint64_t *v4 = v6;
      return result;
    }
    goto LABEL_29;
  }
LABEL_30:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

void sub_250ED0FC4(uint64_t a1)
{
}

void sub_250ED0FF8()
{
  if (!qword_26B20EE90)
  {
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EE90);
    }
  }
}

void sub_250ED1050()
{
  if (!qword_26B20EE98)
  {
    sub_250EA31AC();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20EE98);
    }
  }
}

void sub_250ED10BC(uint64_t a1)
{
}

void sub_250ED10F0(uint64_t a1@<X8>)
{
  sub_250EC5290(*(uint64_t **)(v1 + 24), *(void *)(v1 + 32), a1);
}

uint64_t sub_250ED1110(uint64_t a1)
{
  return a1;
}

void sub_250ED113C(uint64_t a1)
{
}

uint64_t sub_250ED1170(uint64_t a1)
{
  return a1;
}

uint64_t sub_250ED119C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator.InnerIteratorResult()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t sub_250ED121C(uint64_t a1, uint64_t a2)
{
  sub_250E93070(0, (unint64_t *)&unk_26B20F050, MEMORY[0x263F42EB8]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250ED129C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t type metadata accessor for SleepingSampleBaselineComparisonEnumerator.Iterator()
{
  return __swift_instantiateGenericMetadata();
}

void sub_250ED1300(uint64_t a1)
{
}

uint64_t sub_250ED1334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 16);
}

void sub_250ED133C()
{
  sub_250E93070(319, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

unsigned char *sub_250ED13D0(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *(void *)a2;
    *(void *)a1 = *(void *)a2;
    a1 = (unsigned char *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v9 + 48))(a2, 2, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v11 = *(void **)a2;
        char v12 = a2[8];
        id v13 = v11;
        *(void *)a1 = v11;
        a1[8] = v12;
      }
      else
      {
        uint64_t v14 = sub_250F0C5A0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 2, v8);
    }
  }
  return a1;
}

void sub_250ED1590(void **a1)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  if (!(*(unsigned int (**)(void **, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 2, v2))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v3 = *a1;
    }
    else
    {
      uint64_t v4 = sub_250F0C5A0();
      int v5 = *(void (**)(void **, uint64_t))(*(void *)(v4 - 8) + 8);
      v5(a1, v4);
    }
  }
}

unsigned char *sub_250ED1698(unsigned char *a1, void **a2, uint64_t a3)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(void **, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v9 = *a2;
      char v10 = *((unsigned char *)a2 + 8);
      id v11 = v9;
      *(void *)a1 = v9;
      a1[8] = v10;
    }
    else
    {
      uint64_t v12 = sub_250F0C5A0();
      (*(void (**)(unsigned char *, void **, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

unsigned char *sub_250ED181C(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (v10)
  {
    if (!v11)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v12 = *(void **)a2;
        char v13 = a2[8];
        id v14 = v12;
        *(void *)a1 = v12;
        a1[8] = v13;
      }
      else
      {
        uint64_t v18 = sub_250F0C5A0();
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v18 - 8) + 16))(a1, a2, v18);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
      return a1;
    }
LABEL_7:
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    return a1;
  }
  if (v11)
  {
    sub_250E93B9C((uint64_t)a1, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_250E93B9C((uint64_t)a1, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v15 = *(void **)a2;
      char v16 = a2[8];
      id v17 = v15;
      *(void *)a1 = v15;
      a1[8] = v16;
    }
    else
    {
      uint64_t v20 = sub_250F0C5A0();
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *sub_250ED1AB0(void *a1, const void *a2, uint64_t a3)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v8 + 48))(a2, 2, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload())
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      uint64_t v9 = sub_250F0C5A0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      swift_storeEnumTagMultiPayload();
    }
    (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  }
  return a1;
}

void *sub_250ED1C18(void *a1, void *a2, uint64_t a3)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 2, v6);
  int v11 = v9(a2, 2, v7);
  if (!v10)
  {
    if (!v11)
    {
      if (a1 == a2) {
        return a1;
      }
      sub_250E93B9C((uint64_t)a1, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
      if (!swift_getEnumCaseMultiPayload())
      {
        uint64_t v15 = sub_250F0C5A0();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v15 - 8) + 32))(a1, a2, v15);
        swift_storeEnumTagMultiPayload();
        return a1;
      }
      size_t v12 = *(void *)(v8 + 64);
      goto LABEL_8;
    }
    sub_250E93B9C((uint64_t)a1, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
LABEL_7:
    size_t v12 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v12);
    return a1;
  }
  if (v11) {
    goto LABEL_7;
  }
  if (swift_getEnumCaseMultiPayload())
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    uint64_t v13 = sub_250F0C5A0();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v13 - 8) + 32))(a1, a2, v13);
    swift_storeEnumTagMultiPayload();
  }
  (*(void (**)(void *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 2, v7);
  return a1;
}

uint64_t sub_250ED1E64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250ED1E78);
}

uint64_t sub_250ED1E78(uint64_t a1, uint64_t a2)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 3) {
    return v5 - 2;
  }
  else {
    return 0;
  }
}

uint64_t sub_250ED1F00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250ED1F14);
}

uint64_t sub_250ED1F14(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 2);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_250ED1FB4(uint64_t a1)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 2, v2);
}

uint64_t sub_250ED2038(uint64_t a1, uint64_t a2)
{
  sub_250E93070(0, (unint64_t *)&qword_26B20F030, MEMORY[0x263F42D70]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 2, v4);
}

uint64_t sub_250ED20C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA01A8](a1, a2, a3, 32);
}

uint64_t sub_250ED20CC()
{
  uint64_t result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_250ED2188(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 + ((v6 + 8) & (unint64_t)~v6) + 1 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = ~v6;
    uint64_t v13 = (char *)a1 + v6;
    id v14 = (char *)a2 + v6;
    uint64_t v15 = (unint64_t)(v13 + 8) & v12;
    uint64_t v16 = (unint64_t)(v14 + 8) & v12;
    id v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    v17(v15, v16, AssociatedTypeWitness);
    *(unsigned char *)(v15 + v7) = *(unsigned char *)(v16 + v7);
  }
  return a1;
}

uint64_t sub_250ED22C4(uint64_t a1)
{
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = *(uint64_t (**)(unint64_t, uint64_t))(v3 + 8);
  uint64_t v5 = AssociatedTypeWitness;
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  return v4(v6, v5);
}

void *sub_250ED235C(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  unint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  uint64_t v7 = v5 + 16;
  uint64_t v8 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 8) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 8) & ~v8;
  swift_retain();
  v6(v9, v10, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v7 + 48) + v9) = *(unsigned char *)(*(void *)(v7 + 48) + v10);
  return a1;
}

void *sub_250ED2428(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v8, v9, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v6 + 40) + v8) = *(unsigned char *)(*(void *)(v6 + 40) + v9);
  return a1;
}

void *sub_250ED24EC(void *a1, void *a2)
{
  *a1 = *a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v9, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v6 + 32) + v8) = *(unsigned char *)(*(void *)(v6 + 32) + v9);
  return a1;
}

void *sub_250ED259C(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 40;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(v8, v9, AssociatedTypeWitness);
  *(unsigned char *)(*(void *)(v6 + 24) + v8) = *(unsigned char *)(*(void *)(v6 + 24) + v9);
  return a1;
}

uint64_t sub_250ED2658(unsigned __int16 *a1, unsigned int a2)
{
  uint64_t v4 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  uint64_t v5 = v4;
  unsigned int v6 = *(_DWORD *)(v4 + 84);
  if (v6 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  uint64_t v8 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = *(void *)(v4 + 64);
  if (!a2) {
    return 0;
  }
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v10 = v9 + ((v8 + 8) & ~v8) + 1;
  char v11 = 8 * v10;
  if (v10 <= 3)
  {
    unsigned int v14 = ((a2 - v7 + ~(-1 << v11)) >> v11) + 1;
    if (HIWORD(v14))
    {
      int v12 = *(_DWORD *)((char *)a1 + v10);
      if (!v12) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 > 0xFF)
    {
      int v12 = *(unsigned __int16 *)((char *)a1 + v10);
      if (!*(unsigned __int16 *)((char *)a1 + v10)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v14 < 2)
    {
LABEL_23:
      if ((v6 & 0x80000000) != 0)
      {
        id v17 = *(uint64_t (**)(unint64_t))(v5 + 48);
        return v17(((unint64_t)a1 + v8 + 8) & ~v8);
      }
      else
      {
        uint64_t v16 = *(void *)a1;
        if (*(void *)a1 >= 0xFFFFFFFFuLL) {
          LODWORD(v16) = -1;
        }
        return (v16 + 1);
      }
    }
  }
  int v12 = *((unsigned __int8 *)a1 + v10);
  if (!*((unsigned char *)a1 + v10)) {
    goto LABEL_23;
  }
LABEL_15:
  int v15 = (v12 - 1) << v11;
  if (v10 > 3) {
    int v15 = 0;
  }
  if (v10)
  {
    if (v10 > 3) {
      LODWORD(v10) = 4;
    }
    switch((int)v10)
    {
      case 2:
        LODWORD(v10) = *a1;
        break;
      case 3:
        LODWORD(v10) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v10) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v10) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v10 | v15) + 1;
}

void sub_250ED2850(unsigned char *a1, uint64_t a2, unsigned int a3)
{
  uint64_t v6 = *(void *)(swift_getAssociatedTypeWitness() - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v9 = 0x7FFFFFFF;
  }
  else {
    unsigned int v9 = *(_DWORD *)(v6 + 84);
  }
  size_t v10 = *(void *)(v6 + 64) + ((v8 + 8) & ~v8) + 1;
  if (a3 <= v9)
  {
    int v11 = 0;
  }
  else if (v10 <= 3)
  {
    unsigned int v14 = ((a3 - v9 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
    if (HIWORD(v14))
    {
      int v11 = 4;
    }
    else if (v14 >= 0x100)
    {
      int v11 = 2;
    }
    else
    {
      int v11 = v14 > 1;
    }
  }
  else
  {
    int v11 = 1;
  }
  if (v9 < a2)
  {
    unsigned int v12 = ~v9 + a2;
    if (v10 < 4)
    {
      int v13 = (v12 >> (8 * v10)) + 1;
      if (*(_DWORD *)(v6 + 64) + ((v8 + 8) & ~v8) != -1)
      {
        int v15 = v12 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v15;
          a1[2] = BYTE2(v15);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v15;
        }
        else
        {
          *a1 = v15;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v12;
      int v13 = 1;
    }
    switch(v11)
    {
      case 1:
        a1[v10] = v13;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v13;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v13;
        return;
      default:
        return;
    }
  }
  switch(v11)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x250ED2AD8);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          id v17 = *(void (**)(unint64_t, uint64_t))(v6 + 56);
          v17((unint64_t)&a1[v8 + 8] & ~v8, a2);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v16 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v16 = (a2 - 1);
          }
          *(void *)a1 = v16;
        }
      }
      return;
  }
}

uint64_t sub_250ED2B00()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for UITriggerObserver()
{
  return self;
}

void *initializeBufferWithCopyOfBuffer for UITriggerExecutor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t destroy for UITriggerExecutor()
{
  return swift_release();
}

void *assignWithCopy for UITriggerExecutor(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *assignWithTake for UITriggerExecutor(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for UITriggerExecutor(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for UITriggerExecutor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UITriggerExecutor()
{
  return &type metadata for UITriggerExecutor;
}

uint64_t sub_250ED2CA4(uint64_t a1)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_250F0C8B0();
  uint64_t v26 = *(void *)(v1 - 8);
  uint64_t v27 = v1;
  MEMORY[0x270FA5388](v1);
  double v25 = (char *)v22 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_250F0C120();
  uint64_t v23 = *(void *)(v3 - 8);
  uint64_t v24 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v7 = sub_250F0C060();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_250F0CE70();
  MEMORY[0x270FA5388](v8 - 8);
  uint64_t v9 = sub_250F0C0C0();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  unsigned int v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0C8D0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t result = MEMORY[0x270FA5388](v13);
  id v17 = (char *)v22 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (v28)
  {
    sub_250F0C0B0();
    uint64_t v18 = sub_250F0C070();
    v22[0] = v19;
    v22[1] = v18;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
    sub_250F0C040();
    uint64_t v21 = v23;
    uint64_t v20 = v24;
    (*(void (**)(char *, void, uint64_t))(v23 + 104))(v5, *MEMORY[0x263F07740], v24);
    sub_250F0C130();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v5, v20);
    sub_250F0CE10();
    (*(void (**)(char *, void, uint64_t))(v26 + 104))(v25, *MEMORY[0x263F42E70], v27);
    sub_250F0C850();
    sub_250EA9524(v17);
    return (*(uint64_t (**)(char *, uint64_t))(v14 + 8))(v17, v13);
  }
  return result;
}

uint64_t dispatch thunk of HealthBalanceProfileExtension.currentValueCache.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

id sub_250ED30A4(void *a1)
{
  sub_250F0CBD0();
  uint64_t v3 = v1;
  id v4 = a1;
  uint64_t v5 = sub_250F0CBC0();
  id v6 = objc_allocWithZone((Class)type metadata accessor for SleepingSampleChangeManager());
  uint64_t v7 = sub_250EB282C(v4, 0, 0, v5, 1.0);
  uint64_t v8 = (char *)objc_allocWithZone((Class)type metadata accessor for SleepingSampleDaySummaryCurrentValueCache());
  id v9 = sub_250ED45E4(v7, (uint64_t)sub_250EABC60, 0, v8);
  uint64_t v10 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache;
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_currentValueCache] = v9;
  id v11 = v4;
  id v12 = objc_msgSend(v11, sel_daemon);
  uint64_t v13 = v12;
  if (v12)
  {
    id v14 = objc_msgSend(v12, sel_behavior);

    LOBYTE(v13) = objc_msgSend(v14, sel_isAppleWatch);
  }

  id v15 = objc_msgSend(self, sel_sharedWidgetService);
  uint64_t v16 = sub_250EFE324((char)v13);

  id v17 = *(void **)&v3[v10];
  uint64_t v18 = (char *)objc_allocWithZone((Class)type metadata accessor for BalanceWidgetSchedulingManager());
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_widgetSchedulingManager] = sub_250ED432C(v11, (char)v13, (uint64_t)v15, v16, v17, 0, 0, v18, 1.0);
  id v19 = sub_250EB1FD8(v11);
  uint64_t v20 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager;
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_sleepingSampleAnalysisFeatureAvailabilityManager] = v19;
  sub_250E8D194(0, &qword_26B20EEF0);
  sub_250F0D210();
  id v21 = objc_allocWithZone(MEMORY[0x263F43218]);
  id v22 = v11;
  uint64_t v23 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v24 = objc_msgSend(v21, sel_initWithCategory_domainName_profile_, 105, v23, v22);

  type metadata accessor for ImbalanceUserNotificationCoordinator();
  sub_250E8D194(0, &qword_26B20E440);
  id v25 = v22;
  id v26 = v24;
  uint64_t v27 = (void *)sub_250F0D2C0();
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v27, v25);

  uint64_t v59 = v26;
  id v29 = sub_250EAAD28(v25, v26, v28);

  uint64_t v30 = OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceUserNotificationCoordinator;
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceUserNotificationCoordinator] = v29;
  id v31 = v25;
  sub_250EA8F20();
  LOBYTE(v29) = v32;

  id v33 = 0;
  if (v29)
  {
    sub_250ED49C4();
    type metadata accessor for ImbalanceNotificationManagerHealthDelegate();
    unint64_t v34 = *(void **)&v3[v10];
    uint64_t v35 = *(void **)&v3[v20];
    id v36 = v31;
    id v37 = v59;
    id v38 = v34;
    uint64_t v39 = v30;
    id v40 = v35;
    uint64_t v41 = sub_250F0CBC0();
    unint64_t v42 = *(void **)&v3[v39];
    id v43 = v42;
    unint64_t v44 = sub_250ED4A24(v36, v37, (uint64_t)v38, (uint64_t)v40, v41, (uint64_t)v42);

    uint64_t v30 = v39;
    id v33 = sub_250ED3580(v36, v44);
  }
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_imbalanceNotificationManager] = v33;
  id v45 = v31;
  sub_250EA8F14();
  char v47 = v46;

  if (v47)
  {
    id v48 = v45;
    uint64_t v49 = (void *)sub_250F0D2C0();
    id v50 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A0C0]), sel_initWithLoggingCategory_healthDataSource_, v49, v48);

    id v51 = objc_allocWithZone((Class)type metadata accessor for AnalyticsDailyMultiEventManager());
    id v52 = sub_250EDDB18(v48, v50, 0, 0);
  }
  else
  {
    id v52 = 0;
  }
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_analyticsDailyEventManager] = v52;
  double v53 = *(void **)&v3[v30];
  uint64_t v54 = swift_allocObject();
  *(void *)(v54 + 16) = v53;
  type metadata accessor for UITriggerObserver();
  uint64_t v55 = swift_allocObject();
  *(void *)(v55 + 16) = sub_250ED49BC;
  *(void *)(v55 + 24) = v54;
  *(void *)&v3[OBJC_IVAR____TtC19HealthBalanceDaemon26ProductionProfileExtension_uiTriggerObserver] = v55;
  id v56 = v53;

  v60.receiver = v3;
  v60.super_class = (Class)type metadata accessor for ProductionProfileExtension();
  id v57 = objc_msgSendSuper2(&v60, sel_init);

  return v57;
}

id sub_250ED3580(void *a1, void *a2)
{
  id v4 = a1;
  sub_250F0D7B0();
  id v5 = objc_allocWithZone(MEMORY[0x263F432D8]);
  id v6 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithProfile_debugIdentifier_delegate_, v4, v6, 0);

  id v8 = objc_allocWithZone(v2);
  id v9 = sub_250ED3808(v7, a2);

  return v9;
}

id sub_250ED3670()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ProductionProfileExtension();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t type metadata accessor for ProductionProfileExtension()
{
  return self;
}

void sub_250ED3764(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void (**)(void))(a1 + 32);
  sub_250E8D194(0, &qword_269B110E8);
  sub_250F0D040();
  swift_retain();
  id v4 = a2;
  v3();
  swift_release();
  swift_bridgeObjectRelease();
}

id sub_250ED3808(void *a1, void *a2)
{
  uint64_t v28 = *MEMORY[0x263EF8340];
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[qword_269B113C0] = a1;
  *(void *)&v2[qword_269B113C8] = a2;
  v25.receiver = v2;
  v25.super_class = ObjectType;
  id v6 = a1;
  swift_retain();
  id v7 = objc_msgSendSuper2(&v25, sel_init);
  objc_msgSend(v6, sel_setDelegate_, v7);
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = v6;
  *(void *)(v8 + 24) = ObjectType;
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = sub_250ED4BB4;
  *(void *)(v9 + 24) = v8;
  uint64_t v10 = (void *)a2[3];
  id v11 = (void *)swift_allocObject();
  v11[2] = sub_250ED4BBC;
  v11[3] = v9;
  aBlock[4] = sub_250ED4BFC;
  aBlock[5] = v11;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_250ED3764;
  uint64_t aBlock[3] = &block_descriptor_6;
  id v12 = _Block_copy(aBlock);
  id v13 = v6;
  swift_retain();
  swift_retain();
  swift_release();
  objc_msgSend(v10, sel_beginReceivingEventsWithHandler_, v12);
  _Block_release(v12);
  swift_release();
  uint64_t v14 = swift_allocObject();
  *(void *)(v14 + 16) = sub_250ED4BB4;
  *(void *)(v14 + 24) = v8;
  uint64_t v15 = a2[9];
  id v26 = sub_250ED4C04;
  uint64_t v27 = v14;
  uint64_t v16 = (uint64_t *)(v15 + 16);
  id v17 = (os_unfair_lock_s *)(v15 + 32);
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_250ED4C0C(v16);
  os_unfair_lock_unlock(v17);
  uint64_t v18 = a2[5];
  uint64_t v19 = swift_getObjectType();
  (*(void (**)(void *, _UNKNOWN **, void, uint64_t, uint64_t))(v18 + 8))(a2, &off_2701F1490, 0, v19, v18);
  swift_release();
  aBlock[0] = 0;
  if (objc_msgSend(v13, sel_requestWorkWithPriority_error_, 2, aBlock))
  {
    id v20 = aBlock[0];
    swift_release();

    swift_release();
  }
  else
  {
    id v21 = aBlock[0];
    id v22 = (void *)sub_250F0BFA0();

    swift_willThrow();
    swift_release();

    swift_release();
  }
  return v7;
}

id sub_250ED3B40(uint64_t a1, unint64_t a2, void *a3, uint64_t a4)
{
  id v48 = a3;
  v50[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v7 = sub_250F0CCB0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  id v11 = (char *)v44 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  id v13 = (char *)v44 - v12;
  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_250F0CCA0();
  os_log_type_t v15 = sub_250F0D1D0();
  BOOL v16 = os_log_type_enabled(v14, v15);
  v44[1] = a4;
  uint64_t v45 = a1;
  if (v16)
  {
    uint64_t v17 = swift_slowAlloc();
    uint64_t v47 = v7;
    uint64_t v18 = v17;
    v44[0] = swift_slowAlloc();
    v50[0] = (id)v44[0];
    *(_DWORD *)uint64_t v18 = 136446466;
    uint64_t v19 = sub_250F0D7B0();
    uint64_t v49 = sub_250E8BE44(v19, v20, (uint64_t *)v50);
    uint64_t v46 = v8;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v18 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v49 = sub_250E8BE44(a1, a2, (uint64_t *)v50);
    uint64_t v8 = v46;
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_250E86000, v14, v15, "[%{public}s] Requesting work for %{public}s", (uint8_t *)v18, 0x16u);
    uint64_t v21 = v44[0];
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v21, -1, -1);
    uint64_t v22 = v18;
    uint64_t v7 = v47;
    MEMORY[0x25338EC30](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v23 = *(void (**)(char *, uint64_t))(v8 + 8);
  v23(v13, v7);
  v50[0] = 0;
  unsigned int v24 = objc_msgSend(v48, sel_requestWorkWithPriority_error_, 2, v50);
  id v25 = v50[0];
  if (v24)
  {
    return v25;
  }
  else
  {
    id v48 = v50[0];
    id v27 = v50[0];
    uint64_t v28 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250F0CC90();
    swift_bridgeObjectRetain();
    id v29 = v28;
    swift_bridgeObjectRetain();
    id v30 = v28;
    id v31 = sub_250F0CCA0();
    os_log_type_t v32 = sub_250F0D1B0();
    if (os_log_type_enabled(v31, v32))
    {
      uint64_t v33 = swift_slowAlloc();
      uint64_t v34 = swift_slowAlloc();
      uint64_t v47 = v7;
      uint64_t v35 = (void *)v34;
      v44[0] = swift_slowAlloc();
      v50[0] = (id)v44[0];
      *(_DWORD *)uint64_t v33 = 136446722;
      uint64_t v36 = sub_250F0D7B0();
      uint64_t v46 = v8;
      uint64_t v38 = sub_250E8BE44(v36, v37, (uint64_t *)v50);
      id v48 = v11;
      uint64_t v49 = v38;
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v33 + 12) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v49 = sub_250E8BE44(v45, a2, (uint64_t *)v50);
      sub_250F0D300();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v33 + 22) = 2114;
      id v39 = v28;
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v49 = v40;
      sub_250F0D300();
      *uint64_t v35 = v40;

      _os_log_impl(&dword_250E86000, v31, v32, "[%{public}s] Failed to request work for %{public}s: %{public}@", (uint8_t *)v33, 0x20u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v35, -1, -1);
      uint64_t v41 = v44[0];
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v41, -1, -1);
      MEMORY[0x25338EC30](v33, -1, -1);

      uint64_t v42 = v47;
      id v43 = v48;
    }
    else
    {

      swift_bridgeObjectRelease_n();
      id v43 = v11;
      uint64_t v42 = v7;
    }
    return (id)((uint64_t (*)(id, uint64_t))v23)(v43, v42);
  }
}

void *sub_250ED40E8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void *a7)
{
  uint64_t v14 = type metadata accessor for ImbalanceNotificationAnalysisStateCache(0);
  uint64_t v15 = v14 - 8;
  MEMORY[0x270FA5388](v14);
  uint64_t v17 = (char *)&v23 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EABA34();
  uint64_t v18 = swift_allocObject();
  *(void *)(v18 + 16) = 0;
  *(void *)(v18 + 24) = 0;
  *(_DWORD *)(v18 + 32) = 0;
  a7[9] = v18;
  sub_250ED4C28(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v17, 1, 1, v19);
  unint64_t v20 = &v17[*(int *)(v15 + 28)];
  sub_250ED4CCC(0, (unint64_t *)&unk_269B110F0, (void (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisStateCache);
  *(void *)unint64_t v20 = 0;
  *((void *)v20 + 1) = 0;
  uint64_t v21 = swift_allocObject();
  *(_DWORD *)(v21 + ((*(unsigned int *)(*(void *)v21 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_250ED4D38((uint64_t)v17, v21 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v21 + 16), type metadata accessor for ImbalanceNotificationAnalysisStateCache);
  sub_250ED4DA0((uint64_t)v17, type metadata accessor for ImbalanceNotificationAnalysisStateCache);
  a7[10] = v21;
  a7[2] = a1;
  a7[3] = a2;
  a7[4] = a3;
  a7[5] = &protocol witness table for SleepingSampleDaySummaryCurrentValueCache;
  a7[6] = a4;
  a7[7] = a5;
  a7[8] = a6;
  objc_msgSend(a1, sel_startObservation_, a7);
  return a7;
}

char *sub_250ED432C(void *a1, char a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7, char *a8, double a9)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v38 = &type metadata for BalanceWidgetTimelineReloader;
  id v39 = &off_2701F0C78;
  v35[0] = a2;
  uint64_t v36 = a3;
  uint64_t v37 = a4;
  *(void *)&a8[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation] = 0;
  sub_250E9FCC0((uint64_t)v35, (uint64_t)&a8[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_widgetReloader]);
  uint64_t v19 = &a8[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_changeProvider];
  *(void *)uint64_t v19 = a5;
  *((void *)v19 + 1) = &protocol witness table for SleepingSampleDaySummaryCurrentValueCache;
  unint64_t v20 = a8;
  id v21 = a5;
  uint64_t v22 = (void *)sub_250F0CF50();
  id v23 = (id)HKCreateSerialDispatchQueue();

  *(void *)&v20[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue] = v23;
  *(void *)&v20[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadReasons] = MEMORY[0x263F8EE88];
  unsigned int v24 = (uint64_t *)&v20[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_didBecomeReady];
  *unsigned int v24 = a6;
  v24[1] = a7;
  sub_250EAB9EC(a6);

  v34.receiver = v20;
  v34.super_class = ObjectType;
  id v25 = (char *)objc_msgSendSuper2(&v34, sel_init);
  objc_msgSend(a1, sel_registerProfileReadyObserver_queue_, v25, 0);
  uint64_t v26 = *(void *)&v25[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_queue];
  uint64_t v27 = swift_allocObject();
  swift_unknownObjectWeakInit();
  id v28 = objc_allocWithZone(MEMORY[0x263F0A9B0]);
  aBlock[4] = sub_250ED4CC4;
  aBlock[5] = v27;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_250EE29A8;
  uint64_t aBlock[3] = &block_descriptor_20_0;
  id v29 = _Block_copy(aBlock);
  swift_retain();
  id v30 = objc_msgSend(v28, sel_initWithMode_clock_queue_delay_block_, 1, 1, v26, v29, a9);
  _Block_release(v29);

  swift_release();
  sub_250EAB9CC(a6);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v35);
  swift_release();
  id v31 = *(void **)&v25[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation];
  *(void *)&v25[OBJC_IVAR____TtC19HealthBalanceDaemon30BalanceWidgetSchedulingManager_reloadOperation] = v30;

  return v25;
}

id sub_250ED45E4(void *a1, uint64_t a2, uint64_t a3, char *a4)
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v9 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State(0);
  MEMORY[0x270FA5388](v9);
  id v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_state;
  uint64_t v13 = type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State.CacheEntry(0);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v11, 1, 1, v13);
  uint64_t v14 = a4;
  sub_250F0C0B0();
  sub_250ED4CCC(0, (unint64_t *)&qword_26B20EF58, (void (*)(uint64_t))type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  uint64_t v15 = swift_allocObject();
  *(_DWORD *)(v15 + ((*(unsigned int *)(*(void *)v15 + 48) + 3) & 0x1FFFFFFFCLL)) = 0;
  sub_250ED4D38((uint64_t)v11, v15 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v15 + 16), type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  sub_250ED4DA0((uint64_t)v11, type metadata accessor for SleepingSampleDaySummaryCurrentValueCache.State);
  *(void *)&a4[v12] = v15;
  uint64_t v16 = &v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_changeDetector];
  *(void *)uint64_t v16 = a1;
  *((void *)v16 + 1) = &off_2701F01A8;
  uint64_t v17 = &v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_gregorianCalendarProvider];
  *(void *)uint64_t v17 = a2;
  *((void *)v17 + 1) = a3;
  uint64_t v18 = a1;
  swift_retain();
  sub_250F0D7B0();
  sub_250E8D194(0, &qword_26B20E440);
  uint64_t v19 = (void *)sub_250F0D2C0();
  sub_250ED4C28(0, &qword_26B20E1A0, (uint64_t (*)(uint64_t))sub_250EB1240, (uint64_t (*)(uint64_t, uint64_t))type metadata accessor for ObserverSet);
  uint64_t v20 = swift_allocObject();
  id v21 = objc_allocWithZone(MEMORY[0x263F0A5A8]);
  uint64_t v22 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v23 = objc_msgSend(v21, sel_initWithName_loggingCategory_, v22, v19);

  *(void *)(v20 + 16) = v23;
  *(void *)&v14[OBJC_IVAR____TtC19HealthBalanceDaemon41SleepingSampleDaySummaryCurrentValueCache_observers] = v20;

  v31.receiver = v14;
  v31.super_class = ObjectType;
  id v24 = objc_msgSendSuper2(&v31, sel_init);
  id v25 = self;
  id v26 = v24;
  id v27 = objc_msgSend(v25, sel_sharedDiagnosticManager);
  objc_msgSend(v27, sel_addObject_, v26);

  id v28 = *(void **)(*(void *)&v18[OBJC_IVAR____TtC19HealthBalanceDaemon27SleepingSampleChangeManager_observers] + 16);
  id v29 = v26;
  objc_msgSend(v28, sel_registerObserver_queue_, v29, 0);

  swift_release();
  return v29;
}

uint64_t sub_250ED4984()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250ED49BC()
{
  return sub_250ED2CA4(*(void *)(v0 + 16));
}

void sub_250ED49C4()
{
  if (!qword_269B110E0)
  {
    type metadata accessor for ImbalanceNotificationManagerHealthDelegate();
    unint64_t v0 = type metadata accessor for ImbalanceNotificationManager();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B110E0);
    }
  }
}

void *sub_250ED4A24(void *a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  swift_getMetatypeMetadata();
  id v12 = a1;
  sub_250F0D670();
  id v13 = (id)HKCreateSerialDispatchQueue();
  swift_unknownObjectRelease();
  id v14 = objc_allocWithZone(MEMORY[0x263F43308]);
  uint64_t v15 = (void *)sub_250F0CF50();
  id v16 = objc_msgSend(v14, sel_initWithProfile_clientIdentifier_eventHandlerQueue_, v12, v15, v13);

  id v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, a4, v12, 0);
  uint64_t v18 = (void *)swift_allocObject();
  return sub_250ED40E8(a2, (uint64_t)v16, a3, (uint64_t)v17, a5, a6, v18);
}

uint64_t sub_250ED4B7C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

id sub_250ED4BB4(uint64_t a1, unint64_t a2)
{
  return sub_250ED3B40(a1, a2, *(void **)(v2 + 16), *(void *)(v2 + 24));
}

uint64_t sub_250ED4BBC()
{
  return sub_250F07C60(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16));
}

uint64_t sub_250ED4BC4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

void sub_250ED4BFC(void *a1, uint64_t a2)
{
  sub_250F01C70(a1, a2, *(void (**)(void))(v2 + 16));
}

uint64_t sub_250ED4C04()
{
  return sub_250F07CAC(*(uint64_t (**)(uint64_t, unint64_t))(v0 + 16));
}

uint64_t sub_250ED4C0C(uint64_t *a1)
{
  return sub_250F029AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_250ED4C28(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250ED4C8C()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_250ED4CC4()
{
  sub_250EC5928(v0);
}

void sub_250ED4CCC(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    type metadata accessor for os_unfair_lock_s(255);
    unint64_t v4 = sub_250F0D4D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_250ED4D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250ED4DA0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250ED4E10(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_250EF4D8C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_250ED5A74(v5);
  *a1 = v2;
  return result;
}

unint64_t BalanceWidgetReloadReason.description.getter()
{
  unint64_t v1 = 0xD000000000000018;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ALL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000010;
  }
}

BOOL static BalanceWidgetReloadReason.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t BalanceWidgetReloadReason.hash(into:)()
{
  return sub_250F0D720();
}

uint64_t BalanceWidgetReloadReason.hashValue.getter()
{
  return sub_250F0D730();
}

unint64_t sub_250ED4F6C()
{
  unint64_t result = qword_26B20E118[0];
  if (!qword_26B20E118[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_26B20E118);
  }
  return result;
}

uint64_t dispatch thunk of BalanceWidgetReloader.reloadWidgets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t getEnumTagSinglePayload for BalanceWidgetReloadReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BalanceWidgetReloadReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250ED5130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BalanceWidgetReloadReason()
{
  return &type metadata for BalanceWidgetReloadReason;
}

uint64_t destroy for BalanceWidgetTimelineReloader(uint64_t a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t _s19HealthBalanceDaemon29BalanceWidgetTimelineReloaderVwCP_0(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  int v3 = *(void **)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BalanceWidgetTimelineReloader(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v4 = *(void **)(a2 + 8);
  id v5 = *(void **)(a1 + 8);
  *(void *)(a1 + 8) = v4;
  id v6 = v4;

  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BalanceWidgetTimelineReloader(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;

  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BalanceWidgetTimelineReloader(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BalanceWidgetTimelineReloader(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BalanceWidgetTimelineReloader()
{
  return &type metadata for BalanceWidgetTimelineReloader;
}

uint64_t sub_250ED532C(uint64_t a1, char a2, void *a3, unint64_t a4)
{
  uint64_t v7 = sub_250ED64CC();
  unint64_t v9 = v8;
  if (a4 >> 62)
  {
    swift_bridgeObjectRetain_n();
    uint64_t result = sub_250F0D5B0();
    uint64_t v10 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v10 = *(void *)((a4 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain_n();
    if (!v10) {
      goto LABEL_10;
    }
  }
  if (v10 < 1)
  {
    __break(1u);
    return result;
  }
  uint64_t v12 = 0;
  int v13 = a2 & 1;
  do
  {
    if ((a4 & 0xC000000000000001) != 0) {
      id v14 = (id)MEMORY[0x25338E0A0](v12, a4);
    }
    else {
      id v14 = *(id *)(a4 + 8 * v12 + 32);
    }
    uint64_t v15 = v14;
    ++v12;
    id v17 = v14;
    sub_250ED6708(&v17, v7, v9, a1, v13, a3);
  }
  while (v10 != v12);
LABEL_10:
  swift_bridgeObjectRelease_n();
  return swift_bridgeObjectRelease();
}

uint64_t sub_250ED5468(void *a1, uint64_t a2, unint64_t a3)
{
  uint64_t v6 = sub_250F0CCB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t result = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    id v11 = a1;
    sub_250F0CC90();
    id v12 = a1;
    swift_bridgeObjectRetain();
    id v13 = a1;
    swift_bridgeObjectRetain();
    id v14 = sub_250F0CCA0();
    os_log_type_t v15 = sub_250F0D1B0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = swift_slowAlloc();
      uint64_t v23 = a2;
      uint64_t v17 = v16;
      uint64_t v25 = swift_slowAlloc();
      uint64_t v27 = v25;
      *(_DWORD *)uint64_t v17 = 136446722;
      uint64_t v26 = sub_250E8BE44(0xD00000000000001DLL, 0x8000000250F0FC10, &v27);
      sub_250F0D300();
      *(_WORD *)(v17 + 12) = 2082;
      uint64_t v26 = (uint64_t)a1;
      id v18 = a1;
      sub_250E95B04();
      uint64_t v19 = sub_250F0CF90();
      uint64_t v24 = v6;
      uint64_t v26 = sub_250E8BE44(v19, v20, &v27);
      sub_250F0D300();
      swift_bridgeObjectRelease();

      *(_WORD *)(v17 + 22) = 2082;
      swift_bridgeObjectRetain();
      uint64_t v26 = sub_250E8BE44(v23, a3, &v27);
      sub_250F0D300();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_250E86000, v14, v15, "[%{public}s] error invalidating relevance %{public}s for widget of kind %{public}s", (uint8_t *)v17, 0x20u);
      uint64_t v21 = v25;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v21, -1, -1);
      MEMORY[0x25338EC30](v17, -1, -1);

      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v24);
    }
    else
    {

      swift_bridgeObjectRelease_n();
      return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
  }
  return result;
}

void sub_250ED5770(uint64_t a1, void *a2)
{
  int v3 = *(void (**)(void *))(a1 + 32);
  swift_retain();
  id v4 = a2;
  v3(a2);
  swift_release();
}

uint64_t sub_250ED57DC(uint64_t a1)
{
  return sub_250ED532C(a1, *(unsigned char *)v1, *(void **)(v1 + 8), *(void *)(v1 + 16));
}

uint64_t sub_250ED57E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return MEMORY[0x263F8EE78];
  }
  sub_250ED6DC4(0, &qword_26B20DED8, (uint64_t)&type metadata for BalanceWidgetReloadReason, MEMORY[0x263F8E0F8]);
  uint64_t v3 = swift_allocObject();
  size_t v4 = _swift_stdlib_malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * v4 - 64;
  id v5 = sub_250ED58E0(&v7, (unsigned char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_250E9FD24();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return MEMORY[0x263F8EE78];
  }
  return v3;
}

void *sub_250ED58E0(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_250ED5A74(uint64_t *a1)
{
  uint64_t v3 = a1[1];
  uint64_t result = sub_250F0D640();
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_250ED6160(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  uint64_t v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = MEMORY[0x263F8EE78];
    __dst = (char *)(MEMORY[0x263F8EE78] + 32);
    if (v3 != 1)
    {
      unint64_t v12 = *(void *)(MEMORY[0x263F8EE78] + 16);
      unint64_t v11 = (char *)MEMORY[0x263F8EE78];
LABEL_118:
      BOOL v94 = v11;
      uint64_t v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_250ED6230((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_250EF48D0((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          BOOL v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v104 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v104 = MEMORY[0x263F8EE78];
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_250F0D080();
    *(void *)(v7 + 16) = v6;
    uint64_t v104 = v7;
    __dst = (char *)(v7 + 32);
  }
  uint64_t v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)MEMORY[0x263F8EE78];
  uint64_t v106 = v3;
  while (1)
  {
    uint64_t v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    unint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    uint64_t v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_250F0D680();
      uint64_t v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      uint64_t v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_250F0D680()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      uint64_t v22 = v20 + 1;
      uint64_t v9 = v20;
      uint64_t v20 = v22;
    }
    while (v22 < v3);
    uint64_t v20 = v22;
LABEL_36:
    uint64_t v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        uint64_t v27 = v20;
        uint64_t v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      uint64_t v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_250EF4590(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_250EF4590((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    id v43 = &v11[16 * v41 + 32];
    *(void *)id v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      uint64_t v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          id v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        unint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        unint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_250ED6230((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        uint64_t v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    uint64_t v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    uint64_t v32 = v3;
  }
  else {
    uint64_t v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      uint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        objc_super v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        uint64_t v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_250F0D680() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      uint64_t v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  uint64_t result = sub_250F0D580();
  __break(1u);
  return result;
}

uint64_t sub_250ED6160(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    uint64_t v9 = (uint64_t *)(v7 + 16 * v4);
    uint64_t result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (uint64_t result = sub_250F0D680(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      uint64_t result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_250ED6230(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      uint64_t v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      uint64_t v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        id v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          uint64_t v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_250F0D680() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)id v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)id v18 = *(_OWORD *)v19;
            }
            uint64_t v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    unint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_250F0D680() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      uint64_t v27 = v7;
    }
LABEL_50:
    sub_250EF4814((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

uint64_t sub_250ED64CC()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_250ED57E8(v0);
  swift_bridgeObjectRelease();
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    v17[0] = MEMORY[0x263F8EE78];
    uint64_t v15 = v1;
    int64_t v16 = v2;
    sub_250EA2780(0, v2, 0);
    uint64_t v3 = v1;
    int64_t v4 = v16;
    uint64_t v5 = 0;
    uint64_t v6 = v17[0];
    do
    {
      unint64_t v7 = 0xD000000000000018;
      if (*(unsigned char *)(v3 + v5 + 32) == 1)
      {
        unint64_t v8 = 0x8000000250F11C80;
      }
      else
      {
        unint64_t v7 = 0xD00000000000001ALL;
        unint64_t v8 = 0x8000000250F11C60;
      }
      if (*(unsigned char *)(v3 + v5 + 32)) {
        unint64_t v9 = v7;
      }
      else {
        unint64_t v9 = 0xD000000000000010;
      }
      if (*(unsigned char *)(v3 + v5 + 32)) {
        unint64_t v10 = v8;
      }
      else {
        unint64_t v10 = 0x8000000250F11CA0;
      }
      v17[0] = v6;
      unint64_t v12 = *(void *)(v6 + 16);
      unint64_t v11 = *(void *)(v6 + 24);
      if (v12 >= v11 >> 1)
      {
        sub_250EA2780(v11 > 1, v12 + 1, 1);
        uint64_t v3 = v15;
        int64_t v4 = v16;
        uint64_t v6 = v17[0];
      }
      ++v5;
      *(void *)(v6 + 16) = v12 + 1;
      uint64_t v13 = v6 + 16 * v12;
      *(void *)(v13 + 32) = v9;
      *(void *)(v13 + 40) = v10;
    }
    while (v4 != v5);
    swift_release();
  }
  else
  {
    swift_release();
    uint64_t v6 = MEMORY[0x263F8EE78];
  }
  v17[0] = v6;
  swift_bridgeObjectRetain();
  sub_250ED4E10(v17);
  swift_bridgeObjectRelease();
  v17[0] = 0x2065636E616C6162;
  v17[1] = 0xE90000000000005BLL;
  sub_250ED6DC4(0, &qword_26B20E348, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
  sub_250ED6D48();
  sub_250F0CED0();
  swift_release();
  sub_250F0CFB0();
  swift_bridgeObjectRelease();
  sub_250F0CFB0();
  return v17[0];
}

void sub_250ED6708(id *a1, uint64_t a2, unint64_t a3, uint64_t a4, int a5, void *a6)
{
  int v44 = a5;
  uint64_t v42 = a4;
  uint64_t v40 = a2;
  uint64_t v43 = sub_250F0CCB0();
  uint64_t v50 = *(void *)(v43 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v43);
  char v48 = (char *)&v39 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v39 - v12;
  id v41 = *a1;
  id v14 = objc_msgSend(v41, sel_kind);
  if (!v14)
  {
    sub_250F0CF80();
    id v14 = (id)sub_250F0CF50();
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_250F0CF80();
  unint64_t v17 = v16;
  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  id v18 = sub_250F0CCA0();
  os_log_type_t v19 = sub_250F0D1D0();
  BOOL v20 = os_log_type_enabled(v18, v19);
  uint64_t v46 = a6;
  uint64_t v47 = v6;
  id v45 = v14;
  uint64_t v49 = v15;
  if (v20)
  {
    uint64_t v21 = v15;
    uint64_t v22 = swift_slowAlloc();
    uint64_t v39 = swift_slowAlloc();
    aBlock[0] = v39;
    *(_DWORD *)uint64_t v22 = 136446722;
    uint64_t v52 = sub_250E8BE44(0xD00000000000001DLL, 0x8000000250F0FC10, aBlock);
    sub_250F0D300();
    *(_WORD *)(v22 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_250E8BE44(v21, v17, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v22 + 22) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_250E8BE44(v40, a3, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_250E86000, v18, v19, "[%{public}s] reloading widget for kind %{public}s with reason: %{public}s", (uint8_t *)v22, 0x20u);
    uint64_t v23 = v39;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v23, -1, -1);
    MEMORY[0x25338EC30](v22, -1, -1);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v24 = *(void (**)(char *, uint64_t))(v50 + 8);
  uint64_t v25 = v43;
  v24(v13, v43);
  uint64_t v26 = v48;
  id v27 = v41;
  sub_250ED64CC();
  uint64_t v28 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();

  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  uint64_t v29 = sub_250F0CCA0();
  os_log_type_t v30 = sub_250F0D1D0();
  if (os_log_type_enabled(v29, v30))
  {
    uint64_t v31 = swift_slowAlloc();
    uint64_t v32 = swift_slowAlloc();
    aBlock[0] = v32;
    *(_DWORD *)uint64_t v31 = 136446466;
    uint64_t v52 = sub_250E8BE44(0xD00000000000001DLL, 0x8000000250F0FC10, aBlock);
    sub_250F0D300();
    *(_WORD *)(v31 + 12) = 2082;
    swift_bridgeObjectRetain();
    uint64_t v52 = sub_250E8BE44(v49, v17, aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_250E86000, v29, v30, "[%{public}s] invalidating widget relevances for kind %{public}s", (uint8_t *)v31, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v32, -1, -1);
    MEMORY[0x25338EC30](v31, -1, -1);

    uint64_t v33 = v48;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    uint64_t v33 = v26;
  }
  v24(v33, v25);
  objc_super v34 = v46;
  uint64_t v35 = v45;
  if (v44) {
    sub_250F0C270();
  }
  else {
    sub_250F0C2B0();
  }
  uint64_t v36 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t v37 = swift_allocObject();
  *(void *)(v37 + 16) = v49;
  *(void *)(v37 + 24) = v17;
  aBlock[4] = (uint64_t)sub_250ED6D40;
  aBlock[5] = v37;
  aBlock[0] = MEMORY[0x263EF8330];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_250ED5770;
  uint64_t aBlock[3] = (uint64_t)&block_descriptor_7;
  uint64_t v38 = _Block_copy(aBlock);
  swift_release();
  objc_msgSend(v34, sel_invalidateRelevancesOfKind_inBundle_completion_, v35, v36, v38);
  _Block_release(v38);
}

uint64_t sub_250ED6D08()
{
  swift_bridgeObjectRelease();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250ED6D40(void *a1)
{
  return sub_250ED5468(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

unint64_t sub_250ED6D48()
{
  unint64_t result = qword_26B20E350;
  if (!qword_26B20E350)
  {
    sub_250ED6DC4(255, &qword_26B20E348, MEMORY[0x263F8D310], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20E350);
  }
  return result;
}

void sub_250ED6DC4(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

uint64_t sub_250ED6E10@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v182 = a1;
  uint64_t v177 = a2;
  uint64_t v157 = sub_250F0C1B0();
  uint64_t v162 = *(void *)(v157 - 8);
  MEMORY[0x270FA5388](v157);
  int v161 = (char *)&v141 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_250F0C470();
  uint64_t v159 = *(void *)(v160 - 8);
  MEMORY[0x270FA5388](v160);
  uint64_t v158 = (char *)&v141 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C724(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  id v164 = (char *)&v141 - v6;
  uint64_t v7 = sub_250F0C060();
  uint64_t v167 = *(void *)(v7 - 8);
  uint64_t v168 = v7;
  MEMORY[0x270FA5388](v7);
  uint64_t v165 = (uint64_t)&v141 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0C5A0();
  uint64_t v172 = *(void *)(v9 - 8);
  uint64_t v173 = v9;
  uint64_t v10 = MEMORY[0x270FA5388](v9);
  uint64_t v155 = (char *)&v141 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  unint64_t v163 = (char *)&v141 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v156 = (char *)&v141 - v15;
  MEMORY[0x270FA5388](v14);
  uint64_t v175 = (char *)&v141 - v16;
  uint64_t v166 = sub_250F0C7A0();
  uint64_t v174 = *(void *)(v166 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v166);
  uint64_t v169 = (char *)&v141 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  char v171 = (char *)&v141 - v19;
  uint64_t v176 = sub_250F0C810();
  uint64_t v179 = *(void *)(v176 - 8);
  MEMORY[0x270FA5388](v176);
  char v170 = (char *)&v141 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_250F0C500();
  uint64_t v180 = *(void *)(v21 - 8);
  uint64_t v181 = v21;
  uint64_t v22 = MEMORY[0x270FA5388](v21);
  uint64_t v24 = (char *)&v141 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v22);
  id v27 = (char *)&v141 - v26;
  uint64_t v28 = MEMORY[0x270FA5388](v25);
  os_log_type_t v30 = (char *)&v141 - v29;
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v33 = (char *)&v141 - v32;
  MEMORY[0x270FA5388](v31);
  int v178 = (char *)&v141 - v34;
  uint64_t v35 = sub_250F0CE70();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v141 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = v2;
  sub_250F0C4B0();
  sub_250ED960C((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
  sub_250F0D330();
  uint64_t v40 = v185;
  (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  if (!v40)
  {
    uint64_t v142 = v27;
    uint64_t v143 = v30;
    uint64_t v144 = v24;
    uint64_t v154 = v33;
    uint64_t v152 = v39;
    uint64_t v185 = MEMORY[0x263F8EE78];
    uint64_t v45 = sub_250ED960C(&qword_26B20E518, MEMORY[0x263F42D40]);
    sub_250E8C724(0, &qword_26B20EE70, MEMORY[0x263F42D40], MEMORY[0x263F8D488]);
    sub_250ED94F8();
    uint64_t v149 = v45;
    sub_250F0D390();
    uint64_t v46 = v170;
    uint64_t v47 = v182;
    sub_250F0C590();
    char v48 = v171;
    sub_250F0C7B0();
    uint64_t v49 = v179 + 8;
    uint64_t v153 = *(void (**)(char *, uint64_t))(v179 + 8);
    v153(v46, v176);
    uint64_t v50 = *MEMORY[0x263F42E20];
    uint64_t v51 = v174;
    uint64_t v52 = (char *)(v174 + 104);
    uint64_t v53 = v169;
    uint64_t v54 = v166;
    uint64_t v150 = *(void (**)(char *, uint64_t, uint64_t))(v174 + 104);
    v150(v169, v50, v166);
    LODWORD(v151) = sub_250F0C790();
    BOOL v55 = *(void (**)(char *, uint64_t))(v51 + 8);
    v55(v53, v54);
    v55(v48, v54);
    unint64_t v56 = *(void (**)(void, void, void))(v172 + 16);
    uint64_t v146 = v172 + 16;
    uint64_t v148 = (void (*)(char *, uint64_t, uint64_t))v56;
    v56(v175, v47, v173);
    uint64_t v57 = v176;
    uint64_t v179 = v49;
    uint64_t v174 = v51 + 8;
    uint64_t v147 = v55;
    unsigned int v145 = v50;
    if (v151)
    {
      uint64_t v58 = v173;
      uint64_t v59 = *(void (**)(char *, uint64_t))(v172 + 8);
      v59(v175, v173);
      uint64_t v60 = v167;
      uint64_t v61 = v154;
    }
    else
    {
      sub_250F0C530();
      uint64_t v62 = v171;
      sub_250F0C7B0();
      v153(v46, v57);
      uint64_t v63 = v169;
      v150(v169, v50, v54);
      char v64 = sub_250F0C790();
      v55(v63, v54);
      v55(v62, v54);
      uint64_t v58 = v173;
      uint64_t v59 = *(void (**)(char *, uint64_t))(v172 + 8);
      v59(v175, v173);
      uint64_t v60 = v167;
      uint64_t v61 = v154;
      if ((v64 & 1) == 0) {
        goto LABEL_16;
      }
    }
    char v65 = sub_250ED82B0();
    if (v65 != 2)
    {
      char v66 = v65;
      id v67 = sub_250ED8694();
      if (v67)
      {
        unint64_t v68 = v67;
        uint64_t v69 = v61;
        id v70 = objc_msgSend(v67, sel_state);

        BOOL v71 = v70 == 0;
        uint64_t v61 = v69;
        int v72 = v71;
        if ((v66 & 1) == 0) {
          goto LABEL_16;
        }
      }
      else
      {
        int v72 = 1;
        if ((v66 & 1) == 0) {
          goto LABEL_16;
        }
      }
      if (v72)
      {
        sub_250F0C4E0();
        uint64_t v73 = (void (*)(uint64_t))MEMORY[0x263F42D40];
        sub_250ED960C(&qword_269B11100, MEMORY[0x263F42D40]);
        uint64_t v175 = v52;
        uint64_t v74 = v60;
        uint64_t v75 = v178;
        uint64_t v76 = v181;
        sub_250F0D010();
        uint64_t v77 = *(void (**)(char *, uint64_t))(v180 + 8);
        v77(v75, v76);
        sub_250F0D010();
        uint64_t v185 = v183 | v184;
        sub_250ED960C(&qword_269B11108, v73);
        uint64_t v60 = v74;
        uint64_t v52 = v175;
        uint64_t v61 = v154;
        sub_250F0D7A0();
        v77(v61, v76);
      }
    }
LABEL_16:
    uint64_t v78 = (uint64_t)v164;
    sub_250F0CAE0();
    uint64_t v79 = v168;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v60 + 48))(v78, 1, v168) == 1)
    {
      sub_250ED9580(v78);
      uint64_t v42 = v177;
      uint64_t v80 = v178;
      uint64_t v43 = v180;
      uint64_t v44 = v181;
LABEL_29:
      (*(void (**)(uint64_t, char *, uint64_t))(v43 + 32))(v42, v80, v44);
      uint64_t v41 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v42, v41, 1, v44);
    }
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v60 + 32))(v165, v78, v79);
    sub_250F0C4E0();
    uint64_t v81 = v181;
    char v82 = sub_250F0D350();
    unint64_t v83 = *(void (**)(char *, uint64_t))(v180 + 8);
    id v164 = (char *)(v180 + 8);
    uint64_t v151 = v83;
    v83(v61, v81);
    uint64_t v84 = v176;
    if (v82)
    {
LABEL_25:
      uint64_t v106 = v170;
      sub_250F0C4A0();
      char v107 = sub_250F0C760();
      uint64_t v108 = v153;
      v153(v106, v84);
      uint64_t v109 = v165;
      uint64_t v44 = v181;
      uint64_t v80 = v178;
      if (v107)
      {
        sub_250F0C590();
        uint64_t v110 = v158;
        sub_250F0C800();
        v108(v106, v84);
        uint64_t v111 = (uint64_t)v161;
        sub_250F0C440();
        (*(void (**)(char *, uint64_t))(v159 + 8))(v110, v160);
        LOBYTE(v110) = sub_250ED8F54(v109, v111);
        (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v111, v157);
        if (v110)
        {
          unint64_t v112 = v154;
          sub_250F0C4D0();
          uint64_t v113 = (void (*)(uint64_t))MEMORY[0x263F42D40];
          sub_250ED960C(&qword_269B11100, MEMORY[0x263F42D40]);
          sub_250F0D010();
          uint64_t v114 = v151;
          v151(v80, v44);
          sub_250F0D010();
          uint64_t v185 = v183 | v184;
          sub_250ED960C(&qword_269B11108, v113);
          sub_250F0D7A0();
          v114(v112, v44);
        }
      }
      (*(void (**)(uint64_t, uint64_t))(v167 + 8))(v109, v168);
      uint64_t v42 = v177;
      uint64_t v43 = v180;
      goto LABEL_29;
    }
    uint64_t v141 = v59;
    unint64_t v85 = v170;
    uint64_t v86 = v182;
    sub_250F0C590();
    uint64_t v87 = v171;
    sub_250F0C7B0();
    uint64_t v88 = v87;
    v153(v85, v84);
    unint64_t v89 = v169;
    uint64_t v90 = v166;
    uint64_t v175 = v52;
    v150(v169, v145, v166);
    LOBYTE(v87) = sub_250F0C790();
    uint64_t v91 = v58;
    uint64_t v92 = v147;
    v147(v89, v90);
    v92(v88, v90);
    uint64_t v93 = v84;
    BOOL v94 = v156;
    uint64_t v95 = v86;
    unint64_t v96 = v148;
    v148(v156, v95, v91);
    if (v87)
    {
      sub_250F0C520();
      sub_250F0C7B0();
      v153(v85, v93);
      v150(v89, *MEMORY[0x263F42E18], v90);
      sub_250ED960C(&qword_269B11110, MEMORY[0x263F42E30]);
      LODWORD(v175) = sub_250F0CF40();
      v92(v89, v90);
      v92(v88, v90);
      uint64_t v97 = v94;
      uint64_t v98 = v173;
      uint64_t v99 = v141;
      v172 += 8;
      v141(v97, v173);
      uint64_t v100 = v163;
      unint64_t v101 = v148;
      v148(v163, v182, v98);
      if ((v175 & 1) == 0)
      {
        sub_250F0C530();
        uint64_t v116 = v171;
        sub_250F0C7B0();
        uint64_t v117 = v85;
        uint64_t v118 = v92;
        uint64_t v119 = v176;
        v153(v117, v176);
        char v120 = sub_250F0C780();
        v118(v116, v90);
        uint64_t v105 = v173;
        v99(v163, v173);
        uint64_t v102 = v155;
        v101(v155, v182, v105);
        uint64_t v84 = v119;
        if ((v120 & 1) == 0)
        {
          uint64_t v121 = v170;
          sub_250F0C4A0();
          unint64_t v122 = v171;
          sub_250F0C7B0();
          v153(v121, v119);
          char v123 = sub_250F0C780();
          v147(v122, v90);
          v99(v102, v105);
          uint64_t v124 = v144;
          if ((v123 & 1) == 0)
          {
            unint64_t v125 = v154;
            sub_250F0C4F0();
            unint64_t v126 = (void (*)(uint64_t))MEMORY[0x263F42D40];
            sub_250ED960C(&qword_269B11100, MEMORY[0x263F42D40]);
            uint64_t v127 = v84;
            uint64_t v128 = v178;
            uint64_t v129 = v181;
            sub_250F0D010();
            unsigned int v130 = v151;
            v151(v128, v129);
            sub_250F0D010();
            uint64_t v185 = v183 | v184;
            sub_250ED960C(&qword_269B11108, v126);
            sub_250F0D7A0();
            v130(v125, v129);
            uint64_t v131 = v170;
            sub_250F0C590();
            uint64_t v132 = v158;
            sub_250F0C800();
            uint64_t v133 = v131;
            uint64_t v84 = v127;
            v153(v133, v127);
            uint64_t v134 = (uint64_t)v161;
            sub_250F0C440();
            (*(void (**)(char *, uint64_t))(v159 + 8))(v132, v160);
            LOBYTE(v132) = sub_250ED87B0(v165, v134);
            (*(void (**)(uint64_t, uint64_t))(v162 + 8))(v134, v157);
            if (v132)
            {
              uint64_t v135 = v154;
              sub_250F0C4F0();
              uint64_t v136 = v181;
              uint64_t v137 = *(void (**)(char *, char *, uint64_t))(v180 + 16);
              v137(v142, v178, v181);
              v137(v124, v135, v136);
              uint64_t v138 = v143;
              sub_250F0D370();
              sub_250F0D360();
              int v139 = v151;
              v151(v138, v136);
              uint64_t v140 = v136;
              uint64_t v84 = v127;
              v139(v135, v140);
            }
          }
          goto LABEL_25;
        }
        goto LABEL_24;
      }
      uint64_t v102 = v155;
      uint64_t v84 = v176;
      uint64_t v103 = v173;
      uint64_t v104 = v182;
    }
    else
    {
      uint64_t v103 = v173;
      unint64_t v101 = v96;
      uint64_t v99 = v141;
      v141(v94, v173);
      uint64_t v100 = v163;
      uint64_t v84 = v93;
      uint64_t v104 = v182;
      v96(v163, v182, v103);
      uint64_t v102 = v155;
    }
    v99(v100, v103);
    v101(v102, v104, v103);
    uint64_t v105 = v103;
LABEL_24:
    v99(v102, v105);
    goto LABEL_25;
  }
  uint64_t v41 = 1;
  uint64_t v42 = v177;
  uint64_t v43 = v180;
  uint64_t v44 = v181;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v42, v41, 1, v44);
}

uint64_t sub_250ED82B0()
{
  v29[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_250F0CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = objc_msgSend(*(id *)(v0 + 16), sel_onboardingCompletionManager);
  uint64_t v6 = *MEMORY[0x263F09798];
  v29[0] = 0;
  id v7 = objc_msgSend(v5, sel_onboardingCompletionsForHighestVersionOfFeatureIdentifier_error_, v6, v29);

  id v8 = v29[0];
  if (v7)
  {
    sub_250E8D194(0, &qword_269B11118);
    unint64_t v9 = sub_250F0D040();
    id v10 = v8;

    if (v9 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v11 = sub_250F0D5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v11 = *(void *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    swift_bridgeObjectRelease();
    return v11 != 0;
  }
  else
  {
    id v13 = v29[0];
    uint64_t v14 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250F0CC90();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_250F0CCA0();
    os_log_type_t v18 = sub_250F0D1B0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      id v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v20 = sub_250F0D7B0();
      uint64_t v28 = sub_250E8BE44(v20, v21, (uint64_t *)v29);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2114;
      id v22 = v14;
      uint64_t v23 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v23;
      sub_250F0D300();
      uint64_t v24 = v26;
      void *v26 = v23;

      _os_log_impl(&dword_250E86000, v17, v18, "[%{public}s] Error reading onboarding completions: %{public}@", (uint8_t *)v19, 0x16u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v24, -1, -1);
      uint64_t v25 = v27;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v25, -1, -1);
      MEMORY[0x25338EC30](v19, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 2;
  }
}

id sub_250ED8694()
{
  id v1 = objc_msgSend(*(id *)(v0 + 16), sel_profileExtensionsConformingToProtocol_, &unk_2701FAD40);
  uint64_t v2 = sub_250F0D040();

  if (!*(void *)(v2 + 16))
  {
    long long v6 = 0u;
    long long v7 = 0u;
    swift_bridgeObjectRelease();
    goto LABEL_6;
  }
  sub_250E8BF18(v2 + 32, (uint64_t)&v6);
  swift_bridgeObjectRelease();
  if (!*((void *)&v7 + 1))
  {
LABEL_6:
    sub_250EA8EB8((uint64_t)&v6);
    return 0;
  }
  sub_250E9D044();
  if ((swift_dynamicCast() & 1) == 0) {
    return 0;
  }
  id v3 = objc_msgSend(objc_msgSend(v5, sel_getPregnancyModelProvider), sel_getCurrentPregnancyModel);
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

BOOL sub_250ED87B0(uint64_t a1, uint64_t a2)
{
  uint64_t v50 = a2;
  uint64_t v47 = a1;
  uint64_t v38 = *v2;
  uint64_t v3 = sub_250F0CCB0();
  uint64_t v41 = *(void *)(v3 - 8);
  uint64_t v42 = v3;
  MEMORY[0x270FA5388](v3);
  uint64_t v51 = (char *)&v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0C470();
  uint64_t v39 = *(void *)(v5 - 8);
  uint64_t v40 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v49 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v46 = sub_250F0C1B0();
  uint64_t v7 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v45 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0CE70();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0C060();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = sub_250F0BF30();
  uint64_t v43 = *(void *)(v18 - 8);
  uint64_t v44 = v18;
  MEMORY[0x270FA5388](v18);
  uint64_t v20 = (char *)&v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = v47;
  sub_250F0BFB0();
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v21, v13);
  sub_250F0BEF0();
  uint64_t v22 = v48;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v12, v48 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay, v9);
  uint64_t v23 = (uint64_t)v45;
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v45, v50, v46);
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  id v24 = (id)*MEMORY[0x263F09F60];
  uint64_t v25 = (void *)MEMORY[0x25338DDE0](v24);
  uint64_t v26 = *(void **)(v22 + 16);
  id v27 = sub_250EA83E4((uint64_t)v20, (uint64_t)v25, (uint64_t)v26);

  id v28 = v24;
  uint64_t v29 = (uint64_t)v49;
  os_log_type_t v30 = (void *)MEMORY[0x25338DDE0](v28);
  sub_250E961A4((uint64_t)v12, v23, 2, 1, (uint64_t)v27, v30, v26, 1);
  sub_250E94CA4(v29);
  uint64_t v31 = (void *)sub_250F0C460();
  (*(void (**)(uint64_t, uint64_t))(v39 + 8))(v29, v40);
  if (v31)
  {
    uint64_t v32 = self;
    id v33 = v31;
    id v34 = objc_msgSend(v32, sel_appleEffortScoreUnit, v38);
    objc_msgSend(v33, sel_doubleValueForUnit_, v34);
    double v36 = v35;

    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
    return v36 <= 3.0;
  }
  else
  {
    swift_release();
    (*(void (**)(char *, uint64_t))(v43 + 8))(v20, v44);
    return 0;
  }
}

BOOL sub_250ED8F54(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a2;
  v22[0] = *v2;
  uint64_t v4 = sub_250F0CCB0();
  v22[1] = *(void *)(v4 - 8);
  void v22[2] = v4;
  MEMORY[0x270FA5388](v4);
  v22[3] = (char *)v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0C1B0();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void *)(v10 - 8);
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_250F0CE70();
  MEMORY[0x270FA5388](v14);
  uint64_t v16 = (char *)v22 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = (void *)v2[2];
  (*(void (**)(char *, uint64_t))(v18 + 16))(v16, (uint64_t)v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22OutlierContextProvider_targetDay);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a1, v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, v23, v6);
  type metadata accessor for OxygenSaturationElevationContextProvider(0);
  swift_allocObject();
  id v19 = v17;
  sub_250EF4DA0(v19, v16, (uint64_t)v13, (uint64_t)v9);

  BOOL v20 = sub_250EEF894();
  swift_release();
  return v20;
}

uint64_t sub_250ED9450()
{
  return type metadata accessor for OutlierContextProvider();
}

uint64_t sub_250ED9458()
{
  uint64_t result = sub_250F0CE70();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

unint64_t sub_250ED94F8()
{
  unint64_t result = qword_26B20EE78;
  if (!qword_26B20EE78)
  {
    sub_250E8C724(255, &qword_26B20EE70, MEMORY[0x263F42D40], MEMORY[0x263F8D488]);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20EE78);
  }
  return result;
}

uint64_t sub_250ED9580(uint64_t a1)
{
  sub_250E8C724(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_250ED960C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_250ED9654(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_250EDD868();
    uint64_t v2 = (void *)sub_250F0D5E0();
  }
  else
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
  }
  uint64_t v28 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v27 = (unint64_t)(63 - v3) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t i = 0;
  if (v5) {
    goto LABEL_10;
  }
LABEL_11:
  int64_t v12 = i + 1;
  if (__OFADD__(i, 1)) {
    goto LABEL_35;
  }
  if (v12 >= v27) {
    goto LABEL_32;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  int64_t v14 = i + 1;
  if (!v13)
  {
    int64_t v14 = i + 2;
    if (i + 2 >= v27) {
      goto LABEL_32;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v14);
    if (!v13)
    {
      int64_t v14 = i + 3;
      if (i + 3 >= v27) {
        goto LABEL_32;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = i + 4;
        if (i + 4 >= v27) {
          goto LABEL_32;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v14);
        if (!v13)
        {
          int64_t v15 = i + 5;
          if (i + 5 < v27)
          {
            unint64_t v13 = *(void *)(v28 + 8 * v15);
            if (v13)
            {
              int64_t v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              int64_t v14 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_36;
              }
              if (v14 >= v27) {
                break;
              }
              unint64_t v13 = *(void *)(v28 + 8 * v14);
              ++v15;
              if (v13) {
                goto LABEL_26;
              }
            }
          }
LABEL_32:
          sub_250E9FD24();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  unint64_t v5 = (v13 - 1) & v13;
  unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; unint64_t v11 = v10 | (i << 6))
  {
    uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
    uint64_t v18 = *v16;
    uint64_t v17 = v16[1];
    sub_250E9FCC0(*(void *)(a1 + 56) + 40 * v11, (uint64_t)v39);
    *(void *)&long long v38 = v18;
    *((void *)&v38 + 1) = v17;
    v35[2] = v38;
    v36[0] = v39[0];
    v36[1] = v39[1];
    uint64_t v37 = v40;
    uint64_t v30 = v18;
    uint64_t v31 = v17;
    sub_250E9FB90(v36, (uint64_t)v29);
    sub_250E9FB38();
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    uint64_t v20 = v30;
    uint64_t v19 = v31;
    sub_250EA8550(&v32, v34);
    sub_250EA8550(v34, v35);
    sub_250EA8550(v35, &v33);
    unint64_t result = sub_250EFCF60(v20, v19);
    unint64_t v21 = result;
    if (v22)
    {
      uint64_t v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      uint64_t *v8 = v20;
      v8[1] = v19;
      uint64_t v9 = (_OWORD *)(v2[7] + 32 * v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      unint64_t result = (unint64_t)sub_250EA8550(&v33, v9);
      if (!v5) {
        goto LABEL_11;
      }
      goto LABEL_10;
    }
    if (v2[2] >= v2[3]) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v23 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v23 = v20;
    v23[1] = v19;
    unint64_t result = (unint64_t)sub_250EA8550(&v33, (_OWORD *)(v2[7] + 32 * result));
    uint64_t v24 = v2[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25) {
      goto LABEL_34;
    }
    v2[2] = v26;
    if (!v5) {
      goto LABEL_11;
    }
LABEL_10:
    unint64_t v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

id sub_250ED9A40(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t (*a5)(uint64_t, _OWORD *, unsigned char *))
{
  uint64_t v7 = a1 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType;
  long long v8 = *(_OWORD *)(a1
                 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                 + 48);
  v15[2] = *(_OWORD *)(a1
                     + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                     + 32);
  v16[0] = v8;
  *(_OWORD *)((char *)v16 + 9) = *(_OWORD *)(a1
                                           + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                                           + 57);
  long long v9 = *(_OWORD *)(a1
                 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment
                 + 16);
  v15[0] = *(_OWORD *)(a1
                     + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment);
  v15[1] = v9;
  memcpy(__dst, (const void *)(a1 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_summaryAnalytics), sizeof(__dst));
  id v10 = a3;
  swift_retain();
  uint64_t v11 = a5(v7, v15, __dst);
  sub_250ED9654(v11);
  swift_release();

  swift_bridgeObjectRelease();
  int64_t v12 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_250ED9BAC()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType;
  uint64_t v2 = sub_250F0C3D0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_250ED9C6C()
{
  return type metadata accessor for HealthBalanceAnalysisAnalyticsEvent();
}

uint64_t type metadata accessor for HealthBalanceAnalysisAnalyticsEvent()
{
  uint64_t result = qword_26B20F4A0;
  if (!qword_26B20F4A0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250ED9CC0()
{
  uint64_t result = sub_250F0C3D0();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

double sub_250ED9D64@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_250EFCF60(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if (a2)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v11 = *v4;
    uint64_t v13 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_250EDA544();
      uint64_t v11 = v13;
    }
    swift_bridgeObjectRelease();
    sub_250E9FB90((long long *)(*(void *)(v11 + 56) + 40 * v8), a3);
    sub_250EDA9B8(v8, v11);
    uint64_t *v4 = v11;
    swift_bridgeObjectRelease();
  }
  else
  {
    *(void *)(a3 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return result;
}

uint64_t sub_250ED9E70(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_250EDD988();
  char v37 = a2;
  uint64_t v6 = sub_250F0D5D0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v36 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  id v34 = v2;
  int64_t v35 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v18 >= v35) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v36 + 8 * v18);
    ++v13;
    if (!v20)
    {
      int64_t v13 = v18 + 1;
      if (v18 + 1 >= v35) {
        goto LABEL_34;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v13);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v35)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v34;
          if ((v37 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v13 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v35) {
              goto LABEL_34;
            }
            unint64_t v20 = *(void *)(v36 + 8 * v13);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v13 << 6);
LABEL_22:
    char v22 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
    uint64_t v24 = *v22;
    uint64_t v23 = v22[1];
    BOOL v25 = (long long *)(*(void *)(v5 + 56) + 40 * v17);
    if (v37)
    {
      sub_250E9FB90(v25, (uint64_t)v38);
    }
    else
    {
      sub_250E9FCC0((uint64_t)v25, (uint64_t)v38);
      swift_bridgeObjectRetain();
    }
    sub_250F0D710();
    sub_250F0CFA0();
    uint64_t result = sub_250F0D730();
    uint64_t v26 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v27) & ~*(void *)(v11 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v11 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v14 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    int64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
    *int64_t v15 = v24;
    v15[1] = v23;
    uint64_t result = sub_250E9FB90(v38, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v34;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v37 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v19, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v19 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_250EDA194(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v43 = sub_250F0BF30();
  uint64_t v5 = *(void *)(v43 - 8);
  MEMORY[0x270FA5388](v43);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_250EDDA5C();
  int v42 = a2;
  uint64_t v9 = sub_250F0D5D0();
  uint64_t v10 = v9;
  if (*(void *)(v8 + 16))
  {
    long long v38 = v2;
    uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
    uint64_t v12 = *(void *)(v8 + 64);
    uint64_t v40 = (void *)(v8 + 64);
    if (v11 < 64) {
      uint64_t v13 = ~(-1 << v11);
    }
    else {
      uint64_t v13 = -1;
    }
    unint64_t v14 = v13 & v12;
    int64_t v39 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v41 = (void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    int64_t v15 = (void (**)(char *, unint64_t, uint64_t))(v5 + 32);
    uint64_t v16 = v9 + 64;
    uint64_t result = swift_retain();
    int64_t v18 = 0;
    while (1)
    {
      if (v14)
      {
        unint64_t v20 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        unint64_t v21 = v20 | (v18 << 6);
      }
      else
      {
        int64_t v22 = v18 + 1;
        if (__OFADD__(v18, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v39) {
          goto LABEL_34;
        }
        unint64_t v23 = v40[v22];
        ++v18;
        if (!v23)
        {
          int64_t v18 = v22 + 1;
          if (v22 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v23 = v40[v18];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v39)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v38;
              if (v42)
              {
                uint64_t v37 = 1 << *(unsigned char *)(v8 + 32);
                if (v37 >= 64) {
                  bzero(v40, ((unint64_t)(v37 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v40 = -1 << v37;
                }
                *(void *)(v8 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v40[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v18 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v18 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v23 = v40[v18];
                ++v24;
                if (v23) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v18 = v24;
          }
        }
LABEL_21:
        unint64_t v14 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v18 << 6);
      }
      BOOL v25 = *(void **)(*(void *)(v8 + 48) + 8 * v21);
      uint64_t v26 = v5;
      uint64_t v27 = *(void *)(v5 + 72);
      unint64_t v28 = *(void *)(v8 + 56) + v27 * v21;
      if (v42)
      {
        (*v15)(v7, v28, v43);
      }
      else
      {
        (*v41)(v7, v28, v43);
        id v29 = v25;
      }
      uint64_t result = sub_250F0D290();
      uint64_t v30 = -1 << *(unsigned char *)(v10 + 32);
      unint64_t v31 = result & ~v30;
      unint64_t v32 = v31 >> 6;
      if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
      {
        unint64_t v19 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v33 = 0;
        unint64_t v34 = (unint64_t)(63 - v30) >> 6;
        do
        {
          if (++v32 == v34 && (v33 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v35 = v32 == v34;
          if (v32 == v34) {
            unint64_t v32 = 0;
          }
          v33 |= v35;
          uint64_t v36 = *(void *)(v16 + 8 * v32);
        }
        while (v36 == -1);
        unint64_t v19 = __clz(__rbit64(~v36)) + (v32 << 6);
      }
      *(void *)(v16 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      *(void *)(*(void *)(v10 + 48) + 8 * v19) = v25;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v15)(*(void *)(v10 + 56) + v27 * v19, v7, v43);
      ++*(void *)(v10 + 16);
      uint64_t v5 = v26;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

void *sub_250EDA544()
{
  unint64_t v1 = v0;
  sub_250EDD988();
  uint64_t v2 = *v0;
  uint64_t v3 = sub_250F0D5C0();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *unint64_t v1 = v4;
    return result;
  }
  BOOL v25 = v1;
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = 40 * v15;
    sub_250E9FCC0(*(void *)(v2 + 56) + 40 * v15, (uint64_t)v26);
    unint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v21 = v19;
    v21[1] = v18;
    sub_250E9FB90(v26, *(void *)(v4 + 56) + v20);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    unint64_t v1 = v25;
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_250EDA72C()
{
  uint64_t v1 = sub_250F0BF30();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EDDA5C();
  int64_t v24 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_250F0D5C0();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *int64_t v24 = v7;
    return result;
  }
  id result = (id)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    id result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v11 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v5 + 64);
  uint64_t v28 = v2 + 16;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v27 = v2 + 32;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v11;
    if (!v21)
    {
      int64_t v11 = v20 + 1;
      if (v20 + 1 >= v26) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v11);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v14 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v11 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void **)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v2 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v19, v1);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v19, v4, v1);
    id result = v18;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v26) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v11 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v11 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v11 >= v26) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v11);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

unint64_t sub_250EDA9B8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    id result = sub_250F0D3A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_250F0D710();
        swift_bridgeObjectRetain();
        sub_250F0CFA0();
        uint64_t v11 = sub_250F0D730();
        id result = swift_bridgeObjectRelease();
        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v12 < v8) {
            goto LABEL_5;
          }
        }
        else if (v12 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v12)
        {
LABEL_11:
          uint64_t v13 = *(void *)(a2 + 48);
          unint64_t v14 = (_OWORD *)(v13 + 16 * v3);
          unint64_t v15 = (_OWORD *)(v13 + 16 * v6);
          if (v3 != v6 || v14 >= v15 + 1) {
            *unint64_t v14 = *v15;
          }
          uint64_t v16 = *(void *)(a2 + 56);
          unint64_t v17 = v16 + 40 * v3;
          uint64_t v18 = (long long *)(v16 + 40 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v17 >= (unint64_t)v18 + 40))
          {
            long long v9 = *v18;
            long long v10 = v18[1];
            *(void *)(v17 + 32) = *((void *)v18 + 4);
            *(_OWORD *)unint64_t v17 = v9;
            *(_OWORD *)(v17 + 16) = v10;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v19 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v20 = *v19;
    uint64_t v21 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v19 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v21 = *v19;
    uint64_t v20 = (-1 << result) - 1;
  }
  *unint64_t v19 = v21 & v20;
  uint64_t v22 = *(void *)(a2 + 16);
  BOOL v23 = __OFSUB__(v22, 1);
  uint64_t v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v24;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

void sub_250EDABA4(unint64_t a1, uint64_t a2)
{
  int64_t v3 = a1;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (a1 + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    uint64_t v8 = sub_250F0D3A0();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        id v10 = *(id *)(*(void *)(a2 + 48) + 8 * v6);
        uint64_t v11 = sub_250F0D290();

        unint64_t v12 = v11 & v7;
        if (v3 >= (uint64_t)v9)
        {
          if (v12 < v9 || v3 < (uint64_t)v12) {
            goto LABEL_6;
          }
        }
        else if (v12 < v9 && v3 < (uint64_t)v12)
        {
          goto LABEL_6;
        }
        uint64_t v15 = *(void *)(a2 + 48);
        uint64_t v16 = (void *)(v15 + 8 * v3);
        unint64_t v17 = (void *)(v15 + 8 * v6);
        if (v3 != v6 || v16 >= v17 + 1) {
          *uint64_t v16 = *v17;
        }
        uint64_t v18 = *(void *)(a2 + 56);
        uint64_t v19 = *(void *)(*(void *)(sub_250F0BF30() - 8) + 72);
        int64_t v20 = v19 * v3;
        unint64_t v21 = v18 + v19 * v3;
        int64_t v22 = v19 * v6;
        unint64_t v23 = v18 + v19 * v6 + v19;
        if (v20 < v22 || v21 >= v23)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          int64_t v3 = v6;
          if (v20 == v22) {
            goto LABEL_6;
          }
          swift_arrayInitWithTakeBackToFront();
        }
        int64_t v3 = v6;
LABEL_6:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v25 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v25 = (uint64_t *)(v4 + 8 * (a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  uint64_t *v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
}

uint64_t sub_250EDAD90(char a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v28) = a1;
  uint64_t v9 = MEMORY[0x263F8D4F8];
  uint64_t v29 = MEMORY[0x263F8D4F8];
  uint64_t v30 = MEMORY[0x263F8D510];
  id v10 = (void *)*a5;
  unint64_t v12 = sub_250EFCF60(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      __swift_destroy_boxed_opaque_existential_1(v19);
      return sub_250E9FB90(&v28, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_250EDA544();
    goto LABEL_7;
  }
  sub_250ED9E70(v15, a4 & 1);
  unint64_t v21 = sub_250EFCF60(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = sub_250F0D6C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v26 + 16))(v25);
  sub_250EDB62C(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return swift_bridgeObjectRetain();
}

uint64_t sub_250EDAF80(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  *(void *)&long long v28 = a1;
  uint64_t v9 = MEMORY[0x263F8D6C8];
  uint64_t v29 = MEMORY[0x263F8D6C8];
  uint64_t v30 = MEMORY[0x263F8D6E8];
  id v10 = (void *)*a5;
  unint64_t v12 = sub_250EFCF60(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v18 = (void *)*a5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7] + 40 * v12;
      __swift_destroy_boxed_opaque_existential_1(v19);
      return sub_250E9FB90(&v28, v19);
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_250EDA544();
    goto LABEL_7;
  }
  sub_250ED9E70(v15, a4 & 1);
  unint64_t v21 = sub_250EFCF60(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_14:
    uint64_t result = sub_250F0D6C0();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  uint64_t v18 = (void *)*a5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v23 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v28, v9);
  MEMORY[0x270FA5388](v23);
  uint64_t v25 = (uint64_t *)((char *)&v27 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v26 + 16))(v25);
  sub_250EDB598(v12, a2, a3, *v25, v18);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v28);
  return swift_bridgeObjectRetain();
}

uint64_t sub_250EDB174(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5, void *a6)
{
  uint64_t v10 = MEMORY[0x263F8D310];
  uint64_t v30 = MEMORY[0x263F8D310];
  uint64_t v31 = MEMORY[0x263F8D338];
  *(void *)&long long v29 = a1;
  *((void *)&v29 + 1) = a2;
  char v11 = (void *)*a6;
  unint64_t v13 = sub_250EFCF60(a3, a4);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v17 = v12;
  uint64_t v18 = v11[3];
  if (v18 >= v16 && (a5 & 1) != 0)
  {
LABEL_7:
    uint64_t v19 = (void *)*a6;
    if (v17)
    {
LABEL_8:
      uint64_t v20 = v19[7] + 40 * v13;
      __swift_destroy_boxed_opaque_existential_1(v20);
      return sub_250E9FB90(&v29, v20);
    }
    goto LABEL_11;
  }
  if (v18 >= v16 && (a5 & 1) == 0)
  {
    sub_250EDA544();
    goto LABEL_7;
  }
  sub_250ED9E70(v16, a5 & 1);
  unint64_t v22 = sub_250EFCF60(a3, a4);
  if ((v17 & 1) != (v23 & 1))
  {
LABEL_14:
    uint64_t result = sub_250F0D6C0();
    __break(1u);
    return result;
  }
  unint64_t v13 = v22;
  uint64_t v19 = (void *)*a6;
  if (v17) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v29, v10);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v28 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_250EDB6BC(v13, a3, a4, *v26, v26[1], v19);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v29);
  return swift_bridgeObjectRetain();
}

uint64_t sub_250EDB364(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v34 = a6;
  uint64_t v35 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v33);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a1, a6);
  BOOL v15 = (void *)*a5;
  unint64_t v17 = sub_250EFCF60(a2, a3);
  uint64_t v18 = v15[2];
  BOOL v19 = (v16 & 1) == 0;
  uint64_t v20 = v18 + v19;
  if (__OFADD__(v18, v19))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v21 = v16;
  uint64_t v22 = v15[3];
  if (v22 >= v20 && (a4 & 1) != 0)
  {
LABEL_7:
    char v23 = (void *)*a5;
    if (v21)
    {
LABEL_8:
      uint64_t v24 = v23[7] + 40 * v17;
      __swift_destroy_boxed_opaque_existential_1(v24);
      return sub_250E9FB90(&v33, v24);
    }
    goto LABEL_11;
  }
  if (v22 >= v20 && (a4 & 1) == 0)
  {
    sub_250EDA544();
    goto LABEL_7;
  }
  sub_250ED9E70(v20, a4 & 1);
  unint64_t v26 = sub_250EFCF60(a2, a3);
  if ((v21 & 1) != (v27 & 1))
  {
LABEL_14:
    uint64_t result = sub_250F0D6C0();
    __break(1u);
    return result;
  }
  unint64_t v17 = v26;
  char v23 = (void *)*a5;
  if (v21) {
    goto LABEL_8;
  }
LABEL_11:
  uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)&v33, v34);
  MEMORY[0x270FA5388](v28);
  uint64_t v30 = (char *)&v32 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v31 + 16))(v30);
  sub_250EDB74C(v17, a2, a3, (uint64_t)v30, v23, a6, a7);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v33);
  return swift_bridgeObjectRetain();
}

uint64_t sub_250EDB598(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  *(void *)&long long v11 = a4;
  uint64_t v12 = MEMORY[0x263F8D6C8];
  uint64_t v13 = MEMORY[0x263F8D6E8];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_250E9FB90(&v11, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_250EDB62C(unint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  LOBYTE(v11) = a4;
  uint64_t v12 = MEMORY[0x263F8D4F8];
  uint64_t v13 = MEMORY[0x263F8D510];
  a5[(a1 >> 6) + 8] |= 1 << a1;
  unint64_t v6 = (void *)(a5[6] + 16 * a1);
  *unint64_t v6 = a2;
  v6[1] = a3;
  uint64_t result = sub_250E9FB90(&v11, a5[7] + 40 * a1);
  uint64_t v8 = a5[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a5[2] = v10;
  }
  return result;
}

uint64_t sub_250EDB6BC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  uint64_t v13 = MEMORY[0x263F8D310];
  uint64_t v14 = MEMORY[0x263F8D338];
  *(void *)&long long v12 = a4;
  *((void *)&v12 + 1) = a5;
  a6[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v7 = (void *)(a6[6] + 16 * a1);
  *uint64_t v7 = a2;
  v7[1] = a3;
  uint64_t result = sub_250E9FB90(&v12, a6[7] + 40 * a1);
  uint64_t v9 = a6[2];
  BOOL v10 = __OFADD__(v9, 1);
  uint64_t v11 = v9 + 1;
  if (v10) {
    __break(1u);
  }
  else {
    a6[2] = v11;
  }
  return result;
}

uint64_t sub_250EDB74C(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, uint64_t a6, uint64_t a7)
{
  uint64_t v20 = a6;
  uint64_t v21 = a7;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v19);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a6 - 8) + 32))(boxed_opaque_existential_1, a4, a6);
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v14 = (void *)(a5[6] + 16 * a1);
  *uint64_t v14 = a2;
  v14[1] = a3;
  uint64_t result = sub_250E9FB90(&v19, a5[7] + 40 * a1);
  uint64_t v16 = a5[2];
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    a5[2] = v18;
  }
  return result;
}

uint64_t sub_250EDB824(uint64_t a1, uint64_t *a2, void *a3)
{
  uint64_t v6 = sub_250F0C3D0();
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  v128[0] = (char *)v128 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  unsigned int v145 = (char *)v128 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v151 = a3[1];
  uint64_t v134 = a3[2];
  uint64_t v133 = a3[3];
  uint64_t v132 = a3[7];
  uint64_t v131 = a3[11];
  uint64_t v130 = a3[12];
  uint64_t v129 = a3[13];
  v128[1] = a3[17];
  uint64_t v138 = a3[21];
  uint64_t v137 = a3[22];
  uint64_t v136 = a3[23];
  uint64_t v135 = a3[27];
  uint64_t v142 = a3[31];
  uint64_t v141 = a3[32];
  uint64_t v140 = a3[33];
  uint64_t v139 = a3[37];
  uint64_t v143 = a3[41];
  uint64_t v144 = a3[42];
  uint64_t v150 = a3[43];
  uint64_t v152 = a3[47];
  unint64_t v159 = MEMORY[0x263F8EE80];
  uint64_t v148 = v11;
  long long v12 = *(void (**)(void, uint64_t, uint64_t))(v11 + 16);
  uint64_t v149 = a1;
  uint64_t v147 = v11 + 16;
  uint64_t v146 = v12;
  v12((char *)v128 - v13, a1, v6);
  uint64_t v14 = sub_250F0CF90();
  uint64_t v15 = MEMORY[0x263F8D338];
  uint64_t v157 = MEMORY[0x263F8D310];
  uint64_t v158 = MEMORY[0x263F8D338];
  *(void *)&long long v156 = v14;
  *((void *)&v156 + 1) = v16;
  sub_250E9FB90(&v156, (uint64_t)v154);
  unint64_t v17 = v159;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v17;
  uint64_t v19 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  MEMORY[0x270FA5388](v19);
  uint64_t v21 = (void *)((char *)v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v22 + 16))(v21);
  sub_250EDB174(*v21, v21[1], 0x63697274656DLL, 0xE600000000000000, isUniquelyReferenced_nonNull_native, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
  unint64_t v23 = v162;
  unint64_t v159 = v162;
  swift_bridgeObjectRelease();
  uint64_t v24 = a2[1];
  if (v24)
  {
    uint64_t v25 = *a2;
    uint64_t v26 = MEMORY[0x263F8D310];
    uint64_t v157 = MEMORY[0x263F8D310];
    uint64_t v158 = v15;
    *(void *)&long long v156 = v25;
    *((void *)&v156 + 1) = v24;
    sub_250E9FB90(&v156, (uint64_t)v154);
    swift_bridgeObjectRetain();
    char v27 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v23;
    unint64_t v159 = 0x8000000000000000;
    uint64_t v28 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v28);
    uint64_t v30 = (char *)v128 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v31 + 16))(v30);
    sub_250EDB364((uint64_t)v30, 0xD000000000000016, 0x8000000250F10970, v27, &v162, v26, v15);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v32 = v162;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_250ED9D64(0xD000000000000016, 0x8000000250F10970, (uint64_t)&v156);
    sub_250EDD8D4((uint64_t)&v156);
    unint64_t v32 = v159;
  }
  uint64_t v33 = MEMORY[0x263F8D4F8];
  char v34 = *((unsigned char *)a2 + 48);
  uint64_t v35 = MEMORY[0x263F8D510];
  uint64_t v157 = MEMORY[0x263F8D4F8];
  uint64_t v158 = MEMORY[0x263F8D510];
  LOBYTE(v156) = v34;
  sub_250E9FB90(&v156, (uint64_t)v154);
  char v36 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v162 = v32;
  uint64_t v37 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  MEMORY[0x270FA5388](v37);
  int64_t v39 = (char *)v128 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v40 + 16))(v39);
  sub_250EDAD90(*v39, 0xD000000000000021, 0x8000000250F109C0, v36, &v162);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
  unint64_t v41 = v162;
  unint64_t v159 = v162;
  swift_bridgeObjectRelease();
  sub_250EDD9F0((uint64_t)a2 + 49, (uint64_t)&v165, &qword_26B20F4E0);
  sub_250EDD9F0((uint64_t)&v165, (uint64_t)&v166, &qword_26B20F4E0);
  if (v166 == 2)
  {
    sub_250ED9D64(0xD00000000000001BLL, 0x8000000250F10AF0, (uint64_t)&v156);
    sub_250EDD8D4((uint64_t)&v156);
  }
  else
  {
    uint64_t v157 = v33;
    uint64_t v158 = v35;
    LOBYTE(v156) = v166;
    sub_250E9FB90(&v156, (uint64_t)v154);
    char v42 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v162 = v41;
    uint64_t v43 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v43);
    uint64_t v45 = (char *)v128 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v46 + 16))(v45);
    sub_250EDB364((uint64_t)v45, 0xD00000000000001BLL, 0x8000000250F10AF0, v42, &v162, v33, v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v159 = v162;
    swift_bridgeObjectRelease();
  }
  uint64_t v47 = MEMORY[0x263F8D6C8];
  sub_250EDD9F0((uint64_t)(a2 + 8), (uint64_t)v160, &qword_26B20F4E8);
  sub_250EDD9F0((uint64_t)v160, (uint64_t)&v162, &qword_26B20F4E8);
  uint64_t v48 = MEMORY[0x263F8D6E8];
  if (v163)
  {
    sub_250ED9D64(0xD000000000000013, 0x8000000250F10A10, (uint64_t)&v156);
    sub_250EDD8D4((uint64_t)&v156);
    unint64_t v49 = v159;
  }
  else
  {
    uint64_t v157 = v47;
    uint64_t v158 = MEMORY[0x263F8D6E8];
    *(void *)&long long v156 = v162;
    sub_250E9FB90(&v156, (uint64_t)v154);
    unint64_t v50 = v159;
    char v51 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v50;
    unint64_t v159 = 0x8000000000000000;
    uint64_t v52 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v52);
    uint64_t v54 = (char *)v128 - ((v53 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v55 + 16))(v54);
    sub_250EDB364((uint64_t)v54, 0xD000000000000013, 0x8000000250F10A10, v51, &v153, v47, v48);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v49 = v153;
    swift_bridgeObjectRelease();
  }
  uint64_t v56 = v150;
  uint64_t v57 = a2[7];
  uint64_t v157 = v47;
  uint64_t v158 = v48;
  *(void *)&long long v156 = v57;
  sub_250E9FB90(&v156, (uint64_t)v154);
  char v58 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v153 = v49;
  uint64_t v59 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  MEMORY[0x270FA5388](v59);
  uint64_t v61 = (void *)((char *)v128 - ((v60 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v62 + 16))(v61);
  sub_250EDAF80(*v61, 0xD00000000000001ALL, 0x8000000250F10BB0, v58, &v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
  unint64_t v63 = v153;
  swift_bridgeObjectRelease();
  uint64_t v157 = v47;
  uint64_t v158 = v48;
  *(void *)&long long v156 = v151;
  sub_250E9FB90(&v156, (uint64_t)v154);
  char v64 = swift_isUniquelyReferenced_nonNull_native();
  unint64_t v153 = v63;
  uint64_t v65 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
  MEMORY[0x270FA5388](v65);
  id v67 = (void *)((char *)v128 - ((v66 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v68 + 16))(v67);
  sub_250EDAF80(*v67, 0xD00000000000001BLL, 0x8000000250F12310, v64, &v153);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
  unint64_t v159 = v153;
  swift_bridgeObjectRelease();
  uint64_t v69 = v145;
  uint64_t v70 = v149;
  BOOL v71 = v146;
  v146(v145, v149, v6);
  int v72 = (*(uint64_t (**)(char *, uint64_t))(v148 + 88))(v69, v6);
  if (v72 == *MEMORY[0x263F42CC8])
  {
    uint64_t v73 = v47;
    uint64_t v74 = v143;
    uint64_t v75 = v144;
    uint64_t v76 = v56;
    goto LABEL_19;
  }
  if (v72 == *MEMORY[0x263F42CB8])
  {
    uint64_t v73 = v47;
    uint64_t v74 = v142;
    uint64_t v75 = v141;
    uint64_t v76 = v140;
    uint64_t v77 = (long long *)&v164;
LABEL_18:
    uint64_t v152 = *((void *)v77 - 32);
    goto LABEL_19;
  }
  if (v72 == *MEMORY[0x263F42CB0])
  {
    uint64_t v73 = v47;
    uint64_t v74 = v138;
    uint64_t v75 = v137;
    uint64_t v76 = v136;
    uint64_t v77 = (long long *)&v161;
    goto LABEL_18;
  }
  if (v72 == *MEMORY[0x263F42CC0])
  {
    uint64_t v73 = v47;
    uint64_t v74 = v131;
    uint64_t v75 = v130;
    uint64_t v76 = v129;
    uint64_t v77 = &v156;
    goto LABEL_18;
  }
  if (v72 == *MEMORY[0x263F42CA8])
  {
    uint64_t v73 = v47;
    uint64_t v75 = v134;
    uint64_t v76 = v133;
    uint64_t v152 = v132;
    uint64_t v74 = v151;
LABEL_19:
    uint64_t v78 = MEMORY[0x263F8D6E8];
    uint64_t v157 = v73;
    uint64_t v158 = MEMORY[0x263F8D6E8];
    uint64_t v79 = v73;
    *(void *)&long long v156 = v74;
    sub_250E9FB90(&v156, (uint64_t)v154);
    unint64_t v80 = v159;
    char v81 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v80;
    uint64_t v82 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v82);
    uint64_t v84 = (void *)((char *)v128 - ((v83 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v85 + 16))(v84);
    sub_250EDAF80(*v84, 0xD00000000000001ELL, 0x8000000250F12330, v81, &v153);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v86 = v153;
    swift_bridgeObjectRelease();
    uint64_t v157 = v79;
    uint64_t v158 = v78;
    *(void *)&long long v156 = v75;
    sub_250E9FB90(&v156, (uint64_t)v154);
    char v87 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v86;
    uint64_t v88 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v88);
    uint64_t v90 = (void *)((char *)v128 - ((v89 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v91 + 16))(v90);
    sub_250EDAF80(*v90, 0xD000000000000029, 0x8000000250F12350, v87, &v153);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v92 = v153;
    swift_bridgeObjectRelease();
    uint64_t v157 = v79;
    uint64_t v158 = v78;
    *(void *)&long long v156 = v76;
    sub_250E9FB90(&v156, (uint64_t)v154);
    char v93 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v92;
    uint64_t v94 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v94);
    unint64_t v96 = (void *)((char *)v128 - ((v95 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v97 + 16))(v96);
    sub_250EDAF80(*v96, 0xD00000000000002ALL, 0x8000000250F12380, v93, &v153);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v98 = v153;
    unint64_t v159 = v153;
    swift_bridgeObjectRelease();
    int v99 = v152;
    uint64_t v100 = v152;
    if (v152 == 2)
    {
      sub_250ED9D64(0x7461697665447369, 0xEB000000006E6F69, (uint64_t)v154);
      sub_250EDD8D4((uint64_t)v154);
    }
    else
    {
      uint64_t v101 = MEMORY[0x263F8D4F8];
      uint64_t v157 = MEMORY[0x263F8D4F8];
      uint64_t v102 = MEMORY[0x263F8D510];
      uint64_t v158 = MEMORY[0x263F8D510];
      LOBYTE(v156) = v152 & 1;
      sub_250E9FB90(&v156, (uint64_t)v154);
      char v103 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v153 = v98;
      uint64_t v104 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
      MEMORY[0x270FA5388](v104);
      uint64_t v106 = (char *)v128 - ((v105 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v107 + 16))(v106);
      sub_250EDB364((uint64_t)v106, 0x7461697665447369, 0xEB000000006E6F69, v103, &v153, v101, v102);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
      unint64_t v108 = v153;
      unint64_t v159 = v153;
      swift_bridgeObjectRelease();
      if ((v99 & 0xFF00) != 0x200)
      {
        uint64_t v110 = MEMORY[0x263F8D4F8];
        uint64_t v157 = MEMORY[0x263F8D4F8];
        uint64_t v158 = v102;
        LOBYTE(v156) = BYTE1(v99) & 1;
        sub_250E9FB90(&v156, (uint64_t)v154);
        char v111 = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v153 = v108;
        uint64_t v112 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
        MEMORY[0x270FA5388](v112);
        uint64_t v114 = (char *)v128 - ((v113 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v115 + 16))(v114);
        sub_250EDB364((uint64_t)v114, 0xD000000000000013, 0x8000000250F123B0, v111, &v153, v110, v102);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
        unint64_t v159 = v153;
        swift_bridgeObjectRelease();
        goto LABEL_25;
      }
    }
    sub_250ED9D64(0xD000000000000013, 0x8000000250F123B0, (uint64_t)v154);
    sub_250EDD8D4((uint64_t)v154);
    if (v100 == 2)
    {
      sub_250ED9D64(0x74654D646E756F62, 0xEB00000000646F68, (uint64_t)v154);
      sub_250EDD8D4((uint64_t)v154);
      return v159;
    }
LABEL_25:
    BOOL v116 = (*(void *)&v99 & 0x10000) == 0;
    uint64_t v117 = 7500137;
    if ((*(void *)&v99 & 0x10000) != 0) {
      uint64_t v117 = 0x6E696772616DLL;
    }
    unint64_t v118 = 0xE600000000000000;
    uint64_t v119 = MEMORY[0x263F8D310];
    uint64_t v157 = MEMORY[0x263F8D310];
    uint64_t v120 = MEMORY[0x263F8D338];
    uint64_t v158 = MEMORY[0x263F8D338];
    if (v116) {
      unint64_t v118 = 0xE300000000000000;
    }
    *(void *)&long long v156 = v117;
    *((void *)&v156 + 1) = v118;
    sub_250E9FB90(&v156, (uint64_t)v154);
    unint64_t v121 = v159;
    char v122 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v153 = v121;
    uint64_t v123 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v154, v155);
    MEMORY[0x270FA5388](v123);
    unint64_t v125 = (char *)v128 - ((v124 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v126 + 16))(v125);
    sub_250EDB364((uint64_t)v125, 0x74654D646E756F62, 0xEB00000000646F68, v122, &v153, v119, v120);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v154);
    unint64_t v109 = v153;
    swift_bridgeObjectRelease();
    return v109;
  }
  v71(v128[0], v70, v6);
  *(void *)&long long v156 = 0;
  *((void *)&v156 + 1) = 0xE000000000000000;
  sub_250F0D480();
  sub_250F0CFB0();
  sub_250F0D560();
  uint64_t result = sub_250F0D590();
  __break(1u);
  return result;
}

uint64_t sub_250EDCC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v86 = a1;
  uint64_t v5 = a3 + 288;
  uint64_t v87 = sub_250F0C3D0();
  uint64_t v6 = *(void *)(v87 - 8);
  uint64_t v7 = MEMORY[0x270FA5388](v87);
  id v67 = (char *)&v66 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v10 = (char *)&v66 - v9;
  uint64_t v75 = *(void *)(a3 + 40);
  int v74 = *(unsigned __int8 *)(a3 + 48);
  uint64_t v72 = *(void *)(a3 + 120);
  int v71 = *(unsigned __int8 *)(a3 + 128);
  uint64_t v79 = *(void *)(a3 + 200);
  int v78 = *(unsigned __int8 *)(a3 + 208);
  uint64_t v81 = *(void *)(a3 + 280);
  int v80 = *(unsigned __int8 *)(a3 + 288);
  uint64_t v85 = *(void *)(a3 + 360);
  int v84 = *(unsigned __int8 *)(v5 + 80);
  long long v73 = *(_OWORD *)(a3 + 72);
  long long v70 = *(_OWORD *)(a3 + 56);
  long long v69 = *(_OWORD *)(a3 + 152);
  long long v68 = *(_OWORD *)(a3 + 136);
  long long v77 = *(_OWORD *)(a3 + 232);
  long long v76 = *(_OWORD *)(a3 + 216);
  long long v11 = *(_OWORD *)(v5 + 8);
  long long v88 = *(_OWORD *)(v5 + 24);
  long long v89 = v11;
  long long v83 = *(_OWORD *)(v5 + 104);
  long long v82 = *(_OWORD *)(v5 + 88);
  uint64_t v12 = MEMORY[0x263F8EE80];
  uint64_t v100 = MEMORY[0x263F8EE80];
  uint64_t v13 = MEMORY[0x263F8D6C8];
  sub_250EDD9F0(a2 + 16, (uint64_t)v96, &qword_26B20F4E8);
  sub_250EDD9F0((uint64_t)v96, (uint64_t)&v98, &qword_26B20F4E8);
  if (v99)
  {
    uint64_t v14 = v13;
    sub_250ED9D64(6645601, 0xE300000000000000, (uint64_t)&v93);
    sub_250EDD8D4((uint64_t)&v93);
  }
  else
  {
    uint64_t v94 = v13;
    uint64_t v95 = MEMORY[0x263F8D6E8];
    *(void *)&long long v93 = v98;
    sub_250E9FB90(&v93, (uint64_t)v91);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v12;
    uint64_t v16 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
    MEMORY[0x270FA5388](v16);
    uint64_t v18 = (char *)&v66 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v19 + 16))(v18);
    uint64_t v14 = v13;
    sub_250EDB364((uint64_t)v18, 6645601, 0xE300000000000000, isUniquelyReferenced_nonNull_native, &v90, v13, MEMORY[0x263F8D6E8]);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    uint64_t v100 = v90;
    swift_bridgeObjectRelease();
  }
  uint64_t v20 = *(void *)(a2 + 32);
  uint64_t v21 = *(void *)(a2 + 40);
  uint64_t v94 = MEMORY[0x263F8D310];
  uint64_t v95 = MEMORY[0x263F8D338];
  *(void *)&long long v93 = v20;
  *((void *)&v93 + 1) = v21;
  sub_250E9FB90(&v93, (uint64_t)v91);
  swift_bridgeObjectRetain();
  uint64_t v22 = v100;
  char v23 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v90 = v22;
  uint64_t v24 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
  MEMORY[0x270FA5388](v24);
  uint64_t v26 = (uint64_t *)((char *)&v66 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v27 + 16))(v26);
  sub_250EDB174(*v26, v26[1], 0x6369676F6C6F6962, 0xED00007865536C61, v23, &v90);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
  uint64_t v100 = v90;
  swift_bridgeObjectRelease();
  uint64_t v28 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  uint64_t v29 = v86;
  uint64_t v30 = v87;
  v28(v10, v86, v87);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v6 + 88))(v10, v30);
  if (v31 == *MEMORY[0x263F42CC8])
  {
    uint64_t v32 = v85;
    long long v88 = v83;
    uint64_t v33 = v14;
    long long v89 = v82;
    if ((v84 & 1) == 0) {
      goto LABEL_17;
    }
  }
  else
  {
    uint64_t v33 = v14;
    if (v31 == *MEMORY[0x263F42CB8])
    {
      uint64_t v32 = v81;
      if ((v80 & 1) == 0)
      {
LABEL_17:
        uint64_t v37 = MEMORY[0x263F8D6E8];
        uint64_t v94 = v33;
        uint64_t v95 = MEMORY[0x263F8D6E8];
        *(void *)&long long v93 = v32;
        sub_250E9FB90(&v93, (uint64_t)v91);
        uint64_t v38 = v100;
        char v39 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v90 = v38;
        uint64_t v40 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
        MEMORY[0x270FA5388](v40);
        char v42 = (char *)&v66 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
        (*(void (**)(char *))(v43 + 16))(v42);
        sub_250EDB364((uint64_t)v42, 0xD000000000000016, 0x8000000250F122F0, v39, &v90, v33, v37);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
        uint64_t v100 = v90;
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    else
    {
      if (v31 == *MEMORY[0x263F42CB0])
      {
        uint64_t v32 = v79;
        char v34 = v78;
        long long v35 = v76;
        char v36 = (long long *)&v97;
      }
      else if (v31 == *MEMORY[0x263F42CC0])
      {
        uint64_t v32 = v72;
        char v34 = v71;
        long long v35 = v68;
        char v36 = (long long *)&v90;
      }
      else
      {
        if (v31 != *MEMORY[0x263F42CA8])
        {
          v28(v67, v29, v30);
          *(void *)&long long v93 = 0;
          *((void *)&v93 + 1) = 0xE000000000000000;
          sub_250F0D480();
          sub_250F0CFB0();
          sub_250F0D560();
          uint64_t result = sub_250F0D590();
          __break(1u);
          return result;
        }
        uint64_t v32 = v75;
        char v34 = v74;
        long long v35 = v70;
        char v36 = &v93;
      }
      long long v88 = *(v36 - 16);
      long long v89 = v35;
      if ((v34 & 1) == 0) {
        goto LABEL_17;
      }
    }
  }
  sub_250ED9D64(0xD000000000000016, 0x8000000250F122F0, (uint64_t)&v93);
  sub_250EDD8D4((uint64_t)&v93);
LABEL_18:
  if (v89 == 2)
  {
    sub_250ED9D64(0x646E756F42776F6CLL, 0xE800000000000000, (uint64_t)v91);
    sub_250EDD8D4((uint64_t)v91);
    sub_250ED9D64(0x6E756F4268676968, 0xE900000000000064, (uint64_t)v91);
    sub_250EDD8D4((uint64_t)v91);
    sub_250ED9D64(5394761, 0xE300000000000000, (uint64_t)v91);
    sub_250EDD8D4((uint64_t)v91);
    return v100;
  }
  else
  {
    uint64_t v45 = MEMORY[0x263F8D538];
    uint64_t v46 = MEMORY[0x263F8D568];
    uint64_t v94 = MEMORY[0x263F8D538];
    uint64_t v95 = MEMORY[0x263F8D568];
    *(void *)&long long v93 = *((void *)&v89 + 1);
    sub_250E9FB90(&v93, (uint64_t)v91);
    uint64_t v47 = v100;
    char v48 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v47;
    uint64_t v49 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
    MEMORY[0x270FA5388](v49);
    char v51 = (char *)&v66 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v52 + 16))(v51);
    sub_250EDB364((uint64_t)v51, 0x646E756F42776F6CLL, 0xE800000000000000, v48, &v90, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    uint64_t v100 = v90;
    swift_bridgeObjectRelease();
    uint64_t v94 = v45;
    uint64_t v95 = v46;
    *(void *)&long long v93 = v88;
    sub_250E9FB90(&v93, (uint64_t)v91);
    uint64_t v53 = v100;
    char v54 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v53;
    uint64_t v55 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
    MEMORY[0x270FA5388](v55);
    uint64_t v57 = (char *)&v66 - ((v56 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v58 + 16))(v57);
    sub_250EDB364((uint64_t)v57, 0x6E756F4268676968, 0xE900000000000064, v54, &v90, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    uint64_t v100 = v90;
    swift_bridgeObjectRelease();
    uint64_t v94 = v45;
    uint64_t v95 = v46;
    *(void *)&long long v93 = *((void *)&v88 + 1);
    sub_250E9FB90(&v93, (uint64_t)v91);
    uint64_t v59 = v100;
    char v60 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v90 = v59;
    uint64_t v61 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v91, v92);
    MEMORY[0x270FA5388](v61);
    unint64_t v63 = (char *)&v66 - ((v62 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v64 + 16))(v63);
    sub_250EDB364((uint64_t)v63, 5394761, 0xE300000000000000, v60, &v90, v45, v46);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v91);
    uint64_t v44 = v90;
    swift_bridgeObjectRelease();
  }
  return v44;
}

void sub_250EDD868()
{
  if (!qword_26B20EF88)
  {
    unint64_t v0 = sub_250F0D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20EF88);
    }
  }
}

uint64_t sub_250EDD8D4(uint64_t a1)
{
  sub_250EDD930();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_250EDD930()
{
  if (!qword_26B20F4C0)
  {
    sub_250E9FB38();
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F4C0);
    }
  }
}

void sub_250EDD988()
{
  if (!qword_26B20F4F0)
  {
    sub_250E9FB38();
    unint64_t v0 = sub_250F0D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F4F0);
    }
  }
}

uint64_t sub_250EDD9F0(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_250E9FE60(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250EDDA5C()
{
  if (!qword_26B20E448)
  {
    sub_250EDDAD8();
    sub_250F0BF30();
    sub_250EB64A8();
    unint64_t v0 = sub_250F0D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E448);
    }
  }
}

unint64_t sub_250EDDAD8()
{
  unint64_t result = qword_26B20E378;
  if (!qword_26B20E378)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20E378);
  }
  return result;
}

id sub_250EDDB18(void *a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  swift_unknownObjectWeakInit();
  swift_unknownObjectWeakAssign();
  *(void *)&v5[OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_eventSubmissionManager] = a2;
  long long v11 = (uint64_t *)&v5[OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_unitTest_didObserveAnalyticsSubmissionCoordinator];
  *long long v11 = a3;
  v11[1] = a4;
  id v12 = a2;
  sub_250EAB9EC(a3);
  v18.receiver = v5;
  v18.super_class = ObjectType;
  id v13 = objc_msgSendSuper2(&v18, sel_init);
  id v14 = objc_msgSend(a1, sel_daemon);
  if (v14)
  {
    uint64_t v15 = v14;
    id v16 = v13;
    objc_msgSend(v15, sel_registerDaemonReadyObserver_queue_, v16, 0);
    sub_250EAB9CC(a3);
  }
  else
  {
    sub_250EAB9CC(a3);
  }

  return v13;
}

void sub_250EDDDB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3) {
    uint64_t v7 = sub_250F0BF90();
  }
  else {
    uint64_t v7 = 0;
  }
  id v8 = (id)v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(a4 + 16))(a4, a1, a2);
}

uint64_t type metadata accessor for AnalyticsDailyMultiEventManager()
{
  return self;
}

uint64_t sub_250EDDEE4()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_250EDDF1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_250EDDDB0(a1, a2, a3, *(void *)(v3 + 16));
}

void sub_250EDDF24(void (*a1)(void, uint64_t, void *), uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v168 = a1;
  v183[55] = *MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v5 = sub_250F0C3D0();
  uint64_t v172 = *(void *)(v5 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v5);
  id v8 = (char *)v142 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v167 = (char *)v142 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v177 = (char *)v142 - v11;
  uint64_t v12 = sub_250F0CCB0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  id v16 = (char *)v142 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v14);
  uint64_t v19 = (char *)v142 - v18;
  uint64_t v20 = MEMORY[0x270FA5388](v17);
  unint64_t v171 = (unint64_t)v142 - v21;
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v149 = (char *)v142 - v23;
  uint64_t v24 = MEMORY[0x270FA5388](v22);
  uint64_t v176 = (char *)v142 - v25;
  MEMORY[0x270FA5388](v24);
  uint64_t v27 = (char *)v142 - v26;
  uint64_t v175 = v3;
  uint64_t v28 = MEMORY[0x25338ECE0](v3 + OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_profile);
  if (!v28)
  {
    sub_250F0CC90();
    uint64_t v38 = sub_250F0CCA0();
    os_log_type_t v39 = sub_250F0D1B0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v170 = v12;
      uint64_t v162 = a2;
      uint64_t v40 = v13;
      uint64_t v41 = (uint8_t *)swift_slowAlloc();
      uint64_t v42 = swift_slowAlloc();
      v183[0] = v42;
      *(_DWORD *)uint64_t v41 = 136446210;
      uint64_t v43 = sub_250F0D7B0();
      v182[0] = sub_250E8BE44(v43, v44, v183);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v38, v39, "[%{public}s] Profile not available, completing without submission", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v42, -1, -1);
      MEMORY[0x25338EC30](v41, -1, -1);

      (*(void (**)(char *, uint64_t))(v40 + 8))(v19, v170);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v13 + 8))(v19, v12);
    }
    v168(0, 2, 0);
    return;
  }
  uint64_t v29 = (void *)v28;
  uint64_t v160 = v8;
  uint64_t v178 = v5;
  sub_250F0CC90();
  uint64_t v30 = sub_250F0CCA0();
  os_log_type_t v31 = sub_250F0D1D0();
  BOOL v32 = os_log_type_enabled(v30, v31);
  uint64_t v161 = v13;
  uint64_t v162 = a2;
  uint64_t v155 = v16;
  if (v32)
  {
    uint64_t v33 = (uint8_t *)swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    v183[0] = v34;
    *(_DWORD *)uint64_t v33 = 136446210;
    uint64_t v173 = (void (*)(char *, uint64_t))(v33 + 4);
    uint64_t v35 = sub_250F0D7B0();
    v182[0] = sub_250E8BE44(v35, v36, v183);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v30, v31, "[%{public}s] Submitting HealthBalanceDailyAnalyticsEvent", v33, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v34, -1, -1);
    MEMORY[0x25338EC30](v33, -1, -1);

    uint64_t v37 = *(void (**)(char *, uint64_t))(v161 + 8);
  }
  else
  {

    uint64_t v37 = *(void (**)(char *, uint64_t))(v13 + 8);
  }
  uint64_t v173 = v37;
  v37(v27, v12);
  sub_250F0CF80();
  id v45 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  id v163 = v29;
  uint64_t v46 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v47 = objc_msgSend(v45, sel_initWithSuiteName_, v46);

  if (!v47)
  {
    __break(1u);
    goto LABEL_38;
  }
  sub_250F0CF80();
  id v48 = objc_allocWithZone(MEMORY[0x263EFFA40]);
  uint64_t v49 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v50 = objc_msgSend(v48, sel_initWithSuiteName_, v49);

  if (!v50)
  {
LABEL_38:
    __break(1u);
    return;
  }
  sub_250F0CBD0();
  uint64_t v51 = sub_250F0CBC0();
  id v52 = objc_allocWithZone(MEMORY[0x263F75EA8]);
  uint64_t v53 = (void *)sub_250F0CF50();
  id v54 = objc_msgSend(v52, sel_initWithIdentifier_healthStore_options_, v53, 0, 2);

  type metadata accessor for HealthBalanceDailyAnalyticsEvent();
  uint64_t v55 = swift_allocObject();
  *(_OWORD *)(v55 + 64) = 0u;
  *(_OWORD *)(v55 + 80) = 0u;
  *(_OWORD *)(v55 + 96) = 0u;
  *(_OWORD *)(v55 + 112) = 0u;
  *(_OWORD *)(v55 + 121) = 0u;
  sub_250EDF0C4((uint64_t)v183);
  sub_250EDF110((uint64_t)v183, v55 + 144);
  id v56 = v163;
  *(void *)(v55 + 16) = v163;
  *(void *)(v55 + 24) = objc_msgSend(v56, sel_notificationManager);
  *(void *)(v55 + 32) = v47;
  *(void *)(v55 + 40) = v50;
  *(void *)(v55 + 48) = v51;
  *(void *)(v55 + 56) = v54;
  uint64_t v57 = *(void **)(v175 + OBJC_IVAR____TtC19HealthBalanceDaemon31AnalyticsDailyMultiEventManager_eventSubmissionManager);
  v182[0] = 0;
  id v159 = v57;
  unsigned int v58 = objc_msgSend(v57, sel_submitEvent_error_, v55, v182);
  uint64_t v59 = (void *)v182[0];
  if (!v58)
  {
    id v76 = (id)v182[0];
    long long v77 = (void *)sub_250F0BFA0();

    swift_willThrow();
    swift_release();
    int v78 = v168;
LABEL_16:
    uint64_t v79 = v155;
    sub_250F0CC90();
    id v80 = v77;
    id v81 = v77;
    long long v82 = sub_250F0CCA0();
    os_log_type_t v83 = sub_250F0D1B0();
    if (os_log_type_enabled(v82, v83))
    {
      uint64_t v84 = swift_slowAlloc();
      uint64_t v85 = (void *)swift_slowAlloc();
      uint64_t v178 = swift_slowAlloc();
      v182[0] = v178;
      *(_DWORD *)uint64_t v84 = 136446466;
      uint64_t v86 = sub_250F0D7B0();
      v181[0] = sub_250E8BE44(v86, v87, v182);
      uint64_t v170 = v12;
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v84 + 12) = 2114;
      id v88 = v77;
      uint64_t v89 = _swift_stdlib_bridgeErrorToNSError();
      v181[0] = v89;
      sub_250F0D300();
      *uint64_t v85 = v89;

      _os_log_impl(&dword_250E86000, v82, v83, "[%{public}s] Error submitting event: %{public}@", (uint8_t *)v84, 0x16u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v85, -1, -1);
      uint64_t v90 = v178;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v90, -1, -1);
      MEMORY[0x25338EC30](v84, -1, -1);

      uint64_t v91 = v155;
      uint64_t v92 = v170;
    }
    else
    {

      uint64_t v91 = v79;
      uint64_t v92 = v12;
    }
    v173(v91, v92);
    id v93 = v77;
    v78(0, 1, v77);

    return;
  }
  uint64_t v158 = *(void *)(v55 + 104);
  if (!v158)
  {
LABEL_13:
    id v67 = v59;
    unint64_t v68 = v171;
    sub_250F0CC90();
    long long v69 = sub_250F0CCA0();
    os_log_type_t v70 = sub_250F0D1B0();
    if (os_log_type_enabled(v69, v70))
    {
      int v71 = (uint8_t *)swift_slowAlloc();
      uint64_t v72 = swift_slowAlloc();
      v182[0] = v72;
      *(_DWORD *)int v71 = 136446210;
      uint64_t v73 = sub_250F0D7B0();
      v181[0] = sub_250E8BE44(v73, v74, v182);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v69, v70, "[%{public}s] Daily event failed to populate, cannot continue", v71, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v72, -1, -1);
      MEMORY[0x25338EC30](v71, -1, -1);

      unint64_t v75 = v171;
    }
    else
    {

      unint64_t v75 = v68;
    }
    v173((char *)v75, v12);
    v168(0, 1, 0);

    swift_release();
    return;
  }
  uint64_t v170 = v12;
  uint64_t v60 = *(void *)(v55 + 64);
  uint64_t v61 = *(void *)(v55 + 72);
  uint64_t v175 = *(void *)(v55 + 80);
  uint64_t v62 = *(void *)(v55 + 96);
  uint64_t v156 = *(void *)(v55 + 88);
  uint64_t v157 = v62;
  uint64_t v64 = *(char **)(v55 + 112);
  uint64_t v63 = *(void *)(v55 + 120);
  uint64_t v65 = *(void *)(v55 + 128);
  int v66 = *(unsigned __int8 *)(v55 + 136);
  sub_250EDF110(v55 + 144, (uint64_t)v181);
  sub_250EDF110((uint64_t)v181, (uint64_t)v182);
  if (sub_250E9FC28((uint64_t)v182) == 1)
  {
    uint64_t v12 = v170;
    goto LABEL_13;
  }
  v142[2] = v55;
  id v94 = v59;
  uint64_t v95 = v156;
  uint64_t v96 = v157;
  sub_250EDF1CC(v60, v61, v175, v156, v157, v158);
  uint64_t v97 = sub_250F0C3C0();
  uint64_t v99 = *(void *)(v97 + 16);
  if (v99)
  {
    int v150 = v66;
    uint64_t v151 = v65;
    uint64_t v152 = v60;
    uint64_t v153 = v61;
    uint64_t v154 = v63;
    uint64_t v100 = *(void (**)(char *, char *, uint64_t))(v172 + 16);
    unint64_t v101 = (*(unsigned __int8 *)(v172 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v172 + 80);
    v142[1] = v97;
    unint64_t v102 = v97 + v101;
    char v103 = (void (**)(char *, uint64_t))(v172 + 8);
    uint64_t v147 = (void (**)(uint64_t, char *, uint64_t))(v172 + 32);
    uint64_t v148 = v161 + 8;
    unint64_t v171 = (unint64_t)v64;
    int v146 = v64 & 1;
    uint64_t v144 = *(void *)(v172 + 72);
    *(void *)&long long v98 = 136446466;
    long long v143 = v98;
    v142[3] = MEMORY[0x263F8EE58] + 8;
    uint64_t v104 = v177;
    uint64_t v105 = v178;
    uint64_t v106 = v176;
    unsigned int v145 = (void (**)(char *, uint64_t))(v172 + 8);
    uint64_t v169 = v100;
    v172 += 16;
    while (1)
    {
      unint64_t v164 = v102;
      uint64_t v165 = v99;
      ((void (*)(char *))v100)(v104);
      sub_250F0CC90();
      uint64_t v107 = v167;
      v100(v167, v104, v105);
      unint64_t v108 = sub_250F0CCA0();
      os_log_type_t v109 = sub_250F0D1D0();
      if (os_log_type_enabled(v108, v109))
      {
        uint64_t v110 = swift_slowAlloc();
        char v111 = (void *)swift_slowAlloc();
        id v180 = v111;
        *(_DWORD *)uint64_t v110 = v143;
        uint64_t v112 = sub_250F0D7B0();
        *(void *)(v110 + 4) = sub_250E8BE44(v112, v113, (uint64_t *)&v180);
        swift_bridgeObjectRelease();
        *(_WORD *)(v110 + 12) = 2080;
        uint64_t v114 = v107;
        uint64_t v115 = v160;
        v169(v160, v114, v178);
        uint64_t v116 = sub_250F0CF90();
        *(void *)(v110 + 14) = sub_250E8BE44(v116, v117, (uint64_t *)&v180);
        swift_bridgeObjectRelease();
        char v166 = *v103;
        v166(v114, v178);
        _os_log_impl(&dword_250E86000, v108, v109, "[%{public}s] Submitting HealthBalanceAnalysisAnalyticsEvent(%s)", (uint8_t *)v110, 0x16u);
        swift_arrayDestroy();
        unint64_t v118 = v111;
        uint64_t v100 = v169;
        uint64_t v104 = v177;
        MEMORY[0x25338EC30](v118, -1, -1);
        uint64_t v119 = v110;
        uint64_t v105 = v178;
        MEMORY[0x25338EC30](v119, -1, -1);

        v173(v176, v170);
      }
      else
      {
        char v166 = *v103;
        v166(v107, v105);

        v173(v106, v170);
        uint64_t v115 = v160;
      }
      unint64_t v120 = v171 >> 8;
      v100(v115, v104, v105);
      type metadata accessor for HealthBalanceAnalysisAnalyticsEvent();
      uint64_t v121 = swift_allocObject();
      (*v147)(v121 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_dataType, v115, v105);
      uint64_t v122 = v121 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_analyticsEnvironment;
      uint64_t v123 = v152;
      uint64_t v124 = v153;
      *(void *)uint64_t v122 = v152;
      *(void *)(v122 + 8) = v124;
      *(void *)(v122 + 16) = v175;
      uint64_t v125 = v156;
      uint64_t v126 = v157;
      *(unsigned char *)(v122 + 24) = v156 & 1;
      uint64_t v127 = v158;
      *(void *)(v122 + 32) = v126;
      *(void *)(v122 + 40) = v127;
      *(unsigned char *)(v122 + 48) = v146;
      *(unsigned char *)(v122 + 49) = v120;
      uint64_t v128 = v151;
      *(void *)(v122 + 56) = v154;
      *(void *)(v122 + 64) = v128;
      uint64_t v129 = (void *)(v121 + OBJC_IVAR____TtC19HealthBalanceDaemon35HealthBalanceAnalysisAnalyticsEvent_summaryAnalytics);
      *(unsigned char *)(v122 + 72) = v150 & 1;
      memcpy(v129, v182, 0x1B8uLL);
      id v180 = 0;
      sub_250EDF1CC(v123, v124, v175, v125, v126, v127);
      LODWORD(v120) = objc_msgSend(v159, sel_submitEvent_error_, v121, &v180);
      swift_release();
      id v130 = v180;
      if (!v120) {
        break;
      }
      uint64_t v104 = v177;
      uint64_t v105 = v178;
      char v103 = v145;
      v166(v177, v178);
      unint64_t v102 = v164 + v144;
      uint64_t v99 = v165 - 1;
      uint64_t v100 = v169;
      uint64_t v106 = v176;
      if (v165 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v131 = v170;
        uint64_t v61 = v153;
        uint64_t v132 = v156;
        uint64_t v96 = v157;
        uint64_t v133 = v175;
        uint64_t v60 = v152;
        goto LABEL_33;
      }
    }
    uint64_t v141 = v130;
    swift_bridgeObjectRelease();
    sub_250E9D09C(v152, v153, v175, v156, v157, v158);
    long long v77 = (void *)sub_250F0BFA0();

    swift_willThrow();
    swift_release();
    v166(v177, v178);
    int v78 = v168;
    uint64_t v12 = v170;
    goto LABEL_16;
  }
  swift_bridgeObjectRelease();
  uint64_t v132 = v95;
  uint64_t v131 = v170;
  uint64_t v133 = v175;
LABEL_33:
  sub_250E9D09C(v60, v61, v133, v132, v96, v158);
  uint64_t v134 = v149;
  sub_250F0CC90();
  uint64_t v135 = sub_250F0CCA0();
  os_log_type_t v136 = sub_250F0D1D0();
  if (os_log_type_enabled(v135, v136))
  {
    uint64_t v137 = (uint8_t *)swift_slowAlloc();
    uint64_t v138 = (void *)swift_slowAlloc();
    id v180 = v138;
    *(_DWORD *)uint64_t v137 = 136446210;
    uint64_t v139 = sub_250F0D7B0();
    uint64_t v179 = sub_250E8BE44(v139, v140, (uint64_t *)&v180);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v135, v136, "[%{public}s] All events submitted successfully", v137, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v138, -1, -1);
    MEMORY[0x25338EC30](v137, -1, -1);
  }

  v173(v134, v131);
  v168(0, 0, 0);
  swift_release();
}

double sub_250EDF0C4(uint64_t a1)
{
  double result = 0.0;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 48) = 0;
  *(void *)(a1 + 56) = 3;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 176) = 0u;
  *(_OWORD *)(a1 + 192) = 0u;
  *(_OWORD *)(a1 + 208) = 0u;
  *(_OWORD *)(a1 + 224) = 0u;
  *(_OWORD *)(a1 + 240) = 0u;
  *(_OWORD *)(a1 + 256) = 0u;
  *(_OWORD *)(a1 + 272) = 0u;
  *(_OWORD *)(a1 + 288) = 0u;
  *(_OWORD *)(a1 + 304) = 0u;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  *(_OWORD *)(a1 + 384) = 0u;
  *(_OWORD *)(a1 + 400) = 0u;
  *(_OWORD *)(a1 + 416) = 0u;
  *(void *)(a1 + 432) = 0;
  return result;
}

uint64_t sub_250EDF110(uint64_t a1, uint64_t a2)
{
  sub_250EDF174();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_250EDF174()
{
  if (!qword_26B20F390)
  {
    unint64_t v0 = sub_250F0D2D0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20F390);
    }
  }
}

uint64_t sub_250EDF1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a6)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_250EDF210(uint64_t a1)
{
  uint64_t v3 = sub_250F0C3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void (**)(char *, void, uint64_t))(v4 + 104);
  v7(v6, *MEMORY[0x263F42CA8], v3);
  sub_250EE0C9C(a1, (uint64_t)v6);
  id v8 = *(void (**)(char *, uint64_t))(v4 + 8);
  v8(v6, v3);
  v7(v6, *MEMORY[0x263F42CC0], v3);
  sub_250EE0C9C(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x263F42CB0], v3);
  sub_250EE0C9C(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x263F42CB8], v3);
  sub_250EE0C9C(a1, (uint64_t)v6);
  v8(v6, v3);
  v7(v6, *MEMORY[0x263F42CC8], v3);
  sub_250EE0C9C(a1, (uint64_t)v6);
  v8(v6, v3);
  uint64_t result = sub_250F0C580();
  if (result)
  {
    uint64_t v10 = *(void *)(v1 + 408);
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11)
    {
LABEL_21:
      __break(1u);
      goto LABEL_22;
    }
    *(void *)(v1 + 408) = v12;
  }
  if (sub_250F0C580())
  {
    char v13 = 3;
  }
  else
  {
    sub_250F0C5A0();
    if (sub_250F0CB00())
    {
      char v13 = 2;
    }
    else if (sub_250F0C560())
    {
      char v13 = 4;
    }
    else
    {
      char v13 = 1;
    }
  }
  *(unsigned char *)(v1 + 416) = v13;
  uint64_t result = MEMORY[0x25338D150]();
  if (result >= 1)
  {
    uint64_t v14 = *(void *)(v1 + 424);
    BOOL v11 = __OFADD__(v14, 1);
    uint64_t v15 = v14 + 1;
    if (v11)
    {
LABEL_20:
      __break(1u);
      goto LABEL_21;
    }
    *(void *)(v1 + 424) = v15;
    *(unsigned char *)(v1 + 416) = 5;
  }
  uint64_t v16 = MEMORY[0x25338D170]();
  uint64_t result = sub_250F0CBB0();
  if (v16 < result)
  {
LABEL_17:
    if (!__OFADD__(*(void *)v1, 1))
    {
      ++*(void *)v1;
      return result;
    }
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v17 = *(void *)(v1 + 432);
  BOOL v11 = __OFADD__(v17, 1);
  uint64_t v18 = v17 + 1;
  if (!v11)
  {
    *(void *)(v1 + 432) = v18;
    goto LABEL_17;
  }
LABEL_22:
  __break(1u);
  return result;
}

unint64_t sub_250EDF514()
{
  uint64_t v1 = v0[1];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[31];
  uint64_t v5 = v0[41];
  uint64_t v6 = v0[51];
  sub_250EE2860(0, &qword_26B20F4F8, (uint64_t (*)(uint64_t))sub_250EE27F8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0FD10;
  *(void *)(inited + 32) = 0xD00000000000001BLL;
  *(void *)(inited + 40) = 0x8000000250F12310;
  uint64_t v8 = MEMORY[0x263F8D6C8];
  uint64_t v9 = MEMORY[0x263F8D6E8];
  *(void *)(inited + 72) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 80) = v9;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 88) = 0xD00000000000001ALL;
  *(void *)(inited + 96) = 0x8000000250F12660;
  *(void *)(inited + 128) = v8;
  *(void *)(inited + 136) = v9;
  *(void *)(inited + 104) = v2;
  *(void *)(inited + 144) = 0xD000000000000015;
  *(void *)(inited + 152) = 0x8000000250F12680;
  *(void *)(inited + 184) = v8;
  *(void *)(inited + 192) = v9;
  *(void *)(inited + 160) = v3;
  *(void *)(inited + 200) = 0xD000000000000020;
  *(void *)(inited + 208) = 0x8000000250F126A0;
  *(void *)(inited + 240) = v8;
  *(void *)(inited + 248) = v9;
  *(void *)(inited + 216) = v4;
  *(void *)(inited + 256) = 0xD00000000000001CLL;
  *(void *)(inited + 264) = 0x8000000250F126D0;
  *(void *)(inited + 296) = v8;
  *(void *)(inited + 304) = v9;
  *(void *)(inited + 272) = v5;
  *(void *)(inited + 312) = 0xD000000000000017;
  *(void *)(inited + 320) = 0x8000000250F126F0;
  *(void *)(inited + 352) = v8;
  *(void *)(inited + 360) = v9;
  *(void *)(inited + 328) = v6;
  return sub_250EFB8EC(inited);
}

unint64_t sub_250EDF68C()
{
  unint64_t v1 = 0xD000000000000014;
  uint64_t v15 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 192);
  uint64_t v4 = *(void *)(v0 + 272);
  uint64_t v5 = *(void *)(v0 + 352);
  uint64_t v6 = *(unsigned __int8 *)(v0 + 416);
  uint64_t v8 = *(void *)(v0 + 424);
  uint64_t v7 = *(void *)(v0 + 432);
  sub_250EE2860(0, &qword_26B20F4F8, (uint64_t (*)(uint64_t))sub_250EE27F8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0FD20;
  *(void *)(inited + 32) = 0x746174537473616CLL;
  *(void *)(inited + 40) = 0xEA00000000007375;
  unint64_t v10 = 0x8000000250F10570;
  switch(v6)
  {
    case 1:
      unint64_t v10 = 0xE600000000000000;
      unint64_t v1 = 0x617461446F6ELL;
      break;
    case 2:
      break;
    case 3:
      unint64_t v10 = 0xEA0000000000746ELL;
      unint64_t v1 = 0x656D656E69666572;
      break;
    case 4:
      unint64_t v10 = 0xE700000000000000;
      unint64_t v1 = 0x6C616369707974;
      break;
    case 5:
      unint64_t v10 = 0xE800000000000000;
      unint64_t v1 = 0x737265696C74756FLL;
      break;
    default:
      unint64_t v10 = 0xE700000000000000;
      unint64_t v1 = 0x6E776F6E6B6E75;
      break;
  }
  uint64_t v11 = MEMORY[0x263F8D338];
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 80) = v11;
  *(void *)(inited + 48) = v1;
  *(void *)(inited + 56) = v10;
  uint64_t v12 = MEMORY[0x263F8D6C8];
  *(void *)(inited + 88) = 0xD00000000000001CLL;
  *(void *)(inited + 96) = 0x8000000250F12540;
  uint64_t v13 = MEMORY[0x263F8D6E8];
  *(void *)(inited + 128) = v12;
  *(void *)(inited + 136) = v13;
  *(void *)(inited + 104) = v8;
  *(void *)(inited + 144) = 0xD00000000000001BLL;
  *(void *)(inited + 152) = 0x8000000250F12560;
  *(void *)(inited + 184) = v12;
  *(void *)(inited + 192) = v13;
  *(void *)(inited + 160) = v3;
  *(void *)(inited + 200) = 0xD000000000000026;
  *(void *)(inited + 208) = 0x8000000250F12580;
  *(void *)(inited + 240) = v12;
  *(void *)(inited + 248) = v13;
  *(void *)(inited + 216) = v4;
  *(void *)(inited + 256) = 0xD000000000000022;
  *(void *)(inited + 264) = 0x8000000250F125B0;
  *(void *)(inited + 296) = v12;
  *(void *)(inited + 304) = v13;
  *(void *)(inited + 272) = v5;
  *(void *)(inited + 312) = 0xD000000000000020;
  *(void *)(inited + 320) = 0x8000000250F125E0;
  *(void *)(inited + 352) = v12;
  *(void *)(inited + 360) = v13;
  *(void *)(inited + 328) = v2;
  *(void *)(inited + 368) = 0xD000000000000024;
  *(void *)(inited + 376) = 0x8000000250F12610;
  *(void *)(inited + 408) = v12;
  *(void *)(inited + 416) = v13;
  *(void *)(inited + 384) = v15;
  *(void *)(inited + 424) = 0xD00000000000001ALL;
  *(void *)(inited + 432) = 0x8000000250F12640;
  *(void *)(inited + 464) = v12;
  *(void *)(inited + 472) = v13;
  *(void *)(inited + 440) = v7;
  return sub_250EFB8EC(inited);
}

uint64_t sub_250EDF934(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000014;
  unint64_t v3 = 0x8000000250F10570;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000014;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x617461446F6ELL;
      break;
    case 2:
      break;
    case 3:
      unint64_t v3 = 0xEA0000000000746ELL;
      unint64_t v5 = 0x656D656E69666572;
      break;
    case 4:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6C616369707974;
      break;
    case 5:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x737265696C74756FLL;
      break;
    default:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x6E776F6E6B6E75;
      break;
  }
  unint64_t v6 = 0x8000000250F10570;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE600000000000000;
      if (v5 == 0x617461446F6ELL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      goto LABEL_15;
    case 3:
      unint64_t v6 = 0xEA0000000000746ELL;
      if (v5 != 0x656D656E69666572) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v6 = 0xE700000000000000;
      unint64_t v2 = 0x6C616369707974;
LABEL_15:
      if (v5 == v2) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 5:
      unint64_t v6 = 0xE800000000000000;
      if (v5 != 0x737265696C74756FLL) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
      unint64_t v6 = 0xE700000000000000;
      if (v5 != 0x6E776F6E6B6E75) {
        goto LABEL_19;
      }
LABEL_16:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_250F0D680();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_250EDFB38(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E696772616DLL;
  }
  else {
    uint64_t v3 = 7500137;
  }
  if (v2) {
    unint64_t v4 = 0xE300000000000000;
  }
  else {
    unint64_t v4 = 0xE600000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x6E696772616DLL;
  }
  else {
    uint64_t v5 = 7500137;
  }
  if (a2) {
    unint64_t v6 = 0xE600000000000000;
  }
  else {
    unint64_t v6 = 0xE300000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_250F0D680();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_250EDFBD0()
{
  return sub_250F0D730();
}

uint64_t sub_250EDFC48()
{
  return sub_250F0D730();
}

uint64_t sub_250EDFD60()
{
  sub_250F0CFA0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_250EDFE64()
{
  sub_250F0CFA0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_250EDFEC4()
{
  return sub_250F0D730();
}

uint64_t sub_250EDFF38()
{
  return sub_250F0D730();
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.rawValue.getter()
{
  if (*v0) {
    return 0x6E696772616DLL;
  }
  else {
    return 7500137;
  }
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.summaryCount.getter()
{
  return *(void *)v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.summaryCount.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.summaryCount.modify())()
{
  return nullsub_1;
}

HealthBalanceDaemon::SleepingSampleDaySummaryCollectionAnalytics::MetricSummary::BoundMethod_optional __swiftcall SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.init(rawValue:)(Swift::String rawValue)
{
  BOOL v2 = v1;
  uint64_t v3 = sub_250F0D630();
  result.value = swift_bridgeObjectRelease();
  if (v3 == 1) {
    char v5 = 1;
  }
  else {
    char v5 = 2;
  }
  if (!v3) {
    char v5 = 0;
  }
  *BOOL v2 = v5;
  return result;
}

uint64_t sub_250EE0110(char *a1, char *a2)
{
  return sub_250EDFB38(*a1, *a2);
}

uint64_t sub_250EE011C()
{
  return sub_250EDFBD0();
}

uint64_t sub_250EE0124()
{
  return sub_250EDFE64();
}

uint64_t sub_250EE012C()
{
  return sub_250EDFEC4();
}

HealthBalanceDaemon::SleepingSampleDaySummaryCollectionAnalytics::MetricSummary::BoundMethod_optional sub_250EE0134(Swift::String *a1)
{
  return SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.init(rawValue:)(*a1);
}

uint64_t sub_250EE0140@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.getter()
{
  return *v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.setter(uint64_t result)
{
  *unint64_t v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isOutOfRange.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.getter()
{
  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 1) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.isSilencedDeviation.modify())()
{
  return nullsub_1;
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

unsigned char *SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.setter(unsigned char *result)
{
  *(unsigned char *)(v1 + 2) = *result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.boundMethod.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.getter()
{
  return *(double *)(v0 + 8);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.setter(double a1)
{
  *(double *)(v1 + 8) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedLowBound.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.getter()
{
  return *(double *)(v0 + 16);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.setter(double a1)
{
  *(double *)(v1 + 16) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedHighBound.modify())()
{
  return nullsub_1;
}

double SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.getter()
{
  return *(double *)(v0 + 24);
}

void SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.setter(double a1)
{
  *(double *)(v1 + 24) = a1;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.bucketedIQR.modify())()
{
  return nullsub_1;
}

void sub_250EE0290(uint64_t a1@<X0>, uint64_t a2@<X1>, double *a3@<X8>)
{
  uint64_t v6 = sub_250F0C470();
  uint64_t v7 = *(void *)(v6 - 8);
  MEMORY[0x270FA5388](v6);
  uint64_t v9 = (char *)&v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EE2860(0, &qword_26B20E500, MEMORY[0x263F42CA0], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v52 - v11;
  uint64_t v13 = sub_250F0C3A0();
  uint64_t v14 = *(void *)(v13 - 8);
  MEMORY[0x270FA5388](v13);
  uint64_t v16 = (char *)&v52 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C7D0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    uint64_t v17 = sub_250F0C3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v17 - 8) + 8))(a2, v17);
    uint64_t v18 = sub_250F0C810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v18 - 8) + 8))(a1, v18);
    sub_250EE28C4((uint64_t)v12);
    *(void *)a3 = 2;
    a3[1] = 0.0;
    a3[2] = 0.0;
    a3[3] = 0.0;
    return;
  }
  uint64_t v52 = v7;
  uint64_t v53 = v6;
  (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v16, v12, v13);
  uint64_t v56 = a1;
  uint64_t v55 = sub_250F0C760();
  if (v55) {
    int v19 = 0;
  }
  else {
    int v19 = 2;
  }
  unsigned int v54 = v19;
  uint64_t v20 = (void *)sub_250F0C360();
  id v21 = sub_250EE1580();
  id v22 = objc_msgSend(v20, sel_minimum);
  objc_msgSend(v22, sel_doubleValueForUnit_, v21);
  double v24 = v23;

  id v25 = objc_msgSend(v20, sel_maximum);
  objc_msgSend(v25, sel_doubleValueForUnit_, v21);
  double v27 = v26;

  sub_250EE17F0(v24);
  double v29 = v28;
  sub_250EE17F0(v27);
  double v31 = v30;

  if (v29 > v31)
  {
    __break(1u);
    return;
  }
  BOOL v32 = (void *)sub_250F0C380();
  sub_250EE08C4(v32);
  uint64_t v34 = v33;

  sub_250E97918();
  uint64_t v35 = (void *)sub_250F0C360();
  unint64_t v36 = (void *)sub_250F0C370();
  char v37 = sub_250F0D2A0();

  if (v37)
  {
    uint64_t v38 = sub_250F0C3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v38 - 8) + 8))(a2, v38);
    uint64_t v39 = sub_250F0C810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v39 - 8) + 8))(v56, v39);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    char v57 = 0;
  }
  else
  {
    char v57 = 1;
    uint64_t v40 = v56;
    sub_250F0C800();
    uint64_t v41 = (void *)sub_250F0C460();
    (*(void (**)(char *, uint64_t))(v52 + 8))(v9, v53);
    if (v41)
    {
      uint64_t v42 = (void *)sub_250F0C370();
      unsigned __int8 v43 = objc_msgSend(v42, sel_containsQuantity_, v41);

      if ((v43 & 1) == 0)
      {
        id v48 = (void *)sub_250F0C360();
        unsigned int v49 = objc_msgSend(v48, sel_containsQuantity_, v41);

        uint64_t v50 = sub_250F0C3D0();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v50 - 8) + 8))(a2, v50);
        uint64_t v51 = sub_250F0C810();
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v40, v51);
        (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
        unsigned int v46 = v54;
        if (v49) {
          unsigned int v46 = 1;
        }
        goto LABEL_14;
      }
    }
    uint64_t v44 = sub_250F0C3D0();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v44 - 8) + 8))(a2, v44);
    uint64_t v45 = sub_250F0C810();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v45 - 8) + 8))(v40, v45);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  unsigned int v46 = v54;
LABEL_14:
  uint64_t v47 = 0x10000;
  if (!v57) {
    uint64_t v47 = 0;
  }
  *(void *)a3 = v55 & 1 | ((unint64_t)v46 << 8) | v47;
  a3[1] = v29;
  a3[2] = v31;
  *((void *)a3 + 3) = v34;
}

uint64_t sub_250EE08C4(void *a1)
{
  uint64_t v3 = sub_250F0C3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v18 - v8;
  id v10 = sub_250EE1580();
  objc_msgSend(a1, sel_doubleValueForUnit_, v10);
  uint64_t v12 = v11;

  uint64_t v13 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v13(v9, v1, v3);
  int v14 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v14 == *MEMORY[0x263F42CC8])
  {
    uint64_t v19 = v12;
    long long v20 = xmmword_250F0FD70;
    uint64_t v15 = 0x4000000000000000;
LABEL_10:
    uint64_t v18 = v15;
    sub_250EE2950();
    return sub_250F0CEB0();
  }
  if (v14 == *MEMORY[0x263F42CB8])
  {
    uint64_t v19 = v12;
    long long v16 = xmmword_250F0FD60;
LABEL_5:
    long long v20 = v16;
    uint64_t v15 = 0x3FE0000000000000;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x263F42CB0])
  {
    uint64_t v19 = v12;
    long long v20 = xmmword_250F0FD50;
    uint64_t v15 = 0x3F747AE147AE147BLL;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x263F42CC0])
  {
    uint64_t v19 = v12;
    long long v20 = xmmword_250F0FD40;
    uint64_t v15 = 0x3FD0000000000000;
    goto LABEL_10;
  }
  if (v14 == *MEMORY[0x263F42CA8])
  {
    uint64_t v19 = v12;
    long long v16 = xmmword_250F0FD30;
    goto LABEL_5;
  }
  v13(v7, v1, v3);
  *(void *)&long long v20 = 0;
  *((void *)&v20 + 1) = 0xE000000000000000;
  sub_250F0D480();
  sub_250F0CFB0();
  sub_250F0D560();
  uint64_t result = sub_250F0D590();
  __break(1u);
  return result;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.getter()
{
  return *(void *)v0;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.setter(uint64_t result)
{
  *uint64_t v1 = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.available.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.setter(uint64_t result)
{
  *(void *)(v1 + 8) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.unavailable.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.insufficient.modify())()
{
  return nullsub_1;
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.deviations.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.daysSinceLastDeviation.getter()
{
  return *(void *)(v0 + 32);
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.getter@<Q0>(uint64_t a1@<X8>)
{
  __n128 result = *(__n128 *)(v1 + 48);
  long long v3 = *(_OWORD *)(v1 + 64);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.setter(uint64_t a1)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 48) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 64) = v3;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.MetricCounts.lastSummary.modify())()
{
  return nullsub_1;
}

uint64_t sub_250EE0C9C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v32 = a1;
  uint64_t v5 = sub_250F0C3D0();
  uint64_t v35 = *(void *)(v5 - 8);
  uint64_t v36 = v5;
  MEMORY[0x270FA5388](v5);
  uint64_t v34 = (char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_250F0C400();
  uint64_t v31 = *(void *)(v33 - 8);
  MEMORY[0x270FA5388](v33);
  uint64_t v8 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0C470();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_250F0C810();
  uint64_t v13 = *(void *)(v30 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v30);
  long long v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v29 - v17;
  sub_250F0C540();
  sub_250F0C800();
  sub_250F0C410();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  sub_250EE1018((uint64_t)v8);
  (*(void (**)(char *, uint64_t))(v31 + 8))(v8, v33);
  uint64_t v19 = v30;
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v16, v18, v30);
  uint64_t v20 = (uint64_t)v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v35 + 16))(v34, a2, v36);
  sub_250EE0290((uint64_t)v16, v20, (double *)v37);
  long long v21 = v37[1];
  *(_OWORD *)(v3 + 48) = v37[0];
  *(_OWORD *)(v3 + 64) = v21;
  LOBYTE(v20) = sub_250F0C760();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v18, v19);
  if ((v20 & 1) == 0)
  {
    if (*(unsigned char *)(v3 + 40)) {
      return result;
    }
    uint64_t v27 = *(void *)(v3 + 32);
    uint64_t v28 = v27 + 1;
    if (!__OFADD__(v27, 1))
    {
      double v26 = (unsigned char *)(v3 + 40);
      *(void *)(v3 + 32) = v28;
      goto LABEL_7;
    }
LABEL_10:
    __break(1u);
    return result;
  }
  uint64_t v23 = *(void *)(v3 + 24);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24)
  {
    __break(1u);
    goto LABEL_10;
  }
  *(void *)(v3 + 24) = v25;
  *(void *)(v3 + 32) = 0;
  double v26 = (unsigned char *)(v3 + 40);
LABEL_7:
  unsigned char *v26 = 0;
  return result;
}

uint64_t sub_250EE1018(uint64_t a1)
{
  uint64_t v3 = sub_250F0C400();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a1, v3);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v6, v3);
  if (result == *MEMORY[0x263F42D18])
  {
    uint64_t v8 = v1[1];
    BOOL v9 = __OFADD__(v8, 1);
    uint64_t v10 = v8 + 1;
    if (!v9)
    {
      v1[1] = v10;
      return result;
    }
    __break(1u);
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  if (result == *MEMORY[0x263F42D00])
  {
    uint64_t v11 = v1[2];
    BOOL v9 = __OFADD__(v11, 1);
    uint64_t v12 = v11 + 1;
    if (!v9)
    {
      v1[2] = v12;
      return result;
    }
    goto LABEL_21;
  }
  if (result == *MEMORY[0x263F42D10]
    || result == *MEMORY[0x263F42D08]
    || result == *MEMORY[0x263F42D20])
  {
    if (!__OFADD__(*v1, 1))
    {
      ++*v1;
      return result;
    }
    goto LABEL_22;
  }
  uint64_t v15 = v1[1];
  BOOL v9 = __OFADD__(v15, 1);
  uint64_t v16 = v15 + 1;
  if (v9)
  {
LABEL_23:
    __break(1u);
    return result;
  }
  v1[1] = v16;
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 40);
  char v3 = *(unsigned char *)(v1 + 48);
  long long v4 = *(_OWORD *)(v1 + 24);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 8);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  __n128 result = *(__n128 *)(v1 + 56);
  long long v6 = *(_OWORD *)(v1 + 72);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 8) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 24) = v4;
  *(void *)(v1 + 40) = v2;
  *(unsigned char *)(v1 + 48) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 56) = result;
  *(_OWORD *)(v1 + 72) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.watchSleepCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 120);
  char v3 = *(unsigned char *)(v1 + 128);
  long long v4 = *(_OWORD *)(v1 + 104);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 88);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  __n128 result = *(__n128 *)(v1 + 136);
  long long v6 = *(_OWORD *)(v1 + 152);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 88) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 104) = v4;
  *(void *)(v1 + 120) = v2;
  *(unsigned char *)(v1 + 128) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 136) = result;
  *(_OWORD *)(v1 + 152) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.wristTempCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 200);
  char v3 = *(unsigned char *)(v1 + 208);
  long long v4 = *(_OWORD *)(v1 + 184);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 168);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  __n128 result = *(__n128 *)(v1 + 216);
  long long v6 = *(_OWORD *)(v1 + 232);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 168) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 184) = v4;
  *(void *)(v1 + 200) = v2;
  *(unsigned char *)(v1 + 208) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 216) = result;
  *(_OWORD *)(v1 + 232) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.spO2Counts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 280);
  char v3 = *(unsigned char *)(v1 + 288);
  long long v4 = *(_OWORD *)(v1 + 264);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 248);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  __n128 result = *(__n128 *)(v1 + 296);
  long long v6 = *(_OWORD *)(v1 + 312);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 248) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 264) = v4;
  *(void *)(v1 + 280) = v2;
  *(unsigned char *)(v1 + 288) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 296) = result;
  *(_OWORD *)(v1 + 312) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.respiratoryRateCounts.modify())()
{
  return nullsub_1;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 360);
  char v3 = *(unsigned char *)(v1 + 368);
  long long v4 = *(_OWORD *)(v1 + 344);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 328);
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  __n128 result = *(__n128 *)(v1 + 376);
  long long v6 = *(_OWORD *)(v1 + 392);
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v6;
  return result;
}

__n128 SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.setter(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  char v3 = *(unsigned char *)(a1 + 40);
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v1 + 328) = *(_OWORD *)a1;
  *(_OWORD *)(v1 + 344) = v4;
  *(void *)(v1 + 360) = v2;
  *(unsigned char *)(v1 + 368) = v3;
  __n128 result = *(__n128 *)(a1 + 48);
  long long v6 = *(_OWORD *)(a1 + 64);
  *(__n128 *)(v1 + 376) = result;
  *(_OWORD *)(v1 + 392) = v6;
  return result;
}

uint64_t (*SleepingSampleDaySummaryCollectionAnalytics.sleepingRHRCounts.modify())()
{
  return nullsub_1;
}

unint64_t sub_250EE1428(char a1)
{
  unint64_t result = 0xD000000000000014;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617461446F6ELL;
      break;
    case 2:
      return result;
    case 3:
      unint64_t result = 0x656D656E69666572;
      break;
    case 4:
      unint64_t result = 0x6C616369707974;
      break;
    case 5:
      unint64_t result = 0x737265696C74756FLL;
      break;
    default:
      unint64_t result = 0x6E776F6E6B6E75;
      break;
  }
  return result;
}

uint64_t sub_250EE14F8(unsigned __int8 *a1, char *a2)
{
  return sub_250EDF934(*a1, *a2);
}

uint64_t sub_250EE1504()
{
  return sub_250EDFC48();
}

uint64_t sub_250EE150C()
{
  return sub_250EDFD60();
}

uint64_t sub_250EE1514()
{
  return sub_250EDFF38();
}

uint64_t sub_250EE151C@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_250EE27AC();
  *a1 = result;
  return result;
}

unint64_t sub_250EE154C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_250EE1428(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

id sub_250EE1580()
{
  uint64_t v1 = sub_250F0C3D0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)v14 - v6;
  uint64_t v8 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 16);
  v8((char *)v14 - v6, v0, v1);
  int v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v7, v1);
  if (v9 == *MEMORY[0x263F42CC8] || v9 == *MEMORY[0x263F42CB8])
  {
    uint64_t v11 = &selRef__countPerMinuteUnit;
  }
  else if (v9 == *MEMORY[0x263F42CB0])
  {
    uint64_t v11 = &selRef_percentUnit;
  }
  else if (v9 == *MEMORY[0x263F42CC0])
  {
    uint64_t v11 = &selRef__changeInDegreeCelsiusUnit;
  }
  else
  {
    if (v9 != *MEMORY[0x263F42CA8])
    {
      v8(v5, v0, v1);
      v14[0] = 0;
      v14[1] = 0xE000000000000000;
      sub_250F0D480();
      sub_250F0CFB0();
      sub_250F0D560();
      id result = (id)sub_250F0D590();
      __break(1u);
      return result;
    }
    uint64_t v11 = &selRef_hourUnit;
  }
  id v12 = [self *v11];
  return v12;
}

uint64_t sub_250EE17F0(double a1)
{
  uint64_t v3 = sub_250F0C3D0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  int v9 = (char *)&v14 - v8;
  uint64_t v10 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v10((char *)&v14 - v8, v1, v3);
  int v11 = (*(uint64_t (**)(char *, uint64_t))(v4 + 88))(v9, v3);
  if (v11 == *MEMORY[0x263F42CC8])
  {
    double v15 = a1;
    long long v16 = xmmword_250F0FDC0;
    uint64_t v12 = 0x4014000000000000;
LABEL_11:
    uint64_t v14 = v12;
    sub_250EE2950();
    return sub_250F0CEB0();
  }
  if (v11 == *MEMORY[0x263F42CB8])
  {
    double v15 = a1;
    long long v16 = xmmword_250F0FDB0;
    uint64_t v12 = 0x4000000000000000;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F42CB0])
  {
    double v15 = a1;
    long long v16 = xmmword_250F0FDA0;
    uint64_t v12 = 0x3F947AE147AE147BLL;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F42CC0])
  {
    double v15 = a1;
    long long v16 = xmmword_250F0FD90;
    uint64_t v12 = 0x3FE0000000000000;
    goto LABEL_11;
  }
  if (v11 == *MEMORY[0x263F42CA8])
  {
    double v15 = a1;
    long long v16 = xmmword_250F0FD80;
    uint64_t v12 = 0x3FF0000000000000;
    goto LABEL_11;
  }
  v10(v7, v1, v3);
  *(void *)&long long v16 = 0;
  *((void *)&v16 + 1) = 0xE000000000000000;
  sub_250F0D480();
  sub_250F0CFB0();
  sub_250F0D560();
  uint64_t result = sub_250F0D590();
  __break(1u);
  return result;
}

BOOL _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV06MetricG0V2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2) {
    return 0;
  }
  int v2 = *((unsigned __int8 *)a1 + 1);
  int v3 = *((unsigned __int8 *)a1 + 2);
  double v5 = a1[1];
  double v4 = a1[2];
  double v6 = a1[3];
  int v7 = *((unsigned __int8 *)a2 + 1);
  double v9 = a2[1];
  double v8 = a2[2];
  double v10 = a2[3];
  if (v2 == 2)
  {
    if (v7 != 2) {
      return 0;
    }
    goto LABEL_7;
  }
  BOOL result = 0;
  BOOL v12 = (v2 & 1) == 0;
  if (v7 != 2 && ((v12 ^ v7) & 1) != 0)
  {
LABEL_7:
    if (v3) {
      uint64_t v13 = 0x6E696772616DLL;
    }
    else {
      uint64_t v13 = 7500137;
    }
    if (v3) {
      unint64_t v14 = 0xE600000000000000;
    }
    else {
      unint64_t v14 = 0xE300000000000000;
    }
    if (*((unsigned char *)a2 + 2)) {
      uint64_t v15 = 0x6E696772616DLL;
    }
    else {
      uint64_t v15 = 7500137;
    }
    if (*((unsigned char *)a2 + 2)) {
      unint64_t v16 = 0xE600000000000000;
    }
    else {
      unint64_t v16 = 0xE300000000000000;
    }
    if (v13 != v15 || v14 != v16)
    {
      char v18 = sub_250F0D680();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      BOOL result = 0;
      if ((v18 & 1) == 0 || v5 != v9 || v4 != v8) {
        return result;
      }
      return v6 == v10;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v5 == v9 && v4 == v8) {
      return v6 == v10;
    }
    return 0;
  }
  return result;
}

BOOL _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((vminv_u16((uint16x4_t)vcltz_s16(vshl_n_s16(vmovn_s32(vuzp1q_s32((int32x4_t)vceqq_s64(*(int64x2_t *)a1, *(int64x2_t *)a2), (int32x4_t)vceqq_s64(*(int64x2_t *)(a1 + 16), *(int64x2_t *)(a2 + 16)))), 0xFuLL))) & 1) == 0)return 0; {
  long long v3 = *(_OWORD *)(a1 + 64);
  }
  char v4 = *(unsigned char *)(a2 + 40);
  uint64_t v5 = *(void *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 56);
  uint64_t v7 = *(void *)(a2 + 72);
  if (*(unsigned char *)(a1 + 40))
  {
    if (!*(unsigned char *)(a2 + 40)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 32) != *(void *)(a2 + 32)) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (*(_OWORD *)(a1 + 48) != 2)
  {
    v11[0] = *(_OWORD *)(a1 + 48);
    v11[1] = v3;
    if (v5 != 2)
    {
      LOWORD(v8) = v5 & 0xFF01;
      BYTE2(v8) = BYTE2(v5) & 1;
      long long v9 = v6;
      uint64_t v10 = v7;
      if (_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV06MetricG0V2eeoiySbAE_AEtFZ_0((double *)v11, &v8))
      {
        return 1;
      }
    }
    return 0;
  }
  return *(void *)(a2 + 48) == 2;
}

uint64_t _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  long long v64 = *(_OWORD *)(a1 + 104);
  long long v65 = *(_OWORD *)(a1 + 88);
  uint64_t v67 = *(void *)(a1 + 120);
  char v66 = *(unsigned char *)(a1 + 128);
  long long v62 = *(_OWORD *)(a1 + 152);
  long long v63 = *(_OWORD *)(a1 + 136);
  long long v51 = *(_OWORD *)(a1 + 184);
  long long v52 = *(_OWORD *)(a1 + 168);
  uint64_t v48 = *(void *)(a1 + 200);
  char v47 = *(unsigned char *)(a1 + 208);
  long long v49 = *(_OWORD *)(a1 + 232);
  long long v50 = *(_OWORD *)(a1 + 216);
  long long v41 = *(_OWORD *)(a1 + 264);
  long long v42 = *(_OWORD *)(a1 + 248);
  uint64_t v61 = *(void *)(a1 + 280);
  char v60 = *(unsigned char *)(a1 + 288);
  long long v39 = *(_OWORD *)(a1 + 312);
  long long v40 = *(_OWORD *)(a1 + 296);
  long long v33 = *(_OWORD *)(a1 + 344);
  long long v34 = *(_OWORD *)(a1 + 328);
  uint64_t v59 = *(void *)(a1 + 360);
  char v30 = *(unsigned char *)(a1 + 368);
  long long v31 = *(_OWORD *)(a1 + 392);
  long long v32 = *(_OWORD *)(a1 + 376);
  unsigned __int8 v22 = *(unsigned char *)(a1 + 416);
  uint64_t v23 = *(void *)(a1 + 424);
  uint64_t v24 = *(void *)(a1 + 432);
  uint64_t v25 = *(void *)(a1 + 408);
  long long v55 = *(_OWORD *)(a2 + 104);
  long long v56 = *(_OWORD *)(a2 + 88);
  uint64_t v58 = *(void *)(a2 + 120);
  char v57 = *(unsigned char *)(a2 + 128);
  long long v53 = *(_OWORD *)(a2 + 152);
  long long v54 = *(_OWORD *)(a2 + 136);
  long long v45 = *(_OWORD *)(a2 + 184);
  long long v46 = *(_OWORD *)(a2 + 168);
  uint64_t v2 = *(void *)(a2 + 200);
  char v3 = *(unsigned char *)(a2 + 208);
  long long v43 = *(_OWORD *)(a2 + 232);
  long long v44 = *(_OWORD *)(a2 + 216);
  long long v37 = *(_OWORD *)(a2 + 264);
  long long v38 = *(_OWORD *)(a2 + 248);
  uint64_t v4 = *(void *)(a2 + 280);
  char v5 = *(unsigned char *)(a2 + 288);
  long long v35 = *(_OWORD *)(a2 + 312);
  long long v36 = *(_OWORD *)(a2 + 296);
  long long v28 = *(_OWORD *)(a2 + 344);
  long long v29 = *(_OWORD *)(a2 + 328);
  uint64_t v6 = *(void *)(a2 + 360);
  char v7 = *(unsigned char *)(a2 + 368);
  long long v8 = *(_OWORD *)(a1 + 24);
  long long v74 = *(_OWORD *)(a1 + 8);
  long long v75 = v8;
  long long v9 = *(_OWORD *)(a1 + 72);
  long long v78 = *(_OWORD *)(a1 + 56);
  long long v79 = v9;
  long long v10 = *(_OWORD *)(a2 + 24);
  long long v68 = *(_OWORD *)(a2 + 8);
  long long v69 = v10;
  long long v11 = *(_OWORD *)(a2 + 72);
  long long v72 = *(_OWORD *)(a2 + 56);
  long long v73 = v11;
  long long v26 = *(_OWORD *)(a2 + 376);
  long long v27 = *(_OWORD *)(a2 + 392);
  uint64_t v12 = *(void *)(a2 + 408);
  char v13 = *(unsigned char *)(a2 + 416);
  uint64_t v15 = *(void *)(a2 + 424);
  uint64_t v14 = *(void *)(a2 + 432);
  char v16 = *(unsigned char *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 40);
  char v18 = *(unsigned char *)(a1 + 48);
  uint64_t v76 = *(void *)(a1 + 40);
  char v77 = v18;
  uint64_t v70 = v17;
  char v71 = v16;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v74, (uint64_t)&v68))return 0; {
  long long v74 = v65;
  }
  long long v75 = v64;
  uint64_t v76 = v67;
  char v77 = v66;
  long long v78 = v63;
  long long v79 = v62;
  long long v68 = v56;
  long long v69 = v55;
  uint64_t v70 = v58;
  char v71 = v57;
  long long v72 = v54;
  long long v73 = v53;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v74, (uint64_t)&v68))return 0; {
  long long v74 = v52;
  }
  long long v75 = v51;
  uint64_t v76 = v48;
  char v77 = v47;
  long long v78 = v50;
  long long v79 = v49;
  long long v68 = v46;
  long long v69 = v45;
  uint64_t v70 = v2;
  char v71 = v3;
  long long v72 = v44;
  long long v73 = v43;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v74, (uint64_t)&v68))return 0; {
  long long v74 = v42;
  }
  long long v75 = v41;
  uint64_t v76 = v61;
  char v77 = v60;
  long long v78 = v40;
  long long v79 = v39;
  long long v68 = v38;
  long long v69 = v37;
  uint64_t v70 = v4;
  char v71 = v5;
  long long v72 = v36;
  long long v73 = v35;
  if (!_s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v74, (uint64_t)&v68))return 0; {
  long long v74 = v34;
  }
  long long v75 = v33;
  uint64_t v76 = v59;
  char v77 = v30;
  long long v78 = v32;
  long long v79 = v31;
  long long v68 = v29;
  long long v69 = v28;
  uint64_t v70 = v6;
  char v71 = v7;
  long long v72 = v26;
  long long v73 = v27;
  BOOL v19 = _s19HealthBalanceDaemon43SleepingSampleDaySummaryCollectionAnalyticsV12MetricCountsV2eeoiySbAE_AEtFZ_0((uint64_t)&v74, (uint64_t)&v68);
  uint64_t result = 0;
  if (v19 && v25 == v12)
  {
    unsigned __int8 v21 = sub_250EDF934(v22, v13);
    if (v24 == v14) {
      return v21 & (v23 == v15);
    }
    else {
      return 0;
    }
  }
  return result;
}

unint64_t sub_250EE20EC()
{
  unint64_t result = qword_269B11200;
  if (!qword_269B11200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B11200);
  }
  return result;
}

uint64_t sub_250EE2140@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = *(void *)(result + 24);
  return result;
}

void *sub_250EE214C(void *result, uint64_t a2)
{
  *(void *)(a2 + 24) = *result;
  *(void *)(a2 + 32) = 0;
  *(unsigned char *)(a2 + 40) = 0;
  return result;
}

void *__swift_memcpy440_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B8uLL);
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 440)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 56);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 440) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 440) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 56) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[32]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250EE2498);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_250EE24C0(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricSummary.BoundMethod;
}

__n128 __swift_memcpy80_8(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.MetricCounts;
}

uint64_t getEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.Status(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for SleepingSampleDaySummaryCollectionAnalytics.Status(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250EE271CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingSampleDaySummaryCollectionAnalytics.Status()
{
  return &type metadata for SleepingSampleDaySummaryCollectionAnalytics.Status;
}

unint64_t sub_250EE2758()
{
  unint64_t result = qword_269B11208;
  if (!qword_269B11208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B11208);
  }
  return result;
}

uint64_t sub_250EE27AC()
{
  unint64_t v0 = sub_250F0D630();
  swift_bridgeObjectRelease();
  if (v0 >= 6) {
    return 6;
  }
  else {
    return v0;
  }
}

void sub_250EE27F8()
{
  if (!qword_26B20F4D8)
  {
    sub_250E9FB38();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20F4D8);
    }
  }
}

void sub_250EE2860(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EE28C4(uint64_t a1)
{
  sub_250EE2860(0, &qword_26B20E500, MEMORY[0x263F42CA0], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_250EE2950()
{
  unint64_t result = qword_26B20F4B0;
  if (!qword_26B20F4B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20F4B0);
  }
  return result;
}

uint64_t sub_250EE29A8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);
  return swift_release();
}

void sub_250EE2A18()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_250F0C0C0();
  uint64_t v83 = *(void *)(v2 - 8);
  uint64_t v84 = v2;
  MEMORY[0x270FA5388](v2);
  long long v82 = (char *)&v78 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v86 = (char *)&v78 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v85 = (char *)&v78 - v9;
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v78 - v10;
  sub_250F0CC90();
  id v12 = v0;
  char v13 = sub_250F0CCA0();
  os_log_type_t v14 = sub_250F0D1D0();
  BOOL v15 = os_log_type_enabled(v13, v14);
  id v88 = ObjectType;
  uint64_t v89 = v4;
  if (v15)
  {
    uint64_t v87 = v5;
    uint64_t v16 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    uint64_t v91 = v17;
    *(_DWORD *)uint64_t v16 = 136446466;
    uint64_t v18 = sub_250F0D7B0();
    uint64_t v90 = sub_250E8BE44(v18, v19, &v91);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v16 + 12) = 2080;
    id v20 = objc_msgSend(v12, sel_configuration);
    id v21 = objc_msgSend(v20, sel_debugIdentifier);

    uint64_t v22 = v89;
    if (v21)
    {
      uint64_t v23 = sub_250F0CF80();
      unint64_t v25 = v24;
    }
    else
    {
      id v27 = objc_msgSend(v12, sel_queryUUID);
      long long v28 = v82;
      sub_250F0C0A0();

      uint64_t v23 = sub_250F0C070();
      unint64_t v25 = v29;
      (*(void (**)(char *, uint64_t))(v83 + 8))(v28, v84);
    }
    uint64_t v90 = sub_250E8BE44(v23, v25, &v91);
    sub_250F0D300();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v13, v14, "[%{public}s:%s] Training Load Query started", (uint8_t *)v16, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v17, -1, -1);
    MEMORY[0x25338EC30](v16, -1, -1);

    uint64_t v5 = v87;
    long long v26 = *(void (**)(char *, uint64_t))(v87 + 8);
    v26(v11, v22);
    uint64_t ObjectType = v88;
  }
  else
  {

    long long v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v11, v4);
  }
  v92.receiver = v12;
  v92.super_class = ObjectType;
  objc_msgSendSuper2(&v92, sel__queue_start);
  id v30 = objc_msgSend(v12, sel_configuration);
  unsigned __int8 v31 = objc_msgSend(v30, sel_shouldDeactivateAfterInitialResults);

  if ((v31 & 1) == 0)
  {
    id v32 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A658]), sel_initWithIdentifier_, *MEMORY[0x263F09F60]);
    if (v32)
    {
      long long v33 = v32;
      uint64_t v34 = v5;
      long long v35 = v85;
      sub_250F0CC90();
      id v36 = v12;
      long long v37 = sub_250F0CCA0();
      int v38 = sub_250F0D1D0();
      if (os_log_type_enabled(v37, (os_log_type_t)v38))
      {
        LODWORD(v87) = v38;
        id v81 = v12;
        uint64_t v39 = swift_slowAlloc();
        uint64_t v79 = swift_slowAlloc();
        uint64_t v91 = v79;
        *(_DWORD *)uint64_t v39 = 136446466;
        uint64_t v40 = sub_250F0D7B0();
        uint64_t v90 = sub_250E8BE44(v40, v41, &v91);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v39 + 12) = 2080;
        id v42 = objc_msgSend(v36, sel_configuration);
        id v43 = objc_msgSend(v42, sel_debugIdentifier);

        long long v44 = v26;
        if (v43)
        {
          uint64_t v45 = sub_250F0CF80();
          unint64_t v47 = v46;
        }
        else
        {
          id v48 = objc_msgSend(v36, sel_queryUUID);
          long long v49 = v82;
          sub_250F0C0A0();

          uint64_t v45 = sub_250F0C070();
          unint64_t v47 = v50;
          (*(void (**)(char *, uint64_t))(v83 + 8))(v49, v84);
        }
        uint64_t v90 = sub_250E8BE44(v45, v47, &v91);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v37, (os_log_type_t)v87, "[%{public}s:%s] Training Load Query, adding observer on workout effort", (uint8_t *)v39, 0x16u);
        uint64_t v51 = v79;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v51, -1, -1);
        MEMORY[0x25338EC30](v39, -1, -1);

        uint64_t v5 = v34;
        long long v26 = v44;
        v44(v85, v89);
        id v12 = v81;
      }
      else
      {

        uint64_t v5 = v34;
        v26(v35, v89);
      }
      id v52 = objc_msgSend(v36, sel_profile);
      if (v52)
      {
        long long v53 = v52;
        id v54 = objc_msgSend(v52, sel_associationManager);

        objc_msgSend(v54, sel_addObserver_forDataType_, v36, v33);
      }
    }
  }
  id v55 = objc_msgSend(v12, sel_configuration);
  unsigned __int8 v56 = objc_msgSend(v55, sel_shouldDeactivateAfterInitialResults);

  if ((v56 & 1) == 0)
  {
    id v57 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A658]), sel_initWithIdentifier_, *MEMORY[0x263F09E08]);
    if (v57)
    {
      uint64_t v58 = v57;
      uint64_t v87 = v5;
      uint64_t v59 = v86;
      sub_250F0CC90();
      id v60 = v12;
      uint64_t v61 = sub_250F0CCA0();
      os_log_type_t v62 = sub_250F0D1D0();
      if (os_log_type_enabled(v61, v62))
      {
        id v81 = v12;
        uint64_t v63 = swift_slowAlloc();
        uint64_t v64 = swift_slowAlloc();
        uint64_t v91 = v64;
        *(_DWORD *)uint64_t v63 = 136446466;
        uint64_t v65 = sub_250F0D7B0();
        uint64_t v90 = sub_250E8BE44(v65, v66, &v91);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v63 + 12) = 2080;
        id v67 = objc_msgSend(v60, (SEL)&selRef__countPerMinuteUnit);
        id v68 = objc_msgSend(v67, sel_debugIdentifier);

        id v80 = v26;
        if (v68)
        {
          uint64_t v69 = sub_250F0CF80();
          unint64_t v71 = v70;
        }
        else
        {
          id v72 = objc_msgSend(v60, sel_queryUUID);
          long long v73 = v82;
          sub_250F0C0A0();

          uint64_t v69 = sub_250F0C070();
          unint64_t v71 = v74;
          (*(void (**)(char *, uint64_t))(v83 + 8))(v73, v84);
        }
        uint64_t v90 = sub_250E8BE44(v69, v71, &v91);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v61, v62, "[%{public}s:%s] Training Load Query, adding observer on estimated workout effort", (uint8_t *)v63, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v64, -1, -1);
        MEMORY[0x25338EC30](v63, -1, -1);

        v80(v86, v89);
      }
      else
      {

        v26(v59, v89);
      }
      id v75 = objc_msgSend(v60, sel_profile);
      if (v75)
      {
        uint64_t v76 = v75;
        id v77 = objc_msgSend(v75, sel_associationManager);

        objc_msgSend(v77, sel_addObserver_forDataType_, v60, v58);
      }
    }
  }
  sub_250EE343C();
}

void sub_250EE343C()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v105 = *(void *)(v2 - 8);
  uint64_t v106 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v101 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  uint64_t v7 = (char *)&v101 - v6;
  uint64_t v8 = sub_250F0C0C0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v107 = v8;
  uint64_t v108 = v9;
  MEMORY[0x270FA5388](v8);
  long long v11 = (char *)&v101 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EEDBCC(0);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  BOOL v15 = (char *)&v101 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v101 - v16;
  uint64_t v18 = sub_250F0CCF0();
  uint64_t v19 = *(void *)(v18 - 8);
  MEMORY[0x270FA5388](v18);
  id v21 = (uint64_t *)((char *)&v101 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  *id v21 = objc_msgSend(v1, sel_queryQueue);
  (*(void (**)(void *, void, uint64_t))(v19 + 104))(v21, *MEMORY[0x263F8F0E0], v18);
  char v22 = sub_250F0CD00();
  unint64_t v24 = *(void (**)(void *, uint64_t))(v19 + 8);
  uint64_t v23 = v19 + 8;
  v24(v21, v18);
  if ((v22 & 1) == 0)
  {
    __break(1u);
    goto LABEL_40;
  }
  id v25 = objc_msgSend(v1, sel_clientProxy);
  if (!v25) {
    goto LABEL_40;
  }
  uint64_t v18 = (uint64_t)v25;
  id v26 = objc_msgSend(v25, sel_remoteObjectProxy);
  swift_unknownObjectRelease();
  sub_250F0D340();
  swift_unknownObjectRelease();
  sub_250EEDC00();
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_40;
  }
  os_log_type_t v109 = v110;
  id v27 = (void (*)(char *, uint64_t, uint64_t))objc_msgSend(v1, sel_profile);
  if (!v27)
  {
    sub_250F0CC90();
    id v37 = v1;
    int v38 = sub_250F0CCA0();
    os_log_type_t v39 = sub_250F0D1D0();
    if (os_log_type_enabled(v38, v39))
    {
      uint64_t v40 = swift_slowAlloc();
      uint64_t v41 = swift_slowAlloc();
      v111[0] = v41;
      *(_DWORD *)uint64_t v40 = 136446466;
      uint64_t v42 = sub_250F0D7B0();
      uint64_t v110 = (void *)sub_250E8BE44(v42, v43, v111);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v40 + 12) = 2080;
      id v44 = objc_msgSend(v37, sel_configuration);
      id v45 = objc_msgSend(v44, sel_debugIdentifier);

      if (v45)
      {
        uint64_t v46 = sub_250F0CF80();
        unint64_t v48 = v47;
      }
      else
      {
        id v80 = objc_msgSend(v37, sel_queryUUID);
        sub_250F0C0A0();

        uint64_t v46 = sub_250F0C070();
        unint64_t v48 = v81;
        (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
      }
      uint64_t v110 = (void *)sub_250E8BE44(v46, v48, v111);
      sub_250F0D300();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v38, v39, "[%{public}s:%s] Training Load Query, no profile", (uint8_t *)v40, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v41, -1, -1);
      MEMORY[0x25338EC30](v40, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v105 + 8))(v5, v106);
    sub_250F0CF80();
    id v82 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v83 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    id v84 = objc_msgSend(v82, sel_initWithDomain_code_userInfo_, v83, 127, 0);

    uint64_t v85 = (void *)sub_250F0BF90();
    id v86 = objc_msgSend(v37, sel_queryUUID);
    sub_250F0C0A0();

    uint64_t v87 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
    objc_msgSend(v109, sel_client_deliverError_forQuery_, v85, v87);
    swift_unknownObjectRelease();
    goto LABEL_32;
  }
  char v103 = v27;
  id v28 = objc_msgSend(v1, sel_configuration);
  sub_250F0CAD0();
  uint64_t v29 = swift_dynamicCastClass();
  if (!v29)
  {

    sub_250F0CC90();
    id v49 = v1;
    unint64_t v50 = sub_250F0CCA0();
    os_log_type_t v51 = sub_250F0D1D0();
    if (os_log_type_enabled(v50, v51))
    {
      uint64_t v52 = swift_slowAlloc();
      uint64_t v102 = swift_slowAlloc();
      v111[0] = v102;
      *(_DWORD *)uint64_t v52 = 136446466;
      uint64_t v53 = sub_250F0D7B0();
      uint64_t v110 = (void *)sub_250E8BE44(v53, v54, v111);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v52 + 12) = 2080;
      id v55 = objc_msgSend(v49, sel_configuration);
      id v56 = objc_msgSend(v55, sel_debugIdentifier);

      if (v56)
      {
        uint64_t v57 = sub_250F0CF80();
        unint64_t v59 = v58;
      }
      else
      {
        id v88 = objc_msgSend(v49, sel_queryUUID);
        sub_250F0C0A0();

        uint64_t v57 = sub_250F0C070();
        unint64_t v59 = v89;
        (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
      }
      uint64_t v65 = v109;
      uint64_t v110 = (void *)sub_250E8BE44(v57, v59, v111);
      sub_250F0D300();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v50, v51, "[%{public}s:%s] Training Load Query, no configuration", (uint8_t *)v52, 0x16u);
      uint64_t v90 = v102;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v90, -1, -1);
      MEMORY[0x25338EC30](v52, -1, -1);

      (*(void (**)(char *, uint64_t))(v105 + 8))(v7, v106);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v105 + 8))(v7, v106);
      uint64_t v65 = v109;
    }
    sub_250F0CF80();
    id v91 = objc_allocWithZone(MEMORY[0x263F087E8]);
    objc_super v92 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    id v93 = objc_msgSend(v91, sel_initWithDomain_code_userInfo_, v92, 100, 0);

    uint64_t v85 = (void *)sub_250F0BF90();
    id v94 = objc_msgSend(v49, sel_queryUUID);
    sub_250F0C0A0();

    uint64_t v87 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
    objc_msgSend(v65, sel_client_deliverError_forQuery_, v85, v87);
    swift_unknownObjectRelease();

LABEL_32:
    return;
  }
  id v30 = (void *)v29;
  sub_250F0CAC0();
  uint64_t v23 = sub_250F0C350();
  uint64_t v18 = *(void *)(v23 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v23) == 1) {
    goto LABEL_40;
  }
  sub_250EEF630((uint64_t)v17, (uint64_t)v15, (uint64_t (*)(void))sub_250EEDBCC);
  int v31 = (*(uint64_t (**)(char *, uint64_t))(v18 + 88))(v15, v23);
  if (v31 == *MEMORY[0x263F42C90])
  {
    id v32 = objc_msgSend(v1, sel_configuration);
    id v33 = objc_msgSend(v32, sel_debugIdentifier);

    if (v33)
    {
      uint64_t v34 = sub_250F0CF80();
      unint64_t v36 = v35;
    }
    else
    {
      id v71 = objc_msgSend(v1, sel_queryUUID);
      sub_250F0C0A0();

      uint64_t v34 = sub_250F0C070();
      unint64_t v36 = v72;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
    }
    long long v73 = v103;
    uint64_t v74 = v34;
    unint64_t v75 = v36;
    uint64_t v76 = (uint64_t)v109;
    id v77 = v103;
    uint64_t v78 = v30;
    uint64_t v79 = 0;
  }
  else
  {
    if (v31 != *MEMORY[0x263F42C80])
    {
      if (v31 != *MEMORY[0x263F42C88])
      {
        while (1)
        {
          uint64_t v100 = *(void (**)(char *, uint64_t))(v18 + 8);
          v18 += 8;
          v100(v15, v23);
LABEL_40:
          sub_250F0D590();
          __break(1u);
        }
      }
      id v66 = objc_msgSend(v1, sel_configuration);
      id v67 = objc_msgSend(v66, sel_debugIdentifier);

      if (v67)
      {
        uint64_t v68 = sub_250F0CF80();
        unint64_t v70 = v69;
      }
      else
      {
        id v97 = objc_msgSend(v1, sel_queryUUID);
        sub_250F0C0A0();

        uint64_t v68 = sub_250F0C070();
        unint64_t v70 = v98;
        (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
      }
      uint64_t v99 = v103;
      sub_250EE6F44(v68, v70, v109, v103, v30);
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();

      goto LABEL_38;
    }
    id v60 = objc_msgSend(v1, sel_configuration);
    id v61 = objc_msgSend(v60, sel_debugIdentifier);

    if (v61)
    {
      uint64_t v62 = sub_250F0CF80();
      unint64_t v64 = v63;
    }
    else
    {
      id v95 = objc_msgSend(v1, sel_queryUUID);
      sub_250F0C0A0();

      uint64_t v62 = sub_250F0C070();
      unint64_t v64 = v96;
      (*(void (**)(char *, uint64_t))(v108 + 8))(v11, v107);
    }
    long long v73 = v103;
    uint64_t v74 = v62;
    unint64_t v75 = v64;
    uint64_t v76 = (uint64_t)v109;
    id v77 = v103;
    uint64_t v78 = v30;
    uint64_t v79 = 1;
  }
  sub_250EE6184(v74, v75, v76, v77, v78, v79);
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
LABEL_38:
  sub_250EEF78C((uint64_t)v17, (uint64_t (*)(void))sub_250EEDBCC);
}

void sub_250EE427C()
{
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = sub_250F0C0C0();
  uint64_t v36 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0CCB0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39.receiver = v0;
  v39.super_class = ObjectType;
  objc_msgSendSuper2(&v39, sel__queue_stop);
  sub_250F0CC90();
  id v9 = v0;
  uint64_t v10 = sub_250F0CCA0();
  os_log_type_t v11 = sub_250F0D1D0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v33 = v2;
    uint64_t v35 = v5;
    uint64_t v12 = swift_slowAlloc();
    uint64_t v34 = swift_slowAlloc();
    uint64_t v38 = v34;
    *(_DWORD *)uint64_t v12 = 136446466;
    uint64_t v13 = sub_250F0D7B0();
    uint64_t v37 = sub_250E8BE44(v13, v14, &v38);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v12 + 12) = 2080;
    id v15 = objc_msgSend(v9, sel_configuration);
    id v16 = objc_msgSend(v15, sel_debugIdentifier);

    if (v16)
    {
      uint64_t v17 = sub_250F0CF80();
      unint64_t v19 = v18;
    }
    else
    {
      id v20 = objc_msgSend(v9, sel_queryUUID);
      sub_250F0C0A0();

      uint64_t v17 = sub_250F0C070();
      unint64_t v19 = v21;
      (*(void (**)(char *, uint64_t))(v36 + 8))(v4, v33);
    }
    uint64_t v37 = sub_250E8BE44(v17, v19, &v38);
    sub_250F0D300();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v10, v11, "[%{public}s:%s] Training Load Query, Queue Stop, removing observer for effort", (uint8_t *)v12, 0x16u);
    uint64_t v22 = v34;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v22, -1, -1);
    MEMORY[0x25338EC30](v12, -1, -1);

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v35);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  id v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A658]), sel_initWithIdentifier_, *MEMORY[0x263F09F60]);
  if (v23)
  {
    unint64_t v24 = v23;
    id v25 = objc_msgSend(v9, sel_profile);
    if (v25)
    {
      id v26 = v25;
      id v27 = objc_msgSend(v25, sel_associationManager);

      objc_msgSend(v27, sel_removeObserver_forDataType_, v9, v24);
    }
  }
  id v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A658]), sel_initWithIdentifier_, *MEMORY[0x263F09E08]);
  if (v28)
  {
    uint64_t v29 = v28;
    id v30 = objc_msgSend(v9, sel_profile);
    if (v30)
    {
      int v31 = v30;
      id v32 = objc_msgSend(v30, sel_associationManager);

      objc_msgSend(v32, sel_removeObserver_forDataType_, v9, v29);
    }
  }
}

uint64_t sub_250EE47BC(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  uint64_t ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v148 = sub_250F0C0C0();
  uint64_t v147 = *(void *)(v148 - 8);
  MEMORY[0x270FA5388](v148);
  int v146 = (char *)&v138 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0CCB0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v160 = v13;
  uint64_t v161 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v138 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = MEMORY[0x270FA5388](v15);
  int v150 = (char *)&v138 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v152 = (char *)&v138 - v21;
  MEMORY[0x270FA5388](v20);
  uint64_t v139 = (char *)&v138 - v22;
  os_log_t v145 = (os_log_t)sub_250F0CCC0();
  uint64_t isa = (uint64_t)v145[-1].isa;
  MEMORY[0x270FA5388](v145);
  uint64_t v142 = (char *)&v138 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v143 = sub_250F0CCE0();
  uint64_t v141 = *(void *)(v143 - 8);
  MEMORY[0x270FA5388](v143);
  unint64_t v140 = (char *)&v138 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EEF700(0, &qword_26B20E4F0, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v25 - 8);
  id v27 = (char *)&v138 - v26;
  uint64_t v157 = sub_250F0C060();
  uint64_t v154 = *(void *)(v157 - 8);
  uint64_t v28 = MEMORY[0x270FA5388](v157);
  uint64_t v151 = (char *)&v138 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = MEMORY[0x270FA5388](v28);
  uint64_t v155 = (char *)&v138 - v31;
  MEMORY[0x270FA5388](v30);
  uint64_t v158 = (char *)&v138 - v32;
  sub_250EEDAC4();
  uint64_t v34 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v159 = (uint64_t)&v138 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8D194(0, (unint64_t *)&unk_269B11220);
  uint64_t v36 = (void *)sub_250F0D030();
  v164.receiver = v6;
  v164.super_class = ObjectType;
  uint64_t v156 = ObjectType;
  uint64_t v149 = a2;
  objc_msgSendSuper2(&v164, sel_associationsUpdatedForObject_subObject_type_objects_anchor_, a1, a2, a3, v36, a5);

  self;
  uint64_t v37 = swift_dynamicCastObjCClass();
  if (v37)
  {
    uint64_t v38 = (void *)v37;
    uint64_t v153 = a1;
    swift_unknownObjectRetain();
    objc_super v39 = (char *)objc_msgSend(v6, sel_configuration);
    sub_250F0CAD0();
    if (swift_dynamicCastClass())
    {
      int v150 = v39;
      sub_250EE5C24(v159, v159 + *(int *)(v34 + 48));
      sub_250F0CAA0();
      uint64_t v40 = sub_250F0C1B0();
      uint64_t v41 = *(void *)(v40 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v41 + 48))(v27, 1, v40);
      if (result == 1)
      {
        __break(1u);
      }
      else
      {
        unint64_t v43 = v158;
        sub_250F0CE60();
        uint64_t v44 = v40;
        id v45 = v43;
        (*(void (**)(char *, uint64_t))(v41 + 8))(v27, v44);
        id v46 = objc_msgSend(v38, sel_endDate);
        unint64_t v47 = v155;
        sub_250F0C030();

        sub_250EEDB84((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
        uint64_t v48 = v157;
        LOBYTE(v46) = sub_250F0CEE0();
        uint64_t v49 = v154;
        unint64_t v50 = *(void (**)(char *, uint64_t))(v154 + 8);
        v50(v47, v48);
        if (v46)
        {
          uint64_t v149 = v50;
          os_log_type_t v51 = v152;
          sub_250F0CC90();
          uint64_t v52 = v151;
          (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v151, v45, v48);
          swift_unknownObjectRetain_n();
          uint64_t v53 = v48;
          id v54 = v6;
          id v55 = sub_250F0CCA0();
          LODWORD(v154) = sub_250F0D1D0();
          if (os_log_type_enabled(v55, (os_log_type_t)v154))
          {
            os_log_t v145 = v55;
            uint64_t v56 = swift_slowAlloc();
            uint64_t isa = swift_slowAlloc();
            aBlock[0] = isa;
            *(_DWORD *)uint64_t v56 = 136446978;
            uint64_t v57 = sub_250F0D7B0();
            uint64_t v163 = sub_250E8BE44(v57, v58, aBlock);
            sub_250F0D300();
            swift_bridgeObjectRelease();
            *(_WORD *)(v56 + 12) = 2080;
            id v59 = objc_msgSend(v54, sel_configuration);
            id v60 = objc_msgSend(v59, sel_debugIdentifier);

            if (v60)
            {
              uint64_t v61 = sub_250F0CF80();
              unint64_t v63 = v62;
            }
            else
            {
              id v118 = objc_msgSend(v54, sel_queryUUID);
              uint64_t v119 = v146;
              sub_250F0C0A0();

              uint64_t v61 = sub_250F0C070();
              unint64_t v63 = v120;
              (*(void (**)(char *, uint64_t))(v147 + 8))(v119, v148);
            }
            uint64_t v163 = sub_250E8BE44(v61, v63, aBlock);
            sub_250F0D300();

            swift_bridgeObjectRelease();
            *(_WORD *)(v56 + 22) = 2080;
            id v121 = objc_msgSend(v38, sel_endDate);
            sub_250F0C030();

            sub_250EEDB84(&qword_269B10BE0, MEMORY[0x263F07490]);
            uint64_t v122 = v157;
            uint64_t v123 = sub_250F0D650();
            unint64_t v125 = v124;
            uint64_t v126 = v149;
            v149(v47, v122);
            uint64_t v163 = sub_250E8BE44(v123, v125, aBlock);
            sub_250F0D300();
            swift_unknownObjectRelease_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v56 + 32) = 2080;
            uint64_t v127 = v151;
            uint64_t v128 = sub_250F0D650();
            uint64_t v163 = sub_250E8BE44(v128, v129, aBlock);
            sub_250F0D300();
            swift_bridgeObjectRelease();
            v126(v127, v122);
            os_log_t v130 = v145;
            _os_log_impl(&dword_250E86000, v145, (os_log_type_t)v154, "[%{public}s:%s] Associations Updated, workout's end date %s is older than lower bound of query range %s", (uint8_t *)v56, 0x2Au);
            uint64_t v131 = isa;
            swift_arrayDestroy();
            MEMORY[0x25338EC30](v131, -1, -1);
            MEMORY[0x25338EC30](v56, -1, -1);
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v161 + 8))(v152, v160);
            v126(v158, v122);
          }
          else
          {

            unint64_t v98 = v52;
            uint64_t v99 = v149;
            v149(v98, v53);

            swift_unknownObjectRelease_n();
            (*(void (**)(char *, uint64_t))(v161 + 8))(v51, v160);
            v99(v45, v53);
          }
        }
        else
        {
          uint64_t v90 = v149;
          if (!v149
            || (sub_250E8D194(0, &qword_269B11238),
                objc_msgSend(v90, sel_isKindOfClass_, swift_getObjCClassFromMetadata())))
          {
            id v91 = objc_msgSend(v6, sel_queryQueue);
            uint64_t v92 = swift_allocObject();
            *(void *)(v92 + 16) = v6;
            aBlock[4] = (uint64_t)sub_250EEDB60;
            aBlock[5] = v92;
            aBlock[0] = MEMORY[0x263EF8330];
            aBlock[1] = 1107296256;
            aBlock[2] = (uint64_t)sub_250EE29A8;
            uint64_t aBlock[3] = (uint64_t)&block_descriptor_8;
            id v93 = _Block_copy(aBlock);
            id v94 = v6;
            id v95 = v140;
            sub_250F0CCD0();
            uint64_t v163 = MEMORY[0x263F8EE78];
            sub_250EEDB84(&qword_269B10D90, MEMORY[0x263F8F030]);
            sub_250EEF700(0, &qword_269B10D98, MEMORY[0x263F8F030], MEMORY[0x263F8D488]);
            sub_250EB63AC();
            unint64_t v96 = v142;
            os_log_t v97 = v145;
            sub_250F0D390();
            MEMORY[0x25338DE40](0, v95, v96, v93);
            _Block_release(v93);
            swift_unknownObjectRelease();

            (*(void (**)(char *, os_log_t))(isa + 8))(v96, v97);
            (*(void (**)(char *, uint64_t))(v141 + 8))(v95, v143);
            v50(v158, v48);
            sub_250EEF78C(v159, (uint64_t (*)(void))sub_250EEDAC4);
            return swift_release();
          }
          char v103 = v139;
          sub_250F0CC90();
          id v104 = v6;
          uint64_t v105 = sub_250F0CCA0();
          os_log_type_t v106 = sub_250F0D1D0();
          if (os_log_type_enabled(v105, v106))
          {
            uint64_t v149 = v50;
            uint64_t v107 = swift_slowAlloc();
            uint64_t v155 = (char *)swift_slowAlloc();
            aBlock[0] = (uint64_t)v155;
            *(_DWORD *)uint64_t v107 = 136446466;
            uint64_t v108 = sub_250F0D7B0();
            uint64_t v163 = sub_250E8BE44(v108, v109, aBlock);
            sub_250F0D300();
            swift_bridgeObjectRelease();
            *(_WORD *)(v107 + 12) = 2080;
            id v110 = objc_msgSend(v104, sel_configuration);
            id v111 = objc_msgSend(v110, sel_debugIdentifier);

            if (v111)
            {
              uint64_t v112 = sub_250F0CF80();
              unint64_t v114 = v113;
            }
            else
            {
              id v132 = objc_msgSend(v104, sel_queryUUID);
              uint64_t v133 = v146;
              sub_250F0C0A0();

              uint64_t v112 = sub_250F0C070();
              unint64_t v114 = v134;
              (*(void (**)(char *, uint64_t))(v147 + 8))(v133, v148);
            }
            uint64_t v136 = v160;
            uint64_t v135 = v161;
            uint64_t v163 = sub_250E8BE44(v112, v114, aBlock);
            sub_250F0D300();

            swift_bridgeObjectRelease();
            _os_log_impl(&dword_250E86000, v105, v106, "[%{public}s:%s] Associations Updated, sub-object is NOT workout activity", (uint8_t *)v107, 0x16u);
            uint64_t v137 = v155;
            swift_arrayDestroy();
            MEMORY[0x25338EC30](v137, -1, -1);
            MEMORY[0x25338EC30](v107, -1, -1);
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v135 + 8))(v139, v136);
            v149(v158, v157);
          }
          else
          {
            swift_unknownObjectRelease();

            (*(void (**)(char *, uint64_t))(v161 + 8))(v103, v160);
            v50(v158, v48);
          }
        }
        return sub_250EEF78C(v159, (uint64_t (*)(void))sub_250EEDAC4);
      }
    }
    else
    {

      id v77 = v150;
      sub_250F0CC90();
      id v78 = v6;
      uint64_t v79 = sub_250F0CCA0();
      os_log_type_t v80 = sub_250F0D1D0();
      if (os_log_type_enabled(v79, v80))
      {
        uint64_t v81 = swift_slowAlloc();
        uint64_t v82 = swift_slowAlloc();
        aBlock[0] = v82;
        *(_DWORD *)uint64_t v81 = 136446466;
        uint64_t v83 = sub_250F0D7B0();
        uint64_t v163 = sub_250E8BE44(v83, v84, aBlock);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 12) = 2080;
        id v85 = objc_msgSend(v78, sel_configuration);
        id v86 = objc_msgSend(v85, sel_debugIdentifier);

        if (v86)
        {
          uint64_t v87 = sub_250F0CF80();
          unint64_t v89 = v88;
        }
        else
        {
          id v115 = objc_msgSend(v78, sel_queryUUID);
          uint64_t v116 = v146;
          sub_250F0C0A0();

          uint64_t v87 = sub_250F0C070();
          unint64_t v89 = v117;
          (*(void (**)(char *, uint64_t))(v147 + 8))(v116, v148);
        }
        uint64_t v163 = sub_250E8BE44(v87, v89, aBlock);
        sub_250F0D300();

        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v79, v80, "[%{public}s:%s] Associations Updated, No Custom Configuration for Query", (uint8_t *)v81, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v82, -1, -1);
        MEMORY[0x25338EC30](v81, -1, -1);
        swift_unknownObjectRelease();
      }
      else
      {

        swift_unknownObjectRelease();
      }
      return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v77, v160);
    }
  }
  else
  {
    sub_250F0CC90();
    id v64 = v6;
    uint64_t v65 = sub_250F0CCA0();
    os_log_type_t v66 = sub_250F0D1D0();
    id v67 = v17;
    if (os_log_type_enabled(v65, v66))
    {
      uint64_t v68 = swift_slowAlloc();
      uint64_t v69 = swift_slowAlloc();
      aBlock[0] = v69;
      *(_DWORD *)uint64_t v68 = 136446466;
      uint64_t v70 = sub_250F0D7B0();
      uint64_t v163 = sub_250E8BE44(v70, v71, aBlock);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v68 + 12) = 2080;
      id v72 = objc_msgSend(v64, sel_configuration);
      id v73 = objc_msgSend(v72, sel_debugIdentifier);

      if (v73)
      {
        uint64_t v74 = sub_250F0CF80();
        unint64_t v76 = v75;
      }
      else
      {
        id v100 = objc_msgSend(v64, sel_queryUUID);
        uint64_t v101 = v146;
        sub_250F0C0A0();

        uint64_t v74 = sub_250F0C070();
        unint64_t v76 = v102;
        (*(void (**)(char *, uint64_t))(v147 + 8))(v101, v148);
      }
      uint64_t v163 = sub_250E8BE44(v74, v76, aBlock);
      sub_250F0D300();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_250E86000, v65, v66, "[%{public}s:%s] Associations Updated, object is NOT workout", (uint8_t *)v68, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v69, -1, -1);
      MEMORY[0x25338EC30](v68, -1, -1);
    }
    else
    {
    }
    return (*(uint64_t (**)(char *, uint64_t))(v161 + 8))(v67, v160);
  }
  return result;
}

uint64_t sub_250EE5C24(uint64_t a1, uint64_t a2)
{
  uint64_t v33 = a1;
  sub_250EEF700(0, &qword_26B20EEC0, (uint64_t (*)(uint64_t))sub_250EC18D8, MEMORY[0x263F8D8F0]);
  uint64_t v4 = MEMORY[0x270FA5388](v3 - 8);
  uint64_t v31 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v30 = (char *)&v29 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)&v29 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v29 - v11;
  uint64_t v13 = sub_250F0CE70();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v35 = (uint64_t (*)(char *, uint64_t, uint64_t))((char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v15);
  uint64_t v32 = (char *)&v29 - v17;
  sub_250F0CAB0();
  sub_250EC18D8(0);
  uint64_t v19 = v18;
  uint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v18 - 8) + 48);
  uint64_t result = v20(v12, 1, v18);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v22 = &v12[*(int *)(v19 + 36)];
  uint64_t v34 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 16);
  v34(a2, v22, v13);
  sub_250EEF78C((uint64_t)v12, (uint64_t (*)(void))sub_250EC18D8);
  sub_250F0CAB0();
  uint64_t result = v20(v10, 1, v19);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
  sub_250F0D330();
  uint64_t v23 = v36;
  sub_250EEF78C((uint64_t)v10, (uint64_t (*)(void))sub_250EC18D8);
  if (v23 > 28)
  {
    uint64_t v24 = (uint64_t)v31;
    sub_250F0CAB0();
    uint64_t result = v20((char *)v24, 1, v19);
    if (result == 1)
    {
LABEL_14:
      __break(1u);
      goto LABEL_15;
    }
    uint64_t v20 = v35;
    v34((uint64_t)v35, (char *)v24, v13);
    sub_250EEF78C(v24, (uint64_t (*)(void))sub_250EC18D8);
    sub_250EB12C0();
    if (!__OFSUB__(0, (*(uint64_t (**)(void))(v25 + 32))())) {
      goto LABEL_10;
    }
    __break(1u);
  }
  uint64_t v26 = (uint64_t)v30;
  sub_250F0CAB0();
  uint64_t result = v20((char *)v26, 1, v19);
  if (result != 1)
  {
    uint64_t v20 = v35;
    v34((uint64_t)v35, (char *)(v26 + *(int *)(v19 + 36)), v13);
    sub_250EEF78C(v26, (uint64_t (*)(void))sub_250EC18D8);
    sub_250EB12C0();
    uint64_t result = (*(uint64_t (**)(void))(v27 + 32))();
    if (!__OFADD__(result, 28))
    {
LABEL_10:
      uint64_t v28 = v32;
      sub_250F0CE40();
      (*(void (**)(uint64_t (*)(char *, uint64_t, uint64_t), uint64_t))(v14 + 8))(v20, v13);
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v14 + 32))(v33, v28, v13);
    }
    __break(1u);
    goto LABEL_12;
  }
LABEL_15:
  __break(1u);
  return result;
}

uint64_t sub_250EE6184(uint64_t a1, unint64_t a2, uint64_t a3, void *a4, void *a5, uint64_t a6)
{
  uint64_t v119 = a6;
  id v104 = a4;
  uint64_t v121 = a3;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250EEF700(0, &qword_26B20E4F8, MEMORY[0x263F079C8], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v11 - 8);
  uint64_t v101 = (char *)&v98 - v12;
  uint64_t v111 = sub_250F0BF80();
  uint64_t v110 = *(void *)(v111 - 8);
  MEMORY[0x270FA5388](v111);
  unint64_t v125 = (char *)&v98 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EEF700(0, &qword_26B20E4F0, MEMORY[0x263F07920], v10);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  id v100 = (char *)&v98 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  unint64_t v113 = (char *)&v98 - v18;
  MEMORY[0x270FA5388](v17);
  uint64_t v112 = (char *)&v98 - v19;
  uint64_t v124 = sub_250F0C060();
  uint64_t v108 = *(void *)(v124 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v124);
  uint64_t v105 = (char *)&v98 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v123 = (char *)&v98 - v23;
  uint64_t v103 = v24;
  MEMORY[0x270FA5388](v22);
  uint64_t v26 = (char *)&v98 - v25;
  uint64_t v118 = sub_250F0CE70();
  uint64_t v106 = *(void *)(v118 - 8);
  uint64_t v27 = MEMORY[0x270FA5388](v118);
  unint64_t v117 = (char *)&v98 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v116 = (char *)&v98 - v30;
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v127 = (uint64_t)&v98 - v32;
  uint64_t v102 = v33;
  MEMORY[0x270FA5388](v31);
  uint64_t v126 = (uint64_t)&v98 - v34;
  uint64_t v35 = sub_250F0CCB0();
  uint64_t v36 = *(void *)(v35 - 8);
  MEMORY[0x270FA5388](v35);
  uint64_t v38 = (char *)&v98 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  objc_super v39 = sub_250F0CCA0();
  os_log_type_t v40 = sub_250F0D1D0();
  BOOL v41 = os_log_type_enabled(v39, v40);
  id v115 = a5;
  unint64_t v120 = a2;
  uint64_t v109 = ObjectType;
  uint64_t v107 = a1;
  unint64_t v114 = v26;
  if (v41)
  {
    uint64_t v42 = a1;
    uint64_t v43 = swift_slowAlloc();
    unint64_t v98 = (void *)swift_slowAlloc();
    aBlock[0] = v98;
    *(_DWORD *)uint64_t v43 = 136446466;
    uint64_t v99 = v35;
    uint64_t v44 = sub_250F0D7B0();
    uint64_t v129 = sub_250E8BE44(v44, v45, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v43 + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v129 = sub_250E8BE44(v42, a2, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_250E86000, v39, v40, "[%{public}s:%s] Query Type is Workout", (uint8_t *)v43, 0x16u);
    id v46 = v98;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v46, -1, -1);
    MEMORY[0x25338EC30](v43, -1, -1);

    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v99);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    (*(void (**)(char *, uint64_t))(v36 + 8))(v38, v35);
  }
  sub_250EE5C24(v126, v127);
  unint64_t v47 = v112;
  sub_250F0CAA0();
  uint64_t v48 = sub_250F0C1B0();
  uint64_t v49 = *(void *)(v48 - 8);
  unint64_t v50 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v49 + 48);
  uint64_t result = v50(v47, 1, v48);
  uint64_t v52 = v113;
  if (result == 1)
  {
    __break(1u);
    goto LABEL_12;
  }
  sub_250F0CE60();
  uint64_t v53 = v47;
  id v54 = *(void (**)(char *, uint64_t))(v49 + 8);
  v54(v53, v48);
  sub_250F0CAA0();
  uint64_t result = v50(v52, 1, v48);
  if (result == 1)
  {
LABEL_12:
    __break(1u);
    return result;
  }
  sub_250F0CE60();
  v54(v52, v48);
  sub_250F0CAA0();
  uint64_t v55 = sub_250F0C1C0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v55 - 8) + 56))(v101, 1, 1, v55);
  sub_250F0BF70();
  sub_250E8D194(0, (unint64_t *)&unk_26B20F190);
  sub_250EEF700(0, &qword_26B20F2C8, (uint64_t (*)(uint64_t))sub_250EEDC58, MEMORY[0x263F8E0F8]);
  uint64_t v56 = swift_allocObject();
  *(_OWORD *)(v56 + 16) = xmmword_250F0F080;
  uint64_t v57 = sub_250F0BFC0();
  uint64_t v58 = sub_250E8D194(0, &qword_26B20F278);
  *(void *)(v56 + 56) = v58;
  uint64_t v59 = sub_250EEDCB0((unint64_t *)&unk_26B20F280, &qword_26B20F278);
  *(void *)(v56 + 64) = v59;
  *(void *)(v56 + 32) = v57;
  uint64_t v60 = sub_250F0BFC0();
  *(void *)(v56 + 96) = v58;
  *(void *)(v56 + 104) = v59;
  *(void *)(v56 + 72) = v60;
  uint64_t v61 = (void *)sub_250F0D190();
  uint64_t v129 = MEMORY[0x263F8EE88];
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  id v63 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, *MEMORY[0x263F09F60]);
  if (v63)
  {
    sub_250EC6B14(aBlock, v63);
  }
  id v64 = objc_msgSend(ObjCClassFromMetadata, sel_quantityTypeForIdentifier_, *MEMORY[0x263F09E08]);
  if (v64)
  {
    sub_250EC6B14(aBlock, v64);
  }
  sub_250E8D194(0, &qword_26B20F250);
  sub_250EEDCB0((unint64_t *)&unk_26B20F258, &qword_26B20F250);
  uint64_t v65 = (void *)sub_250F0D0D0();
  swift_bridgeObjectRelease();
  id v66 = objc_msgSend(v61, sel_hk_filterRepresentationForDataTypes_isSubpredicate_, v65, 0);

  id v67 = objc_allocWithZone(MEMORY[0x263F43460]);
  uint64_t v68 = (char *)v66;
  id v69 = v104;
  uint64_t v70 = (void *)sub_250F0BFC0();
  unint64_t v71 = (void *)sub_250F0BF40();
  unint64_t v113 = v68;
  uint64_t v112 = (char *)objc_msgSend(v67, sel_initWithFilter_options_anchorDate_intervalComponents_profile_, v68, v119, v70, v71, v69);

  uint64_t v72 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v73 = v108;
  uint64_t v74 = *(void (**)(char *, char *, uint64_t))(v108 + 16);
  id v122 = v61;
  unint64_t v75 = v105;
  v74(v105, v123, v124);
  uint64_t v76 = v106;
  id v77 = *(void (**)(char *, uint64_t, uint64_t))(v106 + 16);
  uint64_t v78 = v118;
  v77(v116, v126, v118);
  v77(v117, v127, v78);
  unint64_t v79 = (*(unsigned __int8 *)(v73 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v73 + 80);
  unint64_t v80 = (v103 + v79 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v81 = *(unsigned __int8 *)(v76 + 80);
  uint64_t v82 = (v81 + v80 + 8) & ~v81;
  uint64_t v83 = (v102 + v81 + v82) & ~v81;
  unint64_t v84 = (v102 + v83 + 7) & 0xFFFFFFFFFFFFFFF8;
  id v85 = (char *)swift_allocObject();
  uint64_t v86 = v107;
  *((void *)v85 + 2) = v72;
  *((void *)v85 + 3) = v86;
  uint64_t v87 = v121;
  *((void *)v85 + 4) = v120;
  *((void *)v85 + 5) = v87;
  *((void *)v85 + 6) = v119;
  (*(void (**)(char *, char *, uint64_t))(v73 + 32))(&v85[v79], v75, v124);
  unint64_t v89 = v115;
  unint64_t v88 = v116;
  *(void *)&v85[v80] = v115;
  uint64_t v90 = *(void (**)(char *, char *, uint64_t))(v76 + 32);
  uint64_t v91 = v118;
  v90(&v85[v82], v88, v118);
  v90(&v85[v83], v117, v91);
  *(void *)&v85[v84] = v109;
  aBlock[4] = sub_250EEDEE0;
  aBlock[5] = v85;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_250EED82C;
  uint64_t aBlock[3] = &block_descriptor_9_0;
  uint64_t v92 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  id v93 = v89;
  swift_release();
  id v94 = v112;
  objc_msgSend(v112, sel_fetchTrainingLoadCollectionWithCompletion_, v92);
  _Block_release(v92);

  (*(void (**)(char *, uint64_t))(v110 + 8))(v125, v111);
  id v95 = *(void (**)(char *, uint64_t))(v73 + 8);
  uint64_t v96 = v124;
  v95(v123, v124);
  v95(v114, v96);
  os_log_t v97 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
  v97(v127, v91);
  return ((uint64_t (*)(uint64_t, uint64_t))v97)(v126, v91);
}

uint64_t sub_250EE6F44(uint64_t a1, unint64_t a2, void *a3, void (*a4)(char *, uint64_t, uint64_t), void *a5)
{
  id v379 = a5;
  v391 = a4;
  id v339 = a3;
  v404[5] = *MEMORY[0x263EF8340];
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v338 = sub_250F0C0C0();
  uint64_t v337 = *(void *)(v338 - 8);
  MEMORY[0x270FA5388](v338);
  uint64_t v336 = (char *)v317 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C788(0);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v357 = (char *)v317 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = (void *)sub_250F0C060();
  uint64_t v320 = *(v11 - 1);
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  v393 = (char *)v317 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  v396 = (char *)v317 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  v400 = (char *)v317 - v17;
  MEMORY[0x270FA5388](v16);
  v399 = (char *)v317 - v18;
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250EEF700(0, &qword_26B20EE20, MEMORY[0x263F090E8], MEMORY[0x263F8D8F0]);
  uint64_t v21 = MEMORY[0x270FA5388](v20 - 8);
  v375 = (char *)v317 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v21);
  os_log_t v398 = (os_log_t)((char *)v317 - v23);
  sub_250E8E700();
  uint64_t v381 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  v373 = (char *)v317 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v25);
  v372 = (char *)v317 - v27;
  sub_250EC18D8(0);
  v376 = v28;
  uint64_t v29 = MEMORY[0x270FA5388](v28);
  uint64_t v361 = (uint64_t)v317 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v374 = (uint64_t)v317 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  v371 = ((char *)v317 - v34);
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  v397 = (void (**)(char *, char *, id))((char *)v317 - v36);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v331 = (char *)v317 - v38;
  MEMORY[0x270FA5388](v37);
  v380 = (char *)v317 - v39;
  sub_250EEF4C0(0);
  uint64_t v329 = v40;
  uint64_t v41 = MEMORY[0x270FA5388](v40);
  v364 = (char *)v317 - ((v42 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v328 = (uint64_t)v317 - v44;
  MEMORY[0x270FA5388](v43);
  v394 = ((char *)v317 - v45);
  uint64_t v335 = sub_250F0BF80();
  uint64_t v334 = *(void *)(v335 - 8);
  uint64_t v46 = MEMORY[0x270FA5388](v335);
  v350 = ((char *)v317 - ((v47 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v46);
  v347 = ((char *)v317 - v48);
  uint64_t v387 = sub_250F0CE70();
  v341 = *(NSObject **)(v387 - 8);
  uint64_t v49 = MEMORY[0x270FA5388](v387);
  v367 = (char *)v317 - ((v50 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = MEMORY[0x270FA5388](v49);
  v383 = (char *)v317 - v52;
  uint64_t v53 = MEMORY[0x270FA5388](v51);
  unint64_t v360 = (char *)v317 - v54;
  uint64_t v55 = MEMORY[0x270FA5388](v53);
  uint64_t v359 = (char *)v317 - v56;
  uint64_t v57 = MEMORY[0x270FA5388](v55);
  v392 = (unsigned int (**)(id, uint64_t, id))((char *)v317 - v58);
  uint64_t v59 = MEMORY[0x270FA5388](v57);
  unint64_t v324 = (char *)v317 - v60;
  uint64_t v61 = MEMORY[0x270FA5388](v59);
  v366 = (char **)((char *)v317 - v62);
  uint64_t v63 = MEMORY[0x270FA5388](v61);
  v370 = (char *)v317 - v64;
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  os_log_t v356 = (char *)v317 - v66;
  uint64_t v67 = MEMORY[0x270FA5388](v65);
  long long v327 = (char *)v317 - v68;
  uint64_t v69 = MEMORY[0x270FA5388](v67);
  unint64_t v71 = (char *)v317 - v70;
  MEMORY[0x270FA5388](v69);
  Class v355 = (char *)v317 - v72;
  sub_250EEF700(0, &qword_26B20E4F0, MEMORY[0x263F07920], v19);
  uint64_t v74 = MEMORY[0x270FA5388](v73 - 8);
  v344 = (char *)v317 - ((v75 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v76 = MEMORY[0x270FA5388](v74);
  uint64_t v358 = (char *)v317 - v77;
  uint64_t v78 = MEMORY[0x270FA5388](v76);
  v352 = (char *)v317 - v79;
  MEMORY[0x270FA5388](v78);
  v395 = ((char *)v317 - v80);
  uint64_t v382 = sub_250F0C1B0();
  uint64_t v81 = *(void *)(v382 - 8);
  MEMORY[0x270FA5388](v382);
  uint64_t v83 = (char *)v317 - ((v82 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_250F0CCB0();
  uint64_t v351 = *(void *)(v84 - 8);
  uint64_t v85 = MEMORY[0x270FA5388](v84);
  v390 = (char *)v317 - ((v86 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = MEMORY[0x270FA5388](v85);
  uint64_t v323 = (char *)v317 - v88;
  MEMORY[0x270FA5388](v87);
  uint64_t v90 = (char *)v317 - v89;
  sub_250F0CC90();
  swift_bridgeObjectRetain_n();
  uint64_t v91 = sub_250F0CCA0();
  os_log_type_t v92 = sub_250F0D1D0();
  LODWORD(v389) = v92;
  BOOL v93 = os_log_type_enabled(v91, v92);
  uint64_t v354 = v71;
  uint64_t v342 = v84;
  unint64_t v330 = a2;
  uint64_t v322 = a1;
  uint64_t v321 = ObjectType;
  if (v93)
  {
    uint64_t v94 = a1;
    unint64_t v95 = a2;
    uint64_t v96 = swift_slowAlloc();
    v388 = swift_slowAlloc();
    aBlock[0] = v388;
    *(_DWORD *)uint64_t v96 = 136446466;
    v386 = (char *)(v96 + 4);
    uint64_t v97 = sub_250F0D7B0();
    v404[0] = sub_250E8BE44(v97, v98, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(v96 + 12) = 2080;
    swift_bridgeObjectRetain();
    v404[0] = sub_250E8BE44(v94, v95, (uint64_t *)aBlock);
    unint64_t v71 = v354;
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_250E86000, v91, (os_log_type_t)v389, "[%{public}s:%s] Query Type is All Day", (uint8_t *)v96, 0x16u);
    uint64_t v99 = v388;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v99, -1, -1);
    MEMORY[0x25338EC30](v96, -1, -1);

    id v100 = *(void (**)(char *, uint64_t))(v351 + 8);
    v100(v90, v342);
  }
  else
  {

    swift_bridgeObjectRelease_n();
    id v100 = *(void (**)(char *, uint64_t))(v351 + 8);
    v100(v90, v84);
  }
  uint64_t v101 = (char *)v395;
  sub_250F0CAA0();
  uint64_t v102 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
  uint64_t v103 = v382;
  uint64_t v378 = v81 + 48;
  v377 = v102;
  unsigned int v104 = v102((uint64_t)v101, 1, v382);
  uint64_t v105 = (uint64_t)v355;
  if (v104 == 1) {
    goto LABEL_130;
  }
  uint64_t v340 = v81;
  (*(void (**)(char *, char *, uint64_t))(v81 + 32))(v83, v101, v103);
  sub_250EE5C24(v105, (uint64_t)v71);
  sub_250F0CE00();
  v333 = v83;
  sub_250F0CE00();
  uint64_t v106 = (void *)sub_250F0BF40();
  uint64_t v107 = (void *)sub_250F0BF40();
  id v108 = (id)HDActivityCacheEntityPredicateForCachesInDateComponentsRange();

  id v109 = objc_allocWithZone(MEMORY[0x263F43140]);
  id v110 = objc_msgSend(v109, sel_initWithProfile_, v391);
  uint64_t v111 = sub_250EB12C0();
  uint64_t v113 = v112;
  os_log_t v114 = *(os_log_t *)(v112 + 8);
  v404[3] = v111;
  v404[4] = v112;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v404);
  uint64_t v363 = v111;
  uint64_t v365 = v113;
  ((void (*)(void, uint64_t, uint64_t, uint64_t))v114)(0, 1, v111, v113);
  unint64_t v401 = MEMORY[0x263F8EE78];
  id v115 = (void *)swift_allocObject();
  v115[2] = &v401;
  uint64_t v116 = swift_allocObject();
  *(void *)(v116 + 16) = sub_250EEF774;
  *(void *)(v116 + 24) = v115;
  aBlock[4] = sub_250EB7800;
  aBlock[5] = (id)v116;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_250EB7248;
  uint64_t aBlock[3] = &block_descriptor_18;
  unint64_t v117 = _Block_copy(aBlock);
  uint64_t v118 = (char *)v108;
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  id v332 = v110;
  unsigned int v119 = objc_msgSend(v110, sel_enumerateActivitySummariesWithPredicate_error_handler_, v118, aBlock, v117);
  _Block_release(v117);

  id v120 = aBlock[0];
  unint64_t isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    goto LABEL_115;
  }
  if (!v119)
  {
    unint64_t v326 = v100;
    unint64_t v325 = v118;
    uint64_t v155 = (void *)sub_250F0BFA0();

    swift_willThrow();
    uint64_t v156 = v390;
    sub_250F0CC90();
    unint64_t v157 = v330;
    swift_bridgeObjectRetain();
    id v158 = v155;
    swift_bridgeObjectRetain();
    id v159 = v155;
    uint64_t v160 = sub_250F0CCA0();
    os_log_type_t v161 = sub_250F0D1D0();
    if (os_log_type_enabled(v160, v161))
    {
      uint64_t v162 = swift_slowAlloc();
      uint64_t v163 = (void *)swift_slowAlloc();
      objc_super v164 = (void *)swift_slowAlloc();
      aBlock[0] = v164;
      *(_DWORD *)uint64_t v162 = 136446722;
      uint64_t v165 = sub_250F0D7B0();
      v319 = v115;
      uint64_t v402 = sub_250E8BE44(v165, v166, (uint64_t *)aBlock);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v162 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v402 = sub_250E8BE44(v322, v157, (uint64_t *)aBlock);
      sub_250F0D300();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v162 + 22) = 2112;
      id v167 = v155;
      uint64_t v168 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v402 = v168;
      sub_250F0D300();
      *uint64_t v163 = v168;
      uint64_t v169 = v335;
      uint64_t v170 = v334;

      _os_log_impl(&dword_250E86000, v160, v161, "[%{public}s:%s] Initial Activity Summary Query errored with %@", (uint8_t *)v162, 0x20u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v163, -1, -1);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v164, -1, -1);
      MEMORY[0x25338EC30](v162, -1, -1);

      v326(v390, v342);
      uint64_t v123 = v387;
      uint64_t v124 = v354;
      unint64_t isEscapingClosureAtFileLocation = (unint64_t)v355;
    }
    else
    {
      swift_bridgeObjectRelease_n();

      v326(v156, v342);
      uint64_t v123 = v387;
      uint64_t v124 = v354;
      unint64_t isEscapingClosureAtFileLocation = (unint64_t)v355;
      uint64_t v170 = v334;
      uint64_t v169 = v335;
    }
    sub_250F0CF80();
    id v171 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v172 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    id v173 = objc_msgSend(v171, sel_initWithDomain_code_userInfo_, v172, 100, 0);

    uint64_t v174 = (void *)sub_250F0BF90();
    id v175 = objc_msgSend(v348, sel_queryUUID);
    uint64_t v176 = v336;
    sub_250F0C0A0();

    uint64_t v177 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v337 + 8))(v176, v338);
    objc_msgSend(v339, sel_client_deliverError_forQuery_, v174, v177);

    os_log_t v114 = v350;
    id v178 = v325;
    goto LABEL_48;
  }
  uint64_t v116 = v401;
  os_log_t v114 = v350;
  unint64_t isEscapingClosureAtFileLocation = (unint64_t)v355;
  if (v401 >> 62) {
    goto LABEL_118;
  }
  uint64_t v122 = *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v123 = v387;
  uint64_t v124 = v354;
  if (!v122)
  {
    swift_bridgeObjectRelease();
    uint64_t v179 = v118;
    id v180 = (void *)sub_250F0D030();
    id v181 = objc_msgSend(v348, sel_queryUUID);
    uint64_t v182 = v336;
    sub_250F0C0A0();

    uint64_t v183 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v337 + 8))(v182, v338);
    objc_msgSend(v339, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v180, v183);

    id v178 = v332;
    uint64_t v170 = v334;
    uint64_t v169 = v335;
    goto LABEL_48;
  }
  if ((v116 & 0xC000000000000001) != 0)
  {
    id v125 = (id)MEMORY[0x25338E0A0](0, v116);
  }
  else
  {
    if (!*(void *)((v116 & 0xFFFFFFFFFFFFFF8) + 0x10))
    {
      __break(1u);
      goto LABEL_121;
    }
    id v125 = *(id *)(v116 + 32);
  }
  uint64_t v126 = v125;
  swift_bridgeObjectRelease();
  uint64_t v349 = v126;
  id v127 = objc_msgSend(v126, sel_activeEnergyBurned);
  id v128 = objc_msgSend(v127, sel__unit);

  id v129 = v128;
  unint64_t v130 = swift_bridgeObjectRetain();
  double v131 = sub_250EEE020(v130, (uint64_t)v129, 0.0);
  swift_bridgeObjectRelease();
  id v318 = v129;

  uint64_t v384 = sub_250E92C80();
  if ((sub_250F0CF00() & 1) == 0)
  {
LABEL_121:
    __break(1u);
LABEL_122:
    __break(1u);
    goto LABEL_123;
  }
  unint64_t v326 = v100;
  v317[1] = 0;
  unint64_t v325 = v118;
  v319 = v115;
  uint64_t v132 = v381;
  uint64_t v133 = v372;
  unint64_t v134 = &v372[*(int *)(v381 + 48)];
  uint64_t v135 = v341;
  uint64_t v137 = v341 + 2;
  uint64_t isa = (void (*)(char *, uint64_t, uint64_t))v341[2].isa;
  v391 = isa;
  isa(v372, isEscapingClosureAtFileLocation, v123);
  v395 = v134;
  isa(v134, (uint64_t)v124, v123);
  uint64_t v138 = v373;
  uint64_t v139 = &v373[*(int *)(v132 + 48)];
  isa(v373, (uint64_t)v133, v123);
  isa(v139, (uint64_t)v134, v123);
  uint64_t v118 = (char *)&v135[4];
  unint64_t v140 = (void (*)(char *, char *, uint64_t))v135[4].isa;
  v140(v331, v138, v123);
  uint64_t v142 = (void (*)(char *, uint64_t))v135[1].isa;
  uint64_t v141 = v135 + 1;
  v142(v139, v123);
  uint64_t v143 = &v138[*(int *)(v381 + 48)];
  v140(v138, v133, v123);
  v140(v143, (char *)v395, v123);
  uint64_t v144 = (uint64_t)v331;
  v140(&v331[SHIDWORD(v376[4].isa)], v143, v123);
  v142(v138, v123);
  uint64_t v145 = (uint64_t)v380;
  sub_250EEF698(v144, (uint64_t)v380, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v146 = v328;
  sub_250EEF630(v145, v328, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v147 = v327;
  v388 = v137;
  v391(v327, v145, v123);
  sub_250EEF78C(v145, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v148 = v329;
  uint64_t v149 = v146 + *(int *)(v329 + 36);
  v386 = v118;
  v385 = v140;
  v140((char *)v149, v147, v123);
  id v100 = (void (*)(char *, uint64_t))v394;
  sub_250EEF698(v146, (uint64_t)v394, (uint64_t (*)(void))sub_250EEF4C0);
  int v150 = (char *)v100 + *(int *)(v148 + 36);
  uint64_t v151 = (char *)v100 + SHIDWORD(v376[4].isa);
  uint64_t v368 = sub_250EEDB84((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
  char v152 = sub_250F0CF40();
  v389 = (char *)v141;
  uint64_t v153 = v141 + 6;
  v390 = (char *)v142;
  v369 = v141 + 6;
  v353 = v11;
  if (v152)
  {
    uint64_t v154 = 0;
    id v115 = v153->isa;
    goto LABEL_30;
  }
  v317[0] = (unint64_t)&v141[6] & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  os_log_t v114 = 0;
  uint64_t v345 = (void (**)(uint64_t, uint64_t))(v340 + 8);
  int64_t i = v389;
  v343 = v151;
  uint64_t v346 = v150;
  do
  {
    uint64_t v185 = v150;
    unint64_t isEscapingClosureAtFileLocation = (unint64_t)v388;
    id v115 = v391;
    v391((char *)v398, (uint64_t)v185, v123);
    uint64_t v116 = v123;
    if ((sub_250F0CF00() & 1) == 0) {
      goto LABEL_109;
    }
    v395 = v114;
    uint64_t v186 = v381;
    uint64_t v187 = v151;
    uint64_t v188 = v372;
    uint64_t v189 = &v372[*(int *)(v381 + 48)];
    ((void (*)(char *, void (*)(char *, uint64_t), uint64_t))v115)(v372, v100, v123);
    ((void (*)(char *, char *, uint64_t))v115)(v189, v187, v123);
    os_log_type_t v190 = v373;
    uint64_t v191 = &v373[*(int *)(v186 + 48)];
    ((void (*)(char *, char *, uint64_t))v115)(v373, v188, v123);
    uint64_t v192 = v189;
    ((void (*)(char *, char *, uint64_t))v115)(v191, v189, v123);
    uint64_t v193 = v385;
    v385(v380, v190, v123);
    ((void (*)(char *, uint64_t))v390)(v191, v123);
    uint64_t v194 = &v190[*(int *)(v381 + 48)];
    v193(v190, v188, v123);
    v193(v194, v192, v123);
    os_log_t v114 = v376;
    uint64_t v195 = (uint64_t)v380;
    v193(&v380[SHIDWORD(v376[4].isa)], v194, v123);
    char v196 = v190;
    id v100 = (void (*)(char *, uint64_t))v384;
    ((void (*)(char *, uint64_t))v390)(v196, v123);
    uint64_t v197 = v397;
    sub_250EEF698(v195, (uint64_t)v397, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t v11 = v346;
    uint64_t v116 = sub_250F0CF00();
    int64_t i = v370;
    ((void (*)(char *, void *, uint64_t))v115)(v370, v11, v123);
    uint64_t v198 = (uint64_t)v197;
    uint64_t v118 = (char *)v371;
    sub_250EEF630(v198, (uint64_t)v371, (uint64_t (*)(void))sub_250EC18D8);
    if ((v116 & 1) == 0)
    {
LABEL_110:
      sub_250EEF78C((uint64_t)v118, (uint64_t (*)(void))sub_250EC18D8);
      ((void (*)(char *, uint64_t))v390)(i, v123);
LABEL_111:
      __break(1u);
LABEL_112:
      __break(1u);
      goto LABEL_113;
    }
    uint64_t v116 = sub_250F0CEE0();
    sub_250EEF78C((uint64_t)v118, (uint64_t (*)(void))sub_250EC18D8);
    unint64_t isEscapingClosureAtFileLocation = (unint64_t)v390;
    uint64_t v199 = v389;
    ((void (*)(char *, uint64_t))v390)(i, v123);
    if ((v116 & 1) == 0) {
      goto LABEL_111;
    }
    sub_250EEF78C((uint64_t)v397, (uint64_t (*)(void))sub_250EC18D8);
    aBlock[0] = (id)1;
    sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
    uint64_t v200 = v356;
    sub_250F0D320();
    ((void (*)(void *, uint64_t))isEscapingClosureAtFileLocation)(v11, v123);
    uint64_t v201 = (void (*)(char **, os_log_t, uint64_t))v385;
    v385((char *)v11, v200, v123);
    id v115 = v369->isa;
    os_log_t v202 = v398;
    ((void (*)(os_log_t, void, uint64_t, uint64_t))v369->isa)(v398, 0, 1, v123);
    uint64_t v203 = (uint64_t)v366;
    v201(v366, v202, v123);
    uint64_t v204 = (uint64_t)v352;
    sub_250F0CAA0();
    uint64_t v205 = v382;
    if (v377(v204, 1, v382) == 1)
    {
LABEL_128:
      __break(1u);
LABEL_129:
      __break(1u);
LABEL_130:
      __break(1u);
    }
    uint64_t v116 = sub_250EEE7D8(v349, v203, v204);
    ((void (*)(uint64_t, uint64_t))isEscapingClosureAtFileLocation)(v203, v123);
    (*v345)(v204, v205);
    unint64_t isEscapingClosureAtFileLocation = (unint64_t)v392;
    id v100 = (void (*)(char *, uint64_t))v394;
    if (v116)
    {
      uint64_t v206 = v387;
      unint64_t v207 = v355;
      uint64_t v124 = v324;
      uint64_t v154 = (char *)v395;
      goto LABEL_32;
    }
    os_log_t v114 = v395;
    uint64_t v118 = (char *)&v395->isa + 1;
    if (__OFADD__(v395, 1)) {
      goto LABEL_112;
    }
    int64_t i = v199;
    int v150 = (char *)v11;
    uint64_t v151 = v343;
    uint64_t v123 = v387;
    os_log_t v114 = (os_log_t)((char *)&v395->isa + 1);
  }
  while ((sub_250F0CF40() & 1) == 0);
  uint64_t v154 = v118;
LABEL_30:
  uint64_t v206 = v123;
  ((void (*)(os_log_t, uint64_t, uint64_t, uint64_t))v115)(v398, 1, 1, v123);
  unint64_t v207 = v355;
  unint64_t isEscapingClosureAtFileLocation = (unint64_t)v392;
  uint64_t v124 = v324;
LABEL_32:
  sub_250EEF78C((uint64_t)v394, (uint64_t (*)(void))sub_250EEF4C0);
  uint64_t v208 = sub_250F0CE30();
  uint64_t v209 = sub_250F0CE30();
  uint64_t v210 = v208 - v209;
  if (__OFSUB__(v208, v209)) {
    goto LABEL_122;
  }
  BOOL v211 = __OFSUB__(v210, v154);
  uint64_t v212 = v210 - (void)v154;
  if (v211)
  {
LABEL_123:
    __break(1u);
LABEL_124:
    __break(1u);
    goto LABEL_125;
  }
  os_log_t v356 = (char *)v115;
  if (v212 < 1) {
    double v213 = 0.0;
  }
  else {
    double v213 = v131 / (double)v212;
  }
  unint64_t v214 = v330;
  BOOL v215 = (char *)self;
  id v216 = v318;
  uint64_t v345 = (void (**)(uint64_t, uint64_t))objc_msgSend(v215, sel_quantityWithUnit_doubleValue_, v318, v213);
  v343 = v215;
  uint64_t v346 = objc_msgSend(v215, sel_quantityWithUnit_doubleValue_, v216, 0.0);
  uint64_t v217 = v323;
  sub_250F0CC90();
  char v218 = v124;
  uint64_t v123 = v206;
  os_signpost_type_t v219 = v124;
  uint64_t v220 = (void (*)(unint64_t, char *, uint64_t))v391;
  v391(v218, (uint64_t)v207, v206);
  v220(isEscapingClosureAtFileLocation, v354, v206);
  uint64_t v221 = v217;
  swift_bridgeObjectRetain_n();
  unint64_t v222 = sub_250F0CCA0();
  int v223 = sub_250F0D1D0();
  if (os_log_type_enabled(v222, (os_log_type_t)v223))
  {
    unint64_t isEscapingClosureAtFileLocation = swift_slowAlloc();
    os_signpost_id_t v224 = swift_slowAlloc();
    aBlock[0] = v224;
    *(_DWORD *)unint64_t isEscapingClosureAtFileLocation = 136447234;
    uint64_t v225 = sub_250F0D7B0();
    uint64_t v402 = sub_250E8BE44(v225, v226, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    *(_WORD *)(isEscapingClosureAtFileLocation + 12) = 2080;
    swift_bridgeObjectRetain();
    uint64_t v402 = sub_250E8BE44(v322, v214, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(isEscapingClosureAtFileLocation + 22) = 2048;
    swift_beginAccess();
    os_log_t v398 = v222;
    LODWORD(v397) = v223;
    v395 = v224;
    if (v401 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v227 = sub_250F0D5B0();
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v227 = *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10);
    }
    uint64_t v402 = v227;
    sub_250F0D300();
    *(_WORD *)(isEscapingClosureAtFileLocation + 32) = 2080;
    sub_250EEDB84((unint64_t *)&qword_26B20EE10, MEMORY[0x263F090E8]);
    uint64_t v228 = v324;
    uint64_t v229 = v387;
    uint64_t v230 = sub_250F0D650();
    uint64_t v402 = sub_250E8BE44(v230, v231, (uint64_t *)aBlock);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    uint64_t v232 = (void (*)(unsigned int (**)(id, uint64_t, id), uint64_t))v390;
    ((void (*)(char *, uint64_t))v390)(v228, v229);
    *(_WORD *)(isEscapingClosureAtFileLocation + 42) = 2080;
    uint64_t v233 = v392;
    uint64_t v234 = sub_250F0D650();
    uint64_t v402 = sub_250E8BE44(v234, v235, (uint64_t *)aBlock);
    uint64_t v123 = v229;
    sub_250F0D300();
    swift_bridgeObjectRelease();
    v232(v233, v229);
    os_log_t v236 = v398;
    _os_log_impl(&dword_250E86000, v398, (os_log_type_t)v397, "[%{public}s:%s] Processing %ld Activity Summaries between %s and %s", (uint8_t *)isEscapingClosureAtFileLocation, 0x34u);
    uint64_t v237 = v395;
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v237, -1, -1);
    MEMORY[0x25338EC30](isEscapingClosureAtFileLocation, -1, -1);

    v326(v323, v342);
    uint64_t v124 = v354;
    unint64_t v207 = v355;
  }
  else
  {
    swift_bridgeObjectRelease_n();
    uint64_t v238 = (void (*)(unint64_t, uint64_t))v390;
    ((void (*)(char *, uint64_t))v390)(v219, v123);
    v238(isEscapingClosureAtFileLocation, v123);

    v326(v221, v342);
    uint64_t v124 = v354;
  }
  char v239 = sub_250F0CF00();
  uint64_t v240 = (void (*)(NSObject *, char *, uint64_t))v391;
  if ((v239 & 1) == 0) {
    goto LABEL_124;
  }
  uint64_t v241 = v381;
  uint64_t v242 = v372;
  uint64_t v243 = &v372[*(int *)(v381 + 48)];
  v391(v372, (uint64_t)v207, v123);
  os_log_t v398 = v243;
  v240(v243, v124, v123);
  char v244 = v373;
  uint64_t v245 = &v373[*(int *)(v241 + 48)];
  v391(v373, (uint64_t)v242, v123);
  v391(v245, (uint64_t)v243, v123);
  uint64_t v246 = (uint64_t)v331;
  long long v247 = v385;
  v385(v331, v244, v123);
  uint64_t v248 = v123;
  uint64_t v249 = (void *)v123;
  uint64_t v250 = (void (*)(char *, void *))v390;
  ((void (*)(char *, uint64_t))v390)(v245, v248);
  uint64_t v251 = &v244[*(int *)(v241 + 48)];
  uint64_t v252 = v242;
  id v100 = (void (*)(char *, uint64_t))v384;
  v247(v244, v252, (uint64_t)v249);
  v247(v251, (char *)v398, (uint64_t)v249);
  v247((char *)(v246 + SHIDWORD(v376[4].isa)), v251, (uint64_t)v249);
  v250(v244, v249);
  uint64_t v253 = (uint64_t)v380;
  sub_250EEF698(v246, (uint64_t)v380, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v254 = v328;
  sub_250EEF630(v253, v328, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v255 = v327;
  os_log_t v114 = v388;
  v391(v327, v253, (uint64_t)v249);
  sub_250EEF78C(v253, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v256 = v329;
  v247((char *)(v254 + *(int *)(v329 + 36)), v255, (uint64_t)v249);
  uint64_t v257 = (uint64_t)v364;
  sub_250EEF698(v254, (uint64_t)v364, (uint64_t (*)(void))sub_250EEF4C0);
  uint64_t v258 = v257 + *(int *)(v256 + 36);
  uint64_t v118 = (char *)(v257 + SHIDWORD(v376[4].isa));
  id v115 = v249;
  if ((sub_250F0CF40() & 1) == 0)
  {
    uint64_t v123 = (uint64_t)v114;
    unint64_t isEscapingClosureAtFileLocation = 0;
    v366 = (char **)(v340 + 8);
    v397 = (void (**)(char *, char *, id))&v320[2];
    v394 = v320 + 4;
    v395 = v320 + 7;
    v392 = (unsigned int (**)(id, uint64_t, id))&v320[6];
    os_log_t v398 = v320 + 1;
    uint64_t v351 = v365 + 16;
    v371 = v258;
    v352 = v118;
    do
    {
      uint64_t v274 = v258;
      int64_t i = (char *)v391;
      v391(v375, v274, (uint64_t)v115);
      uint64_t v116 = (uint64_t)v115;
      if ((sub_250F0CF00() & 1) == 0) {
        goto LABEL_106;
      }
      uint64_t v275 = v118;
      uint64_t v276 = v381;
      uint64_t v277 = v257;
      uint64_t v278 = i;
      uint64_t v279 = v372;
      uint64_t v280 = &v372[*(int *)(v381 + 48)];
      ((void (*)(char *, uint64_t, void *))v278)(v372, v277, v115);
      v370 = v280;
      ((void (*)(char *, char *, void *))v278)(v280, v275, v115);
      uint64_t v281 = v373;
      uint64_t v282 = &v373[*(int *)(v276 + 48)];
      v391(v373, (uint64_t)v279, (uint64_t)v115);
      v391(v282, (uint64_t)v280, (uint64_t)v115);
      uint64_t v283 = (uint64_t)v380;
      id v284 = v385;
      v385(v380, v281, (uint64_t)v115);
      uint64_t v11 = v389;
      ((void (*)(char *, void *))v390)(v282, v115);
      id v285 = &v281[*(int *)(v276 + 48)];
      uint64_t v286 = v279;
      int64_t i = v390;
      v284(v281, v286, (uint64_t)v115);
      v284(v285, v370, (uint64_t)v115);
      uint64_t v118 = (char *)v376;
      v284((char *)(v283 + SHIDWORD(v376[4].isa)), v285, (uint64_t)v115);
      os_log_t v114 = v371;
      ((void (*)(char *, void *))i)(v281, v115);
      uint64_t v287 = v283;
      id v100 = (void (*)(char *, uint64_t))v384;
      uint64_t v288 = v374;
      sub_250EEF698(v287, v374, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v116 = sub_250F0CF00();
      uint64_t v257 = (uint64_t)v360;
      v391(v360, (uint64_t)v114, (uint64_t)v115);
      uint64_t v289 = v288;
      uint64_t v123 = v361;
      sub_250EEF630(v289, v361, (uint64_t (*)(void))sub_250EC18D8);
      if ((v116 & 1) == 0) {
        goto LABEL_107;
      }
      uint64_t v116 = sub_250F0CEE0();
      sub_250EEF78C(v123, (uint64_t (*)(void))sub_250EC18D8);
      ((void (*)(uint64_t, void *))i)(v257, v115);
      if ((v116 & 1) == 0) {
        goto LABEL_108;
      }
      sub_250EEF78C(v374, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v402 = 1;
      sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
      v290 = v359;
      sub_250F0D320();
      ((void (*)(os_log_t, void *))i)(v114, v115);
      os_log_t v291 = v114;
      os_log_t v114 = (os_log_t)v385;
      v385((char *)v291, v290, (uint64_t)v115);
      uint64_t v292 = v375;
      ((void (*)(char *, void, uint64_t, void *))v356)(v375, 0, 1, v115);
      ((void (*)(char *, char *, void *))v114)(v383, v292, v115);
      v293 = v358;
      sub_250F0CAA0();
      uint64_t v294 = v382;
      if (v377((uint64_t)v293, 1, v382) == 1)
      {
        __break(1u);
        goto LABEL_128;
      }
      sub_250F0CE60();
      v370 = *v366;
      ((void (*)(char *, uint64_t))v370)(v293, v294);
      swift_beginAccess();
      uint64_t v118 = v357;
      uint64_t v11 = v353;
      uint64_t v257 = (uint64_t)v364;
      for (int64_t i = v364; ; v257 = (uint64_t)i)
      {
        uint64_t v116 = v401;
        if (v401 >> 62)
        {
          swift_bridgeObjectRetain();
          uint64_t v123 = sub_250F0D5B0();
          swift_bridgeObjectRelease();
        }
        else
        {
          uint64_t v123 = *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        (*v397)(v400, v399, v11);
        if ((uint64_t)isEscapingClosureAtFileLocation >= v123)
        {
          id v115 = v398->isa;
          ((void (*)(char *, void *))v398->isa)(v400, v11);
          goto LABEL_76;
        }
        swift_beginAccess();
        if ((v401 & 0xC000000000000001) != 0)
        {
          id v295 = (id)MEMORY[0x25338E0A0](isEscapingClosureAtFileLocation);
        }
        else
        {
          if ((isEscapingClosureAtFileLocation & 0x8000000000000000) != 0)
          {
            __break(1u);
LABEL_105:
            __break(1u);
LABEL_106:
            __break(1u);
LABEL_107:
            sub_250EEF78C(v123, (uint64_t (*)(void))sub_250EC18D8);
            ((void (*)(uint64_t, void *))i)(v257, v115);
LABEL_108:
            __break(1u);
LABEL_109:
            __break(1u);
            goto LABEL_110;
          }
          if (isEscapingClosureAtFileLocation >= *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10)) {
            goto LABEL_105;
          }
          id v295 = *(id *)(v401 + 8 * isEscapingClosureAtFileLocation + 32);
        }
        uint64_t v296 = v295;
        swift_endAccess();
        id v297 = objc_msgSend(v296, sel__endDate);

        if (v297)
        {
          unint64_t v298 = v393;
          sub_250F0C030();

          uint64_t v299 = (void (*)(void, void, void))v394->isa;
          ((void (*)(char *, char *, void *))v394->isa)(v118, v298, v11);
          ((void (*)(char *, void, uint64_t, void *))v395->isa)(v118, 0, 1, v11);
          if ((*v392)(v118, 1, v11) != 1)
          {
            uint64_t v300 = v396;
            v299(v396, v118, v11);
            goto LABEL_70;
          }
        }
        else
        {
          ((void (*)(char *, uint64_t, uint64_t, void *))v395->isa)(v118, 1, 1, v11);
        }
        uint64_t v300 = v396;
        sub_250F0C050();
        sub_250EEF78C((uint64_t)v118, (uint64_t (*)(void))sub_250E8C788);
LABEL_70:
        uint64_t v301 = v400;
        char v302 = sub_250F0BFE0();
        os_log_t v114 = v398;
        id v115 = v398->isa;
        ((void (*)(char *, void *))v398->isa)(v300, v11);
        ((void (*)(char *, void *))v115)(v301, v11);
        if ((v302 & 1) == 0) {
          break;
        }
        ++isEscapingClosureAtFileLocation;
      }
      uint64_t v257 = (uint64_t)i;
LABEL_76:
      if (v401 >> 62)
      {
        swift_bridgeObjectRetain();
        uint64_t v303 = sub_250F0D5B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v303 = *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10);
      }
      uint64_t v118 = v367;
      uint64_t v116 = v387;
      v391(v367, (uint64_t)v383, v387);
      if ((uint64_t)isEscapingClosureAtFileLocation >= v303)
      {
        v308 = (void (*)(char *, uint64_t))v390;
        ((void (*)(char *, uint64_t))v390)(v118, v116);
LABEL_93:
        uint64_t v123 = (uint64_t)v388;
        if (isEscapingClosureAtFileLocation)
        {
          uint64_t v270 = (void (**)(uint64_t, uint64_t))v346;
          uint64_t v271 = v383;
          uint64_t v272 = v383;
          uint64_t v273 = 0;
        }
        else
        {
          uint64_t v270 = v345;
          uint64_t v271 = v383;
          uint64_t v272 = v383;
          uint64_t v273 = 1;
        }
        (*(void (**)(void (**)(uint64_t, uint64_t), char *, uint64_t, uint64_t, uint64_t))v351)(v270, v272, v273, v363, v365);
        goto LABEL_52;
      }
      swift_beginAccess();
      if ((v401 & 0xC000000000000001) == 0)
      {
        if ((isEscapingClosureAtFileLocation & 0x8000000000000000) == 0)
        {
          if (isEscapingClosureAtFileLocation < *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            id v304 = *(id *)(v401 + 8 * isEscapingClosureAtFileLocation + 32);
            goto LABEL_83;
          }
LABEL_114:
          __break(1u);
LABEL_115:
          __break(1u);
LABEL_116:
          __break(1u);
          goto LABEL_117;
        }
LABEL_113:
        __break(1u);
        goto LABEL_114;
      }
      id v304 = (id)MEMORY[0x25338E0A0](isEscapingClosureAtFileLocation);
LABEL_83:
      uint64_t v305 = v304;
      swift_endAccess();
      uint64_t v306 = (uint64_t)v344;
      sub_250F0CAA0();
      uint64_t v118 = (char *)v382;
      if (v377(v306, 1, v382) == 1) {
        goto LABEL_129;
      }
      uint64_t v307 = (uint64_t)v367;
      uint64_t v116 = sub_250EEE7D8(v305, (uint64_t)v367, v306);

      os_log_t v114 = (os_log_t)v390;
      ((void (*)(uint64_t, uint64_t))v390)(v307, v387);
      ((void (*)(uint64_t, char *))v370)(v306, v118);
      id v100 = (void (*)(char *, uint64_t))v384;
      uint64_t v257 = (uint64_t)i;
      v308 = (void (*)(char *, uint64_t))v114;
      if ((v116 & 1) == 0) {
        goto LABEL_93;
      }
      swift_beginAccess();
      if ((v401 & 0xC000000000000001) == 0)
      {
        if ((isEscapingClosureAtFileLocation & 0x8000000000000000) != 0) {
          goto LABEL_116;
        }
        if (isEscapingClosureAtFileLocation < *(void *)((v401 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v309 = *(id *)(v401 + 8 * isEscapingClosureAtFileLocation + 32);
          goto LABEL_89;
        }
LABEL_117:
        __break(1u);
LABEL_118:
        swift_bridgeObjectRetain();
        uint64_t v122 = sub_250F0D5B0();
        goto LABEL_9;
      }
      id v309 = (id)MEMORY[0x25338E0A0](isEscapingClosureAtFileLocation);
LABEL_89:
      v310 = v309;
      swift_endAccess();
      os_log_t v114 = v310;
      id v311 = [v114 activityMoveMode];
      id v312 = [v114 activeEnergyBurned];
      id v313 = v312;
      if (v311 != (id)1)
      {
        id v314 = objc_msgSend(v312, sel__unit);

        id v313 = objc_msgSend(v343, sel_quantityWithUnit_doubleValue_, v314, 0.0);
      }
      ++isEscapingClosureAtFileLocation;
      uint64_t v271 = v383;
      (*(void (**)(id, char *, void, uint64_t))(v365 + 16))(v313, v383, 0, v363);

      uint64_t v123 = (uint64_t)v388;
LABEL_52:
      ((void (*)(char *, void *))v115)(v399, v11);
      id v115 = (void *)v387;
      v308(v271, v387);
      uint64_t v258 = (uint64_t)v371;
      uint64_t v118 = v352;
    }
    while ((sub_250F0CF40() & 1) == 0);
  }
  ((void (*)(char *, uint64_t, uint64_t, void *))v356)(v375, 1, 1, v115);
  sub_250EEF78C(v257, (uint64_t (*)(void))sub_250EEF4C0);
  unint64_t isEscapingClosureAtFileLocation = (unint64_t)v355;
  uint64_t v124 = v354;
  unint64_t v259 = (*(uint64_t (**)(char *, char *, uint64_t))(v365 + 24))(v355, v354, v363);
  id v260 = v379;
  unint64_t v261 = sub_250EEE270(v259, (uint64_t)v260);
  swift_bridgeObjectRelease();

  uint64_t v123 = (uint64_t)v115;
  if (v261 >> 62)
  {
LABEL_125:
    sub_250F0D5A0();
    swift_bridgeObjectRelease();
    id v263 = v339;
    uint64_t v169 = v335;
    uint64_t v170 = v334;
    goto LABEL_47;
  }
  swift_bridgeObjectRetain();
  sub_250F0D690();
  uint64_t v262 = swift_dynamicCastMetatype();
  id v263 = v339;
  uint64_t v169 = v335;
  uint64_t v170 = v334;
  if (!v262)
  {
    uint64_t v315 = *(void *)((v261 & 0xFFFFFFFFFFFFFF8) + 0x10);
    if (v315)
    {
      uint64_t v316 = (void *)((v261 & 0xFFFFFFFFFFFFFF8) + 32);
      do
      {
        if (!*v316) {
          break;
        }
        ++v316;
        --v315;
      }
      while (v315);
    }
  }
  swift_bridgeObjectRelease();
LABEL_47:
  uint64_t v264 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v265 = objc_msgSend(v348, sel_queryUUID);
  uint64_t v266 = v336;
  sub_250F0C0A0();

  id v178 = (id)sub_250F0C080();
  (*(void (**)(char *, uint64_t))(v337 + 8))(v266, v338);
  objc_msgSend(v263, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v264, v178);

  os_log_t v114 = v350;
LABEL_48:

  uint64_t v267 = *(void (**)(os_log_t, uint64_t))(v170 + 8);
  v267(v114, v169);
  v267(v347, v169);
  uint64_t v268 = (void (*)(char *, uint64_t))v341[1].isa;
  v268(v124, v123);
  v268((char *)isEscapingClosureAtFileLocation, v123);
  (*(void (**)(char *, uint64_t))(v340 + 8))(v333, v382);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v404);
  return swift_release();
}

id sub_250EEA4BC()
{
  uint64_t v1 = OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit;
  uint64_t v2 = *(void **)(v0
                + OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit);
  if (v2)
  {
    id v3 = *(id *)(v0
               + OBJC_IVAR____TtC19HealthBalanceDaemon30TrainingLoadSummaryQueryServer____lazy_storage___loadBaselineUnit);
  }
  else
  {
    uint64_t v4 = self;
    id v5 = objc_msgSend(v4, sel_appleEffortScoreUnit);
    id v6 = objc_msgSend(v4, sel_secondUnit);
    id v7 = objc_msgSend(v5, sel_unitMultipliedByUnit_, v6);

    uint64_t v8 = *(void **)(v0 + v1);
    *(void *)(v0 + v1) = v7;
    id v3 = v7;

    uint64_t v2 = 0;
  }
  id v9 = v2;
  return v3;
}

uint64_t sub_250EEA58C(unint64_t a1, uint64_t a2)
{
  uint64_t v59 = a2;
  uint64_t v58 = sub_250F0BF80();
  uint64_t v51 = *(void (***)(char *, uint64_t))(v58 - 8);
  MEMORY[0x270FA5388](v58);
  uint64_t v57 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_250F0BF30();
  id v5 = *(void (***)(char *, uint64_t))(v56 - 8);
  MEMORY[0x270FA5388](v56);
  uint64_t v55 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v54 = sub_250F0C060();
  id v7 = *(char **)(v54 - 8);
  MEMORY[0x270FA5388](v54);
  uint64_t v61 = (char *)&v44 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0C120();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v12 = (char *)&v44 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_250F0C1B0();
  uint64_t v44 = *(void *)(v13 - 8);
  uint64_t v45 = v13;
  MEMORY[0x270FA5388](v13);
  uint64_t v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, *MEMORY[0x263F07740], v9);
  uint64_t v60 = v15;
  sub_250F0C130();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v16 = sub_250F0D080();
  *(void *)(v16 + 16) = 56;
  *(_OWORD *)(v16 + 32) = 0u;
  uint64_t v46 = v16 + 32;
  *(_OWORD *)(v16 + 48) = 0u;
  *(_OWORD *)(v16 + 64) = 0u;
  *(_OWORD *)(v16 + 80) = 0u;
  *(_OWORD *)(v16 + 96) = 0u;
  *(_OWORD *)(v16 + 112) = 0u;
  *(_OWORD *)(v16 + 128) = 0u;
  *(_OWORD *)(v16 + 144) = 0u;
  *(_OWORD *)(v16 + 160) = 0u;
  *(_OWORD *)(v16 + 176) = 0u;
  *(_OWORD *)(v16 + 192) = 0u;
  *(_OWORD *)(v16 + 208) = 0u;
  *(_OWORD *)(v16 + 224) = 0u;
  *(_OWORD *)(v16 + 240) = 0u;
  *(_OWORD *)(v16 + 256) = 0u;
  *(_OWORD *)(v16 + 272) = 0u;
  *(_OWORD *)(v16 + 288) = 0u;
  *(_OWORD *)(v16 + 304) = 0u;
  *(_OWORD *)(v16 + 320) = 0u;
  *(_OWORD *)(v16 + 336) = 0u;
  *(_OWORD *)(v16 + 352) = 0u;
  *(_OWORD *)(v16 + 368) = 0u;
  *(_OWORD *)(v16 + 384) = 0u;
  *(_OWORD *)(v16 + 400) = 0u;
  *(_OWORD *)(v16 + 416) = 0u;
  *(_OWORD *)(v16 + 432) = 0u;
  *(_OWORD *)(v16 + 448) = 0u;
  uint64_t v47 = v16;
  *(_OWORD *)(v16 + 464) = 0u;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v17 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  uint64_t result = swift_bridgeObjectRetain();
  if (!v17)
  {
LABEL_25:
    swift_bridgeObjectRelease();
    BOOL v43 = sub_250EEEF50(v47);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v44 + 8))(v60, v45);
    return v43;
  }
  while (2)
  {
    if (v17 >= 1)
    {
      uint64_t v19 = 0;
      unint64_t v20 = a1 & 0xC000000000000001;
      uint64_t v53 = v5 + 1;
      unsigned int v52 = *MEMORY[0x263F07870];
      ++v51;
      uint64_t v48 = (void (**)(char *, uint64_t))(v7 + 8);
      uint64_t v21 = &selRef_minimum;
      uint64_t v22 = &off_26535C000;
      long long v50 = xmmword_250F0F260;
      unint64_t v49 = a1 & 0xC000000000000001;
      while (1)
      {
        uint64_t v23 = v20 ? (char *)MEMORY[0x25338E0A0](v19, a1) : (char *)*(id *)(a1 + 8 * v19 + 32);
        id v5 = (void (**)(char *, uint64_t))v23;
        id v24 = [v23 v21[15]];
        id v25 = sub_250EEA4BC();
        objc_msgSend(v24, (SEL)v22[486], v25);
        double v27 = v26;

        if (v27 > 0.0) {
          break;
        }

LABEL_6:
        if (v17 == ++v19) {
          goto LABEL_25;
        }
      }
      uint64_t v28 = v17;
      uint64_t v29 = v2;
      unint64_t v30 = a1;
      id v31 = objc_msgSend(v5, sel_dateInterval);
      uint64_t v32 = v55;
      sub_250F0BED0();

      uint64_t v33 = v61;
      sub_250F0BF00();
      (*v53)(v32, v56);
      sub_250EEF700(0, (unint64_t *)&unk_26B20F2B8, MEMORY[0x263F07908], MEMORY[0x263F8E0F8]);
      uint64_t v34 = sub_250F0C1A0();
      uint64_t v35 = *(void *)(v34 - 8);
      unint64_t v36 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v50;
      (*(void (**)(unint64_t, void, uint64_t))(v35 + 104))(v37 + v36, v52, v34);
      a1 = sub_250EEF160(v37);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      id v7 = v57;
      sub_250F0C150();
      swift_bridgeObjectRelease();
      uint64_t v2 = sub_250F0BF60();
      LOBYTE(v36) = v38;
      (*v51)(v7, v58);
      if (v36)
      {
        (*v48)(v33, v54);
      }
      else
      {
        if (v2 <= 55)
        {
          uint64_t v39 = (char *)objc_msgSend(v5, sel_workoutsCount);
          if (v2 < 0)
          {
            __break(1u);
LABEL_22:
            __break(1u);
LABEL_23:
            __break(1u);
LABEL_24:
            swift_bridgeObjectRetain();
            uint64_t result = sub_250F0D5B0();
            uint64_t v17 = result;
            if (!result) {
              goto LABEL_25;
            }
            continue;
          }
          if ((unint64_t)v2 >= *(void *)(v47 + 16)) {
            goto LABEL_22;
          }
          uint64_t v40 = *(void *)(v46 + 8 * v2);
          BOOL v41 = __OFADD__(v40, v39);
          uint64_t v42 = &v39[v40];
          if (v41) {
            goto LABEL_23;
          }
          a1 = v30;
          *(void *)(v46 + 8 * v2) = v42;

          (*v48)(v61, v54);
          goto LABEL_20;
        }
        (*v48)(v61, v54);
      }

      a1 = v30;
LABEL_20:
      uint64_t v2 = v29;
      uint64_t v17 = v28;
      unint64_t v20 = v49;
      uint64_t v21 = &selRef_minimum;
      uint64_t v22 = &off_26535C000;
      goto LABEL_6;
    }
    break;
  }
  __break(1u);
  return result;
}

void sub_250EEACBC(void *a1, void *a2, uint64_t a3, unint64_t a4, unint64_t a5, void *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  unint64_t v110 = a4;
  uint64_t v111 = a8;
  uint64_t v107 = a7;
  id v115 = a6;
  sub_250E98BC4(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v102 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_250F0BF30();
  uint64_t v19 = *(NSObject **)(v18 - 8);
  id v108 = (void *)v18;
  os_log_t v109 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)&v102 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  id v24 = (char *)&v102 - v23;
  uint64_t v116 = sub_250F0C0C0();
  uint64_t v114 = *(void *)(v116 - 8);
  MEMORY[0x270FA5388](v116);
  uint64_t v113 = (char *)&v102 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_250F0CCB0();
  uint64_t v27 = *(void *)(v26 - 8);
  MEMORY[0x270FA5388](v26);
  uint64_t v29 = (char *)&v102 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  unint64_t v30 = (void *)MEMORY[0x25338ECE0](a3 + 16);
  if (!v30) {
    return;
  }
  id v112 = v30;
  if (a2)
  {
    id v31 = a2;
    sub_250F0CC90();
    id v32 = a2;
    swift_bridgeObjectRetain();
    id v33 = a2;
    swift_bridgeObjectRetain();
    uint64_t v34 = sub_250F0CCA0();
    os_log_type_t v35 = sub_250F0D1D0();
    if (os_log_type_enabled(v34, v35))
    {
      os_log_t v109 = v34;
      uint64_t v36 = swift_slowAlloc();
      id v108 = (void *)swift_slowAlloc();
      uint64_t v111 = swift_slowAlloc();
      uint64_t v118 = v111;
      *(_DWORD *)uint64_t v36 = 136446722;
      uint64_t v37 = sub_250F0D7B0();
      uint64_t v117 = sub_250E8BE44(v37, v38, &v118);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v36 + 12) = 2080;
      swift_bridgeObjectRetain();
      uint64_t v117 = sub_250E8BE44(v110, a5, &v118);
      sub_250F0D300();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v36 + 22) = 2112;
      id v39 = a2;
      uint64_t v40 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v117 = v40;
      sub_250F0D300();
      BOOL v41 = v108;
      void *v108 = v40;

      uint64_t v34 = v109;
      _os_log_impl(&dword_250E86000, v109, v35, "[%{public}s:%s] Workout Training Load Query Helper fetch errored with %@", (uint8_t *)v36, 0x20u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v41, -1, -1);
      uint64_t v42 = v111;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v42, -1, -1);
      MEMORY[0x25338EC30](v36, -1, -1);
    }
    else
    {
      swift_bridgeObjectRelease_n();
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v29, v26);
    id v59 = v115;
    uint64_t v60 = v116;
    uint64_t v62 = v113;
    uint64_t v61 = v114;
    sub_250F0CF80();
    id v63 = objc_allocWithZone(MEMORY[0x263F087E8]);
    uint64_t v64 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    id v65 = objc_msgSend(v63, sel_initWithDomain_code_userInfo_, v64, 100, 0);

    uint64_t v66 = (void *)sub_250F0BF90();
    id v67 = v112;
    id v68 = objc_msgSend(v112, sel_queryUUID);
    sub_250F0C0A0();

    uint64_t v69 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v61 + 8))(v62, v60);
    objc_msgSend(v59, sel_client_deliverError_forQuery_, v66, v69);

    return;
  }
  if (!a1)
  {
    uint64_t v70 = (void *)sub_250F0D030();
    id v71 = v112;
    id v72 = objc_msgSend(v112, sel_queryUUID);
    uint64_t v73 = v113;
    sub_250F0C0A0();

    uint64_t v74 = (void *)sub_250F0C080();
    (*(void (**)(char *, uint64_t))(v114 + 8))(v73, v116);
    objc_msgSend(v115, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v70, v74);

    return;
  }
  BOOL v43 = (void *)a9;
  uint64_t v118 = MEMORY[0x263F8EE78];
  id v44 = a1;
  id v45 = objc_msgSend(v44, sel_totalTrainingLoadCollection);
  id v46 = objc_msgSend(v45, sel_trainingLoads);

  if (v46)
  {
    uint64_t v106 = sub_250E8D194(0, &qword_26B20F268);
    unint64_t v47 = sub_250F0D040();

    if (v47 >> 62)
    {
      swift_bridgeObjectRetain();
      unint64_t v48 = sub_250F0D5B0();
      swift_bridgeObjectRelease();
      if (v48) {
        goto LABEL_9;
      }
    }
    else
    {
      unint64_t v48 = *(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v48)
      {
LABEL_9:
        if ((v47 & 0xC000000000000001) != 0)
        {
          id v49 = (id)MEMORY[0x25338E0A0](0, v47);
        }
        else
        {
          if (!*(void *)((v47 & 0xFFFFFFFFFFFFFF8) + 0x10))
          {
            __break(1u);
            goto LABEL_53;
          }
          id v49 = *(id *)(v47 + 32);
        }
        long long v50 = v49;
        swift_bridgeObjectRelease();
        id v51 = objc_msgSend(v50, sel_dateInterval);

        sub_250F0BED0();
        os_log_t v52 = v109;
        Class isa = v109[4].isa;
        uint64_t v54 = v22;
        uint64_t v55 = v108;
        ((void (*)(char *, char *, void *))isa)(v17, v54, v108);
        ((void (*)(char *, void, uint64_t, void *))v52[7].isa)(v17, 0, 1, v55);
        if (((unsigned int (*)(char *, uint64_t, void *))v52[6].isa)(v17, 1, v55) != 1)
        {
          uint64_t v104 = a10;
          uint64_t v105 = a11;
          ((void (*)(char *, char *, void *))isa)(v24, v17, v55);
          if ((v107 & 1) == 0)
          {
            id v56 = objc_msgSend(v44, sel_totalTrainingLoadCollection);
            id v57 = objc_msgSend(v56, sel_trainingLoads);

            if (v57)
            {
              int64_t v58 = sub_250F0D040();
            }
            else
            {
              int64_t v58 = MEMORY[0x263F8EE78];
            }
            uint64_t v88 = sub_250EEB8F4(v58, a9, v104, v105, (uint64_t)v24, 0, 1);
            swift_bridgeObjectRelease();
            ((void (*)(char *, void *))v109[1].isa)(v24, v55);
            uint64_t v118 = v88;
            goto LABEL_39;
          }
          id v75 = objc_msgSend(v44, sel_activityTypes);
          sub_250E8D194(0, &qword_26B20EF10);
          unint64_t v48 = sub_250F0D040();

          uint64_t v103 = (void *)a9;
          if (!(v48 >> 62))
          {
            uint64_t v76 = *(void *)((v48 & 0xFFFFFFFFFFFFFF8) + 0x10);
            if (v76)
            {
LABEL_21:
              if (v76 < 1)
              {
                __break(1u);
                return;
              }
              uint64_t v77 = 0;
              unint64_t v110 = v48 & 0xC000000000000001;
              id v78 = v44;
              unint64_t v79 = v48;
              do
              {
                if (v110) {
                  id v81 = (id)MEMORY[0x25338E0A0](v77, v48);
                }
                else {
                  id v81 = *(id *)(v48 + 8 * v77 + 32);
                }
                uint64_t v82 = v81;
                uint64_t v83 = (char *)sub_250F0D2F0();
                id v84 = objc_msgSend(v44, sel_trainingLoadCollectionForActivityType_, v83);
                if (v84
                  && (uint64_t v85 = v84,
                      id v86 = objc_msgSend(v84, sel_trainingLoads),
                      v85,
                      v86))
                {
                  uint64_t v87 = sub_250F0D040();
                }
                else
                {
                  uint64_t v87 = MEMORY[0x263F8EE78];
                }
                if (sub_250EEA58C(v87, v111))
                {
                  unint64_t v80 = sub_250EEB8F4(v87, (uint64_t)v103, v104, v105, (uint64_t)v24, v83, 0);
                  swift_bridgeObjectRelease();
                  sub_250EA7B40(v80);
                }
                else
                {
                  swift_bridgeObjectRelease();
                }
                unint64_t v48 = v79;
                ++v77;

                id v44 = v78;
              }
              while (v76 != v77);
            }
LABEL_54:
            swift_bridgeObjectRelease();
            ((void (*)(char *, void *))v109[1].isa)(v24, v108);
            BOOL v43 = v103;
            goto LABEL_39;
          }
LABEL_53:
          swift_bridgeObjectRetain();
          uint64_t v76 = sub_250F0D5B0();
          swift_bridgeObjectRelease();
          if (v76) {
            goto LABEL_21;
          }
          goto LABEL_54;
        }
        goto LABEL_38;
      }
    }
    swift_bridgeObjectRelease();
    ((void (*)(char *, uint64_t, uint64_t, void *))v109[7].isa)(v17, 1, 1, v108);
LABEL_38:
    sub_250EEF78C((uint64_t)v17, (uint64_t (*)(void))sub_250E98BC4);
  }
LABEL_39:
  id v89 = v43;
  unint64_t v90 = swift_bridgeObjectRetain();
  unint64_t v91 = sub_250EEE270(v90, (uint64_t)v89);
  swift_bridgeObjectRelease_n();

  if (v91 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_250F0D5A0();
    swift_bridgeObjectRelease_n();
    uint64_t v94 = v114;
    id v93 = v115;
    unint64_t v95 = v113;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_250F0D690();
    uint64_t v92 = swift_dynamicCastMetatype();
    uint64_t v94 = v114;
    id v93 = v115;
    unint64_t v95 = v113;
    if (!v92)
    {
      uint64_t v100 = *(void *)((v91 & 0xFFFFFFFFFFFFFF8) + 0x10);
      if (v100)
      {
        uint64_t v101 = (void *)((v91 & 0xFFFFFFFFFFFFFF8) + 32);
        do
        {
          if (!*v101) {
            break;
          }
          ++v101;
          --v100;
        }
        while (v100);
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v96 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v97 = v112;
  id v98 = objc_msgSend(v112, sel_queryUUID);
  sub_250F0C0A0();

  uint64_t v99 = (void *)sub_250F0C080();
  (*(void (**)(char *, uint64_t))(v94 + 8))(v95, v116);
  objc_msgSend(v93, sel_client_deliverTrainingLoadSampleDaySummaries_queryUUID_, v96, v99);
}

uint64_t sub_250EEB8F4(int64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char a7)
{
  uint64_t v275 = a6;
  uint64_t v248 = a5;
  uint64_t v233 = a4;
  uint64_t v249 = a2;
  int64_t v281 = a1;
  LODWORD(v273) = a7 & 1;
  uint64_t v272 = sub_250F0BF30();
  uint64_t v225 = *(void *)(v272 - 8);
  MEMORY[0x270FA5388](v272);
  uint64_t v271 = (char *)&v224 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250EEF700(0, &qword_26B20E4F0, MEMORY[0x263F07920], MEMORY[0x263F8D8F0]);
  uint64_t v11 = MEMORY[0x270FA5388](v10 - 8);
  uint64_t v240 = (char *)&v224 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v256 = (char *)&v224 - v13;
  uint64_t v282 = sub_250F0C060();
  uint64_t v227 = *(void *)(v282 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v282);
  long long v247 = (char *)&v224 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v276 = (char *)&v224 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  uint64_t v277 = (char *)&v224 - v19;
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v280 = (char *)&v224 - v21;
  MEMORY[0x270FA5388](v20);
  os_log_t v236 = (char *)&v224 - v22;
  uint64_t v23 = v9;
  uint64_t v24 = a3;
  sub_250EEF700(0, &qword_26B20EE20, MEMORY[0x263F090E8], v23);
  uint64_t v26 = MEMORY[0x270FA5388](v25 - 8);
  unint64_t v259 = (char *)&v224 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v283 = (char *)&v224 - v28;
  uint64_t v29 = sub_250F0CE70();
  uint64_t v267 = *(void **)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v257 = (void (*)(char *, uint64_t))((char *)&v224 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v32 = MEMORY[0x270FA5388](v30);
  uint64_t v242 = (void (*)(char *, uint64_t))((char *)&v224 - v33);
  uint64_t v34 = MEMORY[0x270FA5388](v32);
  char v239 = (char *)&v224 - v35;
  uint64_t v36 = MEMORY[0x270FA5388](v34);
  uint64_t v238 = (char *)&v224 - v37;
  uint64_t v38 = MEMORY[0x270FA5388](v36);
  uint64_t v270 = (char *)&v224 - v39;
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v237 = (char *)&v224 - v41;
  MEMORY[0x270FA5388](v40);
  BOOL v43 = (char *)&v224 - v42;
  sub_250E8E700();
  uint64_t v254 = v44;
  uint64_t v45 = MEMORY[0x270FA5388](v44);
  uint64_t v255 = (char *)&v224 - ((v46 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v45);
  unint64_t v48 = (char *)&v224 - v47;
  sub_250EC18D8(0);
  uint64_t v261 = v49;
  uint64_t v50 = MEMORY[0x270FA5388](v49);
  uint64_t v241 = (char *)&v224 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = MEMORY[0x270FA5388](v50);
  uint64_t v258 = (uint64_t)&v224 - v53;
  uint64_t v54 = MEMORY[0x270FA5388](v52);
  uint64_t v266 = (void (*)(char *, id, uint64_t))((char *)&v224 - v55);
  uint64_t v56 = MEMORY[0x270FA5388](v54);
  uint64_t v279 = (uint64_t)&v224 - v57;
  uint64_t v58 = MEMORY[0x270FA5388](v56);
  uint64_t v60 = (char *)&v224 - v59;
  MEMORY[0x270FA5388](v58);
  id v263 = (char *)&v224 - v61;
  sub_250EEF4C0(0);
  uint64_t v231 = v62;
  uint64_t v63 = MEMORY[0x270FA5388](v62);
  uint64_t v246 = (unint64_t *)((char *)&v224 - ((v64 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v65 = MEMORY[0x270FA5388](v63);
  id v67 = (char *)&v224 - v66;
  MEMORY[0x270FA5388](v65);
  unint64_t v274 = (unint64_t)&v224 - v68;
  uint64_t v69 = sub_250EB12C0();
  uint64_t v71 = v70;
  id v72 = *(void (**)(char *, void, uint64_t, uint64_t))(v70 + 8);
  v285[3] = v69;
  v285[4] = v70;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v285);
  uint64_t v244 = v69;
  uint64_t v245 = v71;
  v72(v275, v273, v69, v71);
  id v73 = v278;
  double v74 = sub_250EEE140(v281, 0.0);

  uint64_t v75 = sub_250E92C80();
  uint64_t v273 = v29;
  id v260 = (void (*)(char *, uint64_t))v75;
  uint64_t result = sub_250F0CF00();
  if ((result & 1) == 0)
  {
LABEL_73:
    __break(1u);
LABEL_74:
    __break(1u);
    goto LABEL_75;
  }
  id v226 = v73;
  uint64_t v77 = v254;
  id v78 = v48;
  unint64_t v79 = &v48[*(int *)(v254 + 48)];
  uint64_t v80 = v24;
  uint64_t v228 = v24;
  id v81 = v267;
  uint64_t v82 = (void (*)(char *, uint64_t, uint64_t))v267[2];
  uint64_t v264 = v267 + 2;
  uint64_t v83 = v273;
  v82(v78, v80, v273);
  uint64_t v232 = v60;
  uint64_t v230 = v43;
  id v84 = v79;
  id v278 = v79;
  v82(v79, v233, v83);
  uint64_t v85 = v255;
  uint64_t v275 = &v255[*(int *)(v77 + 48)];
  id v86 = v275;
  v82(v255, (uint64_t)v78, v83);
  v82(v86, (uint64_t)v84, v83);
  uint64_t v229 = v67;
  uint64_t v87 = (uint64_t)v232;
  id v89 = v81 + 4;
  uint64_t v88 = (void (*)(char *, char *, uint64_t))v81[4];
  v88(v232, v85, v83);
  unint64_t v90 = v81 + 1;
  unint64_t v91 = (void (*)(char *, uint64_t))v81[1];
  uint64_t v267 = v90;
  v91(v275, v83);
  uint64_t v92 = &v85[*(int *)(v77 + 48)];
  uint64_t v253 = v78;
  v88(v85, v78, v83);
  v88(v92, (char *)v278, v83);
  v88((char *)(v87 + *(int *)(v261 + 36)), v92, v83);
  uint64_t v268 = v91;
  id v93 = v267;
  v91(v85, v83);
  uint64_t v94 = (uint64_t)v263;
  sub_250EEF698(v87, (uint64_t)v263, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v95 = (uint64_t)v229;
  sub_250EEF630(v94, (uint64_t)v229, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v96 = v230;
  v269 = v82;
  v82(v230, v94, v83);
  sub_250EEF78C(v94, (uint64_t (*)(void))sub_250EC18D8);
  uint64_t v97 = v231;
  uint64_t v98 = v95 + *(int *)(v231 + 36);
  id v265 = v89;
  uint64_t v262 = v88;
  v88((char *)v98, v96, v83);
  unint64_t v99 = v274;
  sub_250EEF698(v95, v274, (uint64_t (*)(void))sub_250EEF4C0);
  id v100 = (id)(v99 + *(int *)(v97 + 36));
  unint64_t v101 = v99 + *(int *)(v261 + 36);
  uint64_t v250 = sub_250EEDB84((unint64_t *)&unk_26B20EDF0, MEMORY[0x263F090E8]);
  char v102 = sub_250F0CF40();
  uint64_t v252 = (void (**)(char *, void, uint64_t, uint64_t))(v93 + 6);
  uint64_t v103 = (void (*)(char *, char *, void))v99;
  if ((v102 & 1) == 0)
  {
    unint64_t v224 = (unint64_t)(v93 + 6) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    os_log_t v109 = 0;
    unint64_t v235 = (void (**)(char *, uint64_t))(v227 + 8);
    unint64_t v110 = (void (*)(char *, id, uint64_t))v269;
    id v278 = v100;
    unint64_t v234 = v101;
    uint64_t v111 = v273;
    while (1)
    {
      v110(v283, v100, v273);
      if ((sub_250F0CF00() & 1) == 0) {
        break;
      }
      uint64_t v275 = v109;
      uint64_t v112 = v254;
      unint64_t v113 = v101;
      uint64_t v114 = v253;
      id v115 = &v253[*(int *)(v254 + 48)];
      v110(v253, v103, v111);
      v110(v115, (id)v113, v111);
      uint64_t v116 = v255;
      uint64_t v117 = &v255[*(int *)(v112 + 48)];
      v110(v255, v114, v111);
      v110(v117, v115, v111);
      uint64_t v118 = v262;
      v262(v263, v116, v111);
      v268(v117, v111);
      unsigned int v119 = v114;
      uint64_t v120 = (uint64_t)v263;
      uint64_t v121 = &v116[*(int *)(v112 + 48)];
      v118(v116, v119, v111);
      v118(v121, v115, v111);
      uint64_t v122 = v121;
      id v100 = v268;
      v118((char *)(v120 + *(int *)(v261 + 36)), v122, v111);
      uint64_t v123 = v116;
      uint64_t v106 = v260;
      ((void (*)(char *, uint64_t))v100)(v123, v111);
      uint64_t v124 = v120;
      id v126 = v278;
      uint64_t v125 = v279;
      sub_250EEF698(v124, v279, (uint64_t (*)(void))sub_250EC18D8);
      LOBYTE(v115) = sub_250F0CF00();
      uint64_t v103 = (void (*)(char *, char *, void))v270;
      v110(v270, v126, v111);
      unint64_t v110 = v266;
      sub_250EEF630(v125, (uint64_t)v266, (uint64_t (*)(void))sub_250EC18D8);
      if ((v115 & 1) == 0) {
        goto LABEL_68;
      }
      uint64_t v127 = v273;
      char v128 = sub_250F0CEE0();
      sub_250EEF78C((uint64_t)v110, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t result = ((uint64_t (*)(void (*)(char *, char *, void), uint64_t))v100)(v103, v127);
      if ((v128 & 1) == 0) {
        goto LABEL_69;
      }
      sub_250EEF78C(v279, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v284 = 1;
      sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
      id v129 = v237;
      uint64_t v130 = v273;
      sub_250F0D320();
      ((void (*)(id, uint64_t))v100)(v126, v130);
      double v131 = v129;
      uint64_t v132 = v262;
      v262((char *)v126, v131, v130);
      uint64_t v133 = v283;
      uint64_t v251 = *v252;
      v251(v283, 0, 1, v130);
      unint64_t v134 = v238;
      v132(v238, v133, v130);
      uint64_t v135 = v256;
      sub_250F0CAA0();
      uint64_t v136 = (uint64_t (*)(char *, uint64_t))v100;
      uint64_t v137 = sub_250F0C1B0();
      uint64_t v138 = *(void *)(v137 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v138 + 48))(v135, 1, v137);
      if (result == 1) {
        goto LABEL_78;
      }
      uint64_t v139 = v236;
      sub_250F0CE60();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v135, v137);
      char v140 = sub_250F0BF10();
      (*v235)(v139, v282);
      uint64_t result = v136(v134, v273);
      if (v140)
      {
        uint64_t v107 = v233;
        uint64_t v108 = v228;
        uint64_t v142 = v255;
        uint64_t v103 = (void (*)(char *, char *, void))v274;
        uint64_t v104 = v275;
        goto LABEL_15;
      }
      uint64_t v103 = (void (*)(char *, char *, void))v274;
      uint64_t v141 = v275 + 1;
      unint64_t v110 = (void (*)(char *, id, uint64_t))v269;
      if (__OFADD__(v275, 1)) {
        goto LABEL_70;
      }
      id v100 = v278;
      unint64_t v101 = v234;
      os_log_t v109 = v275 + 1;
      if (sub_250F0CF40())
      {
        uint64_t v104 = v141;
        uint64_t v107 = v233;
        uint64_t v108 = v228;
        uint64_t v105 = v251;
        goto LABEL_13;
      }
    }
LABEL_67:
    __break(1u);
LABEL_68:
    sub_250EEF78C((uint64_t)v110, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t result = ((uint64_t (*)(void (*)(char *, char *, void), uint64_t))v100)(v103, v273);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
LABEL_71:
    __break(1u);
LABEL_72:
    __break(1u);
    goto LABEL_73;
  }
  uint64_t v104 = 0;
  uint64_t v105 = (void (*)(char *, void, uint64_t, uint64_t))v93[6];
  uint64_t v106 = v260;
  uint64_t v107 = v233;
  uint64_t v108 = v228;
LABEL_13:
  uint64_t v251 = v105;
  v105(v283, 1, 1, v273);
  uint64_t v142 = v255;
LABEL_15:
  sub_250EEF78C((uint64_t)v103, (uint64_t (*)(void))sub_250EEF4C0);
  uint64_t v143 = sub_250F0CE30();
  uint64_t result = sub_250F0CE30();
  uint64_t v144 = v143 - result;
  if (__OFSUB__(v143, result)) {
    goto LABEL_74;
  }
  BOOL v145 = __OFSUB__(v144, v104);
  uint64_t v146 = v144 - (void)v104;
  if (!v145)
  {
    if (v146 < 1) {
      double v147 = 0.0;
    }
    else {
      double v147 = v74 / (double)v146;
    }
    unint64_t v110 = (void (*)(char *, id, uint64_t))v282;
    id v148 = sub_250EEA4BC();
    uint64_t v149 = self;
    uint64_t v237 = (char *)objc_msgSend(v149, sel_quantityWithUnit_doubleValue_, v148, v147);

    id v150 = sub_250EEA4BC();
    os_log_t v236 = (char *)objc_msgSend(v149, sel_quantityWithUnit_doubleValue_, v150, 0.0);

    uint64_t result = sub_250F0CF00();
    if ((result & 1) == 0) {
      goto LABEL_76;
    }
    uint64_t v151 = v254;
    uint64_t v152 = v108;
    uint64_t v153 = v253;
    uint64_t v154 = &v253[*(int *)(v254 + 48)];
    uint64_t v155 = v273;
    v269(v253, v152, v273);
    uint64_t v283 = v154;
    v269(v154, v107, v155);
    uint64_t v156 = v142;
    unint64_t v157 = &v142[*(int *)(v151 + 48)];
    v269(v156, (uint64_t)v153, v155);
    v269(v157, (uint64_t)v154, v155);
    id v158 = v262;
    v262(v232, v156, v155);
    v268(v157, v155);
    uint64_t v159 = v151;
    uint64_t v160 = &v156[*(int *)(v151 + 48)];
    v158(v156, v153, v155);
    v158(v160, v283, v155);
    uint64_t v161 = (uint64_t)v232;
    v158(&v232[*(int *)(v261 + 36)], v160, v155);
    v268(v156, v155);
    uint64_t v162 = (uint64_t)v263;
    sub_250EEF698(v161, (uint64_t)v263, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t v163 = (uint64_t)v229;
    sub_250EEF630(v162, (uint64_t)v229, (uint64_t (*)(void))sub_250EC18D8);
    objc_super v164 = v230;
    v269(v230, v162, v155);
    sub_250EEF78C(v162, (uint64_t (*)(void))sub_250EC18D8);
    uint64_t v165 = v231;
    v158((char *)(v163 + *(int *)(v231 + 36)), v164, v155);
    uint64_t v166 = (uint64_t)v246;
    sub_250EEF698(v163, (uint64_t)v246, (uint64_t (*)(void))sub_250EEF4C0);
    id v167 = (char *)(v166 + *(int *)(v165 + 36));
    uint64_t v168 = v166 + *(int *)(v261 + 36);
    if (sub_250F0CF40())
    {
LABEL_22:
      v251(v259, 1, 1, v273);
      sub_250EEF78C((uint64_t)v246, (uint64_t (*)(void))sub_250EEF4C0);
      uint64_t v169 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v245 + 24))(v228, v233, v244);

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v285);
      return v169;
    }
    unint64_t v170 = 0;
    unint64_t v171 = v281 & 0xFFFFFFFFFFFFFF8;
    id v278 = (id)(v281 & 0xFFFFFFFFFFFFFF8);
    if (v281 < 0) {
      unint64_t v171 = v281;
    }
    unint64_t v235 = (void (**)(char *, uint64_t))v171;
    uint64_t v283 = (char *)(v227 + 16);
    unint64_t v274 = v281 & 0xC000000000000001;
    uint64_t v270 = (char *)(v225 + 8);
    uint64_t v279 = v227 + 8;
    uint64_t v238 = (char *)(v245 + 16);
    uint64_t v256 = v167;
    uint64_t v275 = (char *)v168;
    while (1)
    {
      id v175 = v167;
      uint64_t v176 = v273;
      id v100 = v269;
      v269(v259, (uint64_t)v175, v273);
      uint64_t v103 = (void (*)(char *, char *, void))v246;
      if ((sub_250F0CF00() & 1) == 0) {
        break;
      }
      uint64_t v176 = v273;
      uint64_t v177 = v253;
      uint64_t v178 = (uint64_t)&v253[*(int *)(v159 + 48)];
      ((void (*)(char *, void, uint64_t))v100)(v253, v103, v273);
      uint64_t v266 = (void (*)(char *, id, uint64_t))v178;
      ((void (*)(uint64_t, uint64_t, uint64_t))v100)(v178, v168, v176);
      uint64_t v179 = v255;
      id v180 = &v255[*(int *)(v159 + 48)];
      v269(v255, (uint64_t)v177, v176);
      v269(v180, v178, v176);
      id v181 = v262;
      v262(v263, v179, v176);
      uint64_t v182 = v180;
      uint64_t v183 = v268;
      v268(v182, v176);
      uint64_t v184 = &v179[*(int *)(v159 + 48)];
      v181(v179, v177, v176);
      v181(v184, (char *)v266, v176);
      uint64_t v185 = (uint64_t)v263;
      v181(&v263[*(int *)(v261 + 36)], v184, v176);
      v183(v179, v176);
      uint64_t v103 = (void (*)(char *, char *, void))v256;
      uint64_t v186 = v258;
      sub_250EEF698(v185, v258, (uint64_t (*)(void))sub_250EC18D8);
      LOBYTE(v179) = sub_250F0CF00();
      uint64_t v106 = v242;
      v269((char *)v242, (uint64_t)v103, v176);
      uint64_t v187 = v186;
      id v100 = v241;
      sub_250EEF630(v187, (uint64_t)v241, (uint64_t (*)(void))sub_250EC18D8);
      if ((v179 & 1) == 0) {
        goto LABEL_65;
      }
      char v188 = sub_250F0CEE0();
      sub_250EEF78C((uint64_t)v100, (uint64_t (*)(void))sub_250EC18D8);
      id v100 = v267;
      uint64_t v189 = v268;
      v268((char *)v106, v176);
      if ((v188 & 1) == 0) {
        goto LABEL_66;
      }
      sub_250EEF78C(v258, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v284 = 1;
      sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
      os_log_type_t v190 = v239;
      uint64_t v191 = v273;
      sub_250F0D320();
      v189((char *)v103, v191);
      uint64_t v192 = (void (*)(void (*)(char *, uint64_t), char *, uint64_t))v262;
      v262((char *)v103, v190, v191);
      uint64_t v193 = v259;
      v251(v259, 0, 1, v191);
      uint64_t v106 = v257;
      v192(v257, v193, v191);
      uint64_t v194 = v240;
      sub_250F0CAA0();
      uint64_t v195 = sub_250F0C1B0();
      uint64_t v196 = *(void *)(v195 - 8);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v196 + 48))(v194, 1, v195);
      if (result == 1) {
        goto LABEL_77;
      }
      uint64_t v197 = v280;
      uint64_t v176 = (uint64_t)v106;
      sub_250F0CE60();
      (*(void (**)(char *, uint64_t))(v196 + 8))(v194, v195);
      uint64_t v168 = (uint64_t)v275;
      if ((unint64_t)v281 >> 62)
      {
        swift_bridgeObjectRetain();
        id v100 = (id)sub_250F0D5B0();
        swift_bridgeObjectRelease();
      }
      else
      {
        id v100 = (id)*((void *)v278 + 2);
      }
      uint64_t v198 = v277;
      uint64_t v103 = *(void (**)(char *, char *, void))v283;
      (*(void (**)(char *, char *, void))v283)(v277, v197, v110);
      uint64_t v266 = (void (*)(char *, id, uint64_t))(v279 & 0xFFFFFFFFFFFFLL | 0x4F8000000000000);
      if ((uint64_t)v170 >= (uint64_t)v100)
      {
        uint64_t v106 = *(void (**)(char *, uint64_t))v279;
LABEL_51:
        uint64_t v215 = (uint64_t)v266;
        v106(v198, (uint64_t)v110);
        id v216 = v247;
        v103(v247, v197, v110);
        uint64_t v213 = v215;
        v106(v216, (uint64_t)v110);
        id v217 = 0;
        uint64_t v212 = (char *)v257;
      }
      else
      {
        while (1)
        {
          if (v274)
          {
            id v199 = (id)MEMORY[0x25338E0A0](v170, v281);
          }
          else
          {
            if ((v170 & 0x8000000000000000) != 0)
            {
              __break(1u);
LABEL_63:
              __break(1u);
              goto LABEL_64;
            }
            if (v170 >= *((void *)v278 + 2)) {
              goto LABEL_63;
            }
            id v199 = *(id *)(v281 + 8 * v170 + 32);
          }
          uint64_t v200 = v199;
          id v201 = objc_msgSend(v199, sel_dateInterval, v224);

          os_log_t v202 = v271;
          sub_250F0BED0();

          uint64_t v203 = v276;
          sub_250F0BEE0();
          uint64_t v204 = *(void (**)(char *, uint64_t))v270;
          (*(void (**)(char *, uint64_t))v270)(v202, v272);
          uint64_t v198 = v277;
          uint64_t v176 = sub_250F0BFE0();
          uint64_t v106 = *(void (**)(char *, uint64_t))v279;
          uint64_t v205 = v203;
          unint64_t v110 = (void (*)(char *, id, uint64_t))v282;
          (*(void (**)(char *, uint64_t))v279)(v205, v282);
          v106(v198, (uint64_t)v110);
          if ((v176 & 1) == 0) {
            break;
          }
          ++v170;
          uint64_t v197 = v280;
          v103(v198, v280, v110);
          uint64_t v168 = (uint64_t)v275;
          if (v100 == (id)v170)
          {
            unint64_t v170 = (unint64_t)v100;
            goto LABEL_51;
          }
        }
        uint64_t result = ((uint64_t (*)(char *, char *, void))v103)(v247, v280, v110);
        if (v274)
        {
          id v206 = (id)MEMORY[0x25338E0A0](v170, v281);
        }
        else
        {
          if ((v170 & 0x8000000000000000) != 0) {
            goto LABEL_71;
          }
          if (v170 >= *((void *)v278 + 2)) {
            goto LABEL_72;
          }
          id v206 = *(id *)(v281 + 8 * v170 + 32);
        }
        unint64_t v207 = v206;
        id v208 = objc_msgSend(v206, sel_dateInterval);

        uint64_t v209 = v271;
        sub_250F0BED0();

        uint64_t v210 = v247;
        LOBYTE(v207) = sub_250F0BF10();
        v204(v209, v272);
        BOOL v211 = v210;
        unint64_t v110 = (void (*)(char *, id, uint64_t))v282;
        v106(v211, v282);
        if (v207)
        {
          uint64_t v212 = (char *)v257;
          uint64_t v168 = (uint64_t)v275;
          uint64_t v213 = (uint64_t)v266;
          if (v274) {
            id v214 = (id)MEMORY[0x25338E0A0](v170, v281);
          }
          else {
            id v214 = *(id *)(v281 + 8 * v170 + 32);
          }
          int v223 = v214;
          uint64_t v197 = v280;
          id v217 = objc_msgSend(v214, sel_quantity);

          ++v170;
        }
        else
        {
          id v217 = 0;
          uint64_t v197 = v280;
          uint64_t v212 = (char *)v257;
          uint64_t v168 = (uint64_t)v275;
          uint64_t v213 = (uint64_t)v266;
        }
      }
      char v218 = v276;
      sub_250F0BF00();
      char v219 = sub_250F0BFE0();
      v106(v218, (uint64_t)v110);
      uint64_t v266 = (void (*)(char *, id, uint64_t))v213;
      if (v217)
      {
        uint64_t v172 = *(void (**)(void))(v245 + 16);
        id v173 = v217;
        v172();

        unint64_t v110 = (void (*)(char *, id, uint64_t))v282;
      }
      else
      {
        if (v219)
        {
          uint64_t v220 = v237;
          uint64_t v221 = v212;
          uint64_t v222 = 1;
        }
        else
        {
          uint64_t v220 = v236;
          uint64_t v221 = v212;
          uint64_t v222 = 0;
        }
        (*(void (**)(char *, char *, uint64_t, uint64_t, uint64_t))v238)(v220, v221, v222, v244, v245);
      }
      id v167 = v256;
      v106(v197, (uint64_t)v110);
      v268(v212, v273);
      char v174 = sub_250F0CF40();
      uint64_t v159 = v254;
      uint64_t v106 = v260;
      if (v174) {
        goto LABEL_22;
      }
    }
LABEL_64:
    __break(1u);
LABEL_65:
    sub_250EEF78C((uint64_t)v100, (uint64_t (*)(void))sub_250EC18D8);
    v268((char *)v106, v176);
LABEL_66:
    __break(1u);
    goto LABEL_67;
  }
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
  return result;
}

void sub_250EED82C(uint64_t a1, void *a2, void *a3)
{
  id v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_250EED8B8(void *a1, uint64_t a2, void *a3)
{
  id v4 = a1;
  MEMORY[0x25338DC20]();
  if (*(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*a3 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
    sub_250F0D060();
  }
  sub_250F0D090();
  return sub_250F0D050();
}

uint64_t type metadata accessor for TrainingLoadSummaryQueryServer()
{
  return self;
}

void sub_250EEDAC4()
{
  if (!qword_269B11230)
  {
    sub_250F0CE70();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B11230);
    }
  }
}

uint64_t sub_250EEDB28()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

void sub_250EEDB60()
{
}

uint64_t sub_250EEDB84(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250EEDBCC(uint64_t a1)
{
}

unint64_t sub_250EEDC00()
{
  unint64_t result = qword_26B20F200;
  if (!qword_26B20F200)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20F200);
  }
  return result;
}

unint64_t sub_250EEDC58()
{
  unint64_t result = qword_26B20F2D0;
  if (!qword_26B20F2D0)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20F2D0);
  }
  return result;
}

uint64_t sub_250EEDCB0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_250E8D194(255, a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EEDCF4()
{
  swift_unknownObjectWeakDestroy();
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250EEDD2C()
{
  uint64_t v1 = sub_250F0C060();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_250F0CE70();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v9 = (v5 + v8 + 8) & ~v8;
  uint64_t v10 = *(void *)(v7 + 64);
  uint64_t v15 = v3 | v8 | 7;
  uint64_t v11 = (v10 + v8 + v9) & ~v8;
  unint64_t v12 = ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_release();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v7 + 8);
  v13(v0 + v9, v6);
  v13(v0 + v11, v6);
  return MEMORY[0x270FA0238](v0, v12, v15);
}

void sub_250EEDEE0(void *a1, void *a2)
{
  uint64_t v5 = *(void *)(sub_250F0C060() - 8);
  unint64_t v6 = (*(unsigned __int8 *)(v5 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (*(void *)(v5 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v8 = *(void *)(sub_250F0CE70() - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  sub_250EEACBC(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void **)(v2 + 40), *(void *)(v2 + 48), v2 + v6, *(void *)(v2 + v7), v2 + ((v7 + v9 + 8) & ~v9), v2 + ((*(void *)(v8 + 64) + v9 + ((v7 + v9 + 8) & ~v9)) & ~v9));
}

double sub_250EEE020(unint64_t a1, uint64_t a2, double a3)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v6 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v6; uint64_t v6 = sub_250F0D5B0())
  {
    uint64_t v7 = 4;
    while (1)
    {
      id v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25338E0A0](v7 - 4, a1) : *(id *)(a1 + 8 * v7);
      uint64_t v9 = v8;
      uint64_t v10 = v7 - 3;
      if (__OFADD__(v7 - 4, 1)) {
        break;
      }
      id v11 = objc_msgSend(v8, sel_activeEnergyBurned);
      objc_msgSend(v11, sel_doubleValueForUnit_, a2);
      double v13 = v12;

      a3 = a3 + v13;
      ++v7;
      if (v10 == v6) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return a3;
}

double sub_250EEE140(unint64_t a1, double a2)
{
  if (a1 >> 62) {
    goto LABEL_11;
  }
  uint64_t v4 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v4; uint64_t v4 = sub_250F0D5B0())
  {
    uint64_t v5 = 4;
    while (1)
    {
      id v6 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x25338E0A0](v5 - 4, a1) : *(id *)(a1 + 8 * v5);
      uint64_t v7 = v6;
      uint64_t v8 = v5 - 3;
      if (__OFADD__(v5 - 4, 1)) {
        break;
      }
      id v9 = objc_msgSend(v6, sel_quantity);
      id v10 = sub_250EEA4BC();
      objc_msgSend(v9, sel_doubleValueForUnit_, v10);
      double v12 = v11;

      a2 = a2 + v12;
      ++v5;
      if (v8 == v4) {
        goto LABEL_9;
      }
    }
    __break(1u);
LABEL_11:
    swift_bridgeObjectRetain();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  return a2;
}

uint64_t sub_250EEE270(unint64_t a1, uint64_t a2)
{
  unint64_t v3 = v2;
  uint64_t v40 = a2;
  sub_250EC18D8(0);
  uint64_t v43 = v5;
  uint64_t v45 = *(char **)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_250F0CE70();
  id v9 = *(char **)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  double v12 = (char *)&v28 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v41 = (char *)&v28 - v13;
  uint64_t v39 = sub_250F0C6F0();
  uint64_t v14 = *(uint64_t **)(v39 - 8);
  MEMORY[0x270FA5388](v39);
  uint64_t v38 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EEF700(0, &qword_26B20EEC0, (uint64_t (*)(uint64_t))sub_250EC18D8, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v16 - 8);
  uint64_t v18 = (char *)&v28 - v17;
  uint64_t v46 = MEMORY[0x263F8EE78];
  unint64_t v42 = a1;
  if (a1 >> 62)
  {
LABEL_19:
    uint64_t v19 = sub_250F0D5B0();
    if (v19) {
      goto LABEL_3;
    }
    return MEMORY[0x263F8EE78];
  }
  uint64_t v19 = *(void *)((v42 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (!v19) {
    return MEMORY[0x263F8EE78];
  }
LABEL_3:
  unint64_t v28 = v3;
  unint64_t v3 = 0;
  uint64_t v36 = v42 & 0xFFFFFFFFFFFFFF8;
  unint64_t v37 = v42 & 0xC000000000000001;
  uint64_t v34 = v19;
  uint64_t v35 = (uint64_t (**)(char *, uint64_t, uint64_t))(v45 + 48);
  uint64_t v30 = (void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v31 = (void (**)(char *, uint64_t))(v14 + 1);
  uint64_t v32 = v18;
  uint64_t v33 = (void (**)(char *, uint64_t *))(v9 + 8);
  id v9 = v41;
  while (1)
  {
    if (v37)
    {
      uint64_t v21 = (char *)MEMORY[0x25338E0A0](v3, v42);
    }
    else
    {
      if (v3 >= *(void *)(v36 + 16))
      {
        __break(1u);
LABEL_18:
        __break(1u);
        goto LABEL_19;
      }
      uint64_t v21 = (char *)*(id *)(v42 + 8 * v3 + 32);
    }
    uint64_t v45 = v21;
    if (__OFADD__(v3, 1)) {
      goto LABEL_18;
    }
    unint64_t v44 = v3 + 1;
    sub_250F0CAB0();
    uint64_t result = (*v35)(v18, 1, v43);
    if (result == 1) {
      break;
    }
    uint64_t v23 = (uint64_t)v18;
    uint64_t v24 = v38;
    sub_250F0CD30();
    sub_250F0C6D0();
    (*v31)(v24, v39);
    sub_250E92C80();
    LOBYTE(v24) = sub_250F0CF00();
    (*v30)(v12, v9, v8);
    uint64_t v14 = (uint64_t *)v8;
    uint64_t v25 = v9;
    uint64_t v26 = v12;
    sub_250EEF630(v23, (uint64_t)v7, (uint64_t (*)(void))sub_250EC18D8);
    if (v24)
    {
      int v29 = sub_250F0CEE0();
      sub_250EEF78C((uint64_t)v7, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v27 = *v33;
      (*v33)(v26, v14);
      v27(v25, v14);
      sub_250EEF78C(v23, (uint64_t (*)(void))sub_250EC18D8);
      double v12 = v26;
      uint64_t v8 = (uint64_t)v14;
      if (v29)
      {
        uint64_t v14 = &v46;
        sub_250F0D4F0();
        sub_250F0D520();
        sub_250F0D530();
        sub_250F0D500();
        goto LABEL_6;
      }
    }
    else
    {
      sub_250EEF78C((uint64_t)v7, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v20 = *v33;
      (*v33)(v12, v14);
      v20(v25, v14);
      sub_250EEF78C(v23, (uint64_t (*)(void))sub_250EC18D8);
      uint64_t v8 = (uint64_t)v14;
    }

LABEL_6:
    ++v3;
    id v9 = v41;
    uint64_t v18 = v32;
    if (v44 == v34) {
      return v46;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_250EEE7D8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v69 = sub_250F0C1B0();
  uint64_t v62 = *(void *)(v69 - 8);
  MEMORY[0x270FA5388](v69);
  uint64_t v68 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C788(0);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v63 = (char *)&v60 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v61 = (char *)&v60 - v10;
  MEMORY[0x270FA5388](v9);
  double v12 = (char *)&v60 - v11;
  uint64_t v13 = sub_250F0C060();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = MEMORY[0x270FA5388](v13);
  uint64_t v66 = (char *)&v60 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = MEMORY[0x270FA5388](v15);
  uint64_t v65 = (char *)&v60 - v18;
  uint64_t v19 = MEMORY[0x270FA5388](v17);
  uint64_t v64 = (char *)&v60 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v23 = (char *)&v60 - v22;
  uint64_t v24 = MEMORY[0x270FA5388](v21);
  uint64_t v26 = (char *)&v60 - v25;
  uint64_t v27 = MEMORY[0x270FA5388](v24);
  uint64_t v71 = (char *)&v60 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v60 - v29;
  uint64_t v31 = a3;
  sub_250F0CE60();
  id v70 = a1;
  id v32 = objc_msgSend(a1, sel__startDate);
  if (v32)
  {
    uint64_t v33 = v32;
    sub_250F0C030();

    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v12, v26, v13);
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v35 = v12;
    uint64_t v36 = 0;
  }
  else
  {
    uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
    uint64_t v35 = v12;
    uint64_t v36 = 1;
  }
  id v67 = v34;
  v34(v35, v36, 1, v13);
  uint64_t v38 = v68;
  uint64_t v37 = v69;
  uint64_t v39 = v31;
  uint64_t v40 = v30;
  uint64_t v41 = v23;
  uint64_t v42 = v62;
  (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v68, v39, v69);
  uint64_t v62 = *(void *)(v14 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v62)(v12, 1, v13) != 1)
  {
    (*(void (**)(char *, uint64_t))(v42 + 8))(v38, v37);
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v71, v12, v13);
    uint64_t v47 = v64;
    uint64_t v46 = v65;
    uint64_t v48 = (uint64_t)v63;
    goto LABEL_12;
  }
  id v43 = objc_msgSend(v70, sel__endDate);
  if (!v43)
  {
    uint64_t v45 = (uint64_t)v61;
    v67(v61, 1, 1, v13);
    goto LABEL_10;
  }
  unint64_t v44 = v43;
  sub_250F0C030();

  uint64_t v45 = (uint64_t)v61;
  uint64_t v60 = *(void (**)(char *, char *, uint64_t))(v14 + 32);
  v60(v61, v26, v13);
  v67((char *)v45, 0, 1, v13);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v62)(v45, 1, v13) == 1)
  {
LABEL_10:
    sub_250F0C050();
    sub_250EEF78C(v45, (uint64_t (*)(void))sub_250E8C788);
    goto LABEL_11;
  }
  v60(v41, (char *)v45, v13);
LABEL_11:
  uint64_t v49 = v68;
  sub_250F0C140();
  (*(void (**)(char *, uint64_t))(v14 + 8))(v41, v13);
  (*(void (**)(char *, uint64_t))(v42 + 8))(v49, v69);
  sub_250EEF78C((uint64_t)v12, (uint64_t (*)(void))sub_250E8C788);
  uint64_t v47 = v64;
  uint64_t v46 = v65;
  uint64_t v48 = (uint64_t)v63;
LABEL_12:
  id v50 = objc_msgSend(v70, sel__endDate);
  if (v50)
  {
    uint64_t v51 = v50;
    sub_250F0C030();

    uint64_t v52 = *(void (**)(uint64_t, char *, uint64_t))(v14 + 32);
    v52(v48, v26, v13);
    v67((char *)v48, 0, 1, v13);
    int v53 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v62)(v48, 1, v13);
    uint64_t v54 = v66;
    if (v53 != 1)
    {
      v52((uint64_t)v47, (char *)v48, v13);
      goto LABEL_17;
    }
  }
  else
  {
    v67((char *)v48, 1, 1, v13);
    uint64_t v54 = v66;
  }
  sub_250F0C050();
  sub_250EEF78C(v48, (uint64_t (*)(void))sub_250E8C788);
LABEL_17:
  sub_250EEDB84((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
  char v55 = sub_250F0CEE0();
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v14 + 16);
  v56(v46, v47, v13);
  v56(v54, v40, v13);
  if (v55) {
    char v57 = 0;
  }
  else {
    char v57 = sub_250F0CEE0() ^ 1;
  }
  uint64_t v58 = *(void (**)(char *, uint64_t))(v14 + 8);
  v58(v54, v13);
  v58(v46, v13);
  v58(v47, v13);
  v58(v71, v13);
  v58(v40, v13);
  return v57 & 1;
}

BOOL sub_250EEEF50(BOOL result)
{
  uint64_t v1 = 0;
  unint64_t v2 = *(void *)(result + 16);
  if (v2 <= 0x1B) {
    unint64_t v2 = 27;
  }
  unint64_t v3 = v2 - 27;
  uint64_t v4 = result + 128;
  uint64_t v5 = 32;
  while (1)
  {
    if (v3 == v1) {
      goto LABEL_42;
    }
    uint64_t v6 = *(void *)(result + v5);
    uint64_t v7 = *(void *)(v4 + v5 - 120);
    BOOL v8 = __OFADD__(v6, v7);
    uint64_t v9 = v6 + v7;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v10 = *(void *)(v4 + v5 - 112);
    BOOL v8 = __OFADD__(v9, v10);
    uint64_t v11 = v9 + v10;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v12 = *(void *)(v4 + v5 - 104);
    BOOL v8 = __OFADD__(v11, v12);
    uint64_t v13 = v11 + v12;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v14 = *(void *)(v4 + v5 - 96);
    BOOL v8 = __OFADD__(v13, v14);
    uint64_t v15 = v13 + v14;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v16 = *(void *)(v4 + v5 - 88);
    BOOL v8 = __OFADD__(v15, v16);
    uint64_t v17 = v15 + v16;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v18 = *(void *)(v4 + v5 - 80);
    BOOL v8 = __OFADD__(v17, v18);
    uint64_t v19 = v17 + v18;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v20 = *(void *)(v4 + v5 - 72);
    BOOL v8 = __OFADD__(v19, v20);
    uint64_t v21 = v19 + v20;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v22 = *(void *)(v4 + v5 - 64);
    BOOL v8 = __OFADD__(v21, v22);
    uint64_t v23 = v21 + v22;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v24 = *(void *)(v4 + v5 - 56);
    BOOL v8 = __OFADD__(v23, v24);
    uint64_t v25 = v23 + v24;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v26 = *(void *)(v4 + v5 - 48);
    BOOL v8 = __OFADD__(v25, v26);
    uint64_t v27 = v25 + v26;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v28 = *(void *)(v4 + v5 - 40);
    BOOL v8 = __OFADD__(v27, v28);
    uint64_t v29 = v27 + v28;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v30 = *(void *)(v4 + v5 - 32);
    BOOL v8 = __OFADD__(v29, v30);
    uint64_t v31 = v29 + v30;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v32 = *(void *)(v4 + v5 - 24);
    BOOL v8 = __OFADD__(v31, v32);
    uint64_t v33 = v31 + v32;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v34 = *(void *)(v4 + v5 - 16);
    BOOL v8 = __OFADD__(v33, v34);
    uint64_t v35 = v33 + v34;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v36 = *(void *)(v4 + v5 - 8);
    BOOL v8 = __OFADD__(v35, v36);
    uint64_t v37 = v35 + v36;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v38 = *(void *)(v4 + v5);
    BOOL v8 = __OFADD__(v37, v38);
    uint64_t v39 = v37 + v38;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v40 = *(void *)(v4 + v5 + 8);
    BOOL v8 = __OFADD__(v39, v40);
    uint64_t v41 = v39 + v40;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v42 = *(void *)(v4 + v5 + 16);
    BOOL v8 = __OFADD__(v41, v42);
    uint64_t v43 = v41 + v42;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v44 = *(void *)(v4 + v5 + 24);
    BOOL v8 = __OFADD__(v43, v44);
    uint64_t v45 = v43 + v44;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v46 = *(void *)(v4 + v5 + 32);
    BOOL v8 = __OFADD__(v45, v46);
    uint64_t v47 = v45 + v46;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v48 = *(void *)(v4 + v5 + 40);
    BOOL v8 = __OFADD__(v47, v48);
    uint64_t v49 = v47 + v48;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v50 = *(void *)(v4 + v5 + 48);
    BOOL v8 = __OFADD__(v49, v50);
    uint64_t v51 = v49 + v50;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v52 = *(void *)(v4 + v5 + 56);
    BOOL v8 = __OFADD__(v51, v52);
    uint64_t v53 = v51 + v52;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v54 = *(void *)(v4 + v5 + 64);
    BOOL v8 = __OFADD__(v53, v54);
    uint64_t v55 = v53 + v54;
    if (v8) {
      goto LABEL_41;
    }
    uint64_t v56 = *(void *)(v4 + v5 + 72);
    BOOL v8 = __OFADD__(v55, v56);
    uint64_t v57 = v55 + v56;
    if (v8
      || (v58 = *(void *)(v4 + v5 + 80), BOOL v8 = __OFADD__(v57, v58), v59 = v57 + v58, v8)
      || (v60 = *(void *)(v4 + v5 + 88), BOOL v8 = __OFADD__(v59, v60), v61 = v59 + v60, v8))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    if (v61 >= 6) {
      break;
    }
    if (v5 != 248)
    {
      v5 += 8;
      if (v1++ | v61) {
        continue;
      }
    }
    return 0;
  }
  if (v5 == 256) {
    goto LABEL_44;
  }
  uint64_t v63 = 0;
  while (1)
  {
    uint64_t v64 = *(void *)(result + v5);
    BOOL v8 = __OFADD__(v63, v64);
    v63 += v64;
    if (v8) {
      break;
    }
    v5 += 8;
    if (v5 == 256) {
      return v63 > 0;
    }
  }
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
  return result;
}

uint64_t sub_250EEF160(uint64_t a1)
{
  uint64_t v2 = sub_250F0C1A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v36 = (char *)&v29 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_250EEF508(0, &qword_26B20F290, MEMORY[0x263F07908], sub_250EEF48C, MEMORY[0x263F8DBD8]);
    uint64_t v9 = sub_250F0D460();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v34 = v12;
    uint64_t v35 = v9 + 56;
    uint64_t v32 = a1 + ((*(unsigned __int8 *)(v11 + 64) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 64));
    uint64_t v13 = *(void *)(v11 + 56);
    uint64_t v14 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v30 = v8;
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v33 = v10;
      v34(v36, v32 + v13 * v10, v2);
      sub_250EEF48C();
      uint64_t v15 = sub_250F0CEC0();
      uint64_t v16 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v17 = v15 & v16;
      unint64_t v18 = (v15 & (unint64_t)v16) >> 6;
      uint64_t v19 = *(void *)(v35 + 8 * v18);
      uint64_t v20 = 1 << (v15 & v16);
      if ((v20 & v19) != 0)
      {
        do
        {
          uint64_t v21 = v11;
          v34(v6, *(void *)(v9 + 48) + v17 * v13, v2);
          sub_250EEDB84(&qword_269B11240, MEMORY[0x263F07908]);
          char v22 = sub_250F0CF40();
          uint64_t v23 = *v14;
          (*v14)(v6, v2);
          if (v22)
          {
            v23(v36, v2);
            uint64_t v11 = v21;
            uint64_t v8 = v30;
            goto LABEL_4;
          }
          unint64_t v17 = (v17 + 1) & v16;
          unint64_t v18 = v17 >> 6;
          uint64_t v19 = *(void *)(v35 + 8 * (v17 >> 6));
          uint64_t v20 = 1 << v17;
          uint64_t v11 = v21;
        }
        while ((v19 & (1 << v17)) != 0);
        uint64_t v8 = v30;
      }
      uint64_t v24 = v36;
      *(void *)(v35 + 8 * v18) = v20 | v19;
      uint64_t result = (*v31)(*(void *)(v9 + 48) + v17 * v13, v24, v2);
      uint64_t v26 = *(void *)(v9 + 16);
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        break;
      }
      *(void *)(v9 + 16) = v28;
LABEL_4:
      uint64_t v10 = v33 + 1;
      if (v33 + 1 == v8) {
        return v9;
      }
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x263F8EE88];
  }
  return result;
}

uint64_t sub_250EEF48C()
{
  return sub_250EEDB84(&qword_26B20F1D8, MEMORY[0x263F07908]);
}

void sub_250EEF4C0(uint64_t a1)
{
}

void sub_250EEF508(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(void), uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v9 = a3(255);
    uint64_t v10 = a4();
    unint64_t v11 = a5(a1, v9, v10);
    if (!v12) {
      atomic_store(v11, a2);
    }
  }
}

unint64_t sub_250EEF588()
{
  unint64_t result = qword_26B20F240;
  if (!qword_26B20F240)
  {
    sub_250EC18D8(255);
    sub_250EEDB84((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
    sub_250EA63A0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26B20F240);
  }
  return result;
}

uint64_t sub_250EEF630(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250EEF698(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250EEF700(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EEF764()
{
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250EEF774(void *a1, uint64_t a2)
{
  return sub_250EED8B8(a1, a2, *(void **)(v2 + 16));
}

uint64_t sub_250EEF77C()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EEF78C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250EEF7EC(void **a1)
{
  uint64_t v2 = *(void *)(type metadata accessor for BloodOxygenMetadataStatistics(0) - 8);
  uint64_t v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v3 = (void *)sub_250EF48E4(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (char *)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  uint64_t result = sub_250EF330C(v6);
  *a1 = v3;
  return result;
}

BOOL sub_250EEF894()
{
  uint64_t v1 = v0;
  id aBlock[6] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = type metadata accessor for BloodOxygenComparisonSummary(0);
  MEMORY[0x270FA5388](v2 - 8);
  uint64_t v4 = (char *)&aBlock[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = sub_250EEFE6C();
  uint64_t v6 = (void *)swift_allocObject();
  BOOL v7 = (char)v6;
  void v6[2] = sub_250EF3128;
  v6[3] = v1;
  aBlock[4] = sub_250EF3140;
  aBlock[5] = v6;
  aBlock[0] = (id)MEMORY[0x263EF8330];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_250EF0E68;
  uint64_t aBlock[3] = &block_descriptor_9;
  unint64_t v8 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_release();
  aBlock[0] = 0;
  unsigned __int8 v9 = objc_msgSend(v5, sel_enumerateWithError_handler_, aBlock, v8);
  _Block_release(v8);
  id v10 = aBlock[0];
  char isEscapingClosureAtFileLocation = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (isEscapingClosureAtFileLocation) {
    __break(1u);
  }
  if (v9)
  {
    sub_250EF0EC4((uint64_t)v4);
    BOOL v7 = sub_250EF1158();

    sub_250EF4B80((uint64_t)v4, type metadata accessor for BloodOxygenComparisonSummary);
    swift_release();
  }
  else
  {
    sub_250F0BFA0();

    swift_willThrow();
    swift_release();
  }
  return v7;
}

uint64_t sub_250EEFAE8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v36 = a1;
  sub_250E8E700();
  uint64_t v4 = v3;
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  unsigned __int8 v9 = (char *)&v32 - v8;
  sub_250EF4C94(0, (unint64_t *)&qword_26B20DED0, MEMORY[0x263F8D1A0]);
  uint64_t v37 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v32 - v14;
  uint64_t v16 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange;
  uint64_t v17 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  uint64_t v18 = sub_250F0CE70();
  sub_250EF4A3C(&qword_26B20E340, MEMORY[0x263F090E8]);
  uint64_t result = sub_250F0CF00();
  if (result)
  {
    uint64_t v20 = *(int *)(v4 + 48);
    uint64_t v33 = v13;
    uint64_t v34 = v15;
    uint64_t v21 = &v9[v20];
    char v22 = v7;
    uint64_t v23 = *(void **)(v18 - 8);
    uint64_t v24 = (void (*)(char *, uint64_t, uint64_t))v23[2];
    uint64_t v35 = v2;
    v24(v9, v16, v18);
    uint64_t v32 = v21;
    v24(v21, v17, v18);
    uint64_t v25 = &v22[*(int *)(v4 + 48)];
    v24(v22, (uint64_t)v9, v18);
    v24(v25, (uint64_t)v21, v18);
    uint64_t v26 = (void (*)(char *, char *, uint64_t))v23[4];
    uint64_t v27 = (uint64_t)v33;
    v26(v33, v22, v18);
    uint64_t v28 = (void (*)(char *, uint64_t))v23[1];
    v28(v25, v18);
    uint64_t v29 = &v22[*(int *)(v4 + 48)];
    v26(v22, v9, v18);
    v26(v29, v32, v18);
    v26((char *)(v27 + *(int *)(v37 + 36)), v29, v18);
    v28(v22, v18);
    uint64_t v30 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x263F8D1A0];
    uint64_t v31 = (uint64_t)v34;
    sub_250EF54CC(v27, (uint64_t)v34, (unint64_t *)&qword_26B20DED0, MEMORY[0x263F8D1A0]);
    sub_250F0CF10();
    return sub_250EF4D30(v31, (unint64_t *)&qword_26B20DED0, v30);
  }
  else
  {
    __break(1u);
  }
  return result;
}

id sub_250EEFE6C()
{
  uint64_t v1 = sub_250F0BF30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v3);
  BOOL v7 = (char *)&v30 - v6;
  sub_250E8D194(0, &qword_269B11298);
  uint64_t ObjCClassFromMetadata = (void *)swift_getObjCClassFromMetadata();
  uint64_t v30 = sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  id v9 = (id)*MEMORY[0x263F09E88];
  uint64_t v10 = (void *)MEMORY[0x25338DDE0]();
  uint64_t v11 = *(void **)(v0 + 16);
  id v31 = objc_msgSend(ObjCClassFromMetadata, sel_entityEnumeratorWithType_profile_, v10, v11);

  sub_250EF4C48(0, (unint64_t *)&qword_26B20E480, MEMORY[0x263F8EE50] + 8, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F250;
  *(void *)(inited + 32) = (id)HDDataEntityPredicateForObjectsFromAppleWatchSources();
  id v13 = objc_msgSend(v11, sel_metadataManager);
  id v14 = objc_msgSend(v13, sel_predicateWithMetadataKey_exists_, *MEMORY[0x263F09A48], 1);

  *(void *)(inited + 40) = v14;
  sub_250EEFAE8((uint64_t)v5);
  sub_250F0BEA0();
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v15(v5, v1);
  uint64_t v16 = (void *)sub_250F0BEC0();
  v15(v7, v1);
  uint64_t v17 = (void *)MEMORY[0x25338DDE0](v9);
  id v18 = (id)HDSampleEntityPredicateForDateInterval();

  *(void *)(inited + 48) = v18;
  unint64_t v32 = inited;
  sub_250F0D050();
  unint64_t v19 = v32;
  id v20 = v31;
  sub_250EA72E4(v19);
  swift_bridgeObjectRelease();
  uint64_t v21 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  id v22 = objc_msgSend(self, sel_predicateMatchingAllPredicates_, v21);

  objc_msgSend(v20, sel_setPredicate_, v22);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_250F0F070;
  sub_250F0CF80();
  sub_250E8D194(0, &qword_269B112A0);
  id v24 = v20;
  uint64_t v25 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t v26 = swift_getObjCClassFromMetadata();
  id v27 = objc_msgSend(self, sel_orderingTermWithProperty_entityClass_ascending_, v25, v26, 1);

  *(void *)(v23 + 32) = v27;
  unint64_t v32 = v23;
  sub_250F0D050();
  sub_250E8D194(0, &qword_269B112A8);
  uint64_t v28 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  objc_msgSend(v24, sel_setOrderingTerms_, v28);

  return v24;
}

BOOL sub_250EF02C4(void *a1, uint64_t a2, uint64_t a3)
{
  self;
  uint64_t v5 = (void *)swift_dynamicCastObjCClass();
  if (v5)
  {
    id v6 = a1;
    sub_250EF0414(v5);
  }
  else
  {
    BOOL v7 = self;
    sub_250F0D480();
    swift_bridgeObjectRelease();
    id v8 = objc_msgSend(a1, sel_description, 0xD00000000000002DLL, 0x8000000250F12A00);
    sub_250F0CF80();

    sub_250F0CFB0();
    swift_bridgeObjectRelease();
    id v6 = (id)sub_250F0CF50();
    swift_bridgeObjectRelease();
    objc_msgSend(v7, sel_hk_assignError_code_description_, a3, 0, v6);
  }

  return v5 != 0;
}

id sub_250EF0414(void *a1)
{
  uint64_t v2 = v1;
  id v98 = a1;
  uint64_t v91 = sub_250F0C1B0();
  uint64_t v89 = *(void *)(v91 - 8);
  MEMORY[0x270FA5388](v91);
  unint64_t v90 = (char *)v83 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EF2884();
  uint64_t v86 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v88 = (uint64_t)v83 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  uint64_t v92 = (uint64_t)v83 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  uint64_t v94 = (void *)((char *)v83 - v9);
  uint64_t v10 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v97 = *((void *)v10 - 1);
  MEMORY[0x270FA5388](v10);
  uint64_t v93 = (uint64_t)v83 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_250F0C060();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v87 = (char *)v83 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v96 = (char *)v83 - v17;
  uint64_t v18 = MEMORY[0x270FA5388](v16);
  id v20 = (char *)v83 - v19;
  MEMORY[0x270FA5388](v18);
  id v22 = (char *)v83 - v21;
  uint64_t v23 = OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample;
  id v24 = *(void **)(v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample);
  if (v24)
  {
    id v25 = v24;
    uint64_t v95 = v23;
    id v26 = objc_msgSend(v25, sel_endDate);
    sub_250F0C030();

    id v27 = objc_msgSend(v98, sel_endDate);
    sub_250F0C030();

    sub_250EF4A3C((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
    LOBYTE(v27) = sub_250F0CEE0();

    uint64_t v28 = *(void (**)(char *, uint64_t))(v13 + 8);
    v28(v20, v12);
    id result = (id)((uint64_t (*)(char *, uint64_t))v28)(v22, v12);
    uint64_t v23 = v95;
    if (v27)
    {
      __break(1u);
      goto LABEL_30;
    }
  }
  uint64_t v95 = v13;
  id v30 = objc_msgSend(v98, sel_metadata);
  uint64_t v31 = MEMORY[0x263F8EE58];
  if (!v30)
  {
    long long v100 = 0u;
    long long v101 = 0u;
LABEL_14:
    sub_250EF3200((uint64_t)&v100, (uint64_t)&qword_26B20F070, v31 + 8, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF4C48);
    goto LABEL_26;
  }
  unint64_t v32 = v30;
  uint64_t v33 = sub_250F0CE90();

  uint64_t v34 = sub_250F0CF80();
  if (*(void *)(v33 + 16))
  {
    unint64_t v36 = sub_250EFCF60(v34, v35);
    uint64_t v37 = v22;
    if (v38)
    {
      sub_250E8BF18(*(void *)(v33 + 56) + 32 * v36, (uint64_t)&v100);
    }
    else
    {
      long long v100 = 0u;
      long long v101 = 0u;
    }
  }
  else
  {
    long long v100 = 0u;
    long long v101 = 0u;
    uint64_t v37 = v22;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!*((void *)&v101 + 1)) {
    goto LABEL_14;
  }
  sub_250E8D194(0, &qword_26B20EEC8);
  if (swift_dynamicCast())
  {
    uint64_t v39 = (uint64_t)v37;
    uint64_t v40 = v99;
    uint64_t v41 = self;
    id v42 = v40;
    id v43 = objc_msgSend(v41, sel_pascalUnitWithMetricPrefix_, 9);
    objc_msgSend(v42, sel_doubleValueForUnit_, v43);
    double v45 = v44;

    id v46 = objc_msgSend(v98, sel_endDate);
    uint64_t v47 = v96;
    sub_250F0C030();

    uint64_t v48 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
    swift_beginAccess();
    uint64_t v49 = (void (*)(void, void, void))v94;
    sub_250EF316C(v48, (uint64_t)v94);
    int v50 = (*(uint64_t (**)(void, uint64_t, int *))(v97 + 48))(v49, 1, v10);
    id v85 = v42;
    if (v50 == 1)
    {
      sub_250EF3200((uint64_t)v49, (uint64_t)&qword_269B11268, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF48F8);
      uint64_t v51 = v95;
      uint64_t v52 = v39;
      uint64_t v53 = v39;
      uint64_t v54 = v12;
      (*(void (**)(uint64_t, char *, uint64_t))(v95 + 16))(v53, v47, v12);
      uint64_t v55 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v90, v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar, v91);
      uint64_t v56 = v92;
      sub_250EF19B4(v52, v55, v92, v45);

      (*(void (**)(char *, uint64_t))(v51 + 8))(v47, v54);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v97 + 56))(v56, 0, 1, v10);
      swift_beginAccess();
      uint64_t v57 = v56;
      uint64_t v58 = v48;
LABEL_25:
      sub_250EF4A84(v57, v58);
      swift_endAccess();
      goto LABEL_26;
    }
    uint64_t v84 = v48;
    uint64_t v59 = (uint64_t)v49;
    uint64_t v60 = v93;
    sub_250EF4BE0(v59, v93, type metadata accessor for BloodOxygenMetadataStatistics);
    uint64_t v61 = v60 + v10[5];
    uint64_t v62 = v12;
    v83[1] = sub_250EF4A3C((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
    char v63 = sub_250F0CF00();
    uint64_t v64 = v87;
    uint64_t v94 = *(void **)(v95 + 16);
    ((void (*)(char *, char *, uint64_t))v94)(v87, v47, v62);
    uint64_t v65 = v88;
    sub_250EF4B18(v61, v88, (uint64_t (*)(void))sub_250EF2884);
    if (v63) {
      char v66 = sub_250F0CEE0();
    }
    else {
      char v66 = 0;
    }
    uint64_t v67 = v62;
    sub_250EF4B80(v65, (uint64_t (*)(void))sub_250EF2884);
    uint64_t v68 = v64;
    uint64_t v69 = *(void (**)(char *, uint64_t))(v95 + 8);
    v69(v68, v62);
    if ((v66 & 1) == 0)
    {
      sub_250EF1CF4();
      ((void (*)(char *, char *, uint64_t))v94)(v22, v96, v62);
      uint64_t v79 = v62;
      uint64_t v80 = (uint64_t)v90;
      (*(void (**)(char *, uint64_t, uint64_t))(v89 + 16))(v90, v2 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar, v91);
      uint64_t v78 = v92;
      sub_250EF19B4((uint64_t)v22, v80, v92, v45);

      sub_250EF4B80(v93, type metadata accessor for BloodOxygenMetadataStatistics);
      v69(v96, v79);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v97 + 56))(v78, 0, 1, v10);
      uint64_t v77 = v84;
      goto LABEL_24;
    }

    uint64_t v70 = v10[6];
    uint64_t v71 = v67;
    uint64_t v72 = v93;
    if (v45 >= *(double *)(v93 + v70)) {
      double v45 = *(double *)(v93 + v70);
    }
    id result = (id)((uint64_t (*)(char *, uint64_t))v69)(v96, v71);
    *(double *)(v72 + v70) = v45;
    uint64_t v73 = v10[7];
    uint64_t v74 = *(void *)(v72 + v73);
    BOOL v75 = __OFADD__(v74, 1);
    uint64_t v76 = v74 + 1;
    uint64_t v77 = v84;
    if (!v75)
    {
      *(void *)(v72 + v73) = v76;
      uint64_t v78 = v92;
      sub_250EF4BE0(v72, v92, type metadata accessor for BloodOxygenMetadataStatistics);
      (*(void (**)(uint64_t, void, uint64_t, int *))(v97 + 56))(v78, 0, 1, v10);
LABEL_24:
      swift_beginAccess();
      uint64_t v57 = v78;
      uint64_t v58 = v77;
      goto LABEL_25;
    }
LABEL_30:
    __break(1u);
    return result;
  }
LABEL_26:
  id v81 = *(void **)(v2 + v23);
  *(void *)(v2 + v23) = v98;

  id v82 = v98;
  return v82;
}

uint64_t sub_250EF0E68(uint64_t a1, void *a2)
{
  uint64_t v2 = *(uint64_t (**)(void))(a1 + 32);
  id v3 = a2;
  char v4 = v2();

  return v4 & 1;
}

uint64_t sub_250EF0EC4@<X0>(uint64_t a1@<X8>)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v3 - 8);
  uint64_t v5 = (char *)&v18 - v4;
  sub_250EF1CF4();
  uint64_t v6 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics;
  swift_beginAccess();
  unint64_t v7 = *(void *)(*(void *)v6 + 16);
  if (v7)
  {
    uint64_t v19 = *(void **)v6;
    swift_bridgeObjectRetain_n();
    sub_250EEF7EC(&v19);
    swift_bridgeObjectRelease();
    uint64_t v8 = v19;
    unint64_t v9 = v7 >> 1;
    if (v9 >= v19[2])
    {
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
    }
    else
    {
      uint64_t v10 = type metadata accessor for BloodOxygenMetadataStatistics(0);
      uint64_t v11 = *(void *)(v10 - 8);
      sub_250EF4B18((uint64_t)v8+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v9, (uint64_t)v5, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_release();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v5, 0, 1, v10);
      uint64_t v12 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
      swift_beginAccess();
      uint64_t v13 = type metadata accessor for BloodOxygenComparisonSummary(0);
      sub_250EF316C(v12, a1 + *(int *)(v13 + 20));
      return sub_250EF3278((uint64_t)v5, a1);
    }
  }
  else
  {
    uint64_t v15 = type metadata accessor for BloodOxygenMetadataStatistics(0);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(a1, 1, 1, v15);
    uint64_t v16 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
    swift_beginAccess();
    uint64_t v17 = type metadata accessor for BloodOxygenComparisonSummary(0);
    return sub_250EF316C(v16, a1 + *(int *)(v17 + 20));
  }
  return result;
}

BOOL sub_250EF1158()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v2);
  uint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v27 - v7;
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = MEMORY[0x270FA5388](v10);
  uint64_t v15 = (char *)&v27 - v14;
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v27 - v16;
  sub_250EF316C(v1, (uint64_t)&v27 - v16);
  uint64_t v18 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  if (v18(v17, 1, v2) == 1)
  {
    uint64_t v19 = (uint64_t)v17;
LABEL_7:
    sub_250EF3200(v19, (uint64_t)&qword_269B11268, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF48F8);
    return 0;
  }
  double v20 = *(double *)&v17[*(int *)(v2 + 24)];
  sub_250EF4B80((uint64_t)v17, type metadata accessor for BloodOxygenMetadataStatistics);
  double v21 = __exp10(v20 * 0.0154 + -0.445);
  sub_250EF316C(v1, (uint64_t)v15);
  if (v18(v15, 1, v2) == 1)
  {
    uint64_t v19 = (uint64_t)v15;
    goto LABEL_7;
  }
  sub_250EF4BE0((uint64_t)v15, (uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
  uint64_t v22 = type metadata accessor for BloodOxygenComparisonSummary(0);
  sub_250EF316C(v1 + *(int *)(v22 + 20), (uint64_t)v12);
  if (v18(v12, 1, v2) == 1)
  {
    sub_250EF4B80((uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
    uint64_t v19 = (uint64_t)v12;
    goto LABEL_7;
  }
  sub_250EF4BE0((uint64_t)v12, (uint64_t)v6, type metadata accessor for BloodOxygenMetadataStatistics);
  double v24 = *(double *)&v8[*(int *)(v2 + 24)];
  sub_250EF4B80((uint64_t)v8, type metadata accessor for BloodOxygenMetadataStatistics);
  double v25 = v24 - v21;
  double v26 = *(double *)&v6[*(int *)(v2 + 24)];
  sub_250EF4B80((uint64_t)v6, type metadata accessor for BloodOxygenMetadataStatistics);
  return v26 <= v25;
}

uint64_t sub_250EF151C()
{
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetDay;
  uint64_t v2 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetEndDate;
  uint64_t v4 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  uint64_t v5 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_gregorianCalendar;
  uint64_t v6 = sub_250F0C1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(v5, v6);
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_250EF165C()
{
  return type metadata accessor for OxygenSaturationElevationContextProvider(0);
}

uint64_t type metadata accessor for OxygenSaturationElevationContextProvider(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B11248);
}

uint64_t sub_250EF1684()
{
  uint64_t result = sub_250F0CE70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C060();
    if (v2 <= 0x3F)
    {
      uint64_t result = sub_250F0C1B0();
      if (v3 <= 0x3F) {
        return swift_updateClassMetadata2();
      }
    }
  }
  return result;
}

uint64_t sub_250EF17A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
  uint64_t v13 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
  v14(v12, 1, 1, v13);
  v14(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics, 1, 1, v13);
  *(void *)(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_lastSample) = 0;
  sub_250EF54CC(a1, v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  uint64_t v15 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  uint64_t v16 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(v15, a2, v16);
  uint64_t v17 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar;
  uint64_t v18 = sub_250F0C1B0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 32))(v17, a3, v18);
  *(void *)(v6
            + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics) = a4;
  uint64_t v19 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
  swift_beginAccess();
  sub_250EF4A84(a5, v19);
  swift_endAccess();
  uint64_t v20 = v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
  swift_beginAccess();
  sub_250EF4A84(a6, v20);
  swift_endAccess();
  return v6;
}

uint64_t sub_250EF19B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  uint64_t v26 = a1;
  uint64_t v29 = a3;
  sub_250EF2884();
  MEMORY[0x270FA5388](v6 - 8);
  uint64_t v27 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = sub_250F0BF30();
  uint64_t v8 = *(void *)(v28 - 8);
  MEMORY[0x270FA5388](v28);
  uint64_t v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_250F0CE70();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v26 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v26 - v16;
  uint64_t v18 = (void *)sub_250F0BFC0();
  uint64_t v19 = (void *)sub_250F0C160();
  objc_msgSend(v18, sel_hk_morningIndexWithCalendar_, v19);

  sub_250F0CE20();
  sub_250F0CD90();
  (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
  uint64_t v20 = (uint64_t)v27;
  sub_250F0BEB0();
  uint64_t v21 = sub_250F0C1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v21 - 8) + 8))(a2, v21);
  uint64_t v22 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v26, v22);
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v28);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v17, v11);
  uint64_t v23 = v29;
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(v29, v15, v11);
  double v24 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t result = sub_250EF4BE0(v20, v23 + v24[5], (uint64_t (*)(void))sub_250EF2884);
  *(double *)(v23 + v24[6]) = a4;
  *(void *)(v23 + v24[7]) = 1;
  return result;
}

uint64_t sub_250EF1CF4()
{
  uint64_t v1 = v0;
  sub_250EF4C94(0, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  uint64_t v42 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v4 = (char *)&v38 - v3;
  uint64_t v5 = sub_250F0CE70();
  uint64_t v43 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v11 = (char *)&v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v38 - v12;
  uint64_t v14 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v41 = (uint64_t)&v38 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v19 = (char *)&v38 - v18;
  uint64_t v20 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics;
  swift_beginAccess();
  uint64_t v44 = v20;
  sub_250EF316C(v20, (uint64_t)v13);
  uint64_t v45 = v15;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1) {
    return sub_250EF3200((uint64_t)v13, (uint64_t)&qword_269B11268, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF48F8);
  }
  uint64_t v39 = v14;
  uint64_t v40 = v11;
  sub_250EF4BE0((uint64_t)v13, (uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
  uint64_t v38 = v1;
  uint64_t v22 = v1 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange;
  sub_250EF4A3C(&qword_26B20E340, MEMORY[0x263F090E8]);
  char v23 = sub_250F0CF00();
  uint64_t v24 = v43;
  (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v7, v19, v5);
  sub_250EF49BC(v22, (uint64_t)v4);
  if (v23)
  {
    char v25 = sub_250F0CEE0();
    sub_250EF4D30((uint64_t)v4, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    uint64_t v26 = v45;
    if (v25)
    {
      uint64_t v27 = v41;
      sub_250EF4B18((uint64_t)v19, v41, type metadata accessor for BloodOxygenMetadataStatistics);
      uint64_t v28 = (unint64_t *)(v38
                               + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_completedBaselineStatistics);
      swift_beginAccess();
      unint64_t v29 = *v28;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t *v28 = v29;
      uint64_t v31 = v39;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        unint64_t v29 = sub_250EA1ED4(0, *(void *)(v29 + 16) + 1, 1, v29);
        unint64_t *v28 = v29;
      }
      unint64_t v33 = *(void *)(v29 + 16);
      unint64_t v32 = *(void *)(v29 + 24);
      if (v33 >= v32 >> 1)
      {
        unint64_t v29 = sub_250EA1ED4(v32 > 1, v33 + 1, 1, v29);
        unint64_t *v28 = v29;
      }
      *(void *)(v29 + 16) = v33 + 1;
      sub_250EF4BE0(v27, v29+ ((*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80))+ *(void *)(v26 + 72) * v33, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_endAccess();
      sub_250EF4B80((uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
      uint64_t v34 = (uint64_t)v40;
      goto LABEL_14;
    }
  }
  else
  {
    sub_250EF4D30((uint64_t)v4, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v5);
    uint64_t v26 = v45;
  }
  uint64_t v35 = v38;
  sub_250EF4A3C((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
  sub_250F0D330();
  uint64_t v31 = v39;
  uint64_t v34 = (uint64_t)v40;
  if (v46)
  {
    sub_250EF4B80((uint64_t)v19, type metadata accessor for BloodOxygenMetadataStatistics);
  }
  else
  {
    sub_250EF4BE0((uint64_t)v19, (uint64_t)v40, type metadata accessor for BloodOxygenMetadataStatistics);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v26 + 56))(v34, 0, 1, v31);
    uint64_t v36 = v35 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics;
    swift_beginAccess();
    sub_250EF4A84(v34, v36);
    swift_endAccess();
  }
LABEL_14:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v26 + 56))(v34, 1, 1, v31);
  uint64_t v37 = v44;
  swift_beginAccess();
  sub_250EF4A84(v34, v37);
  return swift_endAccess();
}

uint64_t sub_250EF23A4()
{
  sub_250EF4D30(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_baselineRange, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  uint64_t v1 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetDay;
  uint64_t v2 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  uint64_t v3 = v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_gregorianCalendar;
  uint64_t v4 = sub_250F0C1B0();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(v3, v4);
  swift_bridgeObjectRelease();
  sub_250EF3200(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_targetStatistics, (uint64_t)&qword_269B11268, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF48F8);
  sub_250EF3200(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon36BloodOxygenMetadataStatisticsBuilder_openStatistics, (uint64_t)&qword_269B11268, (uint64_t)type metadata accessor for BloodOxygenMetadataStatistics, (uint64_t (*)(void, uint64_t, uint64_t, void))sub_250EF48F8);

  return swift_deallocClassInstance();
}

uint64_t sub_250EF2544()
{
  return type metadata accessor for BloodOxygenMetadataStatisticsBuilder(0);
}

uint64_t type metadata accessor for BloodOxygenMetadataStatisticsBuilder(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B11258);
}

void sub_250EF256C()
{
  sub_250EF4C94(319, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  if (v0 <= 0x3F)
  {
    sub_250F0CE70();
    if (v1 <= 0x3F)
    {
      sub_250F0C1B0();
      if (v2 <= 0x3F)
      {
        sub_250EF48F8(319, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
        if (v3 <= 0x3F) {
          swift_updateClassMetadata2();
        }
      }
    }
  }
}

uint64_t type metadata accessor for BloodOxygenMetadataStatistics(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B11278);
}

uint64_t *sub_250EF2730(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_250F0CE70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_250F0C060();
    uint64_t v12 = *(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16);
    v12(v9, v10, v11);
    sub_250EF2884();
    v12(&v9[*(int *)(v13 + 36)], &v10[*(int *)(v13 + 36)], v11);
    uint64_t v14 = a3[7];
    *(uint64_t *)((char *)a1 + a3[6]) = *(uint64_t *)((char *)a2 + a3[6]);
    *(uint64_t *)((char *)a1 + v14) = *(uint64_t *)((char *)a2 + v14);
  }
  return a1;
}

void sub_250EF2884()
{
  if (!qword_269B11270)
  {
    sub_250F0C060();
    sub_250EF4A3C((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
    unint64_t v0 = sub_250F0D180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B11270);
    }
  }
}

uint64_t sub_250EF2918(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_250F0C060();
  uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  ((void (*)(void *__return_ptr, uint64_t, uint64_t))v10)((void *)(v6 - 8), v5, v6);
  sub_250EF2884();
  uint64_t v8 = v5 + *(int *)(v7 + 36);
  return v10(v8, v6);
}

uint64_t sub_250EF29F8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16);
  v11(v8, v9, v10);
  sub_250EF2884();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_250EF2AFC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24);
  v11(v8, v9, v10);
  sub_250EF2884();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_250EF2C04(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32);
  v11(v8, v9, v10);
  sub_250EF2884();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_250EF2D08(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40);
  v11(v8, v9, v10);
  sub_250EF2884();
  v11(v8 + *(int *)(v12 + 36), v9 + *(int *)(v12 + 36), v10);
  uint64_t v13 = a3[7];
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  *(void *)(a1 + v13) = *(void *)(a2 + v13);
  return a1;
}

uint64_t sub_250EF2E0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250EF2E20);
}

uint64_t sub_250EF2E20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    sub_250EF2884();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_250EF2F18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250EF2F2C);
}

uint64_t sub_250EF2F2C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_250F0CE70();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    sub_250EF2884();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

void sub_250EF3030()
{
  sub_250F0CE70();
  if (v0 <= 0x3F)
  {
    sub_250EF2884();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t type metadata accessor for BloodOxygenComparisonSummary(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B112B0);
}

BOOL sub_250EF3128(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_250EF02C4(a1, a2, a3);
}

uint64_t sub_250EF3130()
{
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250EF3140()
{
  return (*(uint64_t (**)(void))(v0 + 16))() & 1;
}

uint64_t sub_250EF316C(uint64_t a1, uint64_t a2)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EF3200(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void, uint64_t, uint64_t, void))
{
  uint64_t v5 = a4(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
  return a1;
}

uint64_t sub_250EF3278(uint64_t a1, uint64_t a2)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EF330C(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v140 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v134 = *(void *)(v140 - 8);
  uint64_t v4 = MEMORY[0x270FA5388](v140);
  uint64_t v131 = (uint64_t)&v126 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v141 = (uint64_t)&v126 - v7;
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v137 = (uint64_t)&v126 - v9;
  MEMORY[0x270FA5388](v8);
  uint64_t v136 = (uint64_t)&v126 - v10;
  uint64_t v11 = a1[1];
  uint64_t result = sub_250F0D640();
  if (result >= v11)
  {
    if (v11 < 0) {
      goto LABEL_138;
    }
    if (v11) {
      return sub_250EF3DD0(0, v11, 1, a1);
    }
    return result;
  }
  if (v11 >= 0) {
    uint64_t v13 = v11;
  }
  else {
    uint64_t v13 = v11 + 1;
  }
  if (v11 < -1) {
    goto LABEL_146;
  }
  uint64_t v128 = result;
  if (v11 < 2)
  {
    uint64_t v17 = (char *)MEMORY[0x263F8EE78];
    unint64_t v133 = MEMORY[0x263F8EE78]
         + ((*(unsigned __int8 *)(v134 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v134 + 80));
    uint64_t v127 = MEMORY[0x263F8EE78];
    if (v11 != 1)
    {
      unint64_t v19 = *(void *)(MEMORY[0x263F8EE78] + 16);
LABEL_104:
      unsigned int v119 = v17;
      if (v19 >= 2)
      {
        uint64_t v120 = *a1;
        do
        {
          unint64_t v121 = v19 - 2;
          if (v19 < 2) {
            goto LABEL_133;
          }
          if (!v120) {
            goto LABEL_145;
          }
          uint64_t v122 = *(void *)&v119[16 * v121 + 32];
          uint64_t v123 = *(void *)&v119[16 * v19 + 24];
          sub_250EF4098(v120 + *(void *)(v134 + 72) * v122, v120 + *(void *)(v134 + 72) * *(void *)&v119[16 * v19 + 16], v120 + *(void *)(v134 + 72) * v123, v133);
          if (v2) {
            break;
          }
          if (v123 < v122) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unsigned int v119 = sub_250EF48D0((uint64_t)v119);
          }
          if (v121 >= *((void *)v119 + 2)) {
            goto LABEL_135;
          }
          uint64_t v124 = &v119[16 * v121 + 32];
          *(void *)uint64_t v124 = v122;
          *((void *)v124 + 1) = v123;
          unint64_t v125 = *((void *)v119 + 2);
          if (v19 > v125) {
            goto LABEL_136;
          }
          memmove(&v119[16 * v19 + 16], &v119[16 * v19 + 32], 16 * (v125 - v19));
          *((void *)v119 + 2) = v125 - 1;
          unint64_t v19 = v125 - 1;
        }
        while (v125 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      *(void *)(v127 + 16) = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v14 = v13 >> 1;
    uint64_t v15 = sub_250F0D080();
    *(void *)(v15 + 16) = v14;
    uint64_t v16 = *(unsigned __int8 *)(v134 + 80);
    uint64_t v127 = v15;
    unint64_t v133 = v15 + ((v16 + 32) & ~v16);
  }
  uint64_t v18 = 0;
  uint64_t v17 = (char *)MEMORY[0x263F8EE78];
  uint64_t v138 = a1;
  while (1)
  {
    uint64_t v20 = v18;
    uint64_t v21 = v18 + 1;
    uint64_t v132 = v18;
    if (v18 + 1 >= v11)
    {
      uint64_t v31 = v18 + 1;
      goto LABEL_24;
    }
    uint64_t v135 = *a1;
    uint64_t v142 = *(void *)(v134 + 72);
    uint64_t v22 = v142;
    uint64_t v23 = v136;
    sub_250EF4B18(v135 + v142 * v21, v136, type metadata accessor for BloodOxygenMetadataStatistics);
    uint64_t v24 = v135 + v22 * v20;
    uint64_t v25 = v137;
    sub_250EF4B18(v24, v137, type metadata accessor for BloodOxygenMetadataStatistics);
    uint64_t v26 = *(int *)(v140 + 24);
    double v27 = *(double *)(v23 + v26);
    double v28 = *(double *)(v25 + v26);
    uint64_t v29 = v25;
    uint64_t v30 = v135;
    sub_250EF4B80(v29, type metadata accessor for BloodOxygenMetadataStatistics);
    sub_250EF4B80(v23, type metadata accessor for BloodOxygenMetadataStatistics);
    uint64_t v31 = v20 + 2;
    if (v20 + 2 >= v11)
    {
LABEL_21:
      if (v27 >= v28) {
        goto LABEL_24;
      }
LABEL_42:
      if (v31 < v20) {
        goto LABEL_139;
      }
      if (v20 < v31)
      {
        id v129 = v17;
        uint64_t v130 = v11;
        uint64_t v55 = 0;
        uint64_t v56 = v20;
        uint64_t v57 = v142;
        uint64_t v58 = v142 * (v31 - 1);
        uint64_t v59 = v31 * v142;
        uint64_t v60 = v56;
        uint64_t v61 = v56 * v142;
        do
        {
          if (v60 != v31 + v55 - 1)
          {
            uint64_t v63 = v31;
            uint64_t v64 = v135;
            if (!v135) {
              goto LABEL_144;
            }
            unint64_t v65 = v135 + v61;
            uint64_t v139 = v135 + v58;
            sub_250EF4BE0(v135 + v61, v131, type metadata accessor for BloodOxygenMetadataStatistics);
            if (v61 < v58 || v65 >= v64 + v59)
            {
              uint64_t v62 = v139;
              swift_arrayInitWithTakeFrontToBack();
            }
            else
            {
              uint64_t v62 = v139;
              if (v61 != v58) {
                swift_arrayInitWithTakeBackToFront();
              }
            }
            sub_250EF4BE0(v131, v62, type metadata accessor for BloodOxygenMetadataStatistics);
            uint64_t v31 = v63;
            uint64_t v57 = v142;
          }
          ++v60;
          --v55;
          v58 -= v57;
          v59 -= v57;
          v61 += v57;
        }
        while (v60 < v31 + v55);
        a1 = v138;
        uint64_t v17 = v129;
        uint64_t v11 = v130;
        uint64_t v20 = v132;
      }
      goto LABEL_24;
    }
    uint64_t v126 = v2;
    id v129 = v17;
    uint64_t v139 = v142 * v21;
    uint64_t v32 = v142 * v31;
    while (1)
    {
      uint64_t v33 = v11;
      uint64_t v34 = v31;
      uint64_t v35 = v136;
      sub_250EF4B18(v30 + v32, v136, type metadata accessor for BloodOxygenMetadataStatistics);
      uint64_t v36 = v137;
      sub_250EF4B18(v30 + v139, v137, type metadata accessor for BloodOxygenMetadataStatistics);
      BOOL v37 = *(double *)(v35 + *(int *)(v140 + 24)) >= *(double *)(v36 + *(int *)(v140 + 24));
      sub_250EF4B80(v36, type metadata accessor for BloodOxygenMetadataStatistics);
      sub_250EF4B80(v35, type metadata accessor for BloodOxygenMetadataStatistics);
      if (v27 < v28 == v37) {
        break;
      }
      ++v31;
      v30 += v142;
      uint64_t v11 = v33;
      if (v33 == v34 + 1)
      {
        uint64_t v31 = v33;
        a1 = v138;
        uint64_t v17 = v129;
        uint64_t v2 = v126;
        uint64_t v20 = v132;
        goto LABEL_21;
      }
    }
    a1 = v138;
    uint64_t v17 = v129;
    uint64_t v2 = v126;
    uint64_t v20 = v132;
    uint64_t v11 = v33;
    if (v27 < v28) {
      goto LABEL_42;
    }
LABEL_24:
    if (v31 >= v11) {
      goto LABEL_56;
    }
    if (__OFSUB__(v31, v20)) {
      goto LABEL_137;
    }
    if (v31 - v20 >= v128) {
      goto LABEL_56;
    }
    if (__OFADD__(v20, v128)) {
      goto LABEL_140;
    }
    uint64_t v38 = v20 + v128 >= v11 ? v11 : v20 + v128;
    if (v38 < v20) {
      break;
    }
    if (v31 != v38)
    {
      id v129 = v17;
      uint64_t v130 = v38;
      uint64_t v126 = v2;
      uint64_t v39 = *(void *)(v134 + 72);
      uint64_t v142 = v39 * (v31 - 1);
      uint64_t v135 = v39;
      uint64_t v40 = v31 * v39;
      do
      {
        uint64_t v42 = 0;
        uint64_t v43 = v20;
        uint64_t v139 = v31;
        while (1)
        {
          uint64_t v44 = *a1;
          uint64_t v45 = v40;
          uint64_t v46 = v40 + v42 + *a1;
          uint64_t v47 = v136;
          sub_250EF4B18(v46, v136, type metadata accessor for BloodOxygenMetadataStatistics);
          uint64_t v48 = v142 + v42 + v44;
          uint64_t v49 = v137;
          sub_250EF4B18(v48, v137, type metadata accessor for BloodOxygenMetadataStatistics);
          uint64_t v50 = *(int *)(v140 + 24);
          double v51 = *(double *)(v47 + v50);
          double v52 = *(double *)(v49 + v50);
          sub_250EF4B80(v49, type metadata accessor for BloodOxygenMetadataStatistics);
          sub_250EF4B80(v47, type metadata accessor for BloodOxygenMetadataStatistics);
          if (v51 >= v52) {
            break;
          }
          uint64_t v53 = *a1;
          if (!*a1) {
            goto LABEL_142;
          }
          uint64_t v40 = v45;
          uint64_t v54 = v53 + v142 + v42;
          sub_250EF4BE0(v53 + v45 + v42, v141, type metadata accessor for BloodOxygenMetadataStatistics);
          swift_arrayInitWithTakeFrontToBack();
          sub_250EF4BE0(v141, v54, type metadata accessor for BloodOxygenMetadataStatistics);
          v42 -= v135;
          ++v43;
          a1 = v138;
          uint64_t v41 = v139;
          if (v139 == v43) {
            goto LABEL_35;
          }
        }
        uint64_t v41 = v139;
        uint64_t v40 = v45;
LABEL_35:
        uint64_t v31 = v41 + 1;
        v142 += v135;
        v40 += v135;
        uint64_t v20 = v132;
      }
      while (v31 != v130);
      uint64_t v31 = v130;
      uint64_t v2 = v126;
      uint64_t v17 = v129;
    }
LABEL_56:
    if (v31 < v20) {
      goto LABEL_132;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v139 = v31;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v17 = sub_250EF4590(0, *((void *)v17 + 2) + 1, 1, v17);
    }
    unint64_t v68 = *((void *)v17 + 2);
    unint64_t v67 = *((void *)v17 + 3);
    unint64_t v19 = v68 + 1;
    if (v68 >= v67 >> 1) {
      uint64_t v17 = sub_250EF4590((char *)(v67 > 1), v68 + 1, 1, v17);
    }
    *((void *)v17 + 2) = v19;
    uint64_t v69 = v17 + 32;
    uint64_t v70 = &v17[16 * v68 + 32];
    uint64_t v71 = v139;
    *(void *)uint64_t v70 = v20;
    *((void *)v70 + 1) = v71;
    if (v68)
    {
      while (1)
      {
        unint64_t v72 = v19 - 1;
        if (v19 >= 4)
        {
          uint64_t v77 = &v69[16 * v19];
          uint64_t v78 = *((void *)v77 - 8);
          uint64_t v79 = *((void *)v77 - 7);
          BOOL v83 = __OFSUB__(v79, v78);
          uint64_t v80 = v79 - v78;
          if (v83) {
            goto LABEL_121;
          }
          uint64_t v82 = *((void *)v77 - 6);
          uint64_t v81 = *((void *)v77 - 5);
          BOOL v83 = __OFSUB__(v81, v82);
          uint64_t v75 = v81 - v82;
          char v76 = v83;
          if (v83) {
            goto LABEL_122;
          }
          unint64_t v84 = v19 - 2;
          id v85 = &v69[16 * v19 - 32];
          uint64_t v87 = *(void *)v85;
          uint64_t v86 = *((void *)v85 + 1);
          BOOL v83 = __OFSUB__(v86, v87);
          uint64_t v88 = v86 - v87;
          if (v83) {
            goto LABEL_124;
          }
          BOOL v83 = __OFADD__(v75, v88);
          uint64_t v89 = v75 + v88;
          if (v83) {
            goto LABEL_127;
          }
          if (v89 >= v80)
          {
            uint64_t v107 = &v69[16 * v72];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v83 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v83) {
              goto LABEL_131;
            }
            BOOL v100 = v75 < v110;
            goto LABEL_93;
          }
        }
        else
        {
          if (v19 != 3)
          {
            uint64_t v101 = *((void *)v17 + 4);
            uint64_t v102 = *((void *)v17 + 5);
            BOOL v83 = __OFSUB__(v102, v101);
            uint64_t v94 = v102 - v101;
            char v95 = v83;
            goto LABEL_87;
          }
          uint64_t v74 = *((void *)v17 + 4);
          uint64_t v73 = *((void *)v17 + 5);
          BOOL v83 = __OFSUB__(v73, v74);
          uint64_t v75 = v73 - v74;
          char v76 = v83;
        }
        if (v76) {
          goto LABEL_123;
        }
        unint64_t v84 = v19 - 2;
        unint64_t v90 = &v69[16 * v19 - 32];
        uint64_t v92 = *(void *)v90;
        uint64_t v91 = *((void *)v90 + 1);
        BOOL v93 = __OFSUB__(v91, v92);
        uint64_t v94 = v91 - v92;
        char v95 = v93;
        if (v93) {
          goto LABEL_126;
        }
        uint64_t v96 = &v69[16 * v72];
        uint64_t v98 = *(void *)v96;
        uint64_t v97 = *((void *)v96 + 1);
        BOOL v83 = __OFSUB__(v97, v98);
        uint64_t v99 = v97 - v98;
        if (v83) {
          goto LABEL_129;
        }
        if (__OFADD__(v94, v99)) {
          goto LABEL_130;
        }
        if (v94 + v99 >= v75)
        {
          BOOL v100 = v75 < v99;
LABEL_93:
          if (v100) {
            unint64_t v72 = v84;
          }
          goto LABEL_95;
        }
LABEL_87:
        if (v95) {
          goto LABEL_125;
        }
        uint64_t v103 = &v69[16 * v72];
        uint64_t v105 = *(void *)v103;
        uint64_t v104 = *((void *)v103 + 1);
        BOOL v83 = __OFSUB__(v104, v105);
        uint64_t v106 = v104 - v105;
        if (v83) {
          goto LABEL_128;
        }
        if (v106 < v94) {
          goto LABEL_14;
        }
LABEL_95:
        unint64_t v111 = v72 - 1;
        if (v72 - 1 >= v19)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        uint64_t v112 = *a1;
        if (!*a1) {
          goto LABEL_143;
        }
        unint64_t v113 = v17;
        uint64_t v114 = &v69[16 * v111];
        uint64_t v115 = *(void *)v114;
        uint64_t v116 = &v69[16 * v72];
        uint64_t v117 = *((void *)v116 + 1);
        sub_250EF4098(v112 + *(void *)(v134 + 72) * *(void *)v114, v112 + *(void *)(v134 + 72) * *(void *)v116, v112 + *(void *)(v134 + 72) * v117, v133);
        if (v2) {
          goto LABEL_115;
        }
        if (v117 < v115) {
          goto LABEL_118;
        }
        if (v72 > *((void *)v113 + 2)) {
          goto LABEL_119;
        }
        *(void *)uint64_t v114 = v115;
        *(void *)&v69[16 * v111 + 8] = v117;
        unint64_t v118 = *((void *)v113 + 2);
        if (v72 >= v118) {
          goto LABEL_120;
        }
        uint64_t v17 = v113;
        unint64_t v19 = v118 - 1;
        memmove(&v69[16 * v72], v116 + 16, 16 * (v118 - 1 - v72));
        *((void *)v113 + 2) = v118 - 1;
        a1 = v138;
        if (v118 <= 2) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v19 = 1;
LABEL_14:
    uint64_t v11 = a1[1];
    uint64_t v18 = v139;
    if (v139 >= v11) {
      goto LABEL_104;
    }
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  uint64_t result = sub_250F0D580();
  __break(1u);
  return result;
}

uint64_t sub_250EF3DD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v28 = a1;
  uint64_t v31 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v7 = MEMORY[0x270FA5388](v31);
  uint64_t v32 = (uint64_t)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v11 = (char *)&v26 - v10;
  uint64_t result = MEMORY[0x270FA5388](v9);
  uint64_t v15 = (char *)&v26 - v14;
  uint64_t v30 = a3;
  uint64_t v27 = a2;
  if (a3 != a2)
  {
    uint64_t v16 = *(void *)(v13 + 72);
    uint64_t v34 = v16 * (v30 - 1);
    uint64_t v29 = v16;
    uint64_t v33 = v16 * v30;
LABEL_5:
    uint64_t v17 = 0;
    uint64_t v18 = v28;
    while (1)
    {
      uint64_t v19 = *a4;
      uint64_t v20 = a4;
      sub_250EF4B18(v33 + v17 + *a4, (uint64_t)v15, type metadata accessor for BloodOxygenMetadataStatistics);
      sub_250EF4B18(v34 + v17 + v19, (uint64_t)v11, type metadata accessor for BloodOxygenMetadataStatistics);
      uint64_t v21 = *(int *)(v31 + 24);
      double v22 = *(double *)&v15[v21];
      double v23 = *(double *)&v11[v21];
      sub_250EF4B80((uint64_t)v11, type metadata accessor for BloodOxygenMetadataStatistics);
      uint64_t result = sub_250EF4B80((uint64_t)v15, type metadata accessor for BloodOxygenMetadataStatistics);
      if (v22 >= v23)
      {
LABEL_4:
        v34 += v29;
        v33 += v29;
        if (++v30 == v27) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v24 = *a4;
      if (!*a4) {
        break;
      }
      uint64_t v25 = v24 + v34 + v17;
      sub_250EF4BE0(v24 + v33 + v17, v32, type metadata accessor for BloodOxygenMetadataStatistics);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_250EF4BE0(v32, v25, type metadata accessor for BloodOxygenMetadataStatistics);
      v17 -= v29;
      ++v18;
      a4 = v20;
      if (v30 == v18) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_250EF4098(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v42 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v8 = MEMORY[0x270FA5388](v42);
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)&v40 - v11;
  uint64_t v14 = *(void *)(v13 + 72);
  if (!v14)
  {
    __break(1u);
LABEL_69:
    __break(1u);
LABEL_70:
    __break(1u);
    goto LABEL_71;
  }
  if (a2 - a1 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_69;
  }
  int64_t v15 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_70;
  }
  uint64_t v16 = (uint64_t)(a2 - a1) / v14;
  unint64_t v45 = a1;
  unint64_t v44 = a4;
  uint64_t v17 = v15 / v14;
  if (v16 >= v15 / v14)
  {
    if ((v17 & 0x8000000000000000) == 0)
    {
      uint64_t v19 = v17 * v14;
      if (a4 < a2 || a2 + v19 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v30 = a4 + v19;
      unint64_t v43 = a4 + v19;
      unint64_t v45 = a2;
      unint64_t v41 = a1;
      if (v19 >= 1 && a1 < a2)
      {
        do
        {
          unint64_t v32 = a3 - v14;
          sub_250EF4B18(v30 - v14, (uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
          unint64_t v33 = a2 - v14;
          sub_250EF4B18(a2 - v14, (uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
          uint64_t v34 = *(int *)(v42 + 24);
          double v35 = *(double *)&v12[v34];
          double v36 = *(double *)&v10[v34];
          sub_250EF4B80((uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
          sub_250EF4B80((uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
          if (v35 >= v36)
          {
            unint64_t v37 = v43;
            v43 -= v14;
            if (a3 < v37 || v32 >= v37)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != v37)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v33 = a2;
          }
          else
          {
            if (a3 < a2 || v32 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (a3 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v45 -= v14;
          }
          unint64_t v30 = v43;
          if (v43 <= a4) {
            break;
          }
          a2 = v33;
          a3 -= v14;
        }
        while (v33 > v41);
      }
      goto LABEL_67;
    }
  }
  else if ((v16 & 0x8000000000000000) == 0)
  {
    uint64_t v18 = v16 * v14;
    if (a4 < a1 || a1 + v18 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != a1)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    unint64_t v20 = a4 + v18;
    unint64_t v43 = a4 + v18;
    if (v18 >= 1 && a2 < a3)
    {
      do
      {
        sub_250EF4B18(a2, (uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
        sub_250EF4B18(a4, (uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
        uint64_t v22 = *(int *)(v42 + 24);
        double v23 = *(double *)&v12[v22];
        double v24 = *(double *)&v10[v22];
        sub_250EF4B80((uint64_t)v10, type metadata accessor for BloodOxygenMetadataStatistics);
        sub_250EF4B80((uint64_t)v12, type metadata accessor for BloodOxygenMetadataStatistics);
        unint64_t v25 = v45;
        if (v23 >= v24)
        {
          unint64_t v28 = v44 + v14;
          if (v45 < v44 || v45 >= v28)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 != v44)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v44 = v28;
          unint64_t v26 = a2;
        }
        else
        {
          unint64_t v26 = a2 + v14;
          if (v45 < a2 || v45 >= v26)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v45 == a2)
          {
            unint64_t v25 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v45 = v25 + v14;
        a4 = v44;
        if (v44 >= v20) {
          break;
        }
        a2 = v26;
      }
      while (v26 < a3);
    }
LABEL_67:
    sub_250EF46D0(&v45, &v44, (uint64_t *)&v43, type metadata accessor for BloodOxygenMetadataStatistics);
    return 1;
  }
LABEL_71:
  uint64_t result = sub_250F0D600();
  __break(1u);
  return result;
}

char *sub_250EF4590(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_250EF48F8(0, &qword_269B11288, (uint64_t (*)(uint64_t))sub_250EF495C, MEMORY[0x263F8E0F8]);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = _swift_stdlib_malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)MEMORY[0x263F8EE78];
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_250EF46B8(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  return sub_250EF46D0(a1, a2, a3, (uint64_t (*)(void))sub_250EA31AC);
}

uint64_t sub_250EF46D0(unint64_t *a1, unint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  unint64_t v4 = *a1;
  unint64_t v5 = *a2;
  uint64_t v6 = *a3;
  uint64_t result = a4(0);
  uint64_t v8 = *(void *)(*(void *)(result - 8) + 72);
  if (!v8)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v9 = v6 - v5;
  if (v6 - v5 == 0x8000000000000000 && v8 == -1) {
    goto LABEL_18;
  }
  if (v9 / v8 < 0)
  {
LABEL_19:
    uint64_t result = sub_250F0D600();
    __break(1u);
    return result;
  }
  if (v4 < v5 || v4 >= v5 + v9 / v8 * v8)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v4 != v5)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_250EF4814(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_250F0D600();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

char *sub_250EF48D0(uint64_t a1)
{
  return sub_250EF4590(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_250EF48E4(void *a1)
{
  return sub_250EA27A0(0, a1[2], 0, a1);
}

void sub_250EF48F8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250EF495C()
{
  if (!qword_269B11290)
  {
    unint64_t v0 = sub_250F0D180();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B11290);
    }
  }
}

uint64_t sub_250EF49BC(uint64_t a1, uint64_t a2)
{
  sub_250EF4C94(0, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EF4A3C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250EF4A84(uint64_t a1, uint64_t a2)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EF4B18(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250EF4B80(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250EF4BE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void sub_250EF4C48(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v5 = a4(0, a3);
    if (!v6) {
      atomic_store(v5, a2);
    }
  }
}

void sub_250EF4C94(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v6 = sub_250F0CE70();
    uint64_t v7 = sub_250EF4A3C(&qword_26B20E340, MEMORY[0x263F090E8]);
    unint64_t v8 = a3(a1, v6, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250EF4D30(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t))
{
  sub_250EF4C94(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_250EF4D8C(uint64_t a1)
{
  return sub_250EA2BB8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_250EF4DA0(void *a1, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v84 = a4;
  uint64_t v85 = a3;
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  uint64_t v9 = MEMORY[0x270FA5388](v8 - 8);
  uint64_t v77 = (char *)v62 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v9);
  char v76 = (char *)v62 - v11;
  uint64_t v83 = sub_250F0C1B0();
  uint64_t v12 = *(void *)(v83 - 8);
  MEMORY[0x270FA5388](v83);
  uint64_t v74 = (char *)v62 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8E700();
  uint64_t v70 = v14;
  uint64_t v15 = MEMORY[0x270FA5388](v14);
  char v66 = (char *)v62 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v69 = (char *)v62 - v17;
  uint64_t v18 = sub_250F0CE70();
  uint64_t v19 = *(void **)(v18 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v18);
  uint64_t v22 = (char *)v62 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  double v24 = (char *)v62 - v23;
  sub_250EF4C94(0, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
  uint64_t v67 = v25;
  uint64_t v26 = MEMORY[0x270FA5388](v25);
  unint64_t v68 = (char *)v62 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v26);
  uint64_t v82 = (uint64_t)v62 - v28;
  *(void *)(v5 + 16) = a1;
  uint64_t v79 = (void (*)(uint64_t, uint64_t, uint64_t))v19[2];
  v79(v5 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetDay, (uint64_t)a2, v18);
  uint64_t v29 = v5 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_targetEndDate;
  uint64_t v30 = sub_250F0C060();
  uint64_t v71 = *(void *)(v30 - 8);
  uint64_t v72 = v30;
  (*(void (**)(uint64_t, uint64_t))(v71 + 16))(v29, v85);
  uint64_t v73 = v5;
  uint64_t v31 = v5 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_gregorianCalendar;
  uint64_t v75 = v12;
  uint64_t v34 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v33 = v12 + 16;
  unint64_t v32 = v34;
  v34((char *)v31, v84, v83);
  id v35 = a1;
  sub_250F0CDA0();
  double v36 = a2;
  sub_250F0CDE0();
  uint64_t v80 = (void (*)(char *, uint64_t))v19[1];
  uint64_t v81 = v19 + 1;
  v80(v22, v18);
  sub_250EF4A3C(&qword_26B20E340, MEMORY[0x263F090E8]);
  unint64_t v37 = v24;
  uint64_t v38 = v36;
  uint64_t result = sub_250F0CF00();
  if (result)
  {
    uint64_t v40 = v70;
    uint64_t v41 = *(int *)(v70 + 48);
    uint64_t v65 = v33;
    uint64_t v64 = v32;
    uint64_t v42 = v69;
    unint64_t v43 = &v69[v41];
    unint64_t v44 = (void (*)(char *, char *, uint64_t))v19[4];
    uint64_t v63 = (uint64_t)v37;
    v44(v69, v37, v18);
    unint64_t v45 = v43;
    uint64_t v46 = v43;
    v62[0] = v43;
    uint64_t v78 = v38;
    uint64_t v47 = v66;
    v62[1] = v19 + 2;
    uint64_t v48 = (void (*)(char *, char *, uint64_t))v79;
    v79((uint64_t)v45, (uint64_t)v38, v18);
    uint64_t v49 = &v47[*(int *)(v40 + 48)];
    v48(v47, v42, v18);
    v48(v49, v46, v18);
    uint64_t v50 = (uint64_t)v68;
    v44(v68, v47, v18);
    double v51 = v80;
    v80(v49, v18);
    double v52 = &v47[*(int *)(v40 + 48)];
    v44(v47, v42, v18);
    v44(v52, (char *)v62[0], v18);
    v44((char *)(v50 + *(int *)(v67 + 36)), v52, v18);
    v51(v47, v18);
    sub_250EF54CC(v50, v82, (unint64_t *)&unk_26B20E368, MEMORY[0x263F8D870]);
    uint64_t v53 = v63;
    v79(v63, (uint64_t)v78, v18);
    uint64_t v54 = (uint64_t)v74;
    uint64_t v56 = v83;
    uint64_t v55 = v84;
    v64(v74, v84, v83);
    uint64_t v57 = type metadata accessor for BloodOxygenMetadataStatistics(0);
    uint64_t v58 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56);
    uint64_t v59 = (uint64_t)v76;
    v58(v76, 1, 1, v57);
    uint64_t v60 = (uint64_t)v77;
    v58(v77, 1, 1, v57);
    type metadata accessor for BloodOxygenMetadataStatisticsBuilder(0);
    uint64_t v61 = swift_allocObject();
    sub_250EF17A4(v82, v53, v54, MEMORY[0x263F8EE78], v59, v60);
    (*(void (**)(uint64_t, uint64_t))(v75 + 8))(v55, v56);
    (*(void (**)(uint64_t, uint64_t))(v71 + 8))(v85, v72);
    v80(v78, v18);
    uint64_t result = v73;
    *(void *)(v73 + OBJC_IVAR____TtC19HealthBalanceDaemon40OxygenSaturationElevationContextProvider_builder) = v61;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_250EF54CC(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t, uint64_t, uint64_t))
{
  sub_250EF4C94(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t *sub_250EF5538(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
    uint64_t v8 = *((void *)v7 - 1);
    uint64_t v9 = *(unsigned int (**)(void, void, void))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = sub_250F0CE70();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = v7[5];
      id v35 = v9;
      uint64_t v36 = v8;
      uint64_t v14 = (char *)a1 + v13;
      uint64_t v15 = (char *)a2 + v13;
      uint64_t v16 = sub_250F0C060();
      uint64_t v17 = *(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16);
      v17(v14, v15, v16);
      sub_250EF2884();
      uint64_t v19 = *(int *)(v18 + 36);
      uint64_t v20 = &v14[v19];
      uint64_t v21 = &v15[v19];
      uint64_t v9 = v35;
      uint64_t v8 = v36;
      v17(v20, v21, v16);
      *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
      *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
      (*(void (**)(uint64_t *, void, uint64_t, int *))(v36 + 56))(a1, 0, 1, v7);
    }
    uint64_t v22 = *(int *)(a3 + 20);
    uint64_t v23 = (char *)a1 + v22;
    double v24 = (char *)a2 + v22;
    if (v9(v24, 1, v7))
    {
      sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
      memcpy(v23, v24, *(void *)(*(void *)(v25 - 8) + 64));
    }
    else
    {
      uint64_t v26 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v23, v24, v26);
      uint64_t v27 = v7[5];
      uint64_t v28 = v8;
      uint64_t v29 = &v23[v27];
      uint64_t v30 = &v24[v27];
      uint64_t v31 = sub_250F0C060();
      unint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
      v32(v29, v30, v31);
      sub_250EF2884();
      v32(&v29[*(int *)(v33 + 36)], &v30[*(int *)(v33 + 36)], v31);
      *(void *)&v23[v7[6]] = *(void *)&v24[v7[6]];
      *(void *)&v23[v7[7]] = *(void *)&v24[v7[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v28 + 56))(v23, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_250EF5904(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for BloodOxygenMetadataStatistics(0);
  int v5 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {
    uint64_t v6 = sub_250F0CE70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
    uint64_t v7 = a1 + *(int *)(v4 + 20);
    uint64_t v8 = sub_250F0C060();
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);
    v9(v7, v8);
    sub_250EF2884();
    v9(v7 + *(int *)(v10 + 36), v8);
  }
  uint64_t v11 = a1 + *(int *)(a2 + 20);
  uint64_t result = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v5)(v11, 1, v4);
  if (!result)
  {
    uint64_t v13 = sub_250F0CE70();
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v11, v13);
    uint64_t v14 = v11 + *(int *)(v4 + 20);
    uint64_t v15 = sub_250F0C060();
    uint64_t v18 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8);
    ((void (*)(void *__return_ptr, uint64_t, uint64_t))v18)((void *)(v15 - 8), v14, v15);
    sub_250EF2884();
    uint64_t v17 = v14 + *(int *)(v16 + 36);
    return v18(v17, v15);
  }
  return result;
}

char *sub_250EF5B28(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
    uint64_t v11 = v6[5];
    uint64_t v32 = v7;
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_250F0C060();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16);
    v15(v12, v13, v14);
    sub_250EF2884();
    uint64_t v17 = *(int *)(v16 + 36);
    uint64_t v18 = &v12[v17];
    uint64_t v7 = v32;
    v15(v18, &v13[v17], v14);
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (v8(v21, 1, v6))
  {
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v20, v21, v23);
    uint64_t v24 = v6[5];
    uint64_t v25 = v7;
    uint64_t v26 = &v20[v24];
    uint64_t v27 = &v21[v24];
    uint64_t v28 = sub_250F0C060();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 16);
    v29(v26, v27, v28);
    sub_250EF2884();
    v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
    *(void *)&v20[v6[6]] = *(void *)&v21[v6[6]];
    *(void *)&v20[v6[7]] = *(void *)&v21[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *sub_250EF5EAC(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = v6[5];
      uint64_t v13 = &a1[v12];
      uint64_t v53 = v7;
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_250F0C060();
      uint64_t v52 = a3;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16);
      v16(v13, v14, v15);
      sub_250EF2884();
      uint64_t v18 = *(int *)(v17 + 36);
      uint64_t v19 = &v14[v18];
      uint64_t v7 = v53;
      v16(&v13[v18], v19, v15);
      a3 = v52;
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_250EF4B80((uint64_t)a1, type metadata accessor for BloodOxygenMetadataStatistics);
LABEL_6:
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v36 = sub_250F0CE70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 24))(a1, a2, v36);
  uint64_t v37 = v6[5];
  uint64_t v38 = &a1[v37];
  uint64_t v54 = v7;
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_250F0C060();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 24);
  v41(v38, v39, v40);
  sub_250EF2884();
  uint64_t v43 = *(int *)(v42 + 36);
  unint64_t v44 = &v39[v43];
  uint64_t v7 = v54;
  v41(&v38[v43], v44, v40);
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v8(&a1[v21], 1, v6);
  int v25 = v8(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      uint64_t v45 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 24))(v22, v23, v45);
      uint64_t v46 = v6[5];
      uint64_t v47 = &v22[v46];
      uint64_t v48 = &v23[v46];
      uint64_t v49 = sub_250F0C060();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 24);
      v50(v47, v48, v49);
      sub_250EF2884();
      v50(&v47[*(int *)(v51 + 36)], &v48[*(int *)(v51 + 36)], v49);
      *(void *)&v22[v6[6]] = *(void *)&v23[v6[6]];
      *(void *)&v22[v6[7]] = *(void *)&v23[v6[7]];
      return a1;
    }
    sub_250EF4B80((uint64_t)v22, type metadata accessor for BloodOxygenMetadataStatistics);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(v22, v23, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  uint64_t v26 = sub_250F0CE70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 16))(v22, v23, v26);
  uint64_t v27 = v6[5];
  uint64_t v28 = &v22[v27];
  uint64_t v29 = v7;
  uint64_t v30 = &v23[v27];
  uint64_t v31 = sub_250F0C060();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 16);
  v32(v28, v30, v31);
  sub_250EF2884();
  v32(&v28[*(int *)(v33 + 36)], &v30[*(int *)(v33 + 36)], v31);
  *(void *)&v22[v6[6]] = *(void *)&v23[v6[6]];
  *(void *)&v22[v6[7]] = *(void *)&v23[v6[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v22, 0, 1, v6);
  return a1;
}

char *sub_250EF6450(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(unsigned int (**)(char *, uint64_t, int *))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
    uint64_t v11 = v6[5];
    uint64_t v32 = v7;
    uint64_t v12 = &a1[v11];
    uint64_t v13 = &a2[v11];
    uint64_t v14 = sub_250F0C060();
    uint64_t v15 = *(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 32);
    v15(v12, v13, v14);
    sub_250EF2884();
    uint64_t v17 = *(int *)(v16 + 36);
    uint64_t v18 = &v12[v17];
    uint64_t v7 = v32;
    v15(v18, &v13[v17], v14);
    *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
    *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v32 + 56))(a1, 0, 1, v6);
  }
  uint64_t v19 = *(int *)(a3 + 20);
  uint64_t v20 = &a1[v19];
  uint64_t v21 = &a2[v19];
  if (v8(v21, 1, v6))
  {
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(v20, v21, *(void *)(*(void *)(v22 - 8) + 64));
  }
  else
  {
    uint64_t v23 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 32))(v20, v21, v23);
    uint64_t v24 = v6[5];
    uint64_t v25 = v7;
    uint64_t v26 = &v20[v24];
    uint64_t v27 = &v21[v24];
    uint64_t v28 = sub_250F0C060();
    uint64_t v29 = *(void (**)(char *, char *, uint64_t))(*(void *)(v28 - 8) + 32);
    v29(v26, v27, v28);
    sub_250EF2884();
    v29(&v26[*(int *)(v30 + 36)], &v27[*(int *)(v30 + 36)], v28);
    *(void *)&v20[v6[6]] = *(void *)&v21[v6[6]];
    *(void *)&v20[v6[7]] = *(void *)&v21[v6[7]];
    (*(void (**)(char *, void, uint64_t, int *))(v25 + 56))(v20, 0, 1, v6);
  }
  return a1;
}

char *sub_250EF67D4(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = (int *)type metadata accessor for BloodOxygenMetadataStatistics(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, int *))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      uint64_t v11 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = v6[5];
      uint64_t v13 = &a1[v12];
      uint64_t v53 = v7;
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_250F0C060();
      uint64_t v52 = a3;
      uint64_t v16 = *(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32);
      v16(v13, v14, v15);
      sub_250EF2884();
      uint64_t v18 = *(int *)(v17 + 36);
      uint64_t v19 = &v14[v18];
      uint64_t v7 = v53;
      v16(&v13[v18], v19, v15);
      a3 = v52;
      *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
      *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
      (*(void (**)(char *, void, uint64_t, int *))(v53 + 56))(a1, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v10)
  {
    sub_250EF4B80((uint64_t)a1, type metadata accessor for BloodOxygenMetadataStatistics);
LABEL_6:
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(a1, a2, *(void *)(*(void *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  uint64_t v36 = sub_250F0CE70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v36 - 8) + 40))(a1, a2, v36);
  uint64_t v37 = v6[5];
  uint64_t v38 = &a1[v37];
  uint64_t v54 = v7;
  uint64_t v39 = &a2[v37];
  uint64_t v40 = sub_250F0C060();
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(*(void *)(v40 - 8) + 40);
  v41(v38, v39, v40);
  sub_250EF2884();
  uint64_t v43 = *(int *)(v42 + 36);
  unint64_t v44 = &v39[v43];
  uint64_t v7 = v54;
  v41(&v38[v43], v44, v40);
  *(void *)&a1[v6[6]] = *(void *)&a2[v6[6]];
  *(void *)&a1[v6[7]] = *(void *)&a2[v6[7]];
LABEL_7:
  uint64_t v21 = *(int *)(a3 + 20);
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  int v24 = v8(&a1[v21], 1, v6);
  int v25 = v8(v23, 1, v6);
  if (!v24)
  {
    if (!v25)
    {
      uint64_t v45 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v45 - 8) + 40))(v22, v23, v45);
      uint64_t v46 = v6[5];
      uint64_t v47 = &v22[v46];
      uint64_t v48 = &v23[v46];
      uint64_t v49 = sub_250F0C060();
      uint64_t v50 = *(void (**)(char *, char *, uint64_t))(*(void *)(v49 - 8) + 40);
      v50(v47, v48, v49);
      sub_250EF2884();
      v50(&v47[*(int *)(v51 + 36)], &v48[*(int *)(v51 + 36)], v49);
      *(void *)&v22[v6[6]] = *(void *)&v23[v6[6]];
      *(void *)&v22[v6[7]] = *(void *)&v23[v6[7]];
      return a1;
    }
    sub_250EF4B80((uint64_t)v22, type metadata accessor for BloodOxygenMetadataStatistics);
    goto LABEL_12;
  }
  if (v25)
  {
LABEL_12:
    sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
    memcpy(v22, v23, *(void *)(*(void *)(v34 - 8) + 64));
    return a1;
  }
  uint64_t v26 = sub_250F0CE70();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v26 - 8) + 32))(v22, v23, v26);
  uint64_t v27 = v6[5];
  uint64_t v28 = &v22[v27];
  uint64_t v29 = v7;
  uint64_t v30 = &v23[v27];
  uint64_t v31 = sub_250F0C060();
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 32);
  v32(v28, v30, v31);
  sub_250EF2884();
  v32(&v28[*(int *)(v33 + 36)], &v30[*(int *)(v33 + 36)], v31);
  *(void *)&v22[v6[6]] = *(void *)&v23[v6[6]];
  *(void *)&v22[v6[7]] = *(void *)&v23[v6[7]];
  (*(void (**)(char *, void, uint64_t, int *))(v29 + 56))(v22, 0, 1, v6);
  return a1;
}

uint64_t sub_250EF6D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250EF6D8C);
}

uint64_t sub_250EF6D8C(uint64_t a1, uint64_t a2)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);
  return v5(a1, a2, v4);
}

uint64_t sub_250EF6E28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250EF6E3C);
}

uint64_t sub_250EF6E3C(uint64_t a1, uint64_t a2)
{
  sub_250EF48F8(0, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, a2, v4);
}

void sub_250EF6EDC()
{
  sub_250EF48F8(319, &qword_269B11268, type metadata accessor for BloodOxygenMetadataStatistics, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_250EF6F98(uint64_t a1@<X8>)
{
  uint64_t v130 = a1;
  uint64_t v1 = sub_250F0BF30();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v126 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  unint64_t v125 = (char *)&v104 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v128 = (char *)&v104 - v7;
  uint64_t v8 = sub_250F0C060();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  uint64_t v106 = (char *)&v104 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  uint64_t v105 = (char *)&v104 - v13;
  uint64_t v14 = MEMORY[0x270FA5388](v12);
  uint64_t v108 = (char *)&v104 - v15;
  uint64_t v16 = MEMORY[0x270FA5388](v14);
  uint64_t v18 = (char *)&v104 - v17;
  uint64_t v19 = MEMORY[0x270FA5388](v16);
  uint64_t v124 = (char *)&v104 - v20;
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  uint64_t v127 = (char *)&v104 - v22;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v123 = (char *)&v104 - v24;
  MEMORY[0x270FA5388](v23);
  uint64_t v26 = (char *)&v104 - v25;
  sub_250EF825C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  uint64_t v28 = MEMORY[0x270FA5388](v27 - 8);
  uint64_t v30 = (char *)&v104 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v31 = MEMORY[0x270FA5388](v28);
  uint64_t v109 = (uint64_t)&v104 - v32;
  uint64_t v33 = MEMORY[0x270FA5388](v31);
  uint64_t v122 = (uint64_t)&v104 - v34;
  uint64_t v35 = MEMORY[0x270FA5388](v33);
  unint64_t v121 = (char *)&v104 - v36;
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  uint64_t v120 = (uint64_t)&v104 - v38;
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  unsigned int v119 = (char *)&v104 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v43 = (char *)&v104 - v42;
  MEMORY[0x270FA5388](v41);
  uint64_t v45 = (char *)&v104 - v44;
  uint64_t v111 = v9;
  uint64_t v46 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56);
  v46((char *)&v104 - v44, 1, 1, v8);
  uint64_t v140 = v46;
  uint64_t v141 = v9 + 56;
  v46(v43, 1, 1, v8);
  id v47 = objc_msgSend(v142, sel_primarySleepPeriod);
  if (!v47)
  {
    uint64_t v97 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_250E8CD58((uint64_t)v43, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    sub_250E8CD58((uint64_t)v45, (unint64_t *)&unk_26B20DEB0, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v2 + 56))(v130, 1, 1, v1);
    return;
  }
  id v107 = v47;
  id v48 = objc_msgSend(v47, sel_segments);
  sub_250EF890C();
  unint64_t v49 = sub_250F0D040();

  uint64_t v110 = v2;
  if (v49 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v50 = sub_250F0D5B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v50 = *(void *)((v49 & 0xFFFFFFFFFFFFFF8) + 0x10);
  }
  uint64_t v139 = v45;
  id v129 = v43;
  uint64_t v104 = v30;
  uint64_t v51 = v130;
  if (v50)
  {
    if (v50 < 1)
    {
      __break(1u);
      return;
    }
    uint64_t v52 = 0;
    unint64_t v53 = v49 & 0xC000000000000001;
    uint64_t v138 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
    unint64_t v113 = (void (**)(char *, uint64_t, uint64_t))(v111 + 32);
    uint64_t v112 = (id *)(v110 + 8);
    uint64_t v136 = (void (**)(char *, uint64_t))(v111 + 8);
    uint64_t v137 = (void (**)(char *, char *, uint64_t))(v111 + 16);
    unint64_t v118 = v18;
    unint64_t v116 = v49;
    uint64_t v115 = v50;
    uint64_t v117 = v26;
    unint64_t v114 = v49 & 0xC000000000000001;
    uint64_t v131 = v1;
    do
    {
      if (v53) {
        id v54 = (id)MEMORY[0x25338E0A0](v52, v49);
      }
      else {
        id v54 = *(id *)(v49 + 8 * v52 + 32);
      }
      uint64_t v55 = v54;
      objc_msgSend(v54, sel_category, v104);
      if (_HKCategoryValueSleepAnalysisIsAsleep())
      {
        uint64_t v56 = (uint64_t)v45;
        uint64_t v57 = v120;
        sub_250E9FBA8(v56, v120);
        uint64_t v134 = *v138;
        if (v134(v57, 1, v8) == 1)
        {
          id v58 = objc_msgSend(v55, sel_dateInterval);
          uint64_t v59 = v128;
          sub_250F0BED0();

          uint64_t v60 = v117;
          sub_250F0BF00();
          uint64_t v61 = v112;
          ((void (*)(char *, uint64_t))*v112)(v59, v1);
          uint64_t v62 = v57;
          uint64_t v63 = v1;
          uint64_t v64 = v8;
          sub_250E8CD58(v62, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
        }
        else
        {
          uint64_t v60 = v117;
          (*v113)(v117, v57, v8);
          uint64_t v61 = v112;
          uint64_t v63 = v1;
          uint64_t v64 = v8;
        }
        id v65 = objc_msgSend(v55, sel_dateInterval);
        char v66 = v125;
        sub_250F0BED0();

        uint64_t v67 = v123;
        sub_250F0BF00();
        id v142 = *v61;
        ((void (*)(char *, uint64_t))v142)(v66, v63);
        unint64_t v133 = sub_250E8C86C();
        char v68 = sub_250F0CEE0();
        uint64_t v69 = *v137;
        if (v68) {
          uint64_t v70 = v67;
        }
        else {
          uint64_t v70 = v60;
        }
        uint64_t v71 = (uint64_t)v119;
        uint64_t v132 = *v137;
        v69(v119, v70, v64);
        uint64_t v72 = *v136;
        (*v136)(v67, v64);
        uint64_t v135 = v72;
        v72(v60, v64);
        uint64_t v73 = (void (*)(uint64_t))MEMORY[0x263F07490];
        uint64_t v74 = (uint64_t)v139;
        sub_250E8CD58((uint64_t)v139, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
        v140((char *)v71, 0, 1, v64);
        sub_250EF894C(v71, v74, (unint64_t *)&unk_26B20DEB0, v73);
        uint64_t v75 = (uint64_t)v129;
        uint64_t v76 = v122;
        sub_250E9FBA8((uint64_t)v129, v122);
        if (v134(v76, 1, v64) == 1)
        {
          id v77 = objc_msgSend(v55, sel_dateInterval);
          uint64_t v78 = v128;
          sub_250F0BED0();

          uint64_t v79 = v75;
          uint64_t v80 = v127;
          sub_250F0BEE0();
          ((void (*)(char *, uint64_t))v142)(v78, v131);
          sub_250E8CD58(v76, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
          uint64_t v81 = v80;
          uint64_t v75 = v79;
        }
        else
        {
          uint64_t v82 = v127;
          (*v113)(v127, v76, v64);
          uint64_t v81 = v82;
        }
        id v83 = objc_msgSend(v55, sel_dateInterval);
        uint64_t v84 = v126;
        sub_250F0BED0();

        uint64_t v85 = v124;
        sub_250F0BEE0();
        uint64_t v86 = v84;
        uint64_t v87 = v131;
        ((void (*)(char *, uint64_t))v142)(v86, v131);
        if (sub_250F0CEF0()) {
          uint64_t v88 = v85;
        }
        else {
          uint64_t v88 = v81;
        }
        uint64_t v89 = (uint64_t)v121;
        v132(v121, v88, v64);

        unint64_t v90 = v85;
        uint64_t v91 = v135;
        v135(v90, v64);
        v91(v81, v64);
        uint64_t v92 = (void (*)(uint64_t))MEMORY[0x263F07490];
        sub_250E8CD58(v75, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
        v140((char *)v89, 0, 1, v64);
        sub_250EF894C(v89, v75, (unint64_t *)&unk_26B20DEB0, v92);
        uint64_t v93 = v87;
        uint64_t v51 = v130;
        uint64_t v18 = v118;
        uint64_t v45 = v139;
        unint64_t v49 = v116;
        uint64_t v50 = v115;
        unint64_t v53 = v114;
        uint64_t v8 = v64;
        uint64_t v1 = v93;
      }
      else
      {
      }
      ++v52;
    }
    while (v50 != v52);
  }
  swift_bridgeObjectRelease();
  uint64_t v94 = v109;
  sub_250E9FBA8((uint64_t)v45, v109);
  uint64_t v95 = v111;
  uint64_t v96 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v111 + 48);
  if (v96(v94, 1, v8) == 1)
  {

LABEL_31:
    uint64_t v99 = (void (*)(uint64_t))MEMORY[0x263F07490];
    sub_250E8CD58((uint64_t)v129, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    sub_250E8CD58((uint64_t)v45, (unint64_t *)&unk_26B20DEB0, v99);
    sub_250E8CD58(v94, (unint64_t *)&unk_26B20DEB0, v99);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v110 + 56))(v51, 1, 1, v1);
    return;
  }
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t))(v95 + 32);
  v98(v18, v94, v8);
  uint64_t v94 = (uint64_t)v104;
  sub_250E9FBA8((uint64_t)v129, (uint64_t)v104);
  if (v96(v94, 1, v8) == 1)
  {

    (*(void (**)(char *, uint64_t))(v95 + 8))(v18, v8);
    uint64_t v45 = v139;
    goto LABEL_31;
  }
  v98(v108, v94, v8);
  BOOL v100 = *(void (**)(char *, char *, uint64_t))(v95 + 16);
  v100(v105, v18, v8);
  uint64_t v101 = v108;
  v100(v106, v108, v8);
  sub_250F0BEF0();

  uint64_t v102 = *(void (**)(char *, uint64_t))(v95 + 8);
  v102(v101, v8);
  v102(v18, v8);
  uint64_t v103 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_250E8CD58((uint64_t)v129, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  sub_250E8CD58((uint64_t)v139, (unint64_t *)&unk_26B20DEB0, v103);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v51, 0, 1, v1);
}

void sub_250EF7C98(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v34 = a1;
  uint64_t v3 = sub_250F0C400();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EF825C(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v9 = (char *)&v31 - v8;
  uint64_t v10 = sub_250F0C1B0();
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v11 = sub_250F0CE70();
  MEMORY[0x270FA5388](v11 - 8);
  sub_250EF825C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  uint64_t v13 = MEMORY[0x270FA5388](v12 - 8);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v13);
  uint64_t v17 = (char *)&v31 - v16;
  id v18 = objc_msgSend(v1, sel_summaryFilteredToPrimaryPeriod);
  if (v18)
  {
    uint64_t v19 = v18;
    uint64_t v32 = v6;
    uint64_t v33 = v3;
    objc_msgSend(v18, sel_sleepDuration);
    if (v20 <= COERCE_DOUBLE(1))
    {
      objc_msgSend(v2, sel_morningIndex);
      sub_250F0CE20();
      id v28 = objc_msgSend(v2, sel_calendar);
      sub_250F0C180();

      uint64_t v29 = sub_250F0BF30();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 56))(v9, 1, 1, v29);
      uint64_t v30 = sub_250F0C060();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56))(v17, 1, 1, v30);
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v32, *MEMORY[0x263F42D18], v33);
      sub_250F0C430();
    }
    else
    {
      sub_250EF82B0(v19, v2, (uint64_t)v17);
      objc_msgSend(v2, sel_morningIndex);
      sub_250F0CE20();
      id v21 = objc_msgSend(v2, sel_calendar);
      sub_250F0C180();

      id v22 = objc_msgSend(self, sel_secondUnit);
      objc_msgSend(v19, sel_sleepDuration);
      id v24 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v22, v23);

      sub_250EF6F98((uint64_t)v9);
      sub_250E9FBA8((uint64_t)v17, (uint64_t)v15);
      (*(void (**)(char *, void, uint64_t))(v4 + 104))(v32, *MEMORY[0x263F42D20], v33);
      sub_250F0C430();

      sub_250E8CD58((uint64_t)v17, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    }
  }
  else
  {
    objc_msgSend(v1, sel_morningIndex);
    sub_250F0CE20();
    id v25 = objc_msgSend(v1, sel_calendar);
    sub_250F0C180();

    uint64_t v26 = sub_250F0BF30();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(v9, 1, 1, v26);
    uint64_t v27 = sub_250F0C060();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v17, 1, 1, v27);
    (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F42D18], v3);
    sub_250F0C430();
  }
}

void sub_250EF825C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_250EF82B0@<X0>(void *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  id v45 = a2;
  uint64_t v51 = a3;
  uint64_t v4 = sub_250F0C1B0();
  uint64_t v49 = *(void *)(v4 - 8);
  uint64_t v50 = v4;
  MEMORY[0x270FA5388](v4);
  id v47 = (char *)&v40 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_250F0CE70();
  uint64_t v46 = *(void *)(v48 - 8);
  MEMORY[0x270FA5388](v48);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_250F0BF30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v43 = (char *)&v40 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250EF825C(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  uint64_t v12 = MEMORY[0x270FA5388](v11 - 8);
  uint64_t v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v16 = (char *)&v40 - v15;
  sub_250EF825C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v17 - 8);
  uint64_t v19 = (char *)&v40 - v18;
  uint64_t v20 = sub_250F0C060();
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v44 = (char *)&v40 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v22);
  id v25 = (char *)&v40 - v24;
  id v26 = objc_msgSend(a1, sel_creationInterval);
  if (v26)
  {
    uint64_t v27 = v26;
    sub_250F0BED0();

    (*(void (**)(char *, void, uint64_t, uint64_t))(v9 + 56))(v14, 0, 1, v8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v14, 1, 1, v8);
  }
  sub_250EF894C((uint64_t)v14, (uint64_t)v16, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v16, 1, v8) == 1)
  {
    sub_250E8CD58((uint64_t)v16, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
    id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
    v28(v19, 1, 1, v20);
LABEL_7:
    sub_250E8CD58((uint64_t)v19, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))v28)(v51, 1, 1, v20);
  }
  sub_250F0BEE0();
  uint64_t v42 = *(void (**)(char *, uint64_t))(v9 + 8);
  v42(v16, v8);
  id v28 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v21 + 56);
  v28(v19, 0, 1, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v19, 1, v20) == 1) {
    goto LABEL_7;
  }
  uint64_t v30 = *(void (**)(char *, char *, uint64_t))(v21 + 32);
  uint64_t v41 = v25;
  v30(v25, v19, v20);
  id v31 = v45;
  objc_msgSend(v45, sel_morningIndex);
  sub_250F0CE20();
  id v32 = objc_msgSend(v31, sel_calendar);
  uint64_t v33 = v47;
  sub_250F0C180();

  uint64_t v34 = v43;
  sub_250F0CD90();
  (*(void (**)(char *, uint64_t))(v49 + 8))(v33, v50);
  (*(void (**)(char *, uint64_t))(v46 + 8))(v7, v48);
  uint64_t v35 = v44;
  sub_250F0BEE0();
  v42(v34, v8);
  sub_250E8C86C();
  uint64_t v36 = v41;
  if (sub_250F0CEE0()) {
    uint64_t v37 = v35;
  }
  else {
    uint64_t v37 = v36;
  }
  uint64_t v38 = v51;
  (*(void (**)(uint64_t, char *, uint64_t))(v21 + 16))(v51, v37, v20);
  uint64_t v39 = *(void (**)(char *, uint64_t))(v21 + 8);
  v39(v35, v20);
  v39(v36, v20);
  return ((uint64_t (*)(uint64_t, void, uint64_t, uint64_t))v28)(v38, 0, 1, v20);
}

unint64_t sub_250EF890C()
{
  unint64_t result = qword_26B20EF00;
  if (!qword_26B20EF00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20EF00);
  }
  return result;
}

uint64_t sub_250EF894C(uint64_t a1, uint64_t a2, unint64_t *a3, void (*a4)(uint64_t))
{
  sub_250EF825C(0, a3, a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_250EF89B8(uint64_t a1, char a2)
{
  *(void *)(v2 + 16) = 14;
  *(_OWORD *)(v2 + 24) = xmmword_250F10150;
  uint64_t v5 = MEMORY[0x263F8EE78];
  *(void *)(v2 + 56) = MEMORY[0x263F8EE78];
  *(void *)(v2 + 64) = v5;
  *(void *)(v2 + 72) = v5;
  uint64_t v6 = v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
  uint64_t v7 = sub_250F0CE70();
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
  v8(v6, 1, 1, v7);
  v8(v2 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex, 1, 1, v7);
  *(void *)(v2 + 40) = a1;
  *(unsigned char *)(v2 + 48) = a2 & 1;
  return v2;
}

uint64_t sub_250EF8A9C(void *a1, uint64_t a2, char a3)
{
  uint64_t v4 = v3;
  uint64_t v154 = a2;
  id v158 = a1;
  sub_250E8E700();
  uint64_t v128 = v6;
  uint64_t v7 = MEMORY[0x270FA5388](v6);
  id v129 = (char *)v122 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v7);
  unint64_t v125 = (char *)v122 - v9;
  sub_250EC18D8(0);
  uint64_t v124 = v10;
  uint64_t v11 = MEMORY[0x270FA5388](v10);
  uint64_t v123 = (char *)v122 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v130 = (uint64_t)v122 - v13;
  uint64_t v136 = sub_250F0C6F0();
  uint64_t v135 = *(void *)(v136 - 8);
  uint64_t v14 = MEMORY[0x270FA5388](v136);
  uint64_t v131 = (char *)v122 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v14);
  unint64_t v133 = (char *)v122 - v16;
  uint64_t v134 = sub_250F0C720();
  uint64_t v132 = *(char **)(v134 - 8);
  uint64_t v17 = MEMORY[0x270FA5388](v134);
  uint64_t v126 = (char *)v122 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v20 = (char *)v122 - v19;
  uint64_t v21 = sub_250F0CE70();
  uint64_t v159 = *(void *)(v21 - 8);
  uint64_t v22 = v159;
  uint64_t v23 = MEMORY[0x270FA5388](v21);
  uint64_t v143 = (char *)v122 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = MEMORY[0x270FA5388](v23);
  BOOL v145 = (char *)v122 - v26;
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  id v142 = (char *)v122 - v28;
  uint64_t v29 = MEMORY[0x270FA5388](v27);
  uint64_t v144 = (void (**)(char *, void *))((char *)v122 - v30);
  uint64_t v31 = MEMORY[0x270FA5388](v29);
  uint64_t v146 = (char *)v122 - v32;
  MEMORY[0x270FA5388](v31);
  uint64_t v153 = (char *)v122 - v33;
  uint64_t v34 = sub_250F0C6C0();
  uint64_t v151 = *(void *)(v34 - 8);
  uint64_t v35 = MEMORY[0x270FA5388](v34);
  uint64_t v140 = (char *)v122 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v35);
  uint64_t v149 = (char *)v122 - v37;
  uint64_t v150 = sub_250F0C6A0();
  uint64_t v148 = *(void *)(v150 - 8);
  uint64_t v38 = MEMORY[0x270FA5388](v150);
  uint64_t v139 = (char *)v122 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v38);
  double v147 = (char *)v122 - v40;
  sub_250E9241C(0);
  uint64_t v42 = MEMORY[0x270FA5388](v41 - 8);
  uint64_t v141 = (char *)v122 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  uint64_t v46 = (char *)v122 - v45;
  uint64_t v47 = MEMORY[0x270FA5388](v44);
  uint64_t v49 = (char *)v122 - v48;
  MEMORY[0x270FA5388](v47);
  uint64_t v51 = (char *)v122 - v50;
  uint64_t v52 = v3 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
  swift_beginAccess();
  uint64_t v155 = v52;
  sub_250EFA1CC(v52, (uint64_t)v51);
  v122[1] = v22;
  uint64_t v53 = v22 + 48;
  id v54 = *(uint64_t (**)(uint64_t, uint64_t, char *))(v22 + 48);
  uint64_t v55 = v21;
  uint64_t v138 = v53;
  uint64_t v137 = v54;
  LODWORD(v21) = v54((uint64_t)v51, 1, (char *)v21);
  sub_250EFA230((uint64_t)v51);
  if (v21 == 1 && (a3 & 1) == 0)
  {
    uint64_t v56 = v159;
    (*(void (**)(char *, uint64_t, uint64_t))(v159 + 16))(v49, v154, v55);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v56 + 56))(v49, 0, 1, v55);
    uint64_t v57 = v155;
    swift_beginAccess();
    sub_250EC1C18((uint64_t)v49, v57);
    swift_endAccess();
  }
  uint64_t v58 = v4 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex;
  uint64_t v59 = v159;
  uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v159 + 16);
  uint64_t v157 = v159 + 16;
  uint64_t v156 = v60;
  v60(v49, v154, v55);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v59 + 56))(v49, 0, 1, v55);
  swift_beginAccess();
  sub_250EC1C18((uint64_t)v49, v58);
  swift_endAccess();
  double v61 = *(double *)(v4 + 32);
  objc_msgSend(v158, sel__value);
  double v63 = v62;
  uint64_t v64 = (void **)(v4 + 56);
  swift_beginAccess();
  uint64_t v65 = *(void *)(v4 + 56);
  uint64_t v66 = *(void *)(v65 + 16);
  double v67 = 0.0;
  double v68 = 0.0;
  if (v66) {
    double v68 = *(double *)(v65 + 8 * v66 + 24);
  }
  double v69 = *(double *)(v4 + 24);
  objc_msgSend(v158, sel__value);
  double v71 = v70;
  uint64_t v72 = v4 + 64;
  swift_beginAccess();
  uint64_t v73 = *(void *)(v4 + 64);
  uint64_t v74 = *(void *)(v73 + 16);
  uint64_t v75 = v34;
  if (v74) {
    double v67 = *(double *)(v73 + 8 * v74 + 24);
  }
  double v76 = v61 * v63;
  swift_beginAccess();
  id v77 = *v64;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  char *v64 = v77;
  uint64_t v152 = v20;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    id v77 = sub_250EA2200(0, v77[2] + 1, 1, v77);
    char *v64 = v77;
  }
  unint64_t v80 = v77[2];
  unint64_t v79 = v77[3];
  if (v80 >= v79 >> 1)
  {
    id v77 = sub_250EA2200((void *)(v79 > 1), v80 + 1, 1, v77);
    char *v64 = v77;
  }
  double v81 = v69 * v71;
  v77[2] = v80 + 1;
  *(double *)&v77[v80 + 4] = v76 + (1.0 - v61) * v68;
  swift_endAccess();
  swift_beginAccess();
  uint64_t v82 = *(void **)v72;
  char v83 = swift_isUniquelyReferenced_nonNull_native();
  *(void *)uint64_t v72 = v82;
  if ((v83 & 1) == 0)
  {
    uint64_t v82 = sub_250EA2200(0, v82[2] + 1, 1, v82);
    *(void *)uint64_t v72 = v82;
  }
  double v84 = v81 + (1.0 - v69) * v67;
  unint64_t v86 = v82[2];
  unint64_t v85 = v82[3];
  if (v86 >= v85 >> 1)
  {
    uint64_t v82 = sub_250EA2200((void *)(v85 > 1), v86 + 1, 1, v82);
    *(void *)uint64_t v72 = v82;
  }
  v82[2] = v86 + 1;
  *(double *)&v82[v86 + 4] = v84;
  swift_endAccess();
  id v87 = objc_msgSend(v158, sel__unit);
  uint64_t v88 = *(void *)(*(void *)v72 + 16);
  if (v88) {
    double v89 = *(double *)(*(void *)v72 + 8 * v88 + 24);
  }
  else {
    double v89 = 0.0;
  }
  unint64_t v90 = (char *)v55;
  id v91 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v87, v89);

  uint64_t v92 = v147;
  sub_250F0C690();
  uint64_t v93 = v154;
  v156(v153, v154, v55);
  sub_250EFA1CC(v155, (uint64_t)v46);
  uint64_t v94 = v144;
  uint64_t v95 = (uint64_t)v141;
  uint64_t v96 = v149;
  sub_250F0C6B0();
  (*(void (**)(char *, char *, uint64_t))(v148 + 16))(v139, v92, v150);
  (*(void (**)(char *, char *, uint64_t))(v151 + 16))(v140, v96, v75);
  sub_250F0C710();
  uint64_t v97 = (void (*)(char *, uint64_t, char *))v156;
  v156(v146, v93, (uint64_t)v90);
  sub_250EFA1CC(v155, v95);
  uint64_t v98 = v142;
  v97(v142, v93, v90);
  int v99 = v137(v95, 1, v90);
  uint64_t v127 = v75;
  uint64_t v100 = v159;
  if (v99 == 1)
  {
    uint64_t v101 = *(void *)(v159 + 32);
    ((void (*)(void (**)(char *, void *), char *, char *))v101)(v94, v98, v90);
    sub_250EFA230(v95);
  }
  else
  {
    (*(void (**)(char *, char *))(v159 + 8))(v98, v90);
    uint64_t v101 = *(void *)(v100 + 32);
    ((void (*)(void (**)(char *, void *), uint64_t, char *))v101)(v94, v95, v90);
  }
  uint64_t v102 = v145;
  uint64_t v103 = v143;
  sub_250F0CDA0();
  sub_250F0CDC0();
  uint64_t v106 = *(void (**)(void, void))(v100 + 8);
  uint64_t v104 = v100 + 8;
  uint64_t v105 = v106;
  v106(v103, v90);
  sub_250EFA2F0(&qword_26B20E340, MEMORY[0x263F090E8]);
  if ((sub_250F0CF00() & 1) == 0)
  {
    __break(1u);
    goto LABEL_26;
  }
  uint64_t v155 = v4;
  uint64_t v107 = v128;
  uint64_t v108 = *(int *)(v128 + 48);
  uint64_t v109 = v125;
  uint64_t v159 = v104;
  uint64_t v110 = &v125[v108];
  id v158 = v105;
  ((void (*)(char *, void (**)(char *, void *), char *))v101)(v125, v94, v90);
  ((void (*)(char *, char *, char *))v101)(v110, v102, v90);
  uint64_t v111 = v129;
  uint64_t v112 = &v129[*(int *)(v107 + 48)];
  unint64_t v113 = (void (*)(char *, char *, char *))v156;
  v156(v129, (uint64_t)v109, (uint64_t)v90);
  v113(v112, v110, v90);
  uint64_t v114 = (uint64_t)v123;
  ((void (*)(char *, char *, char *))v101)(v123, v111, v90);
  ((void (*)(char *, char *))v158)(v112, v90);
  uint64_t v115 = &v111[*(int *)(v107 + 48)];
  ((void (*)(char *, char *, char *))v101)(v111, v109, v90);
  ((void (*)(char *, char *, char *))v101)(v115, v110, v90);
  ((void (*)(uint64_t, char *, char *))v101)(v114 + *(int *)(v124 + 36), v115, v90);
  unint64_t v116 = v90;
  unint64_t v90 = v152;
  ((void (*)(char *, char *))v158)(v111, v116);
  sub_250EFA28C(v114, v130);
  uint64_t v94 = (void (**)(char *, void *))v132;
  uint64_t v105 = (void *)v134;
  (*((void (**)(char *, char *, uint64_t))v132 + 2))(v126, v90, v134);
  uint64_t v117 = v155;
  uint64_t v4 = (uint64_t)v133;
  sub_250F0C6E0();
  uint64_t v101 = v135;
  uint64_t v102 = (char *)v136;
  (*(void (**)(char *, uint64_t, uint64_t))(v135 + 16))(v131, v4, v136);
  sub_250EA8CE0();
  id v119 = objc_allocWithZone(v118);
  sub_250F0CD20();
  uint64_t v120 = swift_beginAccess();
  MEMORY[0x25338DC20](v120);
  if (*(void *)((*(void *)(v117 + 72) & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)((*(void *)(v117 + 72) & 0xFFFFFFFFFFFFFF8)
                                                                                       + 0x18) >> 1)
LABEL_26:
    sub_250F0D060();
  sub_250F0D090();
  sub_250F0D050();
  swift_endAccess();
  (*(void (**)(uint64_t, char *))(v101 + 8))(v4, v102);
  v94[1](v90, v105);
  (*(void (**)(char *, uint64_t))(v151 + 8))(v149, v127);
  return (*(uint64_t (**)(char *, uint64_t))(v148 + 8))(v147, v150);
}

uint64_t sub_250EF9AAC(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v40 = a4;
  uint64_t v47 = a3;
  sub_250E9241C(0);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v42 = (uint64_t)v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CE70();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  uint64_t v43 = (char *)v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v46 = (char *)v39 - v12;
  MEMORY[0x270FA5388](v11);
  uint64_t v14 = (char *)v39 - v13;
  uint64_t v15 = sub_250F0C6F0();
  uint64_t v16 = *(void *)(v15 - 8);
  MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)v39 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = *a1;
  sub_250F0CD30();
  sub_250F0C6D0();
  uint64_t v20 = *(void (**)(char *, uint64_t))(v16 + 8);
  uint64_t v44 = v15;
  uint64_t v45 = v20;
  v20(v18, v15);
  LOBYTE(a1) = sub_250F0CDB0();
  uint64_t v21 = *(void (**)(char *, uint64_t))(v8 + 8);
  v21(v14, v7);
  uint64_t v41 = v8;
  uint64_t v22 = v7;
  uint64_t v23 = v46;
  uint64_t v24 = *(void (**)(char *, uint64_t))(v8 + 16);
  uint64_t v25 = v47;
  uint64_t v47 = v22;
  v24(v46, v25);
  if (a1)
  {
    v21(v23, v47);
    char v26 = 0;
  }
  else
  {
    _OWORD v39[2] = v19;
    sub_250F0CD30();
    sub_250F0C6D0();
    uint64_t v27 = v44;
    v45(v18, v44);
    uint64_t v28 = sub_250EFA2F0(&qword_26B20E340, MEMORY[0x263F090E8]);
    uint64_t v29 = v47;
    v39[1] = v28;
    char v30 = sub_250F0CEE0();
    v21(v14, v29);
    v21(v23, v29);
    if (v30)
    {
      char v26 = 0;
    }
    else
    {
      uint64_t v31 = v27;
      uint64_t v32 = v40 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData;
      swift_beginAccess();
      uint64_t v33 = v32;
      uint64_t v34 = v42;
      sub_250EFA1CC(v33, v42);
      uint64_t v35 = v41;
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v41 + 48))(v34, 1, v47) == 1)
      {
        sub_250EFA230(v34);
        char v26 = 0;
      }
      else
      {
        uint64_t v36 = v47;
        (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v43, v34, v47);
        sub_250F0CD30();
        sub_250F0C6D0();
        v45(v18, v31);
        uint64_t v37 = v43;
        char v26 = sub_250F0CEE0() ^ 1;
        v21(v14, v36);
        v21(v37, v36);
      }
    }
  }
  return v26 & 1;
}

uint64_t sub_250EF9F04()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_250EFA230(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_firstDayWithData);
  sub_250EFA230(v0 + OBJC_IVAR____TtC19HealthBalanceDaemon22EWMABaselineCalculator_lastDayIndex);
  return swift_deallocClassInstance();
}

uint64_t sub_250EF9F90()
{
  return type metadata accessor for EWMABaselineCalculator();
}

uint64_t type metadata accessor for EWMABaselineCalculator()
{
  uint64_t result = qword_269B112D0;
  if (!qword_269B112D0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_250EF9FE4()
{
  sub_250E9241C(319);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_250EFA0A4@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t *a3@<X8>)
{
  char v5 = a2 & 1;
  uint64_t v6 = swift_allocObject();
  uint64_t result = sub_250EF89B8(a1, v5);
  *a3 = v6;
  return result;
}

uint64_t sub_250EFA0F8(void *a1, uint64_t a2, char a3)
{
  return sub_250EF8A9C(a1, a2, a3);
}

uint64_t sub_250EFA11C(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  swift_beginAccess();
  unint64_t v6 = *(void *)(v5 + 72);
  _OWORD v8[2] = a1;
  v8[3] = a2;
  v8[4] = v5;
  swift_bridgeObjectRetain();
  return sub_250EA1CE0((uint64_t (*)(id *))sub_250EFA1A8, (uint64_t)v8, v6);
}

uint64_t sub_250EFA1A0()
{
  return 112;
}

uint64_t sub_250EFA1A8(uint64_t *a1)
{
  return sub_250EF9AAC(a1, v1[2], v1[3], v1[4]) & 1;
}

uint64_t sub_250EFA1CC(uint64_t a1, uint64_t a2)
{
  sub_250E9241C(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EFA230(uint64_t a1)
{
  sub_250E9241C(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_250EFA28C(uint64_t a1, uint64_t a2)
{
  sub_250EC18D8(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_250EFA2F0(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void sub_250EFA338()
{
  type metadata accessor for SleepingSampleBaselineCalculator();
  if (v0 <= 0x3F)
  {
    sub_250ED0FC4(319);
    if (v1 <= 0x3F) {
      swift_initClassMetadata2();
    }
  }
}

uint64_t sub_250EFA418()
{
  uint64_t v1 = v0 + *(void *)(*(void *)v0 + 96);
  uint64_t v2 = type metadata accessor for SleepingSampleBaselineCalculator();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  swift_unknownObjectRelease();
  sub_250EFB88C(v0 + *(void *)(*(void *)v0 + 112));
  return v0;
}

uint64_t sub_250EFA4F4()
{
  sub_250EFA418();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SleepingWristTemperatureBaselineCalculator()
{
  return __swift_instantiateGenericMetadata();
}

BOOL sub_250EFA564(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void **)a1;
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  if (*(void *)a1)
  {
    if (v4)
    {
      sub_250E8D194(0, &qword_269B112E0);
      id v6 = v4;
      id v7 = v2;
      char v8 = sub_250F0D2A0();

      if (v8) {
        return v3 == v5;
      }
    }
  }
  else if (!v4)
  {
    return v3 == v5;
  }
  return 0;
}

uint64_t sub_250EFA5F8(uint64_t a1)
{
  uint64_t v40 = a1;
  uint64_t v2 = sub_250F0CD70();
  uint64_t v35 = *(void *)(v2 - 8);
  uint64_t v36 = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v34 = (char *)&v33 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_250F0CD80();
  uint64_t v38 = *(void *)(v4 - 8);
  uint64_t v39 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v37 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = MEMORY[0x270FA5388](v6 - 8);
  MEMORY[0x270FA5388](v7);
  uint64_t v8 = sub_250F0BF30();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  uint64_t v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void **)(v1 + 24);
  uint64_t v13 = v12;
  if (v12 == (void *)1)
  {
    id v14 = sub_250EFAA60();
    uint64_t v15 = *(void **)(v1 + 24);
    *(void *)(v1 + 24) = v14;
    *(void *)(v1 + 32) = v16;
    sub_250E88498(v15);
    uint64_t v13 = *(void **)(v1 + 24);
    if (v13 == (void *)1) {
      return 0;
    }
    id v17 = v13;
  }
  if (!v13)
  {
    sub_250EFB87C(v12);
    sub_250EFB87C(v12);
    uint64_t v31 = 0;
LABEL_15:
    sub_250E88498(v31);
    return 0;
  }
  sub_250EFB87C(v12);
  sub_250EFB87C(v12);
  id v18 = v13;
  id v19 = objc_msgSend(v18, sel_startDate);
  sub_250F0C030();

  id v20 = objc_msgSend(v18, sel_endDate);
  sub_250F0C030();

  sub_250F0BEF0();
  char v21 = sub_250F0BE90();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if ((v21 & 1) == 0)
  {
    sub_250E88498(v13);

    return 0;
  }
  uint64_t v22 = v37;
  sub_250F0CD50();
  uint64_t v24 = v38;
  uint64_t v23 = v39;
  int v25 = (*(uint64_t (**)(char *, uint64_t))(v38 + 88))(v22, v39);
  if (v25 != *MEMORY[0x263F09070])
  {
    if (v25 != *MEMORY[0x263F09078] && v25 != *MEMORY[0x263F090C8] && v25 != *MEMORY[0x263F09080]) {
      (*(void (**)(char *, uint64_t))(v24 + 8))(v22, v23);
    }

    uint64_t v31 = v13;
    goto LABEL_15;
  }
  (*(void (**)(char *, uint64_t))(v24 + 96))(v22, v23);
  char v26 = v34;
  uint64_t v27 = v35;
  uint64_t v28 = v22;
  uint64_t v29 = v36;
  (*(void (**)(char *, char *, uint64_t))(v35 + 32))(v34, v28, v36);
  uint64_t v30 = sub_250F0CD60();
  (*(void (**)(char *, uint64_t))(v27 + 8))(v26, v29);

  sub_250E88498(v13);
  return v30;
}

id sub_250EFAA60()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v2);
  sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  uint64_t v3 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
  id v4 = sub_250EFB5C4((uint64_t)v3, *(id *)(v1 + 16), 0);

  if (v4) {
    sub_250EFADD0(v4);
  }
  return v4;
}

id sub_250EFADD0(void *a1)
{
  v57[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v2 = sub_250F0C060();
  uint64_t v51 = *(void *)(v2 - 8);
  uint64_t v52 = v2;
  uint64_t v3 = MEMORY[0x270FA5388](v2);
  MEMORY[0x270FA5388](v3);
  uint64_t v5 = (char *)v46 - v4;
  uint64_t v6 = sub_250F0BF30();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v10 = (char *)v46 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v46 - v11;
  uint64_t v13 = sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
  id v49 = (id)*MEMORY[0x263F09BE0];
  uint64_t v50 = v13;
  id v14 = (void *)MEMORY[0x25338DDE0]();
  id v15 = objc_msgSend(v14, sel__rollingBaselineConfiguration);

  if (!v15) {
    __break(1u);
  }
  id v16 = objc_msgSend(a1, sel_startDate);
  sub_250F0C030();

  id v17 = objc_msgSend(a1, sel_endDate);
  sub_250F0C030();

  sub_250F0BEF0();
  id v54 = v12;
  sub_250F0D280();

  id v18 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v55 = v7 + 8;
  v18(v10, v6);
  id v19 = objc_msgSend(a1, sel_sourceRevision);
  id v20 = objc_msgSend(v19, sel_source);

  char v21 = *(void **)(v56 + 16);
  id v22 = objc_msgSend(v21, sel_sourceManager);
  id v23 = objc_msgSend(v20, sel_bundleIdentifier);
  if (!v23)
  {
    sub_250F0CF80();
    id v23 = (id)sub_250F0CF50();
    swift_bridgeObjectRelease();
  }
  v57[0] = 0;
  id v24 = objc_msgSend(v22, sel_allSourcesForBundleIdentifier_error_, v23, v57);

  id v25 = v57[0];
  if (v24)
  {
    id v47 = v20;
    uint64_t v48 = v18;
    uint64_t v56 = v6;
    _OWORD v46[3] = sub_250E8D194(0, &qword_269B112E8);
    void v46[2] = sub_250EFB55C();
    v46[1] = sub_250F0D0E0();
    id v26 = v25;

    id v49 = (id)MEMORY[0x25338DDE0](v49);
    sub_250EFB828(0, (unint64_t *)&unk_26B20F008, MEMORY[0x263F8E0F8]);
    uint64_t v27 = swift_allocObject();
    uint64_t v50 = (uint64_t)v21;
    uint64_t v28 = (void *)v27;
    *(_OWORD *)(v27 + 16) = xmmword_250F0ECE0;
    uint64_t v29 = v54;
    sub_250F0BF00();
    uint64_t v30 = (void *)sub_250F0BFC0();
    uint64_t v31 = v52;
    id v23 = (id)(v51 + 8);
    uint64_t v32 = *(void (**)(char *, uint64_t))(v51 + 8);
    v32(v5, v52);
    id v33 = (id)HDSampleEntityPredicateForStartDate();

    uint64_t v34 = sub_250E8D194(0, &qword_26B20EEF8);
    v28[7] = v34;
    v28[4] = v33;
    sub_250F0BEE0();
    uint64_t v35 = (void *)sub_250F0BFC0();
    v32(v5, v31);
    id v36 = (id)HDSampleEntityPredicateForStartDate();

    v28[11] = v34;
    v28[8] = v36;
    id v37 = v49;
    uint64_t v38 = (void *)sub_250F0D0D0();
    swift_bridgeObjectRelease();
    id v39 = (id)HDDataEntityPredicateForSourceEntitySet();

    v28[15] = v34;
    v28[12] = v39;
    uint64_t v40 = (void *)sub_250F0D030();
    swift_bridgeObjectRelease();
    id v41 = objc_msgSend(self, sel_predicateMatchingAllPredicates_, v40);

    uint64_t v42 = v53;
    id v43 = sub_250EFB758((uint64_t)v37, v50, (uint64_t)v41);
    if (!v42) {
      id v23 = v43;
    }
    v48(v29, v56);
  }
  else
  {
    id v44 = v57[0];
    sub_250F0BFA0();

    swift_willThrow();
    v18(v54, v6);
  }
  return v23;
}

void *initializeBufferWithCopyOfBuffer for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  return a1;
}

uint64_t assignWithCopy for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  id v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  return a1;
}

uint64_t assignWithTake for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t a1, void *a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *a2;

  *(void *)(a1 + 8) = a2[1];
  return a1;
}

uint64_t getEnumTagSinglePayload for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)uint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result()
{
  return &type metadata for SleepingWristTemperatureMostRecentSampleWarmupProgressProvider.Result;
}

unint64_t sub_250EFB55C()
{
  unint64_t result = qword_269B112F0;
  if (!qword_269B112F0)
  {
    sub_250E8D194(255, &qword_269B112E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_269B112F0);
  }
  return result;
}

id sub_250EFB5C4(uint64_t a1, id a2, uint64_t a3)
{
  uint64_t v17 = *MEMORY[0x263EF8340];
  sub_250E8D194(0, &qword_269B11298);
  *(void *)&long long v13 = 0;
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_mostRecentSampleWithType_profile_encodingOptions_predicate_anchor_error_, a1, a2, 0, a3, 0, &v13);
  uint64_t v7 = (void *)v13;
  if (v6)
  {
    a2 = v6;
    id v8 = (id)v13;
    sub_250F0D340();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v13 = 0u;
    long long v14 = 0u;
    id v9 = v7;
  }
  sub_250E893EC((uint64_t)&v13, (uint64_t)v15);
  if (!v7 || v16)
  {
    sub_250E893EC((uint64_t)v15, (uint64_t)&v13);
    if (*((void *)&v14 + 1))
    {
      sub_250E8D194(0, &qword_269B112E0);
      if (swift_dynamicCast()) {
        a2 = v12;
      }
      else {
        a2 = 0;
      }
    }
    else
    {
      sub_250EA8EB8((uint64_t)&v13);
      a2 = 0;
    }
  }
  else
  {
    id v10 = v7;
    swift_willThrow();
    sub_250EA8EB8((uint64_t)v15);
  }
  return a2;
}

id sub_250EFB758(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  sub_250E8D194(0, &qword_269B11298);
  v10[0] = 0;
  id v6 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_countOfSamplesWithType_profile_matchingPredicate_withError_, a1, a2, a3, v10);
  id v7 = v6;
  if (v10[0]) {
    BOOL v8 = v6 == 0;
  }
  else {
    BOOL v8 = 0;
  }
  if (v8)
  {
    v10[0];
    swift_willThrow();
  }
  return v7;
}

void sub_250EFB828(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void, uint64_t))
{
  if (!*a2)
  {
    unint64_t v4 = a3(0, MEMORY[0x263F8EE58] + 8);
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

id sub_250EFB87C(id result)
{
  if (result != (id)1) {
    return result;
  }
  return result;
}

uint64_t sub_250EFB88C(uint64_t a1)
{
  sub_250ED0FC4(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_250EFB8EC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EDD988();
  uint64_t v2 = sub_250F0D5E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_250EFD83C(v6, (uint64_t)&v15, (uint64_t (*)(void))sub_250EE27F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_250EFCF60(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_250E9FB90(&v17, v3[7] + 40 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 56;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_250EFBA2C(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EFD464();
  uint64_t v2 = (void *)sub_250F0D5E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_250EFD064((uint64_t)v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v10) = v6;
    *(void *)(v2[7] + v10) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_250EFBB34(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EFD520(0, (unint64_t *)&qword_26B20EF88);
  uint64_t v2 = sub_250F0D5E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_250EFD578(v6, (uint64_t)&v15, (unint64_t *)&qword_26B20E4D0);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_250EFCF60(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = (unint64_t)sub_250EA8550(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_250EFBC94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EFD520(0, &qword_269B11328);
  uint64_t v2 = sub_250F0D5E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_250EFD578(v6, (uint64_t)v15, (unint64_t *)&qword_269B10BB8);
    unint64_t result = sub_250EFD020((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = (unint64_t)sub_250EA8550(&v17, (_OWORD *)(v3[7] + 32 * result));
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_250EFBDF8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EFD8A4();
  uint64_t v2 = (void *)sub_250F0D5E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = (id)*(v4 - 1);
    swift_bridgeObjectRetain();
    unint64_t result = sub_250EFD064((uint64_t)v6);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v2[6] + v9) = v6;
    *(void *)(v2[7] + v9) = v5;
    uint64_t v10 = v2[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      goto LABEL_11;
    }
    v2[2] = v12;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_250EFBF00(uint64_t a1)
{
  sub_250EFD7BC();
  uint64_t v3 = v2;
  uint64_t v4 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  id v6 = (void *)((char *)v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    char v8 = (void *)MEMORY[0x263F8EE80];
    goto LABEL_9;
  }
  sub_250EDDA5C();
  uint64_t v7 = sub_250F0D5E0();
  char v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = (char *)v6 + *(int *)(v3 + 48);
  uint64_t v11 = v7 + 64;
  unint64_t v12 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  v24[1] = a1;
  uint64_t v13 = a1 + v12;
  uint64_t v14 = *(void *)(v4 + 72);
  swift_retain();
  while (1)
  {
    sub_250EFD83C(v13, (uint64_t)v6, (uint64_t (*)(void))sub_250EFD7BC);
    uint64_t v15 = *v6;
    unint64_t result = sub_250EFCF1C(*v6);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v11 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v15;
    uint64_t v19 = v8[7];
    uint64_t v20 = sub_250F0BF30();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v18, v10, v20);
    uint64_t v21 = v8[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    _OWORD v8[2] = v23;
    v13 += v14;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_250EFC0FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  v86[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_250F0CCB0();
  uint64_t v82 = *(void *)(v4 - 8);
  uint64_t v83 = v4;
  uint64_t v5 = MEMORY[0x270FA5388](v4);
  double v81 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v5);
  char v8 = (char *)&v74 - v7;
  uint64_t v9 = sub_250F0C110();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v74 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v15 = (char *)&v74 - v14;
  sub_250EFD380(0, &qword_26B20E4B8, MEMORY[0x263F07598], MEMORY[0x263F8D8F0]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  uint64_t v19 = (char *)&v74 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v21 = (char *)&v74 - v20;
  id v80 = (id)*MEMORY[0x263F097F8];
  id v84 = objc_msgSend(a1, sel_featureAvailabilityProvidingForFeatureIdentifier_);
  if (!v84) {
    goto LABEL_6;
  }
  uint64_t v75 = (void *)*MEMORY[0x263F097B8];
  id v79 = objc_msgSend(a1, sel_featureAvailabilityProvidingForFeatureIdentifier_);
  if (!v79)
  {
    swift_unknownObjectRelease();
LABEL_6:
    sub_250F0CC90();
    uint64_t v28 = sub_250F0CCA0();
    os_log_type_t v29 = sub_250F0D1C0();
    if (os_log_type_enabled(v28, v29))
    {
      uint64_t v30 = (uint8_t *)swift_slowAlloc();
      uint64_t v31 = (void *)swift_slowAlloc();
      v86[0] = v31;
      *(_DWORD *)uint64_t v30 = 136446210;
      uint64_t v85 = sub_250E8BE44(0xD000000000000023, 0x8000000250F12BA0, (uint64_t *)v86);
      sub_250F0D300();
      _os_log_impl(&dword_250E86000, v28, v29, "[%{public}s] Unable to find feature availability providing", v30, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v31, -1, -1);
      MEMORY[0x25338EC30](v30, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v82 + 8))(v8, v83);
    uint64_t v32 = sub_250F0CA40();
    id v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
    uint64_t v34 = a2;
    return v33(v34, 1, 1, v32);
  }
  uint64_t v78 = a2;
  sub_250F0C100();
  sub_250F0C0F0();
  id v77 = *(void (**)(char *, uint64_t))(v10 + 8);
  v77(v15, v9);
  uint64_t v22 = sub_250F0C0E0();
  uint64_t v23 = *(void *)(v22 - 8);
  double v76 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v23 + 48);
  int v24 = v76(v21, 1, v22);
  uint64_t v74 = v23;
  if (v24 == 1)
  {
    sub_250EFD2F4((uint64_t)v21);
    id v25 = a1;
    id v26 = v84;
    swift_unknownObjectRetain();
    uint64_t v27 = 0;
  }
  else
  {
    sub_250F0C0D0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v21, v22);
    id v35 = a1;
    id v36 = v84;
    swift_unknownObjectRetain();
    id v26 = v36;
    uint64_t v27 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
  }
  id v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, v26, a1, v27);

  swift_unknownObjectRelease();
  sub_250F0C100();
  sub_250F0C0F0();
  v77(v13, v9);
  if (v76(v19, 1, v22) == 1)
  {
    sub_250EFD2F4((uint64_t)v19);
    id v38 = a1;
    id v39 = v79;
    swift_unknownObjectRetain();
    uint64_t v40 = 0;
  }
  else
  {
    sub_250F0C0D0();
    (*(void (**)(char *, uint64_t))(v74 + 8))(v19, v22);
    id v41 = a1;
    id v39 = v79;
    swift_unknownObjectRetain();
    uint64_t v40 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
  }
  uint64_t v42 = v78;
  id v43 = objc_msgSend(objc_allocWithZone(MEMORY[0x263F0A3D0]), sel_initWithFeatureAvailabilityProviding_healthDataSource_currentCountryCode_, v39, a1, v40);

  swift_unknownObjectRelease();
  v86[0] = 0;
  id v44 = objc_msgSend(v37, sel_featureStatusWithError_, v86);
  id v45 = v86[0];
  if (v44)
  {
    uint64_t v46 = v44;
    v86[0] = 0;
    id v47 = v45;
    id v48 = objc_msgSend(v43, sel_featureStatusWithError_, v86);
    id v49 = v86[0];
    if (v48)
    {
      uint64_t v50 = v48;
      sub_250EFD380(0, &qword_269B11308, (uint64_t (*)(uint64_t))sub_250EFD3E4, MEMORY[0x263F8E0F8]);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_250F0F080;
      id v52 = v80;
      *(void *)(inited + 32) = v80;
      *(void *)(inited + 40) = v46;
      uint64_t v53 = v75;
      *(void *)(inited + 48) = v75;
      *(void *)(inited + 56) = v50;
      id v54 = v49;
      id v55 = v52;
      id v56 = v46;
      id v57 = v53;
      id v58 = v50;
      sub_250EFBA2C(inited);
      sub_250F0CA20();

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      uint64_t v59 = sub_250F0CA40();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v59 - 8) + 56))(v42, 0, 1, v59);
    }
    id v63 = v86[0];
    double v62 = (void *)sub_250F0BFA0();

    swift_willThrow();
  }
  else
  {
    id v61 = v86[0];
    double v62 = (void *)sub_250F0BFA0();

    swift_willThrow();
  }
  uint64_t v64 = v81;
  sub_250F0CC90();
  id v65 = v62;
  id v66 = v62;
  double v67 = sub_250F0CCA0();
  os_log_type_t v68 = sub_250F0D1B0();
  if (os_log_type_enabled(v67, v68))
  {
    uint64_t v69 = swift_slowAlloc();
    double v70 = (void *)swift_slowAlloc();
    double v71 = (void *)swift_slowAlloc();
    v86[0] = v71;
    *(_DWORD *)uint64_t v69 = 136446466;
    id v80 = v37;
    uint64_t v85 = sub_250E8BE44(0xD000000000000023, 0x8000000250F12BA0, (uint64_t *)v86);
    id v77 = (void (*)(char *, uint64_t))v43;
    sub_250F0D300();
    *(_WORD *)(v69 + 12) = 2114;
    id v72 = v62;
    uint64_t v73 = _swift_stdlib_bridgeErrorToNSError();
    uint64_t v85 = v73;
    uint64_t v42 = v78;
    sub_250F0D300();
    *double v70 = v73;

    _os_log_impl(&dword_250E86000, v67, v68, "[%{public}s] Error retrieving feature status: %{public}@", (uint8_t *)v69, 0x16u);
    sub_250E978C0();
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v70, -1, -1);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v71, -1, -1);
    MEMORY[0x25338EC30](v69, -1, -1);

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    (*(void (**)(char *, uint64_t))(v82 + 8))(v81, v83);
  }
  else
  {

    swift_unknownObjectRelease();
    swift_unknownObjectRelease();

    (*(void (**)(char *, uint64_t))(v82 + 8))(v64, v83);
  }
  uint64_t v32 = sub_250F0CA40();
  id v33 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56);
  uint64_t v34 = v42;
  return v33(v34, 1, 1, v32);
}

void sub_250EFCB28(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_250F0C680();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = 0;
  sub_250EFCFD8(&qword_269B112F8, MEMORY[0x263F42DA0]);
  sub_250F0D7A0();
  uint64_t v6 = sub_250F0CA30();
  if (!*(void *)(v6 + 16)) {
    goto LABEL_6;
  }
  id v7 = (id)*MEMORY[0x263F097F8];
  unint64_t v8 = sub_250EFD064((uint64_t)v7);
  if ((v9 & 1) == 0)
  {

LABEL_6:
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  id v10 = *(id *)(*(void *)(v6 + 56) + 8 * v8);

  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v10, sel_objectForKeyedSubscript_, *MEMORY[0x263F09588]);
  unsigned __int8 v12 = objc_msgSend(v11, sel_areAllRequirementsSatisfied);

  if (v12)
  {
    sub_250F0C670();
    sub_250EFCFD8(&qword_269B11300, MEMORY[0x263F42DA0]);
    sub_250F0D010();
    id v23 = v10;
    uint64_t v13 = v3;
    uint64_t v14 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v14(a1, v2);
    sub_250F0D010();
    uint64_t v26 = v24 | v25;
    sub_250F0D7A0();

    v14((uint64_t)v5, v2);
    uint64_t v3 = v13;
  }
  else
  {
  }
LABEL_7:
  uint64_t v15 = sub_250F0CA30();
  if (!*(void *)(v15 + 16))
  {
LABEL_12:
    swift_bridgeObjectRelease();
    return;
  }
  id v16 = (id)*MEMORY[0x263F097B8];
  unint64_t v17 = sub_250EFD064((uint64_t)v16);
  if ((v18 & 1) == 0)
  {

    goto LABEL_12;
  }
  id v19 = *(id *)(*(void *)(v15 + 56) + 8 * v17);

  swift_bridgeObjectRelease();
  id v20 = objc_msgSend(v19, sel_objectForKeyedSubscript_, *MEMORY[0x263F09588]);
  unsigned __int8 v21 = objc_msgSend(v20, sel_areAllRequirementsSatisfied);

  if (v21)
  {
    sub_250F0C660();
    sub_250EFCFD8(&qword_269B11300, MEMORY[0x263F42DA0]);
    sub_250F0D010();
    uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
    v22(a1, v2);
    sub_250F0D010();
    uint64_t v26 = v24 | v25;
    sub_250F0D7A0();

    v22((uint64_t)v5, v2);
  }
  else
  {
  }
}

unint64_t sub_250EFCF1C(uint64_t a1)
{
  uint64_t v2 = sub_250F0D290();
  return sub_250EFD0F4(a1, v2);
}

unint64_t sub_250EFCF60(uint64_t a1, uint64_t a2)
{
  sub_250F0D710();
  sub_250F0CFA0();
  uint64_t v4 = sub_250F0D730();
  return sub_250EFD210(a1, a2, v4);
}

uint64_t sub_250EFCFD8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_250EFD020(uint64_t a1)
{
  uint64_t v2 = sub_250F0D400();
  return sub_250EFD644(a1, v2);
}

unint64_t sub_250EFD064(uint64_t a1)
{
  sub_250F0CF80();
  sub_250F0D710();
  sub_250F0CFA0();
  uint64_t v2 = sub_250F0D730();
  swift_bridgeObjectRelease();
  return sub_250EFD9D8(a1, v2);
}

unint64_t sub_250EFD0F4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t i = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i))
  {
    sub_250E8D194(0, (unint64_t *)&qword_26B20E378);
    id v6 = *(id *)(*(void *)(v2 + 48) + 8 * i);
    char v7 = sub_250F0D2A0();

    if ((v7 & 1) == 0)
    {
      uint64_t v8 = ~v4;
      for (unint64_t i = (i + 1) & v8; ((*(void *)(v3 + ((i >> 3) & 0xFFFFFFFFFFFFFF8)) >> i) & 1) != 0; unint64_t i = (i + 1) & v8)
      {
        id v9 = *(id *)(*(void *)(v2 + 48) + 8 * i);
        char v10 = sub_250F0D2A0();

        if (v10) {
          break;
        }
      }
    }
  }
  return i;
}

unint64_t sub_250EFD210(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    char v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_250F0D680() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        uint64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_250F0D680() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_250EFD2F4(uint64_t a1)
{
  sub_250EFD380(0, &qword_26B20E4B8, MEMORY[0x263F07598], MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_250EFD380(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

void sub_250EFD3E4()
{
  if (!qword_269B11310)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_250E8D194(255, &qword_269B11318);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B11310);
    }
  }
}

void sub_250EFD464()
{
  if (!qword_269B11320)
  {
    type metadata accessor for HKFeatureIdentifier(255);
    sub_250E8D194(255, &qword_269B11318);
    sub_250EFCFD8(&qword_269B107E8, type metadata accessor for HKFeatureIdentifier);
    unint64_t v0 = sub_250F0D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_269B11320);
    }
  }
}

void sub_250EFD520(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_250F0D5F0();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

uint64_t sub_250EFD578(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  sub_250EFD5E4(0, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_250EFD5E4(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v4) {
      atomic_store(TupleTypeMetadata2, a2);
    }
  }
}

unint64_t sub_250EFD644(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    do
    {
      sub_250EFD70C(*(void *)(v2 + 48) + 40 * v4, (uint64_t)v9);
      char v7 = MEMORY[0x25338E010](v9, a1);
      sub_250EFD768((uint64_t)v9);
      if (v7) {
        break;
      }
      unint64_t v4 = (v4 + 1) & v6;
    }
    while (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

uint64_t sub_250EFD70C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_250EFD768(uint64_t a1)
{
  return a1;
}

void sub_250EFD7BC()
{
  if (!qword_26B20E388)
  {
    sub_250E8D194(255, (unint64_t *)&qword_26B20E378);
    sub_250F0BF30();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20E388);
    }
  }
}

uint64_t sub_250EFD83C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void sub_250EFD8A4()
{
  if (!qword_26B20E450)
  {
    type metadata accessor for HKFeatureAvailabilityContext(255);
    sub_250EFD380(255, (unint64_t *)&qword_26B20E360, (uint64_t (*)(uint64_t))sub_250EFD980, MEMORY[0x263F8D488]);
    sub_250EFCFD8((unint64_t *)&qword_26B20E3B0, type metadata accessor for HKFeatureAvailabilityContext);
    unint64_t v0 = sub_250F0D5F0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E450);
    }
  }
}

unint64_t sub_250EFD980()
{
  unint64_t result = qword_26B20E3F8;
  if (!qword_26B20E3F8)
  {
    unint64_t result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_26B20E3F8);
  }
  return result;
}

unint64_t sub_250EFD9D8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v6 = sub_250F0CF80();
    uint64_t v8 = v7;
    if (v6 == sub_250F0CF80() && v8 == v9)
    {
LABEL_16:
      swift_bridgeObjectRelease_n();
      return v5;
    }
    char v11 = sub_250F0D680();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v11 & 1) == 0)
    {
      uint64_t v12 = ~v4;
      unint64_t v5 = (v5 + 1) & v12;
      if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
      {
        while (1)
        {
          uint64_t v13 = sub_250F0CF80();
          uint64_t v15 = v14;
          if (v13 == sub_250F0CF80() && v15 == v16) {
            break;
          }
          char v18 = sub_250F0D680();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v18 & 1) == 0)
          {
            unint64_t v5 = (v5 + 1) & v12;
            if ((*(void *)(v3 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
              continue;
            }
          }
          return v5;
        }
        goto LABEL_16;
      }
    }
  }
  return v5;
}

uint64_t ObserverSet.__allocating_init(name:loggingCategory:)(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v6 = swift_allocObject();
  ObserverSet.init(name:loggingCategory:)(a1, a2, a3);
  return v6;
}

id ObserverSet.registerObserver(_:queue:)(uint64_t a1, uint64_t a2)
{
  return objc_msgSend(*(id *)(v2 + 16), sel_registerObserver_queue_, a1, a2);
}

id ObserverSet.unregisterObserver(_:)(uint64_t a1)
{
  return objc_msgSend(*(id *)(v1 + 16), sel_unregisterObserver_, a1);
}

void ObserverSet.notifyObservers(_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  uint64_t v6 = (void *)v2[2];
  uint64_t v7 = (void *)swift_allocObject();
  void v7[2] = *(void *)(v5 + 80);
  _OWORD v7[3] = a1;
  v7[4] = a2;
  v9[4] = sub_250EFE038;
  v9[5] = v7;
  v9[0] = MEMORY[0x263EF8330];
  v9[1] = 1107296256;
  v9[2] = sub_250EAED08;
  _OWORD v9[3] = &block_descriptor_10;
  uint64_t v8 = _Block_copy(v9);
  swift_retain();
  swift_release();
  objc_msgSend(v6, sel_notifyObservers_, v8);
  _Block_release(v8);
}

uint64_t ObserverSet.init(name:loggingCategory:)(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = objc_allocWithZone(MEMORY[0x263F0A5A8]);
  uint64_t v6 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v7 = objc_msgSend(v5, sel_initWithName_loggingCategory_, v6, a3);

  *(void *)(v3 + 16) = v7;
  return v3;
}

uint64_t sub_250EFDD6C(uint64_t a1)
{
  swift_unknownObjectRetain();
  swift_getObjectType();
  uint64_t v2 = swift_conformsToProtocol2();
  if (v2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v2) {
    uint64_t v4 = a1;
  }
  else {
    uint64_t v4 = 0;
  }
  if (v4)
  {
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t, uint64_t))(v3 + 16))(ObjectType, v3);
  }
  return swift_unknownObjectRelease();
}

uint64_t sub_250EFDDF8(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v7 = sub_250F0D2D0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = MEMORY[0x270FA5388](v7);
  char v11 = (char *)v18 - v10;
  uint64_t v12 = *(void *)(a4 - 8);
  MEMORY[0x270FA5388](v9);
  uint64_t v14 = (char *)v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18[1] = a1;
  swift_unknownObjectRetain();
  char v15 = swift_dynamicCast();
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v12 + 56);
  if (v15)
  {
    v16(v11, 0, 1, a4);
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v11, a4);
    a2(v14);
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, a4);
  }
  else
  {
    v16(v11, 1, 1, a4);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
}

uint64_t sub_250EFE000()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 40, 7);
}

uint64_t sub_250EFE038(uint64_t a1)
{
  return sub_250EFDDF8(a1, *(void (**)(char *))(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 16));
}

uint64_t ObserverSet.deinit()
{
  return v0;
}

uint64_t ObserverSet.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_250EFE09C()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for ObserverSet()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t method lookup function for ObserverSet(uint64_t a1, uint64_t a2)
{
  return MEMORY[0x270FA04D0](a1, a2, &nominal type descriptor for ObserverSet);
}

uint64_t dispatch thunk of ObserverSet.__allocating_init(name:loggingCategory:)()
{
  return (*(uint64_t (**)(void))(v0 + 96))();
}

id sub_250EFE128(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_250F0CF80();
  sub_250EFE260();
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0F260;
  *(void *)(inited + 32) = sub_250F0CF80();
  *(void *)(inited + 40) = v7;
  *(void *)(inited + 72) = MEMORY[0x263F8D310];
  *(void *)(inited + 48) = a2;
  *(void *)(inited + 56) = a3;
  swift_bridgeObjectRetain();
  sub_250EFBB34(inited);
  id v8 = objc_allocWithZone(MEMORY[0x263F087E8]);
  uint64_t v9 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t v10 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  id v11 = objc_msgSend(v8, sel_initWithDomain_code_userInfo_, v9, a1, v10);

  return v11;
}

void sub_250EFE260()
{
  if (!qword_26B20E4D8)
  {
    sub_250EFE2B8();
    unint64_t v0 = sub_250F0D660();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_26B20E4D8);
    }
  }
}

void sub_250EFE2B8()
{
  if (!qword_26B20E4D0)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_26B20E4D0);
    }
  }
}

uint64_t sub_250EFE324(char a1)
{
  sub_250EB26D4();
  uint64_t v2 = swift_allocObject();
  *(_OWORD *)(v2 + 16) = xmmword_250F0F060;
  if (a1) {
    sub_250F0C280();
  }
  else {
    sub_250F0C2D0();
  }
  sub_250F0C2A0();
  id v3 = objc_allocWithZone(MEMORY[0x263F31E68]);
  uint64_t v4 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v5 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v6 = objc_msgSend(v3, sel_initWithExtensionBundleIdentifier_kind_, v4, v5);

  *(void *)(v2 + 32) = v6;
  if (a1) {
    sub_250F0C280();
  }
  else {
    sub_250F0C2D0();
  }
  sub_250F0C2C0();
  id v7 = objc_allocWithZone(MEMORY[0x263F31E68]);
  id v8 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  uint64_t v9 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  id v10 = objc_msgSend(v7, sel_initWithExtensionBundleIdentifier_kind_, v8, v9);

  *(void *)(v2 + 40) = v10;
  sub_250F0D050();
  return v2;
}

uint64_t getEnumTagSinglePayload for BalanceWidgetTimelineControllerProvider(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BalanceWidgetTimelineControllerProvider(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x250EFE61CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BalanceWidgetTimelineControllerProvider()
{
  return &type metadata for BalanceWidgetTimelineControllerProvider;
}

id sub_250EFE654(uint64_t a1)
{
  int v2 = v1;
  v18[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_250F0D230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  BOOL v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8C788(0);
  MEMORY[0x270FA5388](v8 - 8);
  id v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E9FBA8(a1, (uint64_t)v10);
  uint64_t v11 = sub_250F0C060();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) != 1)
  {
    uint64_t v13 = (void *)sub_250F0BFC0();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F42F70], v4);
  sub_250F0D220();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v14 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  v18[0] = 0;
  unsigned __int8 v15 = objc_msgSend(v2, sel_setDate_forKey_error_, v13, v14, v18);

  id result = v18[0];
  if ((v15 & 1) == 0)
  {
    unint64_t v17 = result;
    sub_250F0BFA0();

    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_250EFE8D8(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t sub_250EFE900(uint64_t (*a1)(void))
{
  return a1();
}

id sub_250EFE928()
{
  v29[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_250F0CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)(v0 + 48);
  v29[0] = 0;
  id v6 = objc_msgSend(v5, sel_featureStatusWithError_, v29);
  if (v6)
  {
    BOOL v7 = v6;
    uint64_t v8 = *MEMORY[0x263F09608];
    id v9 = v29[0];
    id v10 = objc_msgSend(v7, sel_objectForKeyedSubscript_, v8);

    id v11 = objc_msgSend(v10, sel_areAllRequirementsSatisfied);
  }
  else
  {
    id v12 = v29[0];
    uint64_t v13 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250F0CC90();
    id v14 = v13;
    id v15 = v13;
    uint64_t v16 = sub_250F0CCA0();
    os_log_type_t v17 = sub_250F0D1B0();
    if (os_log_type_enabled(v16, v17))
    {
      uint64_t v18 = swift_slowAlloc();
      uint64_t v26 = (void *)swift_slowAlloc();
      uint64_t v27 = (void *)swift_slowAlloc();
      v29[0] = v27;
      *(_DWORD *)uint64_t v18 = 136446466;
      uint64_t v19 = sub_250F0D7B0();
      uint64_t v28 = sub_250E8BE44(v19, v20, (uint64_t *)v29);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v18 + 12) = 2114;
      id v21 = v13;
      uint64_t v22 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v28 = v22;
      sub_250F0D300();
      id v23 = v26;
      void *v26 = v22;

      _os_log_impl(&dword_250E86000, v16, v17, "[%{public}s] Error reading feature status: %{public}@", (uint8_t *)v18, 0x16u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v23, -1, -1);
      uint64_t v24 = v27;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v24, -1, -1);
      MEMORY[0x25338EC30](v18, -1, -1);
    }
    else
    {
    }
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    return 0;
  }
  return v11;
}

uint64_t sub_250EFECB8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v25 = a1;
  uint64_t v1 = sub_250F0C120();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v26[-1] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_250F0C1B0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)&v26[-1] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_250F0C060();
  uint64_t v10 = *(void *)(v9 - 8);
  MEMORY[0x270FA5388](v9);
  id v12 = (char *)&v26[-1] - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C040();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, *MEMORY[0x263F07740], v1);
  sub_250F0C130();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  sub_250EA9014(v12, (uint64_t)v26);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  uint64_t v13 = __swift_project_boxed_opaque_existential_1(v26, v26[3]);
  MEMORY[0x270FA5388](v13);
  (*(void (**)(char *))(v15 + 16))((char *)&v26[-1] - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v16 = sub_250F0D000();
  uint64_t v17 = *(void *)(v16 + 16);
  sub_250E937E0();
  uint64_t v19 = v18;
  uint64_t v20 = *(void *)(v18 - 8);
  if (v17)
  {
    uint64_t v21 = v25;
    sub_250F06EDC(v16+ ((*(unsigned __int8 *)(*(void *)(v18 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v18 - 8) + 80)), v25, (uint64_t (*)(void))sub_250E937E0);
    uint64_t v22 = 0;
    uint64_t v23 = v21;
  }
  else
  {
    uint64_t v22 = 1;
    uint64_t v23 = v25;
  }
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56))(v23, v22, 1, v19);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_250EFF058@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v86 = a1;
  uint64_t v74 = a2;
  uint64_t v78 = sub_250F0C810();
  uint64_t v73 = *(void *)(v78 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v78 - 8);
  uint64_t v75 = (char *)&v72 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  id v77 = (char *)&v72 - v4;
  sub_250F06E5C(0, &qword_26B20E530, MEMORY[0x263F42D70], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v5 - 8);
  uint64_t v79 = (uint64_t)&v72 - v6;
  uint64_t v7 = sub_250F0C5A0();
  uint64_t v81 = *(void *)(v7 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v85 = (char *)&v72 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  id v80 = (char *)&v72 - v11;
  uint64_t v12 = MEMORY[0x270FA5388](v10);
  id v84 = (char *)&v72 - v13;
  MEMORY[0x270FA5388](v12);
  double v76 = (char *)&v72 - v14;
  sub_250E937E0();
  uint64_t v83 = v15;
  uint64_t v72 = *((void *)v15 - 1);
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  uint64_t v18 = (char *)&v72 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v87 = (uint64_t)&v72 - v19;
  uint64_t v20 = sub_250F0C120();
  uint64_t v21 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  uint64_t v23 = (char *)&v72 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v82 = sub_250F0C1B0();
  uint64_t v24 = *(void *)(v82 - 8);
  MEMORY[0x270FA5388](v82);
  uint64_t v26 = (char *)&v72 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_250F0C060();
  uint64_t v28 = *(void *)(v27 - 8);
  MEMORY[0x270FA5388](v27);
  uint64_t v30 = (char *)&v72 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C040();
  (*(void (**)(char *, void, uint64_t))(v21 + 104))(v23, *MEMORY[0x263F07740], v20);
  sub_250F0C130();
  (*(void (**)(char *, uint64_t))(v21 + 8))(v23, v20);
  sub_250EA9014(v30, (uint64_t)v90);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v26, v82);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v30, v27);
  uint64_t v31 = __swift_project_boxed_opaque_existential_1(v90, v90[3]);
  MEMORY[0x270FA5388](v31);
  (*(void (**)(char *))(v33 + 16))((char *)&v72 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v34 = sub_250F0D000();
  uint64_t v35 = *(void *)(v34 + 16);
  if (v35)
  {
    uint64_t v36 = v34 + ((*(unsigned __int8 *)(v72 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v72 + 80));
    uint64_t v82 = *(void *)(v72 + 72);
    id v37 = (void (**)(uint64_t, char *, uint64_t))(v81 + 32);
    id v38 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v81 + 56);
    id v39 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v81 + 48);
    uint64_t v72 = v34;
    swift_bridgeObjectRetain();
    unint64_t v86 = MEMORY[0x263F8EE78];
    uint64_t v40 = v79;
    do
    {
      uint64_t v41 = v87;
      sub_250F06EDC(v36, v87, (uint64_t (*)(void))sub_250E937E0);
      sub_250F06EDC(v41, (uint64_t)v18, (uint64_t (*)(void))sub_250E937E0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        uint64_t v88 = *(void **)v18;
        uint64_t v42 = v88;
        char v89 = v18[8];
        sub_250E92500();
        swift_willThrowTypedImpl();

        uint64_t v43 = 1;
      }
      else
      {
        (*v37)(v40, v18, v7);
        uint64_t v43 = 0;
      }
      (*v38)(v40, v43, 1, v7);
      sub_250F07908(v87, (uint64_t (*)(void))sub_250E937E0);
      if ((*v39)(v40, 1, v7) == 1)
      {
        sub_250F06F44(v40, &qword_26B20E530, MEMORY[0x263F42D70]);
      }
      else
      {
        id v44 = *v37;
        id v45 = v76;
        (*v37)((uint64_t)v76, (char *)v40, v7);
        v44((uint64_t)v84, v45, v7);
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v46 = v86;
        }
        else {
          unint64_t v46 = sub_250EA1E8C(0, *(void *)(v86 + 16) + 1, 1, v86);
        }
        unint64_t v48 = *(void *)(v46 + 16);
        unint64_t v47 = *(void *)(v46 + 24);
        if (v48 >= v47 >> 1) {
          unint64_t v46 = sub_250EA1E8C(v47 > 1, v48 + 1, 1, v46);
        }
        *(void *)(v46 + 16) = v48 + 1;
        unint64_t v49 = (*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80);
        unint64_t v86 = v46;
        v44(v46 + v49 + *(void *)(v81 + 72) * v48, v84, v7);
        uint64_t v40 = v79;
      }
      v36 += v82;
      --v35;
    }
    while (v35);
    swift_bridgeObjectRelease_n();
    unint64_t v50 = v86;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v50 = MEMORY[0x263F8EE78];
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v90);
  uint64_t v51 = *(void *)(v50 + 16);
  uint64_t v53 = v80;
  uint64_t v52 = v81;
  unint64_t v54 = v50;
  if (v51)
  {
    uint64_t v83 = *(void (**)(char *, unint64_t, uint64_t))(v81 + 16);
    unint64_t v55 = v50 + ((*(unsigned __int8 *)(v81 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v81 + 80));
    uint64_t v56 = v81 + 8;
    id v84 = (char *)(v81 + 16);
    uint64_t v79 = *(void *)(v81 + 72);
    id v57 = (void (**)(char *, uint64_t))(v73 + 8);
    unint64_t v86 = v54;
    swift_bridgeObjectRetain();
    uint64_t v82 = v56;
    id v58 = v83;
    while (1)
    {
      uint64_t v87 = v51;
      v58(v53, v55, v7);
      uint64_t v59 = v77;
      sub_250F0C490();
      char v60 = sub_250F0C730();
      id v61 = *v57;
      uint64_t v62 = v78;
      (*v57)(v59, v78);
      id v63 = v85;
      v58(v85, (unint64_t)v53, v7);
      if (v60)
      {
        uint64_t v64 = v75;
        sub_250F0C490();
        char v65 = sub_250F0C760();
        id v66 = v64;
        id v63 = v85;
        v61(v66, v62);
        char v67 = v65 ^ 1;
      }
      else
      {
        char v67 = 0;
      }
      os_log_type_t v68 = *(void (**)(char *, uint64_t))v82;
      (*(void (**)(char *, uint64_t))v82)(v63, v7);
      if (v67) {
        break;
      }
      uint64_t v53 = v80;
      v68(v80, v7);
      v55 += v79;
      uint64_t v51 = v87 - 1;
      if (v87 == 1)
      {
        swift_bridgeObjectRelease();
        uint64_t v69 = 1;
        uint64_t v70 = v74;
        uint64_t v52 = v81;
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v52 = v81;
    uint64_t v70 = v74;
    (*(void (**)(uint64_t, char *, uint64_t))(v81 + 32))(v74, v80, v7);
    uint64_t v69 = 0;
  }
  else
  {
    uint64_t v69 = 1;
    uint64_t v70 = v74;
  }
LABEL_27:
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v52 + 56))(v70, v69, 1, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_250EFFA5C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v21 = a1;
  void v20[2] = *v1;
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v20[3] = *(void *)(v2 - 8);
  v20[4] = v2;
  MEMORY[0x270FA5388](v2);
  uint64_t v3 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v4 = *(void *)(v3 - 8);
  MEMORY[0x270FA5388](v3);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v8 = MEMORY[0x270FA5388](v7 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  uint64_t v12 = (char *)v20 - v11;
  uint64_t v13 = v1[10];
  uint64_t v22 = v1[2];
  uint64_t v14 = v13 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v13 + 16);
  uint64_t v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_250F06EC0(v14, (uint64_t)v12);
  os_unfair_lock_unlock(v15);
  sub_250E8C534((uint64_t)v12, (uint64_t)v10, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
  uint64_t v16 = v4;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v10, 1, v3) == 1)
  {
    sub_250F06F44((uint64_t)v12, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    sub_250F06F44((uint64_t)v10, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
  }
  else
  {
    sub_250F0703C((uint64_t)v10, (uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
    sub_250F0CE70();
    sub_250EA7114((unint64_t *)&unk_26B20EE00);
    sub_250F0D330();
    uint64_t v17 = v23;
    sub_250F06F44((uint64_t)v12, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    if (!v17)
    {
      sub_250F0703C((uint64_t)v6, v21, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      uint64_t v18 = 0;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, v18, 1, v3);
    }
    sub_250F07908((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
  }
  uint64_t v18 = 1;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v16 + 56))(v21, v18, 1, v3);
}

uint64_t sub_250F00074@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v6 = v5;
  uint64_t v7 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v9 = (char *)&v14 - v8;
  uint64_t v10 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
  MEMORY[0x270FA5388](v10 - 8);
  uint64_t v12 = (char *)&v14 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F06EDC(a1, (uint64_t)v12, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v12, 1, v6) == 1)
  {
    uint64_t result = sub_250F00298((uint64_t)v9);
    if (v2) {
      return result;
    }
    sub_250F07908(a1, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
    sub_250E8C534((uint64_t)v9, a1, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  else
  {
    uint64_t v9 = v12;
  }
  return sub_250F070A4((uint64_t)v9, a2, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
}

uint64_t sub_250F00298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v62 = a1;
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250F06E5C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v2 - 8);
  id v61 = (char *)v50 - v3;
  uint64_t v4 = sub_250F0C060();
  uint64_t v58 = *(void *)(v4 - 8);
  uint64_t v59 = v4;
  MEMORY[0x270FA5388](v4);
  id v57 = (char *)v50 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_250F0D230();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = MEMORY[0x270FA5388](v6);
  uint64_t v56 = (char *)v50 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = MEMORY[0x270FA5388](v8);
  char v60 = (char *)v50 - v11;
  MEMORY[0x270FA5388](v10);
  uint64_t v13 = (char *)v50 - v12;
  sub_250F06E5C(0, &qword_26B20EE20, MEMORY[0x263F090E8], v1);
  MEMORY[0x270FA5388](v14 - 8);
  id v63 = (char *)v50 - v15;
  uint64_t v16 = sub_250F0CE70();
  uint64_t v64 = *(void *)(v16 - 8);
  uint64_t v65 = v16;
  MEMORY[0x270FA5388](v16);
  uint64_t v18 = (char *)v50 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = v7 + 104;
  uint64_t v20 = *(void (**)(char *, void, uint64_t))(v7 + 104);
  v20(v13, *MEMORY[0x263F42F88], v6);
  sub_250F0D220();
  uint64_t v23 = *(void (**)(char *, uint64_t))(v7 + 8);
  uint64_t v21 = v7 + 8;
  uint64_t v22 = v23;
  v23(v13, v6);
  uint64_t v24 = v66;
  uint64_t v25 = sub_250F0D200();
  uint64_t v66 = v24;
  if (v24) {
    return swift_bridgeObjectRelease();
  }
  uint64_t v27 = (void *)v25;
  uint64_t v28 = v63;
  v50[1] = v19;
  uint64_t v51 = v22;
  uint64_t v52 = v20;
  uint64_t v53 = v6;
  uint64_t v54 = v21;
  unint64_t v55 = v18;
  swift_bridgeObjectRelease();
  if (!v27)
  {
    uint64_t v29 = (uint64_t)v28;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v64 + 56))(v28, 1, 1, v65);
    goto LABEL_8;
  }
  objc_msgSend(v27, sel_integerValue);
  uint64_t v29 = (uint64_t)v28;
  sub_250F0CE20();
  uint64_t v30 = v64;
  uint64_t v31 = v65;
  (*(void (**)(char *, void, uint64_t, uint64_t))(v64 + 56))(v28, 0, 1, v65);

  int v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v31);
  uint64_t v33 = v66;
  if (v32 == 1)
  {
LABEL_8:
    uint64_t v36 = &qword_26B20EE20;
    id v37 = (uint64_t (*)(uint64_t))MEMORY[0x263F090E8];
LABEL_9:
    sub_250F06F44(v29, v36, v37);
LABEL_10:
    uint64_t v38 = v62;
    uint64_t v39 = type metadata accessor for ImbalanceNotificationAnalysisState();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v39 - 8) + 56))(v38, 1, 1, v39);
  }
  id v63 = *(char **)(v30 + 32);
  ((void (*)(char *, uint64_t, uint64_t))v63)(v55, v29, v31);
  uint64_t v34 = v60;
  uint64_t v35 = v53;
  v52(v60, *MEMORY[0x263F42F80], v53);
  sub_250F0D220();
  v51(v34, v35);
  uint64_t v29 = (uint64_t)v61;
  sub_250F0D1F0();
  if (v33)
  {
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v30 + 8))(v55, v31);
  }
  uint64_t v66 = v30 + 32;
  swift_bridgeObjectRelease();
  uint64_t v41 = v58;
  uint64_t v40 = v59;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v29, 1, v59) == 1)
  {
    (*(void (**)(char *, uint64_t))(v64 + 8))(v55, v65);
    uint64_t v36 = (unint64_t *)&unk_26B20DEB0;
    id v37 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
    goto LABEL_9;
  }
  uint64_t v42 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 32);
  v42(v57, v29, v40);
  uint64_t v43 = v56;
  uint64_t v44 = v53;
  v52(v56, *MEMORY[0x263F42F90], v53);
  sub_250F0D220();
  v51(v43, v44);
  id v45 = (void *)sub_250F0D200();
  swift_bridgeObjectRelease();
  unint64_t v46 = v55;
  if (!v45)
  {
    (*(void (**)(char *, uint64_t))(v58 + 8))(v57, v59);
    (*(void (**)(char *, uint64_t))(v64 + 8))(v46, v65);
    goto LABEL_10;
  }
  id v47 = objc_msgSend(v45, sel_integerValue);

  uint64_t v48 = v62;
  ((void (*)(uint64_t, char *, uint64_t))v63)(v62, v46, v65);
  uint64_t v49 = type metadata accessor for ImbalanceNotificationAnalysisState();
  v42((char *)(v48 + *(int *)(v49 + 20)), (uint64_t)v57, v59);
  *(void *)(v48 + *(int *)(v49 + 24)) = v47;
  return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v49 - 8) + 56))(v48, 0, 1, v49);
}

uint64_t sub_250F009EC()
{
  v7[4] = *v0;
  uint64_t v1 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v1);
  uint64_t v2 = sub_250F0D230();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, *MEMORY[0x263F42F78], v2);
  sub_250F0D220();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  sub_250F0D1F0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_250F00E0C(uint64_t a1)
{
  uint64_t v2 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v2);
  sub_250F01164(a1);
  return sub_250F06F44(a1, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
}

id sub_250F01164(uint64_t a1)
{
  uint64_t v2 = v1;
  v19[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v4 = sub_250F0D230();
  uint64_t v5 = *(void *)(v4 - 8);
  MEMORY[0x270FA5388](v4);
  uint64_t v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (uint64_t (*)(uint64_t))MEMORY[0x263F07490];
  sub_250F06E5C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v11 = (char *)v19 - v10;
  sub_250E8C534(a1, (uint64_t)v19 - v10, (unint64_t *)&unk_26B20DEB0, v8);
  uint64_t v12 = sub_250F0C060();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) != 1)
  {
    uint64_t v14 = (void *)sub_250F0BFC0();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
  }
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, *MEMORY[0x263F42F78], v4);
  sub_250F0D220();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  uint64_t v15 = (void *)sub_250F0CF50();
  swift_bridgeObjectRelease();
  v19[0] = 0;
  unsigned __int8 v16 = objc_msgSend(v2, sel_setDate_forKey_error_, v14, v15, v19);

  id result = v19[0];
  if ((v16 & 1) == 0)
  {
    uint64_t v18 = result;
    sub_250F0BFA0();

    return (id)swift_willThrow();
  }
  return result;
}

void sub_250F01424(uint64_t a1)
{
  uint64_t v3 = sub_250F0CCB0();
  MEMORY[0x270FA5388](v3);
  sub_250F017A0(a1);
  uint64_t v4 = *(void *)(v1 + 80);
  uint64_t v5 = v4 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v4 + 16);
  uint64_t v6 = (os_unfair_lock_s *)(v4 + ((*(unsigned int *)(*(void *)v4 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v6);
  sub_250F01BC0(v5);
  os_unfair_lock_unlock(v6);
}

id sub_250F017A0(uint64_t a1)
{
  uint64_t v44 = a1;
  uint64_t v47 = *MEMORY[0x263EF8340];
  uint64_t v1 = sub_250F0D230();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = MEMORY[0x270FA5388](v1);
  uint64_t v40 = (char *)v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = MEMORY[0x270FA5388](v3);
  uint64_t v39 = (char *)v37 - v6;
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v37 - v7;
  sub_250F06E5C(0, &qword_269B10BB0, (uint64_t (*)(uint64_t))sub_250EAAB44, MEMORY[0x263F8E0F8]);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_250F0ECE0;
  uint64_t v38 = inited + 32;
  v37[0] = (uint64_t *)(inited + 72);
  uint64_t v10 = *(void (**)(char *, void, uint64_t))(v2 + 104);
  v10(v8, *MEMORY[0x263F42F80], v1);
  uint64_t v11 = v10;
  uint64_t v12 = (void *)sub_250F0D220();
  uint64_t v14 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v2 + 8);
  v37[1] = (uint64_t *)(v2 + 8);
  uint64_t v43 = v15;
  v15(v8, v1);
  id v45 = v12;
  uint64_t v46 = v14;
  sub_250F0D420();
  uint64_t v38 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v16 = v44 + *(int *)(v38 + 20);
  uint64_t v17 = sub_250F0C060();
  *(void *)(inited + 96) = v17;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v37[0]);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(boxed_opaque_existential_1, v16, v17);
  uint64_t v19 = v39;
  uint64_t v20 = v11;
  v11(v39, *MEMORY[0x263F42F88], v1);
  uint64_t v21 = v19;
  uint64_t v22 = (void *)sub_250F0D220();
  uint64_t v24 = v23;
  v43(v21, v1);
  id v45 = v22;
  uint64_t v46 = v24;
  sub_250F0D420();
  uint64_t v25 = v44;
  uint64_t v26 = sub_250F0CE30();
  *(void *)(inited + 168) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 144) = v26;
  uint64_t v39 = (char *)(inited + 176);
  uint64_t v27 = v40;
  v20(v40, *MEMORY[0x263F42F90], v1);
  uint64_t v28 = v27;
  uint64_t v29 = (void *)sub_250F0D220();
  uint64_t v31 = v30;
  v43(v28, v1);
  id v45 = v29;
  uint64_t v46 = v31;
  sub_250F0D420();
  uint64_t v32 = *(void *)(v25 + *(int *)(v38 + 24));
  *(void *)(inited + 240) = MEMORY[0x263F8D6C8];
  *(void *)(inited + 216) = v32;
  sub_250EFBC94(inited);
  uint64_t v33 = (void *)sub_250F0CE80();
  swift_bridgeObjectRelease();
  id v45 = 0;
  LOBYTE(v20) = objc_msgSend(v41, sel_setValuesWithDictionary_error_, v33, &v45);

  id result = v45;
  if ((v20 & 1) == 0)
  {
    uint64_t v35 = result;
    uint64_t v36 = sub_250F0BFA0();

    uint64_t v42 = v36;
    return (id)swift_willThrow();
  }
  return result;
}

uint64_t sub_250F01BC0(uint64_t a1)
{
  sub_250F07908(a1, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

void sub_250F01C70(void *a1, uint64_t a2, void (*a3)(void))
{
  v10[1] = *(id *)MEMORY[0x263EF8340];
  a3();
  sub_250E8D194(0, &qword_269B110E8);
  uint64_t v4 = (void *)sub_250F0D030();
  v10[0] = 0;
  unsigned int v5 = objc_msgSend(a1, sel_removeEvents_error_, v4, v10);

  id v6 = v10[0];
  if (v5)
  {
    id v7 = v6;
  }
  else
  {
    id v8 = v10[0];
    uint64_t v9 = (void *)sub_250F0BFA0();

    swift_willThrow();
  }
}

void sub_250F01D98()
{
  v30[1] = *(id *)MEMORY[0x263EF8340];
  uint64_t v1 = sub_250F0CCB0();
  uint64_t v2 = *(void *)(v1 - 8);
  MEMORY[0x270FA5388](v1);
  uint64_t v4 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  unsigned int v5 = *(void **)(v0 + 24);
  sub_250EB26D4();
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_250F0F070;
  id v7 = (void *)sub_250F0CF50();
  id v8 = (void *)sub_250F0BFC0();
  id v9 = objc_msgSend(v5, sel_eventWithIdentifier_dueDate_eventOptions_, v7, v8, 0);

  *(void *)(v6 + 32) = v9;
  v30[0] = (id)v6;
  sub_250F0D050();
  sub_250E8D194(0, &qword_269B110E8);
  uint64_t v10 = (void *)sub_250F0D030();
  swift_bridgeObjectRelease();
  v30[0] = 0;
  id v11 = objc_msgSend(v5, sel_replaceAllScheduledEventsWithEvents_error_, v10, v30);

  if (v11)
  {
    id v12 = v30[0];
  }
  else
  {
    id v13 = v30[0];
    uint64_t v14 = (void *)sub_250F0BFA0();

    swift_willThrow();
    sub_250F0CC90();
    id v15 = v14;
    id v16 = v14;
    uint64_t v17 = sub_250F0CCA0();
    os_log_type_t v18 = sub_250F0D1B0();
    if (os_log_type_enabled(v17, v18))
    {
      uint64_t v19 = swift_slowAlloc();
      uint64_t v20 = swift_slowAlloc();
      uint64_t v28 = v2;
      uint64_t v21 = (void *)v20;
      uint64_t v27 = (void *)swift_slowAlloc();
      v30[0] = v27;
      *(_DWORD *)uint64_t v19 = 136446466;
      uint64_t v22 = sub_250F0D7B0();
      uint64_t v29 = sub_250E8BE44(v22, v23, (uint64_t *)v30);
      sub_250F0D300();
      swift_bridgeObjectRelease();
      *(_WORD *)(v19 + 12) = 2114;
      id v24 = v14;
      uint64_t v25 = _swift_stdlib_bridgeErrorToNSError();
      uint64_t v29 = v25;
      sub_250F0D300();
      *uint64_t v21 = v25;

      _os_log_impl(&dword_250E86000, v17, v18, "[%{public}s] Error scheduling event %{public}@", (uint8_t *)v19, 0x16u);
      sub_250E978C0();
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v21, -1, -1);
      uint64_t v26 = v27;
      swift_arrayDestroy();
      MEMORY[0x25338EC30](v26, -1, -1);
      MEMORY[0x25338EC30](v19, -1, -1);

      (*(void (**)(char *, uint64_t))(v28 + 8))(v4, v1);
    }
    else
    {

      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    }
  }
}

uint64_t sub_250F021C4(uint64_t a1)
{
  uint64_t v19 = a1;
  sub_250F06E5C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v1 - 8);
  uint64_t v3 = (char *)&v17 - v2;
  uint64_t v17 = sub_250F0C8B0();
  uint64_t v4 = *(void *)(v17 - 8);
  MEMORY[0x270FA5388](v17);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_250F0CE70();
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v8 = sub_250F0C0C0();
  uint64_t v9 = *(void *)(v8 - 8);
  MEMORY[0x270FA5388](v8);
  id v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_250F0C8D0();
  uint64_t v18 = *(void *)(v20 - 8);
  MEMORY[0x270FA5388](v20);
  id v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C0B0();
  sub_250F0C070();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  sub_250F0C4B0();
  sub_250F0CA50();
  (*(void (**)(char *, void, uint64_t))(v4 + 104))(v6, *MEMORY[0x263F42E80], v17);
  uint64_t v14 = v21;
  sub_250F0C850();
  if (*(void *)(v14 + 64)) {
    sub_250EA9524(v13);
  }
  sub_250F0C040();
  uint64_t v15 = sub_250F0C060();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v3, 0, 1, v15);
  sub_250EFE654((uint64_t)v3);
  sub_250F06F44((uint64_t)v3, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v13, v20);
}

uint64_t sub_250F02564(uint64_t a1)
{
  v13[1] = a1;
  uint64_t v14 = sub_250F0C8B0();
  uint64_t v1 = *(void *)(v14 - 8);
  MEMORY[0x270FA5388](v14);
  uint64_t v3 = (char *)v13 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_250F0CE70();
  MEMORY[0x270FA5388](v4 - 8);
  uint64_t v5 = sub_250F0C0C0();
  uint64_t v6 = *(void *)(v5 - 8);
  MEMORY[0x270FA5388](v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13[0] = sub_250F0C8D0();
  uint64_t v9 = *(void *)(v13[0] - 8);
  MEMORY[0x270FA5388](v13[0]);
  id v11 = (char *)v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0C0B0();
  sub_250F0C070();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_250F0C4B0();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *MEMORY[0x263F42E78], v14);
  sub_250F0C850();
  if (*(void *)(v15 + 64)) {
    sub_250EA9524(v11);
  }
  return (*(uint64_t (**)(char *, void))(v9 + 8))(v11, v13[0]);
}

uint64_t sub_250F027FC()
{
  uint64_t v1 = sub_250F0C830();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t result = MEMORY[0x270FA5388](v1);
  uint64_t v5 = (char *)aBlock - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(void *)(v0 + 64);
  if (v6)
  {
    (*(void (**)(char *, void, uint64_t))(v2 + 104))(v5, *MEMORY[0x263F42E68], v1);
    uint64_t v7 = *(void **)(v6 + OBJC_IVAR____TtC19HealthBalanceDaemon36ImbalanceUserNotificationCoordinator_notificationManager);
    sub_250F0C820();
    uint64_t v8 = (void *)sub_250F0CF50();
    swift_bridgeObjectRelease();
    aBlock[4] = nullsub_1;
    aBlock[5] = 0;
    aBlock[0] = MEMORY[0x263EF8330];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_250EE29A8;
    uint64_t aBlock[3] = &block_descriptor_11;
    uint64_t v9 = _Block_copy(aBlock);
    swift_release();
    objc_msgSend(v7, sel_removeDeliveredNotificationsWithCategoryIdentifier_completionHandler_, v8, v9);
    _Block_release(v9);

    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v5, v1);
  }
  return result;
}

uint64_t sub_250F029AC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *a1;
  if (v6) {
    sub_250EAB9CC(v6);
  }
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a2;
  *(void *)(v7 + 24) = a3;
  *a1 = (uint64_t)sub_250F07C0C;
  a1[1] = v7;
  return swift_retain();
}

uint64_t sub_250F02A28(void (**a1)(char *, uint64_t, uint64_t))
{
  id v129 = a1;
  uint64_t v108 = *v1;
  uint64_t v133 = sub_250F0CCB0();
  uint64_t v132 = *(void *)(v133 - 8);
  uint64_t v2 = MEMORY[0x270FA5388](v133);
  uint64_t v135 = (char *)&v108 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v2);
  uint64_t v109 = (char *)&v108 - v4;
  uint64_t v128 = type metadata accessor for SleepingSampleCacheRange();
  MEMORY[0x270FA5388](v128);
  uint64_t v134 = (char *)&v108 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x263F8D8F0];
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  MEMORY[0x270FA5388](v7 - 8);
  uint64_t v127 = (uint64_t)&v108 - v8;
  sub_250F06E5C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490], v6);
  uint64_t v10 = MEMORY[0x270FA5388](v9 - 8);
  uint64_t v144 = (uint64_t)&v108 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  uint64_t v147 = (uint64_t)&v108 - v12;
  uint64_t v124 = (void (*)(char *, uint64_t))sub_250F0C340();
  uint64_t v123 = (uint64_t (*)(char *, uint64_t))*((void *)v124 - 1);
  MEMORY[0x270FA5388](v124);
  unint64_t v121 = (char *)&v108 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v126 = sub_250F0BF30();
  uint64_t v125 = *(void *)(v126 - 8);
  MEMORY[0x270FA5388](v126);
  uint64_t v122 = (char *)&v108 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250E8E700();
  uint64_t v118 = v15;
  uint64_t v16 = MEMORY[0x270FA5388](v15);
  id v119 = (char *)&v108 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v16);
  uint64_t v115 = (char *)&v108 - v18;
  sub_250E9374C();
  uint64_t v117 = v19;
  uint64_t v20 = MEMORY[0x270FA5388](v19);
  unint64_t v116 = (char *)&v108 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v20);
  uint64_t v120 = (uint64_t)&v108 - v22;
  uint64_t v131 = sub_250F0C640();
  uint64_t v130 = *(void *)(v131 - 8);
  MEMORY[0x270FA5388](v131);
  uint64_t v140 = (char *)&v108 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_250F0C060();
  uint64_t v136 = *(void *)(v24 - 8);
  uint64_t v137 = v24;
  uint64_t v25 = MEMORY[0x270FA5388](v24);
  uint64_t v143 = (char *)&v108 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = MEMORY[0x270FA5388](v25);
  uint64_t v141 = (char *)&v108 - v28;
  MEMORY[0x270FA5388](v27);
  uint64_t v29 = sub_250F0CE70();
  uint64_t v138 = *(void *)(v29 - 8);
  uint64_t v30 = MEMORY[0x270FA5388](v29);
  uint64_t v114 = (char *)&v108 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v30);
  uint64_t v33 = (char *)&v108 - v32;
  uint64_t v34 = sub_250F0C120();
  uint64_t v35 = *(void *)(v34 - 8);
  MEMORY[0x270FA5388](v34);
  id v37 = (char *)&v108 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v38 = sub_250F0C1B0();
  uint64_t v39 = *(void *)(v38 - 8);
  uint64_t v40 = MEMORY[0x270FA5388](v38);
  uint64_t v42 = (char *)&v108 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v40);
  uint64_t v44 = (char *)&v108 - v43;
  (*(void (**)(char *, void, uint64_t))(v35 + 104))(v37, *MEMORY[0x263F07740], v34);
  sub_250F0C130();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v37, v34);
  sub_250F0C040();
  uint64_t v148 = v39;
  uint64_t v47 = *(void (**)(char *, char *, uint64_t))(v39 + 16);
  uint64_t v46 = v39 + 16;
  id v45 = v47;
  BOOL v145 = v44;
  uint64_t v146 = v38;
  v47(v42, v44, v38);
  unint64_t v113 = v42;
  sub_250F0CE10();
  sub_250EA7114(&qword_26B20E340);
  uint64_t result = sub_250F0CF00();
  if (result)
  {
    uint64_t v49 = v118;
    uint64_t v50 = *(int *)(v118 + 48);
    uint64_t v51 = v115;
    uint64_t v112 = v46;
    uint64_t v111 = v45;
    uint64_t v52 = &v115[v50];
    uint64_t v53 = v138;
    uint64_t v54 = *(void (**)(char *, char *, uint64_t))(v138 + 16);
    id v142 = v33;
    v54(v115, v33, v29);
    uint64_t v110 = v52;
    v54(v52, v33, v29);
    unint64_t v55 = v119;
    uint64_t v56 = &v119[*(int *)(v49 + 48)];
    v54(v119, v51, v29);
    v54(v56, v52, v29);
    id v57 = *(void (**)(char *, char *, uint64_t))(v53 + 32);
    uint64_t v58 = (uint64_t)v116;
    v57(v116, v55, v29);
    uint64_t v59 = v29;
    uint64_t v60 = v53 + 8;
    id v61 = *(void (**)(char *, uint64_t))(v53 + 8);
    v61(v56, v59);
    uint64_t v62 = &v55[*(int *)(v49 + 48)];
    v57(v55, v51, v59);
    v57(v62, v110, v59);
    v57((char *)(v58 + *(int *)(v117 + 36)), v62, v59);
    uint64_t v63 = v59;
    v61(v55, v59);
    uint64_t v64 = v60;
    sub_250F0703C(v58, v120, (uint64_t (*)(void))sub_250E9374C);
    uint64_t v65 = v113;
    uint64_t v66 = v146;
    v111(v113, v145, v146);
    sub_250F0C600();
    char v67 = v140;
    sub_250F0C5B0();
    os_log_type_t v68 = v114;
    sub_250F0C620();
    uint64_t v69 = v121;
    sub_250F0C5D0();
    sub_250F0C330();
    (*((void (**)(char *, void *))v123 + 1))(v69, v124);
    uint64_t v70 = v122;
    sub_250F0CD90();
    double v71 = *(uint64_t (**)(char *, uint64_t))(v148 + 8);
    v148 += 8;
    uint64_t v123 = v71;
    v71(v65, v66);
    uint64_t v124 = v61;
    v61(v68, v63);
    uint64_t v72 = v141;
    sub_250F0BF00();
    (*(void (**)(char *, uint64_t))(v125 + 8))(v70, v126);
    uint64_t v73 = v127;
    sub_250EFFA5C(v127);
    uint64_t v74 = type metadata accessor for ImbalanceNotificationAnalysisState();
    int v75 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 48))(v73, 1, v74);
    uint64_t v126 = v63;
    uint64_t v76 = v64;
    if (v75 == 1)
    {
      sub_250F06F44(v73, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      uint64_t v77 = v136;
      uint64_t v78 = v137;
      uint64_t v79 = v147;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v136 + 56))(v147, 1, 1, v137);
      id v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v77 + 16);
    }
    else
    {
      uint64_t v81 = v73 + *(int *)(v74 + 20);
      uint64_t v77 = v136;
      uint64_t v78 = v137;
      id v80 = *(void (**)(uint64_t, uint64_t, uint64_t))(v136 + 16);
      uint64_t v82 = v147;
      v80(v147, v81, v137);
      uint64_t v83 = v73;
      uint64_t v79 = v82;
      sub_250F07908(v83, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v77 + 56))(v82, 0, 1, v78);
    }
    id v84 = v135;
    v80((uint64_t)v143, (uint64_t)v72, v78);
    sub_250E8C534(v79, v144, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    sub_250E8D194(0, (unint64_t *)&qword_26B20EEE0);
    uint64_t v85 = (void *)MEMORY[0x25338DDE0]((id)*MEMORY[0x263F09BE0]);
    id v86 = (id)HKRollingBaselineConfigurationForQuantityType();

    uint64_t v87 = (uint64_t)v134;
    if (v86)
    {
      objc_msgSend(v86, sel_maximumWindowDuration, v108);
      uint64_t v89 = v88;
    }
    else
    {
      uint64_t v89 = 0;
    }
    (*(void (**)(uint64_t, char *, uint64_t))(v77 + 32))(v87, v143, v78);
    uint64_t v90 = v128;
    sub_250F070A4(v144, v87 + *(int *)(v128 + 20), (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
    *(void *)(v87 + *(int *)(v90 + 24)) = v89;
    if (sub_250E98578(v129))
    {
      id v91 = v109;
      sub_250F0CC90();
      uint64_t v92 = sub_250F0CCA0();
      os_log_type_t v93 = sub_250F0D1D0();
      if (os_log_type_enabled(v92, v93))
      {
        uint64_t v94 = (uint8_t *)swift_slowAlloc();
        uint64_t v95 = (uint64_t (*)())swift_slowAlloc();
        uint64_t v149 = v95;
        *(_DWORD *)uint64_t v94 = 136446210;
        uint64_t v96 = sub_250F0D7B0();
        uint64_t v150 = sub_250E8BE44(v96, v97, (uint64_t *)&v149);
        char v67 = v140;
        uint64_t v78 = v137;
        sub_250F0D300();
        uint64_t v77 = v136;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v92, v93, "[%{public}s] Requesting analysis for relevant samples added", v94, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v95, -1, -1);
        MEMORY[0x25338EC30](v94, -1, -1);

        (*(void (**)(char *, uint64_t))(v132 + 8))(v109, v133);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v132 + 8))(v91, v133);
      }
      uint64_t v104 = *(os_unfair_lock_s **)(v139 + 72);
      uint64_t v105 = (uint64_t (**)())&v104[4];
      uint64_t v106 = v104 + 8;
      os_unfair_lock_lock(v104 + 8);
      sub_250F03CE0(v105, &v149);
      os_unfair_lock_unlock(v106);
      uint64_t v107 = v149;
      if (v149)
      {
        v149();
        sub_250EAB9CC((uint64_t)v107);
      }
      sub_250F07908(v87, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange);
      sub_250F06F44(v147, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      (*(void (**)(char *, uint64_t))(v77 + 8))(v141, v78);
      (*(void (**)(char *, uint64_t))(v130 + 8))(v67, v131);
      v124(v142, v126);
      return v123(v145, v146);
    }
    else
    {
      sub_250F0CC90();
      uint64_t v98 = sub_250F0CCA0();
      os_log_type_t v99 = sub_250F0D1A0();
      if (os_log_type_enabled(v98, v99))
      {
        uint64_t v100 = (uint8_t *)swift_slowAlloc();
        uint64_t v101 = (uint64_t (*)())swift_slowAlloc();
        uint64_t v149 = v101;
        uint64_t v138 = v76;
        *(_DWORD *)uint64_t v100 = 136446210;
        uint64_t v102 = sub_250F0D7B0();
        uint64_t v150 = sub_250E8BE44(v102, v103, (uint64_t *)&v149);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v98, v99, "[%{public}s] Ignoring irrelevant samples added", v100, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v101, -1, -1);
        MEMORY[0x25338EC30](v100, -1, -1);

        (*(void (**)(char *, uint64_t))(v132 + 8))(v135, v133);
        sub_250F07908(v87, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange);
        sub_250F06F44(v147, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v141, v78);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v140, v131);
      }
      else
      {

        (*(void (**)(char *, uint64_t))(v132 + 8))(v84, v133);
        sub_250F07908(v87, (uint64_t (*)(void))type metadata accessor for SleepingSampleCacheRange);
        sub_250F06F44(v147, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
        (*(void (**)(char *, uint64_t))(v77 + 8))(v72, v78);
        (*(void (**)(char *, uint64_t))(v130 + 8))(v67, v131);
      }
      v124(v142, v126);
      return v123(v145, v146);
    }
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t (**sub_250F03CE0@<X0>(uint64_t (**result)()@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t v2 = result;
  uint64_t v5 = *result;
  uint64_t v4 = (uint64_t)result[1];
  if (*result)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_250F07BF0;
    *(void *)(v4 + 24) = v6;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_250F07BF0;
    *(void *)(v7 + 24) = v6;
    uint64_t result = (uint64_t (**)())swift_retain();
    uint64_t v8 = sub_250F07C0C;
    uint64_t v9 = sub_250F07C0C;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = (uint64_t)result[1];
  }
  *a2 = v9;
  a2[1] = (uint64_t (*)())v4;
  *uint64_t v2 = v8;
  v2[1] = (uint64_t (*)())v7;
  return result;
}

void sub_250F03DD0()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    uint64_t v18 = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = (uint64_t (*)())swift_slowAlloc();
    uint64_t v20 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    uint64_t v19 = sub_250E8BE44(v11, v12, (uint64_t *)&v20);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] Received notification of samples removed", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v18);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = *(os_unfair_lock_s **)(v1 + 72);
  uint64_t v14 = (uint64_t (**)())&v13[4];
  uint64_t v15 = v13 + 8;
  os_unfair_lock_lock(v13 + 8);
  sub_250F04038(v14, &v20);
  os_unfair_lock_unlock(v15);
  uint64_t v16 = v20;
  if (v20)
  {
    v20();
    sub_250EAB9CC((uint64_t)v16);
  }
}

uint64_t (**sub_250F04038@<X0>(uint64_t (**result)()@<X0>, uint64_t (**a2)()@<X8>))()
{
  uint64_t v2 = result;
  uint64_t v5 = *result;
  uint64_t v4 = (uint64_t)result[1];
  if (*result)
  {
    uint64_t v6 = swift_allocObject();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t v4 = swift_allocObject();
    *(void *)(v4 + 16) = sub_250F06FEC;
    *(void *)(v4 + 24) = v6;
    uint64_t v7 = swift_allocObject();
    *(void *)(v7 + 16) = sub_250F06FEC;
    *(void *)(v7 + 24) = v6;
    uint64_t result = (uint64_t (**)())swift_retain();
    uint64_t v8 = sub_250F07C0C;
    uint64_t v9 = sub_250F07014;
  }
  else
  {
    uint64_t v9 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = (uint64_t)result[1];
  }
  *a2 = v9;
  a2[1] = (uint64_t (*)())v4;
  *uint64_t v2 = v8;
  v2[1] = (uint64_t (*)())v7;
  return result;
}

uint64_t sub_250F04128(uint64_t a1)
{
  sub_250F07908(a1, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 56))(a1, 1, 1, v2);
  uint64_t result = type metadata accessor for ImbalanceNotificationAnalysisStateCache(0);
  uint64_t v4 = *(void (**)(uint64_t))(a1 + *(int *)(result + 20));
  if (v4)
  {
    uint64_t v5 = swift_retain();
    v4(v5);
    return sub_250EAB9CC((uint64_t)v4);
  }
  return result;
}

id *sub_250F04264()
{
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  swift_release();

  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_250F042BC()
{
  sub_250F04264();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ImbalanceNotificationManagerHealthDelegate()
{
  return self;
}

uint64_t *sub_250F04314(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      uint64_t v10 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
      memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
    }
    else
    {
      uint64_t v12 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
      {
        memcpy(a1, a2, *(void *)(v9 + 64));
      }
      else
      {
        uint64_t v14 = sub_250F0CE70();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v14 - 8) + 16))(a1, a2, v14);
        uint64_t v15 = *(int *)(v12 + 20);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_250F0C060();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        *(uint64_t *)((char *)a1 + *(int *)(v12 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 24));
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
    uint64_t v19 = *(int *)(a3 + 20);
    uint64_t v20 = (uint64_t *)((char *)a1 + v19);
    uint64_t v21 = (uint64_t *)((char *)a2 + v19);
    if (*v21)
    {
      uint64_t v22 = v21[1];
      void *v20 = *v21;
      v20[1] = v22;
      swift_retain();
    }
    else
    {
      *(_OWORD *)uint64_t v20 = *(_OWORD *)v21;
    }
  }
  return a1;
}

uint64_t type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B113A0);
}

uint64_t sub_250F04608(uint64_t a1, uint64_t a2)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
  if (!result)
  {
    uint64_t v6 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 48))(a1, 1, v6);
    if (!result)
    {
      uint64_t v7 = sub_250F0CE70();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8))(a1, v7);
      uint64_t v8 = a1 + *(int *)(v6 + 20);
      uint64_t v9 = sub_250F0C060();
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v8, v9);
    }
  }
  if (*(void *)(a1 + *(int *)(a2 + 20)))
  {
    return swift_release();
  }
  return result;
}

char *sub_250F04794(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      uint64_t v12 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(a1, a2, v12);
      uint64_t v13 = *(int *)(v10 + 20);
      uint64_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
      *(void *)&a1[*(int *)(v10 + 24)] = *(void *)&a2[*(int *)(v10 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  uint64_t v18 = &a1[v17];
  uint64_t v19 = &a2[v17];
  if (*(void *)v19)
  {
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    swift_retain();
  }
  else
  {
    *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
  }
  return a1;
}

char *sub_250F04A18(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          uint64_t v20 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          uint64_t v21 = *(int *)(v15 + 20);
          uint64_t v22 = &a1[v21];
          uint64_t v23 = &a2[v21];
          uint64_t v24 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v19)
        {
          uint64_t v38 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 24))(a1, a2, v38);
          uint64_t v39 = *(int *)(v15 + 20);
          uint64_t v40 = &a1[v39];
          uint64_t v41 = &a2[v39];
          uint64_t v42 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 24))(v40, v41, v42);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          goto LABEL_14;
        }
        sub_250F07908((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      }
      size_t v14 = *(void *)(v8 + 64);
LABEL_8:
      memcpy(a1, a2, v14);
      goto LABEL_14;
    }
    sub_250F06F44((uint64_t)a1, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0) - 8)
                    + 64);
    goto LABEL_8;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    uint64_t v25 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    uint64_t v26 = *(int *)(v12 + 20);
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
LABEL_14:
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)&a1[v30];
  uint64_t v34 = *(void *)v32;
  if (!v33)
  {
    if (v34)
    {
      uint64_t v36 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v36;
      swift_retain();
      return a1;
    }
LABEL_20:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    return a1;
  }
  if (!v34)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v35 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v35;
  swift_retain();
  swift_release();
  return a1;
}

char *sub_250F04F14(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    uint64_t v9 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
    memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
  }
  else
  {
    uint64_t v10 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t v11 = *(void *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      uint64_t v12 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = *(int *)(v10 + 20);
      size_t v14 = &a1[v13];
      uint64_t v15 = &a2[v13];
      uint64_t v16 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v16 - 8) + 32))(v14, v15, v16);
      *(void *)&a1[*(int *)(v10 + 24)] = *(void *)&a2[*(int *)(v10 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(a1, 0, 1, v10);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  uint64_t v17 = *(int *)(a3 + 20);
  int v18 = &a1[v17];
  int v19 = &a2[v17];
  uint64_t v20 = *(void *)v19;
  if (*(void *)v19)
  {
    uint64_t v21 = *((void *)v19 + 1);
    *(void *)int v18 = v20;
    *((void *)v18 + 1) = v21;
  }
  else
  {
    *(_OWORD *)int v18 = *(_OWORD *)v19;
  }
  return a1;
}

char *sub_250F05194(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          uint64_t v20 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          uint64_t v21 = *(int *)(v15 + 20);
          uint64_t v22 = &a1[v21];
          uint64_t v23 = &a2[v21];
          uint64_t v24 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          goto LABEL_14;
        }
      }
      else
      {
        if (!v19)
        {
          uint64_t v38 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v38 - 8) + 40))(a1, a2, v38);
          uint64_t v39 = *(int *)(v15 + 20);
          uint64_t v40 = &a1[v39];
          uint64_t v41 = &a2[v39];
          uint64_t v42 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v42 - 8) + 40))(v40, v41, v42);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          goto LABEL_14;
        }
        sub_250F07908((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      }
      size_t v14 = *(void *)(v8 + 64);
LABEL_8:
      memcpy(a1, a2, v14);
      goto LABEL_14;
    }
    sub_250F06F44((uint64_t)a1, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0) - 8)
                    + 64);
    goto LABEL_8;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    uint64_t v25 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
    uint64_t v26 = *(int *)(v12 + 20);
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
LABEL_14:
  uint64_t v30 = *(int *)(a3 + 20);
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  uint64_t v33 = *(void *)&a1[v30];
  uint64_t v34 = *(void *)v32;
  if (!v33)
  {
    if (v34)
    {
      uint64_t v36 = *((void *)v32 + 1);
      *(void *)uint64_t v31 = v34;
      *((void *)v31 + 1) = v36;
      return a1;
    }
LABEL_20:
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    return a1;
  }
  if (!v34)
  {
    swift_release();
    goto LABEL_20;
  }
  uint64_t v35 = *((void *)v32 + 1);
  *(void *)uint64_t v31 = v34;
  *((void *)v31 + 1) = v35;
  swift_release();
  return a1;
}

uint64_t sub_250F05684(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250F05698);
}

uint64_t sub_250F05698(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    int v11 = v10 - 1;
    if (v11 < 0) {
      int v11 = -1;
    }
    return (v11 + 1);
  }
}

uint64_t sub_250F05764(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250F05778);
}

uint64_t sub_250F05778(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = a2;
  }
  return result;
}

uint64_t type metadata accessor for ImbalanceNotificationAnalysisStateCache(uint64_t a1)
{
  return sub_250E8BDBC(a1, (uint64_t *)&unk_269B11390);
}

uint64_t sub_250F05854()
{
  uint64_t result = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_250F058E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
    uint64_t v8 = v7;
    uint64_t v9 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v9 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(void *)(v6 + 64));
    }
    else
    {
      uint64_t v11 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v12 = *(void *)(v11 - 8);
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v12 + 48))(a2, 1, v11))
      {
        memcpy(a1, a2, *(void *)(v9 + 64));
      }
      else
      {
        uint64_t v13 = sub_250F0CE70();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v13 - 8) + 16))(a1, a2, v13);
        uint64_t v14 = *(int *)(v11 + 20);
        uint64_t v15 = (char *)a1 + v14;
        uint64_t v16 = (char *)a2 + v14;
        uint64_t v17 = sub_250F0C060();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
        *(uint64_t *)((char *)a1 + *(int *)(v11 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 24));
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v11);
      }
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v8);
    }
  }
  return a1;
}

uint64_t sub_250F05B6C(uint64_t a1)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    uint64_t v4 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, 1, v4);
    if (!result)
    {
      uint64_t v5 = sub_250F0CE70();
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = a1 + *(int *)(v4 + 20);
      uint64_t v7 = sub_250F0C060();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v7 - 8) + 8);
      return v8(v6, v7);
    }
  }
  return result;
}

char *sub_250F05CD0(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      uint64_t v11 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
      uint64_t v12 = *(int *)(v9 + 20);
      uint64_t v13 = &a1[v12];
      uint64_t v14 = &a2[v12];
      uint64_t v15 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 16))(v13, v14, v15);
      *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_250F05F18(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          uint64_t v20 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
          uint64_t v21 = *(int *)(v15 + 20);
          uint64_t v22 = &a1[v21];
          uint64_t v23 = &a2[v21];
          uint64_t v24 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          uint64_t v31 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 24))(a1, a2, v31);
          uint64_t v32 = *(int *)(v15 + 20);
          uint64_t v33 = &a1[v32];
          uint64_t v34 = &a2[v32];
          uint64_t v35 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 24))(v33, v34, v35);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          return a1;
        }
        sub_250F07908((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      }
      size_t v14 = *(void *)(v8 + 64);
      goto LABEL_8;
    }
    sub_250F06F44((uint64_t)a1, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    uint64_t v25 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
    uint64_t v26 = *(int *)(v12 + 20);
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
    *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

char *sub_250F063A8(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  else
  {
    uint64_t v9 = type metadata accessor for ImbalanceNotificationAnalysisState();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(a2, 1, v9))
    {
      memcpy(a1, a2, *(void *)(v8 + 64));
    }
    else
    {
      uint64_t v11 = sub_250F0CE70();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = *(int *)(v9 + 20);
      uint64_t v13 = &a1[v12];
      size_t v14 = &a2[v12];
      uint64_t v15 = sub_250F0C060();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v15 - 8) + 32))(v13, v14, v15);
      *(void *)&a1[*(int *)(v9 + 24)] = *(void *)&a2[*(int *)(v9 + 24)];
      (*(void (**)(char *, void, uint64_t, uint64_t))(v10 + 56))(a1, 0, 1, v9);
    }
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  }
  return a1;
}

char *sub_250F065F0(char *a1, char *a2, uint64_t a3)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v6 - 8);
  uint64_t v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  int v10 = v9(a1, 1, v6);
  int v11 = v9(a2, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      uint64_t v15 = type metadata accessor for ImbalanceNotificationAnalysisState();
      uint64_t v16 = *(void *)(v15 - 8);
      uint64_t v17 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v16 + 48);
      int v18 = v17(a1, 1, v15);
      int v19 = v17(a2, 1, v15);
      if (v18)
      {
        if (!v19)
        {
          uint64_t v20 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v20 - 8) + 32))(a1, a2, v20);
          uint64_t v21 = *(int *)(v15 + 20);
          uint64_t v22 = &a1[v21];
          uint64_t v23 = &a2[v21];
          uint64_t v24 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          (*(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56))(a1, 0, 1, v15);
          return a1;
        }
      }
      else
      {
        if (!v19)
        {
          uint64_t v31 = sub_250F0CE70();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v31 - 8) + 40))(a1, a2, v31);
          uint64_t v32 = *(int *)(v15 + 20);
          uint64_t v33 = &a1[v32];
          uint64_t v34 = &a2[v32];
          uint64_t v35 = sub_250F0C060();
          (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 40))(v33, v34, v35);
          *(void *)&a1[*(int *)(v15 + 24)] = *(void *)&a2[*(int *)(v15 + 24)];
          return a1;
        }
        sub_250F07908((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      }
      size_t v14 = *(void *)(v8 + 64);
      goto LABEL_8;
    }
    sub_250F06F44((uint64_t)a1, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_7:
    size_t v14 = *(void *)(*(void *)(a3 - 8) + 64);
LABEL_8:
    memcpy(a1, a2, v14);
    return a1;
  }
  if (v11) {
    goto LABEL_7;
  }
  uint64_t v12 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
  {
    memcpy(a1, a2, *(void *)(v8 + 64));
  }
  else
  {
    uint64_t v25 = sub_250F0CE70();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v25 - 8) + 32))(a1, a2, v25);
    uint64_t v26 = *(int *)(v12 + 20);
    uint64_t v27 = &a1[v26];
    uint64_t v28 = &a2[v26];
    uint64_t v29 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 32))(v27, v28, v29);
    *(void *)&a1[*(int *)(v12 + 24)] = *(void *)&a2[*(int *)(v12 + 24)];
    (*(void (**)(char *, void, uint64_t, uint64_t))(v13 + 56))(a1, 0, 1, v12);
  }
  (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
  return a1;
}

uint64_t sub_250F06A80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250F06A94);
}

uint64_t sub_250F06A94(uint64_t a1, uint64_t a2)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  unsigned int v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2) {
    return v5 - 1;
  }
  else {
    return 0;
  }
}

uint64_t sub_250F06B30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250F06B44);
}

uint64_t sub_250F06B44(uint64_t a1, int a2, uint64_t a3)
{
  if (a2) {
    uint64_t v5 = (a2 + 1);
  }
  else {
    uint64_t v5 = 0;
  }
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
  return v7(a1, v5, a3, v6);
}

uint64_t sub_250F06BF4(uint64_t a1)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48);
  return v3(a1, 1, v2);
}

uint64_t sub_250F06C8C(uint64_t a1, uint64_t a2)
{
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);
  return v5(a1, a2, 1, v4);
}

void sub_250F06D2C()
{
  sub_250F06E5C(319, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  if (v0 <= 0x3F) {
    swift_initEnumMetadataSinglePayload();
  }
}

uint64_t sub_250F06DD8()
{
  return sub_250F0CBB0();
}

uint64_t sub_250F06E00@<X0>(uint64_t a1@<X8>)
{
  return sub_250EFECB8(a1);
}

uint64_t sub_250F06E18@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_250EFF058(a1, a2);
}

void sub_250F06E5C(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  if (!*a2)
  {
    uint64_t v7 = a3(255);
    unint64_t v8 = a4(a1, v7);
    if (!v9) {
      atomic_store(v8, a2);
    }
  }
}

uint64_t sub_250F06EC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_250F00074(a1, a2);
}

uint64_t sub_250F06EDC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_250F06F44(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  sub_250F06E5C(0, a2, a3, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

uint64_t sub_250F06FB4()
{
  swift_release();
  return MEMORY[0x270FA0238](v0, 32, 7);
}

uint64_t sub_250F06FEC()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_250F07014()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_250F0703C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250F070A4(uint64_t a1, uint64_t a2, unint64_t *a3, uint64_t (*a4)(uint64_t))
{
  sub_250F06E5C(0, a3, a4, MEMORY[0x263F8D8F0]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a2, a1, v6);
  return a2;
}

uint64_t sub_250F07124(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = (char *)a2;
  uint64_t v46 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v44 = *(void *)(v46 - 8);
  MEMORY[0x270FA5388](v46);
  uint64_t v43 = (uint64_t)&v42 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F07810();
  uint64_t v45 = v4;
  MEMORY[0x270FA5388](v4);
  uint64_t v6 = (char *)&v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F06E5C(0, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
  uint64_t v8 = v7;
  uint64_t v9 = *(void *)(v7 - 8);
  uint64_t v10 = MEMORY[0x270FA5388](v7);
  uint64_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v10);
  size_t v14 = (char *)&v42 - v13;
  uint64_t v15 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(0);
  MEMORY[0x270FA5388](v15 - 8);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F078A4();
  uint64_t v19 = MEMORY[0x270FA5388](v18 - 8);
  uint64_t v21 = (char *)&v42 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = (uint64_t)&v21[*(int *)(v19 + 56)];
  sub_250F06EDC(a1, (uint64_t)v21, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  sub_250F06EDC((uint64_t)v48, v22, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  uint64_t v23 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48);
  int v24 = v23(v21, 1, v8);
  uint64_t v47 = v21;
  if (v24 == 1)
  {
    uint64_t v25 = 1;
    int v26 = v23((char *)v22, 1, v8);
    uint64_t v27 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue;
    if (v26 == 1) {
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  uint64_t v48 = v12;
  uint64_t v28 = v45;
  uint64_t v29 = v46;
  sub_250F06EDC((uint64_t)v21, (uint64_t)v17, type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue);
  if (v23((char *)v22, 1, v8) != 1)
  {
    uint64_t v32 = (uint64_t)v14;
    sub_250F070A4(v22, (uint64_t)v14, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    uint64_t v33 = (uint64_t)v6;
    uint64_t v34 = (uint64_t)&v6[*(int *)(v28 + 48)];
    sub_250F070A4((uint64_t)v17, (uint64_t)v6, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    sub_250E8C534(v32, v34, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    uint64_t v35 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v44 + 48);
    if (v35((uint64_t)v6, 1, v29) == 1)
    {
      sub_250F06F44(v32, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      if (v35(v34, 1, v29) == 1)
      {
        sub_250F06F44((uint64_t)v6, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
        uint64_t v25 = 1;
        uint64_t v27 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue;
        goto LABEL_7;
      }
    }
    else
    {
      uint64_t v36 = (uint64_t)v6;
      uint64_t v37 = (uint64_t)v48;
      sub_250E8C534(v36, (uint64_t)v48, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      if (v35(v34, 1, v29) != 1)
      {
        uint64_t v38 = v43;
        sub_250F0703C(v34, v43, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
        sub_250F0CE70();
        sub_250EA7114((unint64_t *)&unk_26B20EE00);
        sub_250F0D330();
        if (!v49 && (sub_250F0C020() & 1) != 0)
        {
          uint64_t v39 = *(int *)(v29 + 24);
          uint64_t v40 = *(void *)(v37 + v39);
          uint64_t v41 = *(void *)(v38 + v39);
          sub_250F07908(v38, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
          sub_250F06F44(v32, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
          sub_250F07908(v37, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
          sub_250F06F44(v33, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
          uint64_t v27 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue;
          uint64_t v30 = (uint64_t)v47;
          if (v40 == v41)
          {
            uint64_t v25 = 1;
            goto LABEL_8;
          }
LABEL_21:
          uint64_t v25 = 0;
          uint64_t v27 = type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue;
          goto LABEL_8;
        }
        sub_250F07908(v38, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
        sub_250F06F44(v32, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
        sub_250F07908(v37, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
        sub_250F06F44(v33, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_20:
        uint64_t v30 = (uint64_t)v47;
        goto LABEL_21;
      }
      sub_250F06F44(v32, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
      sub_250F07908(v37, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
    }
    sub_250F07908(v33, (uint64_t (*)(void))sub_250F07810);
    goto LABEL_20;
  }
  sub_250F06F44((uint64_t)v17, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
LABEL_6:
  uint64_t v25 = 0;
  uint64_t v27 = (uint64_t (*)(void))sub_250F078A4;
LABEL_7:
  uint64_t v30 = (uint64_t)v47;
LABEL_8:
  sub_250F07908(v30, v27);
  return v25;
}

void sub_250F07810()
{
  if (!qword_269B113B0)
  {
    sub_250F06E5C(255, (unint64_t *)&unk_269B114D0, (uint64_t (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState, MEMORY[0x263F8D8F0]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B113B0);
    }
  }
}

void sub_250F078A4()
{
  if (!qword_269B113B8)
  {
    type metadata accessor for ImbalanceNotificationAnalysisStateCache.CachedValue(255);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B113B8);
    }
  }
}

uint64_t sub_250F07908(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void sub_250F07968()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_250F0CCB0();
  uint64_t v3 = *(void *)(v2 - 8);
  MEMORY[0x270FA5388](v2);
  uint64_t v5 = (char *)v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0CC90();
  uint64_t v6 = sub_250F0CCA0();
  os_log_type_t v7 = sub_250F0D1D0();
  if (os_log_type_enabled(v6, v7))
  {
    uint64_t v8 = swift_slowAlloc();
    v16[0] = v2;
    uint64_t v9 = (uint8_t *)v8;
    uint64_t v10 = swift_slowAlloc();
    uint64_t v17 = v10;
    *(_DWORD *)uint64_t v9 = 136446210;
    uint64_t v11 = sub_250F0D7B0();
    v16[1] = sub_250E8BE44(v11, v12, &v17);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v6, v7, "[%{public}s] Received notification of key-value domain change", v9, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v10, -1, -1);
    MEMORY[0x25338EC30](v9, -1, -1);

    (*(void (**)(char *, void))(v3 + 8))(v5, v16[0]);
  }
  else
  {

    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  uint64_t v13 = *(void *)(v1 + 80);
  uint64_t v14 = v13 + *(void *)(*MEMORY[0x263F8DD00] + *(void *)v13 + 16);
  uint64_t v15 = (os_unfair_lock_s *)(v13 + ((*(unsigned int *)(*(void *)v13 + 48) + 3) & 0x1FFFFFFFCLL));
  os_unfair_lock_lock(v15);
  sub_250F04128(v14);
  os_unfair_lock_unlock(v15);
}

uint64_t sub_250F07C10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_250F07C60(uint64_t (*a1)(uint64_t, unint64_t))
{
  return a1(0x6465766965636572, 0xEE00746E65766520);
}

uint64_t sub_250F07CAC(uint64_t (*a1)(uint64_t, unint64_t))
{
  return a1(0x6320656C706D6173, 0xEE007365676E6168);
}

BOOL sub_250F07CF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void (*)(uint64_t))MEMORY[0x263F07490];
  sub_250F0BD8C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  MEMORY[0x270FA5388](v5 - 8);
  os_log_type_t v7 = (char *)&v11 - v6;
  (*(void (**)(uint64_t, uint64_t))(a2 + 64))(a1, a2);
  uint64_t v8 = sub_250F0C060();
  BOOL v9 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48))(v7, 1, v8) == 1;
  sub_250F0BCC8((uint64_t)v7, (unint64_t *)&unk_26B20DEB0, v4);
  return v9;
}

uint64_t sub_250F07E0C(void (*a1)(char *, void, uint64_t), uint64_t a2, void (*a3)(char *, uint64_t))
{
  uint64_t v4 = v3;
  id v216 = a3;
  id v206 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v204 = *MEMORY[0x263F8EED0] & *(void *)v4;
  uint64_t v205 = v4;
  uint64_t v183 = sub_250F0CCB0();
  uint64_t v182 = *(void *)(v183 - 8);
  MEMORY[0x270FA5388](v183);
  uint64_t v197 = (char *)&v164 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0BD24();
  uint64_t v175 = v7;
  uint64_t v8 = MEMORY[0x270FA5388](v7);
  uint64_t v177 = (char *)&v164 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v8);
  id v173 = (char *)&v164 - v10;
  sub_250EF2884();
  uint64_t v174 = v11;
  uint64_t v12 = MEMORY[0x270FA5388](v11);
  uint64_t v178 = (char *)&v164 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v12);
  uint64_t v176 = (uint64_t)&v164 - v14;
  uint64_t v201 = sub_250F0C1A0();
  uint64_t v195 = *(void **)(v201 - 8);
  MEMORY[0x270FA5388](v201);
  uint64_t v194 = (char *)&v164 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0BD8C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  uint64_t v17 = MEMORY[0x270FA5388](v16 - 8);
  id v181 = (char *)&v164 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v17);
  uint64_t v193 = (char *)&v164 - v19;
  uint64_t v196 = sub_250F0C060();
  uint64_t v198 = *(void *)(v196 - 8);
  uint64_t v20 = MEMORY[0x270FA5388](v196);
  uint64_t v179 = (char *)&v164 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = MEMORY[0x270FA5388](v20);
  uint64_t v192 = (char *)&v164 - v23;
  MEMORY[0x270FA5388](v22);
  id v199 = (char *)&v164 - v24;
  uint64_t v185 = sub_250F0C1B0();
  uint64_t v184 = *(void *)(v185 - 8);
  MEMORY[0x270FA5388](v185);
  uint64_t v203 = (char *)&v164 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v191 = sub_250F0CE70();
  uint64_t v190 = *(void *)(v191 - 8);
  uint64_t v26 = MEMORY[0x270FA5388](v191);
  char v188 = (char *)&v164 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = MEMORY[0x270FA5388](v26);
  uint64_t v187 = (char *)&v164 - v29;
  MEMORY[0x270FA5388](v28);
  uint64_t v189 = (char *)&v164 - v30;
  sub_250F0BD8C(0, &qword_26B20E530, MEMORY[0x263F42D70]);
  MEMORY[0x270FA5388](v31 - 8);
  id v214 = (char *)&v164 - v32;
  uint64_t v33 = sub_250F0C5A0();
  uint64_t v208 = *(void *)(v33 - 8);
  uint64_t v209 = v33;
  MEMORY[0x270FA5388](v33);
  uint64_t v210 = (char *)&v164 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0BD8C(0, (unint64_t *)&unk_26B20DEA0, MEMORY[0x263F062D0]);
  uint64_t v36 = MEMORY[0x270FA5388](v35 - 8);
  os_log_t v202 = (char *)&v164 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v36);
  uint64_t v39 = (char *)&v164 - v38;
  uint64_t v40 = sub_250F0BF30();
  uint64_t v41 = *(void *)(v40 - 8);
  uint64_t v212 = v40;
  uint64_t v213 = v41;
  uint64_t v42 = MEMORY[0x270FA5388](v40);
  uint64_t v200 = (char *)&v164 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = MEMORY[0x270FA5388](v42);
  unint64_t v207 = (char *)&v164 - v45;
  MEMORY[0x270FA5388](v44);
  BOOL v211 = (char *)&v164 - v46;
  uint64_t v215 = sub_250F0C470();
  uint64_t v47 = *(void *)(v215 - 8);
  uint64_t v48 = MEMORY[0x270FA5388](v215);
  uint64_t v186 = (char *)&v164 - ((v49 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v50 = MEMORY[0x270FA5388](v48);
  uint64_t v52 = (char *)&v164 - v51;
  uint64_t v53 = MEMORY[0x270FA5388](v50);
  unint64_t v55 = (char *)&v164 - v54;
  MEMORY[0x270FA5388](v53);
  id v57 = (char *)&v164 - v56;
  uint64_t v58 = sub_250F0C810();
  uint64_t v59 = *(void *)(v58 - 8);
  uint64_t v60 = MEMORY[0x270FA5388](v58);
  uint64_t v61 = MEMORY[0x270FA5388](v60);
  uint64_t v63 = (char *)&v164 - v62;
  uint64_t v64 = MEMORY[0x270FA5388](v61);
  uint64_t v66 = (char *)&v164 - v65;
  uint64_t v67 = MEMORY[0x270FA5388](v64);
  uint64_t v70 = (char *)&v164 - v69;
  if (a2 != 2) {
    goto LABEL_14;
  }
  uint64_t v170 = v68;
  unint64_t v171 = v52;
  uint64_t v172 = v39;
  uint64_t v71 = v67;
  sub_250F0C490();
  char v72 = sub_250F0C760();
  int v75 = *(void (**)(char *, uint64_t))(v59 + 8);
  uint64_t v74 = v59 + 8;
  uint64_t v73 = v75;
  v75(v70, v71);
  if ((v72 & 1) == 0) {
    goto LABEL_14;
  }
  sub_250F0C490();
  sub_250F0C800();
  uint64_t v167 = v71;
  uint64_t v168 = v74;
  v73(v66, v71);
  uint64_t v76 = (void *)sub_250F0C460();
  uint64_t v77 = *(uint64_t (**)(char *, uint64_t))(v47 + 8);
  uint64_t v169 = v47 + 8;
  uint64_t result = v77(v57, v215);
  if (v76)
  {
    uint64_t v79 = v73;
    id v80 = objc_msgSend(self, sel_minuteUnit);
    id v81 = objc_msgSend(self, sel_quantityWithUnit_doubleValue_, v80, 90.0);

    LODWORD(v80) = objc_msgSend(v76, sel_hk_isGreaterThanQuantity_, v81);
    uint64_t v82 = v214;
    uint64_t v83 = (uint64_t)v172;
    if (!v80)
    {
      char v92 = 1;
      return v92 & 1;
    }
    sub_250F0C490();
    sub_250F0C800();
    id v84 = (void (*)(char *, uint64_t))v77;
    uint64_t v85 = v167;
    v79(v63, v167);
    sub_250F0C450();
    uint64_t v166 = v84;
    v84(v55, v215);
    uint64_t v86 = v212;
    uint64_t v87 = v213;
    uint64_t v88 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v213 + 48);
    if (v88(v83, 1, v212) == 1)
    {
      uint64_t v89 = (unint64_t *)&unk_26B20DEA0;
      uint64_t v90 = (void (*)(uint64_t))MEMORY[0x263F062D0];
      uint64_t v91 = v83;
LABEL_13:
      sub_250F0BCC8(v91, v89, v90);
LABEL_14:
      char v92 = 0;
      return v92 & 1;
    }
    uint64_t v165 = (void (*)(uint64_t, uint64_t))v79;
    os_log_type_t v93 = *(void (**)(char *, char *, uint64_t))(v87 + 32);
    uint64_t v94 = v211;
    uint64_t v172 = (char *)(v87 + 32);
    objc_super v164 = v93;
    v93(v211, (char *)v83, v86);
    uint64_t v95 = v86;
    (*(void (**)(void (*)(char *, void, uint64_t), void))(*(void *)(v204 + 88) + 48))(v206, *(void *)(v204 + 80));
    uint64_t v97 = v208;
    uint64_t v96 = v209;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v208 + 48))(v82, 1, v209) == 1)
    {
      (*(void (**)(char *, uint64_t))(v87 + 8))(v94, v95);
      uint64_t v89 = &qword_26B20E530;
      uint64_t v98 = (void (*)(uint64_t))MEMORY[0x263F42D70];
LABEL_12:
      uint64_t v90 = v98;
      uint64_t v91 = (uint64_t)v82;
      goto LABEL_13;
    }
    (*(void (**)(char *, char *, uint64_t))(v97 + 32))(v210, v82, v96);
    uint64_t v99 = v170;
    sub_250F0C490();
    uint64_t v100 = v171;
    sub_250F0C800();
    v165(v99, v85);
    uint64_t v82 = v202;
    sub_250F0C450();
    v166(v100, v215);
    if (v88((uint64_t)v82, 1, v95) == 1)
    {
      (*(void (**)(char *, uint64_t))(v97 + 8))(v210, v96);
      (*(void (**)(char *, uint64_t))(v213 + 8))(v211, v95);
      uint64_t v89 = (unint64_t *)&unk_26B20DEA0;
      uint64_t v98 = (void (*)(uint64_t))MEMORY[0x263F062D0];
      goto LABEL_12;
    }
    v164(v207, v82, v95);
    sub_250F0C490();
    uint64_t v101 = v187;
    sub_250F0C770();
    uint64_t v102 = (void (*)(char *, uint64_t))v165;
    v165((uint64_t)v70, v85);
    unint64_t v103 = v188;
    sub_250F0C4B0();
    uint64_t v104 = v189;
    sub_250F0CDE0();
    uint64_t v105 = *(void (**)(char *, uint64_t))(v190 + 8);
    uint64_t v106 = v103;
    uint64_t v107 = v191;
    v105(v106, v191);
    v105(v101, v107);
    uint64_t v108 = sub_250F0CE30();
    v105(v104, v107);
    sub_250F0C490();
    uint64_t v109 = v186;
    sub_250F0C800();
    v102(v70, v85);
    uint64_t v110 = v203;
    sub_250F0C440();
    v166(v109, v215);
    uint64_t v111 = v195;
    uint64_t v112 = (void (*)(void))v195[13];
    unint64_t v113 = v194;
    LODWORD(v215) = *MEMORY[0x263F07870];
    uint64_t v114 = v201;
    id v206 = (void (*)(char *, void, uint64_t))v112;
    v112(v194);
    uint64_t v115 = v192;
    sub_250F0BF00();
    uint64_t v116 = (uint64_t)v193;
    id v214 = (char *)v108;
    sub_250F0C190();
    uint64_t v117 = v198;
    uint64_t v118 = v198 + 8;
    uint64_t v119 = v196;
    id v216 = *(void (**)(char *, uint64_t))(v198 + 8);
    v216(v115, v196);
    uint64_t v205 = (void (*)(char *, uint64_t))v111[1];
    v205(v113, v114);
    uint64_t v204 = *(void *)(v117 + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v204)(v116, 1, v119) == 1)
    {
      uint64_t v120 = v110;
      sub_250F0BCC8(v116, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      unint64_t v121 = v197;
      uint64_t v122 = v210;
      goto LABEL_22;
    }
    uint64_t v123 = *(void **)(v117 + 32);
    os_log_t v202 = (char *)(v117 + 32);
    uint64_t v195 = v123;
    ((void (*)(char *, uint64_t, uint64_t))v123)(v199, v116, v119);
    uint64_t v124 = v201;
    v206(v113, v215, v201);
    sub_250F0BEE0();
    uint64_t v125 = (uint64_t)v181;
    sub_250F0C190();
    uint64_t v126 = v115;
    uint64_t v127 = v216;
    v216(v126, v119);
    v205(v113, v124);
    uint64_t v128 = v119;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v204)(v125, 1, v119) == 1)
    {
      v127(v199, v119);
      sub_250F0BCC8(v125, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      unint64_t v121 = v197;
      uint64_t v120 = v203;
      uint64_t v122 = v210;
      goto LABEL_22;
    }
    uint64_t v215 = v118;
    id v129 = v179;
    ((void (*)(char *, uint64_t, uint64_t))v195)(v179, v125, v128);
    sub_250F0BE48((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
    uint64_t v130 = v199;
    char v131 = sub_250F0CEE0();
    unint64_t v121 = v197;
    uint64_t v122 = v210;
    if (v131)
    {
      uint64_t v132 = v216;
      v216(v129, v128);
      v132(v130, v128);
      uint64_t v120 = v203;
LABEL_22:
      uint64_t v133 = v207;
      sub_250F0CC90();
      uint64_t v134 = v212;
      uint64_t v135 = v213;
      uint64_t v136 = v200;
      (*(void (**)(char *, char *, uint64_t))(v213 + 16))(v200, v133, v212);
      uint64_t v137 = sub_250F0CCA0();
      os_log_type_t v138 = sub_250F0D1B0();
      if (os_log_type_enabled(v137, v138))
      {
        uint64_t v139 = swift_slowAlloc();
        id v216 = (void (*)(char *, uint64_t))swift_slowAlloc();
        char v218 = v216;
        *(_DWORD *)uint64_t v139 = 136446722;
        uint64_t v140 = sub_250F0D7B0();
        uint64_t v217 = sub_250E8BE44(v140, v141, (uint64_t *)&v218);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v139 + 12) = 2080;
        sub_250F0BE48(&qword_269B114F0, MEMORY[0x263F062D0]);
        id v142 = v200;
        uint64_t v143 = sub_250F0D650();
        uint64_t v217 = sub_250E8BE44(v143, v144, (uint64_t *)&v218);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        BOOL v145 = *(void (**)(char *, uint64_t))(v135 + 8);
        v145(v142, v134);
        *(_WORD *)(v139 + 22) = 2048;
        uint64_t v217 = (uint64_t)v214;
        sub_250F0D300();
        _os_log_impl(&dword_250E86000, v137, v138, "[%{public}s] Unexpectedly could not shift %s by %ld", (uint8_t *)v139, 0x20u);
        uint64_t v146 = v216;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v146, -1, -1);
        MEMORY[0x25338EC30](v139, -1, -1);

        (*(void (**)(char *, uint64_t))(v182 + 8))(v121, v183);
        (*(void (**)(char *, uint64_t))(v184 + 8))(v203, v185);
        v145(v207, v134);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v210, v209);
        v145(v211, v134);
      }
      else
      {

        uint64_t v147 = *(void (**)(char *, uint64_t))(v135 + 8);
        v147(v136, v134);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v121, v183);
        (*(void (**)(char *, uint64_t))(v184 + 8))(v120, v185);
        v147(v207, v134);
        (*(void (**)(char *, uint64_t))(v208 + 8))(v122, v209);
        v147(v211, v134);
      }
      goto LABEL_14;
    }
    uint64_t result = sub_250F0CF00();
    if (result)
    {
      uint64_t v148 = v175;
      uint64_t v149 = v173;
      uint64_t v150 = &v173[*(int *)(v175 + 48)];
      uint64_t v151 = *(void (**)(char *, char *, uint64_t))(v198 + 16);
      v151(v173, v130, v128);
      uint64_t v152 = v150;
      id v214 = v150;
      v151(v150, v129, v128);
      uint64_t v153 = v128;
      uint64_t v154 = v177;
      uint64_t v155 = &v177[*(int *)(v148 + 48)];
      v151(v177, v149, v153);
      v151(v155, v152, v153);
      uint64_t v156 = (uint64_t)v178;
      uint64_t v157 = (void (*)(char *, char *, uint64_t))v195;
      ((void (*)(char *, char *, uint64_t))v195)(v178, v154, v153);
      v216(v155, v153);
      id v158 = &v154[*(int *)(v148 + 48)];
      v157(v154, v149, v153);
      v157(v158, v214, v153);
      v157((char *)(v156 + *(int *)(v174 + 36)), v158, v153);
      uint64_t v159 = v216;
      v216(v154, v153);
      uint64_t v160 = v176;
      sub_250F0BDE0(v156, v176, (uint64_t (*)(void))sub_250EF2884);
      uint64_t v161 = v211;
      sub_250F0BEB0();
      LOBYTE(v154) = sub_250F0962C(v156);
      sub_250F0BC68(v156, (uint64_t (*)(void))sub_250EF2884);
      sub_250F0BC68(v160, (uint64_t (*)(void))sub_250EF2884);
      v159(v129, v153);
      v159(v199, v153);
      (*(void (**)(char *, uint64_t))(v184 + 8))(v203, v185);
      uint64_t v162 = v212;
      uint64_t v163 = *(void (**)(char *, uint64_t))(v213 + 8);
      v163(v207, v212);
      (*(void (**)(char *, uint64_t))(v208 + 8))(v210, v209);
      v163(v161, v162);
      char v92 = v154 ^ 1;
      return v92 & 1;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_250F09564(void *a1, int a2, void *a3, void *a4, void *a5, void *aBlock)
{
  uint64_t v10 = _Block_copy(aBlock);
  uint64_t v11 = (void *)swift_allocObject();
  _OWORD v11[2] = v10;
  id v12 = a3;
  uint64_t v13 = a4;
  id v14 = a5;
  id v15 = a1;
  sub_250F0A344(v13, (void (*)(uint64_t))sub_250EBD558, v11);

  return swift_release();
}

uint64_t sub_250F0962C(uint64_t a1)
{
  sub_250EF2884();
  uint64_t v4 = MEMORY[0x270FA5388](v3);
  uint64_t v23 = (uint64_t)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = MEMORY[0x270FA5388](v4);
  uint64_t v8 = (char *)&v22 - v7;
  uint64_t v9 = MEMORY[0x270FA5388](v6);
  uint64_t v11 = (char *)&v22 - v10;
  MEMORY[0x270FA5388](v9);
  uint64_t v13 = (char *)&v22 - v12;
  sub_250F0C060();
  sub_250F0BE48((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
  char v14 = sub_250F0CF00();
  sub_250E93684(v1, (uint64_t)v13, (uint64_t (*)(void))sub_250EF2884);
  sub_250E93684(a1, (uint64_t)v11, (uint64_t (*)(void))sub_250EF2884);
  if (v14)
  {
    sub_250F0BC68((uint64_t)v11, (uint64_t (*)(void))sub_250EF2884);
    sub_250F0BC68((uint64_t)v13, (uint64_t (*)(void))sub_250EF2884);
    sub_250E93684(v1, (uint64_t)v8, (uint64_t (*)(void))sub_250EF2884);
LABEL_4:
    sub_250F0BC68((uint64_t)v8, (uint64_t (*)(void))sub_250EF2884);
    uint64_t v16 = a1;
    uint64_t v17 = v23;
    sub_250E93684(v16, v23, (uint64_t (*)(void))sub_250EF2884);
    goto LABEL_5;
  }
  char v15 = sub_250F0CF00();
  sub_250F0BC68((uint64_t)v11, (uint64_t (*)(void))sub_250EF2884);
  sub_250F0BC68((uint64_t)v13, (uint64_t (*)(void))sub_250EF2884);
  sub_250E93684(v1, (uint64_t)v8, (uint64_t (*)(void))sub_250EF2884);
  if (v15) {
    goto LABEL_4;
  }
  sub_250F0BE48(&qword_269B114F8, MEMORY[0x263F07490]);
  char v20 = sub_250F0CF40();
  sub_250F0BC68((uint64_t)v8, (uint64_t (*)(void))sub_250EF2884);
  uint64_t v21 = a1;
  uint64_t v17 = v23;
  sub_250E93684(v21, v23, (uint64_t (*)(void))sub_250EF2884);
  if ((v20 & 1) == 0)
  {
    char v18 = sub_250F0CF40() ^ 1;
    goto LABEL_6;
  }
LABEL_5:
  char v18 = 0;
LABEL_6:
  sub_250F0BC68(v17, (uint64_t (*)(void))sub_250EF2884);
  return v18 & 1;
}

void sub_250F099A0()
{
}

uint64_t sub_250F099E4(uint64_t a1)
{
  return swift_unknownObjectRelease();
}

uint64_t type metadata accessor for ImbalanceNotificationManager()
{
  return __swift_instantiateGenericMetadata();
}

uint64_t *sub_250F09A48(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_250F0CE70();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    uint64_t v10 = (char *)a2 + v8;
    uint64_t v11 = sub_250F0C060();
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v11 - 8) + 16))(v9, v10, v11);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
  }
  return a1;
}

uint64_t sub_250F09B64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  uint64_t v5 = a1 + *(int *)(a2 + 20);
  uint64_t v6 = sub_250F0C060();
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8);
  return v7(v5, v6);
}

uint64_t sub_250F09C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_250F09CD8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 24))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_250F09DA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 32))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_250F09E70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = sub_250F0C060();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 40))(v8, v9, v10);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_250F09F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return MEMORY[0x270FA0340](a1, a2, a3, sub_250F09F50);
}

uint64_t sub_250F09F50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_250F0CE70();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = sub_250F0C060();
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_250F0A048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return MEMORY[0x270FA0580](a1, a2, a3, a4, sub_250F0A05C);
}

uint64_t sub_250F0A05C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_250F0CE70();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = sub_250F0C060();
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for ImbalanceNotificationAnalysisState()
{
  uint64_t result = qword_269B114B8;
  if (!qword_269B114B8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_250F0A1AC()
{
  uint64_t result = sub_250F0CE70();
  if (v1 <= 0x3F)
  {
    uint64_t result = sub_250F0C060();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

BOOL sub_250F0A280(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_250F0CE70();
  sub_250F0BE48((unint64_t *)&unk_26B20EE00, MEMORY[0x263F090E8]);
  sub_250F0D330();
  return !v7 && (sub_250F0C020() & 1) != 0 && *(void *)(a1 + *(int *)(a3 + 24)) == *(void *)(a2 + *(int *)(a3 + 24));
}

uint64_t sub_250F0A344(void (*a1)(char *, void, uint64_t), void (*a2)(uint64_t), void *a3)
{
  uint64_t v196 = a2;
  uint64_t v200 = a1;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v6 = *MEMORY[0x263F8EED0] & (uint64_t)v3->isa;
  uint64_t v201 = v3;
  uint64_t v7 = v6;
  uint64_t v179 = sub_250F0CE70();
  uint64_t v178 = *(void *)(v179 - 8);
  MEMORY[0x270FA5388](v179);
  uint64_t v176 = (char *)&v167 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_250F0BD8C(0, (unint64_t *)&unk_269B114D0, (void (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
  MEMORY[0x270FA5388](v9 - 8);
  uint64_t v177 = (char *)&v167 - v10;
  uint64_t v180 = type metadata accessor for ImbalanceNotificationAnalysisState();
  uint64_t v175 = *(void *)(v180 - 8);
  uint64_t v11 = MEMORY[0x270FA5388](v180);
  id v173 = (char *)&v167 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v11);
  uint64_t v174 = (uint64_t)&v167 - v13;
  sub_250F0BD8C(0, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
  uint64_t v15 = MEMORY[0x270FA5388](v14 - 8);
  uint64_t v169 = (char *)&v167 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v15);
  uint64_t v182 = (char *)&v167 - v17;
  uint64_t v18 = sub_250F0C060();
  uint64_t v185 = *(void *)(v18 - 8);
  uint64_t v186 = v18;
  uint64_t v19 = MEMORY[0x270FA5388](v18);
  uint64_t v170 = (char *)&v167 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = MEMORY[0x270FA5388](v19);
  unint64_t v171 = (char *)&v167 - v22;
  MEMORY[0x270FA5388](v21);
  uint64_t v183 = (char *)&v167 - v23;
  uint64_t v193 = sub_250F0C5A0();
  uint64_t v24 = *(void *)(v193 - 8);
  uint64_t v25 = MEMORY[0x270FA5388](v193);
  uint64_t v187 = (void (*)(uint64_t, uint64_t))((char *)&v167 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x270FA5388](v25);
  uint64_t v192 = (void (*)(char *, uint64_t))((char *)&v167 - v27);
  sub_250F0BD8C(0, (unint64_t *)&qword_26B20F040, (void (*)(uint64_t))sub_250E937E0);
  MEMORY[0x270FA5388](v28 - 8);
  uint64_t v198 = (uint64_t *)((char *)&v167 - v29);
  sub_250E937E0();
  id v199 = v30;
  uint64_t v197 = *((void *)v30 - 1);
  uint64_t v31 = MEMORY[0x270FA5388](v30);
  uint64_t v190 = (uint64_t)&v167 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x270FA5388](v31);
  uint64_t v34 = (char *)&v167 - v33;
  uint64_t v35 = sub_250F0CCB0();
  uint64_t v36 = *(void *)(v35 - 8);
  uint64_t v37 = MEMORY[0x270FA5388](v35);
  char v188 = (char *)&v167 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v39 = MEMORY[0x270FA5388](v37);
  uint64_t v194 = (char *)&v167 - v40;
  uint64_t v41 = MEMORY[0x270FA5388](v39);
  uint64_t v184 = (char *)&v167 - v42;
  uint64_t v43 = MEMORY[0x270FA5388](v41);
  uint64_t v168 = (char *)&v167 - v44;
  uint64_t v45 = MEMORY[0x270FA5388](v43);
  uint64_t v172 = (char *)&v167 - v46;
  MEMORY[0x270FA5388](v45);
  uint64_t v48 = (char *)&v167 - v47;
  sub_250F0CC90();
  uint64_t v49 = sub_250F0CCA0();
  os_log_type_t v50 = sub_250F0D1D0();
  BOOL v51 = os_log_type_enabled(v49, v50);
  os_log_t v202 = (void (*)(char *, uint64_t))v35;
  uint64_t v195 = v36;
  uint64_t v189 = ObjectType;
  if (v51)
  {
    uint64_t v52 = swift_slowAlloc();
    uint64_t v181 = v7;
    uint64_t v53 = (uint8_t *)v52;
    uint64_t v54 = swift_slowAlloc();
    uint64_t v203 = (void (*)(char *, void, uint64_t))v54;
    uint64_t v191 = v34;
    *(_DWORD *)uint64_t v53 = 136446210;
    uint64_t v55 = sub_250F0D7B0();
    uint64_t v205 = sub_250E8BE44(v55, v56, (uint64_t *)&v203);
    uint64_t v34 = v191;
    uint64_t v35 = (uint64_t)v202;
    sub_250F0D300();
    uint64_t v36 = v195;
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v49, v50, "[%{public}s] Beginning notification determination", v53, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v54, -1, -1);
    id v57 = v53;
    uint64_t v7 = v181;
    MEMORY[0x25338EC30](v57, -1, -1);
  }

  uint64_t v58 = *(void (**)(char *, uint64_t))(v36 + 8);
  v58(v48, v35);
  uint64_t v60 = *(void *)(v7 + 80);
  uint64_t v59 = *(void *)(v7 + 88);
  uint64_t v61 = *(void (**)(void, uint64_t, uint64_t))(v59 + 40);
  uint64_t v62 = (uint64_t)v198;
  uint64_t v181 = *(uint64_t *)((char *)&v201->isa + qword_269B113C8);
  v61(v200, v60, v59);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(char *, uint64_t)))(v197 + 48))(v62, 1, v199) != 1)
  {
    sub_250F0BDE0(v62, (uint64_t)v34, (uint64_t (*)(void))sub_250E937E0);
    uint64_t v72 = v190;
    sub_250E93684((uint64_t)v34, v190, (uint64_t (*)(void))sub_250E937E0);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      char v74 = *(unsigned char *)(v72 + 8);
      uint64_t v203 = *(void (**)(char *, void, uint64_t))v72;
      uint64_t v73 = v203;
      char v204 = v74;
      sub_250E92500();
      swift_willThrowTypedImpl();
      int v75 = v188;
      sub_250F0CC90();
      id v76 = v73;
      id v77 = v73;
      uint64_t v78 = sub_250F0CCA0();
      os_log_type_t v79 = sub_250F0D1B0();
      uint64_t v201 = v78;
      if (os_log_type_enabled(v78, v79))
      {
        uint64_t v80 = swift_slowAlloc();
        uint64_t v191 = v34;
        uint64_t v81 = v80;
        uint64_t v198 = (void *)swift_slowAlloc();
        uint64_t v200 = (void (*)(char *, void, uint64_t))swift_slowAlloc();
        uint64_t v203 = v200;
        *(_DWORD *)uint64_t v81 = 136446466;
        id v199 = v58;
        uint64_t v82 = sub_250F0D7B0();
        uint64_t v205 = sub_250E8BE44(v82, v83, (uint64_t *)&v203);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        *(_WORD *)(v81 + 12) = 2114;
        swift_allocError();
        *(void *)uint64_t v84 = v73;
        *(unsigned char *)(v84 + 8) = v74;
        id v85 = v73;
        uint64_t v86 = _swift_stdlib_bridgeErrorToNSError();
        uint64_t v205 = v86;
        sub_250F0D300();
        uint64_t v87 = v198;
        *uint64_t v198 = v86;

        uint64_t v88 = v201;
        _os_log_impl(&dword_250E86000, v201, v79, "[%{public}s] Error enumerating day summary %{public}@", (uint8_t *)v81, 0x16u);
        sub_250F0BD8C(0, (unint64_t *)&qword_26B20E430, (void (*)(uint64_t))sub_250E97918);
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v87, -1, -1);
        uint64_t v89 = v200;
        swift_arrayDestroy();
        MEMORY[0x25338EC30](v89, -1, -1);
        uint64_t v90 = v81;
        uint64_t v34 = v191;
        MEMORY[0x25338EC30](v90, -1, -1);

        uint64_t v91 = ((uint64_t (*)(char *, void))v199)(v75, v202);
      }
      else
      {

        uint64_t v91 = ((uint64_t (*)(char *, void))v58)(v75, v202);
      }
      v196(v91);

LABEL_20:
      uint64_t v110 = (uint64_t)v34;
      return sub_250F0BC68(v110, (uint64_t (*)(void))sub_250E937E0);
    }
    uint64_t v198 = a3;
    id v199 = v58;
    uint64_t v94 = v72;
    uint64_t v95 = *(void (**)(void))(v24 + 32);
    ((void (*)(void (*)(uint64_t, uint64_t), uint64_t, uint64_t))v95)(v187, v94, v193);
    v95();
    if ((sub_250F0C560() & 1) == 0)
    {
LABEL_14:
      uint64_t v99 = v24;
      uint64_t v100 = v184;
      sub_250F0CC90();
      uint64_t v101 = sub_250F0CCA0();
      os_log_type_t v102 = sub_250F0D1D0();
      if (os_log_type_enabled(v101, v102))
      {
        unint64_t v103 = (uint8_t *)swift_slowAlloc();
        uint64_t v104 = swift_slowAlloc();
        uint64_t v191 = v34;
        uint64_t v105 = v104;
        uint64_t v203 = (void (*)(char *, void, uint64_t))v104;
        *(_DWORD *)unint64_t v103 = 136446210;
        uint64_t v106 = sub_250F0D7B0();
        uint64_t v205 = sub_250E8BE44(v106, v107, (uint64_t *)&v203);
        sub_250F0D300();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_250E86000, v101, v102, "[%{public}s] No data available for analysis, returning.", v103, 0xCu);
        swift_arrayDestroy();
        uint64_t v108 = v105;
        uint64_t v34 = v191;
        MEMORY[0x25338EC30](v108, -1, -1);
        MEMORY[0x25338EC30](v103, -1, -1);

        uint64_t v109 = ((uint64_t (*)(char *, void))v199)(v100, v202);
      }
      else
      {

        uint64_t v109 = ((uint64_t (*)(char *, uint64_t))v199)(v100, v35);
      }
      v196(v109);
      (*(void (**)(void, uint64_t))(v99 + 8))(v192, v193);
      goto LABEL_20;
    }
    uint64_t v96 = (uint64_t)v182;
    sub_250F0CAF0();
    uint64_t v98 = v185;
    uint64_t v97 = v186;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v185 + 48))(v96, 1, v186) == 1)
    {
      sub_250F0BCC8(v96, (unint64_t *)&unk_26B20DEB0, MEMORY[0x263F07490]);
      goto LABEL_14;
    }
    uint64_t v197 = v24;
    uint64_t v111 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v98 + 32))(v183, v96, v97);
    uint64_t v112 = MEMORY[0x25338D170](v111);
    uint64_t v194 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v59 + 24))(v60, v59);
    if (v112 < (uint64_t)v194) {
      (*(void (**)(uint64_t, uint64_t))(v59 + 128))(v60, v59);
    }
    unint64_t v113 = v176;
    sub_250F0C4B0();
    uint64_t v114 = (uint64_t)v177;
    (*(void (**)(char *, uint64_t, uint64_t))(v59 + 56))(v113, v60, v59);
    (*(void (**)(char *, uint64_t))(v178 + 8))(v113, v179);
    uint64_t v115 = v180;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v175 + 48))(v114, 1, v180) == 1)
    {
      uint64_t v191 = v34;
      sub_250F0BCC8(v114, (unint64_t *)&unk_269B114D0, (void (*)(uint64_t))type metadata accessor for ImbalanceNotificationAnalysisState);
    }
    else
    {
      uint64_t v116 = v114;
      uint64_t v117 = v174;
      sub_250F0BDE0(v116, v174, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
      if (*(void *)(v117 + *(int *)(v115 + 24)) >= v112)
      {
        uint64_t v132 = v172;
        sub_250F0CC90();
        uint64_t v133 = sub_250F0CCA0();
        os_log_type_t v134 = sub_250F0D1D0();
        if (os_log_type_enabled(v133, v134))
        {
          uint64_t v135 = (uint8_t *)swift_slowAlloc();
          uint64_t v136 = v34;
          uint64_t v137 = swift_slowAlloc();
          uint64_t v203 = (void (*)(char *, void, uint64_t))v137;
          *(_DWORD *)uint64_t v135 = 136446210;
          uint64_t v138 = sub_250F0D7B0();
          uint64_t v205 = sub_250E8BE44(v138, v139, (uint64_t *)&v203);
          sub_250F0D300();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_250E86000, v133, v134, "[%{public}s] Notification state unchanged", v135, 0xCu);
          swift_arrayDestroy();
          uint64_t v140 = v137;
          uint64_t v34 = v136;
          unint64_t v141 = v192;
          MEMORY[0x25338EC30](v140, -1, -1);
          MEMORY[0x25338EC30](v135, -1, -1);

          uint64_t v142 = ((uint64_t (*)(char *, void))v199)(v172, v202);
          uint64_t v143 = v183;
          uint64_t v144 = v174;
        }
        else
        {

          uint64_t v142 = ((uint64_t (*)(char *, uint64_t))v199)(v132, v35);
          uint64_t v143 = v183;
          uint64_t v144 = v174;
          unint64_t v141 = v192;
        }
        v196(v142);
        sub_250F0BC68(v144, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
        (*(void (**)(char *, uint64_t))(v185 + 8))(v143, v186);
        (*(void (**)(void, uint64_t))(v197 + 8))(v141, v193);
        goto LABEL_20;
      }
      uint64_t v191 = v34;
      sub_250F0BC68(v117, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
    }
    if (sub_250F0CB10())
    {
      BOOL v118 = sub_250F07CF8(v60, v59);
      int v119 = v112 < (uint64_t)v194 || v118;
      if (v112 >= (uint64_t)v194 || v118) {
        goto LABEL_31;
      }
    }
    else if (v112 >= (uint64_t)v194)
    {
      int v119 = 0;
LABEL_31:
      LODWORD(v188) = v119;
      uint64_t v190 = v112;
      uint64_t v120 = v171;
      unint64_t v121 = v183;
      sub_250F0BFF0();
      uint64_t v122 = v170;
      uint64_t v187 = *(void (**)(uint64_t, uint64_t))(v59 + 8);
      v187(v60, v59);
      sub_250F0BE48((unint64_t *)&qword_26B20E4E0, MEMORY[0x263F07490]);
      uint64_t v123 = v186;
      char v124 = sub_250F0CEE0();
      uint64_t v125 = v122;
      uint64_t v126 = *(void (**)(char *, uint64_t))(v185 + 8);
      v126(v125, v123);
      if (v124)
      {
        uint64_t v127 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 104))(v120, v60, v59);
        v196(v127);
        v126(v120, v123);
        v126(v121, v123);
      }
      else
      {
        char v145 = (*(uint64_t (**)(uint64_t, uint64_t))(v59 + 32))(v60, v59);
        uint64_t v146 = v190;
        if (v145)
        {
          uint64_t result = sub_250F07E0C(v200, v190, v192);
          if (result)
          {
            uint64_t v147 = v126;
            uint64_t v148 = v168;
            sub_250F0CC90();
            uint64_t v149 = sub_250F0CCA0();
            os_log_type_t v150 = sub_250F0D1D0();
            if (os_log_type_enabled(v149, v150))
            {
              uint64_t v151 = (uint8_t *)swift_slowAlloc();
              uint64_t v152 = swift_slowAlloc();
              uint64_t v203 = (void (*)(char *, void, uint64_t))v152;
              *(_DWORD *)uint64_t v151 = 136446210;
              uint64_t v153 = sub_250F0D7B0();
              uint64_t v205 = sub_250E8BE44(v153, v154, (uint64_t *)&v203);
              sub_250F0D300();
              swift_bridgeObjectRelease();
              _os_log_impl(&dword_250E86000, v149, v150, "[%{public}s] Suppressing outlier notification due to likelihood of it being due to a nap", v151, 0xCu);
              swift_arrayDestroy();
              MEMORY[0x25338EC30](v152, -1, -1);
              MEMORY[0x25338EC30](v151, -1, -1);
            }

            uint64_t v155 = ((uint64_t (*)(char *, void))v199)(v148, v202);
            uint64_t v34 = v191;
            uint64_t v156 = v183;
            uint64_t v157 = v171;
            v196(v155);
            id v158 = v157;
            uint64_t v159 = v186;
            v147(v158, v186);
            v147(v156, v159);
            (*(void (**)(void, uint64_t))(v197 + 8))(v192, v193);
            goto LABEL_20;
          }
          if (v146 < (uint64_t)v194)
          {
            if ((v188 & 1) == 0)
            {
              __break(1u);
              return result;
            }
            (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v59 + 120))(v192, v60, v59);
          }
          else
          {
            (*(void (**)(void (*)(char *, uint64_t), uint64_t, uint64_t))(v59 + 112))(v192, v60, v59);
          }
        }
        os_log_t v202 = v126;
        uint64_t v160 = (uint64_t)v173;
        sub_250F0C4B0();
        uint64_t v161 = v180;
        uint64_t v162 = v187;
        v187(v60, v59);
        *(void *)(v160 + *(int *)(v161 + 24)) = v146;
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 88))(v160, v60, v59);
        uint64_t v163 = sub_250F0BC68(v160, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
        uint64_t v164 = v186;
        if (v188)
        {
          uint64_t v165 = v169;
          v162(v60, v59);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v185 + 56))(v165, 0, 1, v164);
          uint64_t v163 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v59 + 72))(v165, v60, v59);
        }
        v196(v163);
        uint64_t v166 = v202;
        v202(v171, v164);
        v166(v183, v164);
      }
      (*(void (**)(void, uint64_t))(v197 + 8))(v192, v193);
LABEL_52:
      uint64_t v110 = (uint64_t)v191;
      return sub_250F0BC68(v110, (uint64_t (*)(void))sub_250E937E0);
    }
    uint64_t v128 = (uint64_t)v173;
    id v129 = v192;
    sub_250F0C4B0();
    uint64_t v130 = v180;
    (*(void (**)(uint64_t, uint64_t))(v59 + 8))(v60, v59);
    *(void *)(v128 + *(int *)(v130 + 24)) = v112;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v59 + 88))(v128, v60, v59);
    uint64_t v131 = sub_250F0BC68(v128, (uint64_t (*)(void))type metadata accessor for ImbalanceNotificationAnalysisState);
    v196(v131);
    (*(void (**)(char *, uint64_t))(v185 + 8))(v183, v186);
    (*(void (**)(void, uint64_t))(v197 + 8))(v129, v193);
    goto LABEL_52;
  }
  sub_250F0BCC8(v62, (unint64_t *)&qword_26B20F040, (void (*)(uint64_t))sub_250E937E0);
  uint64_t v63 = v194;
  sub_250F0CC90();
  uint64_t v64 = sub_250F0CCA0();
  os_log_type_t v65 = sub_250F0D1B0();
  if (os_log_type_enabled(v64, v65))
  {
    uint64_t v66 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    uint64_t v203 = (void (*)(char *, void, uint64_t))v67;
    *(_DWORD *)uint64_t v66 = 136446210;
    uint64_t v68 = sub_250F0D7B0();
    uint64_t v205 = sub_250E8BE44(v68, v69, (uint64_t *)&v203);
    sub_250F0D300();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_250E86000, v64, v65, "[%{public}s] Configuration issue: no day summary result returned", v66, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x25338EC30](v67, -1, -1);
    MEMORY[0x25338EC30](v66, -1, -1);

    uint64_t v70 = v194;
    uint64_t v71 = (void (*)(void, void))v202;
  }
  else
  {

    uint64_t v70 = v63;
    uint64_t v71 = (void (*)(void, void))v35;
  }
  uint64_t v92 = ((uint64_t (*)(char *, void))v58)(v70, v71);
  return ((uint64_t (*)(uint64_t))v196)(v92);
}

void sub_250F0BC00()
{
}

uint64_t sub_250F0BC30()
{
  _Block_release(*(const void **)(v0 + 16));
  return MEMORY[0x270FA0238](v0, 24, 7);
}

uint64_t sub_250F0BC68(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_250F0BCC8(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  sub_250F0BD8C(0, a2, a3);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  return a1;
}

void sub_250F0BD24()
{
  if (!qword_269B114E0)
  {
    sub_250F0C060();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1) {
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_269B114E0);
    }
  }
}

void sub_250F0BD8C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_250F0D2D0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_250F0BDE0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_250F0BE48(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_250F0BE90()
{
  return MEMORY[0x270EEE2B0]();
}

uint64_t sub_250F0BEA0()
{
  return MEMORY[0x270F31010]();
}

uint64_t sub_250F0BEB0()
{
  return MEMORY[0x270F31018]();
}

uint64_t sub_250F0BEC0()
{
  return MEMORY[0x270EEE2C8]();
}

uint64_t sub_250F0BED0()
{
  return MEMORY[0x270EEE2E8]();
}

uint64_t sub_250F0BEE0()
{
  return MEMORY[0x270EEE2F0]();
}

uint64_t sub_250F0BEF0()
{
  return MEMORY[0x270EEE2F8]();
}

uint64_t sub_250F0BF00()
{
  return MEMORY[0x270EEE308]();
}

uint64_t sub_250F0BF10()
{
  return MEMORY[0x270EEE318]();
}

uint64_t sub_250F0BF20()
{
  return MEMORY[0x270EF30A0]();
}

uint64_t sub_250F0BF30()
{
  return MEMORY[0x270EEE338]();
}

uint64_t sub_250F0BF40()
{
  return MEMORY[0x270EEE738]();
}

uint64_t sub_250F0BF50()
{
  return MEMORY[0x270EEE760]();
}

uint64_t sub_250F0BF60()
{
  return MEMORY[0x270EEE768]();
}

uint64_t sub_250F0BF70()
{
  return MEMORY[0x270EEE890]();
}

uint64_t sub_250F0BF80()
{
  return MEMORY[0x270EEE8E8]();
}

uint64_t sub_250F0BF90()
{
  return MEMORY[0x270EEF830]();
}

uint64_t sub_250F0BFA0()
{
  return MEMORY[0x270EEF840]();
}

uint64_t sub_250F0BFB0()
{
  return MEMORY[0x270EF0898]();
}

uint64_t sub_250F0BFC0()
{
  return MEMORY[0x270EF0998]();
}

uint64_t sub_250F0BFD0()
{
  return MEMORY[0x270EF09A8]();
}

uint64_t sub_250F0BFE0()
{
  return MEMORY[0x270EF09B8]();
}

uint64_t sub_250F0BFF0()
{
  return MEMORY[0x270EF09C0]();
}

uint64_t sub_250F0C000()
{
  return MEMORY[0x270EF09C8]();
}

uint64_t sub_250F0C010()
{
  return MEMORY[0x270EF09D8]();
}

uint64_t sub_250F0C020()
{
  return MEMORY[0x270EF0B88]();
}

uint64_t sub_250F0C030()
{
  return MEMORY[0x270EF0BA8]();
}

uint64_t sub_250F0C040()
{
  return MEMORY[0x270EF0BB8]();
}

uint64_t sub_250F0C050()
{
  return MEMORY[0x270EF0C30]();
}

uint64_t sub_250F0C060()
{
  return MEMORY[0x270EF0C40]();
}

uint64_t sub_250F0C070()
{
  return MEMORY[0x270EF0C68]();
}

uint64_t sub_250F0C080()
{
  return MEMORY[0x270EF0C88]();
}

uint64_t sub_250F0C090()
{
  return MEMORY[0x270EF0CB0]();
}

uint64_t sub_250F0C0A0()
{
  return MEMORY[0x270EF0CB8]();
}

uint64_t sub_250F0C0B0()
{
  return MEMORY[0x270EF0D08]();
}

uint64_t sub_250F0C0C0()
{
  return MEMORY[0x270EF0D18]();
}

uint64_t sub_250F0C0D0()
{
  return MEMORY[0x270EF0F48]();
}

uint64_t sub_250F0C0E0()
{
  return MEMORY[0x270EF0F70]();
}

uint64_t sub_250F0C0F0()
{
  return MEMORY[0x270EF0F90]();
}

uint64_t sub_250F0C100()
{
  return MEMORY[0x270EF0FA0]();
}

uint64_t sub_250F0C110()
{
  return MEMORY[0x270EF10A8]();
}

uint64_t sub_250F0C120()
{
  return MEMORY[0x270EF10C8]();
}

uint64_t sub_250F0C130()
{
  return MEMORY[0x270EF10D8]();
}

uint64_t sub_250F0C140()
{
  return MEMORY[0x270EF1100]();
}

uint64_t sub_250F0C150()
{
  return MEMORY[0x270EF1248]();
}

uint64_t sub_250F0C160()
{
  return MEMORY[0x270EF12C8]();
}

uint64_t sub_250F0C170()
{
  return MEMORY[0x270EF1330]();
}

uint64_t sub_250F0C180()
{
  return MEMORY[0x270EF1350]();
}

uint64_t sub_250F0C190()
{
  return MEMORY[0x270EF1388]();
}

uint64_t sub_250F0C1A0()
{
  return MEMORY[0x270EF1428]();
}

uint64_t sub_250F0C1B0()
{
  return MEMORY[0x270EF1440]();
}

uint64_t sub_250F0C1C0()
{
  return MEMORY[0x270EF1608]();
}

uint64_t sub_250F0C1D0()
{
  return MEMORY[0x270F31020]();
}

uint64_t sub_250F0C1E0()
{
  return MEMORY[0x270F31028]();
}

uint64_t sub_250F0C1F0()
{
  return MEMORY[0x270F31030]();
}

uint64_t sub_250F0C200()
{
  return MEMORY[0x270F31038]();
}

uint64_t sub_250F0C210()
{
  return MEMORY[0x270F31078]();
}

uint64_t sub_250F0C220()
{
  return MEMORY[0x270F31080]();
}

uint64_t sub_250F0C230()
{
  return MEMORY[0x270F31088]();
}

uint64_t sub_250F0C240()
{
  return MEMORY[0x270F310B8]();
}

uint64_t sub_250F0C250()
{
  return MEMORY[0x270F310C0]();
}

uint64_t sub_250F0C260()
{
  return MEMORY[0x270F310C8]();
}

uint64_t sub_250F0C270()
{
  return MEMORY[0x270F310D0]();
}

uint64_t sub_250F0C280()
{
  return MEMORY[0x270F310D8]();
}

uint64_t sub_250F0C290()
{
  return MEMORY[0x270F310E0]();
}

uint64_t sub_250F0C2A0()
{
  return MEMORY[0x270F310F0]();
}

uint64_t sub_250F0C2B0()
{
  return MEMORY[0x270F310F8]();
}

uint64_t sub_250F0C2C0()
{
  return MEMORY[0x270F31108]();
}

uint64_t sub_250F0C2D0()
{
  return MEMORY[0x270F31110]();
}

uint64_t sub_250F0C2E0()
{
  return MEMORY[0x270F31180]();
}

uint64_t sub_250F0C2F0()
{
  return MEMORY[0x270F31188]();
}

uint64_t sub_250F0C300()
{
  return MEMORY[0x270F31190]();
}

uint64_t sub_250F0C310()
{
  return MEMORY[0x270F31198]();
}

uint64_t sub_250F0C320()
{
  return MEMORY[0x270F311A0]();
}

uint64_t sub_250F0C330()
{
  return MEMORY[0x270F311A8]();
}

uint64_t sub_250F0C340()
{
  return MEMORY[0x270F311C0]();
}

uint64_t sub_250F0C350()
{
  return MEMORY[0x270F311D8]();
}

uint64_t sub_250F0C360()
{
  return MEMORY[0x270F311E0]();
}

uint64_t sub_250F0C370()
{
  return MEMORY[0x270F311E8]();
}

uint64_t sub_250F0C380()
{
  return MEMORY[0x270F311F0]();
}

uint64_t sub_250F0C390()
{
  return MEMORY[0x270F311F8]();
}

uint64_t sub_250F0C3A0()
{
  return MEMORY[0x270F31208]();
}

uint64_t sub_250F0C3B0()
{
  return MEMORY[0x270F31210]();
}

uint64_t sub_250F0C3C0()
{
  return MEMORY[0x270F31220]();
}

uint64_t sub_250F0C3D0()
{
  return MEMORY[0x270F31250]();
}

uint64_t sub_250F0C3E0()
{
  return MEMORY[0x270F31258]();
}

uint64_t sub_250F0C3F0()
{
  return MEMORY[0x270F31260]();
}

uint64_t sub_250F0C400()
{
  return MEMORY[0x270F31268]();
}

uint64_t sub_250F0C410()
{
  return MEMORY[0x270F31270]();
}

uint64_t sub_250F0C420()
{
  return MEMORY[0x270F31278]();
}

uint64_t sub_250F0C430()
{
  return MEMORY[0x270F31280]();
}

uint64_t sub_250F0C440()
{
  return MEMORY[0x270F31288]();
}

uint64_t sub_250F0C450()
{
  return MEMORY[0x270F31290]();
}

uint64_t sub_250F0C460()
{
  return MEMORY[0x270F31298]();
}

uint64_t sub_250F0C470()
{
  return MEMORY[0x270F312A0]();
}

uint64_t sub_250F0C480()
{
  return MEMORY[0x270F312A8]();
}

uint64_t sub_250F0C490()
{
  return MEMORY[0x270F312B0]();
}

uint64_t sub_250F0C4A0()
{
  return MEMORY[0x270F312B8]();
}

uint64_t sub_250F0C4B0()
{
  return MEMORY[0x270F312C0]();
}

uint64_t sub_250F0C4C0()
{
  return MEMORY[0x270F312C8]();
}

uint64_t sub_250F0C4D0()
{
  return MEMORY[0x270F312D8]();
}

uint64_t sub_250F0C4E0()
{
  return MEMORY[0x270F312E0]();
}

uint64_t sub_250F0C4F0()
{
  return MEMORY[0x270F312E8]();
}

uint64_t sub_250F0C500()
{
  return MEMORY[0x270F312F0]();
}

uint64_t sub_250F0C510()
{
  return MEMORY[0x270F312F8]();
}

uint64_t sub_250F0C520()
{
  return MEMORY[0x270F31300]();
}

uint64_t sub_250F0C530()
{
  return MEMORY[0x270F31308]();
}

uint64_t sub_250F0C540()
{
  return MEMORY[0x270F31318]();
}

uint64_t sub_250F0C550()
{
  return MEMORY[0x270F31328]();
}

uint64_t sub_250F0C560()
{
  return MEMORY[0x270F31330]();
}

uint64_t sub_250F0C570()
{
  return MEMORY[0x270F31338]();
}

uint64_t sub_250F0C580()
{
  return MEMORY[0x270F31340]();
}

uint64_t sub_250F0C590()
{
  return MEMORY[0x270F31348]();
}

uint64_t sub_250F0C5A0()
{
  return MEMORY[0x270F31350]();
}

uint64_t sub_250F0C5B0()
{
  return MEMORY[0x270F31358]();
}

uint64_t sub_250F0C5C0()
{
  return MEMORY[0x270F31360]();
}

uint64_t sub_250F0C5D0()
{
  return MEMORY[0x270F31368]();
}

uint64_t sub_250F0C5E0()
{
  return MEMORY[0x270F31370]();
}

uint64_t sub_250F0C5F0()
{
  return MEMORY[0x270F31378]();
}

uint64_t sub_250F0C600()
{
  return MEMORY[0x270F31380]();
}

uint64_t sub_250F0C610()
{
  return MEMORY[0x270F31388]();
}

uint64_t sub_250F0C620()
{
  return MEMORY[0x270F31390]();
}

uint64_t sub_250F0C630()
{
  return MEMORY[0x270F31398]();
}

uint64_t sub_250F0C640()
{
  return MEMORY[0x270F313A0]();
}

uint64_t sub_250F0C650()
{
  return MEMORY[0x270F313A8]();
}

uint64_t sub_250F0C660()
{
  return MEMORY[0x270F313B8]();
}

uint64_t sub_250F0C670()
{
  return MEMORY[0x270F313C0]();
}

uint64_t sub_250F0C680()
{
  return MEMORY[0x270F313C8]();
}

uint64_t sub_250F0C690()
{
  return MEMORY[0x270F313D0]();
}

uint64_t sub_250F0C6A0()
{
  return MEMORY[0x270F313E0]();
}

uint64_t sub_250F0C6B0()
{
  return MEMORY[0x270F313E8]();
}

uint64_t sub_250F0C6C0()
{
  return MEMORY[0x270F313F0]();
}

uint64_t sub_250F0C6D0()
{
  return MEMORY[0x270F31408]();
}

uint64_t sub_250F0C6E0()
{
  return MEMORY[0x270F31410]();
}

uint64_t sub_250F0C6F0()
{
  return MEMORY[0x270F31420]();
}

uint64_t sub_250F0C710()
{
  return MEMORY[0x270F31440]();
}

uint64_t sub_250F0C720()
{
  return MEMORY[0x270F31458]();
}

uint64_t sub_250F0C730()
{
  return MEMORY[0x270F31460]();
}

uint64_t sub_250F0C740()
{
  return MEMORY[0x270F31478]();
}

uint64_t sub_250F0C750()
{
  return MEMORY[0x270F31480]();
}

uint64_t sub_250F0C760()
{
  return MEMORY[0x270F31488]();
}

uint64_t sub_250F0C770()
{
  return MEMORY[0x270F31490]();
}

uint64_t sub_250F0C780()
{
  return MEMORY[0x270F314A0]();
}

uint64_t sub_250F0C790()
{
  return MEMORY[0x270F314A8]();
}

uint64_t sub_250F0C7A0()
{
  return MEMORY[0x270F314B0]();
}

uint64_t sub_250F0C7B0()
{
  return MEMORY[0x270F314B8]();
}

uint64_t sub_250F0C7C0()
{
  return MEMORY[0x270F314D0]();
}

uint64_t sub_250F0C7D0()
{
  return MEMORY[0x270F314E0]();
}

uint64_t sub_250F0C7E0()
{
  return MEMORY[0x270F314E8]();
}

uint64_t sub_250F0C7F0()
{
  return MEMORY[0x270F314F0]();
}

uint64_t sub_250F0C800()
{
  return MEMORY[0x270F314F8]();
}

uint64_t sub_250F0C810()
{
  return MEMORY[0x270F31500]();
}

uint64_t sub_250F0C820()
{
  return MEMORY[0x270F31508]();
}

uint64_t sub_250F0C830()
{
  return MEMORY[0x270F31510]();
}

uint64_t sub_250F0C840()
{
  return MEMORY[0x270F31518]();
}

uint64_t sub_250F0C850()
{
  return MEMORY[0x270F31520]();
}

uint64_t sub_250F0C860()
{
  return MEMORY[0x270F31528]();
}

uint64_t sub_250F0C870()
{
  return MEMORY[0x270F31530]();
}

uint64_t sub_250F0C880()
{
  return MEMORY[0x270F31538]();
}

uint64_t sub_250F0C890()
{
  return MEMORY[0x270F31540]();
}

uint64_t sub_250F0C8A0()
{
  return MEMORY[0x270F31548]();
}

uint64_t sub_250F0C8B0()
{
  return MEMORY[0x270F31550]();
}

uint64_t sub_250F0C8C0()
{
  return MEMORY[0x270F31558]();
}

uint64_t sub_250F0C8D0()
{
  return MEMORY[0x270F31560]();
}

uint64_t sub_250F0C8E0()
{
  return MEMORY[0x270F31568]();
}

uint64_t sub_250F0C8F0()
{
  return MEMORY[0x270F31570]();
}

uint64_t sub_250F0C900()
{
  return MEMORY[0x270F31578]();
}

uint64_t sub_250F0C910()
{
  return MEMORY[0x270F31580]();
}

uint64_t sub_250F0C920()
{
  return MEMORY[0x270F31588]();
}

uint64_t sub_250F0C930()
{
  return MEMORY[0x270F31590]();
}

uint64_t sub_250F0C940()
{
  return MEMORY[0x270F31598]();
}

uint64_t sub_250F0C950()
{
  return MEMORY[0x270F315A0]();
}

uint64_t sub_250F0C960()
{
  return MEMORY[0x270F315A8]();
}

uint64_t sub_250F0C970()
{
  return MEMORY[0x270F315B0]();
}

uint64_t sub_250F0C980()
{
  return MEMORY[0x270F315B8]();
}

uint64_t sub_250F0C990()
{
  return MEMORY[0x270F315C8]();
}

uint64_t sub_250F0C9A0()
{
  return MEMORY[0x270F315D0]();
}

uint64_t sub_250F0C9B0()
{
  return MEMORY[0x270F315D8]();
}

uint64_t sub_250F0C9C0()
{
  return MEMORY[0x270F315E0]();
}

uint64_t sub_250F0C9D0()
{
  return MEMORY[0x270F315E8]();
}

uint64_t sub_250F0C9E0()
{
  return MEMORY[0x270F315F0]();
}

uint64_t sub_250F0C9F0()
{
  return MEMORY[0x270F315F8]();
}

uint64_t sub_250F0CA00()
{
  return MEMORY[0x270F31600]();
}

uint64_t sub_250F0CA10()
{
  return MEMORY[0x270F31608]();
}

uint64_t sub_250F0CA20()
{
  return MEMORY[0x270F31660]();
}

uint64_t sub_250F0CA30()
{
  return MEMORY[0x270F31668]();
}

uint64_t sub_250F0CA40()
{
  return MEMORY[0x270F31680]();
}

uint64_t sub_250F0CA50()
{
  return MEMORY[0x270F316C0]();
}

uint64_t sub_250F0CA60()
{
  return MEMORY[0x270F31728]();
}

uint64_t sub_250F0CA70()
{
  return MEMORY[0x270F31730]();
}

uint64_t sub_250F0CA80()
{
  return MEMORY[0x270F31738]();
}

uint64_t sub_250F0CA90()
{
  return MEMORY[0x270F31740]();
}

uint64_t sub_250F0CAA0()
{
  return MEMORY[0x270F31748]();
}

uint64_t sub_250F0CAB0()
{
  return MEMORY[0x270F31750]();
}

uint64_t sub_250F0CAC0()
{
  return MEMORY[0x270F31758]();
}

uint64_t sub_250F0CAD0()
{
  return MEMORY[0x270F31760]();
}

uint64_t sub_250F0CAE0()
{
  return MEMORY[0x270F31780]();
}

uint64_t sub_250F0CAF0()
{
  return MEMORY[0x270F31788]();
}

uint64_t sub_250F0CB00()
{
  return MEMORY[0x270F31798]();
}

uint64_t sub_250F0CB10()
{
  return MEMORY[0x270F317B8]();
}

uint64_t sub_250F0CB20()
{
  return MEMORY[0x270F317C0]();
}

uint64_t sub_250F0CB30()
{
  return MEMORY[0x270F317C8]();
}

uint64_t sub_250F0CB40()
{
  return MEMORY[0x270F317D0]();
}

uint64_t sub_250F0CB50()
{
  return MEMORY[0x270F317E8]();
}

uint64_t sub_250F0CB60()
{
  return MEMORY[0x270F317F8]();
}

uint64_t sub_250F0CB70()
{
  return MEMORY[0x270F31800]();
}

uint64_t sub_250F0CB80()
{
  return MEMORY[0x270F31808]();
}

uint64_t sub_250F0CB90()
{
  return MEMORY[0x270F31810]();
}

uint64_t sub_250F0CBA0()
{
  return MEMORY[0x270F31818]();
}

uint64_t sub_250F0CBB0()
{
  return MEMORY[0x270F31820]();
}

uint64_t sub_250F0CBC0()
{
  return MEMORY[0x270F31838]();
}

uint64_t sub_250F0CBD0()
{
  return MEMORY[0x270F31840]();
}

uint64_t sub_250F0CBE0()
{
  return MEMORY[0x270FA2CE8]();
}

uint64_t sub_250F0CBF0()
{
  return MEMORY[0x270FA2CF8]();
}

uint64_t sub_250F0CC00()
{
  return MEMORY[0x270FA2D00]();
}

uint64_t sub_250F0CC10()
{
  return MEMORY[0x270FA2D30]();
}

uint64_t sub_250F0CC20()
{
  return MEMORY[0x270FA2D58]();
}

uint64_t sub_250F0CC30()
{
  return MEMORY[0x270FA2D88]();
}

uint64_t sub_250F0CC40()
{
  return MEMORY[0x270FA2D90]();
}

uint64_t sub_250F0CC50()
{
  return MEMORY[0x270FA2DB0]();
}

uint64_t sub_250F0CC60()
{
  return MEMORY[0x270FA2DD0]();
}

uint64_t sub_250F0CC70()
{
  return MEMORY[0x270FA2DE0]();
}

uint64_t sub_250F0CC80()
{
  return MEMORY[0x270FA2DF0]();
}

uint64_t sub_250F0CC90()
{
  return MEMORY[0x270F31848]();
}

uint64_t sub_250F0CCA0()
{
  return MEMORY[0x270FA2E00]();
}

uint64_t sub_250F0CCB0()
{
  return MEMORY[0x270FA2E20]();
}

uint64_t sub_250F0CCC0()
{
  return MEMORY[0x270FA09A8]();
}

uint64_t sub_250F0CCD0()
{
  return MEMORY[0x270FA09E8]();
}

uint64_t sub_250F0CCE0()
{
  return MEMORY[0x270FA0A48]();
}

uint64_t sub_250F0CCF0()
{
  return MEMORY[0x270FA0BA8]();
}

uint64_t sub_250F0CD00()
{
  return MEMORY[0x270FA0BF0]();
}

uint64_t sub_250F0CD10()
{
  return MEMORY[0x270EF31A8]();
}

uint64_t sub_250F0CD20()
{
  return MEMORY[0x270EF31B0]();
}

uint64_t sub_250F0CD30()
{
  return MEMORY[0x270EF31B8]();
}

uint64_t sub_250F0CD40()
{
  return MEMORY[0x270EF31C0]();
}

uint64_t sub_250F0CD50()
{
  return MEMORY[0x270EF32F0]();
}

uint64_t sub_250F0CD60()
{
  return MEMORY[0x270EF32F8]();
}

uint64_t sub_250F0CD70()
{
  return MEMORY[0x270EF3300]();
}

uint64_t sub_250F0CD80()
{
  return MEMORY[0x270EF3310]();
}

uint64_t sub_250F0CD90()
{
  return MEMORY[0x270EF3318]();
}

uint64_t sub_250F0CDA0()
{
  return MEMORY[0x270EF3328]();
}

uint64_t sub_250F0CDB0()
{
  return MEMORY[0x270EF3330]();
}

uint64_t sub_250F0CDC0()
{
  return MEMORY[0x270EF3338]();
}

uint64_t sub_250F0CDD0()
{
  return MEMORY[0x270EF3340]();
}

uint64_t sub_250F0CDE0()
{
  return MEMORY[0x270EF3348]();
}

uint64_t sub_250F0CDF0()
{
  return MEMORY[0x270EF3350]();
}

uint64_t sub_250F0CE00()
{
  return MEMORY[0x270EF3358]();
}

uint64_t sub_250F0CE10()
{
  return MEMORY[0x270EF3360]();
}

uint64_t sub_250F0CE20()
{
  return MEMORY[0x270EF3368]();
}

uint64_t sub_250F0CE30()
{
  return MEMORY[0x270EF3370]();
}

uint64_t sub_250F0CE40()
{
  return MEMORY[0x270EF3378]();
}

uint64_t sub_250F0CE50()
{
  return MEMORY[0x270EF3380]();
}

uint64_t sub_250F0CE60()
{
  return MEMORY[0x270EF3388]();
}

uint64_t sub_250F0CE70()
{
  return MEMORY[0x270EF3390]();
}

uint64_t sub_250F0CE80()
{
  return MEMORY[0x270EF1818]();
}

uint64_t sub_250F0CE90()
{
  return MEMORY[0x270EF1840]();
}

uint64_t sub_250F0CEA0()
{
  return MEMORY[0x270F9D0B8]();
}

uint64_t sub_250F0CEB0()
{
  return MEMORY[0x270EF3398]();
}

uint64_t sub_250F0CEC0()
{
  return MEMORY[0x270F9D318]();
}

uint64_t sub_250F0CED0()
{
  return MEMORY[0x270F9D478]();
}

uint64_t sub_250F0CEE0()
{
  return MEMORY[0x270F9D488]();
}

uint64_t sub_250F0CEF0()
{
  return MEMORY[0x270F9D490]();
}

uint64_t sub_250F0CF00()
{
  return MEMORY[0x270F9D498]();
}

uint64_t sub_250F0CF10()
{
  return MEMORY[0x270EF33A0]();
}

uint64_t sub_250F0CF20()
{
  return MEMORY[0x270F9D550]();
}

uint64_t sub_250F0CF30()
{
  return MEMORY[0x270F9D560]();
}

uint64_t sub_250F0CF40()
{
  return MEMORY[0x270F9D598]();
}

uint64_t sub_250F0CF50()
{
  return MEMORY[0x270EF19B0]();
}

uint64_t sub_250F0CF60()
{
  return MEMORY[0x270EF19C8]();
}

uint64_t sub_250F0CF70()
{
  return MEMORY[0x270EF19E0]();
}

uint64_t sub_250F0CF80()
{
  return MEMORY[0x270EF19E8]();
}

uint64_t sub_250F0CF90()
{
  return MEMORY[0x270F9D5E0]();
}

uint64_t sub_250F0CFA0()
{
  return MEMORY[0x270F9D708]();
}

uint64_t sub_250F0CFB0()
{
  return MEMORY[0x270F9D798]();
}

uint64_t sub_250F0CFC0()
{
  return MEMORY[0x270F9D7E0]();
}

uint64_t sub_250F0CFD0()
{
  return MEMORY[0x270F9D8F8]();
}

uint64_t sub_250F0CFE0()
{
  return MEMORY[0x270F9D948]();
}

uint64_t sub_250F0CFF0()
{
  return MEMORY[0x270F9D968]();
}

uint64_t sub_250F0D000()
{
  return MEMORY[0x270F9D9E0]();
}

uint64_t sub_250F0D010()
{
  return MEMORY[0x270F9DA70]();
}

uint64_t sub_250F0D020()
{
  return MEMORY[0x270F9DBA0]();
}

uint64_t sub_250F0D030()
{
  return MEMORY[0x270EF1B88]();
}

uint64_t sub_250F0D040()
{
  return MEMORY[0x270EF1BB8]();
}

uint64_t sub_250F0D050()
{
  return MEMORY[0x270F9DBB8]();
}

uint64_t sub_250F0D060()
{
  return MEMORY[0x270F9DBF0]();
}

uint64_t sub_250F0D070()
{
  return MEMORY[0x270F9DC10]();
}

uint64_t sub_250F0D080()
{
  return MEMORY[0x270F9DC20]();
}

uint64_t sub_250F0D090()
{
  return MEMORY[0x270F9DC50]();
}

uint64_t sub_250F0D0A0()
{
  return MEMORY[0x270F9DC60]();
}

uint64_t sub_250F0D0B0()
{
  return MEMORY[0x270F9DC88]();
}

uint64_t sub_250F0D0C0()
{
  return MEMORY[0x270F9DCD8]();
}

uint64_t sub_250F0D0D0()
{
  return MEMORY[0x270EF1C98]();
}

uint64_t sub_250F0D0E0()
{
  return MEMORY[0x270EF1CC0]();
}

uint64_t sub_250F0D0F0()
{
  return MEMORY[0x270F9DEB0]();
}

uint64_t sub_250F0D100()
{
  return MEMORY[0x270F9DEF0]();
}

uint64_t sub_250F0D110()
{
  return MEMORY[0x270F9DF80]();
}

uint64_t sub_250F0D120()
{
  return MEMORY[0x270F9E080]();
}

uint64_t sub_250F0D130()
{
  return MEMORY[0x270F9E0A0]();
}

uint64_t sub_250F0D140()
{
  return MEMORY[0x270F9E0C8]();
}

uint64_t sub_250F0D150()
{
  return MEMORY[0x270F9E0D8]();
}

uint64_t sub_250F0D160()
{
  return MEMORY[0x270F9E0E0]();
}

uint64_t sub_250F0D170()
{
  return MEMORY[0x270F9E1E0]();
}

uint64_t sub_250F0D180()
{
  return MEMORY[0x270F9E330]();
}

uint64_t sub_250F0D190()
{
  return MEMORY[0x270EF1DB8]();
}

uint64_t sub_250F0D1A0()
{
  return MEMORY[0x270FA2E40]();
}

uint64_t sub_250F0D1B0()
{
  return MEMORY[0x270FA2E60]();
}

uint64_t sub_250F0D1C0()
{
  return MEMORY[0x270FA2E70]();
}

uint64_t sub_250F0D1D0()
{
  return MEMORY[0x270FA2E80]();
}

uint64_t sub_250F0D1E0()
{
  return MEMORY[0x270EF33F8]();
}

uint64_t sub_250F0D1F0()
{
  return MEMORY[0x270F31948]();
}

uint64_t sub_250F0D200()
{
  return MEMORY[0x270F31950]();
}

uint64_t sub_250F0D210()
{
  return MEMORY[0x270F31868]();
}

uint64_t sub_250F0D220()
{
  return MEMORY[0x270F31888]();
}

uint64_t sub_250F0D230()
{
  return MEMORY[0x270F31890]();
}

uint64_t sub_250F0D240()
{
  return MEMORY[0x270FA0DA0]();
}

uint64_t sub_250F0D250()
{
  return MEMORY[0x270FA2E90]();
}

uint64_t sub_250F0D260()
{
  return MEMORY[0x270FA2EA8]();
}

uint64_t sub_250F0D270()
{
  return MEMORY[0x270F31898]();
}

uint64_t sub_250F0D280()
{
  return MEMORY[0x270EF3588]();
}

uint64_t sub_250F0D290()
{
  return MEMORY[0x270FA1170]();
}

uint64_t sub_250F0D2A0()
{
  return MEMORY[0x270FA1180]();
}

uint64_t sub_250F0D2B0()
{
  return MEMORY[0x270FA2EC8]();
}

uint64_t sub_250F0D2C0()
{
  return MEMORY[0x270F318A0]();
}

uint64_t sub_250F0D2D0()
{
  return MEMORY[0x270F9E3C0]();
}

uint64_t sub_250F0D2E0()
{
  return MEMORY[0x270F9E518]();
}

uint64_t sub_250F0D2F0()
{
  return MEMORY[0x270EF23B8]();
}

uint64_t sub_250F0D300()
{
  return MEMORY[0x270F9E530]();
}

uint64_t sub_250F0D310()
{
  return MEMORY[0x270F9E560]();
}

uint64_t sub_250F0D320()
{
  return MEMORY[0x270F9E570]();
}

uint64_t sub_250F0D330()
{
  return MEMORY[0x270F9E578]();
}

uint64_t sub_250F0D340()
{
  return MEMORY[0x270F9E670]();
}

uint64_t sub_250F0D350()
{
  return MEMORY[0x270F9E730]();
}

uint64_t sub_250F0D360()
{
  return MEMORY[0x270F9E748]();
}

uint64_t sub_250F0D370()
{
  return MEMORY[0x270F9E750]();
}

uint64_t sub_250F0D390()
{
  return MEMORY[0x270F9E7E8]();
}

uint64_t sub_250F0D3A0()
{
  return MEMORY[0x270F9E7F0]();
}

uint64_t sub_250F0D3B0()
{
  return MEMORY[0x270F9E800]();
}

uint64_t sub_250F0D3C0()
{
  return MEMORY[0x270F9E818]();
}

uint64_t sub_250F0D3D0()
{
  return MEMORY[0x270F9E848]();
}

uint64_t sub_250F0D3E0()
{
  return MEMORY[0x270F9E858]();
}

uint64_t sub_250F0D3F0()
{
  return MEMORY[0x270F9E870]();
}

uint64_t sub_250F0D400()
{
  return MEMORY[0x270F9E8C0]();
}

uint64_t sub_250F0D410()
{
  return MEMORY[0x270F9E8C8]();
}

uint64_t sub_250F0D420()
{
  return MEMORY[0x270F9E8E8]();
}

uint64_t sub_250F0D430()
{
  return MEMORY[0x270F9E958]();
}

uint64_t sub_250F0D440()
{
  return MEMORY[0x270F9E960]();
}

uint64_t sub_250F0D450()
{
  return MEMORY[0x270F9E968]();
}

uint64_t sub_250F0D460()
{
  return MEMORY[0x270F9E970]();
}

uint64_t sub_250F0D470()
{
  return MEMORY[0x270F9E978]();
}

uint64_t sub_250F0D480()
{
  return MEMORY[0x270F9E9A8]();
}

uint64_t sub_250F0D490()
{
  return MEMORY[0x270F9E9B0]();
}

uint64_t sub_250F0D4A0()
{
  return MEMORY[0x270F9EA40]();
}

uint64_t sub_250F0D4B0()
{
  return MEMORY[0x270F9EA48]();
}

uint64_t sub_250F0D4C0()
{
  return MEMORY[0x270F9EA58]();
}

uint64_t sub_250F0D4D0()
{
  return MEMORY[0x270F9EAE0]();
}

uint64_t sub_250F0D4E0()
{
  return MEMORY[0x270F9EB28]();
}

uint64_t sub_250F0D4F0()
{
  return MEMORY[0x270F9EB98]();
}

uint64_t sub_250F0D500()
{
  return MEMORY[0x270F9EBC0]();
}

uint64_t sub_250F0D510()
{
  return MEMORY[0x270F9EBE0]();
}

uint64_t sub_250F0D520()
{
  return MEMORY[0x270F9EC08]();
}

uint64_t sub_250F0D530()
{
  return MEMORY[0x270F9EC10]();
}

uint64_t sub_250F0D540()
{
  return MEMORY[0x270F9ED00]();
}

uint64_t sub_250F0D550()
{
  return MEMORY[0x270F9ED68]();
}

uint64_t sub_250F0D560()
{
  return MEMORY[0x270F9ED70]();
}

uint64_t sub_250F0D570()
{
  return MEMORY[0x270F9ED90]();
}

uint64_t sub_250F0D580()
{
  return MEMORY[0x270F9EFE8]();
}

uint64_t sub_250F0D590()
{
  return MEMORY[0x270F9EFF0]();
}

uint64_t sub_250F0D5A0()
{
  return MEMORY[0x270F9F000]();
}

uint64_t sub_250F0D5B0()
{
  return MEMORY[0x270F9F080]();
}

uint64_t sub_250F0D5C0()
{
  return MEMORY[0x270F9F098]();
}

uint64_t sub_250F0D5D0()
{
  return MEMORY[0x270F9F0A0]();
}

uint64_t sub_250F0D5E0()
{
  return MEMORY[0x270F9F0B0]();
}

uint64_t sub_250F0D5F0()
{
  return MEMORY[0x270F9F0B8]();
}

uint64_t sub_250F0D600()
{
  return MEMORY[0x270F9F0C0]();
}

uint64_t sub_250F0D610()
{
  return MEMORY[0x270F9F0D0]();
}

uint64_t sub_250F0D630()
{
  return MEMORY[0x270F9F230]();
}

uint64_t sub_250F0D640()
{
  return MEMORY[0x270F9F4C8]();
}

uint64_t sub_250F0D650()
{
  return MEMORY[0x270F9F4E0]();
}

uint64_t sub_250F0D660()
{
  return MEMORY[0x270F9F4F8]();
}

uint64_t sub_250F0D670()
{
  return MEMORY[0x270F9F7C0]();
}

uint64_t sub_250F0D680()
{
  return MEMORY[0x270F9F7D0]();
}

uint64_t sub_250F0D690()
{
  return MEMORY[0x270F9F918]();
}

uint64_t sub_250F0D6A0()
{
  return MEMORY[0x270F9FA28]();
}

uint64_t sub_250F0D6B0()
{
  return MEMORY[0x270F9FB10]();
}

uint64_t sub_250F0D6C0()
{
  return MEMORY[0x270F9FB18]();
}

uint64_t sub_250F0D6D0()
{
  return MEMORY[0x270F9FB30]();
}

uint64_t sub_250F0D6E0()
{
  return MEMORY[0x270F9FB38]();
}

uint64_t sub_250F0D6F0()
{
  return MEMORY[0x270F9FB40]();
}

uint64_t sub_250F0D700()
{
  return MEMORY[0x270F9FB48]();
}

uint64_t sub_250F0D710()
{
  return MEMORY[0x270F9FC48]();
}

uint64_t sub_250F0D720()
{
  return MEMORY[0x270F9FC60]();
}

uint64_t sub_250F0D730()
{
  return MEMORY[0x270F9FC90]();
}

uint64_t sub_250F0D740()
{
  return MEMORY[0x270F9FCF8]();
}

uint64_t sub_250F0D750()
{
  return MEMORY[0x270F9FD08]();
}

uint64_t sub_250F0D760()
{
  return MEMORY[0x270FA0010]();
}

uint64_t sub_250F0D770()
{
  return MEMORY[0x270FA0030]();
}

uint64_t sub_250F0D780()
{
  return MEMORY[0x270FA0040]();
}

uint64_t sub_250F0D790()
{
  return MEMORY[0x270FA0058]();
}

uint64_t sub_250F0D7A0()
{
  return MEMORY[0x270FA00C0]();
}

uint64_t sub_250F0D7B0()
{
  return MEMORY[0x270FA0128]();
}

uint64_t HDActivityCacheEntityPredicateForCachesInDateComponentsRange()
{
  return MEMORY[0x270F31960]();
}

uint64_t HDAnalyticsCountOfSleepDaysWithStandHoursPriorToDate()
{
  return MEMORY[0x270F31968]();
}

uint64_t HDDataEntityPredicateForObjectsFromAppleWatchSources()
{
  return MEMORY[0x270F31998]();
}

uint64_t HDDataEntityPredicateForSourceEntitySet()
{
  return MEMORY[0x270F319B0]();
}

uint64_t HDIsUnitTesting()
{
  return MEMORY[0x270F31A40]();
}

uint64_t HDSampleEntityPredicateForDataType()
{
  return MEMORY[0x270F319F8]();
}

uint64_t HDSampleEntityPredicateForDateInterval()
{
  return MEMORY[0x270F31A08]();
}

uint64_t HDSampleEntityPredicateForStartDate()
{
  return MEMORY[0x270F31A18]();
}

uint64_t HKAnalyticsPropertyValueForBiologicalSex()
{
  return MEMORY[0x270EF35F8]();
}

uint64_t HKCreateSerialDispatchQueue()
{
  return MEMORY[0x270EF3660]();
}

uint64_t HKDiagnosticStringFromUUID()
{
  return MEMORY[0x270EF36B0]();
}

uint64_t HKIsFitnessTrackingEnabled()
{
  return MEMORY[0x270EF3728]();
}

uint64_t HKRollingBaselineConfigurationForQuantityType()
{
  return MEMORY[0x270EF37F8]();
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return (void *)MEMORY[0x270ED7CD8](aBlock);
}

void _Block_release(const void *aBlock)
{
}

uint64_t _HKBackgroundAndSedentaryPrivateHeartRateContexts()
{
  return MEMORY[0x270EF3918]();
}

uint64_t _HKCategoryValueSleepAnalysisIsAsleep()
{
  return MEMORY[0x270EF3940]();
}

uint64_t _HKStatisticsOptionBaselineRelativeQuantities()
{
  return MEMORY[0x270EF39C0]();
}

uint64_t _HKStatisticsOptionPercentile()
{
  return MEMORY[0x270EF39C8]();
}

double __exp10(double a1)
{
  MEMORY[0x270ED7DC8](a1);
  return result;
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

void _os_signpost_emit_with_name_impl(void *dso, os_log_t log, os_signpost_type_t type, os_signpost_id_t spid, const char *name, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return MEMORY[0x270FA0158]();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return MEMORY[0x270FA0160]();
}

void bzero(void *a1, size_t a2)
{
}

long double cos(long double __x)
{
  MEMORY[0x270ED9128](__x);
  return result;
}

void free(void *a1)
{
}

void *__cdecl malloc(size_t __size)
{
  return (void *)MEMORY[0x270EDA328](__size);
}

size_t malloc_size(const void *ptr)
{
  return MEMORY[0x270EDA378](ptr);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return (void *)MEMORY[0x270EDA470](__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return (void *)MEMORY[0x270EDA488](__dst, __src, __len);
}

id objc_alloc(Class a1)
{
  return (id)MEMORY[0x270F9A528](a1);
}

id objc_allocWithZone(Class a1)
{
  return (id)MEMORY[0x270F9A538](a1);
}

id objc_autorelease(id a1)
{
  return (id)MEMORY[0x270F9A568](a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A590](a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6D0](a1, a2);
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return (id)MEMORY[0x270F9A6E8](a1, a2);
}

uint64_t self
{
  return MEMORY[0x270F9A730]();
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return (id)MEMORY[0x270F9A870](a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return (id)MEMORY[0x270F9A890](a1);
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return MEMORY[0x270EDA9D0](oslog, type);
}

void os_unfair_lock_lock(os_unfair_lock_t lock)
{
}

void os_unfair_lock_unlock(os_unfair_lock_t lock)
{
}

long double pow(long double __x, long double __y)
{
  MEMORY[0x270EDACF8](__x, __y);
  return result;
}

uint64_t swift_allocBox()
{
  return MEMORY[0x270FA0180]();
}

uint64_t swift_allocError()
{
  return MEMORY[0x270FA0190]();
}

uint64_t swift_allocObject()
{
  return MEMORY[0x270FA0198]();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return MEMORY[0x270FA01A0]();
}

uint64_t swift_arrayDestroy()
{
  return MEMORY[0x270FA01C0]();
}

uint64_t swift_arrayInitWithCopy()
{
  return MEMORY[0x270FA01C8]();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return MEMORY[0x270FA01D0]();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return MEMORY[0x270FA01D8]();
}

uint64_t swift_beginAccess()
{
  return MEMORY[0x270FA01E0]();
}

uint64_t swift_bridgeObjectRelease()
{
  return MEMORY[0x270FA01E8]();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return MEMORY[0x270FA01F0]();
}

uint64_t swift_bridgeObjectRetain()
{
  return MEMORY[0x270FA01F8]();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return MEMORY[0x270FA0200]();
}

uint64_t swift_checkMetadataState()
{
  return MEMORY[0x270FA0208]();
}

uint64_t swift_conformsToProtocol2()
{
  return MEMORY[0x270FA0218]();
}

uint64_t swift_deallocClassInstance()
{
  return MEMORY[0x270FA0228]();
}

uint64_t swift_dynamicCast()
{
  return MEMORY[0x270FA0260]();
}

uint64_t swift_dynamicCastClass()
{
  return MEMORY[0x270FA0268]();
}

uint64_t swift_dynamicCastMetatype()
{
  return MEMORY[0x270FA0278]();
}

uint64_t swift_dynamicCastObjCClass()
{
  return MEMORY[0x270FA0288]();
}

uint64_t swift_endAccess()
{
  return MEMORY[0x270FA02C0]();
}

uint64_t swift_errorRelease()
{
  return MEMORY[0x270FA02C8]();
}

uint64_t swift_errorRetain()
{
  return MEMORY[0x270FA02D0]();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return MEMORY[0x270FA02F8]();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return MEMORY[0x270FA0300]();
}

uint64_t swift_getAtKeyPath()
{
  return MEMORY[0x270FA0310]();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return MEMORY[0x270FA0338]();
}

uint64_t swift_getExistentialMetatypeMetadata()
{
  return MEMORY[0x270FA0350]();
}

uint64_t swift_getExistentialTypeMetadata()
{
  return MEMORY[0x270FA0358]();
}

uint64_t swift_getForeignTypeMetadata()
{
  return MEMORY[0x270FA0370]();
}

uint64_t swift_getFunctionTypeMetadata0()
{
  return MEMORY[0x270FA0388]();
}

uint64_t swift_getGenericMetadata()
{
  return MEMORY[0x270FA03B0]();
}

uint64_t swift_getKeyPath()
{
  return MEMORY[0x270FA03B8]();
}

uint64_t swift_getMetatypeMetadata()
{
  return MEMORY[0x270FA03C8]();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return MEMORY[0x270FA03D0]();
}

uint64_t swift_getObjCClassMetadata()
{
  return MEMORY[0x270FA03E0]();
}

uint64_t swift_getObjectType()
{
  return MEMORY[0x270FA03E8]();
}

uint64_t swift_getOpaqueTypeConformance2()
{
  return MEMORY[0x270FA03F0]();
}

uint64_t swift_getOpaqueTypeMetadata2()
{
  return MEMORY[0x270FA03F8]();
}

uint64_t swift_getSingletonMetadata()
{
  return MEMORY[0x270FA0400]();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return MEMORY[0x270FA0428]();
}

uint64_t swift_getTupleTypeMetadata3()
{
  return MEMORY[0x270FA0430]();
}

uint64_t swift_getWitnessTable()
{
  return MEMORY[0x270FA0450]();
}

uint64_t swift_initClassMetadata2()
{
  return MEMORY[0x270FA0458]();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return MEMORY[0x270FA0470]();
}

uint64_t swift_initStackObject()
{
  return MEMORY[0x270FA0478]();
}

uint64_t swift_initStructMetadata()
{
  return MEMORY[0x270FA0488]();
}

uint64_t swift_isEscapingClosureAtFileLocation()
{
  return MEMORY[0x270FA0498]();
}

uint64_t swift_isUniquelyReferenced_nonNull_bridgeObject()
{
  return MEMORY[0x270FA04C0]();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return MEMORY[0x270FA04C8]();
}

uint64_t swift_makeBoxUnique()
{
  return MEMORY[0x270FA04D8]();
}

uint64_t swift_projectBox()
{
  return MEMORY[0x270FA04F8]();
}

uint64_t swift_release()
{
  return MEMORY[0x270FA0520]();
}

uint64_t swift_release_n()
{
  return MEMORY[0x270FA0528]();
}

uint64_t swift_retain()
{
  return MEMORY[0x270FA0530]();
}

uint64_t swift_retain_n()
{
  return MEMORY[0x270FA0538]();
}

uint64_t swift_setDeallocating()
{
  return MEMORY[0x270FA0550]();
}

uint64_t swift_slowAlloc()
{
  return MEMORY[0x270FA0558]();
}

uint64_t swift_slowDealloc()
{
  return MEMORY[0x270FA0560]();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return MEMORY[0x270FA0568]();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return MEMORY[0x270FA0578]();
}

uint64_t swift_unknownObjectRelease()
{
  return MEMORY[0x270FA0590]();
}

uint64_t swift_unknownObjectRelease_n()
{
  return MEMORY[0x270FA0598]();
}

uint64_t swift_unknownObjectRetain()
{
  return MEMORY[0x270FA05A0]();
}

uint64_t swift_unknownObjectRetain_n()
{
  return MEMORY[0x270FA05A8]();
}

uint64_t swift_unknownObjectWeakAssign()
{
  return MEMORY[0x270FA05D0]();
}

uint64_t swift_unknownObjectWeakDestroy()
{
  return MEMORY[0x270FA05E8]();
}

uint64_t swift_unknownObjectWeakInit()
{
  return MEMORY[0x270FA05F0]();
}

uint64_t swift_unknownObjectWeakLoadStrong()
{
  return MEMORY[0x270FA05F8]();
}

uint64_t swift_updateClassMetadata2()
{
  return MEMORY[0x270FA0628]();
}

uint64_t swift_willThrow()
{
  return MEMORY[0x270FA0670]();
}

uint64_t swift_willThrowTypedImpl()
{
  return MEMORY[0x270FA0678]();
}